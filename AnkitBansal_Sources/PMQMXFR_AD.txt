// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMQMXFR
// ?Date: 14.08.2025 Time: 03:43:47
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Rtv HPB fields        RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1855470;
PARAMETER(PAR.Warehouse_Code);
PARAMETER(LCL.Production_Warehouse_Code);
PARAMETER(LCL.Warehouse_Location);
PARAMETER(LCL.WHS_Req_Meter_Reading_Shp);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Production Warehouse Code is Not Blanks
IF LCL.Production_Warehouse_Code <> *BLANK;

EXECUTE FUNCTION(Rtv Acct Co          RT) TYPE(RTVOBJ) FILE(CAADREP)            AC1802492;
PARAMETER(LCL.Production_Warehouse_Code);
PARAMETER(LCL.Accounting_Company);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv Acct Co          RT) TYPE(RTVOBJ) FILE(CAADREP)            AC1802492;
PARAMETER(PAR.Warehouse_Code);
PARAMETER(LCL.Accounting_Company);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

// WRK.Item Code 5.0 = PAR.Item Code
WRK.Item_Code_5_0 = PAR.Item_Code;

// WRK.Text USR 5 = CVTVAR(WRK.Item Code 5.0)
WRK.Text_USR_5 = CVTVAR(WRK.Item_Code_5_0);

// LCL.COA OMS Item Code = WRK.Text USR 5
LCL.COA_OMS_Item_Code = WRK.Text_USR_5;

//?RMC 5/17 was using accounting company
//?R6965  RMC 8/17 was hard coded to 361. now get from comp value
EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1394480;
PARAMETER(PAR.Company_Number);
PARAMETER('HPBPLT');
PARAMETER(LCL.Company_Number_041405);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV ULSD Company      RT) TYPE(RTVOBJ) FILE(PMCAREP)           AC1961872;
PARAMETER(LCL.Company_Number_041405);
PARAMETER(LCL.COA_Bio_diesel_Fuel_Code);
PARAMETER(PAR.COA_ULSD_Company_#);
PARAMETER(LCL.COA_OMS_Item_Code);
{
 //?USER: Process Data record

 // PAR.COA ULSD Company # = DB1.COA ULSD Company #
 PAR.COA_ULSD_Company_# = DB1.COA_ULSD_Company_#;

 QUIT;

}


EXECUTE FUNCTION(RTV for Ship process  RT) TYPE(RTVOBJ) FILE(PMCCCPP)           AC1858687;
PARAMETER(LCL.Accounting_Company);
PARAMETER(PAR.COA_ULSD_Company_#);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(PAR.COA_Bio_diesel_Fuel_Code);
PARAMETER(NLL.COA_Batch_Production_Date);
PARAMETER(NLL.COA_Temperature_Loadout);
PARAMETER(PAR.COA_Last_RIN_EEEEEEEE);
PARAMETER(LCL.RFS_Fuel_Code);
PARAMETER(PAR.COA_RIN_Equivalence_Valu);
PARAMETER(LCL.COA_BH_RFS_Version_Nbr);
PARAMETER(PAR.COA_BH_Equiv_Value_f_SEP);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?* Create RIN if it isnt already there. if load was shipped/unshipped/
//?* but nothing was changed, it will exist          4/11/08
EXECUTE FUNCTION(Rtv Val RIN f/OrdManf RT) TYPE(RTVOBJ) FILE(PMDACPP)           AC1877200;
PARAMETER(LCL.Accounting_Company);
PARAMETER(PAR.COA_ULSD_Company_#);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.Case_Sequence_Number);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Initialize routine

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 CASE;

 // IF DB1.COA Retired RIN Reason Cd is *Blank
 IF DB1.COA_Retired_RIN_Reason_Cd = *BLANK;

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 QUIT;

 ENDIF;

 EXECUTE FUNCTION(RTV Ship To Whse-HPB  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1962118;
 PARAMETER(DB1.COA_Shipping_Company);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Customer_Purchase_Order_#);
 PARAMETER(LCL.HPB_Ship_to_Warehouse);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Customer Purchase Order # NE DB1.COA RIN Customer PO#
 IF LCL.Customer_Purchase_Order_# <> DB1.COA_RIN_Customer_PO#;

 // OR LCL.Ship To Warehouse NE DB1.COA Ship To Warehouse
 OR LCL.Ship_To_Warehouse <> DB1.COA_Ship_To_Warehouse;

 EXECUTE FUNCTION(Chg RIN PO/Ship to whCH) TYPE(CHGOBJ) FILE(PMDACPP)            AC1973545;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(DB1.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(LCL.COA_Ship_To_Warehouse);
 PARAMETER(LCL.COA_RIN_Customer_PO#);
 PARAMETER(DB1.COA_BHR_Equiv_Value);
 PARAMETER(DB1.COA_BHR_RINs_to_Sell_Sep);
 PARAMETER(DB1.COA_Unassgnd_Txfrd_RINS);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

}


//?****** Create RIN Processing            *******
CASE;

// IF LCL.Record Found USR is Record Not Found
IF LCL.Record_Found_USR = 'N';

//?For Sales from an internal warehouse - create SEL Rin w/acctng co
CASE;

// IF LCL.Warehouse Location is Internal (Plant)
IF LCL.Warehouse_Location = 'I';

EXECUTE FUNCTION(RTV all used flds/item RT) TYPE(RTVOBJ) FILE(PMCAREP)          AC1968337;
PARAMETER(LCL.Accounting_Company);
PARAMETER(PAR.COA_Bio_diesel_Fuel_Code);
PARAMETER(NLL.COA_Bio_dsl_Fuel_Cd_Descr);
PARAMETER(PAR.COA_Producer_Regist_Nbr);
PARAMETER(PAR.COA_Employer_ID);
PARAMETER(NLL.COA_Sold_From_Address);
PARAMETER(NLL.COA_Sold_From_Name);
PARAMETER(PAR.COA_ULSD_Company_#);
PARAMETER(PAR.COA_ULSD_Facility_#);
PARAMETER(PAR.COA_RIN_Equivalence_Valu);
PARAMETER(PAR.COA_RIN_Renewable_Enrgy);
PARAMETER(PAR.COA_RIN_Type_Flag);
PARAMETER(NLL.COA_Density_Loadout);
PARAMETER(NLL.COA_Density_Reference);
PARAMETER(NLL.COA_Temperature_Loadout);
PARAMETER(NLL.COA_Temperature_Ref);
PARAMETER(NLL.COA_BOL_Percent);
PARAMETER(NLL.COA_Sale_Location);
PARAMETER(NLL.COA_Active_Whse_Tank_1);
PARAMETER(NLL.COA_Active_Whse_Tank_2);
PARAMETER(NLL.COA_Active_Whse_Tank_3);
PARAMETER(NLL.COA_Active_Whse_Tank_4);
PARAMETER(NLL.COA_Active_Whse_Tank_5);
PARAMETER(NLL.COA_Active_Whse_Tank_6);
PARAMETER(PAR.COA_Temp_Conv_Factor_1);
PARAMETER(PAR.Operation_Factor_1);
PARAMETER(PAR.COA_Temp_Conv_Factor_2);
PARAMETER(PAR.Operation_Factor_2);
PARAMETER(NLL.COA_RFS_Renew_Fuel_Code);
PARAMETER(NLL.COA_RFS_Rnwbl_Feedstock);
PARAMETER(LCL.COA_OMS_Item_Code);
PARAMETER(LCL.Sold_To_Customer_hpb_biod);
PARAMETER(NLL.Record_Status);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Load ID            RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1384375;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Load_ID);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Ship To Whse-HPB  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1962118;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Customer_Purchase_Order_#);
PARAMETER(LCL.HPB_Ship_to_Warehouse);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV HPB Equiv only   RT) TYPE(RTVOBJ) FILE(PMAMREP)            AC2031845;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.OHE_HPB_RIN_Equiv_Value);
PARAMETER(LCL.OHE_HPB_RIN_Price);
PARAMETER(LCL.OHE_Override_Type_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Prod Temp-HPB     RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1877050;
PARAMETER(LCL.Load_ID);
PARAMETER(LCL.Product_Temperature);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// PAR.COA Temperature Loadout = LCL.Product Temperature
PAR.COA_Temperature_Loadout = LCL.Product_Temperature;

// PAR.COA BHR Equiv Value = CVTVAR(PAR.COA RIN Equivalence Valu)
PAR.COA_BHR_Equiv_Value = CVTVAR(PAR.COA_RIN_Equivalence_Valu);

//?******
//?FP1110 7/17/08 Generating the RIN has moved to the Invoice Process:
//?  So dont output par.RIN nbr, RIN Vol in Gallons or SSSSSSSS,EEEEEEEE
//?******
//?******  Create Batch RIN Record  -SEL for HP Energy 361 ***
EXECUTE FUNCTION(Rtv HPB Cust Fields   RT) TYPE(RTVOBJ) FILE(PDNIREP)           AC1858717;
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Sold_To_Customer_hpb_biod);
PARAMETER(LCL.HPB_Employer_ID_#);
PARAMETER(LCL.HPB_ULSD_Company_#);
PARAMETER(LCL.HPB_ULSD_Facility_ID);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(LCL.Sold_To_Customer_hpb_biod);
PARAMETER(LCL.Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Last Seq for Batch RT) TYPE(RTVOBJ) FILE(PMDACPP)          AC1858715;
PARAMETER(LCL.Accounting_Company);
PARAMETER(PAR.COA_ULSD_Company_#);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(LCL.COA_Batch_Header_RIN_Seq);
{
 //?USER: Processing if Data record not found

 // PAR.COA Batch Header RIN Seq = CON.*ZERO
 PAR.COA_Batch_Header_RIN_Seq = 0;

 //?USER: Process Data record

 // PAR.COA Batch Header RIN Seq = DB1.COA Batch Header RIN Seq
 PAR.COA_Batch_Header_RIN_Seq = DB1.COA_Batch_Header_RIN_Seq;

 QUIT;

}


// LCL.COA Batch Header RIN Seq = LCL.COA Batch Header RIN Seq + CON.1
LCL.COA_Batch_Header_RIN_Seq = LCL.COA_Batch_Header_RIN_Seq + 1;

// Compute:EMTS Batch Nmbr
LCL.COA_EMTS_Batch_Nbr = ( PAR.COA_Batch_Number * 1000 ) + LCL.COA_Batch_Header_RIN_Seq;

// LCL.RFS Transaction Type = CND.Sold or Delivered
LCL.RFS_Transaction_Type = 'SEL';

EXECUTE FUNCTION(Rtv Trans Rsn Dft,Dsc RT) TYPE(RTVOBJ) FILE(PNGGREP)           AC1990859;
PARAMETER(LCL.RFS_Transaction_Type);
PARAMETER(LCL.RFS_Trans_Reason_Code);
PARAMETER(NLL.RFS_Trans_Reason_Desc);
PARAMETER('Y');
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.RFS Trans Reason Dft EQ PAR.RFS Trans Reason Dft
 IF DB1.RFS_Trans_Reason_Dft = PAR.RFS_Trans_Reason_Dft;

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

 ENDIF;

}


CASE;

// IF PAR.COA RIN Type Flag is Separated
IF PAR.COA_RIN_Type_Flag = '2';

// LCL.COA BHR Unused Date 2 = CON.*ZERO
LCL.COA_BHR_Unused_Date_2 = *ZERO;

ENDIF;

EXECUTE FUNCTION(Crt COA Batch Hdr RIN CR) TYPE(CRTOBJ) FILE(PMDACPP)           AC1858626;
PARAMETER(LCL.Accounting_Company);
PARAMETER(PAR.COA_ULSD_Company_#);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(LCL.COA_Batch_Header_RIN_Seq);
PARAMETER(1);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(LCL.Customer_Name);
PARAMETER(LCL.HPB_ULSD_Company_#);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.Case_Sequence_Number);
PARAMETER(*BLANK);
PARAMETER(LCL.Load_ID);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER('N');
PARAMETER(*BLANK);
PARAMETER('F');
PARAMETER(*ZERO);
PARAMETER(LCL.HPB_Ship_to_Warehouse);
PARAMETER(PAR.COA_RIN_Type_Flag);
PARAMETER(LCL.Customer_Purchase_Order_#);
PARAMETER(PAR.Company_Number);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(WRK.Blank_for_4_USR);
PARAMETER(*BLANK);
PARAMETER(LCL.COA_RIN_Int_Ext_Company);
PARAMETER(LCL.COA_BHR_Unused_Sts_2);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(PAR.COA_Temperature_Loadout);
PARAMETER(PAR.COA_ULSD_Facility_#);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(LCL.RFS_Transaction_Type);
PARAMETER(LCL.RFS_Trans_Reason_Code);
PARAMETER(LCL.RFS_Fuel_Code);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER('COA');
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(LCL.COA_BH_RFS_Version_Nbr);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(LCL.Load_ID);
PARAMETER(LCL.COA_EMTS_Batch_Nbr);
PARAMETER(LCL.COA_BHR_Unused_Sts_3);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(PAR.COA_BHR_Equiv_Value);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER('A');
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  //?*** Set RECORD STATUS field. ***
  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  //?*** Set CREATE fields. ***
  // PAR.Create Date = JOB.*Job date
  PAR.Create_Date = JOB.*Job_date;

  // PAR.Create Time = JOB.*Job time
  PAR.Create_Time = JOB.*Job_time;

  // PAR.Create User = JOB.*USER
  PAR.Create_User = JOB.*USER;

  // PAR.Create Program = JOB.*PROGRAM
  PAR.Create_Program = JOB.*PROGRAM;

  //?*** Set CHANGE fields. ***
  // PAR.Change Date = CON.*ZERO
  PAR.Change_Date = *ZERO;

  // PAR.Change Time = CON.*ZERO
  PAR.Change_Time = *ZERO;

  // PAR.Change User = CON.*BLANK
  PAR.Change_User = *BLANK;

  // PAR.Change Program = CON.*BLANK
  PAR.Change_Program = *BLANK;

 }

}


ENDIF;

//?For Sales from an external warehouse - create SEL Rin w/acctng co
CASE;

// IF LCL.Warehouse Location is External
IF LCL.Warehouse_Location = 'E';

EXECUTE FUNCTION(RTV all used flds/item RT) TYPE(RTVOBJ) FILE(PMCAREP)          AC1968337;
PARAMETER(LCL.Accounting_Company);
PARAMETER(PAR.COA_Bio_diesel_Fuel_Code);
PARAMETER(NLL.COA_Bio_dsl_Fuel_Cd_Descr);
PARAMETER(PAR.COA_Producer_Regist_Nbr);
PARAMETER(PAR.COA_Employer_ID);
PARAMETER(NLL.COA_Sold_From_Address);
PARAMETER(NLL.COA_Sold_From_Name);
PARAMETER(PAR.COA_ULSD_Company_#);
PARAMETER(PAR.COA_ULSD_Facility_#);
PARAMETER(PAR.COA_RIN_Equivalence_Valu);
PARAMETER(PAR.COA_RIN_Renewable_Enrgy);
PARAMETER(PAR.COA_RIN_Type_Flag);
PARAMETER(NLL.COA_Density_Loadout);
PARAMETER(NLL.COA_Density_Reference);
PARAMETER(NLL.COA_Temperature_Loadout);
PARAMETER(NLL.COA_Temperature_Ref);
PARAMETER(NLL.COA_BOL_Percent);
PARAMETER(NLL.COA_Sale_Location);
PARAMETER(NLL.COA_Active_Whse_Tank_1);
PARAMETER(NLL.COA_Active_Whse_Tank_2);
PARAMETER(NLL.COA_Active_Whse_Tank_3);
PARAMETER(NLL.COA_Active_Whse_Tank_4);
PARAMETER(NLL.COA_Active_Whse_Tank_5);
PARAMETER(NLL.COA_Active_Whse_Tank_6);
PARAMETER(PAR.COA_Temp_Conv_Factor_1);
PARAMETER(PAR.Operation_Factor_1);
PARAMETER(PAR.COA_Temp_Conv_Factor_2);
PARAMETER(PAR.Operation_Factor_2);
PARAMETER(NLL.COA_RFS_Renew_Fuel_Code);
PARAMETER(NLL.COA_RFS_Rnwbl_Feedstock);
PARAMETER(LCL.COA_OMS_Item_Code);
PARAMETER(LCL.Sold_To_Customer_hpb_biod);
PARAMETER(NLL.Record_Status);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV f/HPB Shp to Ext  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2031559;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Order_Type_Sales);
PARAMETER(LCL.Bill_to_Customer);
PARAMETER(LCL.Bill_to_Name);
PARAMETER(LCL.Customer_Purchase_Order_#);
PARAMETER(NLL.Actual_Shipped_Date);
PARAMETER(LCL.Load_ID);
PARAMETER(LCL.HPB_Ship_to_Warehouse);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV HPB Equiv only   RT) TYPE(RTVOBJ) FILE(PMAMREP)            AC2031845;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.OHE_HPB_RIN_Equiv_Value);
PARAMETER(LCL.OHE_HPB_RIN_Price);
PARAMETER(LCL.OHE_Override_Type_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV HPB-temp,CarrBrk  RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1897587;
PARAMETER(LCL.Load_ID);
PARAMETER(LCL.Product_Temperature);
PARAMETER(NLL.Carrier_Broker);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?******
//?RIN will be output from invoicing routine
//?******  Create Batch RIN Record  -SEL for HPB biodiesel 369 ***
//?******                       OR  -SEP for HPB biodiesel 369 ***
EXECUTE FUNCTION(Rtv Customer Type     RT) TYPE(RTVOBJ) FILE(CAEOREP)           AC1585599;
PARAMETER(LCL.Bill_to_Customer);
PARAMETER(LCL.Type_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


EXECUTE FUNCTION(Rtv HPB Cust Fields   RT) TYPE(RTVOBJ) FILE(PDNIREP)           AC1858717;
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Bill_to_Customer);
PARAMETER(LCL.HPB_Employer_ID_#);
PARAMETER(LCL.HPB_ULSD_Company_#);
PARAMETER(LCL.HPB_ULSD_Facility_ID);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(LCL.Bill_to_Customer);
PARAMETER(LCL.Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV RIN Key fields    RT) TYPE(RTVOBJ) FILE(PNFPCPP)           AC1962269;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.Case_Sequence_Number);
PARAMETER(LCL.COA_ULSD_Company_#);
PARAMETER(LCL.COA_Batch_Number);
PARAMETER(LCL.COA_Batch_Header_RIN_Seq);
PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
PARAMETER(LCL.COA_Batch_Company_Nbr);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?RMC 1.16.20 use coa batch company instead of lcl.accounting company
// LCL.Company Number     041405 = LCL.COA Batch Company Nbr
LCL.Company_Number_041405 = LCL.COA_Batch_Company_Nbr;

EXECUTE FUNCTION(Rtv Last Sec f/Btch/SecRT) TYPE(RTVOBJ) FILE(PMDACPP)          AC1963881;
PARAMETER(LCL.Company_Number_041405);
PARAMETER(LCL.COA_ULSD_Company_#);
PARAMETER(LCL.COA_Batch_Number);
PARAMETER(LCL.COA_Batch_Header_RIN_Seq);
PARAMETER(WRK.COA_Batch_Hdr_RIN_Seq_Sec);
{
 //?USER: Processing if Data record not found

 // PAR.COA Batch Hdr RIN Seq Sec = CON.*ZERO
 PAR.COA_Batch_Hdr_RIN_Seq_Sec = *ZERO;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// WRK.COA Batch Hdr RIN Seq Sec = WRK.COA Batch Hdr RIN Seq Sec + CON.1
WRK.COA_Batch_Hdr_RIN_Seq_Sec = WRK.COA_Batch_Hdr_RIN_Seq_Sec + 1;

// Compute:EMTS Batch Nmbr
LCL.COA_EMTS_Batch_Nbr = ( LCL.COA_Batch_Number * 1000 ) + LCL.COA_Batch_Header_RIN_Seq;

//?Output RFS Transaction Type per Cust or Order type
CASE;

// IF LCL.Type Code is Blender for Biodiesel
IF LCL.Type_Code = 'BL';

//?When sold to a Blender, create SEParated RIN.
// LCL.RFS Transaction Type = CND.Separated
LCL.RFS_Transaction_Type = 'SEP';

// PAR.COA RIN Type Flag = CND.Separated
PAR.COA_RIN_Type_Flag = 2;

//?Output RFS Transaction Type per Cust or Order type
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF LCL.Order Type - Sales is Regular Order
IF LCL.Order_Type_Sales = 'OR';

// LCL.RFS Transaction Type = CND.Sold or Delivered
LCL.RFS_Transaction_Type = 'SEL';

// PAR.COA RIN Type Flag = CND.Assigned
PAR.COA_RIN_Type_Flag = 1;

// IF LCL.Order Type - Sales is Transfer Order
IF LCL.Order_Type_Sales = 'TR';

// LCL.RFS Transaction Type = CND.Transfer BUY
LCL.RFS_Transaction_Type = 'TRB';

// PAR.COA RIN Type Flag = CND.Assigned
PAR.COA_RIN_Type_Flag = 1;

ENDIF;

ENDIF;

//?get load id from order marked as sold
//?RMC 1/09/12 IR on lcl.COA Batch Hdr RIN Seq Sec too to get exact rcd
//?  and pass out supporting txt & number 1 also
//?RMC 7/16/19 need to use Company too toget the right batch (now that both
//? are 4846)  T14912
//?RMC 1.16.20 use coa batch company instead of par.company number ?
// LCL.Company Number     041405 = LCL.COA Batch Company Nbr
LCL.Company_Number_041405 = LCL.COA_Batch_Company_Nbr;

EXECUTE FUNCTION(Rtv Load for Ext Sel RT) TYPE(RTVOBJ) FILE(PMDACPP)            AC1971090;
PARAMETER(LCL.Company_Number_041405);
PARAMETER(LCL.COA_ULSD_Company_#);
PARAMETER(LCL.COA_Batch_Number);
PARAMETER(LCL.COA_Batch_Header_RIN_Seq);
PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
PARAMETER(LCL.COA_Ref_Load_Id);
PARAMETER(LCL.COA_BHR_Loadout_Temp);
PARAMETER(LCL.COA_ULSD_Facility_#);
PARAMETER(LCL.RFS_Transaction_Type);
PARAMETER(LCL.RFS_Fuel_Code);
PARAMETER(LCL.COA_RIN_Supporting_Text_1);
PARAMETER(LCL.COA_RIN_Supporting_Nbr_1);
PARAMETER(LCL.COA_BHR_RFS_Version_Nbr);
{
 //?USER: Processing if Data record not found

 // PAR.Load ID = CON.*ZERO
 PAR.Load_ID = *ZERO;

 //?USER: Process Data record

 //?Get 1st ord ... s/only be 1 order for this ulsd/batch/seq
 //?If Trans is TRB, get info from BUY
 CASE;

 // IF PAR.RFS Transaction Type is Transfer BUY
 IF PAR.RFS_Transaction_Type = 'TRB';

 CASE;

 // IF DB1.RFS Transaction Type is Buy Trans Types
 IF DB1.RFS_Transaction_Type = 'BUY'/'TRB';

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Load ID = CON.*ZERO
 PAR.Load_ID = *ZERO;

 CASE;

 // IF DB1.COA EMTS PTD Nbr is Entered
 IF DB1.COA_EMTS_PTD_Nbr <> *ZERO;

 // PAR.Load ID = DB1.COA EMTS PTD Nbr
 PAR.Load_ID = DB1.COA_EMTS_PTD_Nbr;

 ENDIF;

 QUIT;

 ENDIF;

 ENDIF;

 //?If Trans Type is SEL, get EXACT BUY/TRB info
 CASE;

 // IF PAR.RFS Transaction Type is Sold or Delivered
 IF PAR.RFS_Transaction_Type = 'SEL';

 // OR PAR.RFS Transaction Type is Separated
 OR PAR.RFS_Transaction_Type = 'SEP';

 CASE;

 // IF DB1.RFS Transaction Type is Buy Trans Types
 IF DB1.RFS_Transaction_Type = 'BUY'/'TRB';

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Load ID = CON.*ZERO
 PAR.Load_ID = *ZERO;

 CASE;

 // IF DB1.COA EMTS PTD Nbr is Entered
 IF DB1.COA_EMTS_PTD_Nbr <> *ZERO;

 // PAR.Load ID = DB1.COA EMTS PTD Nbr
 PAR.Load_ID = DB1.COA_EMTS_PTD_Nbr;

 ENDIF;

 QUIT;

 ENDIF;

 ENDIF;

}


//?5/02/2012 E2079 RMC Use from Load header instead-it'll be diff than orig
// LCL.COA BHR Loadout Temp = LCL.Product Temperature
LCL.COA_BHR_Loadout_Temp = LCL.Product_Temperature;

//?2/02/2012 C1918 RMC Use from OHE instead
// PAR.COA BHR Equiv Value = LCL.OHE HPB RIN Equiv Value
PAR.COA_BHR_Equiv_Value = LCL.OHE_HPB_RIN_Equiv_Value;

EXECUTE FUNCTION(Rtv Trans Rsn Dft,Dsc RT) TYPE(RTVOBJ) FILE(PNGGREP)           AC1990859;
PARAMETER(LCL.RFS_Transaction_Type);
PARAMETER(LCL.RFS_Trans_Reason_Code);
PARAMETER(NLL.RFS_Trans_Reason_Desc);
PARAMETER('Y');
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.RFS Trans Reason Dft EQ PAR.RFS Trans Reason Dft
 IF DB1.RFS_Trans_Reason_Dft = PAR.RFS_Trans_Reason_Dft;

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

 ENDIF;

}


//?RMC 1.16.20 use coa batch company instead of par.accounting company
EXECUTE FUNCTION(Crt COA Batch Hdr RIN CR) TYPE(CRTOBJ) FILE(PMDACPP)           AC1858626;
PARAMETER(LCL.Company_Number_041405);
PARAMETER(LCL.COA_ULSD_Company_#);
PARAMETER(LCL.COA_Batch_Number);
PARAMETER(LCL.COA_Batch_Header_RIN_Seq);
PARAMETER(WRK.COA_Batch_Hdr_RIN_Seq_Sec);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(LCL.Customer_Name);
PARAMETER(LCL.HPB_ULSD_Company_#);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.Case_Sequence_Number);
PARAMETER(*BLANK);
PARAMETER(LCL.Load_ID);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER('N');
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(LCL.HPB_Ship_to_Warehouse);
PARAMETER(PAR.COA_RIN_Type_Flag);
PARAMETER(LCL.Customer_Purchase_Order_#);
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.COA_Ref_Load_Id);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(WRK.Blank_for_4_USR);
PARAMETER(*BLANK);
PARAMETER(LCL.COA_RIN_Int_Ext_Company);
PARAMETER(LCL.COA_BHR_Unused_Sts_2);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(LCL.COA_BHR_Loadout_Temp);
PARAMETER(LCL.COA_ULSD_Facility_#);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(LCL.RFS_Transaction_Type);
PARAMETER(LCL.RFS_Trans_Reason_Code);
PARAMETER(LCL.RFS_Fuel_Code);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(LCL.COA_RIN_Supporting_Text_1);
PARAMETER(LCL.COA_RIN_Supporting_Nbr_1);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(LCL.COA_BHR_RFS_Version_Nbr);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(LCL.Load_ID);
PARAMETER(LCL.COA_EMTS_Batch_Nbr);
PARAMETER(LCL.COA_BHR_Unused_Sts_3);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(PAR.COA_BHR_Equiv_Value);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER('A');
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  //?*** Set RECORD STATUS field. ***
  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  //?*** Set CREATE fields. ***
  // PAR.Create Date = JOB.*Job date
  PAR.Create_Date = JOB.*Job_date;

  // PAR.Create Time = JOB.*Job time
  PAR.Create_Time = JOB.*Job_time;

  // PAR.Create User = JOB.*USER
  PAR.Create_User = JOB.*USER;

  // PAR.Create Program = JOB.*PROGRAM
  PAR.Create_Program = JOB.*PROGRAM;

  //?*** Set CHANGE fields. ***
  // PAR.Change Date = CON.*ZERO
  PAR.Change_Date = *ZERO;

  // PAR.Change Time = CON.*ZERO
  PAR.Change_Time = *ZERO;

  // PAR.Change User = CON.*BLANK
  PAR.Change_User = *BLANK;

  // PAR.Change Program = CON.*BLANK
  PAR.Change_Program = *BLANK;

 }

}


ENDIF;

ENDIF;

