     H/TITLE PMT Load Tally Report  PV Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Prompt & validate record
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 12/04/19  Time  : 14:19:40
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPDF4PVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: PMT Load Tally Report  PV Prompt & validate record
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FOME5REL2IF  E           K        DISK
      * RTV : Country                   Active Only
      *
     FPDJYREL2IF  E           K        DISK
      * RTV : Company Defaults Internal Active Records
      *
     FOMFFREL0IF  E           K        DISK
      * RTV : Carrier                   Retrieval index
      *
     FCAAFREL3IF  E           K        DISK
      * RSQ : Calendar                  Co/Date               NV
      *
     FCAACREL1IF  E           K        DISK
      * RTV : State                     Retrieval index       NV
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
     E                    UCT        40  1               CENTER TABLE
      * DETAIL Screen: Field position and name array
     E                    W0BEG   7 032  5 0A
     E                    W0END   7 032  5 0A
     E                    W0NAM   7 032 10
      * Long constants
     E                    @CN#    1  04  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@E5REVS
      * Country                   Active Only
      * Renamed input format fields
     I              E5KXCD                          WAKXCD
     I              E5DATX                          WADATX
     I              E5UVST                          WAUVST
     I              E5UWST                          WAUWST
     I              E5UXST                          WAUXST
     I              E5VSST                          WAVSST
     I              E5AATM                          WAAATM
     I              E5AYNA                          WAAYNA
     I              E5A0NA                          WAA0NA
     I              E5AXDT                          WAAXDT
      *
     I@JYRECE
      * Company Defaults Internal Active Records
      * Renamed input format fields
     I              JYAIC3                          WBAIC3
     I              JYZ9ST                          WBZ9ST
     I              JYCSST                          WBCSST
     I              JYZ8ST                          WBZ8ST
     I              JYCXST                          WBCXST
     I              JYSWST                          WBSWST
     I              JYXXTM                          WBXXTM
     I              JYUECD                          WBUECD
     I              JYHSST                          WBHSST
     I              JYAMEO                          WBAMEO
     I              JYSSDF                          WBSSDF
     I              JYPDFT                          WBPDFT
     I              JYYISX                          WBYISX
     I              JYYJSX                          WBYJSX
     I              JYYKSX                          WBYKSX
     I              JYYLSX                          WBYLSX
     I              JYYMSX                          WBYMSX
     I              JYYNSX                          WBYNSX
     I              JYUVST                          WBUVST
     I              JYUWST                          WBUWST
     I              JYUXST                          WBUXST
     I              JYVSST                          WBVSST
     I              JYAATM                          WBAATM
     I              JYAYNA                          WBAYNA
     I              JYA0NA                          WBA0NA
     I              JYAXDT                          WBAXDT
      *
     I@FFREBF
      * Carrier                   Retrieval index
      * Renamed input format fields
     I              FFBZNA                          WCBZNA
     I              FFADTX                          WCADTX
     I              FFACNA                          WCACNA
     I              FFADNA                          WCADNA
     I              FFAENA                          WCAENA
     I              FFAJNA                          WCAJNA
     I              FFBTTX                          WCBTTX
     I              FFEZNB                          WCEZNB
     I              FFBGCD                          WCBGCD
     I              FFEEDT                          WCEEDT
     I              FFDUTX                          WCDUTX
     I              FFNRVA                          WCNRVA
     I              FFNSVA                          WCNSVA
     I              FFNTVA                          WCNTVA
     I              FFNUVA                          WCNUVA
     I              FFP1ST                          WCP1ST
     I              FFDVTX                          WCDVTX
     I              FFDWTX                          WCDWTX
     I              FFLVCD                          WCLVCD
     I              FFS8NB                          WCS8NB
     I              FFS9NB                          WCS9NB
     I              FFNMVA                          WCNMVA
     I              FFNOVA                          WCNOVA
     I              FFNPVA                          WCNPVA
     I              FFNQVA                          WCNQVA
     I              FFMFCD                          WCMFCD
     I              FFQXNB                          WCQXNB
     I              FFQ1NB                          WCQ1NB
     I              FFMRNG                          WCMRNG
     I              FFMRNE                          WCMRNE
     I              FFRFNB                          WCRFNB
     I              FFMREG                          WCMREG
     I              FFBQPR                          WCBQPR
     I              FFBRPR                          WCBRPR
     I              FFBSPR                          WCBSPR
     I              FFBTPR                          WCBTPR
     I              FFBUPR                          WCBUPR
     I              FFBVPR                          WCBVPR
     I              FFDJWG                          WCDJWG
     I              FFDKWG                          WCDKWG
     I              FFDLWG                          WCDLWG
     I              FFDMWG                          WCDMWG
     I              FFDNWG                          WCDNWG
     I              FFDOWG                          WCDOWG
     I              FFB2PR                          WCB2PR
     I              FFB3PR                          WCB3PR
     I              FFB4PR                          WCB4PR
     I              FFB5PR                          WCB5PR
     I              FFB6PR                          WCB6PR
     I              FFB7PR                          WCB7PR
     I              FFAAC7                          WCAAC7
     I              FFCOFI                          WCCOFI
     I              FFK6TX                          WCK6TX
     I              FFOCNA                          WCOCNA
     I              FFODNA                          WCODNA
     I              FFW7CD                          WCW7CD
     I              FFK7TX                          WCK7TX
     I              FFTENO                          WCTENO
     I              FFK8TX                          WCK8TX
     I              FFAOFC                          WCAOFC
     I              FFAOLI                          WCAOLI
     I              FFKHDT                          WCKHDT
     I              FFUNUS                          WCUNUS
     I              FFUNU2                          WCUNU2
     I              FFUNU3                          WCUNU3
     I              FFUVST                          WCUVST
     I              FFUWST                          WCUWST
     I              FFUXST                          WCUXST
     I              FFVSST                          WCVSST
     I              FFAATM                          WCAATM
     I              FFAYNA                          WCAYNA
     I              FFA0NA                          WCA0NA
     I              FFAXDT                          WCAXDT
      *
     I@AFREYY
      * Calendar                  Co/Date               NV
      * Renamed input format fields
     I              AFAIC3                          WDAIC3
     I              AFBCDT                          WDBCDT
     I              AFCQNB                          WDCQNB
     I              AFESNB                          WDESNB
     I              AFETNB                          WDETNB
     I              AFBZNB                          WDBZNB
     I              AFA9ST                          WDA9ST
     I              AFEINB                          WDEINB
     I              AFC5ST                          WDC5ST
     I              AFAQNB                          WDAQNB
     I              AFCMST                          WDCMST
     I              AFV9ST                          WDV9ST
     I              AFWAST                          WDWAST
     I              AFX2ST                          WDX2ST
     I              AFOJDT                          WDOJDT
     I              AFNQNX                          WDNQNX
     I              AFNRNX                          WDNRNX
     I              AFI9SX                          WDI9SX
     I              AFJASX                          WDJASX
     I              AFOKDT                          WDOKDT
     I              AFOLDT                          WDOLDT
     I              AFUVST                          WDUVST
     I              AFUWST                          WDUWST
     I              AFUXST                          WDUXST
     I              AFAATM                          WDAATM
     I              AFAYNA                          WDAYNA
     I              AFA0NA                          WDA0NA
     I              AFAXDT                          WDAXDT
      *
     I@ACREAH
      * State                     Retrieval index       NV
      * Renamed input format fields
     I              ACBGCD                          WEBGCD
     I              ACAUNA                          WEAUNA
     I              ACUVST                          WEUVST
     I              ACUWST                          WEUWST
     I              ACUXST                          WEUXST
     I              ACVSST                          WEVSST
     I              ACAATM                          WEAATM
     I              ACAYNA                          WEAYNA
     I              ACA0NA                          WEA0NA
     I              ACAXDT                          WEAXDT
      *
     I@ADRET1
      * Warehouse                 Active records only
      * Renamed input format fields
     I              ADAJCD                          WFAJCD
     I              ADF8NA                          WFF8NA
     I              ADACNA                          WFACNA
     I              ADADNA                          WFADNA
     I              ADAENA                          WFAENA
     I              ADAJNA                          WFAJNA
     I              ADBTTX                          WFBTTX
     I              ADAOCD                          WFAOCD
     I              ADBGCD                          WFBGCD
     I              ADVHST                          WFVHST
     I              ADMPNA                          WFMPNA
     I              ADWPST                          WFWPST
     I              ADXUST                          WFXUST
     I              ADT0ST                          WFT0ST
     I              ADT1ST                          WFT1ST
     I              ADDBNB                          WFDBNB
     I              ADT2ST                          WFT2ST
     I              ADT3ST                          WFT3ST
     I              ADT4ST                          WFT4ST
     I              ADT6ST                          WFT6ST
     I              ADBWC3                          WFBWC3
     I              ADBTC3                          WFBTC3
     I              ADBUC3                          WFBUC3
     I              ADBVC3                          WFBVC3
     I              ADFCAA                          WFFCAA
     I              ADRQSX                          WFRQSX
     I              ADRRSX                          WFRRSX
     I              ADRSSX                          WFRSSX
     I              ADRTSX                          WFRTSX
     I              ADT7ST                          WFT7ST
     I              ADT8ST                          WFT8ST
     I              ADRNSX                          WFRNSX
     I              ADROSX                          WFROSX
     I              ADRPSX                          WFRPSX
     I              ADUVST                          WFUVST
     I              ADUWST                          WFUWST
     I              ADUXST                          WFUXST
     I              ADVSST                          WFVSST
     I              ADAATM                          WFAATM
     I              ADAYNA                          WFAYNA
     I              ADA0NA                          WFA0NA
     I              ADAXDT                          WFAXDT
      *
     I@DRRETH
      * User Profile Control      Retrieval index       NV
      * Renamed input format fields
     I              DRAJVN                          WGAJVN
     I              DRAUNA                          WGAUNA
     I              DRB8NA                          WGB8NA
     I              DRAHVN                          WGAHVN
     I              DRI6ST                          WGI6ST
     I              DRI7ST                          WGI7ST
     I              DRXMST                          WGXMST
     I              DRXNST                          WGXNST
     I              DRI8ST                          WGI8ST
     I              DRNLNB                          WGNLNB
     I              DRMPNA                          WGMPNA
     I              DRBCCD                          WGBCCD
     I              DRAIC3                          WGAIC3
     I              DRDQCD                          WGDQCD
     I              DRDRCD                          WGDRCD
     I              DRAJCD                          WGAJCD
     I              DRBUVN                          WGBUVN
     I              DRUVST                          WGUVST
     I              DRUWST                          WGUWST
     I              DRUXST                          WGUXST
     I              DRAATM                          WGAATM
     I              DRAYNA                          WGAYNA
     I              DRA0NA                          WGA0NA
     I              DRAXDT                          WGAXDT
      *
     I@DTRETE
      * User Application Profile  Retrieval index       NV
      * Renamed input format fields
     I              DTAJVN                          WHAJVN
     I              DTDNCD                          WHDNCD
     I              DTAIC3                          WHAIC3
     I              DTDQCD                          WHDQCD
     I              DTDRCD                          WHDRCD
     I              DTAJCD                          WHAJCD
     I              DTJFST                          WHJFST
     I              DTUVST                          WHUVST
     I              DTUWST                          WHUWST
     I              DTUXST                          WHUXST
     I              DTAATM                          WHAATM
     I              DTAYNA                          WHAYNA
     I              DTA0NA                          WHA0NA
     I              DTAXDT                          WHAXDT
      *
     I@DNRESF
      * Application               RSQ Application Code
      * Renamed input format fields
     I              DNDNCD                          WIDNCD
     I              DNAUNA                          WIAUNA
     I              DNVKST                          WIVKST
     I              DNRSCD                          WIRSCD
     I              DNUVST                          WIUVST
     I              DNUWST                          WIUWST
     I              DNUXST                          WIUXST
     I              DNAATM                          WIAATM
     I              DNAYNA                          WIAYNA
     I              DNA0NA                          WIA0NA
     I              DNAXDT                          WIAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * N : MAP Warehouse Code
     I                                        1   3 P1AJCD
      * N : MAP Company Number
     I                                    P   4   50P1AIC3
      * N : MAP Application Code
     I                                        6  11 P1DNCD
      * N : MAP System Date Format
     I                                       12  14 P1B8NA
      * N : MAP User Profile Name
     I                                       15  24 P1AJVN
      * N : MAP Allow Multi-Company
     I                                       25  25 P1I6ST
      * N : MAP Default Printer
     I                                       26  35 P1MPNA
     IP2PARM      DS
      * FLD: *Arrays
      * N : MAP PRT Description
     I                                        1  25 P2G3TX
      * N : MAP PRT Printer Device
     I                                       26  35 P2WRST
      * N : MAP PRT Hold Output Sts
     I                                       36  39 P2WSST
      * N : MAP PRT Save Output Sts
     I                                       40  43 P2WTST
      * N : MAP PRT Number of Copies
     I                                       44  450P2DYNB
      * N : MAP PRT Night Queue Run Sts
     I                                       46  46 P2WUST
      * N : MAP PRT Night Queue
     I                                       47  56 P2BVVN
      * N : MAP Company Number Pass   USR
     I                                    P  57  645P2AJAA
      * N : MAP From Date Pass        USR
     I                                    P  65  725P2AJAD
      * N : MAP Thru Date Pass        USR
     I                                    P  73  805P2AJAG
      * N : MAP System Value Numeric
     I                                    P  81  885P2M8NB
     IP3PARM      DS
      * FLD: Company Name and Address
      * N : MAP Name
     I                                        1  30 P3ADTX
     IP4PARM      DS
      * N :  Day of Week
     I                                        1   1 P4A9ST
     IP5PARM      DS
      * N : MAP Load Type
     I                                        1   1 P5VDST
     IP6PARM      DS
      * N :  YEAR 1 USR
     I                                    P   1   30P6SINX
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Carrier doesn't exists'
      * Carrier Code
     I                                        1   3 ZA0001
      * Message data for 'Date must be entered'
      * Message data for 'Week End Date must be Sat'
      * USR From Date
     I                                    P   1   40ZA0002
      * Message data for 'Warehouse not found'
      * Message data for 'Warehouse not found'
      * Message data for 'Warehouse not found'
      * Message data for 'Warehouse not found'
      * Message data for 'Warehouse not found'
      * Message data for 'Warehouse not found'
      * Message data for 'Warehouse not found'
      * Message data for 'Warehouse not found'
      * Message data for 'Warehouse not found'
      * Message data for 'Warehouse not found'
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0003
      * Application Code
     I                                       11  16 ZA0004
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0005
      * Application Code
     I                                       11  16 ZA0006
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: User defined action
      * Submit job for Print
     C                     Z-ADD#DATNB    P2AJAA           Company Number
      * PAR.From Date Pass        USR = DTL.USR From Date
     C                     Z-ADD#DBDDT    P2AJAD           From Date Pass
      * ** Fill in Thru Date Pass field
      * CASE: DTL.YEAR 1 USR is Greater than zero
     C           #DSINX    IFGT *ZERO                      *IF
     C                     Z-ADDWUAJAG    P2AJAG           Thru Date Pass
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.USR To Date is Entered
     C           #DFDDT    IFNE *ZERO                      *IF
      * PAR.Thru Date Pass        USR = DTL.USR To Date
     C                     Z-ADD#DFDDT    P2AJAG           Thru Date Pass
     C                     ELSE
      * CASE: *OTHERWISE
      * PAR.Thru Date Pass        USR = DTL.Date To               USR
     C                     Z-ADD#DJFDT    P2AJAG           Thru Date Pass
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD#DSINX    WUSDTE           Current System
      * ** Option 3 added for Actual Ship Date          E00076  11/10/200
      * PMT&Pass Load tally rptUP - /UT User Programs  * 
     C                     CALL 'PDF5UPC'              90  PMT&Pass Load t
     C           W0RTN     PARM *BLANK    WQ0001  7        *Return code
     C                     PARM 'TRF'     WQ0002  6        Application Cod
     C                     PARM @CN,001   WQ0003 10        Program name US
     C                     PARM @CN,002   WQ0004 25        PRT Description
     C           P2WRST    PARM P2WRST    WQ0005 10        PRT Printer Dev
     C           P2WSST    PARM P2WSST    WQ0006  4        PRT Hold Output
     C           P2WTST    PARM P2WTST    WQ0007  4        PRT Save Output
     C           P2WUST    PARM P2WUST    WQ0008  1        PRT Night Queue
     C           P2BVVN    PARM P2BVVN    WQ0009 10        PRT Night Queue
     C           P2AJAA    PARM P2AJAA    WQ0010 155       Company Number
     C                     PARM #DSINX    WQ0011 155       Date 2
     C                     PARM P2AJAD    WQ0012 155       From Date Pass
     C                     PARM P2AJAG    WQ0013 155       Thru Date Pass
     C           P2M8NB    PARM P2M8NB    WQ0014 155       System Value Nu
     C                     PARM #DPQSX    WQ0015  1        USR Detail or S
     C                     PARM WUB8ST    WQ0016  1        Status - Y or N
     C                     PARM #DBZNA    WQ0017  3        Carrier Code
     C                     PARM #PVDST    WQ0018  1        Load Type
     C                     PARM #DV9CD    WQ0019  2        Ship To State C
     C                     PARM #DZUCD    WQ0020  3        Warehouse 1 USR
     C                     PARM #DZVCD    WQ0021  3        Warehouse 2 USR
     C                     PARM #DZWCD    WQ0022  3        Warehouse 3 USR
     C                     PARM #DZXCD    WQ0023  3        Warehouse 4 USR
     C                     PARM #DZYCD    WQ0024  3        Warehouse 5 USR
     C                     PARM #DZZCD    WQ0025  3        Warehouse 6 USR
     C                     PARM #DZ0CD    WQ0026  3        Warehouse 7 USR
     C                     PARM #DZ1CD    WQ0027  3        Warehouse 8 USR
     C                     PARM #DZ2CD    WQ0028  3        Warehouse 9 USR
     C                     PARM #DZ3CD    WQ0029  3        Warehouse 10 US
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDF5UPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     993334*
     C                     SETON                     363738*
     C                     SETON                     394041*
     C                     SETON                     424344*
     C                     SETON                     454647*
     C                     END
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
      * Send message 'Print has been Submitted'
     C                     MOVEL'USR1832' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     END                             *FI
     C                     MOVEL'Y'       W0DCF            *Defer confirm
      * Request new transaction
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Validate USR To Date
      * External date
     C                     Z-ADDVDFDDT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     Z-ADDXDINDT    #DFDDT
      * Validate Date To               USR
      * External date
     C                     Z-ADDVDJFDT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     Z-ADDXDINDT    #DJFDT
      * Validate Report Type -Sch or Deadl
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#DPQSX'  IFEQ YPMTFD
      * Report Type -Sch or Deadl
     C                     MOVEL#DPQSX    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHPQSX
     C                     SELEC
     C           W0INVL    WHEQ '3'                        3
     C                     Z-ADD1         ZHPQSX
     C           W0INVL    WHEQ '2'                        2
     C                     Z-ADD2         ZHPQSX
     C           W0INVL    WHEQ '1'                        1
     C                     Z-ADD3         ZHPQSX
     C                     ENDSL
     C                     EXFMTZGPQSX
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHPQSX    WHEQ 1
     C                     MOVEL'3'       W0INVL           3
     C           ZHPQSX    WHEQ 2
     C                     MOVEL'2'       W0INVL           2
     C           ZHPQSX    WHEQ 3
     C                     MOVEL'1'       W0INVL           1
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #DPQSX
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate Load Type
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#PVDST    W0NSRQ  1        Load Type
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#PVDST'  OREQ YPMTFD
     C                     CALL 'CAVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1250409   Y2LSNO  70
     C           #PVDST    PARM #PVDST    W0EXVL 25        Load Type
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate fields
      * Process F4 on Company Number
      * CASE: DTL.*CMD key is *Prompt
     C           *IN04     IFEQ '1'                        *IF
      * CASE: PGM.*Cursor field <IS> DTL.Company Number CDE
     C           W0CFL     IFEQ '#DATNB'                   *IF
      * CASE: PAR.Allow Multi-Company is yes
     C           P1I6ST    IFEQ 'Y'                        *IF
      * SEL Company - plants   SR - Company Name and Address  * 
     C                     CALL 'PPF2SRR'              90  SEL Company - p
     C                     PARM *BLANK    W0RTN   7
     C           #DATNB    PARM #DATNB    WQ0030  30       Company Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPF2SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9935  *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * Send message 'Prompt Not Allowed'
     C                     MOVEL'USR2410' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
      * ** Rtv company name
      * CASE: DTL.Company Number CDE is not equal to zero
     C           #DATNB    IFNE *ZERO                      *IF
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#DATNB    WL0001           Company Number
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #DAPTX    P      Name
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DAPTX           Company Name
     C                     END                             *FI
      * Process F4 on Carrier Code
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.Carrier Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#DBZNA'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * SEL Carrier Name       SR - OM Carrier  * 
     C                     CALL 'PDWHSRR'              90  SEL Carrier Nam
     C                     PARM *BLANK    W0RTN   7
     C           #DBZNA    PARM #DBZNA    WQ0031  3        Carrier Code
     C           #1ADTX    PARM *BLANK    WQ0032 30        Name
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDWHSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9936  *
     C                     END
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
      * Process F4 on State Code
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.USR State Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#DV9CD'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * SEL State              SR - State  * 
     C                     CALL 'CAAHSRR'              90  SEL State
     C                     PARM *BLANK    W0RTN   7
     C           #DV9CD    PARM #DV9CD    WQ0033  2        State Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAAHSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9938  *
     C                     END
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
      * Process F4 on up to 10 Warehouses                     E000528
      * CASE: DTL.*CMD key is *Prompt
     C           *IN04     IFEQ '1'                        *IF
      * Warehouse 1
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse 1 USR
     C           W0CFL     IFEQ '#DZUCD'                   *IF
      * SEL Warehouse          SR - Warehouse  * 
     C                     CALL 'CAANSRR'              90  SEL Warehouse
     C                     PARM *BLANK    W0RTN   7
     C           #DZUCD    PARM #DZUCD    WQ0034  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAANSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9939  *
     C                     END
     C                     END                             *FI
      * Warehouse 2
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse 2 USR
     C           W0CFL     IFEQ '#DZVCD'                   *IF
      * SEL Warehouse          SR - Warehouse  * 
     C                     CALL 'CAANSRR'              90  SEL Warehouse
     C                     PARM *BLANK    W0RTN   7
     C           #DZVCD    PARM #DZVCD    WQ0035  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAANSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9940  *
     C                     END
     C                     END                             *FI
      * Warehouse 3
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse 3 USR
     C           W0CFL     IFEQ '#DZWCD'                   *IF
      * SEL Warehouse          SR - Warehouse  * 
     C                     CALL 'CAANSRR'              90  SEL Warehouse
     C                     PARM *BLANK    W0RTN   7
     C           #DZWCD    PARM #DZWCD    WQ0036  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAANSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9941  *
     C                     END
     C                     END                             *FI
      * Warehouse 4
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse 4 USR
     C           W0CFL     IFEQ '#DZXCD'                   *IF
      * SEL Warehouse          SR - Warehouse  * 
     C                     CALL 'CAANSRR'              90  SEL Warehouse
     C                     PARM *BLANK    W0RTN   7
     C           #DZXCD    PARM #DZXCD    WQ0037  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAANSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9942  *
     C                     END
     C                     END                             *FI
      * Warehouse 5
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse 5 USR
     C           W0CFL     IFEQ '#DZYCD'                   *IF
      * SEL Warehouse          SR - Warehouse  * 
     C                     CALL 'CAANSRR'              90  SEL Warehouse
     C                     PARM *BLANK    W0RTN   7
     C           #DZYCD    PARM #DZYCD    WQ0038  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAANSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9943  *
     C                     END
     C                     END                             *FI
      * Warehouse 6
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse 6 USR
     C           W0CFL     IFEQ '#DZZCD'                   *IF
      * SEL Warehouse          SR - Warehouse  * 
     C                     CALL 'CAANSRR'              90  SEL Warehouse
     C                     PARM *BLANK    W0RTN   7
     C           #DZZCD    PARM #DZZCD    WQ0039  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAANSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9944  *
     C                     END
     C                     END                             *FI
      * Warehouse 7
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse 7 USR
     C           W0CFL     IFEQ '#DZ0CD'                   *IF
      * SEL Warehouse          SR - Warehouse  * 
     C                     CALL 'CAANSRR'              90  SEL Warehouse
     C                     PARM *BLANK    W0RTN   7
     C           #DZ0CD    PARM #DZ0CD    WQ0040  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAANSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9945  *
     C                     END
     C                     END                             *FI
      * Warehouse 8
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse 8 USR
     C           W0CFL     IFEQ '#DZ1CD'                   *IF
      * SEL Warehouse          SR - Warehouse  * 
     C                     CALL 'CAANSRR'              90  SEL Warehouse
     C                     PARM *BLANK    W0RTN   7
     C           #DZ1CD    PARM #DZ1CD    WQ0041  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAANSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9946  *
     C                     END
     C                     END                             *FI
      * Warehouse 9
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse 9 USR
     C           W0CFL     IFEQ '#DZ2CD'                   *IF
      * SEL Warehouse          SR - Warehouse  * 
     C                     CALL 'CAANSRR'              90  SEL Warehouse
     C                     PARM *BLANK    W0RTN   7
     C           #DZ2CD    PARM #DZ2CD    WQ0042  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAANSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9947  *
     C                     END
     C                     END                             *FI
      * Warehouse 10
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse 10 USR
     C           W0CFL     IFEQ '#DZ3CD'                   *IF
      * SEL Warehouse          SR - Warehouse  * 
     C                     CALL 'CAANSRR'              90  SEL Warehouse
     C                     PARM *BLANK    W0RTN   7
     C           #DZ3CD    PARM #DZ3CD    WQ0043  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAANSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9948  *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END
      * Bypass ref file checks if error already detected
     C   99                GOTO DBEXIT
      * Select existing record
     C                     EXSR VACKRL
      * Check reference to Country
     C                     EXSR VBCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate relations
     C                     MOVEL*BLANK    #1ADTX           Name
      * Validate company if entered
      * CASE: DTL.Company Number is not equal to zero
     C           #DATNB    IFNE *ZERO                      *IF
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#DATNB    WL0001           Company Number
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #DAPTX    P      Name
      * CASE: PGM.*Return code is Company not found
     C           W0RTN     IFEQ @CN,003                    *IF
     C                     Z-ADD#DATNB    #1AIC3           Company Number
      * Send message 'Company Number not found'
     C                     MOVEL'USR0163' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
      * *Set Cursor: DTL.Company Number CDE  (*Override=*YES)
     C                     Z-ADD009       W0ROW0
     C                     Z-ADD028       W0COL0
     C                     MOVEL'1'       W0OVR0           *YES
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Plant Co Status   RT - Company Defaults Internal  * 
     C                     EXSR SBRVGN
      * Check for plant company
      * CASE: LCL.Plant Company Sts is Plant Company
     C           YL0001    IFEQ 'P'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD#DATNB    #1AIC3           Company Number
      * *Set Cursor: DTL.Company Number CDE  (*Override=*YES)
     C                     Z-ADD009       W0ROW0
     C                     Z-ADD028       W0COL0
     C                     MOVEL'1'       W0OVR0           *YES
      * Send message 'Company Number not found'
     C                     MOVEL'USR0163' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Validate Carrier Code
      * CASE: DTL.Carrier Code is entered
     C           #DBZNA    IFNE *BLANK                     *IF
      * RTV Carrier Name       RT - OM Carrier  * 
     C                     EXSR SCRVGN
      * Carrier not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,004                    *IF
      * Setup message data for message
     C                     MOVEL#DBZNA    ZA0001           Carrier Code
      * Send message 'Carrier doesn't exists'
     C                     MOVEL'USR1252' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * DTL.Load Type Desc = Condition name of DTL.Load Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1250409   Y2LSNO  70       List number
     C                     PARM #PVDST    W0INVL 25        Load Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DNONA    PARM           W0CNNM 25        Load Type Desc
      *
      * Validate a date is entered   1/3/3
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : DTL.USR To Date is not entered
      *   |- c2    : DTL.Date To               USR is Not Entered
      *   |- c3    : DTL.YEAR 1 USR is equal to zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #DFDDT    IFEQ *ZERO                      *IF
     C           #DJFDT    IFEQ *ZERO                      *IF
     C           #DSINX    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Setup message data for message
      * Send message 'Date must be entered'
     C                     MOVEL'USR0231' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
      * Validate Week ending date as a Saturday     1/3/3
      * CASE: DTL.USR To Date is Entered
     C           #DFDDT    IFNE *ZERO                      *IF
      * RTV Week Begin/End Dts RT - Calendar  * 
     C                     EXSR SDRVGN
      * CASE: PAR.Day of Week is Saturday
     C           P4A9ST    IFEQ '7'                        *IF
      * 5/16/01  Include Saturday, so subtract 6 days for the From date
      * DTL.USR From Date = DTL.USR To Date + CON.-6 *DAYS
     C           #DFDDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #DBDDT
     C                     ELSE
     C           XDINDT    SUB  1000000   #DBDDT
     C                     END
     C                     MOVEL'Y'       WUB8ST           Status - Y or N
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Convert USR To Date to display format
      * Convert date
     C           1000000   ADD  #DFDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0002
      * Send message 'Week End Date must be Sat'
     C                     MOVEL'USR2427' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * If Month ending date, set from date  1/3/3
      * CASE: DTL.Date To               USR is Entered
     C           #DJFDT    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUV6CD           Date To Alpha
     C                     MOVEL#DJFDT    WUV6CD           Date To Alpha
     C                     MOVELWUV6CD    WUY7TX           Text USR 5
     C                     Z-ADD*ZERO     ZQ      50
     C           WUY7TX    CAT  '01':ZQ   WUR4TX    P      Date (Alpha) US
     C                     MOVE WUR4TX    #DBDDT           USR From Date
     C                     MOVEL'N'       WUB8ST           Status - Y or N
     C                     END                             *FI
      * If w/e or m/e and year entered - blank out year        11/01/2006
      * CASE:
      *  - c1ANDc2ORc3ANDc4
      *   |- c1    : DTL.USR To Date is Entered
      *   |- c2    : DTL.YEAR 1 USR is Greater than zero
      *   |- c3    : DTL.Date To               USR is Entered
      *   |- c4    : DTL.YEAR 1 USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #DFDDT    IFNE *ZERO                      *IF
     C           #DSINX    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           #DJFDT    IFNE *ZERO                      *IF
     C           #DSINX    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADD*ZERO     #DSINX           YEAR 1 USR
     C                     END                             *FI
      * If Year is entered, set from date          11/01/2006 LJB
      * CASE: DTL.YEAR 1 USR is Greater than zero
     C           #DSINX    IFGT *ZERO                      *IF
      * ** numeric to alpha then extract 2 digit year
     C                     MOVEL*BLANK    WUT9TX           Year Alpha (YYY
     C                     MOVEL#DSINX    WUT9TX           Year Alpha (YYY
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00004
     C           ZQ        ORGT 00004
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWUT9TX:ZQ WUUATX    P  90  Year Alpha (YY)
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * ** create valid date for first of the year
     C                     Z-ADD*ZERO     ZQ      50
     C           '1'       CAT  WUUATX:ZQ WUR4TX    P      Date (Alpha) US
     C                     Z-ADD*ZERO     ZQ      50
     C           WUR4TX    CAT  '0101':ZQ WUR4TX    P      Date (Alpha) US
     C                     MOVE WUR4TX    #DBDDT           USR From Date
      * ** create valid date for last of the year
     C                     MOVEL*BLANK    WUR4TX           Date (Alpha) US
     C                     Z-ADD*ZERO     ZQ      50
     C           '1'       CAT  WUUATX:ZQ WUR4TX    P      Date (Alpha) US
     C                     Z-ADD*ZERO     ZQ      50
     C           WUR4TX    CAT  '1231':ZQ WUR4TX    P      Date (Alpha) US
      * ** convert to valid numeric, then convert to 15.5 to pass
     C                     MOVE WUR4TX    WUOADT           Thru Date
      * WRK.Thru Date Pass        USR = WRK.Thru Date             USR
     C                     Z-ADDWUOADT    WUAJAG           Thru Date Pass
     C                     MOVEL'N'       WUB8ST           Status - Y or N
     C                     END                             *FI
      * Validate state code
      * CASE: DTL.USR State Code is State code not Blanks
     C           #DV9CD    IFNE *BLANK                     *IF
      * RTV State Description  RT - State  * 
     C                     EXSR SERVGN
      * CASE: DTL.State Description is equal to blank
     C           #DHSNA    IFEQ *BLANK                     *IF
      * Send message 'State                  NF'
     C                     MOVEL'USR0005' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate Warehouse 1, if entered                      E000528
      * CASE: DTL.Warehouse 1 USR is Entered
     C           #DZUCD    IFNE *BLANK                     *IF
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DZUCD    WL0003    P      Warehouse Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    #DTIT1    P      Warehouse Descr
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate Warehouse 2, if entered                      E000528
      * CASE: DTL.Warehouse 2 USR is Entered
     C           #DZVCD    IFNE *BLANK                     *IF
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DZVCD    WL0003    P      Warehouse Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    #DTJT1    P      Warehouse Descr
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9940  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate Warehouse 3, if entered                      E000528
      * CASE: DTL.Warehouse 3 USR is Entered
     C           #DZWCD    IFNE *BLANK                     *IF
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DZWCD    WL0003    P      Warehouse Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    #DTKT1    P      Warehouse Descr
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9941  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate Warehouse 4, if entered                      E000528
      * CASE: DTL.Warehouse 4 USR is Entered
     C           #DZXCD    IFNE *BLANK                     *IF
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DZXCD    WL0003    P      Warehouse Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    #DTLT1    P      Warehouse Descr
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9942  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate Warehouse 5, if entered                      E000528
      * CASE: DTL.Warehouse 5 USR is Entered
     C           #DZYCD    IFNE *BLANK                     *IF
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DZYCD    WL0003    P      Warehouse Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    #DTMT1    P      Warehouse Descr
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9943  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate Warehouse 6, if entered                      E000528
      * CASE: DTL.Warehouse 6 USR is Entered
     C           #DZZCD    IFNE *BLANK                     *IF
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DZZCD    WL0003    P      Warehouse Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    #DTNT1    P      Warehouse Descr
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate Warehouse 7, if entered                      E000528
      * CASE: DTL.Warehouse 7 USR is Entered
     C           #DZ0CD    IFNE *BLANK                     *IF
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DZ0CD    WL0003    P      Warehouse Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    #DTOT1    P      Warehouse Descr
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9945  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate Warehouse 8, if entered                      E000528
      * CASE: DTL.Warehouse 8 USR is Entered
     C           #DZ1CD    IFNE *BLANK                     *IF
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DZ1CD    WL0003    P      Warehouse Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    #DTPT1    P      Warehouse Descr
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9946  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate Warehouse 9, if entered                      E000528
      * CASE: DTL.Warehouse 9 USR is Entered
     C           #DZ2CD    IFNE *BLANK                     *IF
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DZ2CD    WL0003    P      Warehouse Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    #DTQT1    P      Warehouse Descr
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9947  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate Warehouse 10, if entered                      E000528
      * CASE: DTL.Warehouse 10 USR is Entered
     C           #DZ3CD    IFNE *BLANK                     *IF
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DZ3CD    WL0003    P      Warehouse Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    #DTRT1    P      Warehouse Descr
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9948  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END
      * Report Type -Sch or Deadl required
     C           #DPQSX    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9934  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     Z-ADDP2AJAG    #PAJAG           Thru Date Pass
     C                     MOVELP1AJCD    #PAJCD           Warehouse Code
     C                     MOVELP1DNCD    #PDNCD           Application Cod
     C                     MOVELP1B8NA    #PB8NA           System Date For
     C                     MOVELP1AJVN    #PAJVN           User Profile Na
     C                     MOVELP1I6ST    #PI6ST           Allow Multi-Com
     C                     MOVELP1MPNA    #PMPNA           Default Printer
     C                     MOVELP2G3TX    #PG3TX           PRT Description
     C                     MOVELP2WRST    #PWRST           PRT Printer Dev
     C                     MOVELP2WSST    #PWSST           PRT Hold Output
     C                     MOVELP2WTST    #PWTST           PRT Save Output
     C                     Z-ADDP2DYNB    #PDYNB           PRT Number of C
     C                     MOVELP2WUST    #PWUST           PRT Night Queue
     C                     MOVELP2BVVN    #PBVVN           PRT Night Queue
     C                     Z-ADDP2AJAA    #PAJAA           Company Number
     C                     Z-ADDP2AJAD    #PAJAD           From Date Pass
     C                     Z-ADDP2M8NB    #PM8NB           System Value Nu
     C                     Z-ADDP1AIC3    #1AIC3           Company Number
     C                     Z-ADD*ZERO     #DBDDT           USR From Date
     C                     Z-ADD*ZERO     #DBEDT           USR Through Dat
     C                     MOVEL*BLANK    #1KXCD           Country Code
     C                     Z-ADD*ZERO     #DFDDT           USR To Date
      * Clear external version also
     C                     Z-ADD*ZERO     VDFDDT
     C                     Z-ADD*ZERO     #DJFDT           Date To
      * Clear external version also
     C                     Z-ADD*ZERO     VDJFDT
     C                     Z-ADD*ZERO     #DSINX           YEAR 1 USR
     C                     MOVEL*BLANK    #DPQSX           Report Type -Sc
     C                     Z-ADD*ZERO     #DATNB           Company Number
     C                     MOVEL*BLANK    #DAPTX           Company Name
     C                     MOVEL*BLANK    #DBZNA           Carrier Code
     C                     MOVELP3ADTX    #1ADTX           Name
     C                     MOVELP5VDST    #PVDST           Load Type
     C                     MOVEL*BLANK    #DNONA           Load Type Desc
     C                     MOVEL*BLANK    #DV9CD           USR State Code
     C                     MOVEL*BLANK    #DHSNA           State Descripti
     C                     MOVEL*BLANK    #DZUCD           Warehouse 1 USR
     C                     MOVEL*BLANK    #DTIT1           Description 1 u
     C                     MOVEL*BLANK    #DZVCD           Warehouse 2 USR
     C                     MOVEL*BLANK    #DTJT1           Description 2 u
     C                     MOVEL*BLANK    #DZWCD           Warehouse 3 USR
     C                     MOVEL*BLANK    #DTKT1           Description 3 u
     C                     MOVEL*BLANK    #DZXCD           Warehouse 4 USR
     C                     MOVEL*BLANK    #DTLT1           Description 4 u
     C                     MOVEL*BLANK    #DZYCD           Warehouse 5 USR
     C                     MOVEL*BLANK    #DTMT1           Description 5 u
     C                     MOVEL*BLANK    #DZZCD           Warehouse 6 USR
     C                     MOVEL*BLANK    #DTNT1           Description 6 u
     C                     MOVEL*BLANK    #DZ0CD           Warehouse 7 USR
     C                     MOVEL*BLANK    #DTOT1           Description 7 u
     C                     MOVEL*BLANK    #DZ1CD           Warehouse 8 USR
     C                     MOVEL*BLANK    #DTPT1           Description 8 u
     C                     MOVEL*BLANK    #DZ2CD           Warehouse 9 USR
     C                     MOVEL*BLANK    #DTQT1           Description 9 u
     C                     MOVEL*BLANK    #DZ3CD           Warehouse 10 US
     C                     MOVEL*BLANK    #DTRT1           Description 10
      * USER: Load screen
      * CASE: DTL.Company Number CDE is not equal to zero
     C           #DATNB    IFNE *ZERO                      *IF
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#DATNB    WL0001           Company Number
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #DAPTX    P      Name
     C                     END                             *FI
     C                     MOVEL'1'       #DPQSX           Report Type -Sc
      * ** Calculate the current 4 digit year
     C                     EXSR UASUBR                     ** Calculate th
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert USR To Date to display format
      * Convert date
     C           1000000   ADD  #DFDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDFDDT
      * Convert Date To               USR to display format
      * Convert date
     C           1000000   ADD  #DJFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDJFDT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADDWL0001    ABAIC3           Company Number
      * Establish starting position
     C           KRSSA     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Name
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    WL0002           Name
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Plant Co Status   RT - Company Defaults Internal  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBAIC3           Company Number
      * Setup key
     C                     Z-ADD#DATNB    WBAIC3           Company Number
      * Establish starting position
     C           KRSSB     CHAIN@JYRECE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2025' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0001           Plant Company S
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBYISX    YL0001           Plant Company S
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Carrier Name       RT - OM Carrier  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WCBZNA           Carrier Code
      * Setup key
     C                     MOVEL#DBZNA    WCBZNA           Carrier Code
      * Establish starting position
     C           KRSSC     CHAIN@FFREBF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1180' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #1ADTX           Name
     C                     MOVEL*BLANK    WUVSST           Record Status
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCADTX    #1ADTX           Name
     C                     MOVELWCVSST    WUVSST           Record Status
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Week Begin/End Dts RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSD01           Company Number
     C           *LIKE     DEFN WDBCDT    WQSD02           Post to G/L Dat
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Post to G/L Dat
      * Setup key
     C                     Z-ADDP1AIC3    WQSD01           Company Number
     C                     Z-ADD#DFDDT    WQSD02           Post to G/L Dat
      * Establish starting position
     C           KRSSD     SETLL@AFREYY                    *
     C           KRSSD     READE@AFREYY                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWDA9ST    P4A9ST           Day of Week
     C           KRSSD     READE@AFREYY                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV State Description  RT - State  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WEBGCD           State Code
      * Setup key
     C                     MOVEL#DV9CD    WEBGCD           State Code
      * Establish starting position
     C           KRSSE     CHAIN@ACREAH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0005' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #DHSNA           Description
     C                     MOVEL*BLANK    YL0002           Record Status
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWEAUNA    #DHSNA           Description
     C                     MOVELWEVSST    YL0002           Record Status
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Whse Descrip       RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WFAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0003    WFAJCD           Warehouse Code
      * Establish starting position
     C           KRSSF     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0004           Warehouse Descr
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELWFF8NA    WL0004           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WGAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0001    WGAJVN           User Profile Na
      * Establish starting position
     C           KRSSG     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWGI6ST    P1I6ST           Allow Multi-Com
     C                     MOVELWGMPNA    P1MPNA           Default Printer
     C                     MOVELWGBCCD    WUBCCD           Salesperson Cod
     C                     Z-ADDWGAIC3    YL0003           Company Number
     C                     MOVELWGBUVN    WN0002           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - User Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WHAJVN           User Profile Na
     C                     KFLD           WHDNCD           Application Cod
      * Setup key
     C                     MOVELWL0005    WHAJVN           User Profile Na
     C                     MOVELWL0006    WHDNCD           Application Cod
      * Establish starting position
     C           KRSSH     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWHAIC3    WL0007           Company Number
     C                     MOVELWHAJCD    WL0008           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WIDNCD    WQSI01           Application Cod
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSI01           Application Cod
     C                     MOVEL'OMS'     WQSI01           Application Cod
      * Establish starting position
     C           KRSSI     SETLL@DNRESF                    *
     C           KRSSI     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           WIRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELWIAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SJRVGN
     C                     END                             *FI
     C           KRSSI     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WIDNCD    WQSJ01           Application Cod
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Application Cod
      * Setup key
     C                     MOVELWIRSCD    WQSJ01           Application Cod
      * Establish starting position
     C           KRSSJ     SETLL@DNRESF                    *
     C           KRSSJ     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWIAUNA    WUAUNA           Description
     C           KRSSJ     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ** Calculate the current 4 digit year
      *================================================================
     C                     MOVEL##JYY     WUKTTX           Alpha Zeros 2
     C                     Z-ADD1         WUHKNX           Numeral 1
      * CASE: JOB.*Job century EQ WRK.Numeral 1             USR
     C           ##JCC     IFEQ WUHKNX                     *IF
     C                     Z-ADD20        WUCTRY           Century. . . .
     C                     MOVELWUCTRY    WUODTX           Alpha Zeroes 2.
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD19        WUCTRY           Century. . . .
     C                     MOVELWUCTRY    WUODTX           Alpha Zeroes 2.
     C                     END                             *FI
     C                     Z-ADD*ZERO     ZQ      50
     C           WUODTX    CAT  WUKTTX:ZQ WUT9TX    P      Year Alpha (YYY
     C                     MOVE WUT9TX    #DSINX           YEAR 1 USR
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C           YPMTFD    IFEQ '#1AIC3'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1AIC3' defaulted for 'Company Number'.
     C                     CALL 'PDL7SRR'              90  SEL Co - Rtn 0
     C                     PARM *BLANK    W0RTN   7
     C           #1AIC3    PARM #1AIC3    WQ0044  30       Company Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDL7SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1AIC3    IFNE *ZERO                      Company Number
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         VBCKRL    BEGSR
      *================================================================
      * Check reference to Country
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1KXCD    WK1X01  1
     C           WK1X01    IFEQ '?'                        Country Code
     C           YPMTFD    OREQ '#1KXCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1KXCD' defaulted for 'Country Code'.
     C                     CALL 'PDEGSRR'              90  SEL Country Act
     C                     PARM *BLANK    W0RTN   7
     C           #1KXCD    PARM #1KXCD    WQ0045  6        Country Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDEGSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1KXCD    IFNE *BLANK                     Country Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VBEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1KXCD    IFEQ *BLANK                     Country Code
     C                     GOTO VBEXIT
     C                     END
      *
     C           KLVBWA    KLIST
     C                     KFLD           WAKXCD           Country Code
      * Setup key
     C                     MOVEL#1KXCD    WAKXCD
     C           KLVBWA    CHAIN@E5REVS              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VBEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VBEXIT
     C                     END
      * Send message 'Country                NF'
     C                     MOVEL'USR1158' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR1158' W0RTN
      *================================================================
     CSR         VBEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
     C           *IN25     IFEQ '0'
      * Bypass when help done
     C                     SETOF                     94    *
     C           W0OVR0    IFEQ '1'
     C           W0OVR0    OREQ '0'
     C           *IN99     ANDEQ'0'
      * If override or no error
     C                     SETON                     94    *
     C                     Z-ADDW0ROW0    ZZCSRW
     C                     Z-ADDW0COL0    ZZCSCL
     C                     END
     C                     END
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
     C                     SETOF                     94    *
     C                     Z-ADD0         W0ROW0  30
     C                     Z-ADD0         W0COL0  30
     C                     MOVE '2'       W0OVR0  1
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           ZHCSRW    IFEQ 008
     C           ZHCSCL    ANDEQ028
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#DPQSX'  YPMTFD           Report Type -Sc
     C                     END
      *
     C           ZHCSRW    IFEQ 011
     C           ZHCSCL    ANDEQ028
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#PVDST'  YPMTFD           Load Type
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1AJCD           Warehouse Code
     C                     Z-ADD*ZERO     P1AIC3           Company Number
     C                     MOVEL*BLANK    P1DNCD           Application Cod
     C                     MOVEL*BLANK    P1B8NA           System Date For
     C                     MOVEL*BLANK    P1AJVN           User Profile Na
     C                     MOVEL*BLANK    P1I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P1MPNA           Default Printer
     C                     MOVEL*BLANK    P2G3TX           PRT Description
     C                     MOVEL*BLANK    P2WRST           PRT Printer Dev
     C                     MOVEL*BLANK    P2WSST           PRT Hold Output
     C                     MOVEL*BLANK    P2WTST           PRT Save Output
     C                     Z-ADD*ZERO     P2DYNB           PRT Number of C
     C                     MOVEL*BLANK    P2WUST           PRT Night Queue
     C                     MOVEL*BLANK    P2BVVN           PRT Night Queue
     C                     Z-ADD*ZERO     P2AJAA           Company Number
     C                     Z-ADD*ZERO     P2AJAD           From Date Pass
     C                     Z-ADD*ZERO     P2AJAG           Thru Date Pass
     C                     Z-ADD*ZERO     P2M8NB           System Value Nu
     C                     MOVEL*BLANK    P3ADTX           Name
     C                     MOVEL*BLANK    P4A9ST           Day of Week
     C                     MOVEL*BLANK    P5VDST           Load Type
     C                     Z-ADD*ZERO     P6SINX           YEAR 1 USR
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Thru Date Pass        USR
     C                     Z-ADD*ZERO     WUAJAG 155
      * Define work field Current System Date
     C                     Z-ADD*ZERO     WUSDTE 155
      * Define work field Status - Y or N
     C                     MOVEL*BLANK    WUB8ST  1
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBXXTM           Departure Time
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field Record Status
     C                     MOVEL*BLANK    WUVSST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCEZNB           Telephone Numbe
     C                     Z-ADD*ZERO     WCEEDT           Carrier Last Us
     C                     Z-ADD*ZERO     WCNRVA           Pallet Balance
     C                     Z-ADD*ZERO     WCNSVA           Long hook balan
     C                     Z-ADD*ZERO     WCNTVA           Short hook bala
     C                     Z-ADD*ZERO     WCNUVA           Tub Balance
     C                     Z-ADD*ZERO     WCS8NB           Home Phone
     C                     Z-ADD*ZERO     WCS9NB           Other Phone
     C                     Z-ADD*ZERO     WCNMVA           Flat Rate
     C                     Z-ADD*ZERO     WCNOVA           Rate Per Pound
     C                     Z-ADD*ZERO     WCNPVA           Unused Rate Per
     C                     Z-ADD*ZERO     WCNQVA           Miscellaneous C
     C                     Z-ADD*ZERO     WCQXNB           Unused Mile Ran
     C                     Z-ADD*ZERO     WCQ1NB           Unused Mile Ran
     C                     Z-ADD*ZERO     WCMRNG           Unused Mile Ran
     C                     Z-ADD*ZERO     WCMRNE           Unused Mile Ran
     C                     Z-ADD*ZERO     WCRFNB           Unused Mile Ran
     C                     Z-ADD*ZERO     WCMREG           Unused Mile Ran
     C                     Z-ADD*ZERO     WCBQPR           Unused Mile Rat
     C                     Z-ADD*ZERO     WCBRPR           Unused Mile Rat
     C                     Z-ADD*ZERO     WCBSPR           Unused Mile Rat
     C                     Z-ADD*ZERO     WCBTPR           Unused Mile Rat
     C                     Z-ADD*ZERO     WCBUPR           Unused Mile Rat
     C                     Z-ADD*ZERO     WCBVPR           Unused Mile Rat
     C                     Z-ADD*ZERO     WCDJWG           Unused Weight R
     C                     Z-ADD*ZERO     WCDKWG           Unused Weight R
     C                     Z-ADD*ZERO     WCDLWG           Unused Weight R
     C                     Z-ADD*ZERO     WCDMWG           Unused Weight R
     C                     Z-ADD*ZERO     WCDNWG           Unused Weight R
     C                     Z-ADD*ZERO     WCDOWG           Unused Weight R
     C                     Z-ADD*ZERO     WCB2PR           Unused Weight R
     C                     Z-ADD*ZERO     WCB3PR           Unused Weight R
     C                     Z-ADD*ZERO     WCB4PR           Unused Weight R
     C                     Z-ADD*ZERO     WCB5PR           Unused Weight R
     C                     Z-ADD*ZERO     WCB6PR           Unused Weight R
     C                     Z-ADD*ZERO     WCB7PR           Unused Weight R
     C                     Z-ADD*ZERO     WCAAC7           Contact Number
     C                     Z-ADD*ZERO     WCTENO           Carrier Unused
     C                     Z-ADD*ZERO     WCAOFC           Amount of Cargo
     C                     Z-ADD*ZERO     WCAOLI           Amount of Liabi
     C                     Z-ADD*ZERO     WCKHDT           Date of Expirat
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDBCDT           Post to G/L Dat
     C                     Z-ADD*ZERO     WDCQNB           Julian Date
     C                     Z-ADD*ZERO     WDESNB           Accounting Year
     C                     Z-ADD*ZERO     WDETNB           Accounting Peri
     C                     Z-ADD*ZERO     WDBZNB           OM Week
     C                     Z-ADD*ZERO     WDEINB           Week Number
     C                     Z-ADD*ZERO     WDAQNB           Billing Cycle
     C                     Z-ADD*ZERO     WDOJDT           HPS PIC Date
     C                     Z-ADD*ZERO     WDNQNX           HPS Calendar Ye
     C                     Z-ADD*ZERO     WDNRNX           HPS Calendar We
     C                     Z-ADD*ZERO     WDOKDT           Calendar Unused
     C                     Z-ADD*ZERO     WDOLDT           Calendar Unused
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Define work field Date To Alpha         USR
     C                     MOVEL*BLANK    WUV6CD  7
      * Define work field Text USR 5
     C                     MOVEL*BLANK    WUY7TX  5
      * Define work field Date (Alpha) USR
     C                     MOVEL*BLANK    WUR4TX  7
      * Define work field Year Alpha (YYYY) USR
     C                     MOVEL*BLANK    WUT9TX  4
      * Define work field Year Alpha (YY) USR
     C                     MOVEL*BLANK    WUUATX  2
      * Define work field Thru Date             USR
     C                     Z-ADD*ZERO     WUOADT  70
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WEAATM           Job Time
     C                     Z-ADD*ZERO     WEAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WFDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WFBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WFBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WFBUC3           WHS Sched Prod
     C                     Z-ADD*ZERO     WFBVC3           WHS Inventory C
     C                     Z-ADD*ZERO     WFAATM           Job Time
     C                     Z-ADD*ZERO     WFAXDT           Job Date
      * Define work field Alpha Zeros 2
     C                     MOVEL*BLANK    WUKTTX  2
      * Define work field Numeral 1             USR
     C                     Z-ADD*ZERO     WUHKNX  10
      * Define work field Century. . . . . . . . .
     C                     Z-ADD*ZERO     WUCTRY  20
      * Define work field Alpha Zeroes 2.2      USR
     C                     MOVEL*BLANK    WUODTX  2
      * Define work field Salesperson Code
     C                     MOVEL*BLANK    WUBCCD  3
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WGNLNB           Entity Number
     C                     Z-ADD*ZERO     WGAIC3           Company Number
     C                     Z-ADD*ZERO     WGAATM           Job Time
     C                     Z-ADD*ZERO     WGAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WHAIC3           Company Number
     C                     Z-ADD*ZERO     WHAATM           Job Time
     C                     Z-ADD*ZERO     WHAXDT           Job Date
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WIAATM           Job Time
     C                     Z-ADD*ZERO     WIAXDT           Job Date
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize *SET CURSOR data
     C                     MOVE 'Y'       YSETCS  1
     C                     EXSR Y9CLR
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      * Define local variables for subroutine SARVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002 30
      * Define local variables for subroutine SFRVGN.
     C                     MOVEL*BLANK    WL0003  3
     C                     MOVEL*BLANK    WL0004 30
      * Define local variables for subroutine SHRVGN.
     C                     MOVEL*BLANK    WL0005 10
     C                     MOVEL*BLANK    WL0006  6
     C                     Z-ADD*ZERO     WL0007  30
     C                     MOVEL*BLANK    WL0008  3
      * Define local work field Plant Company Sts
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Record Status
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0003  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0004  3
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      *
     C                     MOVEL*BLANK    WN0001 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0001           User Profile Na
      *
     C                     MOVEL*BLANK    WN0002 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SGRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,004                    *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0003           User Profile Na
     C                     MOVEL'OMS'     ZA0004           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0002    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0001    WL0005    P      User Profile Na
     C                     MOVEL'OMS'     WL0006    P      Application Cod
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    P1AIC3           Company Number
     C                     MOVELWL0008    YL0004    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0002    WL0005    P      User Profile Na
     C                     MOVEL'OMS'     WL0006    P      Application Cod
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    P1AIC3           Company Number
     C                     MOVELWL0008    YL0004    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0004    P1AJCD           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0005           User Profile Na
     C                     MOVEL'OMS'     ZA0006           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0003    IFNE 0                          *IF
     C                     Z-ADDYL0003    P1AIC3           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0004    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C           P1AJCD    PARM *BLANK    WQ0046  3        Warehouse Code
     C                     PARM YL0003    WQ0047  30       Shipping Compan
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SIRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL*BLANK    P2WRST           PRT Printer Dev
     C                     MOVEL'N'       P2WUST           PRT Night Queue
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** W0BEG
01052010840130802076023320233902588
02595028440285103100031070336303370
03619036260387503882041310413804387
04394046430465004899049060515505162
05411054180566705674
** W0END
01059010910131102076023340236802590
02624028440285703101031360336503399
03621036550387703911041330416704389
04423046450467904901049350515705191
05413054470566905703
** W0NAM
VDFDDT    VDJFDT    #DSINX    #DPQSX    #DATNB    #DAPTX    #DBZNA
#1ADTX    #PVDST    #DNONA    #DV9CD    #DHSNA    #DZUCD    #DTIT1
#DZVCD    #DTJT1    #DZWCD    #DTKT1    #DZXCD    #DTLT1    #DZYCD
#DTMT1    #DZZCD    #DTNT1    #DZ0CD    #DTOT1    #DZ1CD    #DTPT1
#DZ2CD    #DTQT1    #DZ3CD    #DTRT1
** @CN
00001 PDF5PCLP
00002 LOAD TALLY REPORT
00003 USR0003
00004 Y2U0005
