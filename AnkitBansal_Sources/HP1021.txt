      *
      * SYSTEM:      Hog Production
      * PROGRAM:     HP1021
      * TITLE:       Revise BGF Weekly Wean Projections
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     07/01/04
      *
      * FUNCTION: This is an edit record function that revises the BGF Weekly Wean Projections
      *           data for a farm/date.
      *
      *           The field 'mode' contains the value passed into
      *           this program from the calling program.  The field
      *           'd1mode' is the screen field that displays the
      *           value of 'mode'.  Mode will be CREATE, REVISE or
      *           DELETE.           Once in the program, mode and
      *           d1mode will never change.  However, the action
      *           being performed can change depending on the function
      *           keys the user takes.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd1021   cf   e             workstn infds(iofeed)
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsl086a   uf a e           k disk    infds(dbfeed)
      *    BGF weekly wean projections
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D action          s                   like(mode)
     D maxmsg          s              2  0  inz(20)
     D notflg          s              1    inz('N')
      *
      *
      * Control/flag fields
      *
     D x               s              1  0
      *
      *
      * Fields to save screen data for file updates.
      *
     D svrpwedt        s                   like(pwrpwedt)
     D svpwwedt1       s                   like(pwrpwedt)
     D svpwwedt2       s                   like(pwrpwedt)
     D svfsbo          s                   like(fsfsbo)
      *
      *
      * Work fields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkcrupdt        s              8  0
      *
      *
      * Parm fields
      *
     D xxaist          s                   like(fsaist)
      *
     D xxcdyr          s                   like(pwrpcdyr)
     D xxcdwk          s                   like(pwrpcdwk)
     D xxwbdt          s                   like(pwrpwedt)
     D xxwedt          s                   like(pwrpwedt)
     D xxrpwedt        s                   like(pwrpwedt)
     D xxmmddyy        s                   like(d1rpwemdy)
      *
     D xxalphfscd      s              5a
     D xxfsbo          s                   like(fsfsbo)
     D xxfscd          s                   like(fsfscd)
     D xxfsnm          s                   like(fsfsnm)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /eject
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * If the user is in CREATE mode, clear the fields on screen 1
      *
     C                   select
     C                   when      mode = create
     C                   exsr      $clear1
      *
      *
      * If incoming mode is REVISE or DELETE, then retrieve the database
      * records using the parms passed in.  Do not lock the records.
      * Typically, in DELETE mode these retrieved values will not be
      * displayed. However, if there is an error on the delete action
      * the panel will be displayed.
      *
      * There will be 2 database records for EACH farm/report week-ending date.
      * So, get them both to populate the screen.
      *
     C                   when      mode = revise or mode = delete
      *
     C     key01         chain(n)  hsl086a                            92
     C                   if        *in92 = *on                                  If not found
     C                   move      yes           notflg
     C                   add       1             error
     C                   movel     'HS09008'     mgid(e)
     C                   else
      *
     C     key01         setll     hsl086a
     C                   do        2             x
     C     key01         reade(n)  hsl086a                                92
     C                   if        *in92 = *off
     C                   exsr      $pop1
     C                   endif
     C                   enddo
     C                   endif                                                  If not found
     C                   endsl
      *
      * If the user is deleting, go on to the update routine and don't
      * display the screen. Otherwise, display screen 1.
      *
     C                   if        error = 0 and action = delete
     C                   exsr      $update
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Clear the fields on screen 1
      *---------------------------------------------------------------
      *
     C     $clear1       begsr
      *
     C                   z-add     0             svrpwedt
     C                   z-add     0             svpwwedt1
     C                   z-add     0             svpwwedt2
      *
     C                   z-add     0             d1fscd
     C                   move      *blank        d1fsnm
      *
     C                   z-add     0             d1supwhd1
     C                   z-add     0             d1mopwhd1
     C                   z-add     0             d1tupwhd1
     C                   z-add     0             d1wepwhd1
     C                   z-add     0             d1thpwhd1
     C                   z-add     0             d1frpwhd1
     C                   z-add     0             d1sapwhd1
     C                   z-add     0             d1topwhd1
     C                   z-add     0             d1pwsohd1
     C                   z-add     0             d1socuhd1
     C                   z-add     0             d1bocuhd1
      *
     C                   z-add     0             d1topwhd2
     C                   z-add     0             d1pwsohd2
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Populate the Screen 1 fields
      *---------------------------------------------------------------
      *
     C     $pop1         begsr
      *
      * FIRST RECORD--projections for 1 week out
      *
     C                   select
     C                   when      x = 1
     C                   z-add     pwpwcdwk      d1pwcdwk1
     C                   z-add     pwpwcdyr      d1pwcdyr1
     C                   z-add     pwpwwedt      svpwwedt1
      *
     C     *iso          test(d)                 pwpwwedt               92
     C                   if        *in92 = *off                                 If OK date
     C                   move      pwpwwedt      wkisodate
     C     *mdy          move      wkisodate     d1pwwemdy1
     C                   endif                                                  If OK date
      *
      * Piglets weaned: Sunday thru Saturday
      *
     C                   z-add     pwsupwhd      d1supwhd1
     C                   z-add     pwmopwhd      d1mopwhd1
     C                   z-add     pwtupwhd      d1tupwhd1
     C                   z-add     pwwepwhd      d1wepwhd1
     C                   z-add     pwthpwhd      d1thpwhd1
     C                   z-add     pwfrpwhd      d1frpwhd1
     C                   z-add     pwsapwhd      d1sapwhd1
      *
      * Total piglets weaned
      * Sows weaned
     C                   z-add     pwtopwhd      d1topwhd1
     C                   z-add     pwpwsohd      d1pwsohd1
      *
      * Sows/boars culled
     C                   z-add     pwsocuhd      d1socuhd1
     C                   z-add     pwbocuhd      d1bocuhd1
      *
      * SECOND RECORD -projections for 2 weeks out
      *
     C                   when      x = 2
     C                   z-add     pwpwcdwk      d1pwcdwk2
     C                   z-add     pwpwcdyr      d1pwcdyr2
     C                   z-add     pwpwwedt      svpwwedt2
      *
     C     *iso          test(d)                 pwpwwedt               92
     C                   if        *in92 = *off                                 If OK date
     C                   move      pwpwwedt      wkisodate
     C     *mdy          move      wkisodate     d1pwwemdy2
     C                   endif                                                  If OK date
      *
      * Total piglets weaned
      * Sows weaned
     C                   z-add     pwtopwhd      d1topwhd2
     C                   z-add     pwpwsohd      d1pwsohd2
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Perform operator I/O for screen 1
      *---------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Set the indicators to control screen fields
      *
     C                   exsr      $ind
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT
      *
     C                   write     hp1021k1
     C                   write     hp1021ec
     C                   exfmt     hp1021r1
      *
      * Clear all messages
      *
     C                   exsr      $clmsg
      *
      *
      * Reset action to be equal to the incoming mode.  This is required
      * in case the user took F11-Delete and got an error on the
      * deletion and now needs to be able to change the record and take
      * an action other than delete
      *
     C                   eval      action = mode
      *
      * Process user's entry and set routine
      *
     C                   select                                                 Select response
     C                   when      *in03 = *on                                  F3-exit
     C                   move      '03'          rtncd
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4=prompt
     C                   exsr      $f4s1
      *
     C                   when      *in05 = *on                                  F5=refresh
     C                   movel     set1          routne
      *
     C                   when      notflg = yes                                 Record gone
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09008'     mgid(e)
     C                   endif
     C                   movel     scrn1         routne
      *
     C                   when      *in09 = *on                                  F9=accept
     C                   exsr      $edit1
      *
     C                   if        error = 0
     C                   exsr      $update
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      *in11 = *on or mode = delete                 F11-delete
     C                   eval      action = delete
     C                   exsr      $update
     C                   other
      *
      * User has pressed ENTER on screen 1
      *
     C                   exsr      $edit1
     C                   eval      routne = scrn1
     C                   endsl                                                  Select response
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Edit screen 1
      *---------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * When creating, validate:
      *   1) farm site
      *   2) report calendar year/week
      *
     C                   if        mode = create                                If create
     C                   exsr      $fscd
     C                   exsr      $rpcdyrwk
     C                   endif                                                  If create
      *
      * Always validate:
      *     Projected piglet weaned head for Sunday thru Saturday
      *
      *     Sunday
     C                   if        d1supwhd1  < 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *     Monday
     C                   if        d1mopwhd1 < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *      Tuesday
     C                   if        d1tupwhd1 < 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *      Wednesday
     C                   if        d1wepwhd1 < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *      Thursday
     C                   if        d1thpwhd1 < 0
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *       Friday
     C                   if        d1frpwhd1 < 0
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *        Saturday
     C                   if        d1sapwhd1 < 0
     C                   seton                                        70
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Sum the Sunday-Saturday head values to arrive at Total Projected
      * Piglets Weaned for Week 1.
      *
     C                   z-add     d1supwhd1     d1topwhd1
     C                   add       d1mopwhd1     d1topwhd1
     C                   add       d1tupwhd1     d1topwhd1
     C                   add       d1wepwhd1     d1topwhd1
     C                   add       d1thpwhd1     d1topwhd1
     C                   add       d1frpwhd1     d1topwhd1
     C                   add       d1sapwhd1     d1topwhd1
      *
      * Week 1 Weaned Sows
      *
     C                   if        d1pwsohd1 < 0
     C                   seton                                        71
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Week 1 Sow Culls
      *
     C                   if        d1socuhd1 < 0
     C                   seton                                        74
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Week 1 Boar Culls
      *
     C                   if        d1bocuhd1 < 0
     C                   seton                                        75
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Week 2 total piglets weaned
      *
     C                   if        d1topwhd2 < 0
     C                   seton                                        72
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Week 2 Weaned Sows
      *
     C                   if        d1pwsohd2 < 0
     C                   seton                                        73
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Edit farm site (in create mode only)
      *---------------------------------------------------------------
      *
     C     $fscd         begsr
      *
     C                   move      *blank        d1fsnm
      *
     C                   select
     C                   when      d1fscd = 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move(p)   fsfsbo        svfsbo
     C                   move(p)   fsfsnm        d1fsnm
      *
      * Must be in the business office that the user entered on
      * on the Work With.
      *
     C                   if        fsfsbo <> xxfsbo                             If mismatch
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00158'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fsfsbo        mgw(6)
     C                   movea     xxfsbo        mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If mismatch
      *
      * Must be a BGF farm
      *
     C                   if        fsppcd <> 'BGF'                              If not BGF
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09137'     mgid(e)
     C                   endif
     C                   endif                                                  If not BGF
      *
      * Must be a Active farm
      *
     C                   if        fsaist = 'I'                                 If inactive
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS04760'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If inactive
      *
     C                   endif                                                  If bad farm
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate report calendar year and week (only in create mode)
      *---------------------------------------------------------------
      *
     C     $rpcdyrwk     begsr
      *
      *  Week
     C                   select
     C                   when      d1rpcdwk = 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1rpcdwk < 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endsl
      *
      * Year
     C                   select
     C                   when      d1rpcdyr = 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1rpcdyr < 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
      *
     C                   when      d1rpcdyr < 1994
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09028'
     C                   endif
     C                   endsl
      *
      * If year/week are OK, get date stuff for:
      *   Report week
      *   Week 1 out
      *   Week 2 out
      *
     C                   if        *in32 = *off and *in33 = *off                If year/week OK
     C                   exsr      $wedt
      *
     C                   if        d1rpwemdy = 0
     C                   seton                                        3233
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09221'
     C                   endif
     C                   else
     C                   exsr      $week1
     C                   exsr      $week2
     C                   endif
     C                   endif                                                  If year/week OK
      *
      * If farm/year/week are valid, check that no Weekly Wean Projection
      * record already exists for this date.
      *
     C                   if        *in31 = *off and                             If all good
     C                             *in32 = *off and
     C                             *in33 = *off
     C     key01         chain(n)  hsl086a                            92
     C                   if        *in92 = *off                                 If already exists
     C                   seton                                        313233
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01214'
     C                   endif
     C                   endif                                                  If already exists
     C                   endif                                                  If all good
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Retrieve week-ending date associated with year/week
      *----------------------------------------------------------------
      *
     C     $wedt         begsr
      *
     C                   call      'HP8016'
     C                   parm      d1rpcdyr      xxcdyr
     C                   parm      d1rpcdwk      xxcdwk
     C                   parm      0             xxwbdt
     C     svrpwedt      parm      0             xxwedt
      *
     C     *iso          test(d)                 xxwedt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      xxwedt        wkisodate
     C     *mdy          move      wkisodate     d1rpwemdy
     C                   else
     C                   z-add     0             d1rpwemdy
     C                   endif                                                  If OK date
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Get Week 1 date
      *----------------------------------------------------------------
      *
     C     $week1        begsr
      *
      * Add 7 days to the Report Week-ending date.
      *
     C                   movel     svrpwedt      wkisodate
     C                   adddur    7:*days       wkisodate
     C                   move      wkisodate     svpwwedt1
      *
      * Flip this date to MMDDYY format.
      *
     C     *iso          test(d)                 svpwwedt1              92
     C                   if        *in92 = *off                                 If OK date
     C                   move      svpwwedt1     wkisodate
     C     *mdy          move      wkisodate     d1pwwemdy1
     C                   endif                                                  If OK date
      *
      * Retrieve the Calendar Year/Week that go with this date.
      *
     C                   z-add     svpwwedt1     xxwedt
     C                   exsr      $rtvyrwk
      *
      * Issue an error message if the OMS Calendar file did not have a
      * record for the date.
      *
     C                   if        xxcdwk <> 0 and xxcdyr <> 0                  If good
     C                   z-add     xxcdwk        d1pwcdwk1
     C                   z-add     xxcdyr        d1pwcdyr1
     C                   else
      *
     C                   z-add     0             d1pwcdwk1
     C                   z-add     0             d1pwcdyr1
     C                   seton                                        3233
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01215'
     C                   endif
      *
     C                   endif                                                  If good
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Get Week 2 date
      *----------------------------------------------------------------
      *
     C     $week2        begsr
      *
      * Add 14 days to the Report Week-ending date.
      *
     C                   movel     svrpwedt      wkisodate
     C                   adddur    14:*days      wkisodate
     C                   move      wkisodate     svpwwedt2
      *
      * Flip this date to MMDDYY format.
      *
     C     *iso          test(d)                 svpwwedt2              92
     C                   if        *in92 = *off                                 If OK date
     C                   move      svpwwedt2     wkisodate
     C     *mdy          move      wkisodate     d1pwwemdy2
     C                   endif                                                  If OK date
      *
      * Retrieve the Calendar Year/Week that go with this date.
      *
     C                   z-add     svpwwedt2     xxwedt
     C                   exsr      $rtvyrwk
      *
      *
      * Issue an error message if the OMS Calendar file did not have a
      * record for the date.
      *
     C                   if        xxcdwk <> 0 and xxcdyr <> 0                  If good
     C                   z-add     xxcdwk        d1pwcdwk2
     C                   z-add     xxcdyr        d1pwcdyr2
     C                   else
      *
     C                   z-add     0             d1pwcdwk2
     C                   z-add     0             d1pwcdyr2
     C                   seton                                        3233
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01216'
     C                   endif
      *
     C                   endif                                                  If good
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Retrieve from OMS Calendar file the Calendar Year/Week for a Date
      *-------------------------------------------------------------------
      *
     C     $rtvyrwk      begsr
      *
     C                   call      'HP8010'
     C                   parm                    xxwedt
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Reset indicators for all screens
      *----------------------------------------------------------------
      *
     C     $ind          begsr
      *
      * The record has been deleted out from under the user.
      *
     C                   if        notflg = yes
     C                   seton                                        90
     C                   endif
      *
      *  Set up for mode
      *
     C                   select
     C                   when      d1mode = create
     C                   seton                                        61
      *
     C                   when      d1mode = revise
     C                   seton                                        60
      *
     C                   when      d1mode = delete
     C                   seton                                        62
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Update record
      *---------------------------------------------------------------
      *
     C     $update       begsr
      *
      * Perform deletion integrity checks here...if there are any.
      *
      *
      * If the user is revising or deleting, determine that the record
      * he is accessing still exists prior to attempting the update/delete.
      * Do not lock the record here like we usually do because we have 2
      * records in this function for every week-ending farm/date.
      *
     C                   if        error = 0 and                                If rev/delete
     C                             (action = revise or action = delete)
     C     key01         chain(n)  hsl086a                            62
     C                   move      yes           notflg
     C                   if        *in62 = *on and error < maxmsg               If not found
     C                   add       1             error
     C                   movel     'HS09008'     mgid(e)
     C                   endif                                                  If not found
     C                   endif                                                  If rev/delete
      *
      *
      * If there are no errors, delete/revise/create
      *
     C                   select                                                 Select 1
     C                   when      error <> 0
      *
     C                   when      mode = create
     C                   do        2             x
     C                   exsr      $moveflds
     C                   write     pwrec
     C                   enddo
     C                   other
      *
     C     key01         setll     hsl086a
      *
     C                   do        2             x                              Do loop
     C     key01         reade     hsl086a                                92
     C                   if        *in92 = *off                                 If found
      * Delete/revise
     C                   select
     C                   when      action = delete
     C                   delete    pwrec
      *
     C                   when      action = revise
     C                   exsr      $moveflds
     C                   update    pwrec
     C                   endsl
      *
     C                   endif                                                  If found
     C                   enddo                                                  Do loop
     C                   endsl                                                  Select 1
      *
      *
      *  If there are any errors or the user is in CREATE mode, redisplay
      *  the screen. Otherwise, automatically exit.
      *
     C                   select
     C                   when      error > 0
     C                   eval      routne = scrn1
      *
     C                   when      mode = revise or mode = delete
     C                   eval      routne = exit
      *
     C                   when      mode = create
     C                   add       1             error
     C                   movel     'HS09040'     mgid(e)
     C                   eval      routne = set1
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Populate record fields with screen values
      *---------------------------------------------------------------
      *
     C     $moveflds     begsr
      *
      * For both the first and second record.
      *
     C                   select
     C                   when      mode = create
     C                   clear                   pwrec
     C                   z-add     d1fscd        pwfscd
     C                   move      svfsbo        pwfsbo
     C                   z-add     d1rpcdyr      pwrpcdyr
     C                   z-add     d1rpcdwk      pwrpcdwk
     C                   z-add     svrpwedt      pwrpwedt
     C                   move      sdusr         pwcrusr
     C                   z-add     wkcrupdt      pwcrdt
      *
     C                   when      mode = revise
     C                   move      sdusr         pwupusr
     C                   z-add     wkcrupdt      pwupdt
     C                   endsl
      *
      * First record
      *
     C                   select
     C                   when      x = 1
      *
     C                   z-add     svpwwedt1     pwpwwedt
     C                   z-add     d1pwcdyr1     pwpwcdyr
     C                   z-add     d1pwcdwk1     pwpwcdwk
      *
     C                   z-add     d1supwhd1     pwsupwhd
     C                   z-add     d1mopwhd1     pwmopwhd
     C                   z-add     d1tupwhd1     pwtupwhd
     C                   z-add     d1wepwhd1     pwwepwhd
     C                   z-add     d1thpwhd1     pwthpwhd
     C                   z-add     d1frpwhd1     pwfrpwhd
     C                   z-add     d1sapwhd1     pwsapwhd
     C                   z-add     d1topwhd1     pwtopwhd
     C                   z-add     d1pwsohd1     pwpwsohd
     C                   z-add     d1socuhd1     pwsocuhd
     C                   z-add     d1bocuhd1     pwbocuhd
      * Second record
     C                   when      x = 2
      *
     C                   z-add     svpwwedt2     pwpwwedt
     C                   z-add     d1pwcdyr2     pwpwcdyr
     C                   z-add     d1pwcdwk2     pwpwcdwk
      *
     C                   z-add     d1topwhd2     pwtopwhd
     C                   z-add     d1pwsohd2     pwpwsohd
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Farm site (only in create mode)
      *
     C                   select
     C                   when      fld = 'D1FSCD' and *in61 = *on
     C                   call      'HP5045'
     C                   parm      'A'           xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        51
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1fscd
     C                   movel     xxfsnm        d1fsnm
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Some 1-time, initial, default date lgoic
      *---------------------------------------------------------------
      *
     C     $default      begsr
      *
      * Retrieve the Calendar Year/Week that go with the system date.
      *
     C                   z-add     wkcrupdt      xxwedt
     C                   exsr      $rtvyrwk
     C                   z-add     xxcdwk        d1rpcdwk
     C                   z-add     xxcdyr        d1rpcdyr
      *
      * Retrieve initial date stuff for:
      *    Report week
      *    1 week out
      *    2 weeks out
     C                   exsr      $wedt
     C                   exsr      $week1
     C                   exsr      $week2
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C     d1mode        parm                    mode
     C                   parm                    xxfsbo
     C     d1fscd        parm                    xxfscd
     C     d1rpcdyr      parm                    xxcdyr
     C     d1rpcdwk      parm                    xxcdwk
     C     svrpwedt      parm                    xxrpwedt
     C     d1rpwemdy     parm                    xxmmddyy
     C                   parm                    rtncd
      *
      * Note: Mode is the incoming mode from the Work With.  The user can come in in
      *       revise mode and take F11=delete. This will change the processing to the
      *       'delete' action.
      *
     C                   movel     mode          action
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    d1fscd
     C                   kfld                    svrpwedt
      *
      *
      * If you have a Farm, retrieve farm site name
      *
     C                   if        d1fscd <> 0
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   eval      d1fsnm = fsfsnm
     C                   move(p)   fsfsbo        svfsbo
     C                   else
     C                   eval      d1fsnm = 'Unknown'
     C                   endif
     C                   endif
      *
      *
      * Save system date for record stamp
      *
     C     *mdy          move      udate         wkisodate
     C                   move      wkisodate     wkcrupdt
      *
      * If you are in CREATE mode, do some stuff to default initial dates.
      *
     C                   if        mode = create
     C                   exsr      $default
     C                   endif
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /eject
