      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP746
      * TITLE:       VIEW SALE
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     06/09/95
      *
      * FUNCTION: THIS VIEW PROGRAM DISPLAYS A SALE.
      *           IT IS CALLED FROM HP446-WORK WITH SALES
      *
      *           RESTRICTORS:  MOVEMENT NUMBER
      *           POSITIONERS:  NONE
      *           SELECTORS:    NONE
      *
      *           IT DOES NOT HAVE F4-PROMPT LOGIC.
      *           IT LOADS THE ENTIRE SUBFILE.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 11/01/95  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELD 'GROUP TYPE' ADDED TO
      *           HOG GROUP FILE.
      *
      * 02/06/96  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELD 'BOL PRINTED COUNT' ADDED
      *           TO SALES MOVEMENT HEADER FILE.
      *
      * 05/13/96  LEANNE FEDOR
      *           MADE CHANGES TO FACILITATE NEW JDE RELEASE CONVERSION
      *           CHANGED SEARCH TYPE TO 3A; CALL NEW GENERIC
      *           PROGRAM HPJDEV TO VALIDATE INSTEAD OF HPJDEA SINCE
      *           NO VENDOR ADDRESS IS REQUIRED.
      *
      * 06/03/97  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELDS 'PURGE FLAG' AND 'DATE OF
      *           FIRST PURGE' ADDED TO HOG GROUP FILE.
      *
      * 02/16/98  LeAnne Fedor
      *           Recompile only. Added the following fields to the
      *           database for sales movement detail and check detail:
      *                     condemned head and pounds
      *                     yard dead head and pounds
      *
      * 04/13/98  LeAnne Fedor
      *           Recompile only. New field 'state' added to farm site file.
      *
      * 01/11/99  LeAnne Fedor
      *           New field 'scheduled kill date' was added to sales movement
      *           header file. Added logic to display field.
      *
      * 11/09/99  LeAnne Fedor
      *           Added building/room to subfile line. Increased subfile lines
      *           per page to 4.
      *
      * 10/17/00  LeAnne Fedor
      *           Added new field 'load type' from sales movement header to
      *           screen.
      *
      * 06/05/01  LeAnne Fedor
      *           Recompile only. New field 'multisite' added to Farm Site file.
      *
      * 06/28/01  LeAnne Fedor
      *           Recompile only.
      *           Three fields (manager/supervisor/multisite) renamed in Farm Site file.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 09/04/01  LeAnne Fedor
      *           Recompile only. New 'square feet' fields added to Farm Site file.
      *
      * 01/15/03  LeAnne Fedor
      *           Removed 'sex' and 'genetic line' from Sales Movement Detail file.
      *           Removed 'shipped in/out times' from Sales Movement Header file.
      *
      * 01/25/05  LeAnne Fedor
      *           Recompile only.
      *           For the change on 1/15/03 above, we removed 'Sex' and 'Genetic Line' from
      *           the subfile lines on the screen. But, we inadvertantly left the text in the
      *           column titles in the control record. So, this change removes the text
      *           for the 'Sex' and 'Genetic Line' fields from the column titles.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD746    CF   E             WORKSTN SFILE(HP746S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE
      *
      *
     FHSL034D   IF   E           K DISK
      *  HOG GROUPS
      *
      *
     FHSP084    IF   E           K DISK
      *  SALES HEADER
      *
      *
     FHSP085    IF   E           K DISK
      *  SALES DETAIL
      *
      /EJECT
      ****************************************************************
      * Definition Specifications
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     D                 DS
     D  WKMDY                  1      6  0
     D  WKMM                   1      2  0
     D  WKDD                   3      4  0
     D  WKYY                   5      6  0
      *
      * DATE IN CCYYMMDD FORMAT
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      * RETRIEVE SALES HEADER INFORMATION
      *
     C     C1MVSN        CHAIN     HSP084                             90
     C     *IN90         IFEQ      *OFF                                         IF FOUND
     C                   EXSR      $HDR
     C                   ELSE
     C                   MOVEL     YES           NOTFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00592'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     C1MVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FOUND
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * RESET INDICATORS TO CONTROL SCREEN
      *
     C                   EXSR      $IND
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP746K1
     C                   WRITE     HP746EC
     C                   EXFMT     HP746C1
      *
      * SET THE 'RESET' FLAG TO NO.  THIS FLAG IS USED TO DETERMINE
      * WHETHER TO REPOSITION THE USER TO A PARTICULAR PLACE IN THE
      * SUBFILE (RESET=YES) OR TO PLACE THE USER AT THE BEGINNNING OF
      * THE SUBFILE (RESET=NO)
      *
     C                   MOVEL     NO            RESET
      *
      * SAVE THE VALUE OF THE LOWEST SUBFILE RRN ON THE SCREEN FOR
      * LATER REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES
      * AND PROGRAM MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * INITIALIZE THE RETURN CODE
      *
     C                   MOVEL     '00'          RTNCD
      *
      * GET USER'S ENTRY, SET THE RETURN CODE ACCORDING TO THE FUNCTION
      * KEY TAKEN BY THE USER, SET THE NEXT ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     YES           RESET
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN13         WHENEQ    *ON                                          F13-VIEW
     C                   CALL      'HP706'
     C                   PARM                    C1MVSN
     C                   PARM                    C1CVNO
     C                   PARM                    C1STCD
     C                   PARM                    RTNCD
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $IND - RESET INDICATORS
      *----------------------------------------------------------------
      *
     C     $IND          BEGSR
      *
      * IF THE SALE WAS DELETED OUT FROM UNDER THE USER, THEN SET
      * *IN90 BACK ON TO CONTROL AVAILABLE FUNCTION KEYS AND INPUT
      * FIELDS.
      *
     C     NOTFLG        IFEQ      YES
     C                   SETON                                        90
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1  - SUBROUTINE TO CLEAR THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
      * CLEAR CONTROL RECORD ACCUMULATORS
      *
     C                   Z-ADD     0             C1SCHD
     C                   Z-ADD     0             C1SHHD
     C                   Z-ADD     0             C1ARHD
     C                   Z-ADD     0             C1LVHD
     C                   Z-ADD     0             C1DOHD
      *
     C                   Z-ADD     0             C1SHLB
     C                   Z-ADD     0             C1ARLB
     C                   Z-ADD     0             C1LVLB
     C                   Z-ADD     0             C1DOLB
      *
     C                   Z-ADD     0             SVRRN1
      *
     C                   CLEAR                   HP746S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP746C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * POSITION IN THE SALES MOVEMENT DETAIL FILE AND LOAD ALL
      * RECORDS.
      *
     C     C1MVSN        SETLL     HSP085
     C                   EXSR      $LOAD1
      *
      * CALCULATE ARRIVED HEAD AND POUNDS FOR SCREEN HEADER
      * ARRIVED = LIVE + DEAD
      *
     C     C1LVHD        ADD       C1DOHD        C1ARHD
     C     C1LVLB        ADD       C1DOLB        C1ARLB
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $HDR - MOVE THE SALES HEADER INFO TO THE SCREEN
      *---------------------------------------------------------------
      *
     C     $HDR          BEGSR
      *
     C                   MOVEL     SHSTCD        C1STCD
     C                   MOVEL     SHLTCD        C1LTCD
     C                   Z-ADD     SHFSCD        C1FSCD
     C                   MOVEL     SHTICD        C1TICD
     C                   Z-ADD     SHCVNO        C1CVNO
      *
      * RETRIEVE FARM SITE NAME
      *
     C     C1FSCD        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *OFF
     C                   MOVEL     FSFSNM        C1FSNM
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     C1FSNM
     C                   ENDIF
      *
      * RETRIEVE JDE CUSTOMER NAME
      *
     C     C1CVNO        IFNE      0
     C                   Z-ADD     C1CVNO        INAJD
     C                   MOVEL(P)  'C'           INAT1
     C                   EXSR      $JDEV
     C     JDEFL         IFEQ      YES
     C                   MOVEL(P)  'UNKNOWN'     C1CNAM
     C                   ELSE
     C                   MOVEL     OUALPH        C1CNAM
     C                   ENDIF
     C                   ENDIF
      *
      * FLIP SCHEDULED SHIP DATE TO MDY FORMAT
      *
     C                   Z-ADD     SHSCDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         C1MDY
      *
      *
      * If populated, flip scheduled kill date to mmddyy format
      *
     C                   if        shsckldt <> 0
     C                   seton                                        75
     C                   z-add     shsckldt      wkcymd
     C                   exsr      $tomdy
     C                   z-add     wkmdy         c1scklmdy
     C                   endif
      *
      * FLIP SHIPPED DATE TO MDY FORMAT
      *
     C                   Z-ADD     SHSHDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         C1SMDY
      *
      * FLIP RECEIVED DATE TO MDY FORMAT
      *
     C                   Z-ADD     SHRCDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         C1RMDY
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LOAD1- SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
      *  RETRIEVE SALES DETAIL RECORDS FOR THE SALES MOVEMENT.
      *
     C     $LOAD1        BEGSR
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     C1MVSN        READE     HSP085                                 82
     C     *IN82         IFEQ      *OFF                                         IF NOT EOF
     C                   SETON                                        85
      *
      * ACCUMULATE HEAD VALUES FOR CONTROL RECORD
      *
     C                   ADD       SGSCHD        C1SCHD
     C                   ADD       SGSHHD        C1SHHD
     C                   ADD       SGLVHD        C1LVHD
     C                   ADD       SGDOHD        C1DOHD
      *
      * ACCUMULATE POUNDS VALUES FOR CONTROL RECORD
      *
     C                   ADD       SGSHLB        C1SHLB
     C                   ADD       SGLVLB        C1LVLB
     C                   ADD       SGDOLB        C1DOLB
      *
     C                   Z-ADD     SGSCHD        DFSCHD
     C                   Z-ADD     SGSHHD        DFSHHD
     C                   Z-ADD     SGLVHD        DFLVHD
     C                   Z-ADD     SGLVLB        DFLVLB
     C                   Z-ADD     SGDOHD        DFDOHD
     C                   Z-ADD     SGDOLB        DFDOLB
      *
      * RETRIEVE ALPHA HOG GROUP CODE
      *
     C     SGHGSN        CHAIN     HSL034D                            94
     C     *IN94         IFEQ      *ON
     C                   MOVEL(P)  'UNKNOWN'     DFHGCD
     C                   ELSE
     C                   MOVEL     HGBLCD        DFBLCD
     C                   MOVEL     HGRMCD        DFRMCD
     C                   MOVEL     HGHGCD        DFHGCD
     C                   MOVEL     HGGSCD        DFGSCD
     C                   ENDIF
      *
     C                   ADD       1             HDRRN1
      *
     C                   EXSR      $IND
      *
     C                   WRITE     HP746S1
     C                   SETON                                        81
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD ERROR MESSAGE OF NO DATA FOUND.
      *
     C     HDRRN1        IFEQ      0
     C     ERROR         ANDLT     MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09002'     MGID(E)
     C                   ENDIF
      *
      * SET THE PAGE OF THE SUBFILE TO DISPLAY TO THE USER
      *
     C     RESET         IFEQ      YES
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   ELSE
     C                   Z-ADD     1             HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $TOMDY - FLIP DATE TO MMDDYY
      *----------------------------------------------------------------
      *
     C     $TOMDY        BEGSR
      *
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $JDEV - SUBROUTINE TO CALL THE EXTERNAL PROGRAM TO VALIDATE JDE
      *         ADDRESS NUMBERS.
      *----------------------------------------------------------------
      *
     C     $JDEV         BEGSR
      *
     C                   MOVEL     NO            JDEFL                          JDE ERRORS
      *
     C                   CALL      'HPJDEV'
     C                   PARM                    MGI                            MSG ID'S
     C                   PARM                    MGD                            MSG DATA FLD
     C                   PARM                    ERROR                          # ERR MSGS
     C                   PARM                    INAJD                          JDE ADDR #
     C                   PARM                    INAT1                          JDE ADDR TYP
     C                   PARM                    JDEFL                          ERROR FLAG
     C                   PARM      *BLANK        OUALPH                         JDE NAME
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZERO         ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    C1MVSN
     C                   PARM                    C1MSCD
     C                   PARM                    RTNCD
      *
      * GLOBAL DEFINES
     C                   MOVE      *BLANK        MODE              6            PARM
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
      *
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C                   MOVEL     NO            NOTFLG            1
     C                   MOVEL     NO            CALFLG            1
     C     *LIKE         DEFINE    HDRRN1        SVRRN1
      *
      * ALPHA FIELDS FOR USE AS PARMS
      *
     C                   MOVE      *BLANK        XXMVSN            7
      *
      * JDE FIELDS FOR CUSTOMER NAME LOOKUP
      *
     C                   MOVE      *BLANK        JDEFL             1            JDE ERR FLAG
     C                   MOVE      *BLANK        INAT1             3            JDE ADDR TYP
     C                   MOVE      *BLANK        OUALPH           40            JDE NAME
     C     *LIKE         DEFINE    SHCVNO        INAJD                          JDE NUMBER
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
