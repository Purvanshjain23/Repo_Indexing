// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKGRE1R
// ?Date: 14.08.2025 Time: 02:51:39
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?R10690 JJH 07/13/17 - Producer Location Address
//?- Users need the abitity to have the Origin State which is the
//?  physical location of the Producer Location, and this may be
//?  different than the State in the Producer Location Address.
//?- Allow edit of PL State Code
//?- Display Pl State Code as Origin State
//?R10690 JJH 06/09/17 - Producer Location Address
//?- Add logic to allow editing of Producer Location Address
//?- Remove F13=Change Vendor
//?- Remove M3 Supplier ID
//?- Hide PL State, and update with Producer Location Address State
//?- Use 50-Character Manager Name
//?- Retrieve Fax Attn 1 and Fax Attn 2 from Fax Detail
//?E10468 JJH 05/12/17 - HPE Location Producer for M3
//?- Hide the Producer Location Address feilds becuase they are not
//?  relevant or used within the AS400 HPE module.  These Producer
//?  Locations will not be in M3, as they are in JDE.  So there won't
//?  be an address to display/maintanin in HPE.
//?  - Pl VND Address Number
//?  - M3 Supplier ID
//?  - Producer Address 1    USR
//?  - Producer Address 2    USR
//?  - Producer Address 3    USR
//?  - Producer City         USR
//?  - Producer Zip 10       USR
//?  - Producer Area Code    USR
//?  - Producer Phone Number USR
//?  - Producer Zip 10       USR
//?  - Producer Phone Number USR
//?  - Country Code Usr
//?  - Producer Fax Area Cd  USR
//?  - Producer Fax Phone #  USR
//?  - Fax Attn 1
//?  - Fax Area Code #
//?  - Fax Telephone #
//?  - Fax Telephone #
//?  - Fax Attn 2
//?- Remove the following options:
//?  - F14=JDE Vndr Srch
//?  - F15=M3 Supplier Srch
//?E10387 JJH 05/09/17 - Modify Chg Pdctn Loc/Vendor  IF
//?- Add logic that will update M3 data if the M3VEND = P (Paralell)
//?T8163A JJH 05/03/17 - M3 Supplier file change.
//?- Make the Producer Area Code USR and Producer Phone Number USR
//?  fields optional (Allow Blanks = Y)
//?T8163 DN  12/30/16 - M3 Supplier file change.
//?  -Get M3 Division# to allow user to only select M3 Supplier
//?   record within the same Division.
//?E3580 RMC 09/27/16 - When M3 ready, put this back on screen:
//?      F15=M3 Spplr Srch
//?E3580 CGL 11/11/14 - M3 Producer/vendor interface changes.
//?      LJB 12/23/05 - Add Site ID Req field after Fax Carc Summ
//?      Drop Down List to select, Yes or No are the only allowed
//?      values. Initialize to "N" if new.
ENDDO;

EXECUTE FUNCTION(HPE048) TYPE(EXCINTFUN)                                        AB1190146;
{
 //?Execute internal function

 //?Nppc by Origin State Report
}


// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


// LCL.@Allw Edit or Dsply Usr = CND.Edit
LCL.@Allw_Edit_or_Dsply_Usr = 'E';

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(LCL.Oms_Warehouse_Code);
PARAMETER(LCL.BOH_Company_Number);
PARAMETER('HPE');
PARAMETER(LCL.Oms_SalesPerson_Code);
PARAMETER(LCL.Oms_Allow_Multi_Company);
PARAMETER(LCL.Oms_Default_Printer);
PARAMETER(LCL.Oms_Name);
PARAMETER(LCL.Oms_System_Value_Alpha);
PARAMETER(LCL.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?E10468 JJH 05/12/17 - Remove logic for JDE and M3
//?T8163 DN  01/13/17 - Get M3 Division #.
//?USER: Initialize key screen

// PGM.*Program mode = CND.*ADD
PGM.*Program_mode = 'ADD';

//?E10468 JJH 05/12/17 - Remove logic for JDE and M3
//?USER: Initialize detail screen (new record)

// DTL.RS Record Status = CND.Active
DTL.RS_Record_Status = 'A';

// DTL.Record Status Desc Usr = Condition name of DTL.RS Record Status
DTL.Record_Status_Desc_Usr = RTVCND(DTL.RS_Record_Status);

// DTL.Vendor 1099 = CND.No
DTL.Vendor_1099 = 'N';

// DTL.PL Fax to Producer = CND.Yes
DTL.PL_Fax_to_Producer = 'Y';

// DTL.PL Print Carcass Detail = CND.Yes
DTL.PL_Fax_Carcass_Detail = 'Y';

// DTL.PL Print Carcass Summary = CND.Yes
DTL.PL_Fax_Carcass_Summary = 'Y';

// DTL.PL Print Crc Sum Analysis = CND.Yes
DTL.PL_Unused = 'Y';

// DTL.PL Producer Fax Sequence = CND.Ninth
DTL.PL_Producer_Fax_Sequence = 9;

//?** Default the Site ID Required field to "N" for new records
// DTL.PL Site ID Required = CND.No
DTL.PL_Site_ID_Required = 'N';

//?R10690 JJH 06/12/17 - Set Address Number = Zero
// DTL.Address Number = CON.*ZERO
DTL.Address_Number = *ZERO;

//?USER: Initialize detail screen (existing record)

//?E10468 JJH 05/12/17 - Hide Address info from JDE and M3
//?R10690 JJH 06/09/17 - Use 50-Characer PLC Comment for Manager Name
// Call program Rtv Producer Loc Addr XF.
CALL PROGRAM(Rtv Producer Loc Addr XF) ('PWC6XFR');
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.Address_Number);
PARAMETER(NLL.Pass_Name);
PARAMETER(DTL.Address_1);
PARAMETER(DTL.Address_2);
PARAMETER(DTL.Address_3);
PARAMETER(DTL.City);
PARAMETER(DTL.State);
PARAMETER(DTL.Zip);
PARAMETER(DTL.Area_Code);
PARAMETER(DTL.Country_Code);
PARAMETER(DTL.Telephone);
PARAMETER(DTL.Fax_Area_Code_#);
PARAMETER(DTL.Fax_Telephone);
PARAMETER(DTL.Fax_Attn_1);
PARAMETER(DTL.Fax_Area_Code_#_2);
PARAMETER(DTL.Fax_Telephone_2);
PARAMETER(DTL.Fax_Attn_2);
PARAMETER(NLL.Vendor_1099);
PARAMETER(NLL.Vendor_Tax_Id);

//?Fax Attn 1
CASE;

// IF DTL.Producer Fax Area Cd  USR is Not Blank
IF DTL.Producer_Fax_Area_Cd_USR <> *BLANK;

// OR DTL.Producer Fax Phone #  USR is Not Blank
OR DTL.Producer_Fax_Phone_#_USR <> *BLANK;

EXECUTE FUNCTION(Rtv Fax Detail        RT) TYPE(RTVOBJ) FILE(PKEAREP)           AB1206181;
PARAMETER('HPE');
PARAMETER(DTL.Producer_Fax_Area_Cd_USR);
PARAMETER(DTL.Producer_Fax_Phone_#_USR);
PARAMETER(DTL.Fax_Attn_1);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Fax Attn 2
CASE;

// IF DTL.Fax Area Code # is Not Blank
IF DTL.Fax_Area_Code_# <> *BLANK;

// OR DTL.Fax Telephone is Not Blank
OR DTL.Fax_Telephone <> *BLANK;

EXECUTE FUNCTION(Rtv Fax Detail        RT) TYPE(RTVOBJ) FILE(PKEAREP)           AB1206181;
PARAMETER('HPE');
PARAMETER(DTL.Fax_Area_Code_#);
PARAMETER(DTL.Fax_Telephone);
PARAMETER(DTL.Fax_Attn_2);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

// DTL.Record Status Desc Usr = Condition name of DTL.RS Record Status
DTL.Record_Status_Desc_Usr = RTVCND(DTL.RS_Record_Status);

//?** 12/28/05 LJB - For existing recs, fill in Site ID Req'd if blank
//?** Default the Site ID Required field to "N" if producer source
//?   code = obd
//?** Site ID is required - Default blanks to "N" for initial value
CASE;

// IF DTL.PL Site ID Required is Blank
IF DTL.PL_Site_ID_Required = *BLANK;

// DTL.PL Site ID Required = CND.No
DTL.PL_Site_ID_Required = 'N';

//?** Site ID is required - Default blanks to "N" for initial value
// IF WRK.SR Source Code is Open Daily Buys
IF WRK.SR_Source_Code = 'ODB';

// DTL.PL Site ID Required = CND.No
DTL.PL_Site_ID_Required = 'N';

ENDIF;

//?R10690 JJH 06/09/17 - Use 50-Characer PLC Comment for Manager Name
//?Rtv Manager Name from comment type "M"
EXECUTE FUNCTION(Rtv Comment type "M"  RT) TYPE(RTVOBJ) FILE(PKAHREP)           AB1242827;
PARAMETER(DB1.PD_Producer_Code);
PARAMETER(DB1.PL_Location_Code);
PARAMETER(DTL.PLC_Comment_50_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?USER: Validate detail screen fields

//?E3580 CGL111414 - M3 Producer/vendor interface changes
//?E10468 JJH 05/12/17 - Remove Options
//?E10468 JJH 05/12/17 - Hide Address info from JDE and M3
//?** Validate - Site ID is required - Error if it is left blank
CASE;

// IF DTL.PL Site ID Required is Blank
IF DTL.PL_Site_ID_Required = *BLANK;

// Send error message - 'Invalid value entered for field &1. Prompt for list of valid values.'
ERROR(Y2U0023);
MSGPARM(DTL.PL_Site_ID_Required);

ENDIF;

//?USER: Validate detail screen relations

//?E10468 JJH 05/12/17 - Remove logic for JDE and M3
//?R10690 JJH 06/09/17 - Remove F13=Change Vendor
//?USER: Create DBF record

EXECUTE FUNCTION(Crt Prd Loc/PrdLocAddrIF) TYPE(EXCINTFUN) FILE(PKAFREP)        AB1336854;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.PL_Name);
PARAMETER(DTL.Pl_VND_Address_Number);
PARAMETER(DTL.PL_Type);
PARAMETER(DTL.PL_Miles_Unused_Fld);
PARAMETER(DTL.PL_Fax_Status);
PARAMETER(DTL.PL_Fax_Carcass_Summary);
PARAMETER(DTL.PL_Unused);
PARAMETER(DTL.PL_Fax_Carcass_Detail);
PARAMETER(DTL.PL_Fax_to_Producer);
PARAMETER(DTL.PL_Producer_Fax_Sequence);
PARAMETER(DTL.PL_State_Code);
PARAMETER(DTL.PL_Truck_Scale_Wgh_Sts);
PARAMETER(DTL.PL_Site_ID_Required);
PARAMETER(DTL.PL_Status_4);
PARAMETER(DTL.PL_Status_5);
PARAMETER(DTL.PL_Status_6);
PARAMETER(DTL.PL_Status_7);
PARAMETER(DTL.PL_Status_8);
PARAMETER(DTL.PL_Status_9);
PARAMETER(DTL.PL_Status_10);
PARAMETER(DTL.PL_Status_11);
PARAMETER(DTL.PL_Status_12);
PARAMETER(DTL.PL_Primary_Company);
PARAMETER(DTL.FZ_Code);
PARAMETER(DTL.RS_User_Changed);
PARAMETER(DTL.RS_Date_Changed);
PARAMETER(DTL.RS_Time_Changed);
PARAMETER(DTL.RS_Record_Status);
PARAMETER(DTL.RS_Job);
PARAMETER(DTL.RS_Program);
PARAMETER(DTL.RS_User_Added);
PARAMETER(DTL.RS_Date_Added);
PARAMETER(DTL.RS_Time_Added);
PARAMETER(DTL.Address_Number);
PARAMETER(DTL.PL_Name);
PARAMETER(DTL.Address_1);
PARAMETER(DTL.Address_2);
PARAMETER(DTL.Address_3);
PARAMETER(DTL.City);
PARAMETER(DTL.State);
PARAMETER(DTL.Zip);
PARAMETER(DTL.Area_Code);
PARAMETER(DTL.Country_Code);
PARAMETER(DTL.Telephone);
PARAMETER(DTL.Fax_Area_Code_#);
PARAMETER(DTL.Fax_Telephone);
PARAMETER(DTL.Fax_Attn_1);
PARAMETER(DTL.Fax_Area_Code_#_2);
PARAMETER(DTL.Fax_Telephone_2);
PARAMETER(DTL.Fax_Attn_2);
PARAMETER(DTL.Vendor_1099);
PARAMETER(DTL.Vendor_Tax_Id);
PARAMETER(DTL.PLC_Comment_50_USR);
{
 //?Execute internal function

 //?Modificaitions and Comments
 DO;

 //?R10690 JJH 06/12/17 - Producer Location Address
 //?- Copied from: Crt Prdcr Loc/Vendor  IF
 //?- Add logic to update the Producer Location Address
 //?- The State in the Producer Location Address is also used to
 //?  to update the PL State in the Producer Location file.
 ENDDO;

 EXECUTE FUNCTION(Crt Pdctn Location    CR) TYPE(CRTOBJ) FILE(PKAFREP)           AB1100391;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PL_Location_Code);
 PARAMETER(PAR.PL_Name);
 PARAMETER(PAR.Pl_VND_Address_Number);
 PARAMETER(PAR.PL_Type);
 PARAMETER(PAR.PL_Miles_Unused_Fld);
 PARAMETER(PAR.PL_Fax_Status);
 PARAMETER(PAR.PL_Fax_Carcass_Summary);
 PARAMETER(PAR.PL_Unused);
 PARAMETER(PAR.PL_Fax_Carcass_Detail);
 PARAMETER(PAR.PL_Fax_to_Producer);
 PARAMETER(PAR.PL_Producer_Fax_Sequence);
 PARAMETER(PAR.PL_State_Code);
 PARAMETER(PAR.PL_Truck_Scale_Wgh_Sts);
 PARAMETER(PAR.PL_Site_ID_Required);
 PARAMETER(PAR.PL_Status_4);
 PARAMETER(PAR.PL_Status_5);
 PARAMETER(PAR.PL_Status_6);
 PARAMETER(PAR.PL_Status_7);
 PARAMETER(PAR.PL_Status_8);
 PARAMETER(PAR.PL_Status_9);
 PARAMETER(PAR.PL_Status_10);
 PARAMETER(PAR.PL_Status_11);
 PARAMETER(PAR.PL_Status_12);
 PARAMETER(PAR.PL_Primary_Company);
 PARAMETER(PAR.FZ_Code);
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER(PAR.RS_Record_Status);
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 PARAMETER(PAR.RS_User_Added);
 PARAMETER(PAR.RS_Date_Added);
 PARAMETER(PAR.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(*MISSING);
  PARAMETER(*MISSING);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 //?6/13/02  Product Trace - Farm Manager name
 EXECUTE FUNCTION(Rtv/Chg Prod Loc "M"  RT) TYPE(RTVOBJ) FILE(PKAHREP)           AB1242841;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PL_Location_Code);
 PARAMETER(PAR.PLC_Comment);
 {
  //?USER: Processing if Data record not found

  CASE;

  // IF PAR.PLC Comment NE WRK.Blank USR
  IF PAR.PLC_Comment <> WRK.Blank_USR;

  EXECUTE FUNCTION(Crt Prod Loc Comment  IF) TYPE(EXCINTFUN)                      AB1105482;
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(LCL.PLC_Comment_Line);
  PARAMETER(PAR.PLC_Comment);
  PARAMETER('M');
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?Execute internal function

   EXECUTE FUNCTION(Rtv Next Line nbr     RT) TYPE(RTVOBJ) FILE(PKAHREP)           AB1105481;
   PARAMETER(PAR.PD_Producer_Code);
   PARAMETER(PAR.PL_Location_Code);
   PARAMETER(PAR.PLC_Comment_Line);
   {
    //?USER: Processing if Data record not found

    // *MO.VE             1183529*Bu = ilt. in functions
    PAR.PLC_Comment_Line = 1;

    //?USER: Process Data record

    // PAR.Pdctn Loc Comment Line = DB1.Pdctn Loc Comment Line + CON.1
    PAR.PLC_Comment_Line = DB1.PLC_Comment_Line + 1;

    QUIT;

   }

   EXECUTE FUNCTION(Crt Prod Loc Comment  CR) TYPE(CRTOBJ) FILE(PKAHREP)           AB1105457;
   PARAMETER(PAR.PD_Producer_Code);
   PARAMETER(PAR.PL_Location_Code);
   PARAMETER(PAR.PLC_Comment_Line);
   PARAMETER(PAR.PLC_Comment);
   PARAMETER(PAR.PLC_Comment_Type);
   PARAMETER(PAR.RS_User_Changed);
   PARAMETER(PAR.RS_Date_Changed);
   PARAMETER(PAR.RS_Time_Changed);
   PARAMETER(PAR.RS_Record_Status);
   PARAMETER(PAR.RS_Job);
   PARAMETER(PAR.RS_Program);
   PARAMETER(PAR.RS_User_Added);
   PARAMETER(PAR.RS_Date_Added);
   PARAMETER(PAR.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(*MISSING);
    PARAMETER(*MISSING);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

  }

  ENDIF;

  //?USER: Process Data record

  CASE;

  // IF PAR.PLC Comment NE DB1.PLC Comment
  IF PAR.PLC_Comment <> DB1.PLC_Comment;

  EXECUTE FUNCTION(Chg Prod Loc Comment  CH) TYPE(CHGOBJ) FILE(PKAHREP)           AB1105458;
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.PLC_Comment_Line);
  PARAMETER(PAR.PLC_Comment);
  PARAMETER(DB1.PLC_Comment_Type);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  ENDIF;

 }

 //?R10690 JJH 06/12/17 - Update Producer Location Address
 EXECUTE FUNCTION(Crt Producer Loc Addr CR) TYPE(CRTOBJ) FILE(PWAHREP)           AB1335171;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PL_Location_Code);
 PARAMETER(PAR.Address_Number);
 PARAMETER(PAR.Pass_Name);
 PARAMETER(PAR.Address_1);
 PARAMETER(PAR.Address_2);
 PARAMETER(PAR.Address_3);
 PARAMETER(PAR.City);
 PARAMETER(PAR.State);
 PARAMETER(PAR.Zip);
 PARAMETER(PAR.Area_Code);
 PARAMETER(PAR.Country_Code);
 PARAMETER(PAR.Telephone);
 PARAMETER(PAR.Fax_Area_Code_#);
 PARAMETER(PAR.Fax_Telephone);
 PARAMETER(PAR.Fax_Attn_1);
 PARAMETER(PAR.Fax_Area_Code_#_2);
 PARAMETER(PAR.Fax_Telephone_2);
 PARAMETER(PAR.Fax_Attn_2);
 PARAMETER(PAR.Vendor_1099);
 PARAMETER(PAR.Vendor_Tax_Id);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // Call program Rtv System Date & Tim UP.
   CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
   PARAMETER(PAR.RS_Date_Added);
   PARAMETER(PAR.RS_Time_Added);

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg Prd Loc/PrdLocAddrIF) TYPE(EXCINTFUN) FILE(PKAFREP)        AB1336841;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.PL_Name);
PARAMETER(DTL.Pl_VND_Address_Number);
PARAMETER(DTL.PL_Type);
PARAMETER(DTL.PL_Miles_Unused_Fld);
PARAMETER(DTL.PL_Fax_Status);
PARAMETER(DTL.PL_Fax_Carcass_Summary);
PARAMETER(DTL.PL_Unused);
PARAMETER(DTL.PL_Fax_Carcass_Detail);
PARAMETER(DTL.PL_Fax_to_Producer);
PARAMETER(DTL.PL_Producer_Fax_Sequence);
PARAMETER(DTL.PL_State_Code);
PARAMETER(DTL.PL_Truck_Scale_Wgh_Sts);
PARAMETER(DTL.PL_Site_ID_Required);
PARAMETER(DTL.PL_Status_4);
PARAMETER(DTL.PL_Status_5);
PARAMETER(DTL.PL_Status_6);
PARAMETER(DTL.PL_Status_7);
PARAMETER(DTL.PL_Status_8);
PARAMETER(DTL.PL_Status_9);
PARAMETER(DTL.PL_Status_10);
PARAMETER(DTL.PL_Status_11);
PARAMETER(DTL.PL_Status_12);
PARAMETER(DTL.PL_Primary_Company);
PARAMETER(DTL.FZ_Code);
PARAMETER(DTL.RS_User_Changed);
PARAMETER(DTL.RS_Date_Changed);
PARAMETER(DTL.RS_Time_Changed);
PARAMETER(DTL.RS_Record_Status);
PARAMETER(DTL.RS_Job);
PARAMETER(DTL.RS_Program);
PARAMETER(DTL.RS_User_Added);
PARAMETER(DTL.RS_Date_Added);
PARAMETER(DTL.RS_Time_Added);
PARAMETER(DTL.Address_Number);
PARAMETER(DTL.PL_Name);
PARAMETER(DTL.Address_1);
PARAMETER(DTL.Address_2);
PARAMETER(DTL.Address_3);
PARAMETER(DTL.City);
PARAMETER(DTL.State);
PARAMETER(DTL.Zip);
PARAMETER(DTL.Area_Code);
PARAMETER(DTL.Country_Code);
PARAMETER(DTL.Telephone);
PARAMETER(DTL.Fax_Area_Code_#);
PARAMETER(DTL.Fax_Telephone);
PARAMETER(DTL.Fax_Attn_1);
PARAMETER(DTL.Fax_Area_Code_#_2);
PARAMETER(DTL.Fax_Telephone_2);
PARAMETER(DTL.Fax_Attn_2);
PARAMETER(DTL.Vendor_1099);
PARAMETER(DTL.Vendor_Tax_Id);
PARAMETER(DTL.PLC_Comment_50_USR);
{
 //?Execute internal function

 //?Modificaitions and Comments
 DO;

 //?R10690 JJH 06/12/17 - Producer Location Address
 //?- Copied from: Chg Prdcr Loc/Vendor  IF
 //?- Add logic to update the Producer Location Address
 //?- The State in the Producer Location Address is also used to
 //?  to update the PL State in the Producer Location file.
 ENDDO;

 EXECUTE FUNCTION(Chg Pdctn Location    CH) TYPE(CHGOBJ) FILE(PKAFREP)           AB1100392;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PL_Location_Code);
 PARAMETER(PAR.PL_Name);
 PARAMETER(PAR.Pl_VND_Address_Number);
 PARAMETER(PAR.PL_Type);
 PARAMETER(PAR.PL_Miles_Unused_Fld);
 PARAMETER(PAR.PL_Fax_Status);
 PARAMETER(PAR.PL_Fax_Carcass_Summary);
 PARAMETER(PAR.PL_Unused);
 PARAMETER(PAR.PL_Fax_Carcass_Detail);
 PARAMETER(PAR.PL_Fax_to_Producer);
 PARAMETER(PAR.PL_Producer_Fax_Sequence);
 PARAMETER(PAR.PL_State_Code);
 PARAMETER(PAR.PL_Truck_Scale_Wgh_Sts);
 PARAMETER(PAR.PL_Site_ID_Required);
 PARAMETER(PAR.PL_Status_4);
 PARAMETER(PAR.PL_Status_5);
 PARAMETER(PAR.PL_Status_6);
 PARAMETER(PAR.PL_Status_7);
 PARAMETER(PAR.PL_Status_8);
 PARAMETER(PAR.PL_Status_9);
 PARAMETER(PAR.PL_Status_10);
 PARAMETER(PAR.PL_Status_11);
 PARAMETER(PAR.PL_Status_12);
 PARAMETER(PAR.PL_Primary_Company);
 PARAMETER(PAR.FZ_Code);
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER(PAR.RS_Record_Status);
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 PARAMETER(PAR.RS_User_Added);
 PARAMETER(PAR.RS_Date_Added);
 PARAMETER(PAR.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?6/13/02  Product Trace - Farm Manager name
 EXECUTE FUNCTION(Rtv/Chg Prod Loc "M"  RT) TYPE(RTVOBJ) FILE(PKAHREP)           AB1242841;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PL_Location_Code);
 PARAMETER(PAR.PLC_Comment);
 {
  //?USER: Processing if Data record not found

  CASE;

  // IF PAR.PLC Comment NE WRK.Blank USR
  IF PAR.PLC_Comment <> WRK.Blank_USR;

  EXECUTE FUNCTION(Crt Prod Loc Comment  IF) TYPE(EXCINTFUN)                      AB1105482;
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(LCL.PLC_Comment_Line);
  PARAMETER(PAR.PLC_Comment);
  PARAMETER('M');
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?Execute internal function

   EXECUTE FUNCTION(Rtv Next Line nbr     RT) TYPE(RTVOBJ) FILE(PKAHREP)           AB1105481;
   PARAMETER(PAR.PD_Producer_Code);
   PARAMETER(PAR.PL_Location_Code);
   PARAMETER(PAR.PLC_Comment_Line);
   {
    //?USER: Processing if Data record not found

    // *MO.VE             1183529*Bu = ilt. in functions
    PAR.PLC_Comment_Line = 1;

    //?USER: Process Data record

    // PAR.Pdctn Loc Comment Line = DB1.Pdctn Loc Comment Line + CON.1
    PAR.PLC_Comment_Line = DB1.PLC_Comment_Line + 1;

    QUIT;

   }

   EXECUTE FUNCTION(Crt Prod Loc Comment  CR) TYPE(CRTOBJ) FILE(PKAHREP)           AB1105457;
   PARAMETER(PAR.PD_Producer_Code);
   PARAMETER(PAR.PL_Location_Code);
   PARAMETER(PAR.PLC_Comment_Line);
   PARAMETER(PAR.PLC_Comment);
   PARAMETER(PAR.PLC_Comment_Type);
   PARAMETER(PAR.RS_User_Changed);
   PARAMETER(PAR.RS_Date_Changed);
   PARAMETER(PAR.RS_Time_Changed);
   PARAMETER(PAR.RS_Record_Status);
   PARAMETER(PAR.RS_Job);
   PARAMETER(PAR.RS_Program);
   PARAMETER(PAR.RS_User_Added);
   PARAMETER(PAR.RS_Date_Added);
   PARAMETER(PAR.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(*MISSING);
    PARAMETER(*MISSING);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

  }

  ENDIF;

  //?USER: Process Data record

  CASE;

  // IF PAR.PLC Comment NE DB1.PLC Comment
  IF PAR.PLC_Comment <> DB1.PLC_Comment;

  EXECUTE FUNCTION(Chg Prod Loc Comment  CH) TYPE(CHGOBJ) FILE(PKAHREP)           AB1105458;
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.PLC_Comment_Line);
  PARAMETER(PAR.PLC_Comment);
  PARAMETER(DB1.PLC_Comment_Type);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  ENDIF;

 }

 //?R10690 JJH 06/12/17 - Update Producer Location Address
 EXECUTE FUNCTION(Chg Producer Loc Addr CH) TYPE(CHGOBJ) FILE(PWAHREP)           AB1335172;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PL_Location_Code);
 PARAMETER(PAR.Address_Number);
 PARAMETER(PAR.Pass_Name);
 PARAMETER(PAR.Address_1);
 PARAMETER(PAR.Address_2);
 PARAMETER(PAR.Address_3);
 PARAMETER(PAR.City);
 PARAMETER(PAR.State);
 PARAMETER(PAR.Zip);
 PARAMETER(PAR.Area_Code);
 PARAMETER(PAR.Country_Code);
 PARAMETER(PAR.Telephone);
 PARAMETER(PAR.Fax_Area_Code_#);
 PARAMETER(PAR.Fax_Telephone);
 PARAMETER(PAR.Fax_Attn_1);
 PARAMETER(PAR.Fax_Area_Code_#_2);
 PARAMETER(PAR.Fax_Telephone_2);
 PARAMETER(PAR.Fax_Attn_2);
 PARAMETER(PAR.Vendor_1099);
 PARAMETER(PAR.Vendor_Tax_Id);
 PARAMETER(PAR.RS_Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // Call program Rtv System Date & Tim UP.
   CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
   PARAMETER(PAR.RS_Date_Changed);
   PARAMETER(PAR.RS_Time_Changed);

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


//?USER: Process command keys

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

RETURN;

ENDIF;

