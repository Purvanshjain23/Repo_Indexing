     H/TITLE EDT Price Simul Dtl WK EF Edit file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Maintain database file using subfile display
     H* - Existing records may be updated
     H* - Key changes are not allowed
     H* - New records cannot be added
      *
     H* Generated by  : 2E  Version:  1135
     H* Function type : Edit file
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISSMASO
     H* Date          : 06/11/04  Time  : 09:53:45
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPDOLEFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: EDT Price Simul Dtl WK EF Edit file
      *
     FPDJKCPW1IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : Order Dtl Formula Dtl     Rtv Index for Work File
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FPDIMCPW1IF  E           K        DISK
      * RTV : Order Detail Pricing      Rtv Index for Work File
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     E                    #L3         3  1
     E                    #L7         7  1
     E                    UCT        40  1               CENTER TABLE
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSPDJKCPL0
      * UPD : Order Dtl Formula Dtl     Update index
      * Current/previous master file format fields for change control
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Order Dtl Formula Dtl
      * I : RST Company Number
     I                                    P   1   20P1AIC3
      * I : RST Order Number
     I                                    P   3   60P1C4NB
      * I : RST Order Sequence Number
     I                                    P   7   80P1DPNB
      * I : RST Order Secondary Line Seq
     I                                    P   9  100P1UENB
     IP2PARM      DS
      * FLD: Order Detail
      * I : MAP Item Code
     I                                    P   1   40P2HGCD
      * I : MAP Market Pricing Date
     I                                    P   5   80P2EXDT
      * I : MAP Date Method Code
     I                                        9  11 P2RDCD
      * I :  Price Method Code
     I                                       12  14 P2Q7CD
      * I :  U/M - Ordered
     I                                       15  16 P2AGCD
      * I :  Quantity Scheduled
     I                                    P  17  222P2CCQT
      * B :  Unit Price
     I                                    P  23  284P2AKPR
      * B :  Unit Price - Credit
     I                                    P  29  344P2ALPR
      * B :  Unit Price Ordered U/M
     I                                    P  35  404P2AUPR
     IP3PARM      DS
      * FLD: Order Header TRG
      * I :  Ship To Customer
     I                                    P   1   40P3BKC7
      * I : MAP Requested Ship Date
     I                                    P   5   80P3A5DT
     IP4PARM      DS
      * I : MAP Company Name
     I                                        1  30 P4APTX
     IP5PARM      DS
      * FLD: *Arrays
      * B : MAP USR Total Consumed Items
     I                                    P   1   62P5TSVA
      * B : MAP USR Muscle Yield Amt
     I                                    P   7  122P5TZVA
      * B : MAP Total Credit Dollars
     I                                    P  13  182P5Y0NB
      * B : MAP USR Formula Overages
     I                                    P  19  242P5T1VA
      * B : MAP USR Differential
     I                                    P  25  302P5TYVA
      * B :  Starting Product Price
     I                                    P  31  364P5CGPR
      * B :  Credit Value
     I                                    P  37  424P5CEPR
      * B :  Muscle Yield Price
     I                                    P  43  484P5CHPR
      * B :  Standard Overage/Underage
     I                                    P  49  544P5BMPR
      * B :  USR Cust/Item Differentl
     I                                    P  55  604P5COPR
     IP6PARM      DS
      * FLD: *Arrays
      * N :  PRC STRITM Field USR
     I                                    P   1   62P6T3VA
      * N :  PRC CIDIFF Field USR
     I                                    P   7  122P6T4VA
      * N :  PRC TOTAL 1 USR
     I                                    P  13  182P6T5VA
      * N :  PRC SUBCRD USR
     I                                    P  19  242P6T8VA
      * N :  PRC TOTAL 2 USR
     I                                    P  25  302P6T6VA
      * N :  PRC TOTAL 3 USR
     I                                    P  31  362P6UFVA
      * N :  PRC MSCYLD USR
     I                                    P  37  422P6T9VA
      * N :  PRC CALCED TOTAL USR
     I                                    P  43  482P6UAVA
      * N :  PRC CIFMPF USR
     I                                    P  49  542P6UBVA
      * N :  PRC IOVRFM USR
     I                                    P  55  602P6UCVA
      * N :  PRC CFRTOV USR
     I                                    P  61  662P6UDVA
      * N :  PRC OVERAGES USR
     I                                    P  67  722P6UEVA
      * N :  PRC TOTAL PRICE USR
     I                                    P  73  782P6T7VA
     IP7PARM      DS
      * N :  USR Update Flag
     I                                        1   1 P7R4ST
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1C4NB    PARM           WP0002  70       Order Number
     C           P1DPNB    PARM           WP0003  30       Order Sequence
     C           P1UENB    PARM           WP0004  30       Order Secondary
     C           P2HGCD    PARM           WP0005  70       Item Code
     C           P2EXDT    PARM           WP0006  70       Market Pricing
     C           P2RDCD    PARM           WP0007  3        Date Method Cod
     C           P2Q7CD    PARM           WP0008  3        Price Method Co
     C           P2AGCD    PARM           WP0009  2        U/M - Ordered
     C           P2CCQT    PARM           WP0010 112       Quantity Schedu
     C           P2AKPR    PARM P2AKPR    WP0011 114       Unit Price
     C           P2ALPR    PARM P2ALPR    WP0012 114       Unit Price - Cr
     C           P2AUPR    PARM P2AUPR    WP0013 114       Unit Price Orde
     C           P3BKC7    PARM           WP0014  70       Ship To Custome
     C           P3A5DT    PARM           WP0015  70       Requested Ship
     C           P4APTX    PARM           WP0016 30        Company Name
     C           P5TSVA    PARM P5TSVA    WP0017 112       USR Total Consu
     C           P5TZVA    PARM P5TZVA    WP0018 112       USR Muscle Yiel
     C           P5Y0NB    PARM P5Y0NB    WP0019 112       Total Credit Do
     C           P5T1VA    PARM P5T1VA    WP0020 112       USR Formula Ove
     C           P5TYVA    PARM P5TYVA    WP0021 112       USR Differentia
     C           P5CGPR    PARM P5CGPR    WP0022 114       Starting Produc
     C           P5CEPR    PARM P5CEPR    WP0023 114       Credit Value
     C           P5CHPR    PARM P5CHPR    WP0024 114       Muscle Yield Pr
     C           P5BMPR    PARM P5BMPR    WP0025 114       Standard Overag
     C           P5COPR    PARM P5COPR    WP0026 114       USR Cust/Item D
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise and load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END
     C                     END
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise & load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
     C           YPMTFD    IFEQ *BLANKS
      * USER: Initialize subfile header
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SARVGN
     C                     Z-ADDP2HGCD    #CB6C7           Item Code USR
      * Rtv Descriptions      RT - Company/Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CB6C7    WL0002           Item Code
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    #CGENA    P      Description Lin
     C                     MOVELWL0004    WUAWNA    P      Description Lin
     C                     MOVELWL0005    WUADCD    P      U/M - Primary
     C                     MOVELWL0006    WUAECD    P      U/M - Second
     C                     MOVELWL0007    WUAFCD    P      U/M - Third
      * Initialize CTL Amounts
     C                     EXSR UASUBR                     Initialize CTL
      * CLC Formula Details    XF - PD Ship Dtl Formula Dtl  * 
     C                     CALL 'PDORXFR'              90  CLC Formula Det
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2AIC3    WQ0001  30       Company Number
     C                     PARM #2C4NB    WQ0002  70       Order Number
     C                     PARM #2DPNB    WQ0003  30       Order Sequence
     C                     PARM #2UENB    WQ0004  30       Order Secondary
     C           #PTSVA    PARM #PTSVA    WQ0005 112       PRC STRITM Fiel
     C           #PTYVA    PARM #PTYVA    WQ0006 112       PRC CIDIFF Fiel
     C           #CTVVA    PARM #CTVVA    WQ0007 112       PRC TOTAL 1 USR
     C           #PY0NB    PARM #PY0NB    WQ0008 112       PRC SUBCRD USR
     C           #CTWVA    PARM #CTWVA    WQ0009 112       PRC TOTAL 2 USR
     C           #CTXVA    PARM #CTXVA    WQ0010 112       PRC TOTAL 3 USR
     C           #PTZVA    PARM #PTZVA    WQ0011 112       PRC MSCYLD USR
     C           #CT0VA    PARM #CT0VA    WQ0012 112       PRC CALCED TOTA
     C           P6UBVA    PARM P6UBVA    WQ0013 112       PRC CIFMPF USR
     C           P6UCVA    PARM P6UCVA    WQ0014 112       PRC IOVRFM USR
     C           P6UDVA    PARM P6UDVA    WQ0015 112       PRC CFRTOV USR
     C           P6UEVA    PARM P6UEVA    WQ0016 112       PRC OVERAGES US
     C           #CGZVA    PARM #CGZVA    WQ0017 112       PRC TOTAL PRICE
     C                     PARM '**'      WQ0018  2        Event Called Fr
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDORXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C           P6UBVA    ADD  P6UEVA    #PT1VA           USR Formula Ove
     C                     END
      *................................................................
      * Position file
     C           KPOS      KLIST
     C                     KFLD           JKAIC3           Company Number
     C                     KFLD           JKC4NB           Order Number
     C                     KFLD           JKDPNB           Order Sequence
     C                     KFLD           JKUENB           Order Secondary
     C                     KFLD           JKQ9CD           Price Method Co
     C                     KFLD           JKHGCD           Item Code
     C                     KFLD           JKZXNB           Pricing Sequenc
      * Setup key
     C                     Z-ADD#2AIC3    JKAIC3
     C                     Z-ADD#2C4NB    JKC4NB
     C                     Z-ADD#2DPNB    JKDPNB
     C                     Z-ADD#2UENB    JKUENB
     C                     MOVEL#2Q9CD    JKQ9CD
     C                     MOVEL*ZERO     JKHGCD           Item Code
     C                     Z-ADD#2ZXNB    JKZXNB
      * 82=EOF
     C           KPOS      SETLL@JKCPZ7              82    *
      * 82=EOF
     C           KRST      KLIST
     C                     KFLD           JKAIC3           Company Number
     C                     KFLD           JKC4NB           Order Number
     C                     KFLD           JKDPNB           Order Sequence
     C                     KFLD           JKUENB           Order Secondary
      * Setup key
     C                     Z-ADD#2AIC3    JKAIC3
     C                     Z-ADD#2C4NB    JKC4NB
     C                     Z-ADD#2DPNB    JKDPNB
     C                     Z-ADD#2UENB    JKUENB
     C  N82      KRST      READE@JKCPZ7                9182*
      * Load subfile page
     C                     EXSR BBLDSF
      *................................................................
      * If no records found, display error message
     C   82      ##RR      IFEQ *ZERO                      IF
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
     C                     SETOF                     84    No SFLNXTCHG
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@JKCPZ7                  90*
     C  N82                READ @JKCPZ7                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVE *ALL'0'   WKIND0  2
     C                     MOVE *ALL'1'   WKIND1  2
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
     C                     Z-ADD*ZERO     ##RROK  50
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next subfile page
     C  N82      ##RROK    DOWLT##SFLN                     DO
     C                     ADD  1         ##RR
     C                     MOVEAWKIND0    *IN,31
     C                     SETOF                     87    *
      * Clear subfile fields
     C                     EXSR MAIZ#1
      * Load SFL fields
     C                     EXSR MBFL#1
      * Record will be selected unless overridden
     C                     MOVEL'Y'       W0RSL   1
      * USER: Initialize subfile record (existing record)
      * Set BOM type
      * CASE: DB1.Price Method Componant is STRITM
     C           JKQ9CD    IFEQ 'STRITM'                   *IF
     C                     MOVEL'C'       #RV2ST           BOM Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       #RV2ST           BOM Type
     C                     END                             *FI
     C                     Z-ADDJKBOPR    #RD1PC           USR Sales Yield
     C                     Z-ADDJKCDPR    #RCMPR           USR Market Valu
     C                     Z-ADDJKCEPR    #RCNPR           USR Credit Valu
     C                     MOVEL*BLANK    P7R4ST           USR Update Flag
      * If record dropped...
     C                     SUB  1         ##RR
     C           W0RSL     CABNE'Y'       BB020
     C                     ADD  1         ##RR
      * Validate subfile record and calculate derived fields
     C                     EXSR DFV2RC
      * Output to subfile
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * 82=EOF
     C           KRST      READE@JKCPZ7                  82*
     C  N82                END
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Quit if reload requested
     C           W0RSF     CABEQ'Y'       DAEXIT
      *
     C   81                DO
      * No data entered as yet
     C                     MOVEL'N'       WKIPIN  1
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Process subfile records
     C                     EXSR DBPRSF
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * If data entered
     C           WKIPIN    IFEQ 'Y'
      * Update DBF from subfile
     C                     EXSR EAPRSF
      * If error during update, exit:
     C           *IN99     CABEQ'1'       DAEXIT
     C                     END                             WKIPIN
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process command keys
      * CASE: PAR.USR Update Flag is Yes
     C           P7R4ST    IFEQ 'Y'                        *IF
      * UPD From Formula Dtl   XF - PD Ship Detail Pricing  * 
     C                     CALL 'PDOXXFR'              90  UPD From Formul
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2AIC3    WQ0019  30       Company Number
     C                     PARM #2C4NB    WQ0020  70       Order Number
     C                     PARM #2DPNB    WQ0021  30       Order Sequence
     C                     PARM #2UENB    WQ0022  30       Order Secondary
     C                     PARM '**'      WQ0023  2        Event Called Fr
     C           #PTSVA    PARM *ZERO     WQ0024 112       USR Total Consu
     C           #PTZVA    PARM *ZERO     WQ0025 112       USR Muscle Yiel
     C           #PY0NB    PARM *ZERO     WQ0026 112       Total Credit Do
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDOXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
     C                     EXSR DCPRSR
     C                     SETOF                     87    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,31
      * No errors
     C                     SETOF                     98
      * Data entered
     C                     MOVEL'Y'       WKIPIN
      * SFLNXTCHG
     C                     SETON                     84
      * Validate subfile record
     C                     EXSR DEV1RC
      * If SFLRCD invalid, note the fact
     C   98N99             Z-ADD##RR      ##SFRC     99    *
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         DEV1RC    BEGSR
      *================================================================
      * Validate subfile record
      *================================================================
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate subfile record fields
      * Set BOM type
      * CASE: RCD.Price Method Componant is STRITM
     C           #1Q9CD    IFEQ 'STRITM'                   *IF
     C                     MOVEL'C'       #RV2ST           BOM Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       #RV2ST           BOM Type
     C                     END                             *FI
      * Rtv Descriptions      RT - Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDJKAIC3    WL0001           Company Number
     C                     Z-ADDJKHGCD    WL0002           Item Code
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    #RGENA    P      Description Lin
     C                     MOVELWL0004    WUG0TX    P      Description Lin
     C                     MOVELWL0005    WUG0TX    P      U/M - Primary
     C                     MOVELWL0006    WUG0TX    P      U/M - Second
     C                     MOVELWL0007    WUG0TX    P      U/M - Third
      * CASE: Need to update credit value
      *  - c3 AND (c1 OR c2)
      *   |- c3    : RCD.BOM Type is Produced - Meat
      *   |- c1    : RCD.Sales Yield NE RCD.USR Sales Yield
      *   |- c2    : RCD.Market Value NE RCD.USR Market Value Price
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #RV2ST    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           #1BOPR    IFNE #RD1PC                     *IF
     C           #1CDPR    ORNE #RCMPR                     *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           #1CDPR    DIV  100       WUTPVA           Pricing Retriev
     C           #1BOPR    MULT WUTPVA    #1CEPR           Credit Value
     C                     END                             *FI
     C                     END
      * Validate subfile record relations
     C                     EXSR DFV2RC
      *================================================================
     CSR         DEEXIT    ENDSR
      /EJECT
     CSR         DFV2RC    BEGSR
      *================================================================
      * Validate subfile record relations
      *================================================================
      * Check reference to Order Detail Pricing
     C                     EXSR VACKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     98    *
     C                     END
      * Check reference to Company Item
     C                     EXSR VBCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     98    *
     C                     END
      *================================================================
     CSR         DFEXIT    ENDSR
      /EJECT
     CSR         EAPRSF    BEGSR
      *================================================================
      * Update DBF from subfile
      *================================================================
      * Initialise subfile reload flag
     C                     MOVEL'N'       W0RSF
      * Process all modified subfile records
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      * Process modified subfile record
     C                     EXSR EBPRSR
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      * If any errors, cancel reload
     C           *IN99     IFEQ '1'
     C                     MOVEL'N'       W0RSF   1
     C                     END
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         EBPRSR    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,31
     C                     SETOF                     98
      *
      * Process change request
     C                     EXSR EECHRQ
      * If error occurred on update, note the fact
     C           *IN98     IFEQ '1'
     C           *IN99     IFEQ '0'
     C                     Z-ADD##RR      ##SFRC     99    *
     C                     END
     C                     ELSE
      * USER: Extra processing after DBF update
     C                     MOVEL'Y'       P7R4ST           USR Update Flag
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * CHG Ship Dtl Form WK   XF - PD Ship Dtl Formula Dtl  * 
     C                     CALL 'PDQKXFR'              90  CHG Ship Dtl Fo
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0029  30       Company Number
     C                     PARM #1C4NB    WQ0030  70       Order Number
     C                     PARM #1DPNB    WQ0031  30       Order Sequence
     C                     PARM #1UENB    WQ0032  30       Order Secondary
     C                     PARM #1Q9CD    WQ0033  6        Price Method Co
     C                     PARM #1HGCD    WQ0034  70       Item Code
     C                     PARM #1ZXNB    WQ0035  30       Pricing Sequenc
     C                     PARM #1BOPR    WQ0036  52       Sales Yield
     C                     PARM #1CDPR    WQ0037 114       Market Value
     C                     PARM #1CEPR    WQ0038 114       Credit Value
     C                     PARM #1U6ST    WQ0039  1        PD Status
     C                     PARM #1UVST    WQ0040  1        EDI Status 1
     C                     PARM #1UWST    WQ0041  1        EDI Status 2
     C                     PARM #1UXST    WQ0042  1        EDI Status 3
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDQKXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983132*
     C                     END
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Screen errors
     C                     MOVEAWKIND1    *IN,31
      * Format error
     C                     SETON                     98    *
      * Enable entry
     C                     SETOF                     87    *
      * SFLNXTCHG
     C                     SETON                     84    *
      * Reset subfile record if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1           IF
     C                     END
     C                     ELSE
      * DBF update successful
      * Enable entry
     C                     SETOF                     87    *
      * No SFLNXTCHG
     C                     SETOF                     84    *
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect keys if change mode or updated record
     C                     SETON                     88    *
     C   89N87             SETOF                     88    *
     C                     MOVEL*IN87     *IN79
     C                     MOVEL'0'       *IN78
     C           #RV2ST    IFEQ 'C'                        *IF
     C                     MOVEL'1'       *IN79
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise subfile record
      *================================================================
      * Previous values
     C                     MOVEL*BLANK    #1DBRC
     C                     Z-ADDP1AIC3    #1AIC3           Company Number
     C                     Z-ADDP1C4NB    #1C4NB           Order Number
     C                     Z-ADDP1DPNB    #1DPNB           Order Sequence
     C                     Z-ADDP1UENB    #1UENB           Order Secondary
     C                     MOVEL*BLANK    #1Q9CD           Price Method Co
     C                     Z-ADDP2HGCD    #1HGCD           Item Code
     C                     Z-ADD*ZERO     #1ZXNB           Pricing Sequenc
     C                     Z-ADD*ZERO     #RD1PC           USR Sales Yield
     C                     Z-ADD*ZERO     #RCMPR           USR Market Valu
     C                     Z-ADD*ZERO     #RCNPR           USR Credit Valu
     C                     MOVEL*BLANK    #1U6ST           PD Status
     C                     MOVEL*BLANK    #1UVST           EDI Status 1
     C                     MOVEL*BLANK    #1UWST           EDI Status 2
     C                     MOVEL*BLANK    #1UXST           EDI Status 3
     C                     Z-ADD*ZERO     #1AATM           Job Time
     C                     MOVEL*BLANK    #1AYNA           User Id
     C                     MOVEL*BLANK    #1A0NA           Job Name
     C                     Z-ADD*ZERO     #1AXDT           Job Date
     C                     MOVEL*BLANK    #RV2ST           BOM Type
     C                     MOVEL*BLANK    #RGENA           Item Descriptio
     C                     Z-ADD*ZERO     #1BOPR           Sales Yield
     C                     Z-ADD*ZERO     #1CDPR           Market Value
     C                     Z-ADD*ZERO     #1CEPR           Credit Value
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @JKCPZ7 fields to subfile
      *================================================================
     C                     Z-ADDJKAIC3    #1AIC3           Company Number
     C                     Z-ADDJKC4NB    #1C4NB           Order Number
     C                     Z-ADDJKDPNB    #1DPNB           Order Sequence
     C                     Z-ADDJKUENB    #1UENB           Order Secondary
     C                     MOVELJKQ9CD    #1Q9CD           Price Method Co
     C                     Z-ADDJKHGCD    #1HGCD           Item Code
     C                     Z-ADDJKZXNB    #1ZXNB           Pricing Sequenc
     C                     MOVELJKU6ST    #1U6ST           PD Status
     C                     MOVELJKUVST    #1UVST           EDI Status 1
     C                     MOVELJKUWST    #1UWST           EDI Status 2
     C                     MOVELJKUXST    #1UXST           EDI Status 3
     C                     Z-ADDJKAATM    #1AATM           Job Time
     C                     MOVELJKAYNA    #1AYNA           User Id
     C                     MOVELJKA0NA    #1A0NA           Job Name
     C                     Z-ADDJKAXDT    #1AXDT           Job Date
     C                     Z-ADDJKBOPR    #1BOPR           Sales Yield
     C                     Z-ADDJKCDPR    #1CDPR           Market Value
     C                     Z-ADDJKCEPR    #1CEPR           Credit Value
      * Hold current record image for change detection
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADDP1DPNB    #2DPNB           Order Sequence
     C                     Z-ADDP1UENB    #2UENB           Order Secondary
     C                     MOVEL*BLANK    #2Q9CD           Price Method Co
     C                     Z-ADD*ZERO     #2ZXNB           Pricing Sequenc
     C                     Z-ADDP1AIC3    #2AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V2AIC3
     C                     MOVELP4APTX    #PAPTX           Company Name
     C                     Z-ADDP1C4NB    #2C4NB           Order Number
      * Clear external version also
     C                     MOVEL*BLANK    V2C4NB
     C                     Z-ADD*ZERO     #CB6C7           Item Code USR
      * Clear external version also
     C                     MOVEL*BLANK    VCB6C7
     C                     MOVEL*BLANK    #CGENA           Item Descriptio
     C                     Z-ADDP3A5DT    #PA5DT           Requested Ship
      * Clear external version also
     C                     Z-ADD*ZERO     VPA5DT
     C                     MOVELP2RDCD    #PRDCD           Date Method Cod
     C                     Z-ADDP2EXDT    #PEXDT           Market Pricing
      * Clear external version also
     C                     Z-ADD*ZERO     VPEXDT
     C                     Z-ADDP5TSVA    #PTSVA           USR Total Consu
     C                     Z-ADD*ZERO     #CTXVA           USR Subtotal Am
     C                     Z-ADDP5TYVA    #PTYVA           USR Differentia
     C                     Z-ADDP5TZVA    #PTZVA           USR Muscle Yiel
     C                     Z-ADD*ZERO     #CTVVA           USR Subtotal 1
     C                     Z-ADD*ZERO     #CT0VA           USR Subtotal 3
     C                     Z-ADDP5Y0NB    #PY0NB           Total Credit Do
     C                     Z-ADDP5T1VA    #PT1VA           USR Formula Ove
     C                     Z-ADD*ZERO     #CTWVA           USR Subtotal 2
     C                     Z-ADD*ZERO     #CGZVA           USR Net Amount
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2C4NB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2C4NB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2C4NB           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2C4NB           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Item Code USR to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #CB6C7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#CB6C7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VCB6C7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCB6C7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Requested Ship Date to display format
      * Convert date
     C           1000000   ADD  #PA5DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VPA5DT
      * Convert Market Pricing Date to display format
      * Convert date
     C           1000000   ADD  #PEXDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VPEXDT
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD#2AIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSA     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #PAPTX           Name
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    #PAPTX           Name
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Descriptions      RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0001    BZAIC3           Company Number
     C                     Z-ADDWL0002    BZHGCD           Item Code
      * Establish starting position
     C           KRSSB     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WL0003           Description Lin
     C                     MOVELBZAWNA    WL0004           Description Lin
     C                     MOVELBZADCD    WL0005           U/M - Primary
     C                     MOVELBZAECD    WL0006           U/M - Second
     C                     MOVELBZAFCD    WL0007           U/M - Third
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSC01           Application Cod
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSC01           Application Cod
     C                     MOVEL'OMS'     WQSC01           Application Cod
      * Establish starting position
     C           KRSSC     SETLL@DNRESF                    *
     C           KRSSC     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SDRVGN
     C                     END                             *FI
     C           KRSSC     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSD01           Application Cod
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSD01           Application Cod
      * Establish starting position
     C           KRSSD     SETLL@DNRESF                    *
     C           KRSSD     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSD     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Initialize CTL Amounts
      *================================================================
     C                     Z-ADD*ZERO     #CTXVA           USR Subtotal Am
     C                     Z-ADD*ZERO     #CTVVA           USR Subtotal 1
     C                     Z-ADD*ZERO     #CTWVA           USR Subtotal 2
     C                     Z-ADD*ZERO     #CT0VA           USR Subtotal 3
     C                     Z-ADD*ZERO     #CGZVA           USR Net Amount
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check reference to Order Detail Pricing
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * If all low order keys not entered, exit
     C           #1C4NB    IFEQ *ZERO                      Order Number
     C           #1DPNB    ANDEQ*ZERO                      Order Sequence
     C           #1UENB    ANDEQ*ZERO                      Order Secondary
     C           #1Q9CD    ANDEQ*BLANK                     Price Method Co
     C                     GOTO VAEXIT
     C                     END
      *
     C           KLVAIM    KLIST
     C                     KFLD           IMAIC3           Company Number
     C                     KFLD           IMC4NB           Order Number
     C                     KFLD           IMDPNB           Order Sequence
     C                     KFLD           IMUENB           Order Secondary
     C                     KFLD           IMQ9CD           Price Method Co
      * Setup key
     C                     Z-ADD#1AIC3    IMAIC3
     C                     Z-ADD#1C4NB    IMC4NB
     C                     Z-ADD#1DPNB    IMDPNB
     C                     Z-ADD#1UENB    IMUENB
     C                     MOVEL#1Q9CD    IMQ9CD
     C           KLVAIM    CHAIN@IMCPZ5              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VAEXIT
     C                     END
      * Send message 'Order Detail Pricing   NF'
     C                     MOVEL'USR1675' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR1675' W0RTN
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         VBCKRL    BEGSR
      *================================================================
      * Check reference to Company Item
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C           YPMTFD    IFEQ '#1HGCD'
     C           ##RR      ANDEQYPMRRN
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(RCD) #1AIC3' defaulted for 'Company Number'.
      * Field '(RCD) #1HGCD' defaulted for 'Item Code'.
     C                     CALL 'PDJISRR'              90  SEL Company/Ite
     C                     PARM *BLANK    W0RTN   7
     C           #1AIC3    PARM #1AIC3    WQ0027  30       Company Number
     C           #1HGCD    PARM #1HGCD    WQ0028  70       Item Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDJISRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     98    *
     C                     END
      *
     C           #1HGCD    IFNE *ZERO                      Item Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VBEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1HGCD    IFEQ *ZERO                      Item Code
     C                     GOTO VBEXIT
     C                     END
      *
     C           KLVBBZ    KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD#1AIC3    BZAIC3
     C                     Z-ADD#1HGCD    BZHGCD
     C           KLVBBZ    CHAIN@BZREJU              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VBEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VBEXIT
     C                     END
      * Send message 'Company Item           NF'
     C                     MOVEL'USR0326' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0326' W0RTN
      *================================================================
     CSR         VBEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD016       ZHSTRW  40
     C                     Z-ADD021       ZHNDRW  40
     C                     Z-ADD001       ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
      *
     C           YPMRRN    IFGT *ZERO
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              92    *
     C           *IN92     IFEQ '0'
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
     C                     END
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              92    *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P6T3VA           PRC STRITM Fiel
     C                     Z-ADD*ZERO     P6T4VA           PRC CIDIFF Fiel
     C                     Z-ADD*ZERO     P6T5VA           PRC TOTAL 1 USR
     C                     Z-ADD*ZERO     P6T8VA           PRC SUBCRD USR
     C                     Z-ADD*ZERO     P6T6VA           PRC TOTAL 2 USR
     C                     Z-ADD*ZERO     P6UFVA           PRC TOTAL 3 USR
     C                     Z-ADD*ZERO     P6T9VA           PRC MSCYLD USR
     C                     Z-ADD*ZERO     P6UAVA           PRC CALCED TOTA
     C                     Z-ADD*ZERO     P6UBVA           PRC CIFMPF USR
     C                     Z-ADD*ZERO     P6UCVA           PRC IOVRFM USR
     C                     Z-ADD*ZERO     P6UDVA           PRC CFRTOV USR
     C                     Z-ADD*ZERO     P6UEVA           PRC OVERAGES US
     C                     Z-ADD*ZERO     P6T7VA           PRC TOTAL PRICE
     C                     MOVEL*BLANK    P7R4ST           USR Update Flag
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description Line Two
     C                     MOVEL*BLANK    WUAWNA 30
      * Define work field U/M - Primary
     C                     MOVEL*BLANK    WUADCD  2
      * Define work field U/M - Second
     C                     MOVEL*BLANK    WUAECD  2
      * Define work field U/M - Third
     C                     MOVEL*BLANK    WUAFCD  2
      * Define work field TXT field not needed
     C                     MOVEL*BLANK    WUG0TX 20
      * Define work field Pricing Retrieved Amount
     C                     Z-ADD*ZERO     WUTPVA 114
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL
     C                     MOVE ZZFLB     @1FLB
     C                     MOVE ZZFMB     @1FMB
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SBRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003 30
     C                     MOVEL*BLANK    WL0004 30
     C                     MOVEL*BLANK    WL0005  2
     C                     MOVEL*BLANK    WL0006  2
     C                     MOVEL*BLANK    WL0007  2
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
      *
     C                     Z-ADD06        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD500       W0SLM   50
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
      * Set to *CHANGE mode
     C                     MOVEL'CHG'     W0PMD   3
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * VAL Rtv and Center Hdg IF
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SCRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
