      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP121
      * TITLE:       REVISE FEED PICKUP TICKET
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     05/05/94
      *
      * FUNCTION: USES AN EDIT RECORD FORMAT TO ADD/CHANGE/DELETE
      *           A FEED PICKUP TICKET.
      *
      *           THIS PROGRAM IS CALLED FROM HP420 - WORK WITH
      *           FEED TICKETS.
      *
      *           THE USER MAY DELETE AN EXISTING RECORD BY TAKING
      *           F11=DELETE FROM THIS PROGRAM.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 01/30/01  LeAnne Fedor
      *           Production type was removed from the feed ticket files.
      *           So, removed all production type logic from program.
      *
      * 04/16/01  LeAnne Fedor
      *           Changed all feed mill business office logic. The user no
      *           longer keys this value. It is retrieved from the last ticket
      *           into the from bin. Also, removed the validation that 'from'
      *           and 'to' farm had to be assigned the same mill in the farm
      *           master.
      *
      * 06/05/01  LeAnne Fedor
      *           Recompile only. New field 'multisite' added to Farm Site file.
      *
      * 06/26/01  LeAnne Fedor
      *           Recompile only.
      *           Three fields (manager/supervisor/multisite) renamed in Farm Site file.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 07/23/01  LeAnne Fedor
      *           Added edit when 'from bin' is a shared bin and any/all groups that ate
      *           on the last ticket into the bin are closed, then an error message is issued.
      *
      * 09/04/01  LeAnne Fedor
      *           Recompile only. New 'square feet' fields added to Farm Site file.
      *
      * 01/07/02  LeAnne Fedor
      *           Added new edit. The user cannot use a ticket number from the block
      *           of numbers reserved for system assignment.
      *
      * 07/16/02  LeAnne Fedor
      *           Removed 'production phase' from Feed Ticket Header and Pick-up Ticket
      *           file.
      *
      * 07/31/02  LeAnne Fedor
      *           Added logic to populate 'production phase' with the phase from the farm
      *           when the detail feed ticket record will be 'allocated'---there is no group.
      *
      * 12/09/02  LeAnne Fedor
      *           Removed 'production phase' from Feed Ticket Detail file.
      *
      * 10/20/03  LeAnne Fedor
      *           Added an edit that the Feed Ticket Date cannot be prior to the
      *           Created Date of the group. Alice does not want any feed delivered
      *           to a group before it is created.
      *
      * 01/18/06  LeAnne Fedor
      *           Changed logic that used HSP020-Buildings Rooms to use our new file
      *           HSP113-Rooms/Bin Sets.
      *
      * 03/30/06  LeAnne Fedor
      *           The users now want the "last ration in the bin" to include any
      *           ration that got into the bin as the result of being the "to" side
      *           of a "pick-up" from some other bin.
      *
      *           Prior to this change only Delivery and Adjustment tickets were included
      *           when executing the "last ration in the bin" logic.
      *
      *           So, we changed the select logic on logical file HSL038R.
      *           Now, the DDS selects Delivery, Adjustment and the "To" side of
      *           Pick-up tickets.
      *
      * 08/18/06  LeAnne Fedor
      *           Changed the From Bin edit. The users encountered the situation where they
      *           renamed bins on a Farm. Then, they needed to enter a pick-up ticket from
      *           the Farm. When they used the 'new' bin name, the bin passed the 'valid' bin
      *           edit but failed the edit to find the last ticket into that bin. When they
      *           used the 'old' bin name, it passed the 'last ticket into the bin' edit but
      *           failed the 'valid' bin edit. SO, on a From Bin, we no longer perform the
      *           edit for a 'valid' bin in Bin Set Bins file. We just perform the retrieval/
      *           edit for the 'last ticket into the bin'.
      *
      * 03/03/08  LeAnne Ramsey
      *           While working on HPS Purge logic, I noticed we had Feed Pickup tickets
      *           with values in EOP Post Date before they were actually posted. Analysis
      *           indicates we are not initializing this field when we create the Pickup
      *           ticket.
      *
      * 04/23/09  LeAnne Ramsey
      *           Added Costed Date/Time Stamp to screen. It will display when the
      *           ticket has a Costed Date. We are not populating are new Costed Time/User
      *           fields in the historical data. So, the Costed Date/Time Stamp will only
      *           have Costed Date on the older records.
      *
      * 05/12/09  LeAnne Ramsey
      *           Added 1 new field/logic to Feed Ticket Header:
      *                 1) pickup ticket type code
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 09/18/09  LeAnne Ramsey
      *           Per Debbie Deen, the "Pick up from Pounds" cannot exceed 24,000....that's
      *           how much a bin holds.
      *
      * 09/23/09  LeAnne Ramsey
      *           Debbie Deen and I spent way too long trying to figure out why she was getting
      *           the message "No rations were delievered to Bin 6215 on Farm Site 00439" when
      *           she was trying to create a Pickup Ticket. Ultimately, we realized she was
      *           keying the Bin as 6215 instead of 06215. So, I added a check/message that the
      *           Bin does not exist for the farm.
      *
      * 06/24/10  LeAnne Ramsey
      *           Removed the edit that the Deliver To Bin could not be the same as the Pickup From
      *           Bin. On WTF Farms, Nursery pigs become GF pigs without any pigs moving and without
      *           any feed being physically moved. But, to get the feed switched from the Nursery
      *           Group to the GF group, the users were having to create 2 Feed Adjustment Tickets:
      *           1 ticket to take the Feed away from the Nursery group and 1 to give the feed to
      *           the GF Group.  With this change, they will no longer have to do this.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 03/25/20  Danny Nguyen - P405 - Farm Number Increase
      *           Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      *           Changed array MGW beginning position for 2nd parm to support Bin Code 6A.
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD121    CF   E             WORKSTN INFDS(IOFEED)
      *
      *
     FHSP014    IF   E           K DISK
      *    GROUP STATUS CODES
      *
      *
     FHSP015    IF   E           K DISK
      *    FEED TICKET STATUS CODES
      *
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE
      *
      *
     FHSL034D   IF   E           K DISK
      *  HOG GROUPS
      *
      *
     FHSL034E   IF   E           K DISK    RENAME(HGREC:HGRECE)
      *  HOG GROUPS
      *
      *
     Fhsj034w   if   e           k disk    rename(hgrec:hgrecw)
      *  Hog Group + Rooms/Bin sets + Bin Set Bins
      *
      *
     FHSL036B   IF   E           K DISK    RENAME(BNREC:BNRECB)
      *  BIN SET BINS
      *
      *
     FHSJ036A   IF   E           K DISK    RENAME(BNREC:BNRECA)
      *  BIN SET BINS
      *  BUILDING ROOMS
      *  HOG GROUPS
      *  HOG GROUP STATUS CODES (SELECT: GSFDFL = Y)
      *
      *
     FHSP037    UF A E           K DISK
      *   FEED TICKET HEADER
      *
      *
     FHSL038R   IF   E           K DISK    RENAME(FDREC:FDRECR)
      *     FEED TICKET DETAIL
      *     (omits the "from" side of Pick-up Tickets)
      *
      *
     FHSL038S   IF   E           K DISK    RENAME(FDREC:FDRECS)
      *     FEED TICKET DETAIL
      *     (OMIT:  FDTRCD = PICKUPS)
      *
      *
     FHSJ038O   IF   E           K DISK    RENAME(FDREC:FDRECO)
      *  FEED TICKET DETAIL + CLOSED HOG GROUPS
      *
      *
     FHSP038    UF A E           K DISK
      *   FEED TICKET DETAIL
      *
      *
     FHSP059    UF A E           K DISK
      *   FEED PICKUP TICKET
      *
      *
     FHSP071    IF   E           K DISK
      *  RATIONS
      *
      *
     Fhsl113a   if   e           k disk
      *  Rooms/Bin Sets
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO, DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *--------------------------------------------------------------------------------
      * Definition for external data area DAFDSN--System-Assigned Feed Ticket Number
      *--------------------------------------------------------------------------------
      *
     D                 ds
     D  dafdsn                 1     29
     D  dabegtkno             11     19  0
     D  daendtkno             21     29  0
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DAAPER'
      *---------------------------------------------------------------
     D                 DS
     D  DAAPER                 1     24
     D  DACCYY                 1      4
     D  DAPER                  5      6
     D  DABPDT                 7     14  0
     D  DAEPDT                15     22  0
     D  DAPGFL                23     23
     D  DAPPFL                24     24
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D RECOST          C                   CONST('RECOST')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D FROM            C                   CONST('F')
     D TO              C                   CONST('T')
     D DIRECT          C                   CONST('** DIRECT BIN')
     D SHARED          C                   CONST('** SHARED BIN')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *
      * Work fields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkisotkdt       s               D   datfmt(*iso)
     D wkisoopdt       s               D   datfmt(*iso)
     D wkdays          s              3  0
     D wkdaysalph      s              3
      *
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     D                 DS
     D  WKMDY                  1      6  0
     D  WKMM                   1      2  0
     D  WKDD                   3      4  0
     D  WKYY                   5      6  0
      *
      * DATE IN CCYYMMDD FORMAT
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
     C     MODE          IFEQ      CREATE                                       IF CREATE
      *
      * CLEAR SCREEN INPUT FIELDS
      *
     C                   Z-ADD     0             DFMDY
     C                   MOVE      *BLANK        DFTKNOFMBO
     C                   Z-ADD     0             DFTKNO
     C                   Z-ADD     0             DFFSFR
     C                   MOVE      *BLANK        DFBNFR
     C                   Z-ADD     0             DFFDLB
     C                   Z-ADD     0             DFFSTO
     C                   MOVE      *BLANK        DFBNTO
     C                   MOVE      *BLANK        DFHGTO
      *
      * CLEAR WORKFIELDS AND OUTPUT ONLY FIELDS; AND SET TICKET DATE TO ZERO
      *
     C                   EXSR      $CLEAR
     C                   Z-ADD     0             WKTKDT
     C                   ELSE
      *
      * THE MODE IS NOT 'CREATE'; CHECK THAT THE PICKUP TICKET
      * SELECTED BY THE USER STILL EXISTS.
      *
     C     key04         CHAIN(N)  HSP037                             90
     C                   select
     C                   when      *in90 = *on
     C                   MOVEL     YES           NOTFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00311'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFTKNO        XXTKNO
     C                   MOVEA     XXTKNO        MGW(1)
     C                   MOVEA     IPTRCD        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   other
      *
      * If the Ticket has been costed, display the Costed Date/Time/User.
      *
     C                   setoff                                       88
     C                   if        fhcodt <> 0                                  If costed date
     C                   seton                                        88
     C                   z-add     fhcotm        dfcotm
     C                   move      fhcousr       dfcousr
     C     *iso          test(d)                 fhcodt                 92
     C                   if        *in92 = *off
     C                   move      fhcodt        wkisodate
     C     *mdy          move      wkisodate     dfcomdy
     C                   endif
     C                   endif                                                  If costed date
      *
      * Determine if you need to protect any fields from user entry.
      *
     C                   exsr      $protect
      *
      * THE PICKUP TICKET STILL EXISTS, SO EXECUTE THE SUBROUTINE
      * TO ROLL UP THE ALLOCATED RECORDS INTO THE ORIGINAL RECORD.
      * AND, FLIP DATES FROM CCYYMMDD TO MMDDYY.
      *
     C                   EXSR      $ROLL1
     C                   EXSR      $FLIP1
      *
      * EXECUTE SUBROUTINE TO RETRIEVE THE 'FROM' BIN INFO
      *
     C                   EXSR      $FRBN
     C                   endsl
      *
     C                   ENDIF                                                  IF CREATE
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * Determine if entry fields should be protected.
      *----------------------------------------------------------------
      *
     C     $protect      begsr
      *
      * Check ticket status
      *
     C     FHTSCD        CHAIN     HSP015                             92
     C     *IN92         IFEQ      *ON                                          IF NOT FOUND
     C                   MOVEL     YES           POSTED
     C                   SETON                                        65
     C                   ELSE
      *
     C     TSPOFL        IFEQ      YES                                          IF POSTED
     C                   MOVEL     YES           POSTED
     C                   SETON                                        65
     C                   ENDIF                                                  IF POSTED
     C                   ENDIF                                                  IF NOT FOUND
      *
      *  A FEED TICKET CANNOT BE REVISED OR DELETED IF ANY
      *  FEED DETAIL RECORDS ARE ASSOCIATED WITH CLOSED GROUPS
      *
     C     key04         CHAIN     HSJ038O                            70
     C     *IN70         IFEQ      *OFF
     C                   MOVEL     YES           CLOSED
     C                   SETON                                        65
     C                   ENDIF
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * ROUTINE TO ROLL THE MULTIPLE DETAIL RECORDS BACK UP
      * INTO THE ORIGINAL RECORD THE USER KEYED ON SCREEN 1
      *----------------------------------------------------------------
      *
     C     $ROLL1        BEGSR
      *
     C                   Z-ADD     0             DFFDLB
      *
      * CLEAR DISPLAY FILE FIELDS ASSOCIATED WITH THE 'TO' BIN
      *
     C                   MOVE      *BLANK        DFTO
     C                   MOVE      *BLANK        DFFSTO
     C                   MOVE      *BLANK        DFBNTO
     C                   MOVE      *BLANK        DFHGTO
     C                   Z-ADD     0             WKSNTO
     C                   MOVE      *BLANK        WKBLTO
     C                   MOVE      *BLANK        WKRMTO
     C                   MOVE      *BLANK        WKRGTO
      *
      *
      * SET THE FIRST TIME FLAGS FOR 'FROM' AND 'TO' BINS TO YES
      *
     C                   MOVEL     YES           FIRSTF
     C                   MOVEL     YES           FIRSTT
      *
     C     key04         SETLL     HSP038
      *
     C     *IN93         DOUEQ     *ON                                          DO ROLL LOOP
     C     key04         READE(N)  HSP038                                 93
     C     *IN93         IFEQ      *OFF                                         IF NOT EOF
      *
      * IF THIS IS A 'FROM' BIN RECORD, 'FROM' BINS HAVE
      * NEGATIVE POUNDS.
      *
     C     FDFDLB        IFLT      0                                            IF FROM BIN
     C                   ADD       FDFDLB        DFFDLB
      *
     C     FIRSTF        IFEQ      YES                                          IF FIRST FR
     C                   MOVEL     FDBNCD        DFBNFR
     C                   MOVEL     FDRNCD        DFRNCD
     C                   MOVEL     FDADCD        DFADCD
     C                   MOVEL     FDFMBO        DFRTNOFMBO
     C                   Z-ADD     FDRTNO        DFRTNO
     C                   Z-ADD     FDRTDT        WKRTDT
     C                   MOVEL     FDFTCD        WKFTCD
     C                   MOVEL     FDRGCD        WKRGFR
      *
     C                   Z-ADD     FDFSCD        DFFSFR
     C     DFFSFR        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *OFF
     C                   MOVEL     FSFSNM        DFNMFR
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     DFNMFR
     C                   ENDIF
      *
     C     FDALFL        IFEQ      'D'                                          IF DIRECT
     C                   MOVEL     DIRECT        DFFR
     C                   Z-ADD     FDHGSN        WKSNFR
     C                   MOVEL     FDBLCD        WKBLFR
     C                   MOVEL     FDRMCD        WKRMFR
     C     FDHGSN        CHAIN     HSL034D                            94
     C     *IN94         IFEQ      *OFF
     C                   MOVEL     HGHGCD        DFHGFR
     C                   ENDIF
     C                   ELSE
     C                   MOVEL     SHARED        DFFR
     C                   ENDIF                                                  IF DIRECT
     C                   MOVEL     NO            FIRSTF
     C                   ENDIF                                                  IF FIRST FR
     C                   ENDIF                                                  IF FROM BIN
      *
      * IF THIS IS THE FIRST 'TO' BIN RECORD---A 'TO' BIN
      * RECORD WILL HAVE POUNDS GREATER THAN ZERO.
      *
     C     FDFDLB        IFGE      0                                            IF TO BIN
     C     FIRSTT        ANDEQ     YES
     C                   Z-ADD     FDFSCD        DFFSTO
     C                   MOVEL     FDBNCD        DFBNTO
     C                   MOVEL     FDRGCD        WKRGFR
      *
     C                   Z-ADD     FDFSCD        DFFSTO
     C     DFFSTO        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *OFF
     C                   MOVEL     FSFSNM        DFNMTO
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     DFNMTO
     C                   ENDIF
      *
     C     FDALFL        IFEQ      'D'                                          IF DIRECT
     C                   MOVEL     DIRECT        DFTO
     C                   Z-ADD     FDHGSN        WKSNTO
     C                   MOVEL     FDBLCD        WKBLTO
     C                   MOVEL     FDRMCD        WKRMTO
     C     FDHGSN        CHAIN     HSL034D                            94
     C     *IN94         IFEQ      *OFF
     C                   MOVEL     HGHGCD        DFHGTO
     C                   ENDIF
     C                   ELSE
     C                   MOVEL     SHARED        DFTO
     C                   MOVEL     NO            FIRSTT
     C                   ENDIF                                                  IF DIRECT
      *
     C                   ENDIF                                                  IF TO BIN
     C                   ENDIF                                                  IF NOT EOF
      *
     C                   ENDDO                                                  DO ROLL LOOP
      *
      * FLIP THE PICKUP POUNDS FROM A NEGATIVE VALUE TO A POSITIVE
      * VALUE FOR DISPLAYING ON THE SCREEN
      *
     C     -1            MULT      DFFDLB        DFFDLB
      *
     C                   ENDSR                                                                016
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * SET THE INDICATORS TO CONTROL SCREEN FIELDS AND
      * WRITE MESSAGES FROM ARRAYS TO MESSAGE SUBFILE
      *
     C                   EXSR      $IND
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP121K1
     C                   WRITE     HP121EC
     C                   EXFMT     HP121R1
      *
      * CLEAR MESSAGES
     C                   EXSR      $CLMSG
      *
      * GET USER'S INPUT AND SET ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3=EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4=PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN09         WHENEQ    *ON                                          F9-WHATEVER
     C     MODE          IFEQ      RECOST
     C                   EXSR      $RECTK
     C                   MOVEL     EXIT          ROUTNE
     C                   ENDIF
      *
     C     MODE          IFEQ      REVISE
     C                   EXSR      $EDIT1
     C     ERROR         IFEQ      0
     C                   EXSR      $DLTTK
     C                   EXSR      $CRTTK
     C                   MOVEL     EXIT          ROUTNE
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
     C                   ENDIF
      *
     C     MODE          IFEQ      CREATE
     C                   EXSR      $EDIT1
     C     ERROR         IFEQ      0
     C                   EXSR      $CRTTK
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
     C                   ENDIF
      *
     C     *IN11         WHENEQ    *ON                                          F11-DELETE
     C                   EXSR      $DLTTK
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C                   EXSR      $EDIT1
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * IF AN EXISTING TICKET IS POSTED, THE USER CANNOT CHANGE ANY
      * INFORMATION.
      *
     C     POSTED        IFEQ      YES                                          IF POSTED
     C                   ELSE
      *
      * CLEAR WORKFIELDS AND OUTPUT ONLY FIELDS
      *
     C                   EXSR      $CLEAR
      *
      * VALIDATE:
      *    TICKET DATE
      *    FROM FARM
     C                   EXSR      $TKDT
      *
     C                   Z-ADD     DFFSFR        WKFSCD
     C                   MOVEL     FROM          WKFARM
     C                   EXSR      $FSCD
      *
      * VALIDATE FROM BIN CODE AND RETRIEVE DEFAULTS
      *
     C     DFBNFR        IFEQ      *BLANK                                       IF NO BNFR
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   EXSR      $FRBN
     C                   ENDIF                                                  IF NO BNFR
      *
      * VALIDATE POUNDS PICKED UP
      *
     C                   SELECT
     C     DFFDLB        WHENEQ    0
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
      *
     C     DFFDLB        WHENLT    0
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
      *
     C     DFFDLB        WHENGT    24000
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09235'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
      * If creating, validate pick-up ticket number
      *
     C     MODE          IFEQ      CREATE                                       If creating
     C                   EXSR      $TKNO
     C                   ELSE
      *
      * If you have valid bin and pounds and are revising, check
      * for a feed mill business office match between the pickup ticket
      * and the reference ticket.
      *
     C                   if        dftknofmbo <> dfrtnofmbo and
     C                             error = 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00325'     mgid(e)
     C                   endif
     C                   endif
     C                   ENDIF                                                  If creating
      *
      * IF THE USER ENTERED ANY 'TO' BIN INFORMATION, VALIDATE:
      *    TO FARM SITE
      *    TO BIN CODE
      *    TO HOG GROUP CODE (IF BIN IS DIRECT)
      *
     C     DFFSTO        IFNE      0                                            IF TO STUFF
     C     DFBNTO        ORNE      *BLANK
     C     DFHGTO        ORNE      *BLANK
      *
     C                   Z-ADD     DFFSTO        WKFSCD
     C                   MOVEL     TO            WKFARM
     C                   EXSR      $FSCD
      *
     C     DFBNTO        IFEQ      *BLANK                                       IF NO BIN
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   EXSR      $tobn
     C                   ENDIF                                                  IF NO BIN
     C                   ENDIF                                                  IF TO STUFF
     C                   ENDIF                                                  IF POSTED
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * CLEAR OUTPUT SCREEN FIELDS AND WORKFIELDS
      *----------------------------------------------------------------
      *
     C     $CLEAR        BEGSR
      *
     C                   MOVE      *BLANK        DFRTNOFMBO
     C                   Z-ADD     0             DFRTNO
     C                   Z-ADD     0             DFRMDY
     C                   Z-ADD     0             DFTNRT
     C                   MOVE      *BLANK        DFRNCD
     C                   MOVE      *BLANK        DFADCD
      *
     C                   MOVE      *BLANK        DFNMFR
     C                   MOVE      *BLANK        DFHGFR
     C                   MOVE      *BLANK        DFFR
      *
     C                   MOVE      *BLANK        DFNMTO
     C                   MOVE      *BLANK        DFTO
      *
     C                   MOVE      *BLANK        WKFTCD
     C                   Z-ADD     0             WKRTDT
      *
     C                   Z-ADD     0             WKSNFR
     C                   MOVE      *BLANK        WKBLFR
     C                   MOVE      *BLANK        WKRMFR
     C                   MOVE      *BLANK        WKRGFR
      *
     C                   Z-ADD     0             WKSNTO
     C                   MOVE      *BLANK        WKBLTO
     C                   MOVE      *BLANK        WKRMTO
     C                   MOVE      *BLANK        WKRGTO
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * EDIT FARM SITE CODE
      *----------------------------------------------------------------
      *
     C     $FSCD         BEGSR
      *
     C                   SELECT
     C                   WHEN      WKFSCD = 0
     C     WKFARM        IFEQ      FROM
     C                   SETON                                        36
     C                   ELSE
     C                   SETON                                        33
     C                   ENDIF
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
      *
     C                   WHEN      WKFSCD < 0
     C     WKFARM        IFEQ      FROM
     C                   SETON                                        36
     C                   ELSE
     C                   SETON                                        33
     C                   ENDIF
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   OTHER
      *
      * CHECK THAT FARM SITE EXISTS IN THE FARM SITE MASTER FILE
      *
     C     WKFSCD        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD FARM
      *
     C     WKFARM        IFEQ      FROM
     C                   MOVEL     FSFSNM        DFNMFR
     C                   MOVEL     FSRGCD        WKRGFR
     C                   ELSE
     C                   MOVEL     FSFSNM        DFNMTO
     C                   MOVEL     FSRGCD        WKRGTO
     C                   ENDIF
     C                   ELSE
      *
      * INVALID FARM SITE
      *
     C     WKFARM        IFEQ      FROM
     C                   SETON                                        36
     C                   ELSE
     C                   SETON                                        33
     C                   ENDIF
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00131'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      WKFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD FARM
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * TICKET NUMBER
      *----------------------------------------------------------------
      *
     C     $TKNO         BEGSR
      *
     C                   SELECT
     C     DFTKNO        WHENEQ    0                                            IF NO TICKET
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
      *
     C     DFTKNO        WHENLT    0                                            IF NEG TICK
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   OTHER
      *
     C                   MOVE      DFRTNOFMBO    DFTKNOFMBO
      *
     C     key03         CHAIN     HSP037                             95
     C     *IN95         IFEQ      *OFF                                         IF EXISTS
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00310'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFTKNO        XXTKNO
     C                   MOVEA     XXTKNO        MGW(1)
     C                   MOVEL     IPTRCD        MGW(8)
     C                   MOVEA     DFTKNOFMBO    MGW(9)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF EXISTS
      *
      *
      * The ticket number cannot be a number in the block of reserved ticket
      * numbers.
      *
     C                   if        dftkno >= dabegtkno and                      If reserved
     C                             dftkno <= daendtkno
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00836'     mgid(e)
     C                   clear                   mgw
     C                   movel     dftkno        xxtkno
     C                   movea     xxtkno        mgw(1)
     C                   movel     dabegtkno     xxtkno
     C                   movea     xxtkno        mgw(8)
     C                   movel     daendtkno     xxtkno
     C                   movea     xxtkno        mgw(15)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If reserved
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * EDIT TICKET DATE
      *----------------------------------------------------------------
      *
     C     $TKDT         BEGSR
      *
      * VALIDATE THAT THE TICKET DATE IS VALID AND ADD CENTURY VALUES
      * TO THE WORK FIELD FOR LATER USE IN THE UPDATING ROUTINE.
      *
     C                   Z-ADD     DFMDY         PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        38
     C                   ADD       1             ERROR
     C                   MOVE      'HS09004'     MGID(E)
     C                   ELSE
     C                   Z-ADD     PTO8          WKTKDT
     C                   ENDIF                                                  IF INVALID
      *
      * IF THE DATE IS VALID,
      *     CHECK THAT IT IS NOT GREATER THAN TODAY'S DATE
      *     CHECK THAT IT IS NOT IN A CLOSED PERIOD
      *     IF IT IS IN THE CURRENT PERIOD,
      *         CHECK THAT THE PERIOD CLOSE PROGRAMS ARE NOT RUNNING
      *
     C     *IN38         IFEQ      *OFF                                         IF GOOD DATE
      *
     C                   SELECT
     C     WKTKDT        WHENGT    WKUDAT
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00426'     MGID(E)
     C                   ENDIF
      *
     C     WKTKDT        WHENLT    DABPDT
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09007'     MGID(E)
     C                   ENDIF
     C     WKTKDT        WHENGE    DABPDT
     C     WKTKDT        ANDLE     DAEPDT
     C     DAPPFL        ANDNE     *BLANK
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09016'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDIF                                                  IF GOOD DATE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * EDITS FOR A 'TO' BIN
      *----------------------------------------------------------------
      *
     C     $TOBN         BEGSR
      *
      * CHECK THAT BIN EXISTS FOR FARM SITE IN THE 'BIN SET BINS' FILE
      *
     C     key05         CHAIN     HSL036B                            96
     C     *IN96         IFEQ      *ON                                          IF BAD BIN
      *
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00139'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     dfbnto        MGW(1)
     C                   MOVE      WKFSCD        XXFSCD
      ** P405-Changed beginning length of 2nd parm to support Bin Code To 6A.
P405 C**                 MOVEA     XXFSCD        MGW(6)
P405 C                   MOVEA     XXFSCD        MGW(7)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * Check that 'bin set' is tied/assigned to at least one room
      *
     C     key01         chain     hsl113a                            92
     C                   if        *in92 = *on                                  If not assigned
      *
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00163'     mgid(e)
     C                   clear                   mgw
     C                   movea     bnbncd        mgw(1)
      ** P405-Changed beginning position of 2nd parm to support Bin Code 6A.
P405 C**                 movea     bnbicd        mgw(6)
P405 C                   movea     bnbicd        mgw(7)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      * DOES THIS BIN HAVE AT LEAST ONE HOG GROUP ELIGIBLE FOR FEED
      *
     C     key05         CHAIN     HSJ036A                            96
     C     *IN96         IFEQ      *ON                                          IF NO EATERS
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00138'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     dfbnto        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * BIN IS VALID, SO DETERMINE IF IT IS A DIRECT OR SHARED BIN
      *
     C                   EXSR      $shared
     C                   ENDIF                                                  IF NO EATERS
      *
     C                   ENDIF                                                  If not assigned
     C                   ENDIF                                                  IF BAD BIN
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO DETERMINE IF A BIN IS DIRECT OR SHARED
      *----------------------------------------------------------------
      *
     C     $shared       begsr
      *
      *
      * Default the 'direct bin' flag to YES.
      *
     C                   move      yes           wkbnfl
      *
      * Call the generic program to determine if the bin is shared.
      *
     C                   call      'HP8004'
     C                   parm                    bnfscd
     C                   parm                    bnbncd
     C                   parm      no            xxshared
      *
     C                   if        xxshared = yes                               If shared
     C                   movel     no            wkbnfl
     C                   endif                                                  If shared
      *
      *
      *
      * SETUP OUTPUT ONLY FIELDS ON SCREEN THAT TELL THE USER
      * WHETHER THE 'TO' BIN HE HAS KEYED IS A DIRECT OR SHARED BIN
      *
     C     WKBNFL        IFEQ      YES                                          IF DIRECT TO
     C                   MOVEL     DIRECT        DFTO
     C                   EXSR      $HGCD
     C                   ELSE
      *
     C                   MOVEL     SHARED        DFTO
     C     DFHGTO        IFNE      *BLANK                                       IF NOT BLANK
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00263'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFBNTO        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT BLANK
     C                   ENDIF                                                  IF DIRECT TO
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * RETRIEVE DEFAULTS FOR THE 'FROM' BIN ENTERED.
      *----------------------------------------------------------------
      *
      * THIS ROUTINE RETRIEVES THE FOLLOWING DEFAULT VALUES TO DISPLAY
      * ON THE SCREEN:
      *   LAST RATION/ENERGY CODE IN THE BIN
      *   IF BIN IS DIRECT, THE CORRESPONDING HOG GROUP
      *   REFERENCE TICKET NUMBER OF THE CORRESPONDING DELIVERY TICKET
      *   REFERENCE TICKET DATE OF THE CORRESPONDING DELIVERY TICKET
      *   CALCULATE AND DISPLAY AVERAGE COST OF FEED/TON.
      *
     C     $FRBN         BEGSR
      *
      * Does this Bin Exist for this Farm?
      *
     C                   if        *in36 = *off                                 If From Farm OK
     C     key11         chain     hsl036b                            92
     C                   if        *in92 = *on                                  If bad bin
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00139'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfbnfr        mgw(1)
     C                   move      dffsfr        xxfscd
      ** P405-Changed beginning position of 2nd parm to support Bin Code 6A.
P405 C**                 movea     xxfscd        mgw(6)
P405 C                   movea     xxfscd        mgw(7)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If bad bin
     C                   endif                                                  If From Farm OK
      *
      * RETRIEVE THE LAST RATION/ENERGY CODE INTO THE BIN PRIOR TO THE
      * PICKUP TICKET DATE ENTERED.
      * (Up until 4/06, the LF omitted all "pick-up" tickets. Now, it
      *  includes the "To" side of Pick-up Tickets as well as Delivery and
      *  Adjustment tickst.)
      *
     C     key12         CHAIN     HSL038R                            94
     C     *IN94         IFEQ      *ON                                          IF NO HIT
     C     key12         SETLL     HSL038R
     C     key11         READPE    HSL038R                                94
     C                   ENDIF                                                  IF NO HIT
      *
      * NO RECORD EXISTS OF ANY RATIONS BEING DELIVERED TO THIS BIN
      *
     C     *IN94         IFEQ      *ON                                          IF NO GOOD
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00245'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFBNFR        MGW(1)
     C                   MOVE      DFFSFR        XXFSCD
      ** P405-Changed beginning position of 2nd parm to support Bin Code 6A.
P405 C**                 MOVEA     XXFSCD        MGW(6)
P405 C                   MOVEA     XXFSCD        MGW(7)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * RATIONS WERE DELIVERED TO THIS BIN
      *
     C                   MOVEL     FDFMBO        DFRTNOFMBO
     C                   Z-ADD     FDRTNO        DFRTNO
     C                   Z-ADD     FDRTDT        WKRTDT
     C                   MOVEL     FDRNCD        DFRNCD
     C                   MOVEL     FDADCD        DFADCD
     C                   MOVEL     FDFTCD        WKFTCD
      *
      * FLIP REFERENCE TICKET DATE FROM CCYYMMDD TO MMDDYY
      *
     C                   Z-ADD     FDRTDT        WKCYMD
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
     C                   Z-ADD     WKMDY         DFRMDY
      *
      * IF THE LAST RECORD WAS FOR A 'DIRECT' BIN, THEN RETRIEVE THE
      * ALPHA HOG GROUP NUMBER TO DISPLAY ON THE SCREEN.
      *
     C     FDALFL        IFEQ      'D'                                          IF DIRECT
     C                   MOVEL     DIRECT        DFFR
     C                   Z-ADD     FDHGSN        WKSNFR
     C                   MOVEL     FDBLCD        WKBLFR
     C                   MOVEL     FDRMCD        WKRMFR
     C     FDHGSN        CHAIN     HSL034D                            94
     C     *IN94         IFEQ      *OFF
     C                   MOVEL     HGHGCD        DFHGFR
      *
      * Issue error if group is closed.
      *
     C                   if        hggscd = 'CL' and                            If closed
     C                             *in65 = *off
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00318'     mgid(e)
     C                   clear                   mgw
     C                   movea     hghgcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If closed
      *
     C                   ENDIF
     C                   ELSE
     C                   MOVEL     SHARED        DFFR
     C                   ENDIF                                                  IF DIRECT
      *
      * NOW ACCUMULATE ALL POUNDS AND DOLLARS OF THE RATION IN
      * THIS BIN FOR THE RETRIEVED REFERENCE TICKET. (THE LF OMITS
      * PICKUP TICKET RECORDS). CALCULATE AVERAGE COST PER TON.
      *
     C                   Z-ADD     0             WKFDTN
     C                   Z-ADD     0             WKFDLB
     C                   Z-ADD     0             WKFDAM
      *
     C     key10         SETLL     HSL038S
      *
     C     *IN91         DOUEQ     *ON                                          DO LOOP
     C     key10         READE     HSL038S                                91
     C     *IN91         IFEQ      *OFF                                         IF FOUND
     C                   ADD       FDFDLB        WKFDLB
     C                   ADD       FDINAM        WKFDAM
     C                   ADD       FDMDAM        WKFDAM
     C                   ADD       FDMFAM        WKFDAM
      *
     C                   if        dffr = shared and fdhgsn <> 0 and            If shared & closed
     C                             *in65 = *off
     C     fdhgsn        chain     hsl034d                            92
     C                   if        *in92 = *off and hggscd = 'CL'               If closed
     C                   seton                                        3031
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00304'     mgid(e)
     C                   clear                   mgw
     C                   movea     hghgcd        mgw(1)
     C                   movel     fdrtno        xxtkno
     C                   movea     xxtkno        mgw(10)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If closed
     C                   endif                                                  If shared & closed
      *
     C                   ENDIF                                                  IF FOUND
     C                   ENDDO                                                  DO LOOP
      *
      *  CALCULATE AVERAGE FEED COST PER TON (THE TON RATE)
      *
     C     WKFDLB        DIV(H)    2000          WKFDTN
     C     WKFDTN        IFNE      0
     C     WKFDAM        DIV(H)    WKFDTN        DFTNRT
     C                   ENDIF
     C                   ENDIF                                                  IF NO GOOD
      *
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      *  SUBROUTINE TO PERFORM EDITS FOR THE 'TO' HOG GROUP
      *----------------------------------------------------------------
      *
     C     $HGCD         BEGSR
      *
      * IT THE 'TO' BIN ENTERED BY THE USER IS 'DIRECT',
      *   IF HOG GROUP IS BLANK, DEFAULT IN A GROUP ELIGIBLE FOR FEED
      *     IF THERE IS ONLY 1 ELIGIBLE GROUP OF FORCE THE USER TO TAKE
      *     F4 AND SELECT A GROUP.
      *   IF THE USER KEYED A GROUP, VALIDATE THAT:
      *    1) IT IS A VALID GROUP FOR THIS FARM SITE
      *    2) THE HOG GROUP IS ELIGIBLE FOR FEED
      *
     C     DFHGTO        IFEQ      *BLANK                                       IF NO GROUP
     C                   EXSR      $NOGRP
     C                   ELSE
      *
     C     key07         CHAIN     HSL034E                            94
     C     *IN94         IFEQ      *ON                                          IF BAD GROUP
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00265'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGTO        MGW(1)
     C                   MOVE      DFFSTO        XXFSCD
     C                   MOVEA     XXFSCD        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * THE GROUP IS VALID FOR THIS FARM, SO PERFORM ADDITIONAL CHECKS
      *
     C                   Z-ADD     HGHGSN        WKSNTO
     C                   MOVEL     HGBLCD        WKBLTO
     C                   MOVEL     HGRMCD        WKRMTO
      *
      * DOES THE GROUP HAVE A STATUS THAT MAKES IT ELIGIBLE TO EAT FEED
      *
     C     HGGSCD        CHAIN     HSP014                             79
     C     *IN79         IFEQ      *ON                                          IF NO STATUS
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00268'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGTO        MGW(1)
     C                   MOVEA     HGGSCD        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * THE GROUP STATUS WAS FOUND. SO, CHECK THE 'FEED FLAG' TO SEE IF
      * THIS IS A STATUS THAT IS ELIGIBLE FOR FEED.
      *
     C     GSFDFL        IFEQ      NO                                           IF NOT ELIG
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00266'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGTO        MGW(1)
     C                   MOVEA     HGGSCD        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * THE GROUP IS ELIGIBLE TO EAT FEED, SO CHECK TO SEE IF IT EATS
      * FROM THE BIN KEYED BY THE USER.
      *
     C                   move      no            binfl
     C     hghgsn        setll     hsj034w
      *
     C                   dou       *in91 = *on or binfl = yes                   Do bin loop
     C     hghgsn        reade     hsj034w                                91
     C                   if        *in91 = *off and                             If not eof
     C                             bnbncd = dfbnto
     C                   move      yes           binfl
     C                   endif                                                  If not eof
     C                   enddo                                                  Do bin loop
      *
     C                   if        binfl = no                                   If wrong bin
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00269'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfhgto        mgw(1)
     C                   movea     dfbnto        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If wrong bin
      *
      * Make sure that the 'create date' of the group is on/after the
      * ticket date. Alice does not want any group on a ticket if the ticket
      * date is prior to the group's create date.
      *
     C                   if        wktkdt < hgcrdt
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00388'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfhgto        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   ENDIF                                                  IF NOT ELIG
     C                   ENDIF                                                  IF NO STATUS
     C                   ENDIF                                                  IF BAD GROUP
     C                   ENDIF                                                  IF NO GROUP
      *
      *
      * If: a) hog group is not blank
      *     b) the group is not a BGF group
      *     c) the group is not a Continuous Flow group
      *     d) the group is valid and
      * then,
      *     1) retrieve the 'max days' for the ration and
      *     2) check that the group is the correct age for this ration
      *
     C                   if        dfhgto <> *blank and hgppcd <> 'BGF  '       If OK
     C                             and hgcffl = no and *in32 = *off
     C                   exsr      $age
     C                   endif                                                  If OK
      *
      * From/To Group cannot be the same group
      *
     C                   if        dfhgto <> *blank and dfhgto = dfhgfr         If same From/To
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00390'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfhgto        mgw(1)
     C                   movea     dfhgfr        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If same From/To
      *
     C                   ENDSR
      /EJECT
      *-------------------------------------------------------------------------
      * Calculate the 'age' of the group and compare it to the ration max age
      *-------------------------------------------------------------------------
      *
     C     $age          begsr
      *
      * Retrieve the 'max days' for the ration
      *
     C     dfrncd        chain     hsp071                             92
     C                   if        *in92 = *off                                 If ration hit
      *
      * Default the 'age' of the group to the 'average days old in'.
      *
     C                   z-add     hgadoi        wkdays
      *
      * If the 'ticket date' is after the 'open date' of the group,
      * Move the 'ticket date' and the 'open date' of the group to date format fields.
      * Find the number of days between the 'ticket date' and the 'open date'.
      * Add this difference to the 'average days old in'.
      *
      *
     C                   if        wktkdt > hgopdt and hgopdt <> 0              If need to calc
     C     *iso          move      wktkdt        wkisotkdt
     C     *iso          move      hgopdt        wkisoopdt
     C     wkisotkdt     subdur    wkisoopdt     wkdays:*d
     C                   add       hgadoi        wkdays
     C                   endif                                                  If need to calc
      *
      * Check 'age' against ration's max.
      *
     C                   if        rnmaxday < wkdays                            If too old
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00525'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfrncd        mgw(1)
     C                   movel     rnmaxday      wkdaysalph
     C                   movea     wkdaysalph    mgw(6)
     C                   movea     dfhgto        mgw(9)
     C                   movel     wkdays        wkdaysalph
     C                   movea     wkdaysalph    mgw(16)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If too old
      *
     C                   endif                                                  If ration hit
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      *  FIND GROUP WHEN BIN IS DIRECT AND NO GROUP IS ENTERED
      *----------------------------------------------------------------
      *
      * THIS SUBROUTINE IS EXECUTED WHEN THE TO BIN IS DIRECT AND
      * THE USER HAS NOT ENTERED A HOG GROUP.
      *
      * IF ONLY ONE GROUP IS ELIGIBLE FOR FEED, DEFAULT IT IN.
      * BUT, IF MULTIPLE GROUPS ARE ELIGIBLE, ISSUE A MESSAGE TO THE
      * USER TO SELECT A GROUP.
      *
     C     $NOGRP        BEGSR
      *
     C     key05         CHAIN     HSJ036A                            96
     C     *IN96         IFEQ      *OFF                                         IF EATER
      *
      * CHECK TO SEE IF THERE IS ANOTHER GROUP ELIGIBLE FOR FEED
      *
     C     key05         READE     HSJ036A                                96
     C     *IN96         IFEQ      *OFF                                         IF MULT GRP
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00309'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFBNTO        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * ELSE, ONLY ONE GROUP IS ELIGIBLE; SO DEFAULT ITS VALUES IN.
      *
     C                   MOVEL     HGHGCD        DFHGTO
     C                   Z-ADD     HGHGSN        WKSNTO
     C                   MOVEL     HGBLCD        WKBLTO
     C                   MOVEL     HGRMCD        WKRMTO
     C                   ENDIF                                                  IF MULT GRP
     C                   ELSE
      *
      * NO GROUPS ARE ELIGIBLE FOR FEED
      *
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00264'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSFR        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     DFBNTO        MGW(6)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF EATER
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      *  RESET INDICATORS
      *----------------------------------------------------------------
      *
     C     $IND          BEGSR
      *
      * THE DSPATR LOGIC USED IN THE DSPF REQUIRES AT LEAST ONE
      * INDICATOR TO BE ON.
      *
     C                   SETON                                        42
      *
     C     NOTFLG        IFEQ      YES                                          IF NOT FOUND
     C                   SETON                                        90
     C                   ENDIF                                                  IF NOT FOUND
      *
      *  SET UP FOR USER'S ACTION
      *
     C                   SELECT
     C     DFMODE        WHENEQ    REVISE                                       WH REVISE
     C                   SETON                                        60
     C     DFMODE        WHENEQ    CREATE                                       WH CREATE
     C                   SETON                                        61
     C     DFMODE        WHENEQ    RECOST                                       WH RECOST
     C                   SETON                                        63
     C                   ENDSL
      *
      *  SET VARIOUS PROTECT INDICATORS
      *
     C     POSTED        IFEQ      YES                                          IF POSTED
     C     CLOSED        OREQ      YES
     C                   SETON                                        65
     C                   ELSE
     C                   SETOFF                                       65
     C                   ENDIF                                                  IF POSTED
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * F4 PROMPT ON SCREEN 1
      *----------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * FROM FARM SITE
      *
     C     FLD           WHENEQ    'DFFSFR'
     C     *IN63         ANDEQ     *OFF
     C     *IN65         ANDEQ     *OFF
     C                   CALL      'HP528'
     C                   PARM      *blank        XXFMBO
     C                   PARM      0             WKFSCD
     C                   PARM      *blank        XXFSNM
     C                   SETON                                        56
     C     WKFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     WKFSCD        DFFSFR
     C                   MOVEL     XXFSNM        DFNMFR
     C                   ENDIF                                                  IF SELECTED
      *
      *  FROM BIN
      *
     C     FLD           WHENEQ    'DFBNFR'
     C     *IN63         ANDEQ     *OFF
     C     *IN65         ANDEQ     *OFF
     C                   CALL      'HP5059'
     C                   PARM                    DFFSFR
     C                   PARM      *blank        XXBNCD
     C                   SETON                                        51
     C     XXBNCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXBNCD        DFBNFR
     C                   ENDIF                                                  IF SELECTED
      *
      * TO FARM SITE
      *
     C     FLD           WHENEQ    'DFFSTO'
     C     *IN63         ANDEQ     *OFF
     C     *IN65         ANDEQ     *OFF
     C                   CALL      'HP528'
     C                   PARM      *blank        XXFMBO
     C                   PARM      0             WKFSCD
     C                   PARM      *blank        XXFSNM
     C                   SETON                                        56
     C     WKFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     WKFSCD        DFFSTO
     C                   MOVEL     XXFSNM        DFNMTO
     C                   ENDIF                                                  IF SELECTED
      *
      *  TO BIN
      *
     C     FLD           WHENEQ    'DFBNTO'
     C     *IN63         ANDEQ     *OFF
     C     *IN65         ANDEQ     *OFF
     C                   CALL      'HP532'
     C                   PARM                    DFFSTO
     C                   PARM      *blank        XXBNCD
     C                   PARM      *blank        XXBICD
     C                   SETON                                        55
     C     XXBNCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXBNCD        DFBNTO
     C                   ENDIF                                                  IF SELECTED
      *
      *  'TO' HOG GROUP
      *
     C     FLD           WHENEQ    'DFHGTO'
     C     *IN63         ANDEQ     *OFF
     C     *IN65         ANDEQ     *OFF
      *
      * F4 IS NOT ALLOWED FOR SELECTING A GROUP WHEN THE BIN IS SHARED
      *
     C     WKBNFL        IFEQ      NO                                           IF SHARED
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00267'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFBNTO        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      * BIN IS DIRECT
     C                   CALL      'HP533'
     C                   PARM                    DFFSTO
     C                   PARM                    DFBNTO
     C                   PARM      *blank        XXHGCD
     C                   SETON                                        52
     C     XXHGCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXHGCD        DFHGTO
     C                   ENDIF                                                  IF SELECTED
     C                   ENDIF                                                  IF SHARED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * FLIP DATES FROM CCYYMMDD TO MMDDYY
      *----------------------------------------------------------------
      *
     C     $FLIP1        BEGSR
      *
      * FLIP TICKET DATE
      *
     C                   Z-ADD     WKTKDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         DFMDY
      *
      * FLIP REFERENCE TICKET DATE
      *
     C                   Z-ADD     WKRTDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         DFRMDY
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      *  MANIPULATE DATES WITH DATE UTILITY
      *----------------------------------------------------------------
      *
     C     $DATE         BEGSR
      *
     C                   CALL      'UT80060R'
     C                   PARM                    PFRM8             8 0
     C                   PARM                    PTO8              8 0
     C                   PARM                    PFRFMT            4
     C                   PARM                    PTOFMT            4
     C                   PARM                    PDAYS             4 0
     C                   PARM                    PCODE             1
     C                   PARM                    PRTRN             1
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * FLIP DATE FROM YYMMDD TO MMDDYY
      *----------------------------------------------------------------
      *
     C     $TOMDY        BEGSR
      *
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * CREATE A NEW FEED TICKET HEADER AND DETAIL
      *----------------------------------------------------------------
      *
     C     $CRTTK        BEGSR
      *
      * CREATE THE FEED TICKET HEADER RECORD
      * CREATE ALL DETAIL RECORDS FOR THIS FEED TICKET
      *
     C                   EXSR      $CRTFH
     C                   EXSR      $CRTFD
      *
      * CREATE EXTENDED PICKUP TICKET RECORD WHEN THE
      * FROM AND TO FARMS ARE DIFFERENT
      *
     C     DFFSTO        IFNE      0
     C     DFFSFR        ANDNE     DFFSTO
     C                   EXSR      $CRTFP
     C                   ENDIF
      *
      * IF USER IS IN 'CREATE' MODE, THEN
      * ISSUE THE MESSAGE THAT THE TICKET WAS CREATED
      *
     C     MODE          IFEQ      CREATE
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00317'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFTKNO        XXTKNO
     C                   MOVEA     XXTKNO        MGW(1)
     C                   MOVEA     IPTRCD        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      *  CREATE A FEED TICKET HEADER RECORD
      *----------------------------------------------------------------
      *
     C     $CRTFH        BEGSR
      *
      *  RETRIEVE THE PRODUCED FLAG VALUE FOR THE RTNO TICKET FROM
      *  HSP037. IF THE RTNO IS NOT FOUND, MOVE 'YES' TO THE FLAG FOR
      *  THIS PICKUP TICKET HEADER.
      *
     C     key06         CHAIN(N)  HSP037                             97
     C     *IN97         IFEQ      *ON
     C                   MOVEL     YES           FHPRFL
     C                   ENDIF
      *
     C                   MOVEL     YES           FHCSFL
     C                   Z-ADD     DFTKNO        FHTKNO
     C                   Z-ADD     WKTKDT        FHTKDT
     C                   MOVEL     DFTKNOFMBO    FHFMBO
     C                   Z-ADD     DFRTNO        FHRTNO
     C                   Z-ADD     WKRTDT        FHRTDT
      *
     C                   Z-ADD     DFFSFR        FHFSCD
     C                   MOVEL     WKRGFR        FHRGCD
      *
     C                   MOVEL     'P'           FHTRCD
     C                   MOVE      *BLANK        FHVINO
     C                   Z-ADD     0             FHCODT
     C                   z-add     0             fhcotm
     C                   move      *blank        fhcousr
     C                   Z-ADD     0             FHPODT
     C                   Z-ADD     0             FHEPDT
      *
      *
     C     DFTSCD        IFEQ      *BLANK                                       IF CREATE
     C     DFTSCD        OREQ      'EN'
     C                   MOVEL     'EN'          FHTSCD
     C                   ELSE
     C                   MOVEL     'RC'          FHTSCD
     C                   ENDIF                                                  IF CREATE
      *
      * Populate the "pickup ticket type code" field with:
      *  N=No To Farm
      *  S=Same To Farm
      *  D=Different To Farm
      *
     C                   select
     C                   when      dffsto = 0
     C                   move      'N'           fhputycd
     C                   when      dffsfr = dffsto
     C                   move      'S'           fhputycd
     C                   when      dffsfr <> dffsto
     C                   move      'D'           fhputycd
     C                   endsl
      *
     C                   WRITE     FHREC
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * CREATE FEED TICKET DETAIL LINES
      *----------------------------------------------------------------
      *
     C     $CRTFD        BEGSR
      *
      * FIRST, SETUP THE VALUES FOR FIELDS THAT WON'T CHANGE PER LINE
      *
     C                   Z-ADD     DFTKNO        FDTKNO
     C                   MOVEL     'P'           FDTRCD
     C                   Z-ADD     WKTKDT        FDTKDT
     C                   MOVEL     DFTKNOFMBO    FDFMBO
     C                   Z-ADD     DFRTNO        FDRTNO
     C                   Z-ADD     WKRTDT        FDRTDT
      *
      * DEFAULTS
     C                   Z-ADD     0             FDALDT
     C                   Z-ADD     0             FDRCDT
     C                   Z-ADD     0             FDMCDT
     C                   Z-ADD     0             FDINAM
     C                   Z-ADD     0             FDMDAM
     C                   Z-ADD     0             FDMFAM
     C                   Z-ADD     0             FDDLAM
      *
     C                   MOVEL     DFRNCD        FDRNCD
     C                   MOVEL     DFADCD        FDADCD
     C                   MOVEL     WKFTCD        FDFTCD
      *
      * LOGIC FOR 'FROM' BIN RECORD. (POUNDS ARE WRITTEN AS NEGATIVE)
      *
     C                   Z-ADD     DFFSFR        FDFSCD
     C                   MOVEL     WKRGFR        FDRGCD
      *
     C                   MOVEL     DFBNFR        FDBNCD
     C                   Z-SUB     DFFDLB        FDFDLB
     C                   Z-ADD     WKSNFR        FDHGSN
     C                   MOVEL     WKBLFR        FDBLCD
     C                   MOVEL     WKRMFR        FDRMCD
     C                   Z-ADD     1             FDLNNO
      *
     C     WKSNFR        IFEQ      0
     C                   MOVEL     'T'           FDALFL
     C                   ELSE
     C                   MOVEL     'D'           FDALFL
     C                   ENDIF
      *
     C                   WRITE     FDREC
      *
      * LOGIC FOR 'TO' BIN RECORD. (POUNDS ARE WRITTEN AS POSITIVE)
      *
     C     DFFSTO        IFNE      0                                            IF TO
     C                   Z-ADD     DFFSTO        FDFSCD
     C                   MOVEL     WKRGTO        FDRGCD
     C                   MOVEL     DFBNTO        FDBNCD
     C                   Z-ADD     DFFDLB        FDFDLB
     C                   Z-ADD     WKSNTO        FDHGSN
     C                   MOVEL     WKBLTO        FDBLCD
     C                   MOVEL     WKRMTO        FDRMCD
     C                   Z-ADD     2             FDLNNO
      *
     C     WKSNTO        IFEQ      0
     C                   MOVEL     'T'           FDALFL
     C                   ELSE
     C                   MOVEL     'D'           FDALFL
     C                   ENDIF
      *
     C                   WRITE     FDREC
     C                   ENDIF                                                  IF TO
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * CREATE THE FEED PICKUP EXTENSION RECORD
      *----------------------------------------------------------------
      *
     C     $CRTFP        BEGSR
      *
     C                   MOVEL     DFTKNOFMBO    FPFMBO
     C                   Z-ADD     DFTKNO        FPTKNO
     C                   MOVEL     'P'           FPTRCD
      *
     C                   Z-ADD     DFFSTO        FPFSCD
     C                   WRITE     FPREC
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      *  DELETE THE FEED TICKET
      *----------------------------------------------------------------
      *
     C     $DLTTK        BEGSR
      *
      * DELETE THE HEADER RECORD
      *
     C     key03         CHAIN     HSP037                             95
     C     *IN95         IFEQ      *OFF                                         IF FOUND
     C                   DELETE    FHREC
     C                   ENDIF                                                  IF FOUND
      *
      * DELETE THE FEED DETAIL RECORDS
      *
     C     key04         SETLL     HSP038
     C                   SETOFF                                       93
     C     *IN93         DOUEQ     *ON                                          DO DETAIL
     C     key04         READE     HSP038                                 93
     C     *IN93         IFEQ      *OFF                                         IF FOUND
     C                   DELETE    FDREC
     C                   ENDIF                                                  IF FOUND
     C                   ENDDO                                                  DO DETAIL
      *
      * DELETE FEED PICKUP EXTENSION RECORD
      *
     C     key03         CHAIN     HSP059                             95
     C     *IN95         IFEQ      *OFF                                         IF FOUND
     C                   DELETE    FPREC
     C                   ENDIF                                                  IF FOUND
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * RECOST FEED TICKET HEADER AND ASSOCIATED PICKUPS
      *----------------------------------------------------------------
      *
     C     $RECTK        BEGSR
      *
      * CHANGE THE STATUS OF THE FEED TICKET HEADER RECORD
      *
     C     key03         CHAIN     HSP037                             95
     C     *IN95         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     'RC'          FHTSCD
     C                   UPDATE    FHREC
     C                   ENDIF                                                  IF FOUND
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      *  SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANKS       MGI
     C                   PARM      *BLANKS       MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    MODE
     C     DFTKNOFMBO    PARM                    IPFMBO
     C                   PARM                    IPFSCD
     C     DFRTNO        PARM                    IPRTNO
     C     WKRTDT        PARM                    IPRTDT
     C     DFTKNO        PARM                    IPTKNO
     C     WKTKDT        PARM                    IPTKDT
     C     DFMDY         PARM                    IPMDY
     C     DFTSCD        PARM                    IPTSCD
     C                   PARM                    IPTRCD
     C                   PARM                    RTNCD
      *
      *  DEFINE INCOMING PARM FIELDS
      *
     C     *LIKE         DEFINE    FHFMBO        IPFMBO
     C     *LIKE         DEFINE    FHFSCD        IPFSCD
     C     *LIKE         DEFINE    DFMDY         IPMDY
     C     *LIKE         DEFINE    FHTKDT        IPRTDT
     C     *LIKE         DEFINE    FHTKDT        IPTKDT
     C     *LIKE         DEFINE    FHTKNO        IPRTNO
     C     *LIKE         DEFINE    FHTRCD        IPTRCD
     C     *LIKE         DEFINE    FHTSCD        IPTSCD
     C     *LIKE         DEFINE    FHTKNO        IPTKNO
      *
      * Key lists
      *
     C     key01         KLIST
     C                   KFLD                    BNFSCD
     C                   KFLD                    BNBICD
      *
      *
     C     key03         KLIST
     C                   KFLD                    DFTKNOFMBO
     C                   KFLD                    DFTKNO
     C                   KFLD                    IPTRCD
      *
      *
     C     key04         KLIST
     C                   KFLD                    IPFMBO
     C                   KFLD                    IPTKNO
     C                   KFLD                    IPTRCD
      *
      *
     C     key05         KLIST
     C                   KFLD                    DFFSTO
     C                   KFLD                    DFBNTO
      *
      *
     C     key06         KLIST
     C                   KFLD                    DFRTNOFMBO
     C                   KFLD                    DFRTNO
      *
      *
     C     key07         KLIST
     C                   KFLD                    DFFSTO
     C                   KFLD                    DFHGTO
      *
      *
     C     key10         KLIST
     C                   KFLD                    DFRTNOFMBO
     C                   KFLD                    DFRTNO
     C                   KFLD                    DFBNFR
     C                   KFLD                    DFRNCD
     C                   KFLD                    DFADCD
      *
     C     key11         KLIST
     C                   KFLD                    DFFSFR
     C                   KFLD                    DFBNFR
      *
     C     key12         KLIST
     C                   KFLD                    DFFSFR
     C                   KFLD                    DFBNFR
     C                   KFLD                    WKTKDT
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            ERRFLG            1
     C                   MOVEL     NO            NOTFLG            1
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C     *LIKE         DEFINE    DFMODE        MODE                           SFL POSITION
      *
      *
      * ALPHA FIELDS FOR USE AS PARMS
      *
     C                   MOVE      *BLANK        XXSHARED          1
     C                   MOVE      *BLANK        XXTKNO            7
     C     *LIKE         DEFINE    BNBICD        XXBNCD
     C     *LIKE         DEFINE    HGHGCD        XXHGCD
     C     *LIKE         DEFINE    DFRTNOFMBO    XXFMBO
     C                   MOVE      *BLANK        XXFSCD            5
     C     *LIKE         DEFINE    FSFSNM        XXFSNM
     C     *LIKE         DEFINE    BNBICD        XXBICD
      *
      * CONTROL FIELDS, FLAGS, WORKFIELDS, COUNTERS
      *
     C                   MOVEL     NO            POSTED            1
     C                   MOVEL     NO            CLOSED            1
     C                   MOVEL     YES           FIRSTF            1            FIRST FROM
     C                   MOVEL     YES           FIRSTT            1            FIRST TO
     C                   Z-ADD     0             WKFDAM           11 2
     C                   MOVE      *BLANK        WKFARM            1            TO OR FROM
     C                   MOVE      *BLANK        WKBNFL            1            DIR/SHARED
     C                   MOVEL     YES           BINFL             1
      *
     C     *LIKE         DEFINE    WKTKDT        WKUDAT
     C                   Z-ADD     0             WKFDLB            9 0
     C                   Z-ADD     0             WKFDTN            5 2
     C     *LIKE         DEFINE    FDFTCD        WKFTCD
     C     *LIKE         DEFINE    FDTKDT        WKTKDT
     C     *LIKE         DEFINE    FDRTDT        WKRTDT
      *
     C     *LIKE         DEFINE    FDHGSN        WKSNFR
     C     *LIKE         DEFINE    FDBLCD        WKBLFR
     C     *LIKE         DEFINE    FDRMCD        WKRMFR
     C     *LIKE         DEFINE    FDRGCD        WKRGFR
      *
     C     *LIKE         DEFINE    FDHGSN        WKSNTO
     C     *LIKE         DEFINE    FDBLCD        WKBLTO
     C     *LIKE         DEFINE    FDRMCD        WKRMTO
     C     *LIKE         DEFINE    FDRGCD        WKRGTO
      *
     C     *LIKE         DEFINE    FSFSCD        WKFSCD
      *
      *
      * THE USER CAN COME INTO THIS PROGRAM SEVERAL DIFFERENT WAYS.
      * CHECK THE ENTRY MODE AND SET THE APPROPRIATE INDICATORS TO
      * CONTROL THE SCREEN DISPLAY.
      *
     C                   SELECT
     C     MODE          WHENEQ    CREATE
     C                   MOVEL     CREATE        DFMODE
     C                   SETON                                        61
      *
     C     MODE          WHENEQ    REVISE
     C                   MOVEL     REVISE        DFMODE
     C                   SETON                                        60
      *
     C     MODE          WHENEQ    RECOST
     C                   MOVEL     RECOST        DFMODE
     C                   SETON                                        63
     C                   ENDSL
      *
      * IF THE USER IS CREATING A NEW PICKUP TICKET
      *    1) RETRIEVE SYSTEM DATE TO DISPLAY ON THE SCREEN
      *
     C     MODE          IFEQ      CREATE                                       IF CREATE
     C                   Z-ADD     UDATE         DFMDY
     C                   ENDIF                                                  IF CREATE
      *
      * THE SYSTEM DATE IS REQUIRED IN CCYYMMDD FORMAT FOR
      * EDITING; SO, FLIP THE DATE.
      *
     C                   Z-ADD     UDATE         PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   EXSR      $DATE
      *
     C     PRTRN         IFEQ      *BLANK                                       IF VALID
     C                   Z-ADD     PTO8          WKUDAT
     C                   ELSE
     C                   Z-ADD     0             WKUDAT
     C                   ENDIF                                                  IF VALID
      *
      * BRING IN THE DATA AREA THAT CONTAINS THE CURRENT ACCOUNTING
      * PERIOD
      *
     C     *DTAARA       DEFINE                  DAAPER
     C     *DTAARA       DEFINE                  DAFDSN
     C                   IN        *DTAARA
      *
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
