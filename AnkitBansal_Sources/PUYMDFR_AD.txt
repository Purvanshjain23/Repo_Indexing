// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUYMDFR
// ?Date: 14.08.2025 Time: 03:51:42
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Center HdgRP4IF) TYPE(EXCINTFUN)                     AC2213822;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen HeadingsRP4 IF) TYPE(EXCINTFUN)                     AC2213823;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40RP4U.
  EXECUTE FUNCTION(CLC Center Txt Str 40RP4U) TYPE(EXCUSRSRC) ('PUYYUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   D UCT             S              1    DIM(40)                              CENTER TABLE
   C                   MOVEA     #IDSC4        UCT                            LOAD ARRAY
   C                   Z-ADD     40            UX                2 0          SET COUNTER
   C     UX            DOWGT     0
   C     UCT(UX)       IFEQ      ' '
   C                   SUB       1             UX
   C                   ELSE
   C                   Z-ADD     UX            UXH               2 0
   C                   Z-ADD     0             UX
   C                   END
   C                   END
   C     40            SUB       UXH           UX
   C     UX            DIV       2             UX
   C     UX            IFGT      0
   C                   MOVE      *BLANKS       UCT
   C                   MOVEA     #IDSC4        UCT(UX)
   C                   END
   C                   MOVEA     UCT           #ODE40                         LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co HeadRP4U.
  EXECUTE FUNCTION(MOV Appl Desc-Co HeadRP4U) TYPE(EXCUSRSRC) ('PUYZUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                   MOVE      #IDE40        ##CMP            40
  }

 }

}


EXECUTE FUNCTION(Rtv Plant Co/Org      RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1826265;
PARAMETER(CTL.Company_Number);
PARAMETER(LCL.Plant_Company_Sts);
PARAMETER(LCL.Company_Organization);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Initialize subfile control

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Item_Description);
PARAMETER(NLL.Description_Line_Two);
PARAMETER(NLL.UOM_Primary);
PARAMETER(NLL.UOM_Second);
PARAMETER(NLL.UOM_Third);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.First Time Flag EQ LCL.BLANK
IF LCL.First_Time_Flag = LCL.BLANK;

// CTL.Record Status = CND.Active
CTL.Record_Status = 'A';

// LCL.First Time Flag = CND.NO
LCL.First_Time_Flag = 'N';

ENDIF;

//?USER: Initialize subfile record from DBF record

EXECUTE FUNCTION(RTV Warehouse          RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1100960;
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.USR_Warehouse_description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


// RCD.On Hand UOM1 Summary U = RCD.On Hand UOM1 Summary
RCD.On_Hand_UOM1_Summary_U = RCD.On_Hand_UOM1_Summary;

// RCD.In Transit UOM1 Summary U = RCD.In Transit UOM1 Summary
RCD.In_Transit_UOM1_Summary_U = RCD.In_Transit_UOM1_Summary;

// RCD.On Hold UOM1 Summary U = RCD.On Hold UOM1 Summary
RCD.On_Hold_UOM1_Summary_U = RCD.On_Hold_UOM1_Summary;

//?USER: Process subfile control (Pre-confirm)

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?Process create request
CASE;

// IF CTL.*CMD key is *Create
IF CTL.*CMD_key = '06';

// AND PAR.Display View Only Usr is MaintenanceView
AND PAR.Display_View_Only_Usr = *BLANK;

EXECUTE FUNCTION(RTV Item Str Type     RT) TYPE(RTVOBJ) FILE(OMBYREP)           AC2118069;
PARAMETER(CTL.Item_Code);
PARAMETER(LCL.Item_Structure_Type_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Item Structure Type Code is NE 900
IF LCL.Item_Structure_Type_Code <> 900;

// AND LCL.Item Structure Type Code is ne 740
AND LCL.Item_Structure_Type_Code <> 740;

// AND LCL.Company Organization is Seaboard
AND LCL.Company_Organization = 'S';

//?if not a Kill or CoPack item
//?R9547 DN 03/15/17-Item BOM Must Exist Before Allowed To Create.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv for Existence     RT) TYPE(RTVOBJ) FILE(PDIOREP)           AC2134072;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Item_Code);

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Generic Message 80 USR = CONCAT(CON.Must create Item BOM befo,CON.re F6=Create can be done.,C
LCL.Generic_Message_80_USR = 'Must create Item BOM befo' + 're F6=Create can be done.' (*ZERO);

// Send error message - '&1'
ERROR(USR4977);
MSGPARM(LCL.Generic_Message_80_USR);

QUIT;

ENDIF;

ENDIF;

ENDIF;

// CTL.Warehouse Code = CON.*BLANK
CTL.Warehouse_Code = *BLANK;

// Call program Edt Item/Warehouse WIM ER.
CALL PROGRAM(Edt Item/Warehouse WIM ER) ('PUYNE1R');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Warehouse_Code);
PARAMETER(CTL.Inventory_Item_Type);
PARAMETER(CTL.Company_Name);
PARAMETER(CTL.Item_Description);
PARAMETER(CTL.USR_Warehouse_description);
PARAMETER(*BLANK);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

//?Process create request
// IF CTL.*CMD key is *Create
IF CTL.*CMD_key = '06';

// AND PAR.Display View Only Usr is DispView
AND PAR.Display_View_Only_Usr = 'D';

// Send error message - 'Function not allowed.'
ERROR(USR1833);

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?Process change request
CASE;

// IF RCD.*SFLSEL is *Change
IF RCD.*SFLSEL = '2';

// AND PAR.Display View Only Usr is MaintenanceView
AND PAR.Display_View_Only_Usr = *BLANK;

// Call program Edt Item/Warehouse WIM ER.
CALL PROGRAM(Edt Item/Warehouse WIM ER) ('PUYNE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Inventory_Item_Type);
PARAMETER(CTL.Company_Name);
PARAMETER(CTL.Item_Description);
PARAMETER(RCD.USR_Warehouse_description);
PARAMETER(*BLANK);

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

//?Process change request
// IF RCD.*SFLSEL is *Change
IF RCD.*SFLSEL = '2';

// AND PAR.Display View Only Usr is DispView
AND PAR.Display_View_Only_Usr = 'D';

// Send error message - 'Function not allowed.'
ERROR(USR1833);

ENDIF;

//?Validate delete request
CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4';

// AND PAR.Display View Only Usr is MaintenanceView
AND PAR.Display_View_Only_Usr = *BLANK;

// Send information message - 'Delete pending.  Confirm Y or N.'
MESSAGE(USR0597 *INFO);

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

//?Validate delete request
// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4';

// AND PAR.Display View Only Usr is DispView
AND PAR.Display_View_Only_Usr = 'D';

// Send error message - 'Function not allowed.'
ERROR(USR1833);

ENDIF;

//?USER: Process subfile record (Post-confirm)

//?Process delete request
CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4';

// AND PAR.Display View Only Usr is MaintenanceView
AND PAR.Display_View_Only_Usr = *BLANK;

EXECUTE FUNCTION(Chg Rcd Sts to Purge  CH) TYPE(CHGOBJ) FILE(PUCGCPP)           AC2213391;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Inventory_Item_Type);
PARAMETER('D');
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Chg Time Stamp DDL IF) TYPE(EXCINTFUN)                     AC2212930;
 PARAMETER(DB1.Update_Date_Timestamp);
 PARAMETER(DB1.Update_User_Id);
 PARAMETER(DB1.Update_Program_Name);
 {
  //?Execute internal function

  //?*** Set CHANGE Time Stamp Info.
  // PAR.Update Date Timestamp = JOB.*System timestamp
  PAR.Update_Date_Timestamp = JOB.*System_timestamp;

  // PAR.Update User Id = JOB.*USER
  PAR.Update_User_Id = JOB.*USER;

  // PAR.Update Program Name = JOB.*PROGRAM
  PAR.Update_Program_Name = JOB.*PROGRAM;

 }

}


// Execute function Clr Program Message QRP4U.
EXECUTE FUNCTION(Clr Program Message QRP4U) TYPE(EXCUSRSRC) ('PUY0UFR');
{
 * CLEAR MESSAGES FROM PROGRAM MESSAGE QUEUE.
 C                   CALL      'Y2CLMSC'
 C                   PARM      ##PGM         ZAPGMQ                         ALREADY DEFINED
 C                   PARM      '*SAME'       ZAPGRL                         ALREADY DEFINED
 * RESET FIRST MESSAGE ONLY FLAG.
 C                   MOVEL     'Y'           ZAFSMS            1            ALREADY DEFINED
}


// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

//?Process delete request
// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4';

// AND PAR.Display View Only Usr is DispView
AND PAR.Display_View_Only_Usr = 'D';

// Send error message - 'Function not allowed.'
ERROR(USR1833);

ENDIF;

