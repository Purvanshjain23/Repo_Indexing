     H*OPTION(*SRCSTMT : *NODEBUGIO)
     H DFTACTGRP(*NO)
     H BNDDIR('RDB2000')
       //----------------------------------------------------------------------
       // Program To Get F0901 Records from E1 and Insert into EZ0901 Wordld
       // Programmer  :RST SoLution
       // Date : 5/11/20
       //----------------------------------------------------------------------
      //*******************************************************************************
     FEZ0901L0  UF A E           K DISK
     FF55PICK3  IF A E             DISK
     FF55CONFIG1IF   E           K DISK
      // RDB Example program
      //
      // This program provides and example of the use of the RDB APIs
      //*******************************************************************************
      /COPY RDB50/RDBSRC,RDBPROTO
     D Id              S             10I 0
     D rc              S             10I 0
     D @ErrId          S              7A
     D @ErrText        S            100A
     D vBatch          S              8  0 inz
     D $$DOC           S             10  0 inz
     D vBatch1         S             15A
     D X_A7            S             30A   inz
     D X_A8            S             30A   inz
     d sFileSchema     s             30a   inz
     C     BAKY01        KLIST
     C                   KFLD                    BACO
     C                   KFLD                    BAAID
     C                   KFLD                    BAACTS
      //
      //     Connect to the remote system using created in the RDB
      //     configuration screen (RDBCFG)
      /FREE
           setll *start F55CONFIG1;
           READ F55CONFIG1;
           Dow Not %EOF(F55CONFIG1);
           X_A7=%TRIML(%TRIMR(S2DL01));
           X_A8=%TRIML(%TRIMR(S2DL02));
           READ F55CONFIG1;
           EndDo;
           BAACTS=%TIMESTAMP();                                                 //|Get a number
       Id = RdbConnect(X_A7);
       If Id >= 0;
         sFileSchema = '[' + %trimr(X_A8) + '].[F580911F]';
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where FFEV01 = ?' +
             ' and FFPID = ?');
         rc = RdbSetStr(Id: 1: '1');
         rc = RdbSetStr(Id: 2: 'R580901');
         rc = RdbPrepExec(Id);
         //     Fetch the first record of the result set that was generated with the
         //     previously executed statement.
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           SSUKID= RdbGetNum(Id:1);                                             //|Get a number
           WRITE I55PICK;                                                       //|Get a number
           rc = RdbFetchNxt(Id);
         enddo;
       EndIf;
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
           sFileSchema = '[' + %trimr(X_A8) + '].[F580901]';
           setll *start F55PICK3;
           READ F55PICK3;
           Dow Not %EOF(F55PICK3);
           vBatch=SSUKID;
           vBatch1=%CHAR(SSUKID);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where GMUKID = ?');
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 1: SSUKID);
         rc = RdbPrepExec(Id);
         //
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           BAOBJ= RdbGetStr(Id:2);                                              //|Get a number
           BACO  = RdbGetStr(Id:3);                                             //|Get a String
           BAAID = RdbGetStr(Id:4);
           BAMCU = RdbGetStr(Id:5);                                             //|Get a Timestamp
           BASUB = RdbGetStr(Id:6);                                             //|Get a Timestamp
           BAANS = RdbGetStr(Id:7);                                             //|Get a Timestamp
           BADL01= RdbGetStr(Id:8);                                             //|Get a Timestamp
           BALDA  = RdbGetStr(Id:9);
           BABPC  = RdbGetStr(Id:10);
           BAPEC  = RdbGetStr(Id:11);
           BABILL = RdbGetStr(Id:12);
           BACRCD = RdbGetStr(Id:13);
           BAUM   = RdbGetStr(Id:14);
           BAR001 = RdbGetStr(Id:15);
           BAR002 = RdbGetStr(Id:16);
           BAR003 = RdbGetStr(Id:17);
           BAR004 = RdbGetStr(Id:18);
           BAR005 = RdbGetStr(Id:19);
           BAR006 = RdbGetStr(Id:20);
           BAR007 = RdbGetStr(Id:21);
           BAR008 = RdbGetStr(Id:22);
           BAR009 = RdbGetStr(Id:23);
           BAR010 = RdbGetStr(Id:24);
           BAR011 = RdbGetStr(Id:25);
           BAR012 = RdbGetStr(Id:26);
           BAR013 = RdbGetStr(Id:27);
           BAR014 = RdbGetStr(Id:28);
           BAR015 = RdbGetStr(Id:29);
           BAR016 = RdbGetStr(Id:30);
           BAR017 = RdbGetStr(Id:31);
           BAR018 = RdbGetStr(Id:32);
           BAR019 = RdbGetStr(Id:33);
           BAR020 = RdbGetStr(Id:34);
           BAR021 = RdbGetStr(Id:35);
           BAR022 = RdbGetStr(Id:36);
           BAR023 = RdbGetStr(Id:37);
           BAOBJA = RdbGetStr(Id:38);
           BASUBA = RdbGetStr(Id:39);
           BAWCMP = RdbGetStr(Id:40);
           BACCT  = RdbGetStr(Id:41);
           BAERC  = RdbGetStr(Id:42);
           BAHTC  = RdbGetStr(Id:43);
           BAQLDA = RdbGetStr(Id:44);
           BACCC  = RdbGetStr(Id:45);
           BAFMOD = RdbGetStr(Id:46);
           BAUSER = RdbGetStr(Id:47);
           BAPID  = RdbGetStr(Id:48);
           BAJOBN = RdbGetStr(Id:49);
           BAUPMJ = RdbGetNum(Id:50);
           BAUPMT = RdbGetNum(Id:51);
           BACEC1 = RdbGetStr(Id:52);
           BACEC2 = RdbGetStr(Id:53);
           BACEC3 = RdbGetStr(Id:54);
           BACEC4 = RdbGetStr(Id:55);
           BAIEC  = RdbGetStr(Id:56);
           BAFPEC = RdbGetStr(Id:57);
           BASTPC = RdbGetStr(Id:58);
           BATXGL = RdbGetStr(Id:59);
           BATOBJ = RdbGetStr(Id:60);
           BATSUB = RdbGetStr(Id:61);
           BAPRGF = RdbGetStr(Id:62);
           BATXA1 = RdbGetStr(Id:63);
           BAR024 = RdbGetStr(Id:64);
           BAR025 = RdbGetStr(Id:65);
           BAR026 = RdbGetStr(Id:66);
           BAR027 = RdbGetStr(Id:67);
           BAR028 = RdbGetStr(Id:68);
           BAR029 = RdbGetStr(Id:69);
           BAR030 = RdbGetStr(Id:70);
           BAR031 = RdbGetStr(Id:71);
           BAR032 = RdbGetStr(Id:72);
           BAR033 = RdbGetStr(Id:73);
           BAR034 = RdbGetStr(Id:74);
           BAR035 = RdbGetStr(Id:75);
           BAR036 = RdbGetStr(Id:76);
           BAR037 = RdbGetStr(Id:77);
           BAR038 = RdbGetStr(Id:78);
           BAR039 = RdbGetStr(Id:79);
           BAR040 = RdbGetStr(Id:80);
           BAR041 = RdbGetStr(Id:81);
           BAR042 = RdbGetStr(Id:82);
           BAR043 = RdbGetStr(Id:83);
           BAADJE = RdbGetStr(Id:84);
           BAUAFL = RdbGetStr(Id:85);
           chain BAKY01 EZ0901L0;
           if not %found(EZ0901L0);
           WRITE @BACPET;
           else;
           UPDATE @BACPET;
           endIf;
           rc = RdbFetchNxt(Id);
         enddo;
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK3;
           EndDo;
         //
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
         sFileSchema = '[' + %trimr(X_A8) + '].[F580911F]';
           setll *start F55PICK3;
           READ F55PICK3;
           Dow Not %EOF(F55PICK3);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Update '+ %trimr(sFileSchema) +
             ' set FFEV01 = ? where FFUKID = ?');
         //
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 2: SSUKID);
         rc = RdbSetStr(Id: 1: '2');
         rc = RdbPrepExec(Id);
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK3;
           EndDo;
         //
         //     Close the connection to the remote system.
         RdbClose(Id);
       //
       *Inlr = *On;
      /END-FREE
