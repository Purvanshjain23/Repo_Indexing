// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUMZXFR
// ?Date: 14.08.2025 Time: 03:50:49
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?**************************************************************************
//?** PR1 Parms Represent Old Record Fields (Will be blank for Insert).
//?** PR2 Parms Represent New Record Fields (Will be blank for Delete).
//?**************************************************************************
//?Trigger Processing for Insert Event.
CASE;

// IF PR3.TRG Database Event is Insert
IF PR3.TRG_Database_Event = '1';

EXECUTE FUNCTION(Crt BI Manifest Dtl TRG) TYPE(CRTOBJ) FILE(PUBGCPP)            AC2172196;
PARAMETER(PR2.Company_Number);
PARAMETER(PR2.Order_Number);
PARAMETER(PR2.Order_Sequence_Number);
PARAMETER(PR2.Order_Secondary_Line_Seq);
PARAMETER(PR2.Case_Sequence_Number);
PARAMETER(PR3.TRG_Database_Event);
PARAMETER(0);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Timestamp TS#     IF) TYPE(EXCINTFUN)                      AC2131367;
 PARAMETER(DB1.BIMD_Timestamp);
 {
  //?Execute internal function

  // PAR.@Timestamp TS# = JOB.*System timestamp
  PAR.@Timestamp_TS# = JOB.*System_timestamp;

 }

}


ENDIF;

//?Trigger Processing for Update Event.
CASE;

// IF PR3.TRG Database Event is Update
IF PR3.TRG_Database_Event = '3';

// LCL.Update Record USR = CND.No
LCL.Update_Record_USR = 'N';

//?Set Update Flag If Any Non-Key Fields Have Changed.
CASE;

// IF PR1.Case Quantity NE PR2.Case Quantity
IF PR1.Case_Quantity <> PR2.Case_Quantity;

// OR PR1.Case Weight NE PR2.Case Weight
OR PR1.Case_Weight <> PR2.Case_Weight;

// OR PR1.Inventory Updated Flag NE PR2.Inventory Updated Flag
OR PR1.Inventory_Updated_Flag <> PR2.Inventory_Updated_Flag;

// OR PR1.Label Date NE PR2.Label Date
OR PR1.Label_Date <> PR2.Label_Date;

// OR PR1.PT Serial Number NE PR2.PT Serial Number
OR PR1.PT_Serial_Number <> PR2.PT_Serial_Number;

// OR PR1.Item Code NE PR2.Item Code
OR PR1.Item_Code <> PR2.Item_Code;

// OR PR1.Warehouse Code NE PR2.Warehouse Code
OR PR1.Warehouse_Code <> PR2.Warehouse_Code;

// OR PR1.Production Date NE PR2.Production Date
OR PR1.Production_Date <> PR2.Production_Date;

// OR PR1.Manifest Gross Weight NE PR2.Manifest Gross Weight
OR PR1.Manifest_Gross_Weight <> PR2.Manifest_Gross_Weight;

// OR PR1.Manifest Lot ID NE PR2.Manifest Lot ID
OR PR1.Manifest_Lot_ID <> PR2.Manifest_Lot_ID;

// OR PR1.Manifest Total Tare NE PR2.Manifest Total Tare
OR PR1.Manifest_Total_Tare <> PR2.Manifest_Total_Tare;

// OR PR1.Manifest Co-Park Lot Nbr NE PR2.Manifest Co-Park Lot Nbr
OR PR1.Manifest_Co_Park_Lot_Nbr <> PR2.Manifest_Co_Park_Lot_Nbr;

// OR PR1.Manifest Pallet Number NE PR2.Manifest Pallet Number
OR PR1.Manifest_Pallet_Number <> PR2.Manifest_Pallet_Number;

// OR PR1.Manifest Shift NE PR2.Manifest Shift
OR PR1.Manifest_Shift <> PR2.Manifest_Shift;

// OR PR1.HPB Meter Net Gallon NE PR2.HPB Meter Net Gallon
OR PR1.HPB_Meter_Net_Gallon <> PR2.HPB_Meter_Net_Gallon;

// OR PR1.Manifest Net Weight - Kg NE PR2.Manifest Net Weight - Kg
OR PR1.Manifest_Net_Weight_Kg <> PR2.Manifest_Net_Weight_Kg;

// OR PR1.Manifest Unused Status 1A NE PR2.Manifest Unused Status 1A
OR PR1.Manifest_Unused_Status_1A <> PR2.Manifest_Unused_Status_1A;

// OR PR1.Manifest Unused Status 2A NE PR2.Manifest Unused Status 2A
OR PR1.Manifest_Unused_Status_2A <> PR2.Manifest_Unused_Status_2A;

// OR PR1.Manifest Unused Date NE PR2.Manifest Unused Date
OR PR1.Manifest_Unused_Date <> PR2.Manifest_Unused_Date;

// OR PR1.HPB COA Batch Number NE PR2.HPB COA Batch Number
OR PR1.HPB_COA_Batch_Number <> PR2.HPB_COA_Batch_Number;

// OR PR1.HPB Meter Start Gallon NE PR2.Manifest Co-Park Lot Nbr
OR PR1.HPB_Meter_Start_Gallon <> PR2.Manifest_Co_Park_Lot_Nbr;

// OR PR1.HPB Meter Ending Gallon NE PR2.HPB Meter Ending Gallon
OR PR1.HPB_Meter_Ending_Gallon <> PR2.HPB_Meter_Ending_Gallon;

// OR PR1.HPB Meter Total Gallon NE PR2.HPB Meter Total Gallon
OR PR1.HPB_Meter_Total_Gallon <> PR2.HPB_Meter_Total_Gallon;

// OR PR1.HPB Meter Net Weight NE PR2.HPB Meter Net Weight
OR PR1.HPB_Meter_Net_Weight <> PR2.HPB_Meter_Net_Weight;

// OR PR1.HPB Density Ref Gravity NE PR2.HPB Density Ref Gravity
OR PR1.HPB_Density_Ref_Gravity <> PR2.HPB_Density_Ref_Gravity;

// OR PR1.EDI Status 1 NE PR2.EDI Status 1
OR PR1.EDI_Status_1 <> PR2.EDI_Status_1;

// OR PR1.EDI Status 2 NE PR2.EDI Status 2
OR PR1.EDI_Status_2 <> PR2.EDI_Status_2;

// OR PR1.EDI Status 3 NE PR2.EDI Status 3
OR PR1.EDI_Status_3 <> PR2.EDI_Status_3;

// OR PR1.Record Status NE PR2.Record Status
OR PR1.Record_Status <> PR2.Record_Status;

// LCL.Update Record USR = CND.Yes
LCL.Update_Record_USR = 'Y';

ENDIF;

//?Update Record?
CASE;

// IF LCL.Update Record USR is Yes
IF LCL.Update_Record_USR = 'Y';

EXECUTE FUNCTION(Crt BI Manifest Dtl TRG) TYPE(CRTOBJ) FILE(PUBGCPP)            AC2172196;
PARAMETER(PR2.Company_Number);
PARAMETER(PR2.Order_Number);
PARAMETER(PR2.Order_Sequence_Number);
PARAMETER(PR2.Order_Secondary_Line_Seq);
PARAMETER(PR2.Case_Sequence_Number);
PARAMETER(PR3.TRG_Database_Event);
PARAMETER(0);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Timestamp TS#     IF) TYPE(EXCINTFUN)                      AC2131367;
 PARAMETER(DB1.BIMD_Timestamp);
 {
  //?Execute internal function

  // PAR.@Timestamp TS# = JOB.*System timestamp
  PAR.@Timestamp_TS# = JOB.*System_timestamp;

 }

}


ENDIF;

ENDIF;

//?Trigger Processing for Delete Event.
CASE;

// IF PR3.TRG Database Event is Delete
IF PR3.TRG_Database_Event = '2';

EXECUTE FUNCTION(Crt BI Manifest Dtl TRG) TYPE(CRTOBJ) FILE(PUBGCPP)            AC2172196;
PARAMETER(PR1.Company_Number);
PARAMETER(PR1.Order_Number);
PARAMETER(PR1.Order_Sequence_Number);
PARAMETER(PR1.Order_Secondary_Line_Seq);
PARAMETER(PR1.Case_Sequence_Number);
PARAMETER(PR3.TRG_Database_Event);
PARAMETER(0);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Timestamp TS#     IF) TYPE(EXCINTFUN)                      AC2131367;
 PARAMETER(DB1.BIMD_Timestamp);
 {
  //?Execute internal function

  // PAR.@Timestamp TS# = JOB.*System timestamp
  PAR.@Timestamp_TS# = JOB.*System_timestamp;

 }

}


ENDIF;

