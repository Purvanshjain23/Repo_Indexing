      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF321
      * TITLE:       Workfile: Verification for Freight Variance
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     04/25/06
      *
      * FUNCTION:  Batch program to create a workfile of data that we will turn into:
      *            1) a report or
      *            2) a spreadsheet to be emailed to the user.
      *
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 09/19/06  LeAnne Ramsey
      *           Recompile only. Synon file PPAMREP was changed.
      *
      * 04/16/07  LeAnne Ramsey
      *           Recompile only. Field "Exclude from Mix Flag' was renamed to
      *           Mix Flag in the Freight Variance file.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fombyrel0  if   e           k disk
      *    Item default
      *
      *
     Fome8rel0  if   e           k disk
      *    Product type
      *
      *
     Fome9rel0  if   e           k disk
      *    Product group
      *
      *
     Fomfarel1  if   e           k disk
      *    Product class
      *
      *
     Fppamrel1  if   e           k disk
      *    TF Classification
      *
      *
     Ftfl017a   if   e           k disk
      *    Freight variance
      *
      *
     Ftfp321    o    e           k disk
      *    Workfile: Verification for freight variance
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
      *
      * Parms
      *
     D xxtfcgcd        s                   like(fvtfcgcd)
     D xxtfcgds        s             15
      *
      *
      * Workfields
      *
     D wkpc            s             15  9
     D wklb            s             15  2
     D wksslslb        s             15  2
     D wktslslb        s             15  2
     D wkmam           s             11  2
     D wkiam           s             11  2
     D wkkam           s             11  2
     D wklam           s             11  2
     D wkrate          s              9  6
     D wkpump          s              9  6
      *
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldpfcd                 1      1
     D  ldyr                   2      5  0
     D  ldpe                   6      7  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      *****************************************************************************************
      * MAINLINE
      *****************************************************************************************
      *
      * Read each record selected by the open query from the Freight Variance
      * file.
      *
     C     key01         setll     tfl017a
      *
     C                   dou       *in90 = *on                                  Main do
     C     key01         reade     tfl017a                                90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   exsr      $directmap
     C                   exsr      $desc
      *
     C                   write     w1rec
     C                   clear                   w1rec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      * EOF processing
      *
     C                   seton                                        lr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Populate fields that are a direct map from the Freight Variance file to the workfile
      *--------------------------------------------------------------------------------------
      *
     C     $directmap    begsr
      *
     C                   z-add     fvyr          w1yr
     C                   z-add     fvpe          w1pe
     C                   z-add     fvpbdt        w1pbdt
     C                   z-add     fvpedt        w1pedt
      *
      * Populate various "code" fields and retrieve their "descriptions"
      *
     C                   z-add     fvprcd        w1prcd
     C                   move      fvtfclcd      w1tfclcd
     C                   move      fvtfcgcd      w1tfcgcd
     C                   z-add     fvistycd      w1istycd
      *
     C                   z-add     fvapflb       w1apflb
     C                   z-add     fvspflb       w1spflb
     C                   z-add     fvspflbpc     w1spflbpc
     C                   z-add     fvtpflb       w1tpflb
     C                   z-add     fvtpflbpc     w1tpflbpc
      *
     C                   z-add     fvfbam        w1fbam
     C                   z-add     fvefbam       w1efbam
     C                   z-add     fvfoam        w1foam
     C                   z-add     fvafoam       w1afoam
      *
     C                   z-add     fvaevam       w1aevam
     C                   z-add     fvevam        w1evam
     C                   z-add     fvevampc      w1evampc
      *
     C                   z-add     fvfvam        w1fvam
     C                   z-add     fvafvam       w1afvam
     C                   z-add     fvsfvam       w1sfvam
     C                   z-add     fvtfvam       w1tfvam
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve "descriptions" for various fields.
      *---------------------------------------------------------------
      *
     C     $desc         begsr
      *
      * Product
      *
     C     w1prcd        chain     ombyrel0                           92
     C                   if        *in92 = *off                                 If ok
     C                   movel(p)  byavna        w1prds
     C                   z-add     byrhnb        w1isgrcd
     C                   z-add     byrinb        w1isclcd
     C
     C                   else
     C                   move      *blank        w1prds
     C                   z-add     0             w1isgrcd
     C                   z-add     0             w1isclcd
     C                   endif
      *
      * Item Structure Class
      *
     C     w1isclcd      chain     omfarel1                           92
     C                   if        *in92 = *off
     C                   eval      w1isclds = fadetx
     C                   else
     C                   eval      w1isclds = 'Unassigned'
     C                   endif
      *
      * Item Structure Group
      *
     C     w1isgrcd      chain     ome9rel0                           92
     C                   if        *in92 = *off
     C                   eval      w1isgrds  = e9ddtx
     C                   else
     C                   eval      w1isgrds = 'Unassigned'
     C                   endif
      *
      * Item Structure Type
      *
     C     w1istycd      chain     ome8rel0                           92
     C                   if        *in92 = *off
     C                   eval      w1istyds  = e8dctx
     C                   else
     C                   eval      w1istyds  = 'Unassigned'
     C                   endif
      *
      * TF Classification
      *
     C     w1tfclcd      chain     ppamrel1                           92
     C                   if        *in92 = *off                                 If ok
     C                   eval      w1tfclds  = amq0na
     C                   else
     C                   eval      w1tfclds = 'Unassigned'
     C                   endif                                                  If ok
      *
      * TF Class Group
      *
     C                   call      'TF804'
     C                   parm      w1tfcgcd      xxtfcgcd
     C                   parm      *blank        xxtfcgds
      *
     C                   if        xxtfcgds = *blank                            If bad
     C                   eval      w1tfcgds = 'Unassigned'
     C                   else
     C                   eval      w1tfcgds = xxtfcgds
     C                   endif                                                  If bad
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    ldyr
     C                   kfld                    ldpe
      *
     C                   endsr
      /EJECT
