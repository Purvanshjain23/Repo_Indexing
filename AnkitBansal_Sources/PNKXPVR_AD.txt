// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNKXPVR
// ?Date: 14.08.2025 Time: 03:45:25
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?RMC 10/15/21 added packaging bom qty change
//?USER: Load screen

EXECUTE FUNCTION(RTV Packaging Itm All RT) TYPE(RTVOBJ) FILE(POARREP)           AC1608356;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Packaging_Item_Code);
PARAMETER(LCL.Pckg_Item_Description);
PARAMETER(LCL.Pckg_List_Sequence);
PARAMETER(DTL.Pckg_Item_Type);
PARAMETER(LCL.Item_Code);
PARAMETER(LCL.Pckg_Unit_Cost);
PARAMETER(LCL.Pckg_Tare_Weight);
PARAMETER(LCL.Pckg_Reporting_Group);
PARAMETER(LCL.Pckg_Group_Category);
PARAMETER(LCL.Pckg_Modified_Weight);
PARAMETER(LCL.Pckg_Unused_Sts_2);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?USER: Process command keys

CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.Packaging Item Code 1 USR
IF PGM.*Cursor_field = DTL.Packaging_Item_Code_1_USR;

// Call program Sel Packaging Item    SR.
CALL PROGRAM(Sel Packaging Item    SR) ('POFRSRR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Packaging_Item_Code_1_USR);

ENDIF;

ENDIF;

//?USER: Validate fields

CASE;

// IF DTL.Packaging Item Code EQ DTL.Packaging Item Code 1 USR
IF DTL.Packaging_Item_Code = DTL.Packaging_Item_Code_1_USR;

// AND DTL.Packaging Item Quantity is Eq 0
AND DTL.Packaging_Item_Quantity = *ZERO;

// Send error message - 'Packaging Item must be different than from item.'
ERROR(USR4179);
MSGPARM(DTL.Packaging_Item_Code_1_USR);

ENDIF;

CASE;

// IF DTL.Packaging Item Code 1 USR is Not Entered
IF DTL.Packaging_Item_Code_1_USR = *BLANK;

// Send error message - 'Packaging Item not found.'
ERROR(USR2982);
MSGPARM(DTL.Packaging_Item_Code_1_USR);

ENDIF;

EXECUTE FUNCTION(RTV Packaging Item    RT) TYPE(RTVOBJ) FILE(POARREP)           AC1602514;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Packaging_Item_Code_1_USR);
PARAMETER(LCL.Pckg_Item_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Pckg Item Description is Not entered
IF LCL.Pckg_Item_Description = *BLANK;

// Send error message - 'Packaging Item not found.'
ERROR(USR2982);
MSGPARM(DTL.Packaging_Item_Code_1_USR);

ENDIF;

EXECUTE FUNCTION(RTV Packaging Itm All RT) TYPE(RTVOBJ) FILE(POARREP)           AC1608356;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Packaging_Item_Code_1_USR);
PARAMETER(LCL.Pckg_Item_Description);
PARAMETER(LCL.Pckg_List_Sequence);
PARAMETER(LCL.Pckg_Item_Type);
PARAMETER(LCL.Item_Code);
PARAMETER(LCL.Pckg_Unit_Cost);
PARAMETER(LCL.Pckg_Tare_Weight);
PARAMETER(LCL.Pckg_Reporting_Group);
PARAMETER(LCL.Pckg_Group_Category);
PARAMETER(LCL.Pckg_Modified_Weight);
PARAMETER(LCL.Pckg_Unused_Sts_2);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


CASE;

// IF LCL.Pckg Item Type NE DTL.Pckg Item Type
IF LCL.Pckg_Item_Type <> DTL.Pckg_Item_Type;

// Send error message - 'Packaging Type does not match From packaging item.'
ERROR(USR4178);
MSGPARM(DTL.Packaging_Item_Code_1_USR);

ENDIF;

//?USER: User defined action

// Call program Rtv Chg Pckg ALL FG   XF.
CALL PROGRAM(Rtv Chg Pckg ALL FG   XF) ('PNKYXFR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Packaging_Item_Code);
PARAMETER(DTL.Packaging_Item_Quantity);
PARAMETER(DTL.Packaging_Item_Code_1_USR);

