// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDYFPFR
// ?Date: 14.08.2025 Time: 12:04:48
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

//?USER: Record selection processing

EXECUTE FUNCTION(RTV Load Header       RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1197765;
PARAMETER(DB1.Load_ID);
PARAMETER(WRK.Load_Status);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF WRK.Load Status is Shipped or Invoiced
IF WRK.Load_Status = 'I'/'S';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: On print of first page format

MOVE *ALL (To: 1PG From: PAR);

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(X1PG_Company_Name_DRV);
PARAMETER(X1PG_Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT Scheduled Ship Date header format

//?USER: On print of detail format

// PAR.Yes/No Selection      USR = CND.No
PAR.Yes_No_Selection_USR = 'N';

EXECUTE FUNCTION(Sales Route Desc      DRV) TYPE(DRVFLD)                        AC1575490;
PARAMETER(CUR.Sales_Route_Desc_DRV);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1270614;
 PARAMETER(PAR.Sales_Route_Code);
 PARAMETER(PAR.Sales_Route_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


EXECUTE FUNCTION(RTV 1st Warehouse      RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1575817;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(1);
PARAMETER(1);
PARAMETER(CUR.Warehouse_Code);
{
 //?USER: Process Data record

 // PAR.Warehouse Code = DB1.Warehouse Code
 PAR.Warehouse_Code = DB1.Warehouse_Code;

 QUIT;

}


//?Load ID is blank
CASE;

// IF CUR.Load ID is Blank
IF CUR.Load_ID = *ZERO;

// CUR.Text USR 20 = CON.*** CANCELLED ***
CUR.Text_USR_20 = '*** CANCELLED ***';

// PAR.Yes/No Selection      USR = CND.Yes
PAR.Yes_No_Selection_USR = 'Y';

//?Load ID is blank
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Ld Sts/DeptDtTM    RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1560196;
PARAMETER(CUR.Load_ID);
PARAMETER(CUR.Load_Status);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Order Header Status equal to 'Hold'.
//?Loads equal to 'E', 'C', 'L', or 'U'.
CASE;

// IF CUR.Header Status is Hold
IF CUR.Header_Status = 'H';

// AND CUR.Load Status is Entered
AND ( CUR.Load_Status = 'E';

// OR CUR.Load Status is Combined
OR CUR.Load_Status = 'C';

// OR CUR.Load Status is Lock
OR CUR.Load_Status = 'L';

// OR CUR.Load Status is Unlock
OR CUR.Load_Status = 'U' );

// PAR.Yes/No Selection      USR = CND.Yes
PAR.Yes_No_Selection_USR = 'Y';

// CUR.Text USR 20 = CON.*** CANCELLED ***
CUR.Text_USR_20 = '*** CANCELLED ***';

ENDIF;

//?Loads equal to 'S' or 'I'.
CASE;

// IF CUR.Header Status is Hold
IF CUR.Header_Status = 'H';

// AND CUR.Load Status is Shipped
AND ( CUR.Load_Status = 'S';

// OR CUR.Load Status is Invoiced
OR CUR.Load_Status = 'I' );

// CUR.Text USR 20 = CON.** NOT CANCELLED **
CUR.Text_USR_20 = '** NOT CANCELLED **';

ENDIF;

//?Order Header Status equal to 'Available'.
//?Loads equal to 'E', 'C', 'L', or 'U'.
CASE;

// IF CUR.Header Status is Available
IF CUR.Header_Status = 'A';

// AND CUR.Load Status is Entered
AND ( CUR.Load_Status = 'E';

// OR CUR.Load Status is Combined
OR CUR.Load_Status = 'C';

// OR CUR.Load Status is Lock
OR CUR.Load_Status = 'L';

// OR CUR.Load Status is Unlock
OR CUR.Load_Status = 'U' );

// PAR.Yes/No Selection      USR = CND.Yes
PAR.Yes_No_Selection_USR = 'Y';

// CUR.Text USR 20 = CON.*** CANCELLED ***
CUR.Text_USR_20 = '*** CANCELLED ***';

ENDIF;

//?Loads equal to 'S' or 'I'.
CASE;

// IF CUR.Header Status is Available
IF CUR.Header_Status = 'A';

// AND CUR.Load Status is Shipped
AND ( CUR.Load_Status = 'S';

// OR CUR.Load Status is Invoiced
OR CUR.Load_Status = 'I' );

// CUR.Text USR 20 = CON.** NOT CANCELLED **
CUR.Text_USR_20 = '** NOT CANCELLED **';

ENDIF;

//?Order Header Status equal to 'Entered'.
//?Loads equal to 'E', 'C', 'L', or 'U'.
CASE;

// IF CUR.Header Status is Entered
IF CUR.Header_Status = 'E';

// AND CUR.Load Status is Entered
AND ( CUR.Load_Status = 'E';

// OR CUR.Load Status is Combined
OR CUR.Load_Status = 'C';

// OR CUR.Load Status is Lock
OR CUR.Load_Status = 'L';

// OR CUR.Load Status is Unlock
OR CUR.Load_Status = 'U' );

// PAR.Yes/No Selection      USR = CND.Yes
PAR.Yes_No_Selection_USR = 'Y';

// CUR.Text USR 20 = CON.*** CANCELLED ***
CUR.Text_USR_20 = '*** CANCELLED ***';

ENDIF;

//?Loads equal to 'S' or 'I'.
CASE;

// IF CUR.Header Status is Entered
IF CUR.Header_Status = 'E';

// AND CUR.Load Status is Shipped
AND ( CUR.Load_Status = 'S';

// OR CUR.Load Status is Invoiced
OR CUR.Load_Status = 'I' );

// CUR.Text USR 20 = CON.** NOT CANCELLED **
CUR.Text_USR_20 = '** NOT CANCELLED **';

ENDIF;

//?Order Header Status equal to 'Confirmerd'.
//?Order status is 'Confirmed'.
CASE;

// IF CUR.Header Status is Confirmed
IF CUR.Header_Status = 'R';

// CUR.Text USR 20 = CON.** NOT CANCELLED **
CUR.Text_USR_20 = '** NOT CANCELLED **';

ENDIF;

//?USER: Process after print of detail format

CASE;

// IF PAR.Yes/No Selection      USR is Yes
IF PAR.Yes_No_Selection_USR = 'Y';

// Call program UPD Canceled Orders RptPF.
CALL PROGRAM(UPD Canceled Orders RptPF) ('PDYPXFR');
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(DB1.AR_Customer_Number);
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(CUR.Ship_To_Name);
PARAMETER(DB1.Carrier_Code);
PARAMETER(CUR.Header_Status);
PARAMETER(DB1.Order_Weight_Total);
PARAMETER(CUR.Load_ID);
PARAMETER(DB1.Billing_Activity_Type);
PARAMETER(PAR.Yes_No_Selection_USR);

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Scheduled Ship Date totals format

// SUPPRESSED PRINT Company Number totals format

