// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKX7XFR
// ?Date: 14.08.2025 Time: 02:53:18
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?H16853 ISE 11/05/2020-Recompiled due to change in Buy Order Number
EXECUTE FUNCTION(Rtv >2hr Rest Head    RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1241607;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(PAR.Shift_A_Int_Hd_To_Kill);
PARAMETER(PAR.Shift_A_Int_Hd_w_2Hr_Rest);
PARAMETER(PAR.Shift_A_Ext_Hd_To_Kill);
PARAMETER(PAR.Shift_A_Ext_Hd_w_2Hr_Rest);
PARAMETER(PAR.Shift_B_Int_Hd_To_Kill);
PARAMETER(PAR.Shift_B_Int_Hd_w_2Hr_Rest);
PARAMETER(PAR.Shift_B_Ext_Hd_To_Kill);
PARAMETER(PAR.Shift_B_Ext_Hd_w_2Hr_Rest);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?Omit:  Stress Pen   Stess/Market
 CASE;

 // IF DB1.W Stress/Market Type is Stress
 IF DB1.W_Stress_Market_Type = 'S';

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?Process Record
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?Calculate Wait Time
 DO;

 // LCL.TD Drive Time = DB1.TD Drive Time
 LCL.TD_Drive_Time = DB1.TD_Drive_Time;

 CASE;

 // IF DB1.TD Drive Date NE DB1.TST Wgt Date
 IF DB1.TD_Drive_Date <> DB1.TST_Wgt_Date;

 // LCL.Number 1 USR = DB1.TD Drive Date - DB1.TST Wgt Date *DAYS
 LCL.Number_1_USR = DURATION(DB1.TD_Drive_Date DB1.TST_Wgt_Date 'DY' 1111111 'NONE' 'N' 1);

 // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
 LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

 // LCL.TD Drive Time = DB1.TD Drive Time + LCL.Usr Elapsed hours
 LCL.TD_Drive_Time = DB1.TD_Drive_Time + LCL.Usr_Elapsed_hours;

 ENDIF;

 // LCL.Time Diff Usr = LCL.TD Drive Time - DB1.TST Wgt Time *HHMMSS
 LCL.Time_Diff_Usr = TIMELAPSED(LCL.TD_Drive_Time DB1.TST_Wgt_Time 'HS');

 ENDDO;

 //?Head Held Over
 CASE;

 // IF DB1.W Held Over Status is Held over -
 IF DB1.W_Held_Over_Status = 'H-';

 CASE;

 // IF DB1.W Held Over Head is greater than 0
 IF DB1.W_Held_Over_Head > *ZERO;

 // LCL.Head Held Over Usr = DB1.W Held Over Head * CON.-1 *
 LCL.Head_Held_Over_Usr = DB1.W_Held_Over_Head * -1;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Head Held Over Usr = DB1.TD Pen Head * CON.-1 *
 LCL.Head_Held_Over_Usr = DB1.TD_Pen_Head * -1;

 ENDIF;

 //?Head Held Over
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Head Held Over Usr = CON.*ZERO
 LCL.Head_Held_Over_Usr = *ZERO;

 ENDIF;

 //?Shift Held Over
 CASE;

 // IF DB1.TH Schedule Kill Shift is Shift 1
 IF DB1.TH_Schedule_Kill_Shift = '1';

 // LCL.W Shift Held Over Head = DB1.W Shift Held Over Head * CON.-1 *Rounded
 LCL.W_Shift_Held_Over_Head = DB1.W_Shift_Held_Over_Head * -1 'H';

 //?Shift Held Over
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.W Shift Held Over Head = DB1.W Shift Held Over Head
 LCL.W_Shift_Held_Over_Head = DB1.W_Shift_Held_Over_Head;

 ENDIF;

 //?Accumulate Head To Kill & Head Rested
 CASE;

 // IF DB1.TH Schedule Kill Shift is Shift 1
 IF DB1.TH_Schedule_Kill_Shift = '1';

 //?Internal Vs. External
 CASE;

 // IF DB1.TH Source Type is Internal
 IF DB1.TH_Source_Type = 'I';

 // Shift A Int Hd To Kill
 PAR.Shift_A_Int_Hd_To_Kill = PAR.Shift_A_Int_Hd_To_Kill + ( ( ( LCL.Head_Held_Over_Usr
 + DB1.TD_Pen_Head ) - DB1.W_Yard_Dead ) + LCL.W_Shift_Held_Over_Head );

 //?Shift A Internal Rested
 CASE;

 // IF LCL.Time Diff Usr is Mininum Rest Requirement
 IF LCL.Time_Diff_Usr >= 20000;

 //?(Held Over -) or (Shift Held Over -)
 CASE;

 // IF DB1.W Held Over Status is Original Day/Shift
 IF DB1.W_Held_Over_Status = 'H-'/'S-';

 //?(Held Over -) or (Shift Held Over -)
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Shift A Int Hd w/2Hr Rest = PAR.Shift A Int Hd w/2Hr Rest + DB1.TD Pen Head
 PAR.Shift_A_Int_Hd_w_2Hr_Rest = PAR.Shift_A_Int_Hd_w_2Hr_Rest + DB1.TD_Pen_Head;

 ENDIF;

 ENDIF;

 //?Internal Vs. External
 // IF DB1.TH Source Type is External
 IF DB1.TH_Source_Type = 'E';

 // Shift A Ext Hd To Kill
 PAR.Shift_A_Ext_Hd_To_Kill = PAR.Shift_A_Ext_Hd_To_Kill + ( ( ( LCL.Head_Held_Over_Usr
 + DB1.TD_Pen_Head ) - DB1.W_Yard_Dead ) + LCL.W_Shift_Held_Over_Head );

 //?Shift A External Rested
 CASE;

 // IF LCL.Time Diff Usr is Mininum Rest Requirement
 IF LCL.Time_Diff_Usr >= 20000;

 //?(Held Over -) or (Shift Held Over -)
 CASE;

 // IF DB1.W Held Over Status is Original Day/Shift
 IF DB1.W_Held_Over_Status = 'H-'/'S-';

 //?(Held Over -) or (Shift Held Over -)
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Shift A Ext Hd w/2Hr Rest = PAR.Shift A Ext Hd w/2Hr Rest + DB1.TD Pen Head
 PAR.Shift_A_Ext_Hd_w_2Hr_Rest = PAR.Shift_A_Ext_Hd_w_2Hr_Rest + DB1.TD_Pen_Head;

 ENDIF;

 ENDIF;

 ENDIF;

 //?Accumulate Head To Kill & Head Rested
 // IF DB1.TH Schedule Kill Shift is Shift 2
 IF DB1.TH_Schedule_Kill_Shift = '2';

 //?Internal Vs. External
 CASE;

 // IF DB1.TH Source Type is Internal
 IF DB1.TH_Source_Type = 'I';

 // Shift B Int Hd To Kill
 PAR.Shift_B_Int_Hd_To_Kill = PAR.Shift_B_Int_Hd_To_Kill + ( ( ( LCL.Head_Held_Over_Usr
 + DB1.TD_Pen_Head ) - DB1.W_Yard_Dead ) + LCL.W_Shift_Held_Over_Head );

 //?Shift B Internal Rested
 CASE;

 // IF LCL.Time Diff Usr is Mininum Rest Requirement
 IF LCL.Time_Diff_Usr >= 20000;

 //?Shift B Internal Rested
 CASE;

 // IF LCL.Time Diff Usr is Mininum Rest Requirement
 IF LCL.Time_Diff_Usr >= 20000;

 //?(Held Over -) or (Shift Held Over -)
 CASE;

 // IF DB1.W Held Over Status is Original Day/Shift
 IF DB1.W_Held_Over_Status = 'H-'/'S-';

 //?(Held Over -) or (Shift Held Over -)
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Shift B Int Hd w/2Hr Rest = PAR.Shift B Int Hd w/2Hr Rest + DB1.TD Pen Head
 PAR.Shift_B_Int_Hd_w_2Hr_Rest = PAR.Shift_B_Int_Hd_w_2Hr_Rest + DB1.TD_Pen_Head;

 ENDIF;

 ENDIF;

 ENDIF;

 //?Internal Vs. External
 // IF DB1.TH Source Type is External
 IF DB1.TH_Source_Type = 'E';

 // Shift B Ext Hd To Kill
 PAR.Shift_B_Ext_Hd_To_Kill = PAR.Shift_B_Ext_Hd_To_Kill + ( ( ( LCL.Head_Held_Over_Usr
 + DB1.TD_Pen_Head ) - DB1.W_Yard_Dead ) + LCL.W_Shift_Held_Over_Head );

 //?Shift B External Rested
 CASE;

 // IF LCL.Time Diff Usr is Mininum Rest Requirement
 IF LCL.Time_Diff_Usr >= 20000;

 //?Shift B External Rested
 CASE;

 // IF LCL.Time Diff Usr is Mininum Rest Requirement
 IF LCL.Time_Diff_Usr >= 20000;

 //?(Held Over -) or (Shift Held Over -)
 CASE;

 // IF DB1.W Held Over Status is Original Day/Shift
 IF DB1.W_Held_Over_Status = 'H-'/'S-';

 //?(Held Over -) or (Shift Held Over -)
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Shift B Ext Hd w/2Hr Rest = PAR.Shift B Ext Hd w/2Hr Rest + DB1.TD Pen Head
 PAR.Shift_B_Ext_Hd_w_2Hr_Rest = PAR.Shift_B_Ext_Hd_w_2Hr_Rest + DB1.TD_Pen_Head;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

}


