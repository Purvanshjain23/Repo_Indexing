// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POFTPFR
// ?Date: 14.08.2025 Time: 12:06:09
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?E00221  10/02/08 RMC - added company to key of packaging type file
EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

CASE;

// IF PAR.Pckg Type Class NE WRK.Blank for 4           USR
IF PAR.Pckg_Type_Class <> WRK.Blank_for_4_USR;

// AND DB1.Pckg Type Class NE PAR.Pckg Type Class
AND DB1.Pckg_Type_Class <> PAR.Pckg_Type_Class;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF PAR.Pckg Item Type NE WRK.Blank for 4           USR
IF PAR.Pckg_Item_Type <> WRK.Blank_for_4_USR;

// AND DB1.Pckg Item Type NE PAR.Pckg Item Type
AND DB1.Pckg_Item_Type <> PAR.Pckg_Item_Type;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: On print of first page format

MOVE *ALL (To: 1PG From: PAR);

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(X1PG_Company_Name_DRV);
PARAMETER(X1PG_Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


CASE;

// IF PAR.Pckg Type Class NE WRK.Blank for 4           USR
IF PAR.Pckg_Type_Class <> WRK.Blank_for_4_USR;

// 1PG.Condition Desc. 1  USR = Condition name of 1PG.Pckg Type Class
X1PG_Condition_Desc_1_USR = RTVCND(X1PG_Pckg_Type_Class);

// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Condition Desc. 1  USR = CON.All
X1PG_Condition_Desc_1_USR = 'All';

ENDIF;

CASE;

// IF PAR.Pckg Item Type NE WRK.Blank for 4           USR
IF PAR.Pckg_Item_Type <> WRK.Blank_for_4_USR;

EXECUTE FUNCTION(Rtv Description       RT) TYPE(RTVOBJ) FILE(POCAREP)           AC1651957;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Pckg_Item_Type);
PARAMETER(X1PG_Pckg_Item_Type_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Pckg Item Type Desc = CON.All
X1PG_Pckg_Item_Type_Desc = 'All';

ENDIF;

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
// Print Company Number header format
PRINT Company Number header format;

ENDIF;

CASE;

IF NEW Pckg_Type_Class;
// CUR.Condition Desc. 2  USR = Condition name of CUR.Pckg Type Class
CUR.Condition_Desc_2_USR = RTVCND(CUR.Pckg_Type_Class);

// Print Pckg Type Class header format
PRINT Pckg Type Class header format;

ENDIF;

CASE;

IF NEW Pckg_Item_Type;
EXECUTE FUNCTION(Rtv Description       RT) TYPE(RTVOBJ) FILE(POCAREP)           AC1651957;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Pckg_Item_Type);
PARAMETER(CUR.Pckg_Item_Type_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// Print Pckg Item Type header format
PRINT Pckg Item Type header format;

ENDIF;

// SUPPRESSED PRINT Pckg List Sequence header format

// SUPPRESSED PRINT Packaging Item Code header format

//?USER: Print required level totals

// SUPPRESSED PRINT Packaging Item Code totals format

// SUPPRESSED PRINT Pckg List Sequence totals format

// SUPPRESSED PRINT Pckg Item Type totals format

// SUPPRESSED PRINT Pckg Type Class totals format

// SUPPRESSED PRINT Company Number totals format

