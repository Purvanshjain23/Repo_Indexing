// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKAXXFR
// ?Date: 14.08.2025 Time: 02:51:04
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?E3814 JJH 10/07/15 - Recompile because PS Premises ID added to
//?  Producer Site.
//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//? length from 5 to 7.
ENDDO;

EXECUTE FUNCTION(Add/Chg Tattoo Hdr ExtRT) TYPE(RTVOBJ) FILE(PKDNCPP)           AB1176579;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(PAR.TH_CA_Market_Price);
PARAMETER(PAR.TH_CA_Base_Market_Price);
PARAMETER(PAR.TH_CA_Base_Mkt_Price_Amt);
PARAMETER(PAR.TH_CA_Sort_Discount_Amt);
PARAMETER(PAR.TH_CA_Yield_Gain_Loss_Amt);
PARAMETER(PAR.TH_CA_Base_Carcass_Value);
PARAMETER(PAR.TH_CA_Lean_Premium_Amt);
PARAMETER(PAR.TH_CA_Carcass_Gross_Amt);
PARAMETER(PAR.TH_CA_Bse_Mkt_Live_CWT);
PARAMETER(PAR.TH_CA_Bse_Mkt_Carc_CWT);
PARAMETER(PAR.TH_CA_Srt_Dsc_Live_CWT);
PARAMETER(PAR.TH_CA_Srt_Dsc_Carc_CWT);
PARAMETER(PAR.TH_CA_Yld_G_L_Live_CWT);
PARAMETER(PAR.TH_CA_Yld_G_L_Carc_CWT);
PARAMETER(PAR.TH_CA_Crc_Val_Live_CWT);
PARAMETER(PAR.TH_CA_Crc_Val_Carc_CWT);
PARAMETER(PAR.TH_CA_Lean_Prm_Live_CWT);
PARAMETER(PAR.TH_CA_Lean_Prm_Carc_CWT);
PARAMETER(PAR.TH_CA_Gross_Live_CWT);
PARAMETER(PAR.TH_CA_Gross_Carc_CWT);
{
 //?USER: Initialize routine

 //?Set current Min/Max values
 //?Min Max for Hot Weight
 EXECUTE FUNCTION(Rtv Hot Weight Range  IF) TYPE(EXCINTFUN)                      AB1169711;
 PARAMETER(LCL.TH_Min_LT_Hot_Wt_lb);
 PARAMETER(LCL.TH_Max_GT_Hot_Wt_lb);
 {
  //?Execute internal function

  // PAR.EV Validation Code = CND.Carcass is Light Weight
  PAR.EV_Validation_Code = 'CLT';

  EXECUTE FUNCTION(Rtv Min/Max Values    RT) TYPE(RTVOBJ) FILE(PKBOREP)           AB1169636;
  PARAMETER(PAR.EV_Validation_Code);
  PARAMETER(WRK.EV_Minimum);
  PARAMETER(PAR.EV_Minimum);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.EV Validation Code = CND.Carcass has Double Weight
  PAR.EV_Validation_Code = 'CDB';

  EXECUTE FUNCTION(Rtv Min/Max Values    RT) TYPE(RTVOBJ) FILE(PKBOREP)           AB1169636;
  PARAMETER(PAR.EV_Validation_Code);
  PARAMETER(PAR.EV_Maximum);
  PARAMETER(WRK.EV_Maximum);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

 }

 //?Min Max for Lean Percent
 EXECUTE FUNCTION(Rtv Lean % Ranage     IF) TYPE(EXCINTFUN)                      AB1270740;
 PARAMETER(LCL.TH_Min_LT_Lean_Pct);
 PARAMETER(LCL.TH_Max_GT_Lean_Pct);
 {
  //?Execute internal function

  // PAR.EV Validation Code = CND.Percent Lean is Low
  PAR.EV_Validation_Code = 'PLL';

  EXECUTE FUNCTION(Rtv Min/Max Values    RT) TYPE(RTVOBJ) FILE(PKBOREP)           AB1169636;
  PARAMETER(PAR.EV_Validation_Code);
  PARAMETER(WRK.EV_Minimum);
  PARAMETER(PAR.EV_Minimum);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.EV Validation Code = CND.Percent Lean is high
  PAR.EV_Validation_Code = 'PLH';

  EXECUTE FUNCTION(Rtv Min/Max Values    RT) TYPE(RTVOBJ) FILE(PKBOREP)           AB1169636;
  PARAMETER(PAR.EV_Validation_Code);
  PARAMETER(PAR.EV_Maximum);
  PARAMETER(WRK.EV_Maximum);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

 }

 //?Min Max for Back Fat
 EXECUTE FUNCTION(Rtv Backfat Range     IF) TYPE(EXCINTFUN)                      AB1169712;
 PARAMETER(LCL.TH_Min_LT_Backfat_Inch);
 PARAMETER(LCL.TH_Max_GT_Backfat_Inch);
 {
  //?Execute internal function

  // PAR.EV Validation Code = CND.Backfat is Low
  PAR.EV_Validation_Code = 'BLW';

  EXECUTE FUNCTION(Rtv Min/Max Values    RT) TYPE(RTVOBJ) FILE(PKBOREP)           AB1169636;
  PARAMETER(PAR.EV_Validation_Code);
  PARAMETER(WRK.EV_Minimum);
  PARAMETER(PAR.EV_Minimum);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.EV Validation Code = CND.Backfat is high
  PAR.EV_Validation_Code = 'BHI';

  EXECUTE FUNCTION(Rtv Min/Max Values    RT) TYPE(RTVOBJ) FILE(PKBOREP)           AB1169636;
  PARAMETER(PAR.EV_Validation_Code);
  PARAMETER(PAR.EV_Maximum);
  PARAMETER(WRK.EV_Maximum);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

 }

 //?Min Max for LoinEye
 EXECUTE FUNCTION(Rtv Loin-Eye Range    IF) TYPE(EXCINTFUN)                      AB1169713;
 PARAMETER(LCL.TH_Min_LT_LoinEye_Inch);
 PARAMETER(LCL.TH_Max_GT_LoinEye_Inch);
 {
  //?Execute internal function

  // PAR.EV Validation Code = CND.Loineye is Low
  PAR.EV_Validation_Code = 'LLW';

  EXECUTE FUNCTION(Rtv Min/Max Values    RT) TYPE(RTVOBJ) FILE(PKBOREP)           AB1169636;
  PARAMETER(PAR.EV_Validation_Code);
  PARAMETER(WRK.EV_Minimum);
  PARAMETER(PAR.EV_Minimum);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.EV Validation Code = CND.Loineye is High
  PAR.EV_Validation_Code = 'LHI';

  EXECUTE FUNCTION(Rtv Min/Max Values    RT) TYPE(RTVOBJ) FILE(PKBOREP)           AB1169636;
  PARAMETER(PAR.EV_Validation_Code);
  PARAMETER(PAR.EV_Maximum);
  PARAMETER(WRK.EV_Maximum);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

 }

 //?USER: Processing if Data record not found

 //?022206 slm tf report site is not getting updated on the held over
 //?       change on this create not to zero out the producer or site
 //?       bring this from the parm
 //?       Replace the create tattoo header ext
 //?       We don't believe that this is being performed anymore
 //?       which means that we are not creating anymore tattoo hdr ext
 //?       here since we now do on the beginning of a tattoo
 //?       and also during the held over in the drive card area.
 //?       will have to be performing the testing.
 EXECUTE FUNCTION(Crt TatHdrExt WOPrdSitCO) TYPE(CRTOBJ) FILE(PKDNCPP)           AB1270520;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.TH_Tattoo_Number);
 PARAMETER(PAR.TH_Kill_Date);
 PARAMETER(PAR.TH_CA_Market_Price);
 PARAMETER(PAR.TH_CA_Base_Market_Price);
 PARAMETER(PAR.TH_CA_Base_Mkt_Price_Amt);
 PARAMETER(PAR.TH_CA_Sort_Discount_Amt);
 PARAMETER(PAR.TH_CA_Yield_Gain_Loss_Amt);
 PARAMETER(PAR.TH_CA_Base_Carcass_Value);
 PARAMETER(PAR.TH_CA_Lean_Premium_Amt);
 PARAMETER(PAR.TH_CA_Carcass_Gross_Amt);
 PARAMETER(PAR.TH_CA_Bse_Mkt_Live_CWT);
 PARAMETER(PAR.TH_CA_Bse_Mkt_Carc_CWT);
 PARAMETER(PAR.TH_CA_Srt_Dsc_Live_CWT);
 PARAMETER(PAR.TH_CA_Srt_Dsc_Carc_CWT);
 PARAMETER(PAR.TH_CA_Yld_G_L_Live_CWT);
 PARAMETER(PAR.TH_CA_Yld_G_L_Carc_CWT);
 PARAMETER(PAR.TH_CA_Crc_Val_Live_CWT);
 PARAMETER(PAR.TH_CA_Crc_Val_Carc_CWT);
 PARAMETER(PAR.TH_CA_Lean_Prm_Live_CWT);
 PARAMETER(PAR.TH_CA_Lean_Prm_Carc_CWT);
 PARAMETER(PAR.TH_CA_Gross_Live_CWT);
 PARAMETER(PAR.TH_CA_Gross_Carc_CWT);
 PARAMETER(LCL.TH_Min_LT_Backfat_Inch);
 PARAMETER(LCL.TH_Min_LT_LoinEye_Inch);
 PARAMETER(LCL.TH_Min_LT_Hot_Wt_lb);
 PARAMETER(LCL.TH_Min_LT_Lean_Pct);
 PARAMETER(LCL.TH_Max_GT_Backfat_Inch);
 PARAMETER(LCL.TH_Max_GT_LoinEye_Inch);
 PARAMETER(LCL.TH_Max_GT_Hot_Wt_lb);
 PARAMETER(LCL.TH_Max_GT_Lean_Pct);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.TE_Unused_Status_1);
 PARAMETER(LCL.TE_Unused_Status_2);
 PARAMETER(LCL.TE_Unused_Status_3);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

  // DB1.RS User Changed = CON.*BLANK
  DB1.RS_User_Changed = *BLANK;

  // DB1.RS Date Changed = CON.*ZERO
  DB1.RS_Date_Changed = *ZERO;

  // DB1.RS Time Changed = CON.*ZERO
  DB1.RS_Time_Changed = *ZERO;

 }

 //?USER: Process Data record

 EXECUTE FUNCTION(Chg TatHdrEXT WOPrdSitCH) TYPE(CHGOBJ) FILE(PKDNCPP)           AB1270598;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(PAR.TH_CA_Market_Price);
 PARAMETER(PAR.TH_CA_Base_Market_Price);
 PARAMETER(PAR.TH_CA_Base_Mkt_Price_Amt);
 PARAMETER(PAR.TH_CA_Sort_Discount_Amt);
 PARAMETER(PAR.TH_CA_Yield_Gain_Loss_Amt);
 PARAMETER(PAR.TH_CA_Base_Carcass_Value);
 PARAMETER(PAR.TH_CA_Lean_Premium_Amt);
 PARAMETER(PAR.TH_CA_Carcass_Gross_Amt);
 PARAMETER(PAR.TH_CA_Bse_Mkt_Live_CWT);
 PARAMETER(PAR.TH_CA_Bse_Mkt_Carc_CWT);
 PARAMETER(PAR.TH_CA_Srt_Dsc_Live_CWT);
 PARAMETER(PAR.TH_CA_Srt_Dsc_Carc_CWT);
 PARAMETER(PAR.TH_CA_Yld_G_L_Live_CWT);
 PARAMETER(PAR.TH_CA_Yld_G_L_Carc_CWT);
 PARAMETER(PAR.TH_CA_Crc_Val_Live_CWT);
 PARAMETER(PAR.TH_CA_Crc_Val_Carc_CWT);
 PARAMETER(PAR.TH_CA_Lean_Prm_Live_CWT);
 PARAMETER(PAR.TH_CA_Lean_Prm_Carc_CWT);
 PARAMETER(PAR.TH_CA_Gross_Live_CWT);
 PARAMETER(PAR.TH_CA_Gross_Carc_CWT);
 PARAMETER(DB1.TH_Min_LT_Backfat_Inch);
 PARAMETER(DB1.TH_Min_LT_LoinEye_Inch);
 PARAMETER(DB1.TH_Min_LT_Hot_Wt_lb);
 PARAMETER(DB1.TH_Min_LT_Lean_Pct);
 PARAMETER(DB1.TH_Max_GT_Backfat_Inch);
 PARAMETER(DB1.TH_Max_GT_LoinEye_Inch);
 PARAMETER(DB1.TH_Max_GT_Hot_Wt_lb);
 PARAMETER(DB1.TH_Max_GT_Lean_Pct);
 PARAMETER(DB1.TH_Head_LT_Backfat_In_Min);
 PARAMETER(DB1.TH_Head_LT_LoinEye_In_Min);
 PARAMETER(DB1.TH_Head_LT_Hot_Wt_lb_Min);
 PARAMETER(DB1.TH_Head_LT_Lean_Pct_Min);
 PARAMETER(DB1.TH_Head_GT_Backfat_In_Max);
 PARAMETER(DB1.TH_Head_GT_LoinEye_In_Max);
 PARAMETER(DB1.TH_Head_GT_Hot_Wt_lb_Max);
 PARAMETER(DB1.TH_Head_GT_Lean_Pct_Max);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


