// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKRCPVR
// ?Date: 14.08.2025 Time: 02:51:01
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//?01/28/2019 JBB E14411 - Cold Storage Analysys
//?- Susan requested that a separate prompt screen be created for the
//?  Cut Date Sequel.  Removed the Date Added field and the email
//?  address from this screen.  Added F18 to call the Cut Date prompt
//?  screen.
//?01/24/2019 JBB E14411 - Cold Storage Analysys
//?- Modify screen by adding new fields Date Added and Email.  These
//?  new fields will only be validated when the user presses F9 to
//?  submit Sequel Viewpoint "CUTDATE".  If the user presses <ENTER>,
//?  the screen only validates the fields for the report by Cut Date.
//?***** Change Log
//?** 02/28/2006 LJB
//?** Change the execute command to a sbmjob to call a new CL.
//?** New CLP will submit to the outq requested and retain the parms.
//?** Build this function over a new RSQ Access Path to put scale
//?** ID last and to make it not required.
//?*****
ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?USER: Load screen

// DTL.CC Company Number = PAR.CC Company Number
DTL.CC_Company_Number = PAR.CC_Company_Number;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Name_USR);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


// DTL.Primal Report Type USR = CND.Summary by Scale
DTL.Primal_Report_Type_USR = 01;

// DTL.Report Type Desc Usr = Condition name of DTL.Primal Report Type USR
DTL.Report_Type_Desc_Usr = RTVCND(DTL.Primal_Report_Type_USR);

//?USER: Validate fields

//?IF F18 pressed, call Cut Date screen; ELSE validate fields
CASE;

// IF DTL.*CMD key is CF18
IF DTL.*CMD_key = '18';

// Call program Zzz Primal Cut Dates  PV.
CALL PROGRAM(Zzz Primal Cut Dates  PV) ('PWIHPVR');

//?If user pressed F3 on previous screen, exit this program
CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

RETURN;

ENDIF;

QUIT;

//?IF F18 pressed, call Cut Date screen; ELSE validate fields
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Report Type Desc Usr = Condition name of DTL.Primal Report Type USR
DTL.Report_Type_Desc_Usr = RTVCND(DTL.Primal_Report_Type_USR);

// DTL.Condition Name USR = Condition name of DTL.PSA Shift
DTL.Condition_Name_USR = RTVCND(DTL.PSA_Shift);

//?If Allow Multi-Company is Yes, validate Company Number
CASE;

// IF PAR.Oms Allow Multi-Company is Yes
IF PAR.Oms_Allow_Multi_Company = 'Y';

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Name_USR);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


ENDIF;

//?If Cut Date is not entered, send error message
CASE;

// IF DTL.PSA Cut Date is Not Entered
IF DTL.PSA_Cut_Date = *ZERO;

// Send error message - 'Value Required.'
ERROR(PRK1406);
MSGPARM(DTL.PSA_Cut_Date);

ENDIF;

ENDIF;

//?USER: User defined action

// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Primal Cuts');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Oms_Application_Code);

//?If Print Parms accepted, submit report by Cut Date
CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

//?If Print Parms accepted, submit report by Cut Date
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Date Alpha USR = CVTVAR(DTL.PSA Cut Date)
WRK.Date_Alpha_USR = CVTVAR(DTL.PSA_Cut_Date);

//?** Change the execute to a sbmjob command        2/28/2006 LJB
// WRK.Return Code USR = CND.*Normal
WRK.Return_Code_USR = *BLANK;

// WRK.System Value Numeric  USR = PAR.PRT Copies
WRK.System_Value_Numeric_USR = PAR.PRT_Copies;

// WRK.@Company Values = DTL.CC Company Number
WRK.@Company_Values = DTL.CC_Company_Number;

// Call program Zzz Summ by Scl,Sft   UP.
SBMJOB;
CALL PROGRAM(Zzz Summ by Scl,Sft   UP) ('PKSBUPR');
PARAMETER(WRK.Return_Code_USR);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(WRK.System_Value_Numeric_USR);
PARAMETER(WRK.@Company_Values);
PARAMETER(DTL.PSA_Shift);
PARAMETER(DTL.Primal_Report_Type_USR);
PARAMETER(WRK.Date_Alpha_USR);
PARAMETER(PAR.Oms_System_Value_Alpha);
SBMJOBEND;

ENDIF;

