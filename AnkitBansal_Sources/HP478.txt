      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP478
      * TITLE:       SPECIFY CLOSED/DISPOSED GROUP SUMMARY OPTIONS
      * PROGRAMMER:  SHARON ZURN
      * CREATED:     06/28/94
      *
      * FUNCTION: USES A SPECIFY RECORD FORMAT TO ALLOW USER TO
      *           ENTER REPORT OPTIONS. OPTIONS ARE PLACED IN THE LDA.
      *
      *           THIS PROGRAM IS CALLED FROM TWO DIFFERENT MENU OPTIONS--ONE FOR
      *           CLOSED GROUPS AND ONE FOR DISPOSED GROUPS.  THE MENU SYSTEM WILL
      *           PASS THE GROUP STATUS (CL OR DS) INTO THIS PROGRAM. WE WILL THEN
      *           USE THE STATUS TO CONTROL PROCESSING FOR EITHER A) CLOSED OR
      *           B) DISPOSED GROUPS.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/08/00  LeAnne Fedor
      *           Removed print options (hold, copies, outque, etc.) from screen
      *           and replaced them with a function key that calls the pop-up
      *           window of print options.
      *
      * 02/14/01  LeAnne Fedor
      *           In preparation for allowing groups on a single farm to have different
      *           production types, we changed the edit for a farm.  The production type
      *           of a selected farm no longer has to "match" the production type that
      *           the user may have keyed on the screen.
      *
      * 05/14/01  LeAnne Fedor
      *           Replaced 'breed stock' selection with 'group type'. Combined logic for
      *           the 3 separate screens (group summary, farm summary, business summary)
      *           into this single selection screen.
      *
      * 05/22/01  LeAnne Fedor
      *           Modified the function so that it can be used for both DISPOSED and
      *           CLOSED group summaries.
      *
      * 07/22/02  LeAnne Fedor
      *           In preparation for allowing groups on a single farm to have different
      *           production phases, we changed the edit for a farm.  The production phase
      *           of a selected farm no longer has to "match" the production phase that
      *           the user may have keyed on the screen.
      *
      * 09/04/02  LeAnne Fedor
      *           Added 'company relationship' as new selector.
      *
      * 05/06/09  LeAnne Ramsey
      *           Per Sami Wilson, we added the "Include on the Report" section for
      *           the Disposed Groups...we already had it for the Closed Groups version.
      *           The only difference beteen the Disposed/Closed versions is that
      *           Disposed groups don't have "costs". So, for Disposed groups the screen
      *           will say "Sales" instead of "Sales/costs".
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD478    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS
      *
     FHSP010    IF   E           K DISK
      *    PRODUCTION TYPE
      *
     FHSP011    IF   E           K DISK
      *    PRODUCTION PHASE
      *
     FHSP012    IF   E           K DISK
      *    COMPANY RELATIONSHIP
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE
      *
     FHSP025    IF   E           K DISK
      *    GROUP TYPE
      *
     FHSP034    IF   E           K DISK
      *    HOG GROUP
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAYS FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *  CMD SUBMITS HP478CL CLOSED HOG GROUP SUMMARY
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
     D wkcymdiso       s               d   datfmt(*iso)
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  LDA -  WITH THE REQUESTED PRINT SELECTIONS
      *---------------------------------------------------------------
      *
     D LDA             DS
     D  LDFSBO                 1      5
     D  LDFYMD                 6     13  0
     D  LDTYMD                14     21  0
     D  LDPTCD                22     26
     D  LDPPCD                27     31
     D  LDFSCD                32     36  0
     D  LDHGCD                37     43
     D  LDMVPF                44     44
     D  LDSLCS                45     45
     D  LDGTCD                46     46
     D  LDCELL                47     48  0
     D  LDSLCD                49     49
     D  LDTMDY                50     55  0
     D  LDFMDY                56     61  0
     D  LDGSCD                62     63
     D  LDCRCD                64     68
     D  ldpmgfl               69     69
      *
     D  LDBODS                72    101
     D  LDPTDS               102    111
     D  LDPPDS               112    141
     D  LDFSNM               142    166
     D  LDHGSN               167    173  0
     D  LDGTDS               174    188
     D  LDSLDS               189    219
     D  LDCRDS               220    229
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412  0
     D  LDOUTQ               413    422
      *
      *---------------------------------------------------------------
      *  Definition for external data area 'DALPER' which holds the last
      *  period that was closed in HPS.
      *---------------------------------------------------------------
     D                 DS
     D  DALPER                 1     24
     D  DACCYY                 1      4  0
     D  DAPER                  5      6  0
     D  DABPDT                 7     14  0
     D  DAEPDT                15     22  0
     D  DAPPFL                24     24
      *
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D ALL             C                   CONST('A')
     D GROUP           C                   'GROUP--SUMMARIZED TO GROUP LEVEL'
     D FARM            C                   'FARM--SUMMARIZED TO FARM LEVEL'
     D CELL            C                   'CELL--SUMMARIZED TO CELL LEVEL'
     D BUSINESS        C                   'BUSINESS--SUMMARIZED TO BUSINESS +
     D                                       LEVEL'
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C     $SET1         BEGSR
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP478K1
     C                   WRITE     HP478EC
     C                   EXFMT     HP478R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C     LDCOPY        PARM      LDCOPY        XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'QEZOUTPT'
     C                   MOVEL     SCRN1         ROUTNE
      *
      * CHECK FOR A USER PROMPT FIRST. THE USER MAY WANT
      * TO SELECT A NEW BUSINESS OFFICE.
      *
     C     *IN04         WHENEQ    *ON                                          WH PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
     C                   MOVE      *BLANK        DFFSNM
     C                   MOVE      *BLANK        DFPTDS
     C                   MOVE      *BLANK        DFPPDS
     C                   MOVE      *BLANK        DFGTDS
     C                   Z-ADD     0             LDFMDY
     C                   Z-ADD     0             LDFYMD
     C                   Z-ADD     0             LDTMDY
     C                   Z-ADD     0             LDTYMD
     C                   Z-ADD     0             LDHGSN
      *
      * VALIDATE INCLUDE MOVEMENTS AND PERFORMANCE
      *
     C     DFMVPF        IFNE      YES
     C     DFMVPF        ANDNE     NO
     C                   SETON                                        41
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      * VALIDATE INCLUDE SALES AND COSTS
      *
     C     DFSLCS        IFNE      YES
     C     DFSLCS        ANDNE     NO
     C                   SETON                                        45
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      * YOU HAVE TO INCLUDE SOMETHING!
      *
     C                   IF        DFMVPF = NO AND DFSLCS = NO
     C                   SETON                                        4145
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09118'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      *
      * VALIDATE EITHER:
      *      1) HOG GROUP
      *           -- OR --
      *      2) ALL THE OTHER STUFF
      *         a) FROM DATE
      *         b) TO DATE
      *         c) BUSINESS OFFICE
      *         d) PRODUCTION TYPE
      *         e) PRODUCTION PHASE
      *         f) CELL
      *         g) COMPANY RELATIONSHIP
      *         h) FARM SITE
      *         i) GROUP TYPE
      *
     C                   IF        DFHGCD <> *BLANK
     C                   EXSR      $HGCD
     C                   ELSE
     C                   EXSR      $SLCD
     C                   EXSR      $pmgfl
     C                   EXSR      $FMDY
     C                   EXSR      $TMDY
     C                   EXSR      $CHKBO
     C                   EXSR      $PTCD
     C                   EXSR      $PPCD
     C                   EXSR      $CELL
     C                   EXSR      $CRCD
     C                   EXSR      $FSCD
     C                   EXSR      $GTCD
     C                   ENDIF
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C     *IN44         IFEQ      *OFF                                         IF OFF
     C                   SETON                                        44
     C                   ELSE
     C                   EXSR      $PROC1
     C                   ENDIF                                                  IF OFF
     C                   ELSE
     C                   SETOFF                                       44
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * VALIDATE SUMMARY LEVEL
      *----------------------------------------------------------------
      *
     C     $SLCD         BEGSR
      *
     C                   MOVE      *BLANK        DFSLDS
      *
     C                   SELECT
     C     DFSLCD        WHENEQ    *BLANK
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
      *
     C     DFSLCD        WHENNE    'G'
     C     DFSLCD        ANDNE     'F'
     C     DFSLCD        ANDNE     'C'
     C     DFSLCD        ANDNE     'B'
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   ENDIF
      *
     C     DFSLCD        WHENEQ    'G'
     C                   EVAL      DFSLDS = GROUP
      *
     C     DFSLCD        WHENEQ    'F'
     C                   EVAL      DFSLDS = FARM
      *
     C     DFSLCD        WHENEQ    'C'
     C                   EVAL      DFSLDS = CELL
      *
     C     DFSLCD        WHENEQ    'B'
     C                   EVAL      DFSLDS = BUSINESS
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * Do the users want to override the Sort Sequence to be by Production Manager?
      *----------------------------------------------------------------
      *
     C     $pmgfl        begsr
      *
     C                   select
     C                   when      dfpmgfl <> yes and dfpmgfl <> no
     C                   seton                                        42
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09106'     mgid(e)
     C                   endif
      *
     C                   when      dfpmgfl = yes and
     C                             (dfslcd = 'C' or dfslcd = 'B')
     C                   seton                                        42
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00847'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * VALIDATE FROM DATE
      *----------------------------------------------------------------
      *
     C     $FMDY         BEGSR
      *
      * VALIDATE DATE WHEN THE USER HAS NOT SPECIFIED A SINGLE HOG GROUP.
      *
     C                   SELECT
     C     DFHGCD        WHENNE    *BLANK
      *
     C     DFFMDY        WHENEQ    0
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09091'     MGID(E)
     C                   ENDIF
     C                   OTHER
      *
     C     *mdy          test(d)                 dffmdy                 92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      dffmdy        wkcymdiso
     C                   move      wkcymdiso     ldfymd
     C                   z-add     dffmdy        ldfmdy
     C                   endif                                                  If bad date
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * VALIDATE TO DATE
      *----------------------------------------------------------------
      *
     C     $TMDY         BEGSR
      *
      * VALIDATE DATE WHEN THE USER HAS NOT SPECIFIED A SINGLE HOG GROUP.
      *
     C                   SELECT
     C     DFHGCD        WHENNE    *BLANK
      *
     C     DFTMDY        WHENEQ    0
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09091'     MGID(E)
     C                   ENDIF
     C                   OTHER
      *
     C     *mdy          test(d)                 dftmdy                 92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      dftmdy        wkcymdiso
     C                   move      wkcymdiso     ldtymd
     C                   z-add     dftmdy        ldtmdy
     C                   endif                                                  If bad date
     C                   ENDSL
      *
      * VERIFY THAT THE "TO" DATE IS NOT EARLIER THAN THE "FROM" DATE
      * IF VALID DATES HAVE BEEN ENTERED
      *
     C     LDTYMD        IFLT      LDFYMD                                       IF EARLIER
     C     DFHGCD        ANDEQ     *BLANK
     C     *IN33         ANDEQ     *OFF
     C     *IN33         ANDEQ     *OFF
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09009'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF EARLIER
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * VALIDATE PRODUCTION TYPE
      *----------------------------------------------------------------
      *
     C     $PTCD         BEGSR
      *
      * IF PRODUCTION TYPE KEYED, CHECK TO SEE IF IT IS VALID
      *
     C     DFPTCD        IFNE      *BLANK                                       IF TYPE
     C     DFPTCD        CHAIN     HSP010                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD TYPE
     C                   MOVEL     PTPTDS        DFPTDS
     C                   ELSE
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00180'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPTCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD TYPE
     C                   ENDIF                                                  IF TYPE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * VALIDATE PRODUCTION PHASE
      *----------------------------------------------------------------
      *
     C     $PPCD         BEGSR
      *
      *
      * IF PRODUCTION PHASE KEYED, CHECK TO SEE IF IT IS VALID
      *
     C     DFPPCD        IFNE      *BLANK                                       IF PHASE
      *
     C     DFPPCD        CHAIN     HSP011                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD PHAS
     C                   MOVEL     PPPPDS        DFPPDS
      *
     C                   IF        dfppcd = 'BGF  ' and error < maxmsg          If BGF
     C                   SETON                                        35
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00392'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF                                                  If BGF
      *
      * Invalid phase
     C                   ELSE
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00170'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD PHAS
     C                   ENDIF                                                  IF PHASE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * VALIDATE CELL
      *----------------------------------------------------------------
      *
     C     $CELL         BEGSR
      *
     C                   SELECT
     C     DFCELL        WHENEQ    0
      *
     C     DFCELL        WHENLT    0
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * VALIDATE FARM SITE
      *----------------------------------------------------------------
      *
     C     $FSCD         BEGSR
      *
      * IF FARM SITE KEYED, VALIDATE AND GET FARM SITE NAME
      *
     C     DFFSCD        IFNE      0                                            IF FARM
      *
     C     DFFSCD        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD FARM
     C                   MOVEL     FSFSNM        DFFSNM
      *
      * FARM SITE CANNOT BE A BGF FARM
      *
     C     FSPPCD        IFEQ      'BGF  '                                      IF BUS OFF
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09092'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BUS OFF
      *
      * CHECK FOR MATCHES BETWEEN FARM AND SCREEN ON:
      *  BUSINESS OFFICE
      *  CELL
      *  COMPANY RELATIONSHIP
      *
     C     FSFSBO        IFNE      DFFSBO                                       IF BUS OFF
     C     DFFSBO        ANDNE     *BLANK
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00158'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     FSFSBO        MGW(6)
     C                   MOVEA     DFFSBO        MGW(11)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BUS OFF
      *
      *  CHECK FOR CELL MATCH
      *
     C     FSCELL        IFNE      DFCELL                                       IF CELL
     C     DFCELL        ANDGT     0
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00705'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVE      FSCELL        XXCELL
     C                   MOVEA     XXCELL        MGW(6)
     C                   MOVE      DFCELL        XXCELL
     C                   MOVEA     XXCELL        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF CELL
      *
      * CHECK FOR COMPANY RELATIONSHIP MATCH
      *
     C     FSCRCD        IFNE      DFCRCD                                       IF RELATIONSHIP
     C     DFCRCD        ANDNE     *BLANK
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00852'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     FSCRCD        MGW(6)
     C                   MOVEA     DFCRCD        MGW(11)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF RELATIONSHIP
      *
      *  INVALID FARM
     C                   ELSE
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00131'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD FARM
     C                   ENDIF                                                  IF FARM
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * VALIDATE COMPANY RELATIONSHIP
      *----------------------------------------------------------------
      *
     C     $CRCD         BEGSR
      *
     C                   MOVE      *BLANK        DFCRDS
      *
     C                   SELECT
     C     DFCRCD        WHENEQ    *BLANK
     C                   OTHER
      *
     C     DFCRCD        CHAIN     HSP012                             92
     C     *IN92         IFEQ      *OFF                                         IF OK
     C                   MOVEL     CRCRDS        DFCRDS
     C                   ELSE
     C                   SETON                                        47
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00175'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFCRCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF OK
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * VALIDATE GROUP TYPE
      *----------------------------------------------------------------
      *
     C     $GTCD         BEGSR
      *
     C                   MOVE      *BLANK        DFGTDS
      *
     C                   SELECT
     C     DFGTCD        WHENEQ    *BLANK
     C                   OTHER
      *
     C     DFGTCD        CHAIN     HSP025                             92
     C     *IN92         IFEQ      *OFF                                         IF OK TYPE
     C                   MOVEL     GTGTDS        DFGTDS
     C                   ELSE
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00137'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFGTCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF OK TYPE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * VALIDATE HOG GROUP
      *----------------------------------------------------------------
      *
     C     $HGCD         BEGSR
      *
     C     DFHGCD        IFNE      *BLANK                                       IF A GROUP
     C     DFHGCD        CHAIN     HSP034                             92
     C     *IN92         IFEQ      *ON                                          IF BAD
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00261'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   Z-ADD     HGHGSN        LDHGSN
     C                   ELSE
      *
     C                   SELECT
     C                   WHEN      XXGSCD = 'CL' AND HGGSCD <> 'CL'
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00278'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     HGGSCD        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C                   WHEN      XXGSCD = 'DS' AND HGGSCD <> 'DS'
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00487'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     HGGSCD        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDIF                                                  IF BAD
     C                   ENDIF                                                  IF A GROUP
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CHKBO - CHECK THE BUSINESS OFFICE
      *----------------------------------------------------------------
      *
      * THE BUSINESS OFFICE ENTERED MUST:
      *    BE A VALID OFFICE IN THE BUSINESS OFFICE MASTER
      *    HAVE A SECURITY LOCATION TO WHICH THE USER IS AUTHORIZED
      *
     C     $CHKBO        BEGSR
      *
      * SET THE 'VALIDATE B.O.' FLAG DEPENDING ON WHETHER THE
      * USER LEFT B.O. BLANK TO GET ALL BUSINESS OFFICES OR ENTERED
      * A SPECIFIC OFFICE.
      *
     C     DFFSBO        IFEQ      *BLANK
     C                   MOVEL     ALL           INBOFL
     C                   ELSE
     C                   MOVEL     YES           INBOFL
     C                   ENDIF
      *
      * CHECK THE USER'S SECURITY TO THIS BUSINESS OFFICE.
      * SET INDVFL TO YES TO TELL SECURITY PROGRAM TO COMPARE THE
      * FUNCTION DIVISION CODE TO THE B.O. DIVISION CODE.
      *
     C                   MOVEL     YES           INDVFL
     C                   EXSR      $SEC
     C                   MOVEL     NO            INDVFL
      *
     C                   MOVEL     OUBODS        DFBODS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SEC   - CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVEL     DFFSBO        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            BO ERRFLG
     C                   PARM                    OURMFL            1
      *
     C     OUBOFL        IFEQ      YES
     C                   SETON                                        31
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
      *  IF USER TOOK F8=SUBMIT
      *
     C     *IN08         IFEQ      *ON                                          IF F8=SBMJOB
      *
      * SET LDA FIELDS
      *
     C                   MOVEL     XXGSCD        LDGSCD
     C                   MOVEL     DFMVPF        LDMVPF
     C                   MOVEL     DFSLCS        LDSLCS
      *
     C                   SELECT
     C                   WHEN      DFHGCD <> *BLANK
     C                   MOVEL     DFHGCD        LDHGCD
     C                   MOVEL     'G'           LDSLCD
     C                   MOVEL     GROUP         LDSLDS
     C                   MOVE      *BLANK        LDFSBO
     C                   MOVE      *BLANK        LDBODS
     C                   MOVE      *BLANK        LDPPCD
     C                   MOVE      *BLANK        LDPPDS
     C                   MOVE      *BLANK        LDPTCD
     C                   MOVE      *BLANK        LDPTDS
     C                   Z-ADD     0             LDCELL
     C                   Z-ADD     0             LDFSCD
     C                   MOVE      *BLANK        LDFSNM
     C                   MOVE      *BLANK        LDGTCD
     C                   MOVE      *BLANK        LDGTDS
     C                   MOVE      *BLANK        LDCRCD
     C                   MOVE      *BLANK        LDCRDS
     C                   OTHER
      *
     C                   MOVEL     DFSLCD        LDSLCD
     C                   MOVEL     DFSLDS        LDSLDS
     C                   MOVEL     dfpmgfl       ldpmgfl
     C                   MOVEL     DFFSBO        LDFSBO
     C                   MOVEL     DFBODS        LDBODS
     C                   MOVEL     DFPPCD        LDPPCD
     C                   MOVEL     DFPPDS        LDPPDS
     C                   MOVEL     DFPTCD        LDPTCD
     C                   MOVEL     DFPTDS        LDPTDS
     C                   Z-ADD     DFCELL        LDCELL
     C                   Z-ADD     DFFSCD        LDFSCD
     C                   MOVEL     DFFSNM        LDFSNM
     C                   MOVEL     DFGTCD        LDGTCD
     C                   MOVEL     DFGTDS        LDGTDS
     C                   MOVEL     DFCRCD        LDCRCD
     C                   MOVEL     DFCRDS        LDCRDS
     C                   MOVE      *BLANK        LDHGCD
     C                   ENDSL
      *
     C                   OUT       LDA
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO A
      * 80-CHARACTER FIELD FOR SUBMITTING HP678CL TO QCMDEXC.
      *
     C                   MOVEA     XXJOBQ        CMD(48)
     C                   MOVEA     CMD           CMDSBM
      *
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
     C                   ENDIF                                                  IF F8=SBMJOB
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      *  $F4S1 - F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * IF SUMMARY LEVEL
      *
     C     FLD           WHENEQ    'DFSLCD'
     C                   CALL      'HP517'
     C                   PARM      *BLANK        XXSLCD
     C                   PARM      *BLANK        XXSLDS
     C                   SETON                                        59
     C     XXSLCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXSLCD        DFSLCD
     C                   MOVEL     XXSLDS        DFSLDS
     C                   ENDIF                                                  IF SELECTED
      *
      * If Override Sort Sequence to Production Manager
      *
     C     FLD           WHENEQ    'DFPMGFL'
     C                   CALL      'HP522'
     C                   PARM      *BLANK        xxpmgfl
     C                   SETON                                        52
     C     xxpmgfl       IFNE      *BLANK
     C                   MOVEL     xxpmgfl       dfpmgfl
     C                   ENDIF
      *
      * IF BUSINESS OFFICE
      *
     C     FLD           WHENEQ    'DFFSBO'
     C                   MOVE      *BLANK        XXFSBO
     C                   MOVE      *BLANK        XXBODS
     C                   CALL      'HP503'
     C                   PARM                    XXFSBO
     C                   PARM                    XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        51
     C     XXFSBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFSBO        DFFSBO
     C                   MOVEL     XXBODS        DFBODS
     C                   ENDIF                                                  IF SELECTED
      *
      * IF PRODUCTION TYPE SELECTED
      *
     C     FLD           WHENEQ    'DFPTCD'
     C                   MOVE      *BLANK        XXPTCD
     C                   MOVE      *BLANK        XXPTDS
     C                   CALL      'HP504'
     C                   PARM                    XXPTCD
     C                   PARM                    XXPTDS
     C                   SETON                                        54
     C     XXPTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPTCD        DFPTCD
     C                   MOVEL     XXPTDS        DFPTDS
     C                   ENDIF                                                  IF SELECTED
      *
      * IF PRODUCTION PHASE SELECTED
      *
     C     FLD           WHENEQ    'DFPPCD'
     C                   MOVE      *BLANK        XXPPCD
     C                   MOVE      *BLANK        XXPPDS
     C                   CALL      'HP596'
     C                   PARM                    XXPPCD
     C                   PARM                    XXPPDS
     C                   SETON                                        55
     C     XXPPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPPCD        DFPPCD
     C                   MOVEL     XXPPDS        DFPPDS
     C                   ENDIF                                                  IF SELECTED
      *
      * IF FARM SITE SELECTED
      *
     C     FLD           WHENEQ    'DFFSCD'
     C                   CALL      'HP551'
     C                   PARM      DFFSBO        XXFSBO
     C                   PARM      0             WKFSCD
     C                   PARM      *BLANK        XXFSNM
     C                   PARM      DFPPCD        XXPPCD
     C                   PARM      DFPTCD        XXPTCD
     C                   SETON                                        56
     C     WKFSCD        IFNE      0
     C                   Z-ADD     WKFSCD        DFFSCD
     C                   MOVEL     XXFSNM        DFFSNM
     C                   ENDIF
      *
      * IF GROUP TYPE SELECTED
      *
     C     FLD           WHENEQ    'DFGTCD'
     C                   CALL      'HP531'
     C                   PARM      *BLANK        XXGTCD
     C                   PARM      *BLANK        XXGTDS
     C                   SETON                                        50
     C     XXGTCD        IFNE      *BLANK
     C                   MOVEL     XXGTCD        DFGTCD
     C                   MOVEL     XXGTDS        DFGTDS
     C                   ENDIF
      *
      * COMPANY RELATIONSHIP
      *
     C     FLD           WHENEQ    'DFCRCD'
     C                   CALL      'HP506'
     C                   PARM      *BLANK        XXCRCD
     C                   PARM      *BLANK        XXCRDS
     C                   SETON                                        57
     C     XXCRCD        IFNE      *BLANK
     C                   MOVEL     XXCRCD        DFCRCD
     C                   MOVEL     XXCRDS        DFCRDS
     C                   ENDIF
      *
      *  CLOSED HOG GROUP
      *
     C     FLD           WHENEQ    'DFHGCD'
      *
     C                   IF        XXGSCD = 'CL'
     C                   CALL      'HP593'
     C                   PARM      DFFSBO        XXFSBO
     C                   PARM      DFPTCD        XXPTCD
     C                   PARM      DFPPCD        XXPPCD
     C                   PARM      DFFSCD        WKFSCD
     C                   PARM      DFFMDY        XXFYMD
     C                   PARM      DFTMDY        XXTYMD
     C                   PARM      *BLANK        XXHGCD
     C                   ELSE
     C                   CALL      'HP576'
     C                   PARM      DFFSBO        XXFSBO
     C                   PARM      DFPTCD        XXPTCD
     C                   PARM      DFPPCD        XXPPCD
     C                   PARM      DFFSCD        WKFSCD
     C                   PARM      DFFMDY        XXFYMD
     C                   PARM      DFTMDY        XXTYMD
     C                   PARM      *BLANK        XXHGCD
     C                   ENDIF
      *
     C                   SETON                                        58
     C     XXHGCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXHGCD        DFHGCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF MOVEMENTS/PERFORMANCE
      *
     C     FLD           WHENEQ    'DFMVPF'
     C                   MOVE      *BLANK        XXMVPF
     C                   CALL      'HP522'
     C                   PARM                    XXMVPF
     C                   SETON                                        61
     C     XXMVPF        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXMVPF        DFMVPF
     C                   ENDIF                                                  IF SELECTED
      *
      * IF SALES/COSTS
      *
     C     FLD           WHENEQ    'DFSLCS'
     C                   MOVE      *BLANK        XXSLCS
     C                   CALL      'HP522'
     C                   PARM                    XXSLCS
     C                   SETON                                        65
     C     XXSLCS        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXSLCS        DFSLCS
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    XXGSCD
      *
      * THIS FUNCTION IS CALLED FROM TWO SEPARATE MENU OPTIONS--ONE FOR CLOSED
      * GROUPS AND THE OTHER FOR DISPOSED GROUPS. THE INCOMING PARM TELLS YOU
      * WHICH ONE.
     C                   SELECT
     C                   WHEN      XXGSCD = 'DS'
     C                   SETON                                        98
     C                   WHEN      XXGSCD = 'CL'
     C                   SETON                                        97
     C                   ENDSL
      *
      * DEFINE LDA
      *
     C     *DTAARA       DEFINE    *LDA          LDA
     C                   IN        LDA
      *
      * Initialize LDA fields for printing
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   Z-ADD     0             LDCOPY
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL     '*JOBD'       XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     0             XXCOPY            1 0
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        LDCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     LDCOPY        IFEQ      0
     C                   Z-ADD     1             LDCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * NUMERIC PARM FIELDS
      *
     C     *LIKE         DEFINE    DFFSCD        WKFSCD
     C                   Z-ADD     0             XXFYMD            6 0
     C                   Z-ADD     0             XXTYMD            6 0
      * ALPHA PARM FIELDS
      *
     C                   MOVE      *BLANK        XXCELL            2
     C                   MOVE      *BLANK        XXFSCD            5
     C     *LIKE         DEFINE    DFFSBO        XXFSBO
     C     *LIKE         DEFINE    DFBODS        XXBODS
     C     *LIKE         DEFINE    DFFSNM        XXFSNM
     C     *LIKE         DEFINE    DFPPCD        XXPPCD
     C     *LIKE         DEFINE    DFPPDS        XXPPDS
     C     *LIKE         DEFINE    DFPTCD        XXPTCD
     C     *LIKE         DEFINE    DFPTDS        XXPTDS
     C     *LIKE         DEFINE    DFGTCD        XXGTCD
     C     *LIKE         DEFINE    DFGTDS        XXGTDS
     C     *LIKE         DEFINE    DFHGCD        XXHGCD
     C     *LIKE         DEFINE    DFMVPF        XXMVPF
     C     *LIKE         DEFINE    dfpmgfl       xxpmgfl
     C     *LIKE         DEFINE    DFSLCS        XXSLCS
     C     *LIKE         DEFINE    DFSLCD        XXSLCD
     C     *LIKE         DEFINE    DFSLDS        XXSLDS
     C     *LIKE         DEFINE    HGGSCD        XXGSCD
     C     *LIKE         DEFINE    DFCRCD        XXCRCD
     C     *LIKE         DEFINE    DFCRDS        XXCRDS
      *
      * LOAD DEFAULTS INTO DISPLAY FIELDS
      *
     C                   MOVEL     'G'           DFSLCD
     C                   EVAL      DFSLDS = GROUP
     C                   MOVEL     YES           DFMVPF
     C                   MOVEL     NO            DFSLCS
     C                   MOVEL     NO            dfpmgfl
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                   Z-ADD     80            LENGTH           15 5          QCMDEXC PARM
     C                   MOVE      *BLANK        CMDSBM           80            QCMDEXC PARM
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
     C                   MOVEL     NO            INBOFL
     C                   EXSR      $SEC
     C                   MOVEL     YES           INBOFL
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
      * MOVE RETURNED FIELDS TO SCREEN
      *
     C                   MOVEL     OUBOBO        DFFSBO
     C                   MOVEL     OUBODS        DFBODS
      *
      * SAVE THIS FUNCTION'S DIVISION CODE
      *
     C     *LIKE         DEFINE    OUDVCD        SVDVCD
     C                   MOVEL     OUDVCD        SVDVCD
      *
      * DEFAULT DATES ONTO SCREEN FROM LAST CLOSED ACCOUNTING PERIOD.
      *
     C     *DTAARA       DEFINE                  DALPER
     C                   IN        DALPER
      *
     C     *iso          test(d)                 dabpdt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      dabpdt        wkcymdiso
     C     *mdy          move      wkcymdiso     dffmdy
     C                   endif                                                  If OK date
      *
     C     *iso          test(d)                 daepdt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      daepdt        wkcymdiso
     C     *mdy          move      wkcymdiso     dftmdy
     C                   endif                                                  If OK date
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD TABLE
SBMJOB CMD(CALL PGM(HP478CL)) JOB(CLSSUM) JOBQ(__________)
