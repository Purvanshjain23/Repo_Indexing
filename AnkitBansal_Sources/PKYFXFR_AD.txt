// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKYFXFR
// ?Date: 14.08.2025 Time: 02:50:49
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?H16853 ISE 11/05/2020-Recompiled due to change in Buy Order Number
EXECUTE FUNCTION(Chg Paid Tattoo to Unpaid) TYPE(RTVOBJ) FILE(PKA1CPP)          AB1167834;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Voucher_Payment_Date);
{
 //?USER: Process Data record

 // WRK.TH Payment Sts = DB1.TH Payment Sts
 WRK.TH_Payment_Sts = DB1.TH_Payment_Sts;

 CASE;

 // IF DB1.TH Payment Sts is Paid Live
 IF DB1.TH_Payment_Sts = 'PL';

 // WRK.TH Payment Sts = CND.Select Live
 WRK.TH_Payment_Sts = 'SL';

 // IF DB1.TH Payment Sts is PD Carcass Merit
 IF DB1.TH_Payment_Sts = 'PC';

 // WRK.TH Payment Sts = CND.Sl Carcass Merit
 WRK.TH_Payment_Sts = 'SC';

 // IF DB1.TH Payment Sts is Post Int Carc
 IF DB1.TH_Payment_Sts = 'NC';

 // WRK.TH Payment Sts = CND.Sl Int Carc
 WRK.TH_Payment_Sts = 'IC';

 // IF DB1.TH Payment Sts is Post Int Live
 IF DB1.TH_Payment_Sts = 'NL';

 // WRK.TH Payment Sts = CND.Sl Int Live
 WRK.TH_Payment_Sts = 'IL';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.TH Payment Sts = DB1.TH Payment Sts
 WRK.TH_Payment_Sts = DB1.TH_Payment_Sts;

 ENDIF;

 EXECUTE FUNCTION(Chg Paid Inf to Unp   CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1167850;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(WRK.TH_Payment_Sts);
 PARAMETER(*ZERO);
 PARAMETER('SLG');
 PARAMETER(JOB.*USER);
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_exec_start_time);
 PARAMETER(JOB.*JOB);
 PARAMETER(JOB.*PROGRAM);
 {
  //?USER: Processing before Data read

  EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
  {
   //?Execute internal function

   //?1/10/96  HPE056   Allow payment type to be update based on
   //?                  what the payment status is at the time this
   //?                  tattoo is being updated
  }

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

  EXECUTE FUNCTION(Chg/Crt Tatto/Spc Flds IF) TYPE(EXCINTFUN)                     AB1189848;
  PARAMETER(DB1.TH_Payment_Sts);
  PARAMETER(DB1.TH_Payment_Type);
  {
   //?Execute internal function

   EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
   {
    //?Execute internal function

    //?1/10/96  HPE056   Allow payment type to be update based on
    //?                  what the payment status is at the time this
    //?                  tattoo is being updated
   }

   //?Function Description:  If there are any fields that need to be
   //?Changed/Created during the Change functions or Create function
   //?Presently: Payment Type
   //?Add this routine to all of the change objects and create object
   //?that update the Payment Type
   CASE;

   // IF PAR.TH Payment Sts is Live anything
   IF PAR.TH_Payment_Sts = 'ML'/'PL'/'NL'/'SL'/'IL';

   // PAR.TH Payment Type = CND.Live
   PAR.TH_Payment_Type = 'L';

   // IF *OTHERWISE
   IF *OTHERWISE;

   // PAR.TH Payment Type = CND.Carcass Merit
   PAR.TH_Payment_Type = 'C';

   ENDIF;

  }

 }

 EXECUTE FUNCTION(Rtv/Chg Ttt/Kl D/A Sts RT) TYPE(RTVOBJ) FILE(PKCDCPP)          AB1186963;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.TH_Payment_Sts);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Change Tattoo Deduction) TYPE(CHGOBJ) FILE(PKCDCPP)            AB1107818;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.DED_D_A_Code);
  PARAMETER(DB1.THD_Ded_Add_Amount);
  PARAMETER(DB1.THD_Ded_Add_Amount);
  PARAMETER(DB1.THD_Unit_Amt_Sign);
  PARAMETER(DB1.THD_UOM);
  PARAMETER(DB1.THD_Transaction_Created);
  PARAMETER(DB1.THD_GL_Code);
  PARAMETER(DB1.THD_Contra_Gl_Code);
  PARAMETER(DB1.THD_Re_imbursement_Head);
  PARAMETER(PAR.THD_Payment_Sts);
  PARAMETER(DB1.THD_Expense_Paid_by);
  PARAMETER(DB1.THD_Expense_Type);
  PARAMETER(DB1.THD_Reserve_Account_Upd);
  PARAMETER(DB1.THD_Commission_Deduction);
  PARAMETER(DB1.THD_Deferred_Payment);
  PARAMETER(DB1.THD_Status_4);
  PARAMETER(DB1.THD_Status_5);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

}


