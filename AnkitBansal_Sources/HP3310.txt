      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     Workfile: Nursery Groups--Sow/Sire Detail
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     06/27/05
      *
      * FUNCTION:    This function builds the detail sow/sire records for each
      *              nursery group record in workfile Nursery Groups--BGF sources
      *              that has a BGF farm.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/18/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one in file HSP098-Sire Lines.
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp098    if   e           k disk
      *  Sire Lines
      *
      *
     Fhsp325    if   e           k disk
      *  Workfile: Weekly sire line dose percents
      *
      *
     Fhsp326    if   e           k disk
      *  Workfile: Nursery groups--BGF sources
      *
      *
     Fhsp3310   uf a e           k disk
      *  Workfile: Nursery groups--Sow/Sire Detail
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
     D arrsicd         s              5a   dim(50)
     D arrrchd         s              5s 0 dim(50)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      *
      * Control fields
      *
     D first           s              1    inz('Y')
      *
      *
      * Workfields
      *
     D wkrchd          s                   like(w2rchd)
     D wkremhd         s                   like(w2rchd)
     D wkhd            s                   like(w2rchd)
     D wkcn            s              3  0
     D wkpr            s             15  8
     D wkrempr         s              5  2
      *
      *
      * Array indexes
      *
     D x               s              3  0
     D y               s              3  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Process each destination group in the workfile.
      *
     C     *loval        setll     hsp326
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      hsp326                                 90
     C                   if        *in90 = *off
     C
      *
      * First time
     C                   if        first = yes
     C                   exsr      $clear
     C                   move      no            first
     C                   endif
      *
      *
      * Detail processing when the record has a BGF source farm,
      *  1) accumulate total head received into the group
      *  2) retrieve the weekly doses percents and build distribution arrays
      *  3) read the arrays to write records with distributed head
      *
     C                   if        w2orfscd <> 0
     C                   add       w2rchd        wkrchd
     C                   exsr      $doses
     C                   exsr      $wrt3310
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      *
      * EOF Processing
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------------
      * Retrieve the weekly doses percents and calculate head per sire line
      *---------------------------------------------------------------------
      *
     C     $doses        begsr
      *
     C                   z-add     0             wkcn
     C                   z-add     0             wkhd
     C                   z-add     w2rchd        wkremhd
      *
     C     key01         setll     hsp325
      *
     C                   dou       *in91 = *on                                  Doses loop
     C     key01         reade     hsp325                                 91
     C                   if        *in91 = *off                                 If not EOF
     C                   add       1             wkcn
      *
      * Determine how many head should go with this record. If you are on
      * the last record (or only have 1 record), then use all the remaining
      * head; otherwise, go calculate the head to associate with this sire line.
      *
     C                   select
     C                   when      wkcn = w1sino
     C                   z-add     wkremhd       wkhd
     C                   other
     C     w1dopr        mult      .01           wkpr
     C     w2rchd        mult      wkpr          wkhd
     C                   sub       wkhd          wkremhd
     C                   endsl
      *
     C                   z-add     1             x
     C     w1sicd        lookup    arrsicd(x)                             92
     C                   if        *in92 = *on                                  If exists
     C                   add       wkhd          arrrchd(x)
     C                   else
     C                   add       1             y
     C                   move      w1sicd        arrsicd(y)
     C                   z-add     wkhd          arrrchd(y)
     C                   endif                                                  If exists
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Doses loop
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Write records to Nursery Groups-Sow/Sire Detail
      *----------------------------------------------------------------
      *
     C     $wrt3310      begsr
      *
     C                   z-add     100           wkrempr
      *
      * Set up fields that do not change per record.
      *
     C                   z-add     w2orfscd      wforfscd
     C                   z-add     w2orcell      wforcell
     C                   z-add     w2svyr        wfsvyr
     C                   z-add     w2svwk        wfsvwk
      *
     C                   z-add     w2dnfscd      wfdnfscd
     C                   z-add     w2dncell      wfdncell
     C                   z-add     w2dnhgsn      wfdnhgsn
     C                   move      w2dnhgcd      wfdnhgcd
      *
     C                   if        y = 0                                        If no sire info
     C                   move      'UNK??'       wfsicd
     C                   move      'UNK??'       wfgg0
     C                   z-add     wkrchd        wfrchd
     C                   z-add     100           wfdopr
     C                   z-add     1             wfsino
     C                   write     wfrec
     C                   else
      *
      * We want to know how many sire line records we are writing for this
      * distribution.
     C                   z-add     y             wfsino
      *
      * Write a record for each element in the sire line array.
      *
     C                   do        y             x
     C                   move      arrsicd(x)    wfsicd
     C                   z-add     arrrchd(x)    wfrchd
      *
      * Calculate percent of total
      *
     C                   select
     C                   when      y = x
     C                   z-add     wkrempr       wfdopr
     C                   other
     C                   if        wkrchd <> 0
     C     arrrchd(x)    div       wkrchd        wkpr
     C     wkpr          mult(h)   100           wfdopr
     C                   sub       wfdopr        wkrempr
     C                   endif
     C                   endsl
      *
      * Retrieve Cognos Report Grouping associated with Sire Line
      *
     C     wfsicd        chain     hsp098                             92
     C                   if        *in92 = *off
     C                   move      sigg0         wfgg0
     C                   else
     C                   move      'UNK??'       wfgg0
     C                   endif
      *
     C                   write     wfrec
     C                   enddo
     C                   endif                                                  If no sire info
      *
      * Clear/initialize for next group
      *
     C                   exsr      $clear
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear routine
      *----------------------------------------------------------------
      *
     C     $clear        begsr
      *
      * Clear arrays and set array indexes back to zero
      *
     C                   move      *blank        arrsicd
     C                   z-add     0             arrrchd
     C                   z-add     0             x
     C                   z-add     0             y
      *
      * Clear accumulators
      *
     C                   z-add     0             wkrchd
     C                   z-add     0             wkremhd
     C                   z-add     0             wkhd
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     key01         klist
     C                   kfld                    w2orfscd
     C                   kfld                    w2svyr
     C                   kfld                    w2svwk
      *
     C                   endsr
      /EJECT
