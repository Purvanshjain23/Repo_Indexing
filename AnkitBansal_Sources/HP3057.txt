      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP3057
      * TITLE:       Royalty Payment: Build Group and Distributon Workfiles
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     12/15/05
      *
      * FUNCTION: Processes the Check Detail Workfile created for the Royalty Payment and
      *           builds a Group Header and a Dose Distributon workfile.
      *
      ****************************************************************************************
      * MODIFICATIONS:
      ****************************************************************************************
      * DATE      PROGRAMMER
      *
      * 09/19/07  LeAnne Ramsey
      *           Recompile only. New "target" fields added to the Datamart FIN: Weekly
      *           Group Detail file.
      *
      * 03/05/08  LeAnne Ramsey
      *           Added "Origin BGF Cell" to files:
      *                HSP331   Grow Finish Groups--Sow Sire Summary
      *                HSP3058  Workfile: Distribution
      *
      * 08/11/08  LeAnne Ramsey
      *           We will no longer use any Datamart files for the Royalties.
      *           Changed logic accordingly; added a Check Detail Workfile.
      *
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl331c   if   e           k disk
      *  Grow Finish Groups--Sow Sire Summary
      *  (LF omits records with zero doses)
      *
      *
     Fhsp3059   if   e           k disk
      *  Workfile: Check Detail
      *
      *
     Fhsp3057   uf a e           k disk
      *  Workfile: Group Header
      *
      *
     Fhsp3058   uf a e           k disk
      *  Workfile: Distribution
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * Standalone fields
      ****************************************************************
      *
      * Control/save fields
      *
     D first           s              1    inz('Y')
     D svhgcd          s                   like(w3hgcd)
     D svhgsn          s                   like(w3hgsn)
     D svfscd          s                   like(w3fscd)
      *
      *
      * Workfields
      *
     D wkcnt1          s              3  0
     D wkcnt2          s              3  0
     D wkpc            s             11  6
     D wkremslhd       s                   like(w1carhd)
     D wkremcarhd      s                   like(w1carhd)
     D wkremlivhd      s                   like(w1carhd)
     D wkremcdhd       s                   like(w1carhd)
     D wkremydhd       s                   like(w1carhd)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Step 1: Build group header workfile
      *
     C                   exsr      $step1
      *
      * Step 2: Distribute Dose Percents workfile
      *
     C                   exsr      $step2
      *
      * EOF Processing
     C                   seton                                        lr
      /EJECT
      *----------------------------------------------------------------------------------------
      * Build Group Header record
      *----------------------------------------------------------------------------------------
      *
      * Process each Check Detail Workfile record:
      *
     C     $step1        begsr
      *
     C     *loval        setll     hsp3059
      *
     C                   dou       *in91 = *on                                  Do header
     C                   read      hsp3059                                91
     C                   if        *in91 = *off                                 If not eof
      *
      * Break logic:
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   move      w3hgcd        svhgcd
     C                   z-add     w3fscd        svfscd
     C                   z-add     w3hgsn        svhgsn
      *
     C                   when      w3hgcd <> svhgcd
     C                   exsr      $wrt3057
     C                   move      w3hgcd        svhgcd
     C                   z-add     w3fscd        svfscd
     C                   z-add     w3hgsn        svhgsn
     C                   endsl
      *
      * Detail processing
      *    Accumulate head:
      *
     C                   add       w3slhd        w1slhd
     C                   add       w3carhd       w1carhd
     C                   add       w3livhd       w1livhd
     C                   add       w3cdhd        w1cdhd
     C                   add       w3ydhd        w1ydhd
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do header
      *
      *  Write out last record
      *
     C                   if        first = no
     C                   exsr      $wrt3057
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------------
      * Write group header record
      *----------------------------------------------------------------------------------------
      *
     C     $wrt3057      begsr
      *
     C                   move      svhgcd        w1hgcd
     C                   z-add     svhgsn        w1hgsn
     C                   z-add     svfscd        w1fscd
      *
     C                   write     w1rec
     C                   clear                   w1rec
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------------
      * Build Distribution records for each Group Header record
      *----------------------------------------------------------------------------------------
      *
      * Process each record in the Group Header workfile and create multiple
      * distributon records--1 for each unique sow/sire.
      *
     C     $step2        begsr
      *
     C     *loval        setll     hsp3057
      *
     C                   dou       *in91 = *on                                  Do groups
     C                   read(n)   hsp3057                                91
     C                   if        *in91 = *off                                 If not eof
      *
      * Retrieve/count the number of sow/sire records that exist for the group.
      * (You will need the "count" for your distribution logic.)
      *
     C                   exsr      $count
      *
      * Now, figure out the sow/sire distribution.
      *
     C                   exsr      $dist
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do groups
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------------
      * Count the number of sow/sire records for this group
      *----------------------------------------------------------------------------------------
      *
      * The open query omits records where dose percent is zero. So, you will be
      * reading/counting each sow/sire record with a value in Dose Percent.
      *
     C     $count        begsr
      *
     C                   z-add     0             wkcnt1
     C     w1hgsn        setll     hsl331c
      *
     C                   dou       *in93 = *on                                  Do count
     C     w1hgsn        reade     hsl331c                                93
     C                   if        *in93 = *off                                 If not eof
     C                   add       1             wkcnt1
     C                   endif                                                  If not eof
     C                   enddo                                                  Do count
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------------
      * Figure out the sow/sire distribution
      *----------------------------------------------------------------------------------------
      *
      * The open query omits records where dose percent is zero. So, you will only be
      * processing sow/sire records with a value in Dose Percent.
      *
     C     $dist         begsr
      *
      * Set up the "remaining head" fields with the total head from the
      * group header record.
      *
     C                   z-add     w1slhd        wkremslhd
     C                   z-add     w1carhd       wkremcarhd
     C                   z-add     w1livhd       wkremlivhd
     C                   z-add     w1cdhd        wkremcdhd
     C                   z-add     w1ydhd        wkremydhd
      *
     C                   z-add     0             wkcnt2
      *
     C     w1hgsn        setll     hsl331c
      *
     C                   dou       *in93 = *on                                  Do dist
     C     w1hgsn        reade     hsl331c                                93
     C                   if        *in93 = *off                                 If not eof
     C                   add       1             wkcnt2
      *
      * If you are on the last sow/sire record, dump the remaining head.
      *
     C                   select
     C                   when      wkcnt2 = wkcnt1
     C                   z-add     wkremslhd     w2dslhd
     C                   z-add     wkremcarhd    w2dcarhd
     C                   z-add     wkremlivhd    w2dlivhd
     C                   z-add     wkremydhd     w2dydhd
     C                   z-add     wkremcdhd     w2dcdhd
     C                   other
      *
      * Distribute
     C                   eval      wkpc = w7dopr / 100
      * Sale head
     C                   eval      w2dslhd = w1slhd * wkpc
     C                   if        w2dslhd > wkremslhd
     C                   z-add     wkremslhd     w2dslhd
     C                   endif
     C                   sub       w2dslhd       wkremslhd
      *
      * Carcass head
     C                   eval      w2dcarhd = w1carhd * wkpc
     C                   if        w2dcarhd > wkremcarhd
     C                   z-add     wkremcarhd    w2dcarhd
     C                   endif
     C                   sub       w2dcarhd      wkremcarhd
      *
      * Live head
     C                   eval      w2dlivhd = w1livhd * wkpc
     C                   if        w2dlivhd > wkremlivhd
     C                   z-add     wkremlivhd    w2dlivhd
     C                   endif
     C                   sub       w2dlivhd      wkremlivhd
      *
      * Yard dead head
     C                   eval      w2dydhd = w1ydhd * wkpc
     C                   if        w2dydhd > wkremydhd
     C                   z-add     wkremydhd     w2dydhd
     C                   endif
     C                   sub       w2dydhd       wkremydhd
      *
      * Condemned head
     C                   eval      w2dcdhd = w1cdhd * wkpc
     C                   if        w2dcdhd > wkremcdhd
     C                   z-add     wkremcdhd     w2dcdhd
     C                   endif
     C                   sub       w2dcdhd       wkremcdhd
     C                   endsl
      *
     C                   exsr      $wrt3058
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do dist
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------------
      * Write sow/sire record for a group
      *----------------------------------------------------------------------------------------
      *
     C     $wrt3058      begsr
      *
     C                   z-add     w1fscd        w2fscd
     C                   move      w1hgcd        w2hgcd
     C                   z-add     w1hgsn        w2hgsn
     C                   z-add     w1slhd        w2slhd
     C                   z-add     w1carhd       w2carhd
     C                   z-add     w1livhd       w2livhd
     C                   z-add     w1cdhd        w2cdhd
     C                   z-add     w1ydhd        w2ydhd
      *
     C                   z-add     w7dopr        w2dopr
     C                   z-add     w7orcell      w2orcell
     C                   z-add     w7orfscd      w2orfscd
     C                   move      w7sicd        w2sicd
      *
     C                   write     w2rec
     C                   clear                   w2rec
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
     C                   endsr
      /eject
