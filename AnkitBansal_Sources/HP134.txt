      *****************  RPG PROGRAM HEADING  ***********************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP134 - MAINTAIN AUTHORIZED USERS FOR A FUNCTION
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     02/14/95
      *
      * FUNCTION: THIS PROGRAM USES A SUBFILE TO MAINTAIN AUTHORIZED
      *           USERS FOR A FUNCTION.
      *
      *           THE PROGRAM WILL CREATE, DELETE AND UPDATE RECORDS
      *           FOR A FUNCTION IN THE AUTHORIZED FUNCTIONS FILE.
      *
      *           THIS PROGRAM IS CALLED FROM HP425-WORK WITH FUNCTIONS
      *
      *           IT DOES NOT HAVE SELECTORS OR POSITIONERS.
      *           IT DOES NOT HAVE F4-PROMPT LOGIC.
      *           IT LOADS THE SUBFILE A PAGE AT A TIME.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *           IT HAS STANDARD SUBFILE OPTION EDITING.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 03/27/96  LEANNE FEDOR
      *           RECOMPILE ONLY. A NEW FIELD 'DELETE MOVEMENTS FLAG'
      *           WAS ADDED TO THE AUTHORIZED USERS FILE.
      *
      * 04/30/96  LEANNE FEDOR
      *           RECOMPILE ONLY. A NEW FIELD 'MOVEMENT STATUS'
      *           WAS ADDED TO THE AUTHORIZED USERS FILE TO SUPPORT
      *           THE LOGIC FOR DELETING MOVEMENTS.
      *
      * 01/08/97  LEANNE FEDOR
      *           FIXED LOGIC THAT ALLOWED F4-PROMPT ON PROTECTED
      *           SUBFILE FIELD.
      *
      * 05/14/97  LEANNE FEDOR
      *           RECOMPILE ONLY.  OUTQUEUE WAS ADDED TO THE
      *           AUTHORIZED USERS FILE. THIS FIELD WILL NOW BE THE
      *           USER'S DEFAULT PRINTER IN HPS INSTEAD OF THE OUTQ
      *           ON THE USER'S PROFILE.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD134    CF   E             WORKSTN
     F                                     SFILE(HP134S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSP001    IF   E           K DISK
      *    AUTHORIZED USERS           (KEY: AUUSCD)
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS                  (KEY: FNFNCD)
      *
     FHSL003A   UF A E           K DISK
     F                                     INFDS(DBFEED)
      *    AUTHORIZED FUNCTIONS       (KEY: FAFNCD FAUSCD)
      *
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *STANDARD SUBFILE SELECTOR CONVERSION
      *---------------------------------------------------------------
     D                 DS
     D  DFOPT                  1      2
     D  WKOPT1                 1      1
     D  WKOPT2                 2      2
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      * VERIFY THAT THE FUNCTION THAT WAS SELECTED STILL EXISTS.
      *
     C     C1FNCD        CHAIN     HSP002                             90
     C     *IN90         IFEQ      *ON                                          IF NOT FOUND
     C                   MOVEL     YES           NOTFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00550'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     C1FNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT FOUND
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      *  WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP134K1
     C                   WRITE     HP134EC
     C                   EXFMT     HP134C1
      *
      * SET THE 'RESET' FLAG TO NO.  THIS FLAG IS USED TO DETERMINE
      * WHETHER TO REPOSITION THE USER TO A PARTICULAR PLACE IN THE
      * SUBFILE (RESET=YES) OR TO PLACE THE USER AT THE BEGINNNING OF
      * THE SUBFILE (RESET=NO)
      *
     C                   MOVEL     NO            RESET
      *
      * RETRIEVE THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) AND MOVE IT TO A WORK FIELD.  THIS VALUE
      * WILL BE USED LATER TO CONTROL THE REPOSITIONING OF THE SUBFILE.
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      *
      * CLEAR ALL MESSAGES
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND RESET STANDARD RESPONSE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4-PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C     MODE          IFEQ      REVISE
     C                   MOVEL     YES           RESET
     C                   ENDIF
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN06         WHENEQ    *ON                                          F6-CREATE
     C                   MOVEL     CREATE        MODE
     C                   MOVEL     CREATE        DFMODE
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C     MODE          IFEQ      REVISE
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
     C                   ELSE
     C                   MOVEL     REVISE        MODE
     C                   MOVEL     REVISE        DFMODE
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
      *
      * REPOSITION THE SUBFILE IF THE USER HAS CHANGED ANY OF THE
      * POSITIONERS IN THE CONTROL RECORD AND YOU ARE REVISING.
      *
     C     MODE          WHENEQ    REVISE                                       POSITIONER
     C     SVUSCD        ANDNE     C1USCD
     C                   MOVEL     NO            RESET
     C                   MOVEL     SET1          ROUTNE
     C                   MOVEL     C1USCD        SVUSCD
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * USER PRESSED 'ENTER'
      *
     C     MODE          IFEQ      REVISE                                       IF NOTHING
     C     HDRRN1        ANDEQ     0
     C                   MOVEL     EXIT          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF NOTHING
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * CLEAR CALLED PROGRAM FLAG
      *
     C                   MOVEL     NO            CALFLG
      *
      * FIRST, EDIT ALL THE SELECTIONS ENTERED BY THE USER IN THE
      * SUBFILE OPTION FIELD, TO SEE THAT VALID SELECTIONS WERE INPUT
      *
     C     MODE          IFEQ      REVISE
     C                   EXSR      $EDOP1
     C                   ENDIF
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTION SELECTORS ENTERED
      * BY THE USER, THEN READ THE SELECTED SUBFILE RECORDS AND PROCESS
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
     C                   ENDIF                                                  IF NO ERROR
      *
      * IF THERE ARE NO ERRORS,
      *    IF THE USER IS IN REVISE MODE, EXIT THE PROGRAM
      *    IF THE USER IS IN CREATE MODE, GO TO REVISE MODE
      *
     C     ERROR         IFEQ      0                                            IF STILL OK
      *
     C     MODE          IFEQ      CREATE                                       IF CREATE
     C                   MOVEL     REVISE        MODE
     C                   MOVEL     REVISE        DFMODE
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
      *
     C                   SELECT
     C     RTNCD         WHENEQ    '12'
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     RTNCD         WHENEQ    '03'
     C                   MOVEL     EXIT          ROUTNE
      *
     C     CALFLG        WHENEQ    YES
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     DELFLG        WHENEQ    YES                                          IF DELETED
     C                   MOVEL     NO            DELFLG
     C                   MOVEL     YES           RESET
     C                   MOVEL     SET1          ROUTNE
     C                   OTHER
      *
     C                   MOVEL     EXIT          ROUTNE
     C                   ENDSL
     C                   ENDIF                                                  IF CREATE
      *
     C                   ELSE
      *
      * IF THERE ARE SUBFILE ERRORS, SET THE SCREEN TO REDISPLAY
      *
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF STILL OK
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1  - SUBROUTINE TO CLEAR THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   Z-ADD     0             SVRRN1
      *
     C                   CLEAR                   HP134S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP134C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO FILL THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET INDICATORS TO CONTROL DSPF DISPLAY
      *
     C     MODE          IFEQ      CREATE
     C                   SETON                                        61
     C                   ELSE
     C                   SETON                                        60
     C                   ENDIF
      *
      *  IF THE SELECTED RECORD HAS BEEN DELETED OUT FROM UNDER
      *  THE USER, THEN SET *IN90 BACK ON TO CONTROL AVAILABLE FUNCTION
      *  KEYS AND INPUT FIELDS.  (*IN90 WAS SET OFF ABOVE WHEN THE
      *  SUBFILE WAS CLEARED)
      *
     C     NOTFLG        IFEQ      YES                                          IF NOT FOUND
     C                   SETON                                        90
     C                   ENDIF                                                  IF NOT FOUND
      *
      * SET POSITION IN THE AUTHORIZED FUNCTIONS FILE
      *
     C     C1USCD        IFEQ      *BLANK
     C     C1FNCD        SETLL     HSL003A
     C                   ELSE
     C     K2L003        SETLL     HSL003A
     C                   ENDIF
      *
      * THE FIELD 'RESET' IS A FLAG FIELD TO INDICATE WHETHER YOU ARE
      * ATTEMPTING TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE
      * SUBFILE.
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      * IF RESET IS 'NO', DON'T REPOSITION THE USER; JUST START OVER
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS
      * BY COMPARING THE HIDDEN RRN IN THE SUBFILE TO DESIRED MAXIMUM.
      * THE MAXIMUM WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     SVRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LOAD1- SUBROUTINE TO LOAD THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
     C                   Z-ADD     SVRRN1        HDRRN1
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      * COUNT IS USED TO COUNT THE RECORDS WRITTEN TO THE SUBFILE.
      *
     C                   Z-ADD     0             COUNT             2 0
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
      * IF IN REVISE MODE, READ AUTHORIZED FUNCTION RECORDS
      * FOR THE SELECTED FUNCTION.
      *
     C     MODE          IFEQ      REVISE
     C     C1FNCD        READE     HSL003A                                82
     C                   ENDIF
      *
     C     *IN82         IFEQ      *OFF                                          IF FOUND
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   MOVE      *BLANK        DFACT
     C                   MOVE      *BLANK        DFOPT
      *
      * IF IN REVISE MODE, FILL SUBFILE FIELDS FROM DATABASE FILE
      *
     C                   MOVE      *BLANK        DFUSCD
     C                   MOVE      *BLANK        DFUSNM
      *
     C     MODE          IFEQ      REVISE                                       IF REVISE
     C                   MOVEL     FAUSCD        DFUSCD
     C     FAUSCD        CHAIN     HSP001                             94
     C     *IN94         IFEQ      *ON
     C                   MOVEL(P)  'UNKNOWN'     DFUSNM
     C                   ELSE
     C                   MOVEL     AUUSNM        DFUSNM
     C                   ENDIF
     C                   ENDIF                                                  IF REVISE
      *
     C                   WRITE     HP134S1
     C                   SETON                                        81
      *
      * TO CONTROL THE PAGE OF THE SUBFILE TO DISPLAY, SET THE VALUE
      * FOR THE DSPF SFLRCDNBR FIELD TO BE EQUAL TO THE SFL HIDDEN RRN
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDIF                                                  IF FOUND
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD ERROR MESSAGE OF NO DATA FOUND.
      *
     C     HDRRN1        IFEQ      0
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09002'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
     C                   Z-ADD     HDRRN1        SVRRN1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EDOP1 - SUBROUTINE TO READ CHANGED RECORDS IN SUBFILE AND
      *          EDIT FOR VALID SUBFILE OPTIONS ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $EDOP1        BEGSR
      *
      * READ ALL THE CHANGED SUBFILE RECORDS EDITING FOR VALID SUBFILE
      * OPTIONS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO READ C
     C                   READC     HP134S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      * SET ON MDT
     C                   SETON                                        85
      *
      * SET OFF ERROR INDICATOR FOR SUBFILE SELECTOR
      *
     C                   SETOFF                                       30
      *
      * CONVERT OPTION USER ENTERED TO STANDARD FORMAT. FOR EXAMPLE,
      * A ' 1', '01', AND '1 ' MUST BE STANDARDIZED TO ' 1'.
      *
     C     WKOPT2        IFEQ      *BLANK                                       IF 2 = BLANK
     C                   MOVE      WKOPT1        WKOPT2
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 2 = BLANK
      *
     C     WKOPT1        IFEQ      *ZERO                                        IF 1 IS ZERO
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 1 IS ZERO
      *
      * TEST FOR VALID SUBFILE OPTION ENTRY ON ALL CHANGED RECORDS
      *
     C     DFOPT         IFNE      ' 4'
     C     DFOPT         ANDNE     '  '
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF
      *
     C                   EXSR      $IND
     C                   UPDATE    HP134S1
      *
      * SET OFF ERROR INDICATOR FOR SUBFILE SELECTOR
      *
     C                   SETOFF                                       30
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO READ C
      * RESET MDT
     C                   SETOFF                                       85
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO READ AND EDIT CHANGED SUBFILE RECORDS
      *          ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   MOVEL     '00'          RTNCD
      *
      * READ ALL THE CHANGED SUBFILE RECORDS PROCESSING THE SUBFILE
      * SELECTION
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO PROCESS
     C                   READC     HP134S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
      * SETON MDT
      * SET OFF THE ERROR INDICATORS
      *
     C                   SETON                                        85
     C                   SETOFF                                       3031
      *
     C     RTNCD         IFEQ      '00'                                         IF RETURN 0
     C                   MOVEL     NO            ERRFLG
      *
      * IF CREATE MODE AND THE RECORD HAS NOT ALREADY
      * BEEN CREATED
      *
     C                   SELECT
     C     MODE          WHENEQ    CREATE
     C     DFACT         ANDEQ     *BLANK
     C     DFUSCD        IFEQ      *BLANK
     C                   MOVE      *BLANK        DFUSNM
     C                   ELSE
     C                   EXSR      $EDCR1
     C                   ENDIF
      *
      * IF REVISE MODE AND RECORD HAS NOT ALREADY BEEN
      * DELETED.
      *
     C     MODE          WHENEQ    REVISE
     C                   EXSR      $EDRV1
     C                   ENDSL
      *
      * NOW, IF THE USER HAS ENTERED A SUBFILE OPTION, GO PERFORM
      * THAT PROCESSING IF THERE ARE NO ERRORS.
      *
     C                   MOVEL     NO            CALFLG
      *
      *  IF THERE WERE NO ERRORS, SET THE SFLNXTCHG INDICATOR OFF SO
      *  THAT THE PROGRAM WILL NOT REPROCESS THE SUBFILE RECORD.
      *  REWRITE THE SUBFILE RECORD.
      *
     C     ERRFLG        IFEQ      NO
     C                   SETOFF                                       85
     C                   ENDIF
     C                   ENDIF                                                  IF RETURN 0
      *
     C                   EXSR      $IND
     C                   UPDATE    HP134S1
      *
      * SET OFF THE ERROR INDICATORS
      *
     C                   SETOFF                                       3031
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO PROCESS
      * SET MDT
     C                   SETOFF                                       85
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDCR1 - SUBROUTINE TO EDIT/WRITE RECORDS TO DATABASE FILE
      *          FROM SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDCR1        BEGSR
      *
      *  CHECK TO SEE IF THE USER IS VALID
      *
     C     DFUSCD        CHAIN     HSP001                             94
     C     *IN94         IFEQ      *ON                                          IF NOT FOUND
     C                   SETON                                        31
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00556'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFUSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ELSE
      *
     C                   MOVEL     AUUSNM        DFUSNM
      *
      * USER MUST BE SET UP TO REQUIRE FUNCTION AUTHORIZATION
      *
     C     AUAFFL        IFEQ      YES                                          IF REQ AUTH
     C                   ELSE
     C                   SETON                                        31
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00575'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFUSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF REQ AUTH
      *
      * COMPARE USER'S 'MODIFY DATA' AUTHORITY TO THE FUNCTION
      * TYPE.
      *
     C     WKFNTY        IFEQ      'M'                                          IF MAINT
     C     AUMDFL        ANDEQ     NO
     C                   SETON                                        31
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00565'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFUSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF MAINT
      *
      * THE USER CANNOT ALREADY BE AUTHORIZED TO THIS FUNCTION.
      *
     C     K1L003        CHAIN(N)  HSL003A                            94
     C     *IN94         IFEQ      *OFF
     C                   SETON                                        31
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00554'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFUSCD        MGW(1)
     C                   MOVEA     C1FNCD        MGW(11)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF                                                  IF NOT FOUND
      *
      * WHEN A RECORD IS CREATED, THE CONSTANT '*CREATED' IS MOVED TO
      * A SUBFILE FIELD.  THIS IS DONE SO THAT IF SOME SUBFILE
      * RECORDS HAVE ERRORS AND THE SCREEN IS REDISPLAYED WITH ERROR
      * MESSAGES, THE USER WILL KNOW THAT THIS RECORD HAS BEEN CREATED
      * SUCCESSFULLY.  SETTING ON *IN62 WILL PROTECT THE FIELD.
      *
     C     ERRFLG        IFEQ      NO                                           IF NO ERROR
     C                   MOVEL     C1FNCD        FAFNCD
     C                   MOVEL     DFUSCD        FAUSCD
     C                   WRITE     FAREC
     C                   MOVEL     '*CREATED'    DFACT
     C                   SETON                                        62
     C                   ELSE
     C                   MOVE      *BLANK        DFACT
     C                   SETOFF                                       62
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDRV1 - SUBROUTINE TO EDIT/UPDATE/DELETE A DATABASE RECORD
      *          FROM SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDRV1        BEGSR
      *
      * IF THE USER IS NOT DELETING THE RECORD, THEN
      * PERFORM EDITS COMMON TO BOTH THE CREATE AND REVISE MODES
      * (NOTE: THIS FUNCTION HAS NOT EDITS COMMON TO BOTH)
      *
      * RETRIEVE RECORD AND LOCK BEFORE UPDATE/DELETE
      *
     C     ERRFLG        IFEQ      NO                                           IF NO ERROR
     C     K1L003        CHAIN     HSL003A                            94
      *
      * IN REVISE MODE THE USER MAY HAVE TAKEN SUBFILE OPTION 4 TO
      * DELETE A RECORD.
      *
      * WHEN A RECORD IS DELETED, THE CONSTANT '*DELETED' IS MOVED TO
      * THE SUBFILE FIELD.  THIS IS DONE SO THAT IF SOME SUBFILE
      * RECORDS HAVE ERRORS AND THE SCREEN IS REDISPLAYED WITH ERROR
      * MESSAGES, THE USER WILL KNOW THAT THIS RECORD HAS BEEN DELETED
      * SUCCESSFULLY.  *IN62 WILL PROTECT THE FIELDS.
      *
     C     *IN94         IFEQ      *OFF                                         IF FOUND
     C     DFOPT         IFEQ      ' 4'                                         IF DEL
     C                   MOVEL     YES           DELFLG
     C                   DELETE    FAREC
      *
     C                   MOVEL     *BLANKS       DFOPT
     C                   MOVEL     '*DELETED'    DFACT
     C                   SETON                                        62
     C                   ELSE
      * NOT OPTION '4'
     C                   MOVE      *BLANK        DFACT
     C                   SETOFF                                       62
     C                   UPDATE    FAREC
     C                   ENDIF                                                  IF DEL
     C                   ELSE
      *
      * THE RECORD HAS BEEN DELETED SINCE THIS PROGRAM RETRIEVED IT,
      * SO ISSUE THE STANDARD ERROR MESSAGE.
      *
     C     DFOPT         IFEQ      *BLANK
     C                   SETON                                        31
     C                   ELSE
     C                   SETON                                        30
     C                   ENDIF
      *
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09008'     MGID(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1                                    *
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
      * SET OFF PROMPT INDICATORS IN ALL SUBFILE RECORDS
      *
     C                   EXSR      $OFFIN
      *
     C                   SELECT
      *
      * USER CODE
      *
     C     FLD           WHENEQ    'DFUSCD'
      *
     C                   EXSR      $RRN1
     C     *IN97         IFEQ      *OFF                                         IF HIT
      *
     C     DFACT         IFEQ      *BLANK                                       IF NO PROTECT
      *
     C                   CALL      'HP590'
     C                   PARM      *BLANK        XXUSCD
     C                   PARM      *BLANK        XXUSNM
     C     XXUSCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXUSCD        DFUSCD
     C                   MOVEL     XXUSNM        DFUSNM
     C                   ENDIF                                                  IF SELECTED
     C                   ELSE
      *
      * THE FIELD IS PROTECTED BECAUSE THE RECORD HAS
      * ALREADY BEEN CREATED OR DELETED.
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NO  PROTECT
      *
      * RESET SUBFILE RECORD INDICATORS AND UPDATE SUBFILE
      * RECORD.
      *
     C                   SETON                                        8551
     C                   EXSR      $IND
     C                   UPDATE    HP134S1
      *
      * RESET THE SUBFILE RELATIVE RECORD NUMBER TO WHAT IT WAS BEFORE
      * THE USER TOOK F4 (IT WILL BE OUT-OF-SYNCH IF THE USER HAS
      * SELECTED A RECORD THUS CAUSING THE SUBFILE RECORD TO BE
      * RETRIEVED AND UPDATED.)  BUT, SET THE PAGE OF THE SUBFILE TO
      * BE DISPLAYED TO THE PAGE ON WHICH THE USER TOOK F4.
      *
     C                   Z-ADD     SVRRN1        HDRRN1
     C                   Z-ADD     HDRR1         HDPAG1
     C                   SETOFF                                       8551
     C                   ENDIF                                                  IF HIT
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $RRN1  - ROUTINE TO FIND/RETRIEVE THE SUBFILE RECORD TO UPDATE
      *          WHEN RETURNING FROM A SELECT PROGRAM ON SCREEN 1
      *---------------------------------------------------------------
      *
      * HDRR1 IS THE HIDDEN FIELD ASSOCIATED WITH THE KEYWORD SFLCSRRRN
      * ON THE CONTROL RECORD IN THE DSPF.
      * HDRRN1 IS THE VALUE ASSOCIATED WITH THE KEYWORD 'KSFILE' IN
      * THE F-SPECS FOR THE WORKSTATION.
      *
     C     $RRN1         BEGSR
      *
     C                   SETOFF                                       97
      *
     C     HDRR1         IFNE      0
     C                   Z-ADD     HDRR1         HDRRN1
     C     HDRRN1        CHAIN     HP134S1                            97
     C                   ENDIF
      *
     C                   ENDSR                                                                016
      /EJECT
      *---------------------------------------------------------------
      * $OFFIN - REWRITE THE SUBFILE RECORDS WITH THE INDICATORS OFF
      *---------------------------------------------------------------
      *
      * THIS SUBROUTINE KEEPS THE CURSOR FROM BEING ON A PREVIOUSLY
      * PROMPTED RECORD IN THE SUBFILE.
      *
     C     $OFFIN        BEGSR
      *
      * READ/PROCESS ALL THE CHANGED SUBFILE RECORDS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO PROCESS
     C                   READC     HP134S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
      * SETON MDT
     C                   SETON                                        85
      *
      * SET OFF THE ERROR INDICATORS IN THE SUBFILE
      * AND THEN RESET INDICATORS
      *
     C                   SETOFF                                       51
     C                   EXSR      $IND
     C                   UPDATE    HP134S1
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO PROCESS
      * SET MDT
     C                   SETOFF                                       85
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $IND - RESET INDICATORS IN SUBFILE
      *---------------------------------------------------------------
      *
      * RESET INDICTORS FOR SUBFILE RECORDS
      *
     C     $IND          BEGSR
      *
      *  IF THE RECORD HAS BEEN DELETED OUT FROM UNDER THE USER,
      *  THEN SET *IN90 BACK ON TO CONTROL AVAILABLE FUNCTION
      *  KEYS AND INPUT FIELDS.
      *
     C                   SETOFF                                       90
     C     NOTFLG        IFEQ      YES                                          IF NOT FOUND
     C                   SETON                                        90
     C                   ENDIF                                                  IF NOT FOUND
      *
      * IF THE SUBFILE RECORD HAS ALREADY BEEN
      * CREATED OR DELETED.
      *
     C                   SETOFF                                       62
     C     DFACT         IFNE      *BLANK
     C                   SETON                                        62
     C                   ENDIF
      *
      *
     C                   SETOFF                                       6061
     C     MODE          IFEQ      CREATE
     C                   SETON                                        61
     C                   ELSE
     C                   SETON                                        60
     C                   ENDIF
      *
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $ERR1  - SUBROUTINE TO SET THE SUBFILE TO REDISPLAY AT
      *          THE FIRST SCREEN THAT HAS ERRORS
      *---------------------------------------------------------------
      *
     C     $ERR1         BEGSR
      *
     C     ERROR         IFEQ      1
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANKS       MGI
     C                   PARM      *BLANKS       MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY FOR FILE AUTHORIZED FUNCTIONS
      *
     C     K1L003        KLIST
     C                   KFLD                    C1FNCD
     C                   KFLD                    DFUSCD
      *
     C     K2L003        KLIST
     C                   KFLD                    C1FNCD
     C                   KFLD                    C1USCD
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    C1FNCD
     C                   PARM                    C1FNDS
     C                   PARM                    WKFNTY
     C                   PARM                    RTNCD
      *
     C     *LIKE         DEFINE    FNFNTY        WKFNTY
      *
      * GLOBAL DEFINES
      *
     C                   MOVEL     *BLANK        PGM              10            USED IN MSG
     C                   MOVEL     *BLANK        MSGFL            10            USED IN MSG
     C                   MOVEL     *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            ERRFLG            1
     C                   MOVEL     NO            NOTFLG            1
     C                   MOVEL     NO            CALFLG            1
     C                   MOVEL     NO            DELFLG            1
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
     C     *LIKE         DEFINE    DFMODE        MODE                           SFL POSITION
     C     *LIKE         DEFINE    IDFLOW        WKFLOW                         SFL POSITION
     C     *LIKE         DEFINE    HDRRN1        SVRRN1
     C     *LIKE         DEFINE    C1USCD        SVUSCD
      *
      * PARMS FOR F4=PROMPT CALLS
      *
     C     *LIKE         DEFINE    AUUSCD        XXUSCD
     C     *LIKE         DEFINE    AUUSNM        XXUSNM
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     12            WKPLIN            2 0          SFLPAG(0012)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      * ALWAYS BRING THE SCREEN UP IN REVISE MODE--EVEN IF THERE ARE
      * NOT ANY RECORDS TO REVISE.
      *
     C                   MOVEL     REVISE        MODE
     C                   MOVEL     REVISE        DFMODE
     C                   SETON                                        62
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
