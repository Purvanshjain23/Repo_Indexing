// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POPOEFR
// ?Date: 14.08.2025 Time: 03:39:38
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize subfile record (existing record)

// RCD.Reverse Image Flag USR = CND.No
RCD.Reverse_Image_Flag_USR = 'N';

//?** If rec status is entered, display records that match
CASE;

// IF CTL.Record Status is Valid Entries
IF CTL.Record_Status = 'A'/'D'/'I';

CASE;

// IF RCD.Record Status NE CTL.Record Status
IF RCD.Record_Status <> CTL.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?** If Ship To is entered, display records that match
CASE;

// IF CTL.Ship To Customer is not equal to zero
IF CTL.Ship_To_Customer <> *ZERO;

CASE;

// IF RCD.Ship To Customer NE CTL.Ship To Customer
IF RCD.Ship_To_Customer <> CTL.Ship_To_Customer;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?** If Price Code is entered, display records that match
CASE;

// IF CTL.Price Code is Entered
IF CTL.Price_Code > *ZERO;

CASE;

// IF RCD.Price Code NE CTL.Price Code
IF RCD.Price_Code <> CTL.Price_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

EXECUTE FUNCTION(VAL Cust/Price Code    RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1677004;
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Price_Code);
PARAMETER(WRK.Record_Found_USR);
{
 //?USER: Initialize routine

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 QUIT;

}


//?** Highlight price codes that exist on orders
CASE;

// IF WRK.Record Found USR is Record Found
IF WRK.Record_Found_USR = 'Y';

// RCD.Reverse Image Flag USR = CND.Yes
RCD.Reverse_Image_Flag_USR = 'Y';

ENDIF;

//?CALC: Subfile control function fields

CASE;

// IF CTL.*CMD key is *Refresh
IF CTL.*CMD_key = '05';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?USER: Validate subfile record fields

//?** If rec status is entered, display records that match
CASE;

// IF CTL.Record Status is Valid Entries
IF CTL.Record_Status = 'A'/'D'/'I';

CASE;

// IF RCD.Record Status NE CTL.Record Status
IF RCD.Record_Status <> CTL.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?** If Ship To is entered, display records that match
CASE;

// IF CTL.Ship To Customer is not equal to zero
IF CTL.Ship_To_Customer <> *ZERO;

CASE;

// IF RCD.Ship To Customer NE CTL.Ship To Customer
IF RCD.Ship_To_Customer <> CTL.Ship_To_Customer;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?** If Price Code is entered, display records that match
CASE;

// IF CTL.Price Code is Entered
IF CTL.Price_Code > *ZERO;

CASE;

// IF RCD.Price Code NE CTL.Price Code
IF RCD.Price_Code <> CTL.Price_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?** Cannot delete if price code is being used on an order
CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4'/'4';

EXECUTE FUNCTION(VAL Cust/Price Code    RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1677004;
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Price_Code);
PARAMETER(WRK.Record_Found_USR);
{
 //?USER: Initialize routine

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 QUIT;

}


CASE;

// IF WRK.Record Found USR is Record Found
IF WRK.Record_Found_USR = 'Y';

// Send error message - 'Price code &1 cannot be deleted because orders exist.'
ERROR(USR4071);
MSGPARM(RCD.Price_Code);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

ENDIF;

//?** Start date must be before End date
CASE;

// IF RCD.Price Start Date is Entered
IF RCD.Price_Start_Date > *ZERO;

CASE;

// IF RCD.Price Start Date GE RCD.Price End Date
IF RCD.Price_Start_Date >= RCD.Price_End_Date;

// Send error message - 'Start Date must be less than End Date.'
ERROR(USR3310);
MSGPARM(RCD.Price_Start_Date);
MSGPARM(RCD.Price_End_Date);

ENDIF;

ENDIF;

//?** End date must be *GE to today
CASE;

// IF RCD.Price End Date is Entered
IF RCD.Price_End_Date > *ZERO;

CASE;

// IF RCD.Price End Date LT JOB.*Job date
IF RCD.Price_End_Date < JOB.*Job_date;

// Send error message - 'Date must be after or equal to the current date and time'
ERROR(USR3927);
MSGPARM(RCD.Price_End_Date);

ENDIF;

ENDIF;

//?USER: Delete DBF record

EXECUTE FUNCTION(Del Customer Prc Hdr  DL) TYPE(DLTOBJ) FILE(POC6REP)           AC1675626;
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Price_Code);

//?USER: Change DBF record

EXECUTE FUNCTION(Chg Customer Prc Hdr  CH) TYPE(CHGOBJ) FILE(POC6REP)           AC1675625;
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Price_Code);
PARAMETER(RCD.Price_Start_Date);
PARAMETER(RCD.Price_End_Date);
PARAMETER(RCD.Entered_by_User);
PARAMETER(RCD.Date_Entered);
PARAMETER(RCD.Time_Entered);
PARAMETER(RCD.CPH_Unused_Sts_1);
PARAMETER(RCD.CPH_Unused_Sts_2);
PARAMETER(RCD.CPH_Unused_Sts_3);
PARAMETER(RCD.EDI_Status_1);
PARAMETER(RCD.EDI_Status_2);
PARAMETER(RCD.EDI_Status_3);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Job_Time);
PARAMETER(RCD.User_Id);
PARAMETER(RCD.Job_Name);
PARAMETER(RCD.Job_Date);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


