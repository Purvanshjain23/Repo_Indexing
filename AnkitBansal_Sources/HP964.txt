      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production
      * PROGRAM:     HP964
      * TITLE:       Purge Individual Files
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     05/30/97
      *
      * FUNCTION:    This batch program purges data in individual files.
      *
      /EJECT
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/15/08  LeAnne Ramsey
      *           In anticipation of purging, added new files.
      *
      * 04/07/09  LeAnne Ramsey
      *           Removed all logic for HSP088-Farm Deaths with Reasons; we
      *           have deleted this file completely.
      *
      * 04/23/09  LeAnne Ramsey
      *           Recompile only. Costed Time/User added to Feed Ticket Header.
      *
      * 05/12/09  LeAnne Ramsey
      *           Recompile only. PickUp Ticket Type added to Feed Ticket Header.
      *
      * 05/14/09  LeAnne Ramsey
      *           Recompile only. Projected Destroyed Head removed from Reported
      *           Daily Activity file.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 09/21/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Upload Date' to Feed Ticket Header.
      *
      * 03/02/10  LeAnne Ramsey
      *           Recompile only. Added Farm Site to key of HSL084L.
      *
      * 04/12/10  LeAnne Ramsey
      *           The Feed Ticket logic was exiting prematurely because the HSP037 LFs did
      *           not have a prefix on the fields to distinguish them. So, added a prefix of P1
      *           on HSL037A.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl034d   uf   e           k disk
      *  Hog group
      *
      *
     Fhsl037l   uf   e           k disk
      *  Feed ticket header       (LF selects only Posted tickets)
      *
      *
     Fhsl037a   if   e           k disk    rename(fhrec:fhreca) prefix(p1)
      *  Feed ticket header
      *
      *
     Fhsp038    uf   e           k disk
      *  Feed ticket detail
      *
      *
     Fhsl047a   uf   e           k disk
      *  Group period
      *
      *
     Fhsp048    uf   e           k disk
      *  Expense ticket
      *
      *
     Fhsl048m   if   e           k disk    rename(xtrec:xtrecm)
      *  Expense ticket           (LF selects only Posted records)
      *
      *
     Fhsl055a   uf   e           k disk
      *  Period costs for hogs moved out
      *
      *
     Fhsp058    uf   e           k disk
      *  Movement event
      *
      *
     Fhsp059    uf   e           k disk
      *  Feed pickup ticket
      *
      *
     Fhsp063    uf   e           k disk
      *  Check header
      *
      *
     Fhsp064    uf   e           k disk
      *  Check detail
      *
      *
     Fhsp065    uf   e           k disk
      *  Check adjustments
      *
      *
     Fhsl068l   uf   e           k disk
      *  Killed/Dead hogs         (LF selects only Posted records)
      *
      *
     Fhsl069l   uf   e           k disk
      *  Inventory adjustments    (LF selects only Posted records)
      *
      *
     Fhsl074l   uf   e           k disk
      *  Transfer movement header (LF selects only Posted records)
      *
      *
     Fhsp075    uf   e           k disk
      *  Transfer movement detail
      *
      *
     Fhsp078    uf   e           k disk
      *  Rejected head with reasons
      *
      *
     Fhsl080b   uf   e           k disk
      *  Deleted movements
      *
      *
     Fhsl081e   uf   e           k disk
      *  Weekly sire line doses
      *
      *
     Fhsl082c   uf   e           k disk
      *  BGF daily production
      *
      *
     Fhsl084l   uf   e           k disk
      *  Sales movement header    (LF selects only Posted records)
      *
      *
     Fhsp085    uf   e           k disk
      *  Sales movement detail
      *
      *
     Fhsl086d   uf   e           k disk
      *  BGF weekly wean projections
      *
      *
     Fhsl092c   uf   e           k disk
      *  BGF Weekly Production
      *
      *
     Fhsl093c   uf   e           k disk
      *  BGF Farrowing and pregnancy check events
      *
      *
     Fhsl102b   uf   e           k disk
      *  Reported weekly activity
      *
      *
     Fhsl103c   uf   e           k disk
      *  Reported daily activity
      *
      *
     Fhsl118a   uf   e           k disk
      *  Costed movements: costed movements
      *
      *
     Fhsl120a   uf   e           k disk
      *  Costed movements: costed movements expense codes
      *
      *
     Fhsl188p   uf   e           k disk
      *  Supply farm budget header
      *
      *
     Fhsp189    uf   e           k disk
      *  Farm budget detail
      *
      *
     Fhsl192b   uf   e           k disk
      *  Supply budget request header
      *
      *
     Fhsp193    uf   e           k disk
      *  Request detail
      *
      *----------------------------------------------------------------
      * Purge files that will be backed up to tape
      *----------------------------------------------------------------
      *
     Fhsp037pr  o    e           k disk    rename(fhrec:fhrecpr)
      *  Feed ticket header
      *
      *
     Fhsp038pr  o    e           k disk    rename(fdrec:fdrecpr)
      *  Feed ticket detail
      *
      *
     Fhsp047pr  o    e           k disk    rename(gprec:gprecpr)
      *  Group period
      *
      *
     Fhsp048pr  o    e           k disk    rename(xtrec:xtrecpr)
      *  Expense ticket
      *
      *
     Fhsp055pr  o    e           k disk    rename(pcrec:pcrecpr)
      *  Period costs for hogs moved out
      *
      *
     Fhsp058pr  o    e           k disk    rename(merec:merecpr)
      *  Movement event
      *
      *
     Fhsp059pr  o    e           k disk    rename(fprec:fprecpr)
      *  Feed pickup ticket
      *
      *
     Fhsp063pr  o    e           k disk    rename(chrec:chrecpr)
      *  Check header
      *
      *
     Fhsp064pr  o    e           k disk    rename(cdrec:cdrecpr)
      *  Check detail
      *
      *
     Fhsp065pr  o    e           k disk    rename(cjrec:cjrecpr)
      *  Check adjustments
      *
      *
     Fhsp068pr  o    e           k disk    rename(kdrec:kdrecpr)
      *  Killed/Dead hogs
      *
      *
     Fhsp069pr  o    e           k disk    rename(iarec:iarecpr)
      *  Inventory adjustments
      *
      *
     Fhsp074pr  o    e           k disk    rename(mhrec:mhrecpr)
      *  Transfer movement header
      *
      *
     Fhsp075pr  o    e           k disk    rename(mdrec:mdrecpr)
      *  Transfer movement detail
      *
      *
     Fhsp078pr  o    e           k disk    rename(rjrec:rjrecpr)
      *  Rejected head with reasons
      *
      *
     Fhsp080pr  o    e           k disk    rename(dmrec:dmrecpr)
      *  Deleted movements
      *
      *
     Fhsp081pr  o    e           k disk    rename(swrec:swrecpr)
      *  Weekly sire line doses
      *
      *
     Fhsp082pr  o    e           k disk    rename(bdrec:bdrecpr)
      *  BGF daily production
      *
      *
     Fhsp084pr  o    e           k disk    rename(shrec:shrecpr)
      *  Sales movement header
      *
      *
     Fhsp085pr  o    e           k disk    rename(sgrec:sgrecpr)
      *  Sales movement detail
      *
      *
     Fhsp086pr  o    e           k disk    rename(pwrec:pwrecpr)
      *  BGF weekly wean projections
      *
      *
     Fhsp092pr  o    e           k disk    rename(bprec:bprecpr)
      *  BGF weekly production
      *
      *
     Fhsp093pr  o    e           k disk    rename(berec:berecpr)
      *  BGF farrowing and pregnancy check events
      *
      *
     Fhsp102pr  o    e           k disk    rename(rwrec:rwrecpr)
      *  Reported weekly activity
      *
      *
     Fhsp103pr  o    e           k disk    rename(rdrec:rdrecpr)
      *  Reported daily activity
      *
      *
     Fhsp118pr  o    e           k disk    rename(cmrec:cmrecpr)
      *  Costed movements: costed movements
      *
      *
     Fhsp120pr  o    e           k disk    rename(cxrec:cxrecpr)
      *  Costed movements: costed movements expense codes
      *
      *
     Fhsp188pr  o    e           k disk    rename(jhrec:jhrecpr)
      *  Supply farm budget header
      *
      *
     Fhsp189pr  o    e           k disk    rename(jdrec:jdrecpr)
      *  Farm budget header
      *
      *
     Fhsp192pr  o    e           k disk    rename(qhrec:qhrecpr)
      *  Supply budget request header
      *
      *
     Fhsp193pr  o    e           k disk    rename(qdrec:qdrecpr)
      *  Request detail
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Save/Control fields
      *
     d purgfl          s              1    inz('Y')
     d svfmbo          s                   like(fhfmbo)
     d svtrcd          s                   like(fhtrcd)
     d svrtno          s                   like(fhrtno)
     d svxtsn          s                   like(xtxtsn)
     d svtkno          s                   like(fhtkno)
      *
      *
      * Workfields
      *
     d wkhgsn          s                   like(hghgsn)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  lddt                   1      8  0
     D  ldyr                   9     12  0
     D  ldpe                  13     14  0
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * Mainline
      ***************************************************************************************
      *
      * Feed tickets
     C                   exsr      $feed
      *
      * Transfer movements
     C                   exsr      $tran
      * Sales movements
     C                   exsr      $sale
      * Checks
     C                   exsr      $check
      *
      * Killed/dead movements
     C                   exsr      $dead
      *
      * Inventory adjustments
     C                   exsr      $adj
      *
      * Expense tickets
     C                   exsr      $exp
      * Costs
     C                   exsr      $costs
      *
      * Farm supply budgets
      * Farm supply requests
     C                   exsr      $budgets
     C                   exsr      $requests
      *
      * Deleted movements
      *
     C     *loval        setll     hsl080b
     C                   dou       *in91 = *on or dmdmdt > lddt
     C                   read      hsl080b                                91
     C                   if        *in91 = *off and dmdmdt <= lddt
     C                   write     dmrecpr
     C                   delete    dmrec
     C                   endif
     C                   enddo
      *
      * Sire line doses
      *
     C     *loval        setll     hsl081e
     C                   dou       *in91 = *on or swwedt > lddt
     C                   read      hsl081e                                91
     C                   if        *in91 = *off and swwedt <= lddt
     C                   write     swrecpr
     C                   delete    swrec
     C                   endif
     C                   enddo
      *
      * BGF Daily Production
      *
     C     *loval        setll     hsl082c
     C                   dou       *in91 = *on or bdwedt > lddt
     C                   read      hsl082c                                91
     C                   if        *in91 = *off and bdwedt <= lddt
     C                   write     bdrecpr
     C                   delete    bdrec
     C                   endif
     C                   enddo
      *
      * BGF Weekly Wean Projections
      *
     C     *loval        setll     hsl086d
     C                   dou       *in91 = *on or pwrpwedt > lddt
     C                   read      hsl086d                                91
     C                   if        *in91 = *off and pwrpwedt <= lddt
     C                   write     pwrecpr
     C                   delete    pwrec
     C                   endif
     C                   enddo
      *
      * BGF Weekly Production
      *
     C     *loval        setll     hsl092c
     C                   dou       *in91 = *on or bpwedt > lddt
     C                   read      hsl092c                                91
     C                   if        *in91 = *off and bpwedt <= lddt
     C                   write     bprecpr
     C                   delete    bprec
     C                   endif
     C                   enddo
      *
      * BGF Farrowing and Pregnancy Check Events
      *
     C     *loval        setll     hsl093c
     C                   dou       *in91 = *on or beevyr >= ldyr
     C                   read      hsl093c                                91
     C                   if        *in91 = *off and beevyr < ldyr
     C                   write     berecpr
     C                   delete    berec
     C                   endif
     C                   enddo
      *
      * Reported Weekly Activity
      *
     C     *loval        setll     hsl102b
     C                   dou       *in91 = *on or rwwedt > lddt
     C                   read      hsl102b                                91
     C                   if        *in91 = *off and rwwedt <= lddt
      *
     C                   z-add     rwhgsn        wkhgsn
     C                   exsr      $hgsn
      *
     C                   write     rwrecpr
     C                   delete    rwrec
     C                   endif
     C                   enddo
      *
      * Reported Daily Activity
      * (We didn't have Week-Ending Date in this file until 10/2005. So,
      *  we added some code to workaround this using Daily Date.)
      *
     C     *loval        setll     hsl103c
     C                   dou       *in91 = *on or rdwedt > lddt
     C                   read      hsl103c                                91
     C                   if        *in91 = *off and rdwedt <= lddt
      *
     C                   if        rdwedt <> 0 or rddydt <= lddt
     C                   write     rdrecpr
     C                   delete    rdrec
     C                   endif
      *
     C                   endif
     C                   enddo
      *
     C                   seton                                        lr
      /EJECT
      *-----------------------------------------------------------------------------
      * Update Purge Flag/Date in Hog Group Record
      *-----------------------------------------------------------------------------
      *
     C     $hgsn         begsr
      *
     C     wkhgsn        chain     hsl034d                            92
     C                   if        *in92 = *off and hgpufl <> yes
     C                   move      yes           hgpufl
     C                   z-add     lddt          hgpudt
     C                   update    hgrec
     C                   endif
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------------
      * Feed Tickets
      *------------------------------------------------------------------------------------
      *
      * Feed ticket must be posted to Period End with a Post Date on/before the
      * Purge Date.  (Logical selects only Posted tickets)
      *
     C     $feed         begsr
      *
     C     *loval        setll     hsl037l
      *
     C                   dou       *in91 = *on or fhepdt > lddt                 Do feed
     C                   read      hsl037l                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             fhepdt <= lddt
      *
     C                   move      yes           purgfl
     C                   movel     fhfmbo        svfmbo
     C                   z-add     fhrtno        svrtno
     C                   z-add     fhtkno        svtkno
     C                   movel     fhtrcd        svtrcd
      *
      * For Delivery Tickets, check that all tickets with this Reference
      * Ticket Number are Posted.
      *
     C                   if        fhtrcd = 'D'
     C                   exsr      $feedref
     C                   endif
      *
      * Verify that all groups on the ticket are Closed/Voided.
      *
     C                   if        purgfl = yes
     C                   exsr      $feedgrp
     C                   endif
      *
      * Delete Feed Ticket Header/Detail
      *
     C                   if        purgfl = yes
     C                   exsr      $feeddlt
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do feed
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------
      * Check the Status of all Tickets for the Reference Ticket
      *---------------------------------------------------------------------------
      *
      * A Delivery Feed Ticket may be referenced by 'PICKUP' or 'ADJUSTMENT' feed
      * tickets. All of the tickets must have a Status of Posted and a Posted Date
      * on/before the Purge Date.
      *
     C     $feedref      begsr
      *
     C     key01         setll     hsl037a
      *
     C                   dou       *in93 = *on or purgfl = no                   Do reference
     C     key01         reade     hsl037a                                93
     C                   if        *in93 = *off and                             If not EOF
     C                             (p1fhtscd <> 'PP' or p1fhepdt > lddt)
     C                   move      no            purgfl
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do reference
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------------
      * Check the Status of all Groups on the Feed Ticket
      *-------------------------------------------------------------------------
      *
      * All groups on the Feed Ticket must be Closed/Voided.
      * (Except BGF groups--which are never Closed.)
      *
     C     $feedgrp      begsr
      *
     C     key02         setll     hsp038
      *
     C                   dou       *in93 = *on or purgfl = no                   Do feed group
     C     key02         reade(n)  hsp038                                 93
     C                   if        *in93 = *off                                 If not EOF
      *
     C     fdhgsn        chain(n)  hsl034d                            92
     C                   if        *in92 = *off and                             If not eligible
     C                             hgppcd <> 'BGF  ' and
     C                             hggscd <> 'CL' and
     C                             hggscd <> 'VD'
     C                   move      no            purgfl
     C                   endif                                                  If not eligible
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do feed group
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------
      * Delete Feed Ticket Detail and Header
      *---------------------------------------------------------------------------
      *
     C     $feeddlt      begsr
      *
      * Delete all Feed Ticket Detail records for this header
      *
     C     key02         setll     hsp038
      *
     C                   dou       *in94 = *on                                  Do detail
     C     key02         reade     hsp038                                 94
     C                   if        *in94 = *off
      *
     C                   z-add     fdhgsn        wkhgsn
     C                   exsr      $hgsn
      *
     C                   write     fdrecpr
     C                   delete    fdrec
     C                   endif
     C                   enddo                                                  Do detail
      *
      * If this is a Pickup Ticket, delete all records for the ticket in the
      * file that holds the "TO" side of the Pickup Ticket.
      *
     C                   if        svtrcd = 'P'                                 If pickup
      *
     C     key02         setll     hsp059
     C                   dou       *in94 = *on                                  Do to pickup
     C     key02         reade     hsp059                                 94
     C                   if        *in94 = *off
     C                   write     fprecpr
     C                   delete    fprec
     C                   endif
     C                   enddo                                                  Do to pickup
      *
     C                   endif                                                  If pickup
      *
      *
      * Delete Feed Ticket Header
      *
     C                   write     fhrecpr
     C                   delete    fhrec
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------
      * Delete all Transfer Movements
      *--------------------------------------------------------------------------
      *
      * Note: Logical selects only Posted records
      *
     C     $tran         begsr
      *
     C     *loval        setll     hsl074l
      *
     C                   dou       *in91 = *on or mhepdt > lddt                 Do transfer
     C                   read      hsl074l                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             mhepdt < lddt
      *
     C                   move      yes           purgfl
      *
      * Verify that all Groups on the Transfer are Closed.
      * If so, delete.
     C                   exsr      $trangrp
     C                   if        purgfl = yes
     C                   exsr      $trandlt
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do transfer
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Check the status of all groups on the Transfer Movement
      *-----------------------------------------------------------------------------
      *
      *  All Hog Groups on the Movement must be Closed (except BGF groups which are
      *  never Closed.)
      *
     C     $trangrp      begsr
      *
     C     mhmvsn        setll     hsp075
      *
     C                   dou       *in93 = *on or purgfl = no                   Do tran groups
     C     mhmvsn        reade(n)  hsp075                                 93
     C                   if        *in93 = *off                                 If not EOF
      *
      * Check Origin Group
      *
     C     mdorsn        chain(n)  hsl034d                            92
     C                   if        *in92 = *off and
     C                             hgppcd <> 'BGF  ' and
     C                             hggscd <> 'CL' and
     C                             hggscd <> 'VD'
     C                   move      no            purgfl
     C                   endif
      *
      * Check Destination Group
      *
     C     mddnsn        chain(n)  hsl034d                            92
     C                   if        *in92 = *off and
     C                             hgppcd <> 'BGF  ' and
     C                             hggscd <> 'CL' and
     C                             hggscd <> 'VD'
     C                   move      no            purgfl
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do tran groups
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------
      * Delete Transfer Movement Header, Detail, Event records
      *------------------------------------------------------------------------------
      *
     C     $trandlt      begsr
      *
      * Delete all detail records for this Movement.
      *
     C     mhmvsn        setll     hsp075
      *
     C                   dou       *in93 = *on                                  Do tran dtl
     C     mhmvsn        reade     hsp075                                 93
     C                   if        *in93 = *off                                 If not EOF
      *
     C                   z-add     mdorsn        wkhgsn
     C                   exsr      $hgsn
      *
     C                   z-add     mddnsn        wkhgsn
     C                   exsr      $hgsn
      *
     C                   write     mdrecpr
     C                   delete    mdrec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do tran dtl
      *
      * Delete all Reject Records for this Movement
      *
     C     mhmvsn        setll     hsp078
      *
     C                   dou       *in93 = *on                                  Do rejects
     C     mhmvsn        reade     hsp078                                 93
     C                   if        *in93 = *off
     C                   write     rjrecpr
     C                   delete    rjrec
     C                   endif
     C                   enddo                                                  Do rejects
      *
      * Delete all Movement Event records
      *
     C     mhmvsn        setll     hsp058
      *
     C                   dou       *in93 = *on                                  Do events
     C     mhmvsn        reade     hsp058                                 93
     C                   if        *in93 = *off
     C                   write     merecpr
     C                   delete    merec
     C                   endif
     C                   enddo                                                  Do events
      *
      * Delete Movement Header
      *
     C                   write     mhrecpr
     C                   delete    mhrec
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------------
      * Process Sales Movements
      *-------------------------------------------------------------------------
      *
      * Note: Logical selects only Posted records
      *
     C     $sale         begsr
      *
     C     *loval        setll     hsl084l
      *
     C                   dou       *in91 = *on or shepdt > lddt                 Do sales
     C                   read      hsl084l                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             shepdt <= lddt
      *
     C                   move      yes           purgfl
      *
      * Verify that all Groups on the Sales Movement are closed.
      * If so, delete.
     C                   exsr      $salegrp
     C                   if        purgfl = yes
     C                   exsr      $saledlt
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do sales
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------
      * Check the Status of all Groups on the Sales Movement
      *--------------------------------------------------------------------------
      *
      * All hog groups on the Sales Movement must be Closed (except BGF groups..which
      * are never Closed.)
      *
     C     $salegrp      begsr
      *
     C     shmvsn        setll     hsp085
      *
     C                   dou       *in93 = *on or purgfl = no                   Do sales
     C     shmvsn        reade(n)  hsp085                                 93
     C                   if        *in93 = *off                                 If not EOF
      *  Check Group
      *
     C     sghgsn        chain(n)  hsl034d                            92
     C                   if        *in92 = *off and
     C                             hgppcd <> 'BGF  ' and
     C                             hggscd <> 'CL'
     C                   move      no            purgfl
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do sales
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------------
      * Delete Sales Movement Header, Detail, Event records
      *-------------------------------------------------------------------------
      *
     C     $saledlt      begsr
      *
      * Delete all Detail records for this Sales Movement
      *
     C     shmvsn        setll     hsp085
      *
     C                   dou       *in93 = *on                                  Do sales detail
     C     shmvsn        reade     hsp085                                 93
     C                   if        *in93 = *off                                 If not EOF
      *
     C                   z-add     sghgsn        wkhgsn
     C                   exsr      $hgsn
      *
     C                   write     sgrecpr
     C                   delete    sgrec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do sales detail
      *
      * Delete all Movement Event records
      *
     C     shmvsn        setll     hsp058
      *
     C                   dou       *in93 = *on                                  Do events
     C     shmvsn        reade     hsp058                                 93
     C                   if        *in93 = *off
     C                   write     merecpr
     C                   delete    merec
     C                   endif
     C                   enddo                                                  Do events
      *
      * Delete Sales Movement Header
      *
     C                   write     shrecpr
     C                   delete    shrec
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------------
      * Process Checks
      *-------------------------------------------------------------------------
      *
     C     $check        begsr
      *
     C     *loval        setll     hsp063
      *
     C                   dou       *in91 = *on or chchdt > lddt                 Do checks
     C                   read      hsp063                                 91
     C                   if        *in91 = *off and chchdt <= lddt              If not EOF
      *
     C                   move      yes           purgfl
      *
      * Verify that all Groups on the Check are Closed.
      * If true, delete the check.
      *
     C                   exsr      $checkgrp
     C                   if        purgfl = yes
     C                   exsr      $checkdlt
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do checks
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------------
      * Check status of all Groups on a Check
      *----------------------------------------------------------------------------------------
      *
      * All Hog Groups on a Check must be closed (except BGF groups..which are never
      * Closed).
      *
     C     $checkgrp     begsr
      *
     C     key03         setll     hsp064
      *
     C                   dou       *in93 = *on or purgfl = no                   Do check groups
     C     key03         reade(n)  hsp064                                 93
     C                   if        *in93 = *off                                 If not EOF
      * Check Group
      *
     C     cdhgsn        chain(n)  hsl034d                            92
     C                   if        *in92 = *off and
     C                             hgppcd <> 'BGF  ' and
     C                             hggscd <> 'CL'
     C                   movel     no            purgfl
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do check groups
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Delete Check
      *---------------------------------------------------------------
      *
     C     $checkdlt     begsr
      *
      * Delete all Detail for the Check
      *
     C     key03         setll     hsp064
      *
     C                   dou       *in93 = *on                                  Do check detail
     C     key03         reade     hsp064                                 93
     C                   if        *in93 = *off
      *
     C                   z-add     cdhgsn        wkhgsn
     C                   exsr      $hgsn
      *
     C                   write     cdrecpr
     C                   delete    cdrec
     C                   endif
     C                   enddo                                                  Do check detail
      *
      * Delete all Check Adjustments
      *
     C     key03         setll     hsp065
      *
     C                   dou       *in93 = *on                                  Do check adj
     C     key03         reade     hsp065                                 93
     C                   if        *in93 = *off
     C                   write     cjrecpr
     C                   delete    cjrec
     C                   endif
     C                   enddo                                                  Do check adj
      *
      * Delete Check Header
      *
     C                   write     chrecpr
     C                   delete    chrec
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------------
      * Process Killed/Dead Movements
      *----------------------------------------------------------------------------------------
      *
      * Notes: Logical selects only Posted records
      *
     C     $dead         begsr
      *
     C     *loval        setll     hsl068l
      *
     C                   dou       *in91 = *on or kdepdt > lddt                 Do deads
     C                   read      hsl068l                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             kdepdt <= lddt
      *
      * Check that the Group is Closed
      *
     C     kdhgsn        chain(n)  hsl034d                            92
     C                   if        *in92 = *off and                             If not eligible
     C                             hgppcd <> 'BGF  ' and
     C                             hggscd <> 'CL'
     C                   else
     C                   exsr      $deaddlt
     C                   endif                                                  If not eligible
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do deads
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------------------
      * Delete Killed/Dead Movement
      *-----------------------------------------------------------------------------------------
      *
     C     $deaddlt      begsr
      *
      * Delete Movement Event record
      *
     C     kdmvsn        chain     hsp058                             92
     C                   if        *in92 = *off
     C                   write     merecpr
     C                   delete    merec
     C                   endif
      *
      * Delete Killed/Dead record
      *
     C                   z-add     kdhgsn        wkhgsn
     C                   exsr      $hgsn
      *
     C                   write     kdrecpr
     C                   delete    kdrec
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Delete Inventory Adjustment Movements
      *---------------------------------------------------------------------------------------
      *
      * Note: Logical selects only Posted records
      *
     C     $adj          begsr
      *
     C     *loval        setll     hsl069l
      *
     C                   dou       *in91 = *on or iaepdt > lddt                 Do adjustments
     C                   read      hsl069l                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             iaepdt <= lddt
      *
      * Check that the Group is Closed
      *
     C     iahgsn        chain(n)  hsl034d                            92
     C                   if        *in92 = *off and                             If not eligible
     C                             hgppcd <> 'BGF  ' and
     C                             hggscd <> 'CL'
     C                   else
     C                   exsr      $adjdlt
     C                   endif                                                  If not eligible
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do adjustments
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------------------
      * Delete Inventory Adjustment Movement
      *-----------------------------------------------------------------------------------------
      *
     C     $adjdlt       begsr
      *
      * Delete Movement Event Record
      *
     C     iamvsn        chain     hsp058                             92
     C                   if        *in92 = *off
     C                   write     merecpr
     C                   delete    merec
     C                   endif
      *
      * Delete Inventory Adjustment
      *
     C                   z-add     iahgsn        wkhgsn
     C                   exsr      $hgsn
      *
     C                   write     iarecpr
     C                   delete    iarec
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------------------------
      * Process all Expense Tickets
      *-------------------------------------------------------------------------------------
      *
      * Note: Logical file selects only Posted tickets.
      *
     C     $exp          begsr
      *
     C     *loval        setll     hsl048m
      *
     C                   dou       *in91 = *on or xtepdt > lddt                 Do Expenses
     C                   read      hsl048m                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             xtepdt <= lddt
      *
     C                   move      yes           purgfl
     C                   z-add     xtxtsn        svxtsn
      *
      * Verify that all Groups on the Expense Ticket are Closed.
      * If closed, delete.
     C                   exsr      $expgrp
     C                   if        purgfl = yes
     C                   exsr      $expdlt
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do Expenses
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------------------
      * Check the Status of all Groups on the Expense Ticket
      *------------------------------------------------------------------------------------------
      *
      * All Hog Groups on the Expense Ticket must be Closed/Voided (except BGF groups..
      * which are never Closed).
      *
     C     $expgrp       begsr
      *
     C     svxtsn        setll     hsp048
      *
     C                   dou       *in93 = *on or purgfl = no                   Do exp groups
     C     svxtsn        reade(n)  hsp048                                 93
     C                   if        *in93 = *off                                 If not EOF
      *  Check Group
      *
     C     xthgsn        chain(n)  hsl034d                            92
     C                   if        *in92 = *off and                             If ineligible
     C                             hgppcd <> 'BGF  ' and
     C                             hggscd <> 'CL' and
     C                             hggscd <> 'VD'
     C                   move      no            purgfl
     C                   endif                                                  If ineligible
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do exp groups
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Delete Expense Ticket
      *---------------------------------------------------------------------------------------
      *
     C     $expdlt       begsr
      *
     C     svxtsn        setll     hsp048
      *
     C                   dou       *in93 = *on                                  Do exp ticket
     C     svxtsn        reade     hsp048                                 93
     C                   if        *in93 = *off
      *
     C                   z-add     xthgsn        wkhgsn
     C                   exsr      $hgsn
      *
     C                   write     xtrecpr
     C                   delete    xtrec
     C                   endif
     C                   enddo                                                  Do exp ticket
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Costs
      *---------------------------------------------------------------------------------------
      *
     C     $costs        begsr
      *
      * Delete all Period Costs for Hogs Moved Out
      *
     C     *loval        setll     hsl055a
     C                   dou       *in91 = *on or pcacyr > ldyr                 Do hogs out
     C                   read      hsl055a                                91
      *
     C                   select
     C                   when      *in91 = *on or pcacyr > ldyr
      *
     C                   when      (pcacyr < ldyr) or
     C                             (pcacyr = ldyr and pcacpe <= ldpe)
     C                   z-add     pchgsn        wkhgsn
     C                   exsr      $hgsn
     C                   write     pcrecpr
     C                   delete    pcrec
     C                   endsl
     C                   enddo                                                  Do hogs out
      *
      * Delete all Group Period records
      *
     C     *loval        setll     hsl047a
     C                   dou       *in91 = *on or gpacyr > ldyr                 Do group period
     C                   read      hsl047a                                91
      *
     C                   select
     C                   when      *in91 = *on or gpacyr > ldyr
      *
     C                   when      (gpacyr < ldyr) or
     C                             (gpacyr = ldyr and gpacpe <= ldpe)
     C                   z-add     gphgsn        wkhgsn
     C                   exsr      $hgsn
     C                   write     gprecpr
     C                   delete    gprec
     C                   endsl
     C                   enddo                                                  Do group period
      *
      *
      * Delete all Costed Movments
      *
     C     *loval        setll     hsl118a
     C                   dou       *in91 = *on or cmacyr > ldyr                 Do cost move
     C                   read      hsl118a                                91
      *
     C                   select
     C                   when      *in91 = *on or cmacyr > ldyr
      *
     C                   when      (cmacyr < ldyr) or
     C                             (cmacyr = ldyr and cmacpe <= ldpe)
      *
     C                   z-add     cmorhgsn      wkhgsn
     C                   exsr      $hgsn
     C                   z-add     cmdnhgsn      wkhgsn
     C                   exsr      $hgsn
      *
     C                   write     cmrecpr
     C                   delete    cmrec
     C                   endsl
     C                   enddo                                                  Do cost move
      *
      *
      * Delete all Costed Movments Expense Codes
      *
     C     *loval        setll     hsl120a
     C                   dou       *in91 = *on or cxacyr > ldyr                 Do exp codes
     C                   read      hsl120a                                91
      *
     C                   select
     C                   when      *in91 = *on or cxacyr > ldyr
      *
     C                   when      (cxacyr < ldyr) or
     C                             (cxacyr = ldyr and cxacpe <= ldpe)
      *
     C                   z-add     cxorhgsn      wkhgsn
     C                   exsr      $hgsn
     C                   z-add     cxdnhgsn      wkhgsn
     C                   exsr      $hgsn
      *
     C                   write     cxrecpr
     C                   delete    cxrec
     C                   endsl
     C                   enddo                                                  Do exp codes
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Farm Supply Budgets
      *---------------------------------------------------------------------------------------
      *
     C     $budgets      begsr
      *
      * Process all Budget Header records that are Closed.
      *
     C     *loval        setll     hsl188p
      *
     C                   dou       *in91 = *on or jhbtdt > lddt                 Do budget hdr
     C                   read      hsl188p                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             jhfbscd = 'C' and
     C                             jhbtdt <= lddt
      *
      * Delete detail records
      *
     C     jhfbsn        setll     hsp189
     C                   dou       *in93 = *on                                  Do detail
     C     jhfbsn        reade     hsp189                                 93
     C                   if        *in93 = *off
     C                   write     jdrecpr
     C                   delete    jdrec
     C                   endif
     C                   enddo                                                  Do detail
      *
      * Delete header
     C                   write     jhrecpr
     C                   delete    jhrec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do budget hdr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Farm Budget Requests
      *---------------------------------------------------------------------------------------
      *
     C     $requests     begsr
      *
      * Process all Supply Budget Request Header records with status of:
      *   Completed, Delete, Error, Hold (logical file selects these records)
      *
     C     *loval        setll     hsl192b
      *
     C                   dou       *in91 = *on or qhrqdt > lddt                 Do req hdr
     C                   read      hsl192b                                91
     C                   if        *in91 = *off and qhrqdt <= lddt              If not EOF
      *
      * Delete detail records
      *
     C     qhrqsn        setll     hsp193
     C                   dou       *in93 = *on                                  Do detail
     C     qhrqsn        reade     hsp193                                 93
     C                   if        *in93 = *off
     C                   write     qdrecpr
     C                   delete    qdrec
     C                   endif
     C                   enddo                                                  Do detail
      *
      * Delete header
     C                   write     qhrecpr
     C                   delete    qhrec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do req hdr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *  None
      *
      * Key fields
      *
     C     key01         klist
     C                   kfld                    svfmbo
     C                   kfld                    svrtno
      *
     C     key02         klist
     C                   kfld                    svfmbo
     C                   kfld                    svtkno
     C                   kfld                    svtrcd
      *
     C     key03         klist
     C                   kfld                    chchdt
     C                   kfld                    chcvno
     C                   kfld                    chchno
      *
     C                   endsr
      /EJECT
