      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      Hog Production
      * PROGRAM:     HP4440
      * TITLE:       Specify Group Report/Download Selections
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     12/30/05
      *
      * FUNCTION: Allows the user to make multiple selections and submit job.
      *
      *
      * NOTE: This is a pop-up window program. Please note that in Window programs
      *       the record format containing the window definition must be written first.
      *       So, we write the Error Message Subfile Control reocrd first followed by
      *       the Command line record format. This is opposite of the non-window programs.
      *
      ****************************************************************
      * MODIFICATIONS:
      ** *************************************************************
      * DATE      PROGRAMMER
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd4440   cf   e             workstn infds(iofeed)
      *
      *
     Fhsp002    if   e           k disk
      *    Functions
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Compile time array for SBMJOB used in QCMDEXC
      *---------------------------------------------------------------
     D cmd             s              1    dim(80) ctdata perrcd(80)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Parms
      *
     D xxhgcd          s                    like(d1hgcd)
     D xxhgsn          s              7  0
     D xxfsbo          s              5
     D xxbods          s             30
      *
     D xxjobq          s             10     inz('*JOBD     ')
     D xxnite          s              1     inz('N')
     D xxcopy          s              1  0
      *
      *
      *
      *  Parms for use with QCMDEXC.  'LENGTH' is the length of the
      *  command that will be issued with QCMDEXC.  QCMDEXC requires
      *  the field containing length to be defined as 15 with 5 decimal
      *  positions.  The field 'CMDSBM' will hold the values of the
      *  submit job command when passed as a parm on the call to
      *  QCMDEXC.
      *
     D length          s             15  5 inz(80)
     D cmdsbm          s             80
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      *
      * Local data area.
      *
     Dlda             uds                  dtaara(*lda)
      *
      * Note: Do not change positions on the first 3 fields; they match
      *       logic in the existing Work Withs and Reports.
      *
     D  ldfsbo                 1      5
     D  ldhgsn                 6     12  0
     D  ldcost                20     20
     D  ldbods                21     50
      *
     D  ldopt1                52     52
     D  ldopt2                53     53
     D  ldopt3                54     54
     D  ldopt4                55     55
     D  ldopt5                56     56
      *
     D  ldemail              100    149
      *
     D  ldoutu               401    410
     D  ldhold               411    411
     D  ldcopy               412    412  0
     D  ldoutq               413    422
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * MAINLINEE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /eject
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Clear any/all user selections.
      *
     C                   move      *blank        d1opt1
     C                   move      *blank        d1opt2
     C                   move      *blank        d1opt3
     C                   move      *blank        d1opt4
     C                   move      *blank        d1opt5
     C                   move      ldemail       d1email
      *
      *  Set routine to display screen
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Perform operator I/O for screen 1
      *--------------------------------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the error message subfile.
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT.
      *
     C                   write     hp4440ec
     C                   write     hp4440k1
     C                   exfmt     hp4440r1
      *
      * Clear messages
      *
     C                   exsr      $clmsg
      *
      *
      * Get user's input and set routine
      *
     C                   select
      *
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      routne = exit
      *
     C                   when      *in08 = *on                                  F8-submit
     C                   exsr      $edit1
     C                   if        error = 0
     C                   exsr      $proc1
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      *in17 = *on                                  F17-print options
     C                   eval      routne = scrn1
     C                   call      'HP451'
     C                   parm                    sdpgm
     C     ldcopy        parm      ldcopy        xxcopy
     C                   parm                    ldhold
     C                   parm                    ldoutq
     C                   parm                    xxnite
     C                   parm                    xxjobq
      *
     C                   when      *in20 = *on                                  F20-wrksplf
     C                   call      'QEZOUTPT'                                       API
     C                   eval      routne = scrn1
     C                   other
      *
     C                   exsr      $edit1
     C                   eval      routne = scrn1
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------------
      * Edit screen 1
      *----------------------------------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Download options require an E-Mail address
      *
     C                   select
     C                   when      (d1opt4 <> *blank or
     C                             d1opt5 <> *blank) and
     C                             d1email = *blank
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01228'
     C                   endif
      *
      * The user is requested to enter '1' for each report/download he wishes
      * to generate. BUT, we accept any non-blank character.
      *
      * However, if he has taken the Submit function, he must have picked something!
      * So, the 'have to enter something edit' is only performed if the has taken
      * F8=Submit.
     C                   when      *in08 = *on and
     C                             d1opt1 = *blank and
     C                             d1opt2 = *blank and
     C                             d1opt3 = *blank and
     C                             d1opt4 = *blank and
     C                             d1opt5 = *blank
     C                   seton                                        313233
     C                   seton                                        3435
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09231'
     C                   endif
      *
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------------
      * Write error messages
      *----------------------------------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Process user's request
      *---------------------------------------------------------------
      *
      * This subroutine submits the the multiple listing/downloads.
      *
     C     $proc1        begsr
      *
      * Move submission values into LDA
      *
     C                   move      d1opt1        ldopt1
     C                   move      d1opt2        ldopt2
     C                   move      d1opt3        ldopt3
     C                   move      d1opt4        ldopt4
     C                   move      d1opt5        ldopt5
     C                   move      d1email       ldemail
      *
      * Move the 80-character compile time array 'CMD' to an
      * 80-character field for passing as a parm with QCMDEXC.
      *
     C                   out       lda
     C                   movea     xxjobq        cmd(51)
     C                   movea     cmd           cmdsbm
     C                   call      'QCMDEXC'
     C                   parm                    cmdsbm
     C                   parm                    length
      *
      *
      * We will automatically take the user out of this function and
      * back to the Work With that called this program.
      *
     C                   movel     exit          routne
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C     d1hgcd        parm                    xxhgcd
     C     ldhgsn        parm                    xxhgsn
     C     ldfsbo        parm                    xxfsbo
     C     ldbods        parm                    xxbods
      *
      *
      * Initialize LDA fields
      *
     C                   move      *blank        ldhold
     C                   z-add     0             ldcopy
     C                   movel     ldoutu        ldoutq
      *
      * So that the user does not have to re-key the E-Mail address each
      * time he selects a Group from the Work With and calls this program,
      * we will default the E-Mail Address from the LDA into the screen
      * field.
      *
     C                   movel     ldemail       d1email
      *
      * Get this function's number of copies, etc.
      *
     C     sdpgm         chain     hsp002                             92
     C                   if        *in92 = *off
     C                   z-add     fncopy        ldcopy
     C                   movel     fnhold        ldhold
     C                   endif
      *
     C                   if        ldcopy = 0
     C                   z-add     1             ldcopy
     C                   endif
      *
     C                   if        ldhold = *blank
     C                   movel     no            ldhold
     C                   endif
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
      * This window logic keeps the screen in the calling program from being
      * cleared.
      *
     C                   write     assume
      *
     C                   endsr
      /eject
      *****************************************************************
      * COMPILE TIME ARRAY 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD table 'CMD' submits listing when F8 selected
SBMJOB CMD(CALL PGM(HP4440CL)) JOB(GRRPTDWL) JOBQ(__________)
