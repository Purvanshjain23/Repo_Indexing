// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PVKZXFR
// ?Date: 14.08.2025 Time: 03:52:24
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(RTV Data Libraries     RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1165753;
PARAMETER('DTALIB');
PARAMETER(LCL.Library_List_Code);
PARAMETER(NLL.@Library_List_Code);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.System Value Code is Data File Library
 IF DB1.System_Value_Code = 'DTALIB';

 // PAR.Library List Code = DB1.System Value Alpha
 PAR.Library_List_Code = DB1.System_Value_Alpha;

 // IF DB1.System Value Code is History File Library
 IF DB1.System_Value_Code = 'HISLIB';

 // PAR.@Library List Code = DB1.System Value Alpha
 PAR.@Library_List_Code = DB1.System_Value_Alpha;

 QUIT;

 ENDIF;

}


// LCL.Company Number = PAR.Company Number
LCL.Company_Number = PAR.Company_Number;

CASE;

// IF PAR.Company Number is High Value
IF PAR.Company_Number = 999;

// LCL.Company Number = CON.360
LCL.Company_Number = 360;

ENDIF;

EXECUTE FUNCTION(Rtv All Values        RT) TYPE(RTVOBJ) FILE(PDKMREP)           AC2174025;
PARAMETER(LCL.Company_Number);
PARAMETER('RENTALASN');
PARAMETER(NLL.Description);
PARAMETER(NLL.System_Value_Type);
PARAMETER(LCL.System_Value_Alpha);
PARAMETER(NLL.System_Value_Numeric);
PARAMETER(NLL.EDI_Status_1);
PARAMETER(NLL.EDI_Status_2);
PARAMETER(NLL.EDI_Status_3);
PARAMETER(NLL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Scenario 1: Job Failed-Build failure email.
CASE;

// IF PAR.USR Job Failed Or Load is Job Failed
IF PAR.USR_Job_Failed_Or_Load = 'J';

//?Format Email Subject Line.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Email Subject 2 USR = CONCAT(CON.Create 856 ASN for Rental,CON.Shipped Orders Job Failed,CON.
LCL.Email_Subject_2_USR = 'Create 856 ASN for Rental' + 'Shipped Orders Job Failed' (1);

//?If Not PROD Then Append 'TEST' to Email Subject Line.
CASE;

// IF LCL.Library List Code is Not PRKFLIB
IF LCL.Library_List_Code <> 'PRKFLIB';

// LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON.- TEST,CON.1)
LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '- TEST' (1);

ENDIF;

ENDIF;

//?Format Email Message.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Create 856 ASN for Rental,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Create 856 ASN for Rental' (0);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Pallet Shipped Orders Job,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Pallet Shipped Orders Job' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.failed, please contact,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'failed, please contact' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.the IT helpdesk.,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'the IT helpdesk.' (1);

//?Force New Line.
// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

ENDIF;

ENDIF;

//?Send failure email for both scenarios.
CASE;

// IF PAR.Company Number is High Value
IF PAR.Company_Number = 999;

CASE;

// IF PAR.Order Number is Greater then zero
IF PAR.Order_Number > *ZERO;

//?Move back values from parmeters. 500 = 250 + 250
CASE;

// IF PAR.Email Message 1 USR is Entered
IF PAR.Email_Message_1_USR <> *BLANKS;

// LCL.Email Message 2 USR = PAR.Email Message 1 USR
LCL.Email_Message_2_USR = PAR.Email_Message_1_USR;

CASE;

// IF PAR.Email Message 3 USR is Entered
IF PAR.Email_Message_3_USR <> *BLANKS;

// LCL.Email Message 2 USR = CONCAT(PAR.Email Message 1 USR,PAR.Email Message 3 USR,CON.*ZERO)
LCL.Email_Message_2_USR = PAR.Email_Message_1_USR + PAR.Email_Message_3_USR (0);

ENDIF;

ENDIF;

ENDIF;

// Call program Exc ESNDMAIL Generic2 CL.
CALL PROGRAM(Exc ESNDMAIL Generic2 CL) ('PUX2UPC');
PARAMETER(LCL.System_Value_Alpha);
PARAMETER(LCL.Email_Subject_2_USR);
PARAMETER(LCL.Email_Message_2_USR);

// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

RETURN;

ENDIF;

//?Scenario 2: Load Failed- Only build failure email. Do not send
CASE;

// IF PAR.USR Job Failed Or Load is Load Failed
IF PAR.USR_Job_Failed_Or_Load = 'L';

CASE;

// IF PAR.Company Number is greater than zero
IF PAR.Company_Number > *ZERO;

// AND PAR.Load ID is Entered
AND PAR.Load_ID <> *ZERO;

// AND PAR.Order Number is Greater then zero
AND PAR.Order_Number > *ZERO;

//?Populate company load order
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Company Number Alpha = CVTVAR(PAR.Company Number)
LCL.Company_Number_Alpha = CVTVAR(PAR.Company_Number);

// LCL.Order Number Alpha = CVTVAR(PAR.Order Number)
LCL.Order_Number_Alpha = CVTVAR(PAR.Order_Number);

// LCL.Load ID Alpha USR = CVTVAR(PAR.Load ID)
LCL.Load_ID_Alpha_USR = CVTVAR(PAR.Load_ID);

ENDIF;

//?Format Email Subject Line.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Email Subject 2 USR = CONCAT(CON.Create 856 ASN for Rental,CON.Shipped Orders Job Failed,CON.
LCL.Email_Subject_2_USR = 'Create 856 ASN for Rental' + 'Shipped Orders Job Failed' (1);

//?If Not PROD Then Append 'TEST' to Email Subject Line.
CASE;

// IF LCL.Library List Code is Not PRKFLIB
IF LCL.Library_List_Code <> 'PRKFLIB';

// LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON.- TEST,CON.1)
LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '- TEST' (1);

ENDIF;

ENDIF;

//?Build Email Header
CASE;

// IF PAR.Header Or Detail USR is Header
IF PAR.Header_Or_Detail_USR = 'H';

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.From: Seaboard Foods,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'From: Seaboard Foods' (0);

//?Force New Line.
// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.CHEP Rental pallet automa,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'CHEP Rental pallet automa' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.ted EDI Failed.,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'ted EDI Failed.' (0);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.An EDI 856 ASN can not be,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'An EDI 856 ASN can not be' (0);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.generated.,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'generated.' (1);

//?Force New Line.
// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Resolution: Supply Chain,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Resolution: Supply Chain' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.to work with IT to determ,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'to work with IT to determ' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.ine root cause & resoluti,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'ine root cause & resoluti' (0);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.on.,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'on.' (0);

//?Force New Line.Co/Load/Order.
// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

//?Force New Line.
// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Seaboard Co/Load/Order:,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Seaboard Co/Load/Order:' (1);

//?Force New Line.Co/Load/Order.
// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.-------------------------,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '-------------------------' (1);

//?Force New Line.Co/Load/Order.
// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Company Number Alpha,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Company_Number_Alpha (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON./,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '/' (*ZERO);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Load ID Alpha USR,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Load_ID_Alpha_USR (*ZERO);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON./,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '/' (*ZERO);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Order Number Alpha,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Order_Number_Alpha (*ZERO);

ENDIF;

//?Build detail for Company/Load/Order
CASE;

// IF PAR.Header Or Detail USR is Detail
IF PAR.Header_Or_Detail_USR = 'D';

CASE;

// IF PAR.Email Message 1 USR is Entered
IF PAR.Email_Message_1_USR <> *BLANKS;

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,PAR.Email Message 1 USR,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + PAR.Email_Message_1_USR (0);

ENDIF;

CASE;

// IF PAR.Email Message 3 USR is Entered
IF PAR.Email_Message_3_USR <> *BLANKS;

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,PAR.Email Message 3 USR,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + PAR.Email_Message_3_USR (0);

ENDIF;

//?Force New Line.Co/Load/Order.
// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Company Number Alpha,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Company_Number_Alpha (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON./,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '/' (*ZERO);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Load ID Alpha USR,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Load_ID_Alpha_USR (*ZERO);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON./,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '/' (*ZERO);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Order Number Alpha,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Order_Number_Alpha (*ZERO);

ENDIF;

// PAR.Email Message 1 USR = SUBSTRING(LCL.Email Message 2 USR,CON.1,CON.250)
PAR.Email_Message_1_USR = SUBSTRING(LCL.Email_Message_2_USR:1:250);

// PAR.Email Message 3 USR = SUBSTRING(LCL.Email Message 2 USR,CON.251,CON.250)
PAR.Email_Message_3_USR = SUBSTRING(LCL.Email_Message_2_USR:251:250);

ENDIF;

ENDIF;

