// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for CAQEPFR
// ?Date: 14.08.2025 Time: 12:03:07
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.Record Found USR = CND.Record Found
WRK.Record_Found_USR = 'Y';

//?USER: Record selection processing

CASE;

// IF PAR.Company Number is not equal to zero
IF PAR.Company_Number <> *ZERO;

//?Select only match
CASE;

// IF PAR.Company Number NE DB1.Company Number
IF PAR.Company_Number <> DB1.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

CASE;

// IF PAR.Record Status NE WRK.BLANK
IF PAR.Record_Status <> WRK.BLANK;

//?Select only match
CASE;

// IF PAR.Record Status NE DB1.Record Status
IF PAR.Record_Status <> DB1.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: On print of first page format

// 1PG.Company Number = PAR.Company Number
X1PG_Company_Number = PAR.Company_Number;

// 1PG.Ship To Customer = PAR.Ship To Customer
X1PG_Ship_To_Customer = PAR.Ship_To_Customer;

// 1PG.Record Status = PAR.Record Status
X1PG_Record_Status = PAR.Record_Status;

//?Company name
CASE;

// IF PAR.Company Number EQ WRK.ZERO
IF PAR.Company_Number = WRK.ZERO;

// 1PG.Name = CON.*BLANK
X1PG_Name = *BLANK;

//?Company name
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(X1PG_Ship_To_Customer);
PARAMETER(X1PG_Ship_To_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Record status description
CASE;

// IF PAR.Record Status EQ WRK.BLANK
IF PAR.Record_Status = WRK.BLANK;

// 1PG.Status Description = CON.*BLANK
X1PG_Status_Description = *BLANK;

//?Record status description
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Status Description = Condition name of PAR.Record Status
X1PG_Status_Description = RTVCND(PAR.Record_Status);

ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.Record Found USR = CND.Record Not Found
WRK.Record_Found_USR = 'N';

//?USER: Print required level headings

// SUPPRESSED PRINT Ship To Customer header format

// SUPPRESSED PRINT Company Number - 3 header format

//?USER: On print of detail format

EXECUTE FUNCTION(RTV Terms              RT) TYPE(RTVOBJ) FILE(CAAOREP)          AC1103643;
PARAMETER(DB1.Company_Number);
PARAMETER(CUR.Terms_Code);
PARAMETER(CUR.Terms_Description);
PARAMETER(WRK.Terms_Type);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV SR Desc,person     RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1270657;
PARAMETER(CUR.Sales_Route_Code);
PARAMETER(CUR.Sales_Route_Description);
PARAMETER(CUR.Salesperson_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Salesperson Name   RT) TYPE(RTVOBJ) FILE(CAAPREP)          AC1111501;
PARAMETER(CUR.Salesperson_Code);
PARAMETER(CUR.Salesperson_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(CUR.Warehouse_Code);
PARAMETER(CUR.Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


EXECUTE FUNCTION(RTV Cust Group Descrp. RT) TYPE(RTVOBJ) FILE(PDJXREP)          AC1330037;
PARAMETER(CUR.Customer_Group_Code);
PARAMETER(CUR.Customer_Group_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Cust Group Descrp. RT) TYPE(RTVOBJ) FILE(PDJXREP)          AC1330037;
PARAMETER(CUR.Customer_Group_Code_2);
PARAMETER(CUR.USR_Cust_Term_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// CUR.Status Description = Condition name of CUR.Record Status
CUR.Status_Description = RTVCND(CUR.Record_Status);

EXECUTE FUNCTION(RTV Name, Status       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1260598;
PARAMETER(CUR.Carrier_Code);
PARAMETER(CUR.Name);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Commod. Mkts Desc  RT) TYPE(RTVOBJ) FILE(OMFYREP)          AC1277934;
PARAMETER(CUR.Commodity_Market_Code);
PARAMETER(CUR.Commodity_Market_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Type Code Desc.    RT) TYPE(RTVOBJ) FILE(CAAJREP)          AC1249965;
PARAMETER(CUR.Type_Code);
PARAMETER(CUR.Description);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level totals

// SUPPRESSED PRINT Company Number - 3 totals format

// SUPPRESSED PRINT Ship To Customer totals format

