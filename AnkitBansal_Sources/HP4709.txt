      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP4709
      * TITLE:       Specify Options for Order Requests On Hold Report
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     07/21/04
      *
      *
      * FUNCTION: This Specify uses an edit record format to allow the user
      *           to specify options for generating the listing.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 03/23/05  LeAnne Fedor
      *           Added logic to allow the user to E-mail the report.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd4709   cf   e             workstn infds(iofeed)
      *
      *
     Fhsp002    if   e           k disk
      *    Functions
      *
      *
     Fhsp010    if   e           k disk
      *    Production type
      *
      *
     Fhsp011    if   e           k disk
      *    Production phase
      *
      *
     Fhsp016    if   e           k disk
      *    Manager
      *
      *
     Fhsp018    if   e           k disk
      *    Farm
      *
      *
     Fhsl192a   if   e           k disk
      *    Request header
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D all             c                   'A'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Compile time array for SBMJOB used in QCMDEXC
      *---------------------------------------------------------------
     D cmd             s              1    dim(80) ctdata perrcd(80)
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Parm fields
      *
     D xxver           s                    like(d1ver)
     D xxverds         s                    like(d1verds)
      *
     D xxynfl          s                    like(d1pbfl)
     D xxaist          s              1a
      *
     D xxmgcd          s                   like(d1cmgcd)
     D xxmgnm          s                   like(d1cmgnm)
      *
     D xxalphfscd      s              5a
     D xxfscd          s                   like(fsfscd)
     D xxfsnm          s                   like(fsfsnm)
      *
     D xxalphcell      s              2a
     D xxppcd          s                   like(d1ppcd)
     D xxppds          s                   like(d1ppds)
      *
     D xxwo            s                    like(d1wo)
     D xxrqscd         s                    like(qhrqscd)
      *
     D xxjobq          s             10     inz('*JOBD     ')
     D xxnite          s              1     inz('N')
     D xxcopy          s              1  0
      *
      *
      *  Parms for use with QCMDEXC.  'LENGTH' is the length of the
      *  command that will be issued with QCMDEXC.  QCMDEXC requires
      *  the field containing length to be defined as 15 with 5 decimal
      *  positions.  The field 'CMDSBM' will hold the values of the
      *  submit job command when passed as a parm on the call to
      *  QCMDEXC.
      *
     D length          s             15  5 inz(80)
     D cmdsbm          s             80
      *
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      * (Note: This LDA layout is also used in HP4718-W/W Order Requests
      *        and HP3708CL which generates this report nightly from the
      *        Job Scheduler. So, if you change it here, check these other
      *        programs.
      *
     Dlda             uds                  dtaara(*lda)
     D  ldver                  1      1
     D  ldemail                2      2
     D  ldpbfl                 3      3
      *
     D  ldppcd                 4      8
     D  ldcmgcd                9     13
     D  ldpmgcd               14     18
     D  ldcell                19     20  0
     D  ldfscd                21     25  0
     D  ldwo                  26     35
      *
     D  ldppds                36     65
     D  ldcmgnm               66     90
     D  ldpmgnm               91    115
     D  ldfsnm               116    140
     D  ld1stemail           141    141
      *
     D  ldoutu               401    410
     D  ldhold               411    411
     D  ldcopy               412    412  0
     D  ldoutq               413    422
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
     C
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the error
      * message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT.
      *
      *
     C                   write     hp4709k1
     C                   write     hp4709ec
     C                   exfmt     hp4709r1
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in20 = *on                                  F20-wrksplf
     C                   call      'QEZOUTPT'                                       API
     C                   eval      routne = scrn1
      *
     C                   when      *in17 = *on                                  F17-print options
     C                   eval      routne = scrn1
     C                   call      'HP451'
     C                   parm                    sdpgm
     C     ldcopy        parm      ldcopy        xxcopy
     C                   parm                    ldhold
     C     ldoutu        parm      ldoutu        ldoutq
     C                   parm                    xxnite
     C                   parm                    xxjobq
     C                   other
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit screen 1 input fields
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate required fields:
      *   Version
      *   E-mail flag
      *
     C                   exsr      $ver
     C                   exsr      $email
      *
      * Validate optional fields:
      *   Production phase
      *   Cell manager
      *   Production manager
      *   Cell
      *   Farm site
      *   Work order
      *
     C                   exsr      $ppcd
     C                   exsr      $cmgcd
     C                   exsr      $pmgcd
     C                   exsr      $cell
     C                   exsr      $fscd
     C                   exsr      $wo
      *
      * Validate:
      *   Page break on manager
     C                   exsr      $pbfl
      *
      * If there are no errors, execute the subroutine to submit the
      * report.
     C                   if        error = 0 and *in08 = *on                    If submit
     C                   exsr      $proc1
     C                   endif                                                  If submit
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate Version
      *----------------------------------------------------------------
      *
     C     $ver          begsr
      *
     C                   move      *blank        d1verds
      *
     C                   select
     C                   when      d1ver = '1'
     C                   eval      d1verds = 'Sort/Print by Cell Manager'
      *
     C                   when      d1ver = '2'
     C                   eval      d1verds = 'Sort/Print by Production Manager'
      *
     C                   when      d1ver = '3'
     C                   eval      d1verds = 'Sort/Print by Work Order'
     C                   other
      *
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09043'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Validate E-mail flag
      *-------------------------------------------------------------------
      *
      * Validations:
      *   1) e-mail flag must be NO for Version 3
      *   2) Otherwsie, value must be Yes/No
      *
     C     $email        begsr
      *
     C                   select
     C                   when      d1ver = '3' and d1email <> no
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09225'
     C                   endif
      *
     C                   when      d1email <> yes and d1email <> no
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09106'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Validate Page Break on Cell flag
      *-------------------------------------------------------------------
      *
      * Validations:
      *   1) Page Break flag must be NO for Version 3
      *   2) Otherwsie, value must be Yes/No
      *   (Note: If the E-mail Flag is YES, we will override Page Break to YES
      *          when we submit the job.)
      *
     C     $pbfl         begsr
      *
     C                   select
     C                   when      d1ver = '3' and d1pbfl <> no
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09225'
     C                   endif
      *
     C                   when      d1pbfl <> yes and d1pbfl <> no
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09106'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate production phase
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) If entered, must be a valid Production Phase
      *
     C     $ppcd         begsr
      *
     C                   move      *blank        d1ppds
      *
     C                   select
     C                   when      d1ppcd <> *blank
     C     d1ppcd        chain     hsp011                             92
     C                   if        *in92 = *off                                 If good phase
     C                   move      ppppds        d1ppds
     C                   else
     C                   seton                                        35
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00170'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ppcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good phase
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate cell manager
      *---------------------------------------------------------------
      *
      * Validations:
      *  1) If entered, must be a valid Manager
      *
     C     $cmgcd        begsr
      *
     C                   move      *blank        d1cmgnm
      *
     C                   select
     C                   when      d1cmgcd = *blank
     C                   other
      *
     C     d1cmgcd       chain     hsp016                             92
     C                   if        *in92 = *off                                 If good    mgr
     C                   move      mgmgnm        d1cmgnm
     C                   else
      *
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00151'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1cmgcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If good
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate production manager
      *---------------------------------------------------------------
      *
      * Validations:
      *  1) If entered, must be a valid Manager
      *
     C     $pmgcd        begsr
      *
     C                   move      *blank        d1pmgnm
      *
     C                   select
     C                   when      d1pmgcd = *blank
     C                   other
      *
     C     d1pmgcd       chain     hsp016                             92
     C                   if        *in92 = *off                                 If good    mgr
     C                   move      mgmgnm        d1pmgnm
     C                   else
      *
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00151'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1pmgcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If good    mgr
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate cell
      *---------------------------------------------------------------
      *
     C     $cell         begsr
      *
     C                   if        d1cell < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate farm site
      *---------------------------------------------------------------
      *
     C     $fscd         begsr
      *
     C                   move      *blank        d1fsnm
      *
     C                   select
     C                   when      d1fscd = 0
      *
     C                   when      d1fscd < 0
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   seton                                        38
     C                   other
      *
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move(p)   fsfsnm        d1fsnm
      *
      * Check for production phase match
      *
     C                   if        d1ppcd <> *blank and
     C                             d1ppcd <> fsppcd
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00491'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fsppcd        mgw(6)
     C                   movea     d1ppcd        mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
      * Check for Cell Manager match
      *
     C                   if        d1cmgcd <> *blank and
     C                             d1cmgcd <> fscmgcd
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00499'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fscmgcd       mgw(6)
     C                   movea     d1cmgcd       mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
      * Check for Production Manager match
      *
     C                   if        d1pmgcd <> *blank and
     C                             d1pmgcd <> fspmgcd
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00494'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fspmgcd       mgw(6)
     C                   movea     d1pmgcd       mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
      * Check for Cell match
      *
     C                   if        d1cell <> 0 and                              If cell mismatch
     C                             fscell <> d1cell
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00705'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   move      fscell        xxalphcell
     C                   movea     xxalphcell    mgw(6)
     C                   move      d1cell        xxalphcell
     C                   movea     xxalphcell    mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If cell mismatch
      *
     C                   endif                                                  If bad farm
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate Work Order number
      *----------------------------------------------------------------
      *
     C     $wo           begsr
      *
     C                   if        d1wo <> *blank                               If entered
      *
      * Does Work Order exist
      *
     C     d1wo          chain     hsl192a                            92
      *
     C                   select
     C                   when      *in92 = *on
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS04796'     mgid(e)
     C                   endif
      *
      * Must be on HOLD
     C                   when      qhrqscd <> 'H'
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS04797'     mgid(e)
     C                   endif
      *
      * Farm site match
     C                   when      d1fscd <> 0 and
     C                             qhfscd <> d1fscd
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS04798'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endif                                                  If entered
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * F4 prompt on screen 1
      *----------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Version
     C                   select
     C                   when      fld = 'D1VER'
     C                   call      'HP5058'
     C                   parm      *blank        xxver
     C                   parm      *blank        xxverds
     C                   seton                                        53
     C                   if        xxver <> *blank
     C                   move      xxver         d1ver
     C                   move      xxverds       d1verds
     C                   endif
      *
      * E-mail flag
     C                   when      fld = 'D1EMAIL'
     C                   call      'HP522'
     C                   parm                    xxynfl
     C                   seton                                        50
     C                   if        xxynfl <> *blank
     C                   movel     xxynfl        d1email
     C                   endif
      *
      * Page break
     C                   when      fld = 'D1PBFL'
     C                   call      'HP522'
     C                   parm                    xxynfl
     C                   seton                                        54
     C                   if        xxynfl <> *blank
     C                   movel     xxynfl        d1pbfl
     C                   endif
      *
      * Production phase
      *
     C                   when      fld = 'D1PPCD'
     C                   call      'HP507'
     C                   parm      *blank        xxppcd
     C                   parm      *blank        xxppds
     C                   seton                                        55
     C                   if        xxppcd <> *blank
     C                   movel     xxppcd        d1ppcd
     C                   movel     xxppds        d1ppds
     C                   endif
      *
      * Cell manager
     C                   when      fld = 'D1CMGCD'
     C                   call      'HP508'
     C                   parm      *blank        xxmgcd
     C                   parm      *blank        xxmgnm
     C                   seton                                        56
     C                   if        xxmgcd <> *blank
     C                   movel     xxmgcd        d1cmgcd
     C                   movel     xxmgnm        d1cmgnm
     C                   endif
      *
      * Production manager
      *
     C                   when      fld = 'D1PMGCD'
     C                   call      'HP508'
     C                   parm      *blank        xxmgcd
     C                   parm      *blank        xxmgnm
     C                   seton                                        51
     C                   if        xxmgcd <> *blank
     C                   movel     xxmgcd        d1pmgcd
     C                   movel     xxmgnm        d1pmgnm
     C                   endif
      *
      * Farm site
     C                   when      fld = 'D1FSCD'
     C                   call      'HP5040'
     C                   parm      *blank        xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        58
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1fscd
     C                   movel     xxfsnm        d1fsnm
     C                   endif
      *
      * Work order
     C                   when      fld = 'D1WO'
     C                   call      'HP5046'
     C                   parm      'H'           xxrqscd
     C                   parm      *blank        xxwo
     C                   seton                                        59
     C                   if        xxwo <> *blank
     C                   movel     xxwo          d1wo
     C                   endif
     C                   other
      *
      * F4 not valid for this field, so issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09011'
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Process user's request
      *---------------------------------------------------------------
      *
      * This subroutine is only executed if the user submits the listing
      *
     C     $proc1        begsr
      *
      * Move submission values into LDA
      *
     C                   move      d1ver         ldver
     C                   move      d1email       ldemail
      *
      * If e-mailing, always "Page Break"
      *
     C                   if        d1email = yes
     C                   move      yes           ldpbfl
     C                   else
     C                   move      d1pbfl        ldpbfl
     C                   endif
      *
     C                   move      d1wo          ldwo
      *
     C                   move      d1ppcd        ldppcd
     C                   move      d1ppds        ldppds
      *
     C                   move      d1cmgcd       ldcmgcd
     C                   move      d1cmgnm       ldcmgnm
      *
     C                   move      d1pmgcd       ldpmgcd
     C                   move      d1pmgnm       ldpmgnm
      *
     C                   z-add     d1cell        ldcell
     C                   z-add     d1fscd        ldfscd
     C                   move      d1fsnm        ldfsnm
      *
      *
      * Move the 80-character compile time array 'CMD' to an
      * 80-character field for passing as a parm with QCMDEXC.
      *
     C                   out       lda
     C                   movea     xxjobq        cmd(51)
     C                   movea     cmd           cmdsbm
     C                   call      'QCMDEXC'
     C                   parm                    cmdsbm
     C                   parm                    length
      *
      * Issue the standard request submission message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09003'
     C                   endif
      *
      * To burst the report to e-mail to managers, we have to build the managers
      * into the Esend "rules" file. We only need to build the "manager rules" the
      * first time the user submits a report as 'E-mail'. So, we initialize the
      * LDA value of "First E-mail" to yes in the initialization subroutine. Then,
      * once the users "e-mail", we set the LDA flag field to NO so that the
      * "manager rules" will not be built again as long as the user is on this
      * screen.
     C                   if        ldemail = yes
     C                   move      no            ld1stemail
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *   none
      *
      * Key lists
      *    None
      *
      * Initialize LDA fields
      *
     C                   move      yes           ld1stemail
     C                   move      *blank        ldver
     C                   move      *blank        ldemail
     C                   move      *blank        ldpbfl
     C                   z-add     0             ldfscd
     C                   z-add     0             ldcell
     C                   move      *blank        ldwo
     C                   move      *blank        ldpmgcd
     C                   move      *blank        ldcmgcd
     C                   move      *blank        ldppcd
      *
     C                   move      *blank        ldfsnm
     C                   move      *blank        ldpmgnm
     C                   move      *blank        ldcmgnm
     C                   move      *blank        ldppds
      *
     C                   move      *blank        ldhold
     C                   z-add     0             ldcopy
     C                   movel     ldoutu        ldoutq
      *
      *
      * Get this functions' number of copies, etc.
      *
     C     sdpgm         chain     hsp002                             92
     C                   if        *in92 = *off
     C                   z-add     fncopy        ldcopy
     C                   movel     fnhold        ldhold
     C                   endif
      *
     C                   if        ldcopy = 0
     C                   z-add     1             ldcopy
     C                   endif
      *
     C                   if        ldhold = *blank
     C                   movel     no            ldhold
     C                   endif
      *
      * Set some defaults
      *
     C                   move      '1'           d1ver
     C                   move      no            d1pbfl
     C                   move      no            d1email
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD table 'CMD' submits listing when F8 selected
SBMJOB CMD(CALL PGM(HP4709CL)) JOB(ONHOLDRQ) JOBQ(__________)
