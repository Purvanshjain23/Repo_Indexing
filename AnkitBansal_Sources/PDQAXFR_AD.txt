// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDQAXFR
// ?Date: 14.08.2025 Time: 03:29:26
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Rtv Active Status     RT) TYPE(RTVOBJ) FILE(PPBUREP)           AC1740339;
PARAMETER(PAR.Company_Number);
PARAMETER('BOXPRD');
PARAMETER(LCL.PFS_AccuSort_Active);
PARAMETER(LCL.PFS_Carlisle_Active);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Accusort : Create product download
CASE;

// IF LCL.PFS AccuSort Active is Yes
IF LCL.PFS_AccuSort_Active = 'Y';

// Call program Zzz Lock/Unlock Prodct XF.
CALL PROGRAM(Zzz Lock/Unlock Prodct XF) ('PDH4XFR');
PARAMETER('L');

EXECUTE FUNCTION(Upd AS Product/Box ID  RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1321888;
PARAMETER(PAR.Company_Number);
{
 //?USER: Process Data record

 //?PK0318 - Add WP to the selection    5/10/01
 //?If item is FG/WP then add to AS Product, else if box add to AS Box ID
 CASE;

 // IF DB1.Item Type Code is FG/WP
 IF DB1.Item_Type_Code = 'FG'/'WP';

 // PAR.AS Box ID = CON.*BLANK
 PAR.AS_Box_ID = *BLANK;

 EXECUTE FUNCTION(Rtv AS Box ID for Item RT) TYPE(RTVOBJ) FILE(PDIOREP)          AC1321893;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(PAR.AS_Box_ID);
 {
  //?USER: Initialize routine

  // WRK.Calc 2 = CON.*ZERO
  WRK.Calc_2 = *ZERO;

  // PAR.AS Box ID = CVTVAR(WRK.Calc 2)
  PAR.AS_Box_ID = CVTVAR(WRK.Calc_2);

  //?USER: Process Data record

  EXECUTE FUNCTION(Rtv Item Type/Pack Cd  RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1302162;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Component_Item_Code);
  PARAMETER(WRK.Item_Type_Code);
  PARAMETER(PAR.Package_Type_Code);
  PARAMETER(WRK.Pallet_Tare_Weight);
  PARAMETER(WRK.Misc_Tare_Weight);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF PAR.Package Type Code is Box
  IF PAR.Package_Type_Code = 'B';

  // WRK.Calc 2 = DB1.Component Item Code * CON.1 *
  WRK.Calc_2 = DB1.Component_Item_Code * 1;

  // PAR.AS Box ID = CVTVAR(WRK.Calc 2)
  PAR.AS_Box_ID = CVTVAR(WRK.Calc_2);

  QUIT;

  ENDIF;

 }

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 // WRK.Alpha Zeros = CON.00
 WRK.Alpha_Zeros_2 = 00;

 //?If Box ID is Blank or '00' then disallow item to Accusort
 CASE;

 // IF PAR.AS Box ID EQ WRK.BLANK
 IF PAR.AS_Box_ID = WRK.BLANK;

 // OR PAR.AS Box ID EQ WRK.Alpha Zeros
 OR PAR.AS_Box_ID = WRK.Alpha_Zeros_2;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 // WRK.Calc 5 = CON.1 * DB1.Item Code *
 WRK.Calc_5 = 1 * DB1.Item_Code;

 // WRK.AS Product Code = CVTVAR(WRK.Calc 5)
 WRK.AS_Product_Code = CVTVAR(WRK.Calc_5);

 EXECUTE FUNCTION(Val AS Product         RT) TYPE(RTVOBJ) FILE(PDJPREP)          AC1321945;
 PARAMETER(WRK.AS_Product_Code);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  // PGM.*Return code = CND.*Record already exists
  PGM.*Return_code = 'Y2U0003';

 }

 //?Multiply fields for an implied decimal of 12345.6
 //?If non-catchweight item calculate nominal weight, else zero
 CASE;

 // IF DB1.Catch Weight Status is no
 IF DB1.Catch_Weight_Status = 'N';

 // WRK.Calc 6 = DB1.Unit Weight * CON.10 *Rounded
 WRK.Calc_6 = DB1.Unit_Weight * 10 'H';

 // PAR.AS Nominal Weight = CVTVAR(WRK.Calc 6)
 PAR.AS_Nominal_Weight = CVTVAR(WRK.Calc_6);

 //?If non-catchweight item calculate nominal weight, else zero
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Calc 6 = CON.*ZERO
 WRK.Calc_6 = *ZERO;

 // PAR.AS Nominal Weight = CVTVAR(WRK.Calc 6)
 PAR.AS_Nominal_Weight = CVTVAR(WRK.Calc_6);

 ENDIF;

 // WRK.Calc 6 = DB1.Maximum Weight Per Case * CON.10 *Rounded
 WRK.Calc_6 = DB1.Maximum_Weight_Per_Case * 10 'H';

 // PAR.AS Hi Weight Limit = CVTVAR(WRK.Calc 6)
 PAR.AS_Hi_Weight_Limit = CVTVAR(WRK.Calc_6);

 // WRK.Calc 6 = DB1.Minimum Weight Per Case * CON.10 *Rounded
 WRK.Calc_6 = DB1.Minimum_Weight_Per_Case * 10 'H';

 // PAR.AS Lo Weight Limit = CVTVAR(WRK.Calc 6)
 PAR.AS_Lo_Weight_Limit = CVTVAR(WRK.Calc_6);

 // WRK.Calc 5 = DB1.Misc Tare Weight * CON.100 *
 WRK.Calc_5 = DB1.Misc_Tare_Weight * 100;

 // PAR.AS Misc Tare Weight = CVTVAR(WRK.Calc 5)
 PAR.AS_Misc_Tare_Weight = CVTVAR(WRK.Calc_5);

 // WRK.Calc 3 = CON.1 * DB1.Number Cases On A Pallet *
 WRK.Calc_3 = 1 * DB1.Number_Cases_On_A_Pallet;

 // WRK.AS Pallet Quantity = CVTVAR(WRK.Calc 3)
 WRK.AS_Pallet_Quantity = CVTVAR(WRK.Calc_3);

 // WRK.Calc 2 = CON.1 * DB1.Chilling Time *
 WRK.Calc_2 = 1 * DB1.Fresh_Chilling_Time;

 // PAR.AS Date Code = CVTVAR(WRK.Calc 2)
 PAR.AS_Date_Code = CVTVAR(WRK.Calc_2);

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?Add or change AS Product
 CASE;

 // IF PGM.*Return code is *Record does not exist
 IF PGM.*Return_code = 'Y2U0005';

 EXECUTE FUNCTION(Crt AS Product         CR) TYPE(CRTOBJ) FILE(PDJPREP)          AC1321930;
 PARAMETER(WRK.AS_Product_Code);
 PARAMETER(DB1.Item_Label_Line_1);
 PARAMETER(DB1.Item_Label_Line_2);
 PARAMETER(DB1.Item_Label_Line_3);
 PARAMETER(0736490);
 PARAMETER(PAR.AS_Nominal_Weight);
 PARAMETER(PAR.AS_Hi_Weight_Limit);
 PARAMETER(PAR.AS_Lo_Weight_Limit);
 PARAMETER(PAR.AS_Box_ID);
 PARAMETER(PAR.AS_Misc_Tare_Weight);
 PARAMETER(WRK.AS_Pallet_Quantity);
 PARAMETER(DB1.Default_Warehouse);
 PARAMETER(PAR.AS_Date_Code);
 PARAMETER('A');
 PARAMETER(*BLANK);
 //?Add or change AS Product
 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Chg AS Product         CH) TYPE(CHGOBJ) FILE(PDJPREP)          AC1321933;
 PARAMETER(WRK.AS_Product_Code);
 PARAMETER(DB1.Item_Label_Line_1);
 PARAMETER(DB1.Item_Label_Line_2);
 PARAMETER(DB1.Item_Label_Line_3);
 PARAMETER(0736490);
 PARAMETER(PAR.AS_Nominal_Weight);
 PARAMETER(PAR.AS_Hi_Weight_Limit);
 PARAMETER(PAR.AS_Lo_Weight_Limit);
 PARAMETER(PAR.AS_Box_ID);
 PARAMETER(PAR.AS_Misc_Tare_Weight);
 PARAMETER(WRK.AS_Pallet_Quantity);
 PARAMETER(DB1.Default_Warehouse);
 PARAMETER(PAR.AS_Date_Code);
 PARAMETER('A');
 PARAMETER(*BLANK);
 ENDIF;

 ENDIF;

 //?If item is FG/WP then add to AS Product, else if box add to AS Box ID
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Packaging & Supplies
 CASE;

 // IF DB1.Item Type Code is Packaging and Supplies
 IF DB1.Item_Type_Code = 'PS';

 //?Multiply fields for an implied decimal of 12345.6
 //?PKP 11/21/95
 // WRK.Calc 5 = DB1.Unit Weight * CON.100 *
 WRK.Calc_5 = DB1.Unit_Weight * 100;

 // PAR.AS Misc Tare Weight = WRK.Calc 5
 PAR.AS_Misc_Tare_Weight = WRK.Calc_5;

 //?If item is a box, then add to AS Box ID
 CASE;

 // IF DB1.Package Type Code is Box
 IF DB1.Package_Type_Code = 'B';

 // WRK.Calc 2 = CON.1 * DB1.Item Code *
 WRK.Calc_2 = 1 * DB1.Item_Code;

 // WRK.AS Box ID = CVTVAR(WRK.Calc 2)
 WRK.AS_Box_ID = CVTVAR(WRK.Calc_2);

 EXECUTE FUNCTION(Val AS Box ID          RT) TYPE(RTVOBJ) FILE(PDJNREP)          AC1321997;
 PARAMETER(WRK.AS_Box_ID);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  // PGM.*Return code = CND.*Record already exists
  PGM.*Return_code = 'Y2U0003';

 }

 CASE;

 // IF PGM.*Return code is *Record does not exist
 IF PGM.*Return_code = 'Y2U0005';

 EXECUTE FUNCTION(Crt AS Box ID          CR) TYPE(CRTOBJ) FILE(PDJNREP)          AC1321986;
 PARAMETER(WRK.AS_Box_ID);
 PARAMETER(DB1.Description_Line_One);
 PARAMETER(PAR.AS_Misc_Tare_Weight);
 PARAMETER('A');
 PARAMETER(*BLANK);
 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Chg AS Box ID          CH) TYPE(CHGOBJ) FILE(PDJNREP)          AC1321987;
 PARAMETER(WRK.AS_Box_ID);
 PARAMETER(DB1.Description_Line_One);
 PARAMETER(PAR.AS_Misc_Tare_Weight);
 PARAMETER('A');
 PARAMETER(*BLANK);
 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

}


// Call program Zzz Lock/Unlock Prodct XF.
CALL PROGRAM(Zzz Lock/Unlock Prodct XF) ('PDH4XFR');
PARAMETER('U');

ENDIF;

