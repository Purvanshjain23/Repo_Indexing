// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDYUXFR
// ?Date: 14.08.2025 Time: 03:36:33
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(RTV Calendar Array     RT) TYPE(RTVOBJ) ARRAY(Calendar_Summary)AC1577068;
{
 //?USER: Processing if Data record not found

 // Execute command - 'test ton'
 EXECUTE COMMAND(USR2593);

 QUIT;

 //?USER: Process Data record

 EXECUTE FUNCTION(VAL Calendar Summary   RT) TYPE(RTVOBJ) FILE(CAATREP)          AC1577183;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Accounting_Year_Code);
 PARAMETER(PAR.Accounting_Period_Code);
 PARAMETER(PAR.OM_Week);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  QUIT;

  //?USER: Process Data record

  // PGM.*Return code = CND.*Record already exists
  PGM.*Return_code = 'Y2U0003';

  QUIT;

 }

 CASE;

 // IF PGM.*Return code is *Record does not exist
 IF PGM.*Return_code = 'Y2U0005';

 QUIT;

 ENDIF;

 EXECUTE FUNCTION(DLT Calendar Summary   DL) TYPE(DLTOBJ) FILE(CAATREP)          AC1103172;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Accounting_Year_Code);
 PARAMETER(PAR.Accounting_Period_Code);
 PARAMETER(PAR.OM_Week);
 EXECUTE FUNCTION(CRT Calendar Summary   CR) TYPE(CRTOBJ) FILE(CAATREP)          AC1103170;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Accounting_Year_Code);
 PARAMETER(PAR.Accounting_Period_CodeUSR);
 PARAMETER(PAR.OM_Week_USR);
 PARAMETER(PAR.Period_Close_Status);
 PARAMETER(PAR.Period_Beginning_Date);
 PARAMETER(PAR.Period_Ending_Date);
 PARAMETER(PAR.EDI_Status_1);
 PARAMETER(PAR.EDI_Status_2);
 PARAMETER(PAR.EDI_Status_3);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 EXECUTE FUNCTION(UPD Pd/Week            RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1576566;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Period_Ending_Date);
 PARAMETER(PAR.Accounting_Year_Code);
 PARAMETER(PAR.Period_Beginning_Date);
 PARAMETER(PAR.Accounting_Period_CodeUSR);
 PARAMETER(PAR.OM_Week_USR);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.Post to G/L Date GE PAR.Period Beginning Date
  IF DB1.Post_to_G_L_Date >= PAR.Period_Beginning_Date;

  // AND DB1.Post to G/L Date LE PAR.Post to G/L Date
  AND DB1.Post_to_G_L_Date <= PAR.Post_to_G_L_Date;

  EXECUTE FUNCTION(UPD Pd/Week            CH) TYPE(CHGOBJ) FILE(CAAFREP)          AC1576569;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Post_to_G_L_Date);
  PARAMETER(DB1.Accounting_Year_Code);
  PARAMETER(PAR.Accounting_Period_Code);
  PARAMETER(PAR.OM_Week);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  QUIT;

  ENDIF;

 }

}


