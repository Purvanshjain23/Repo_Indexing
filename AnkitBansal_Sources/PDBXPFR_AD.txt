// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDBXPFR
// ?Date: 14.08.2025 Time: 12:03:37
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?DLY029 RMC 05/31/07 Print new fields, took off compatible accrl prtobjs
EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

// WRK.Print (Yes/No) USR = CND.Yes
WRK.Print_Yes_No_USR = 'Y';

//?USER: Record selection processing

//?Select by Auto Accural Flag
CASE;

// IF PAR.Automatic Accrual (Y/N) is Valid Entries
IF PAR.Automatic_Accrual_Y_N = 'N'/'Y';

CASE;

// IF PAR.Automatic Accrual (Y/N) NE DB1.Automatic Accrual (Y/N)
IF PAR.Automatic_Accrual_Y_N <> DB1.Automatic_Accrual_Y_N;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Select by Add-on/Allowance flag
CASE;

// IF PAR.Add-on/Allowance is Valid Entries
IF PAR.Add_on_Allowance = 'A'/'S';

CASE;

// IF PAR.Add-on/Allowance NE DB1.Add-on/Allowance
IF PAR.Add_on_Allowance <> DB1.Add_on_Allowance;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Select by Status
CASE;

// IF PAR.Record Status is Valid Entries
IF PAR.Record_Status = 'A'/'D'/'I';

CASE;

// IF PAR.Record Status NE DB1.Record Status
IF PAR.Record_Status <> DB1.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process top of page

// TOP.Automatic Accrual (Y/N) = PAR.Automatic Accrual (Y/N)
TOP_Automatic_Accrual_Y_N = PAR.Automatic_Accrual_Y_N;

// TOP.Add-on/Allowance = PAR.Add-on/Allowance
TOP_Add_on_Allowance = PAR.Add_on_Allowance;

// TOP.USR Desc. 10 = Condition name of TOP.Add-on/Allowance
TOP_USR_Desc_10 = RTVCND(TOP_Add_on_Allowance);

// TOP.Record Status = PAR.Record Status
TOP_Record_Status = PAR.Record_Status;

// TOP.Status Description = Condition name of TOP.Record Status
TOP_Status_Description = RTVCND(TOP_Record_Status);

//?USER: On print of first page format

//?** Moved the following to TOP processing
//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Accrual Type header format

// SUPPRESSED PRINT Accrual Code header format

//?USER: On print of detail format

// WRK.Print (Yes/No) USR = CND.No
WRK.Print_Yes_No_USR = 'N';

//?USER: Print required level totals

// SUPPRESSED PRINT Accrual Code totals format

// SUPPRESSED PRINT Accrual Type totals format

