      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HPS Hog Production
      * PROGRAM:     HP3023 - Copy Nur/Fin Targets
      * PROGRAMMER:  Sharon Zurn
      * CREATED:     12/27/06
      *
      * FUNCTION:    This program allows users to copy targets.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE       PROGRAMMER
      *
      * 09/19/07  LeAnne Ramsey
      *           Clean up code.
      *
      * 12/10/08  LeAnne Ramsey
      *           Added GF "GDU" targets to the Nur/Fin Yearly Targets file.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp123    if   e           k disk
      *  Nur/Fin yearly targets  (records selected with open query)
      *
      *
     Fhsl123a   uf a e           k disk    rename(nyrec:nyreca) prefix(p1)
      *  Nur/Fin yearly targets
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
      *
     D  ldfcdyr                1      4  0
     D  ldfobcell              5      6  0
     D  ldfobpod               7      9  0
      *
     D  ldtcdyr               10     13  0
     D  ldtobcell             14     15  0
     D  ldtobpod              16     18  0
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Delete all existing target records for the TO side of the copy.
      *
     C                   exsr      $dlt123
      *
      * Process all records for the FROM side (selected by the Open Query).
      * Write a TO record for each record record.
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsp123                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   z-add     nycdqr        p1nycdqr
     C                   z-add     nyntlspr      p1nyntlspr
     C                   z-add     nygtlspr      p1nygtlspr
     C                   z-add     nyggtlspr     p1nyggtlspr
     C                   z-add     nygcupr       p1nygcupr
     C                   z-add     nyggcupr      p1nyggcupr
      *
     C                   z-add     ldtcdyr       p1nycdyr
      *
     C                   if        ldtobcell <> 0
     C                   z-add     ldtobcell     p1nyobcell
     C                   else
     C                   z-add     nyobcell      p1nyobcell
     C                   endif
      *
     C                   if        ldtobpod <> 0
     C                   z-add     ldtobpod      p1nyobpod
     C                   else
     C                   z-add     nyobpod       p1nyobpod
     C                   endif
      *
     C                   write     nyreca
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
     C                   seton                                        lr
      /eject
      *------------------------------------------------------------------------------------
      * Delete any/all existing target records for TO side of the copy
      *------------------------------------------------------------------------------------
      *
     C     $dlt123       begsr
      *
      * You will delete based on which values the user entered for the TO side:
      *   1) year/cell/pod
      *   2) year/cell
      *   3) year
     C                   select
     C                   when      ldtobcell <> 0 and ldtobpod <> 0
     C     key01         setll     hsl123a
      *
     C                   when      ldtobcell <> 0
     C     key02         setll     hsl123a
     C                   other
      *
     C     ldtcdyr       setll     hsl123a
     C                   endsl
      *
      *
     C                   dou       *in91 = *on                                  Do loop
      *
     C                   select
     C                   when      ldtobcell <> 0 and ldtobpod <> 0
     C     key01         reade     hsl123a                                91
      *
     C                   when      ldtobcell <> 0
     C     key02         reade     hsl123a                                91
     C                   other
      *
     C     ldtcdyr       reade     hsl123a                                91
     C                   endsl
      *
     C                   if        *in91 = *off
     C                   delete    nyreca
     C                   endif
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    ldtcdyr
     C                   kfld                    ldtobcell
     C                   kfld                    ldtobpod
      *
     C     key02         klist
     C                   kfld                    ldtcdyr
     C                   kfld                    ldtobcell
      *
     C                   endsr
      /eject
