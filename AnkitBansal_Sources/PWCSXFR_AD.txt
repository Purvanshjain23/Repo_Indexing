// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWCSXFR
// ?Date: 14.08.2025 Time: 02:55:57
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification history
DO;

//? 7/02/2021 JBB WHD80995 - Increase rollover values for BO#
//?                          Recompile only after changing the
//?                          RTVOBJ-Rtv Crt Next BOH      RT to
//?                          rollover when the BO# reaches 999999,
//?                          instead of 99999.
//?6/07/2017 JBB E9904 - Push Seaboard Triumph Payments to Triumph Foods
DO;

//?Function created.  This program reads the Triumph Foods records
//?copied from production, and checks if the Production Location on
//?the Hog Voucher Detail record exists in the Producer Location
//?From/TO file.  If it does exist, the Source Code is change to
//?Triumph Owned ("TO"), otherwise Hog Voucher Detail record is
//?deleted.
ENDDO;

//?6/07/2017 JBB E9904 - Push Seaboard Triumph Payments to Triumph Foods
DO;

//?Function created.  This program reads the Triumph Foods records
//?copied from production, and checks if the Production Location on
//?the Hog Voucher Detail record exists in the Producer Location
//?From/TO file.  If it does exist, the Source Code is change to
//?Triumph Owned ("TO"), otherwise Hog Voucher Detail record is
//?deleted.
ENDDO;

//?Modification history
DO;

//?6/07/2017 JBB E9904 - Push Seaboard Triumph Payments to Triumph Foods
DO;

//?Function created.  This program reads the Triumph Foods records
//?copied from production, and checks if the Production Location on
//?the Hog Voucher Detail record exists in the Producer Location
//?From/TO file.  If it does exist, the Source Code is change to
//?Triumph Owned ("TO"), otherwise Hog Voucher Detail record is
//?deleted.
ENDDO;

//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
ENDDO;

ENDDO;

EXECUTE FUNCTION(Upd Rcds Based on XREF RT) TYPE(RTVOBJ) FILE(PKBLCPP)          AB1335432;
PARAMETER(PAR.BOH_Company_Number);
{
 //?USER: Process Data record

 //?If the Producer Code is not blank, continue
 CASE;

 // IF DB1.PD Producer Code is Entered
 IF DB1.PD_Producer_Code <> *BLANK;

 EXECUTE FUNCTION(Rtv From Vals for To  RT) TYPE(RTVOBJ) FILE(PWADCPP)           AB1334720;
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(NLL.Producer_From);
 PARAMETER(NLL.Producer_Location_From);
 PARAMETER(NLL.PLF_Status_1);
 PARAMETER(NLL.PLF_Status_2);
 PARAMETER(NLL.PLF_Status_3);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  //?If record is active
  CASE;

  // IF DB1.RS Record Status is Active
  IF DB1.RS_Record_Status = 'A';

  MOVE *ALL (To: PAR From: DB1);

  ENDIF;

 }

 //?If record found, create 440 records for Buy Order and Tattoo
 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 EXECUTE FUNCTION(Crt Voucher Detail    CR) TYPE(CRTOBJ) FILE(PKBLCPP)           AB1102231;
 PARAMETER(440);
 PARAMETER(DB1.VCH_Batch_Number);
 PARAMETER(DB1.VCH_Header_Number);
 PARAMETER(DB1.VCD_Line);
 PARAMETER(DB1.VCD_Base_Mkt_Price_Amt);
 PARAMETER(DB1.VCD_Sort_Disc_Amt);
 PARAMETER(DB1.VCD_Yield_Gain_Loss);
 PARAMETER(DB1.VCD_Base_Carcass_Value);
 PARAMETER(DB1.VCD_LN_Add_on_Deduct_Amt);
 PARAMETER(DB1.VCD_Gross_Amt);
 PARAMETER(DB1.VCD_Deduction_Amt);
 PARAMETER(DB1.VCD_Less_Split_Amount);
 PARAMETER(DB1.VCD_Net_Amt);
 PARAMETER(DB1.VCD_Split_Percent);
 PARAMETER(DB1.VCD_Payment_Type);
 PARAMETER(DB1.VCD_Hog_Class_Type);
 PARAMETER(DB1.VCD_BO_Type);
 PARAMETER(DB1.VCD_Source_Contract_Type);
 PARAMETER('TO');
 PARAMETER(DB1.VCD_Check_Description);
 PARAMETER(DB1.VCD_Received_Head);
 PARAMETER(DB1.VCD_Head_Killed);
 PARAMETER(DB1.VCD_Push_Payment_Status);
 PARAMETER(DB1.VCD_Repayment_Flag);
 PARAMETER(DB1.VCD_Unused_Status_3);
 PARAMETER(DB1.VCD_Unused_Status_4);
 PARAMETER(DB1.VCD_Unused_Head_1);
 PARAMETER(DB1.VCD_UnUsed_Head_2);
 PARAMETER(DB1.VCD_UnUsed_Head_3);
 PARAMETER(DB1.MGL_Supplier_Invoice_Nbr);
 PARAMETER(DB1.MGL_Voucher_Number);
 PARAMETER(DB1.MGL_Invoice_Batch_Number);
 PARAMETER(DB1.MGL_Process_to_ERP_Date);
 PARAMETER(DB1.MGL_Process_to_ERP_Time);
 PARAMETER(440);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

  //?USER: Processing after Data update

  CASE;

  // IF DB1.VCD Split Percent is 100 %
  IF DB1.VCD_Split_Percent = 100;

  // Call program Crt Tattoo Action Comm XF.
  CALL PROGRAM(Crt Tattoo Action Comm XF) ('PKV4XFR');
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER('CV');
  PARAMETER(*BLANK);

  ENDIF;

 }

 //?When Buy Order Number changes, update BO files
 CASE;

 // IF DB1.BOH Buy Order Number NE LCL.BOH Buy Order Number
 IF DB1.BOH_Buy_Order_Number <> LCL.BOH_Buy_Order_Number;

 // LCL.BOH Buy Order Number = DB1.BOH Buy Order Number
 LCL.BOH_Buy_Order_Number = DB1.BOH_Buy_Order_Number;

 // LCL.TH Tattoo Number = CON.*ZERO
 LCL.TH_Tattoo_Number = *ZERO;

 // LCL.TH Kill Date = CON.*ZERO
 LCL.TH_Kill_Date = *ZERO;

 EXECUTE FUNCTION(Upd BOH Based on XREF RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1337646;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt Buy Order Header  CR) TYPE(CRTOBJ) FILE(PKAWCPP)           AB1100514;
  PARAMETER(440);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOH_Buy_Order_Date);
  PARAMETER(DB1.BOH_Kill_Date);
  PARAMETER(DB1.BOH_Payment_Type);
  PARAMETER(DB1.BOH_Buy_Order_Type);
  PARAMETER(DB1.BOH_Market_Add_Deduct);
  PARAMETER(DB1.BOH_Status);
  PARAMETER(DB1.BOH_Delv_Plan_Printed);
  PARAMETER(DB1.BOH_Quote_Price_Type);
  PARAMETER(DB1.BOH_Quoted_Base_Mkt_Price);
  PARAMETER(DB1.BOH_Commodity_Market_Code);
  PARAMETER(DB1.BOH_Commodity_Price_Group);
  PARAMETER(DB1.BOH_Market_Date_Method);
  PARAMETER(DB1.BOH_MPR_Reporting_Date);
  PARAMETER(DB1.BOH_Hedge_Date);
  PARAMETER(DB1.BOH_Unused_Date_3);
  PARAMETER(DB1.BOH_Unused_Date_4);
  PARAMETER(DB1.BOH_Unused_Date_5);
  PARAMETER(DB1.BOH_Hedge_Head_Total);
  PARAMETER(DB1.BOH_Hedge_Reference_BO);
  PARAMETER(DB1.BOH_Hedge_Time_hhmm);
  PARAMETER(DB1.BOH_Unused_Nbr_4);
  PARAMETER(DB1.BOH_Unused_Nbr_5);
  PARAMETER(DB1.BOH_Unused_Nbr_6);
  PARAMETER(DB1.BOH_Unused_Nbr_7);
  PARAMETER(DB1.BOH_Unused_Nbr_8);
  PARAMETER(DB1.BOH_Unused_Nbr_9);
  PARAMETER(DB1.BOH_Unused_Nbr_10);
  PARAMETER(DB1.BOH_MPR_Reporting_Time);
  PARAMETER(DB1.BOH_MPR_EST_RPT_STS);
  PARAMETER(DB1.BOH_MPR_Purchase_Type);
  PARAMETER(DB1.BOH_Status_4);
  PARAMETER(DB1.BOH_Status_5);
  PARAMETER(440);
  PARAMETER(DB1.CW_Year);
  PARAMETER(DB1.CW_Week_Number);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.PC_Contract_Code);
  PARAMETER(DB1.PSC_Sub_Contract_Code);
  PARAMETER(DB1.GN_Genetic_Code);
  PARAMETER(DB1.PO_Option_Code);
  PARAMETER(DB1.CMP_Program_Code);
  PARAMETER(DB1.HB_Buyer_Code);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   //?RMC 6/19/19 whd 49122 Chg time to 1:45 per Jerry L at tf
   //?RMC 9/23/16 R7307   Chg time as of 10/11/2016  per new MPR Rule:
   //?            compile all functions that call this CRTOBJ
   //?     9:55:59 changed to 9:30:59             9:56 changed to 9:31
   //?     1:55:59 changed to 1:30:59
   //?************************************************************************
   //?RMC  Chg time as of 01/10/07:
   //?     9:30:59 changed to 9:55:59             9:31 changed to 9:56
   //?     1:30:59 changed to 1:55:59
   //?*********************************************************************
   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

   //?** create record boh status as open
   // DB1.BOH Status = CND.Open
   DB1.BOH_Status = 'O';

   //?PK0254 -- MPR Reporting Time and Date       RMC 1/19/2001
   //?  If Current Time < 9:30:59 am
   //?    Reporting Date = Current Date
   //?    Reporting Time = 1
   //?  If 9:31 am < Current Time < 1:30:59 pm
   //?    Reporting Date = Current Date
   //?    Reporting Time = 2
   //?*** replace with R7307 -- effective 10/11/2016
   //?  * Otherwise         (These will not be reported at all.)
   //?  * Reporting Date = 0
   //?  * Reporting Time = 0
   //?*** NEW     with R7307 -- effective 10/11/2016
   //?    Reporting Date = Next kill date - skip sat/sun
   //?    Reporting Time = 1
   // Call program Rtv System Date & Tim UP.
   CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
   PARAMETER(LCL.*DATE);
   PARAMETER(LCL.*TIME);

   CASE;

   // IF LCL.*TIME is LE 09:30:59
   IF LCL.*TIME <= 093059;

   // DB1.BOH MPR Reporting Date = LCL.*DATE
   DB1.BOH_MPR_Reporting_Date = LCL.*DATE;

   // DB1.BOH MPR Reporting Time = CND.Reporting Time is 1
   DB1.BOH_MPR_Reporting_Time = 1;

   // IF *OTHERWISE
   IF *OTHERWISE;

   CASE;

   // IF LCL.*TIME is LE 13:45:59
   IF LCL.*TIME <= 134559;

   //?6/19/19 RMC time was LE 13:30:59
   // DB1.BOH MPR Reporting Date = LCL.*DATE
   DB1.BOH_MPR_Reporting_Date = LCL.*DATE;

   // DB1.BOH MPR Reporting Time = CND.Reporting Time is 2
   DB1.BOH_MPR_Reporting_Time = 2;

   // IF *OTHERWISE
   IF *OTHERWISE;

   //?R7307 -- GT 1:30 get reported at next day's 1st submission at 9:30
   // Call program RTV Next WkDy,N=Holidy XF.
   CALL PROGRAM(RTV Next WkDy,N=Holidy XF) ('PBYUXFR');
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(LCL.*DATE);
   PARAMETER(LCL.MPR_Reporting_Date);

   // DB1.BOH MPR Reporting Date = LCL.MPR Reporting Date
   DB1.BOH_MPR_Reporting_Date = LCL.MPR_Reporting_Date;

   // DB1.BOH MPR Reporting Time = CND.Reporting Time is 1
   DB1.BOH_MPR_Reporting_Time = 1;

   ENDIF;

   ENDIF;

  }

  //?Create Buy Order Load, and then Buy Order Load Weight
  EXECUTE FUNCTION(Upd BOL Based on XREF RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1337647;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Crt Buy Order Detail  CR) TYPE(CRTOBJ) FILE(PKAXCPP)           AB1100530;
   PARAMETER(440);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.BOL_Kill_Date);
   PARAMETER(DB1.BOL_Pln_Delv_Start_Time);
   PARAMETER(DB1.BOL_Pln_Delv_End_Time);
   PARAMETER(DB1.BOL_Pln_Head_Delv);
   PARAMETER(DB1.BOL_Shipped_Wgt);
   PARAMETER(DB1.BOL_Pln_Delv_Date);
   PARAMETER(DB1.BOL_Freight_UOM);
   PARAMETER(DB1.BOL_Freight_Unit_Amt);
   PARAMETER(DB1.BOL_Freight_Amt);
   PARAMETER(DB1.BOL_Freight_Allocation);
   PARAMETER(DB1.BOL_Head_Received);
   PARAMETER(DB1.BOL_Live_Wgt_Received);
   PARAMETER(DB1.BOL_Trucker_Payment_Sts);
   PARAMETER(DB1.BOL_Trucker_Check_Number);
   PARAMETER(DB1.BOL_Trucker_Check_Date);
   PARAMETER(DB1.BOL_AP_Voucher);
   PARAMETER(DB1.BOL_Trailer);
   PARAMETER(DB1.BOL_Freight_Exp_Paid_By);
   PARAMETER(DB1.BOL_Scheduled_Kill_Shift);
   PARAMETER(DB1.BOL_Truck_Scale_Weigh_Sts);
   PARAMETER(DB1.BOL_Shipped_Head);
   PARAMETER(DB1.Reported_to_USDA);
   PARAMETER(DB1.BOL_MPR_Prior_Day_Prch);
   PARAMETER(DB1.BOL_Violated_Auth_Tme_Sts);
   PARAMETER(DB1.BOL_Status_5);
   PARAMETER(DB1.BOL_Status_6);
   PARAMETER(DB1.BOL_Status_7);
   PARAMETER(DB1.BOL_HPS_Movement_Number);
   PARAMETER(DB1.BOL_Head_LFT);
   PARAMETER(DB1.BOL_Head_EUT_KOA);
   PARAMETER(DB1.BOL_Auth_Gate_Entry_Time);
   PARAMETER(DB1.BOL_Head_Received_Market);
   PARAMETER(DB1.BOL_Unused_Wgt_1);
   PARAMETER(DB1.BOL_Unused_Wgt_2);
   PARAMETER(DB1.BOL_Unused_Wgt_3);
   PARAMETER(DB1.BOL_Unused_Wgt_4);
   PARAMETER(DB1.BOL_Unused_Wgt_5);
   PARAMETER(DB1.BOL_Auth_Gate_Entry_Date);
   PARAMETER(DB1.BOL_Unused_Date_2);
   PARAMETER(DB1.BOL_Unused_Date_3);
   PARAMETER(DB1.BOL_Unused_Date_4);
   PARAMETER(DB1.BOL_Unused_Date_5);
   PARAMETER(DB1.TRK_Trucker_Code);
   PARAMETER(DB1.PD_Producer_Code);
   PARAMETER(DB1.PL_Location_Code);
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

   EXECUTE FUNCTION(Upd BOLW Based on XREF RT) TYPE(RTVOBJ) FILE(PKEJCPP)          AB1337648;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   {
    //?USER: Process Data record

    EXECUTE FUNCTION(Crt Buy Order Load Wt CR) TYPE(CRTOBJ) FILE(PKEJCPP)           AB1213882;
    PARAMETER(440);
    PARAMETER(DB1.PD_Producer_Code);
    PARAMETER(DB1.PL_Location_Code);
    PARAMETER(DB1.BOLW_Movement_Number);
    PARAMETER(DB1.BOLW_Weight_Type);
    PARAMETER(DB1.BOLW_Scale_Weight);
    PARAMETER(DB1.BOLW_Scale_Weight_Date);
    PARAMETER(DB1.BOLW_Scale_Weight_Time);
    PARAMETER(DB1.BOLW_Spread_Status);
    PARAMETER(DB1.BOLW_Unused_Sts_1);
    PARAMETER(DB1.BOLW_Unused_Sts_2);
    PARAMETER(440);
    PARAMETER(DB1.BOH_Buy_Order_Number);
    PARAMETER(DB1.BOL_Load_Number);
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
     PARAMETER(DB1.RS_Record_Status);
     PARAMETER(DB1.RS_Job);
     PARAMETER(DB1.RS_Program);
     PARAMETER(DB1.RS_User_Added);
     PARAMETER(DB1.RS_Date_Added);
     PARAMETER(DB1.RS_Time_Added);
     {
      //?Execute internal function

      // PAR.RS Record Status = CND.Active
      PAR.RS_Record_Status = 'A';

      // PAR.RS User Added = JOB.*USER
      PAR.RS_User_Added = JOB.*USER;

      // PAR.RS Date Added = JOB.*Job date
      PAR.RS_Date_Added = JOB.*Job_date;

      // PAR.RS Time Added = JOB.*Job time
      PAR.RS_Time_Added = JOB.*Job_time;

      // PAR.RS Program = JOB.*PROGRAM
      PAR.RS_Program = JOB.*PROGRAM;

      // PAR.RS Job = JOB.*JOB
      PAR.RS_Job = JOB.*JOB;

     }

    }

   }

  }

 }

 ENDIF;

 //?When Tattoo Number or Kill Date changes, update Tattoo files
 CASE;

 // IF DB1.TH Tattoo Number NE LCL.TH Tattoo Number
 IF DB1.TH_Tattoo_Number <> LCL.TH_Tattoo_Number;

 // OR DB1.TH Kill Date NE LCL.TH Kill Date
 OR DB1.TH_Kill_Date <> LCL.TH_Kill_Date;

 // LCL.TH Tattoo Number = DB1.TH Tattoo Number
 LCL.TH_Tattoo_Number = DB1.TH_Tattoo_Number;

 // LCL.TH Kill Date = DB1.TH Kill Date
 LCL.TH_Kill_Date = DB1.TH_Kill_Date;

 EXECUTE FUNCTION(Upd Tat Based on XREF RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1337649;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Create Tattoo Header) TYPE(CRTOBJ) FILE(PKA1CPP)               AB1101743;
  PARAMETER(440);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.TH_Purchase_Date);
  PARAMETER(DB1.TH_Group_Reference);
  PARAMETER(DB1.TH_Live_Purchase_UOM);
  PARAMETER(DB1.TH_Live_Purchase_Price);
  PARAMETER(DB1.TH_Live_Gross_Amt);
  PARAMETER(DB1.TH_LIve_Net_Amt);
  PARAMETER(DB1.TH_Resale_UOM);
  PARAMETER(DB1.TH_Recalc_Live_Wgt_Yld);
  PARAMETER(DB1.TH_Pricing_Date);
  PARAMETER(DB1.TH_Resale_Spread_Sts);
  PARAMETER(DB1.TH_Dead_On_Arrival);
  PARAMETER(DB1.TH_Head_Received);
  PARAMETER(DB1.TH_Yard_Deads);
  PARAMETER(DB1.TH_Held_Over);
  PARAMETER(DB1.TH_Head_Condemned);
  PARAMETER(DB1.TH_Head_Killed);
  PARAMETER(DB1.TH_Head_Adds);
  PARAMETER(DB1.TH_Head_Accepted);
  PARAMETER(DB1.TH_Live_Wgt);
  PARAMETER(DB1.TH_Adj_Live_Wgt);
  PARAMETER(DB1.TH_Hot_Wgt);
  PARAMETER(DB1.TH_Tot_Loin_Eye_Depth);
  PARAMETER(DB1.TH_Tot_Backfat_Inches);
  PARAMETER(DB1.TH_Tot_Light_Reflectance);
  PARAMETER(DB1.TH_Avg_Live_Wgt);
  PARAMETER(DB1.TH_Avg_Hot_Wgt);
  PARAMETER(DB1.TH_Avg_Light_Reflectance);
  PARAMETER(DB1.TH_Avg_Lean_Percent);
  PARAMETER(DB1.TH_Avg_Loin_Eye_Depth);
  PARAMETER(DB1.TH_Avg_Backfat);
  PARAMETER(DB1.TH_Std_Yield_Percent);
  PARAMETER(DB1.TH_Actual_Yield);
  PARAMETER(DB1.TH_Adj_Actual_Yield);
  PARAMETER(DB1.TH_Yield_Difference);
  PARAMETER(DB1.TH_Recalc_Live_Wgt);
  PARAMETER(DB1.TH_CM_Market_Price);
  PARAMETER(DB1.TH_CM_Base_Mkt_Price);
  PARAMETER(DB1.TH_CM_Base_Mkt_Price_Amt);
  PARAMETER(DB1.TH_CM_Sort_Discount_Amt);
  PARAMETER(DB1.TH_CM_Yield_Gain_Loss_Amt);
  PARAMETER(DB1.TH_CM_Base_Carcass_Value);
  PARAMETER(DB1.TH_CM_LN_AddOn_Deduct_Amt);
  PARAMETER(DB1.TH_CM_Carcass_Gross_Amt);
  PARAMETER(DB1.TH_Deduction_Amt);
  PARAMETER(DB1.TH_Total_Net_WO_Adds);
  PARAMETER(DB1.TH_Carcass_Net_Amt);
  PARAMETER(DB1.TH_Additions_Amt);
  PARAMETER(DB1.TH_Payment_Gross);
  PARAMETER(DB1.Th_Payment_Net_Amt);
  PARAMETER(DB1.TH_AP_Voucher_Document#);
  PARAMETER(DB1.TH_Freight_Amount);
  PARAMETER(DB1.TH_Accrual_Amount);
  PARAMETER(DB1.TH_Fixed_Cost_Amount);
  PARAMETER(DB1.TH_Calc_Net_Sts);
  PARAMETER(DB1.TH_Payment_Sts);
  PARAMETER(DB1.TH_Header_Error_Sts);
  PARAMETER(DB1.TH_Detail_Error_Sts);
  PARAMETER(DB1.TH_Kill_Balancing_Sts);
  PARAMETER(DB1.TH_Bal_to_Kill_Gen);
  PARAMETER(DB1.TH_Commission_A_P_Voucher);
  PARAMETER(DB1.TH_Voucher_Payment_Date);
  PARAMETER(DB1.TH_User_Error_Override);
  PARAMETER(DB1.TH_Held_Over_Record);
  PARAMETER(DB1.TH_Sex);
  PARAMETER(DB1.TH_Held_Ovr_Completed_Dte);
  PARAMETER(DB1.TH_Commission_Paid_Date);
  PARAMETER(DB1.TH_Actual_Check_Date);
  PARAMETER(DB1.TH_Shipped_Weight);
  PARAMETER(DB1.TH_Avg_Hot_Wgt_EXC_ADD);
  PARAMETER(DB1.TH_FFLI);
  PARAMETER(DB1.TH_Kill_Product_Value);
  PARAMETER(DB1.TH_Cut_Product_Value);
  PARAMETER(DB1.TH_Render_Product_Value);
  PARAMETER(DB1.TH_Head_Excluded);
  PARAMETER(DB1.TH_CM_Bse_Mkt_Live_CWT);
  PARAMETER(DB1.TH_CM_Bse_Mkt_Carc_CWT);
  PARAMETER(DB1.TH_CM_Srt_Dsc_Live_CWT);
  PARAMETER(DB1.TH_CM_Srt_Dsc_Carc_CWT);
  PARAMETER(DB1.TH_CM_Yld_G_L_Live_CWT);
  PARAMETER(DB1.TH_CM_Yld_G_L_Carc_CWT);
  PARAMETER(DB1.TH_CM_Crc_Val_Live_CWT);
  PARAMETER(DB1.TH_CM_Crc_Val_Carc_CWT);
  PARAMETER(DB1.TH_CM_Lean_Prem_Live_CWT);
  PARAMETER(DB1.TH_CM_Lean_Prem_Carc_CWT);
  PARAMETER(DB1.TH_CM_Gross_Live_CWT);
  PARAMETER(DB1.TH_CM_Gross_Carc_CWT);
  PARAMETER(DB1.TH_Source_Type);
  PARAMETER(DB1.TH_Scale_Ticket_Sts);
  PARAMETER(DB1.TH_Payment_Type);
  PARAMETER(DB1.TH_HPS_Movement_Ref_#);
  PARAMETER(DB1.TH_Source_Code);
  PARAMETER(DB1.TH_Hog_Class_Type);
  PARAMETER(DB1.TH_Posted_to_HPS_Flag);
  PARAMETER(DB1.TH_Schedule_Kill_Shift);
  PARAMETER(DB1.TH_Shift_Held_Over);
  PARAMETER(DB1.TH_State);
  PARAMETER(DB1.TH_Unused_Code);
  PARAMETER(DB1.TH_Unused_Sts_2_Pos);
  PARAMETER(DB1.TH_Commission_Status);
  PARAMETER(DB1.TH_Paid_2_Week_Avg_Y_N);
  PARAMETER(DB1.TH_Unused_Sts_1_Pos_3);
  PARAMETER(DB1.TH_DOA_Weight);
  PARAMETER(DB1.TH_Avg_Lean_EXC_ADD);
  PARAMETER(DB1.TH_HPS_Farm_Site);
  PARAMETER(DB1.TH_Shift_Held_Over_Head);
  PARAMETER(DB1.TH_Sorting_Amount);
  PARAMETER(DB1.TH_Head_Identified);
  PARAMETER(DB1.TH_Percent_Identified);
  PARAMETER(DB1.TH_Percent_Accepted);
  PARAMETER(DB1.TH_Head_Adjusted_LN);
  PARAMETER(DB1.TH_PHA_Head_Adds);
  PARAMETER(DB1.TH_PHA_Add_Type);
  PARAMETER(DB1.TH_PHA_Average_Type);
  PARAMETER(DB1.TH_PHA_Add_Reason);
  PARAMETER(DB1.TH_PHA_Yield_Percent);
  PARAMETER(DB1.TH_PHA_Lean_Prm_Crc_CWT);
  PARAMETER(DB1.TH_VC_Gross_Value_HD);
  PARAMETER(DB1.TH_Excluded_Gross_Value);
  PARAMETER(DB1.TH_Avg_Lean);
  PARAMETER(DB1.TH_Broken_Back_Hd_Count);
  PARAMETER(DB1.TH_Hot_Scl_Upload_Time);
  PARAMETER(DB1.TH_Unused_Nbr_4);
  PARAMETER(DB1.TH_Excluded_Carc_Val);
  PARAMETER(DB1.TH_Excluded_Premium);
  PARAMETER(DB1.TH_Unused_Nbr_7);
  PARAMETER(DB1.TH_Unused_Nbr_8);
  PARAMETER(DB1.TH_Unused_Nbr_9);
  PARAMETER(DB1.TH_Unused_Nbr_10);
  PARAMETER(DB1.TH_Break_Even_Price_CWT);
  PARAMETER(DB1.TH_Meat_Value_Factor_Amt);
  PARAMETER(DB1.TH_Yld_Parm_Adj_Yield);
  PARAMETER(DB1.TH_PHA_Sort_Disc_Fctr);
  PARAMETER(DB1.TH_Avg_Loin_Eye_2_dec);
  PARAMETER(DB1.TH_Avg_Backfat_2_Dec);
  PARAMETER(DB1.TH_HITCH_Old_Pay_Net_Amt);
  PARAMETER(DB1.TH_MPR_Sort_Loss);
  PARAMETER(DB1.TH_Unused_Nbr_19);
  PARAMETER(DB1.TH_Unused_Nbr_20);
  PARAMETER(DB1.TH_Cold_Scl_Upload_Date);
  PARAMETER(DB1.TH_Cold_Scl_Upload_Time);
  PARAMETER(DB1.TH_Head_LFT);
  PARAMETER(DB1.TH_Head_EUT_KOA);
  PARAMETER(DB1.TH_Unused_Date_5);
  PARAMETER(DB1.TH_Unused_Sts_1);
  PARAMETER(DB1.TH_Unused_Sts_2);
  PARAMETER(DB1.TH_Unused_Sts_3);
  PARAMETER(DB1.TH_Unused_Sts_4);
  PARAMETER(DB1.TH_Unused_Sts_5);
  PARAMETER(DB1.TH_Unused_Sts_6);
  PARAMETER(DB1.TH_Unused_Sts_7);
  PARAMETER(DB1.TH_Unused_Sts_8);
  PARAMETER(DB1.DF_Defect_Code);
  PARAMETER(DB1.THP_Process_Code);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.HB_Buyer_Code);
  PARAMETER(DB1.GN_Genetic_Code);
  PARAMETER(DB1.HC_Class_Code);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
   {
    //?Execute internal function

    //?1/10/96  HPE056   Allow payment type to be update based on
    //?                  what the payment status is at the time this
    //?                  tattoo is being updated
   }

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

   // DB1.TH User Error Override = CND.No
   DB1.TH_User_Error_Override = 'N';

   EXECUTE FUNCTION(Chg/Crt Tatto/Spc Flds IF) TYPE(EXCINTFUN)                     AB1189848;
   PARAMETER(DB1.TH_Payment_Sts);
   PARAMETER(DB1.TH_Payment_Type);
   {
    //?Execute internal function

    EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
    {
     //?Execute internal function

     //?1/10/96  HPE056   Allow payment type to be update based on
     //?                  what the payment status is at the time this
     //?                  tattoo is being updated
    }

    //?Function Description:  If there are any fields that need to be
    //?Changed/Created during the Change functions or Create function
    //?Presently: Payment Type
    //?Add this routine to all of the change objects and create object
    //?that update the Payment Type
    CASE;

    // IF PAR.TH Payment Sts is Live anything
    IF PAR.TH_Payment_Sts = 'ML'/'PL'/'NL'/'SL'/'IL';

    // PAR.TH Payment Type = CND.Live
    PAR.TH_Payment_Type = 'L';

    // IF *OTHERWISE
    IF *OTHERWISE;

    // PAR.TH Payment Type = CND.Carcass Merit
    PAR.TH_Payment_Type = 'C';

    ENDIF;

   }

  }

  EXECUTE FUNCTION(Upd THE Based on XREF RT) TYPE(RTVOBJ) FILE(PKDNCPP)           AB1338667;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Create Tattoo Header EXT) TYPE(CRTOBJ) FILE(PKDNCPP)           AB1176576;
   PARAMETER(440);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.TH_CA_Market_Price);
   PARAMETER(DB1.TH_CA_Base_Market_Price);
   PARAMETER(DB1.TH_CA_Base_Mkt_Price_Amt);
   PARAMETER(DB1.TH_CA_Sort_Discount_Amt);
   PARAMETER(DB1.TH_CA_Yield_Gain_Loss_Amt);
   PARAMETER(DB1.TH_CA_Base_Carcass_Value);
   PARAMETER(DB1.TH_CA_Lean_Premium_Amt);
   PARAMETER(DB1.TH_CA_Carcass_Gross_Amt);
   PARAMETER(DB1.TH_CA_Bse_Mkt_Live_CWT);
   PARAMETER(DB1.TH_CA_Bse_Mkt_Carc_CWT);
   PARAMETER(DB1.TH_CA_Srt_Dsc_Live_CWT);
   PARAMETER(DB1.TH_CA_Srt_Dsc_Carc_CWT);
   PARAMETER(DB1.TH_CA_Yld_G_L_Live_CWT);
   PARAMETER(DB1.TH_CA_Yld_G_L_Carc_CWT);
   PARAMETER(DB1.TH_CA_Crc_Val_Live_CWT);
   PARAMETER(DB1.TH_CA_Crc_Val_Carc_CWT);
   PARAMETER(DB1.TH_CA_Lean_Prm_Live_CWT);
   PARAMETER(DB1.TH_CA_Lean_Prm_Carc_CWT);
   PARAMETER(DB1.TH_CA_Gross_Live_CWT);
   PARAMETER(DB1.TH_CA_Gross_Carc_CWT);
   PARAMETER(DB1.TH_Min_LT_Backfat_Inch);
   PARAMETER(DB1.TH_Min_LT_LoinEye_Inch);
   PARAMETER(DB1.TH_Min_LT_Hot_Wt_lb);
   PARAMETER(DB1.TH_Min_LT_Lean_Pct);
   PARAMETER(DB1.TH_Max_GT_Backfat_Inch);
   PARAMETER(DB1.TH_Max_GT_LoinEye_Inch);
   PARAMETER(DB1.TH_Max_GT_Hot_Wt_lb);
   PARAMETER(DB1.TH_Max_GT_Lean_Pct);
   PARAMETER(DB1.TH_Head_LT_Backfat_In_Min);
   PARAMETER(DB1.TH_Head_LT_LoinEye_In_Min);
   PARAMETER(DB1.TH_Head_LT_Hot_Wt_lb_Min);
   PARAMETER(DB1.TH_Head_LT_Lean_Pct_Min);
   PARAMETER(DB1.TH_Head_GT_Backfat_In_Max);
   PARAMETER(DB1.TH_Head_GT_LoinEye_In_Max);
   PARAMETER(DB1.TH_Head_GT_Hot_Wt_lb_Max);
   PARAMETER(DB1.TH_Head_GT_Lean_Pct_Max);
   PARAMETER(DB1.TE_Unused_Number_1);
   PARAMETER(DB1.TE_UnUsed_Number_2);
   PARAMETER(DB1.TE_Unused_Number_3);
   PARAMETER(DB1.TE_Unused_Status_1);
   PARAMETER(DB1.TE_Unused_Status_2);
   PARAMETER(DB1.TE_Unused_Status_3);
   PARAMETER(DB1.PD_Producer_Code);
   PARAMETER(DB1.PS_Site_ID);
   PARAMETER(DB1.Producer_Subsidiary_Code);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

    // DB1.RS User Changed = CON.*BLANK
    DB1.RS_User_Changed = *BLANK;

    // DB1.RS Date Changed = CON.*ZERO
    DB1.RS_Date_Changed = *ZERO;

    // DB1.RS Time Changed = CON.*ZERO
    DB1.RS_Time_Changed = *ZERO;

    //?USER: Processing if Data record already exists

    EXECUTE FUNCTION(Change Tto Hdr         CO) TYPE(CHGOBJ) FILE(PKDNCPP)          AB1268473;
    PARAMETER(DB1.BOH_Company_Number);
    PARAMETER(DB1.BOH_Buy_Order_Number);
    PARAMETER(DB1.BOL_Load_Number);
    PARAMETER(DB1.TH_Tattoo_Number);
    PARAMETER(DB1.TH_Kill_Date);
    PARAMETER(DB1.TH_CA_Market_Price);
    PARAMETER(DB1.TH_CA_Base_Market_Price);
    PARAMETER(DB1.TH_CA_Base_Mkt_Price_Amt);
    PARAMETER(DB1.TH_CA_Sort_Discount_Amt);
    PARAMETER(DB1.TH_CA_Yield_Gain_Loss_Amt);
    PARAMETER(DB1.TH_CA_Base_Carcass_Value);
    PARAMETER(DB1.TH_CA_Lean_Premium_Amt);
    PARAMETER(DB1.TH_CA_Carcass_Gross_Amt);
    PARAMETER(DB1.TH_CA_Bse_Mkt_Live_CWT);
    PARAMETER(DB1.TH_CA_Bse_Mkt_Carc_CWT);
    PARAMETER(DB1.TH_CA_Srt_Dsc_Live_CWT);
    PARAMETER(DB1.TH_CA_Srt_Dsc_Carc_CWT);
    PARAMETER(DB1.TH_CA_Yld_G_L_Live_CWT);
    PARAMETER(DB1.TH_CA_Yld_G_L_Carc_CWT);
    PARAMETER(DB1.TH_CA_Crc_Val_Live_CWT);
    PARAMETER(DB1.TH_CA_Crc_Val_Carc_CWT);
    PARAMETER(DB1.TH_CA_Lean_Prm_Live_CWT);
    PARAMETER(DB1.TH_CA_Lean_Prm_Carc_CWT);
    PARAMETER(DB1.TH_CA_Gross_Live_CWT);
    PARAMETER(DB1.TH_CA_Gross_Carc_CWT);
    PARAMETER(DB1.TH_Min_LT_Backfat_Inch);
    PARAMETER(DB1.TH_Min_LT_LoinEye_Inch);
    PARAMETER(DB1.TH_Min_LT_Hot_Wt_lb);
    PARAMETER(DB1.TH_Min_LT_Lean_Pct);
    PARAMETER(DB1.TH_Max_GT_Backfat_Inch);
    PARAMETER(DB1.TH_Max_GT_LoinEye_Inch);
    PARAMETER(DB1.TH_Max_GT_Hot_Wt_lb);
    PARAMETER(DB1.TH_Max_GT_Lean_Pct);
    PARAMETER(DB1.TH_Head_LT_Backfat_In_Min);
    PARAMETER(DB1.TH_Head_LT_LoinEye_In_Min);
    PARAMETER(DB1.TH_Head_LT_Hot_Wt_lb_Min);
    PARAMETER(DB1.TH_Head_LT_Lean_Pct_Min);
    PARAMETER(DB1.TH_Head_GT_Backfat_In_Max);
    PARAMETER(DB1.TH_Head_GT_LoinEye_In_Max);
    PARAMETER(DB1.TH_Head_GT_Hot_Wt_lb_Max);
    PARAMETER(DB1.TH_Head_GT_Lean_Pct_Max);
    PARAMETER(*MISSING);
    PARAMETER(*MISSING);
    PARAMETER(*MISSING);
    PARAMETER(*MISSING);
    PARAMETER(*MISSING);
    PARAMETER(*MISSING);
    PARAMETER(DB1.PD_Producer_Code);
    PARAMETER(DB1.PS_Site_ID);
    PARAMETER(*MISSING);
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
   }

  }

  EXECUTE FUNCTION(Upd TtD Based on XREF RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1337650;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Create Tattoo Detail) TYPE(CRTOBJ) FILE(PKA2CPP)               AB1101750;
   PARAMETER(440);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.TD_Sequence_Number);
   PARAMETER(DB1.TD_Live_Wgt);
   PARAMETER(DB1.TD_Pen_Head);
   PARAMETER(DB1.TD_Yard_Dead);
   PARAMETER(DB1.TD_Held_Over);
   PARAMETER(DB1.TD_Held_Over_Status);
   PARAMETER(DB1.TD_Drive_Time);
   PARAMETER(DB1.TD_Drive_Hour);
   PARAMETER(DB1.TD_Drive_Card_Number);
   PARAMETER(DB1.TD_Avg_Live_Wgt);
   PARAMETER(DB1.TD_Gen_Bal_To_Kill);
   PARAMETER(DB1.TD_Recs_Created_for_HO);
   PARAMETER(DB1.TD_User_Status_2);
   PARAMETER(DB1.TD_User_Status_3);
   PARAMETER(DB1.TD_User_Date_1);
   PARAMETER(DB1.TD_User_Date_2);
   PARAMETER(DB1.TD_Drive_Date);
   PARAMETER(440);
   PARAMETER(DB1.Pen_Number);
   PARAMETER(DB1.TDP_Process_Code);
   PARAMETER(DB1.Held_Over_Pen_Company_Num);
   PARAMETER(DB1.Held_Over_Pen_Number);
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

  }

  EXECUTE FUNCTION(Upd TDA Based on XREF RT) TYPE(RTVOBJ) FILE(PKCDCPP)           AB1337651;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Create Tattoo Deduction) TYPE(CRTOBJ) FILE(PKCDCPP)            AB1107817;
   PARAMETER(440);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.DED_D_A_Code);
   PARAMETER(DB1.THD_Unit_Amt);
   PARAMETER(DB1.THD_Ded_Add_Amount);
   PARAMETER(DB1.THD_Unit_Amt_Sign);
   PARAMETER(DB1.THD_UOM);
   PARAMETER(DB1.THD_Transaction_Created);
   PARAMETER(DB1.THD_GL_Code);
   PARAMETER(DB1.THD_Contra_Gl_Code);
   PARAMETER(DB1.THD_Re_imbursement_Head);
   PARAMETER(DB1.THD_Payment_Sts);
   PARAMETER(DB1.THD_Expense_Paid_by);
   PARAMETER(DB1.THD_Expense_Type);
   PARAMETER(DB1.THD_Reserve_Account_Upd);
   PARAMETER(DB1.THD_Commission_Deduction);
   PARAMETER(DB1.THD_Deferred_Payment);
   PARAMETER(DB1.THD_Status_4);
   PARAMETER(DB1.THD_Status_5);
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

  }

  EXECUTE FUNCTION(Upd TDf Based on XREF RT) TYPE(RTVOBJ) FILE(PKDZREP)           AB1337652;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Crt Tattoo Defect     CR) TYPE(CRTOBJ) FILE(PKDZREP)           AB1197898;
   PARAMETER(440);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.DF_Defect_Code);
   PARAMETER(DB1.TDF_Head_Defect);
   PARAMETER(DB1.HC_Class_Code);
   PARAMETER(DB1.TDF_Unused_Sts_1);
   PARAMETER(DB1.TDF_Unused_Sts_2);
   PARAMETER(DB1.TDF_Unused_Sts_3);
   PARAMETER(DB1.TDF_Unused_Nbr_1);
   PARAMETER(DB1.TDF_Unused_Nbr_2);
   PARAMETER(DB1.TDF_Unused_Nbr_3);
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Hog Defect Class  RT) TYPE(RTVOBJ) FILE(PKA7REP)           AB1286918;
    PARAMETER(DB1.DF_Defect_Code);
    PARAMETER(DB1.TDF_Classification_Defs);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

  }

  EXECUTE FUNCTION(Upd TST Based on XREF RT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1337653;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Crt Tattoo Scale Tkt  CR) TYPE(CRTOBJ) FILE(PKB3CPP)           AB1113769;
   PARAMETER(440);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.TST_Sequence_Number);
   PARAMETER(DB1.TST_Head);
   PARAMETER(DB1.TST_Wgt);
   PARAMETER(DB1.TST_Wgt_Date);
   PARAMETER(DB1.TST_Wgt_Time);
   PARAMETER(DB1.TST_Wgt_Hour);
   PARAMETER(DB1.TST_Last_Zero_Date);
   PARAMETER(DB1.TST_Last_Zero_Time);
   PARAMETER(DB1.TST_Record_Created_Status);
   PARAMETER(440);
   PARAMETER(DB1.Pen_Number);
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

  }

  EXECUTE FUNCTION(Upd ETr Based on XREF RT) TYPE(RTVOBJ) FILE(PKBVCPP)           AB1337654;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Create Evaluation Transac) TYPE(CRTOBJ) FILE(PKBVCPP)          AB1102931;
   PARAMETER(440);
   PARAMETER(DB1.ET_Kill_Date);
   PARAMETER(DB1.ET_Scale_Sequence_Number);
   PARAMETER(DB1.ET_Carcass_Number);
   PARAMETER(DB1.ET_Carcass_Number_Insert);
   PARAMETER(DB1.ET_Tattoo_Number);
   PARAMETER(DB1.ET_Lot);
   PARAMETER(DB1.ET_Shift);
   PARAMETER(DB1.ET_Hot_Wgt);
   PARAMETER(DB1.ET_Backfat_Thickness_Inch);
   PARAMETER(DB1.ET_Loin_Eye_Depth_Inches);
   PARAMETER(DB1.ET_Lean_Percent_NPPC);
   PARAMETER(DB1.ET_Backfat_Thickness_MM);
   PARAMETER(DB1.ET_Loineye_Depth_MM);
   PARAMETER(DB1.ET_Light_Reflectance_MM);
   PARAMETER(DB1.ET_Lean_Percent_FOM);
   PARAMETER(DB1.ET_Light_Reflectance);
   PARAMETER(DB1.ET_Trim_Area);
   PARAMETER(DB1.ET_Carcass_Sex);
   PARAMETER(DB1.ET_Error_Sts);
   PARAMETER(DB1.ET_Record_Add_Del_Sts);
   PARAMETER(DB1.ET_Record_Created_W_Avg);
   PARAMETER(DB1.ET_Record_Created_Status);
   PARAMETER(DB1.ET_User_Error_Override);
   PARAMETER(DB1.ET_Adjust_Add_Type);
   PARAMETER(DB1.ET_Broken_Back_Sts);
   PARAMETER(DB1.ET_Unused_Sts_2);
   PARAMETER(DB1.ET_Adjust_Add_Source);
   PARAMETER(DB1.ET_Unused_Sts_4);
   PARAMETER(DB1.ET_Unused_Sts_5);
   PARAMETER(440);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   PARAMETER(DB1.RU_Date);
   PARAMETER(DB1.RU_Time);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(*MISSING);
    PARAMETER(*MISSING);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

  }

  EXECUTE FUNCTION(Upd LTr Based on XREF RT) TYPE(RTVOBJ) FILE(PKBSCPP)           AB1337655;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Crt Loss Transaction  CR) TYPE(CRTOBJ) FILE(PKBSCPP)           AB1102905;
   PARAMETER(440);
   PARAMETER(DB1.LTN_Kill_Date);
   PARAMETER(DB1.LTN_Record_Number);
   PARAMETER(DB1.LTN_Tattoo_Number);
   PARAMETER(DB1.LTN_Shift);
   PARAMETER(DB1.LTN_Wgt);
   PARAMETER(DB1.LTN_Extent);
   PARAMETER(DB1.LTN_Trim_Location);
   PARAMETER(DB1.LTN_Error_Sts);
   PARAMETER(DB1.LTN_Record_Created_Status);
   PARAMETER(DB1.LTN_User_Error_Override);
   PARAMETER(DB1.LTN_Source_Type);
   PARAMETER(DB1.LT_Type_Code);
   PARAMETER(DB1.LR_Reason_Code);
   PARAMETER(440);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   PARAMETER(DB1.RU_Date);
   PARAMETER(DB1.RU_Time);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // Call program Rtv System Date & Tim UP.
     CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
     PARAMETER(PAR.RS_Date_Added);
     PARAMETER(PAR.RS_Time_Added);

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

  }

 }

 ENDIF;

 ENDIF;

 ENDIF;

 //?USER: Exit processing

 //?Delete all records for Triumph Foods (Company 960)
 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKBLCPP)          AB1337671;
 PARAMETER(960);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Voucher Detail    DL) TYPE(DLTOBJ) FILE(PKBLCPP)           AB1234001;
  PARAMETER(DB1.VCH_Company_number);
  PARAMETER(DB1.VCH_Batch_Number);
  PARAMETER(DB1.VCH_Header_Number);
  PARAMETER(DB1.VCD_Line);
 }

 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKAWCPP)          AB1337672;
 PARAMETER(960);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Buy Order Header  DL) TYPE(DLTOBJ) FILE(PKAWCPP)           AB1100516;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
 }

 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKAXCPP)          AB1337673;
 PARAMETER(960);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Buy Order Detail  DL) TYPE(DLTOBJ) FILE(PKAXCPP)           AB1100532;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
 }

 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKEJCPP)          AB1337686;
 PARAMETER(960);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Buy Order Load Wt DO) TYPE(DLTOBJ) FILE(PKEJCPP)           AB1213884;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.BOLW_Movement_Number);
  PARAMETER(DB1.BOLW_Weight_Type);
 }

 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKBSCPP)          AB1337674;
 PARAMETER(960);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Loss Transaction  DO) TYPE(DLTOBJ) FILE(PKBSCPP)           AB1102907;
  PARAMETER(DB1.LTN_Company_Number);
  PARAMETER(DB1.LTN_Kill_Date);
  PARAMETER(DB1.LTN_Record_Number);
 }

 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKBVCPP)          AB1337675;
 PARAMETER(960);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Eval Trans        DL) TYPE(DLTOBJ) FILE(PKBVCPP)           AB1102933;
  PARAMETER(DB1.ET_Company_Number);
  PARAMETER(DB1.ET_Kill_Date);
  PARAMETER(DB1.ET_Scale_Sequence_Number);
  PARAMETER(DB1.ET_Carcass_Number);
  PARAMETER(DB1.ET_Carcass_Number_Insert);
 }

 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKA1CPP)          AB1337676;
 PARAMETER(960);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Delete Tattoo Header) TYPE(DLTOBJ) FILE(PKA1CPP)               AB1101745;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
 }

 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKDNCPP)          AB1338668;
 PARAMETER(960);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Tattoo Hdr Ext    DO) TYPE(DLTOBJ) FILE(PKDNCPP)           AB1271812;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
 }

 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKA2CPP)          AB1337677;
 PARAMETER(960);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Tattoo Detail     DO) TYPE(DLTOBJ) FILE(PKA2CPP)           AB1284461;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.TD_Sequence_Number);
 }

 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKCDCPP)          AB1337678;
 PARAMETER(960);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Delete Tattoo Deduction) TYPE(DLTOBJ) FILE(PKCDCPP)            AB1107819;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.DED_D_A_Code);
 }

 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKCDCPP)          AB1337678;
 PARAMETER(999);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Delete Tattoo Deduction) TYPE(DLTOBJ) FILE(PKCDCPP)            AB1107819;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.DED_D_A_Code);
 }

 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKDZREP)          AB1337679;
 PARAMETER(960);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Tattoo Defect     DO) TYPE(DLTOBJ) FILE(PKDZREP)           AB1197900;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.DF_Defect_Code);
 }

 EXECUTE FUNCTION(Upd Delete all for Co# RT) TYPE(RTVOBJ) FILE(PKB3CPP)          AB1337680;
 PARAMETER(960);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Delete Tattoo Scale Ticke) TYPE(DLTOBJ) FILE(PKB3CPP)          AB1113771;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.TST_Sequence_Number);
 }

}


