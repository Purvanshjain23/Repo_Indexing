// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPV1DFR
// ?Date: 14.08.2025 Time: 03:42:04
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?RMC E2845  10/25/13 Remove 2=reproc/proc
//?RMC S00470 Added 2=reproc/proc
EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('OMS');
PARAMETER(WRK.Company_Number);
PARAMETER(WRK.Warehouse_Code);
PARAMETER(WRK.Allow_Multi_Company);
PARAMETER(WRK.Default_Printer);
PARAMETER(WRK.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PGM.*Subfile mode = CND.Truncated
PGM.*Subfile_mode = 1;

//?USER: Initialize subfile control

// CTL.Load ID = PAR.PFS Load ID
CTL.Load_ID = PAR.PFS_Load_ID;

//?USER: Initialize subfile record from DBF record

// RCD.Quantity Adjustment 2 USR = CON.*ZERO
RCD.Quantity_Adjustment_2_USR = *ZERO;

// RCD.Weight Total 13.2     USR = CON.*ZERO
RCD.Weight_Total_13_2_USR = *ZERO;

EXECUTE FUNCTION(RTV Sum Qty and Wt    RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC1768596;
PARAMETER(PAR.PFS_Company_Number);
PARAMETER(PAR.PFS_Order_Number);
PARAMETER(RCD.PFS_Order_Line_Item_Nbr);
PARAMETER(1);
PARAMETER(RCD.Quantity_Adjustment_2_USR);
PARAMETER(RCD.Weight_Total_13_2_USR);
{
 //?USER: Initialize routine

 //?RMC  chg from access path: Co/Ord/Item/Prod Date to RTV
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Weight Total 13.2     USR = PAR.Weight Total 13.2     USR + DB1.Case Weight
 PAR.Weight_Total_13_2_USR = PAR.Weight_Total_13_2_USR + DB1.Case_Weight;

 // PAR.Quantity 7.0 USR = PAR.Quantity 7.0 USR + DB1.Case Quantity
 PAR.Quantity_7_0_USR = PAR.Quantity_7_0_USR + DB1.Case_Quantity;

}


//?CALC: Subfile control function fields

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(CTL.Company_Name_DRV);
PARAMETER(CTL.PFS_Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Process subfile record (Pre-confirm)

//?5=Display PFS Manifest Detail
CASE;

// IF RCD.*SFLSEL is *Display
IF RCD.*SFLSEL = '5'/'5';

EXECUTE FUNCTION(RTV 1st Whse/Country   RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1426676;
PARAMETER(PAR.PFS_Company_Number);
PARAMETER(PAR.PFS_Order_Number);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(LCL.Warehouse_Code);
PARAMETER(LCL.Country_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// Call program Dsp PFS Transactions  DF.
CALL PROGRAM(Dsp PFS Transactions  DF) ('PMW7DFR');
PARAMETER(RCD.PFS_Company_Number);
PARAMETER(RCD.PFS_Order_Number);
PARAMETER(RCD.PFS_Order_Line_Item_Nbr);
PARAMETER(RCD.PFS_Item_Code);
PARAMETER(LCL.Warehouse_Code);
PARAMETER(LCL.Order_Desc_Line_One);

ENDIF;

//?8=Display Item Definition
CASE;

// IF RCD.*SFLSEL is Option 8
IF RCD.*SFLSEL = '8'/'8';

// Call program Dsp Item Default      D3.
CALL PROGRAM(Dsp Item Default      D3) ('PPJKD3R');
PARAMETER('N');
PARAMETER(RCD.PFS_Item_Code);
PARAMETER(*ZERO);

ENDIF;

//?** Display Manifest Detail record
CASE;

// IF RCD.*SFLSEL is Option 9
IF RCD.*SFLSEL = '9'/'9';

// Call program DSP Manifest Detail   DF.
CALL PROGRAM(DSP Manifest Detail   DF) ('PPS4DFR');
PARAMETER(PAR.PFS_Company_Number);
PARAMETER(PAR.PFS_Order_Number);
PARAMETER(RCD.PFS_Order_Line_Item_Nbr);
PARAMETER(1);
PARAMETER(RCD.PFS_Item_Code);
PARAMETER(WRK.Warehouse_Code);
PARAMETER(WRK.U_M_Ordered);
PARAMETER(WRK.Quantity_Scheduled);
PARAMETER(WRK.Weight_Scheduled);
PARAMETER(RCD.PFS_Shipped_Quantity);
PARAMETER(RCD.PFS_Shipped_Weight);

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

//?USER: Final processing (Pre-confirm)

EXECUTE FUNCTION(RTV Sum Qty and Wt    RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC1768596;
PARAMETER(RCD.PFS_Company_Number);
PARAMETER(RCD.PFS_Order_Number);
PARAMETER(RCD.PFS_Order_Line_Item_Nbr);
PARAMETER(RCD.PFS_Substitution_Line_Nbr);
PARAMETER(RCD.Quantity_Adjustment_2_USR);
PARAMETER(RCD.Weight_Total_13_2_USR);
{
 //?USER: Initialize routine

 //?RMC  chg from access path: Co/Ord/Item/Prod Date to RTV
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Weight Total 13.2     USR = PAR.Weight Total 13.2     USR + DB1.Case Weight
 PAR.Weight_Total_13_2_USR = PAR.Weight_Total_13_2_USR + DB1.Case_Weight;

 // PAR.Quantity 7.0 USR = PAR.Quantity 7.0 USR + DB1.Case Quantity
 PAR.Quantity_7_0_USR = PAR.Quantity_7_0_USR + DB1.Case_Quantity;

}


//?USER: Process command keys

CASE;

// IF CTL.*CMD key is *Refresh
IF CTL.*CMD_key = '05';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

