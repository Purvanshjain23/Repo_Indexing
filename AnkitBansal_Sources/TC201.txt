      *****************  RPG PROGRAM HEADING  ************************
     h option(*SRCSTMT:*NODEBUGIO)
      *
      * PROGRAM:     TC201 - Item
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     08/18/11
      *
      * FUNCTION: This program builds the Item Master file for 3C.
      *
      *           It processes all records in the Company/Item file.
      *           So, there will be a Seaboard record and a Triumph record
      *           for each Item that the respective company produces.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * Date      Programmer
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fcabzrel1  if   e           k disk
      *   Company/item
      *
      *
     Fpocnrel3  if   e           k disk
      *   Production line/Item structure
      *
      *
     Ftcp201    o    e           k disk
      *    3C: Item
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *---------------------------------------------------------------
      * Standalone fields
      *---------------------------------------------------------------
      *
     D wkcono          s                   like(cnaic3) inz(360)
      *
      ****************************************************************
      * Data Structures
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * Mainline
      ***************************************************************************************
      *
      * Process all records in the Company Item file:
      *  1) Finished Good or
      *  2) Raw Material or
      *  3) Work in Process
      *  4) Packaging Supplies
      *
     C     *loval        setll     cabzrel1
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      cabzrel1                               90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   z-add     bzaic3        itaic3
     C                   z-add     bzhgcd        ithgcd
      *
     C                   move      bzn0cd        itn0cd
     C                   move      bzavna        itavna
     C                   move      bzawna        itawna
     C                   move      bzhicd        ithicd
     C                   move      bzadcd        itadcd
     C                   move      bzfzst        itfzst
     C                   move      bzavst        itavst
      *
     C                   z-add     bzczwg        itczwg
     C                   z-add     bzc0wg        itc0wg
     C                   z-add     bzrinb        itrinb
     C                   z-add     bzrhnb        itrhnb
     C                   z-add     bzrgnb        itrgnb
      *
     C                   z-add     bzchtm        itchtm
      *
      * Item TYpe Code
     C                   move      bzn0cd        itn0cd
     C                   select
     C                   when      itn0cd = 'FG'
     C                   eval      itn0cdds = 'Finished Good'
      *
     C                   when      itn0cd = 'RM'
     C                   eval      itn0cdds = 'Raw Material'
      *
     C                   when      itn0cd = 'WP'
     C                   eval      itn0cdds = 'WIP'
      *
     C                   when      itn0cd = 'PS'
     C                   eval      itn0cdds = 'Packaging/Supplies'
     C                   endsl
      * Package Type
     C                   move      bzx4st        itx4st
     C                   select
     C                   when      itx4st = 'B'
     C                   eval      itx4stds = 'Box'
      *
     C                   when      itx4st = 'O'
     C                   eval      itx4stds = 'Other'
      *
     C                   when      itx4st = 'P'
     C                   eval      itx4stds = 'Package'
     C                   endsl
      *
      *
      * Base/Conv/Loss
     C                   move      bzqzcd        itqzcd
     C                   select
     C                   when      itqzcd = 'B'
     C                   eval      itqzcdds = 'Base'
      *
     C                   when      itqzcd = 'C'
     C                   eval      itqzcdds = 'Converted'
      *
     C                   when      itqzcd = 'L'
     C                   eval      itqzcdds = 'Loss'
     C                   endsl
      *
      * Variety/Rendered/Cut
     C                   move      bzxwst        itxwst
     C                   select
     C                   when      itxwst = 'V'
     C                   eval      itxwstds = 'Variety'
      *
     C                   when      itxwst = 'R'
     C                   eval      itxwstds = 'Rendered'
      *
     C                   when      itxwst = 'C'
     C                   eval      itxwstds = 'Cut'
     C                   endsl
      *
     C                   move      bzvmst        itvmst
      *
     C                   z-add     bzswgh        itswgh
     C                   z-add     bzpphe        itpphe
     C                   move      bzaicd        itaicd
     C                   z-add     bzaiwg        itaiwg
     C                   z-add     bzcsnb        itcsnb
     C                   z-add     bza3wg        ita3wg
     C                   z-add     bzchnb        itchnb
      *
     C                   move      bzx5st        itx5st
      *
     C                   z-add     bzblpr        itblpr
     C                   z-add     bzbmpr        itbmpr
      *
     C                   move      bzq8cd        itq8cd
     C                   move      bzxrcd        itxrcd
      *
     C                   move      bzpcct        itpcct
     C                   z-add     bzbdnb        itbdnb
     C                   z-add     bzbjnb        itbjnb
      *
      * Export/Domestic
     C                   move      bzsust        itsust
     C                   select
     C                   when      itsust = 'E'
     C                   eval      itsustds = 'Export'
      *
     C                   when      itsust = 'D'
     C                   eval      itsustds = 'Domestic'
     C                   endsl
      *
     C                   move      bzsvst        itsvst
     C                   move      bzs4st        its4st
     C                   move      bzs6st        its6st
     C                   move      bztcst        ittcst
      *  Exempt Code
     C                   move      bzs9st        its9st
      *
     C                   select
     C                   when      its9st = 'EP'
     C                   eval      its9stds = 'Exempt Product'
      *
     C                   when      its9st = 'NE'
     C                   eval      its9stds = 'Not Exempt'
     C                   endsl
      *
     C                   move      bzx6st        itx6st
     C                   move      bzlncd        itlncd
     C                   move      bzlrcd        itlrcd
      *
      * TF CoOwnership Status
     C                   move      bzp3st        itp3st
      *
     C                   select
     C                   when      itp3st = 'N'
     C                   eval      itp3stds = 'Non CoOwned'
      *
     C                   when      itp3st = 'S'
     C                   eval      itp3stds = 'SBD Produced CoOwned'
      *
     C                   when      itp3st = 'T'
     C                   eval      itp3stds = 'TF Produced CoOwned'
     C                   endsl
      *
     C                   move      bzvsst        itvsst
      *
      * Retrieve values from Production Line/Item Structure file:
      *    1) Production Department
      *    2) Production Line
      *    3) WIP Usage Department Code
      *    4) WIP Usage Production Line Code
      * Key: Item Structure Type/Group/Class/Company
      *
     C     key01         chain     pocnrel3                           92
     C                   if        *in92 = *off
     C                   move      cnr3cd        itr3cd
     C                   move      cnewaa        itewaa
     C                   move      cne1aa        ite1aa
     C                   move      cnewaa        itewaa
     C                   else
     C                   move      bzr3cd        itr3cd
     C                   endif
      *
     C                   write     itrec
     C                   clear                   itrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    itrgnb
     C                   kfld                    itrhnb
     C                   kfld                    itrinb
     C                   kfld                    wkcono
      *
     C                   endsr
      /EJECT
