     H/TITLE Prt Item Str/Items    PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by  : 2E  Version:  1181
     H* Function type : Print file
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISLBUSE
     H* Date          : 08/09/07  Time  : 16:20:49
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FCABZRELJIF  E           K        DISK
      * RSQ : Company Item              Co/Typ/Grp/Cls/Itm
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FOMFAREL1IF  E           K        DISK
      * RTV : Item Structure Class      Retrieval index
      *
     FOME9REL0IF  E           K        DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOME8REL0IF  E           K        DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FPDJIREL0IF  E           K        DISK
      * RTV : Item Category             Retrieval index
      *
     FPPAMREL1IF  E           K        DISK
      * RTV : TF Classification         Retrieval index
      *
     FPOCNREL1IF  E           K        DISK
      * RTV : Production Line/Item Str  Retrieval index
      *
     FPOU2PFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Item Str/Items    PF  Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * N :  Application Code
     I                                        1   6 P1DNCD
     IP2PARM      DS
      * FLD: Company Item
      * I : RST Company Number
     I                                    P   1   20P2AIC3
      * I :  Item Structure Class Code
     I                                    P   3   40P2RINB
      * I :  Item Structure Group Code
     I                                    P   5   60P2RHNB
      * I :  Item Structure Type Code
     I                                    P   7   80P2RGNB
      * I :  Item Type Code
     I                                        9  11 P2N0CD
      * I :  Base/Conv/Loss Item
     I                                       12  13 P2QZCD
      * I :  Credit Item Status
     I                                       14  14 P2VMST
      * I :  G/L Sub Code
     I                                       15  17 P2SYCD
      * I :  Print on Realization Rpt
     I                                       18  19 P2X6ST
      * I :  Piece Count Item
     I                                       20  20 P2PCCT
      * I :  Value Added Sts
     I                                       21  21 P2S6ST
      * I :  Item TF Classification
     I                                       22  24 P2TCST
      * I :  Record Status
     I                                       25  25 P2VSST
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P2AIC3    PARM           WP0001  30       Company Number
     C           P2RINB    PARM           WP0002  30       Item Structure
     C           P2RHNB    PARM           WP0003  30       Item Structure
     C           P2RGNB    PARM           WP0004  30       Item Structure
     C           P2N0CD    PARM           WP0005  3        Item Type Code
     C           P2QZCD    PARM           WP0006  2        Base/Conv/Loss
     C           P2VMST    PARM           WP0007  1        Credit Item Sta
     C           P2SYCD    PARM           WP0008  3        G/L Sub Code
     C           P2X6ST    PARM           WP0009  2        Print on Realiz
     C           P2PCCT    PARM           WP0010  1        Piece Count Ite
     C           P2S6ST    PARM           WP0011  1        Value Added Sts
     C           P2TCST    PARM           WP0012  3        Item TF Classif
     C           P2VSST    PARM           WP0013  1        Record Status
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Item Str/Items    PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$FENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Item Str/Items    PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN BZAIC3    WQKA01           Company Number
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           Company Number
      * Setup key
     C                     Z-ADDP2AIC3    WQKA01           Company Number
      * Establish starting position
     C           KRSA      SETLL@BZREB6                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Item Structure
     C                     MOVEL'Y'       W0AL02  1        Item Structure
     C                     MOVEL'Y'       W0AL03  1        Item Structure
     C                     MOVEL'Y'       W0AL04  1        Item Code
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $BAIC3           Company Number
     C                     MOVEL*BLANK    $BSQTX           Company Name DR
     C                     Z-ADD*ZERO     $BRGNB           Item Structure
     C                     MOVEL*BLANK    $BQXNA           Item Str Type D
     C                     Z-ADD*ZERO     $BRHNB           Item Structure
     C                     MOVEL*BLANK    $BQWNA           Item Str Group
     C                     Z-ADD*ZERO     $BRINB           Item Structure
     C                     MOVEL*BLANK    $BQVNA           Item Str Class
     C                     MOVEL*BLANK    $BN0CD           Item Type Code
     C                     MOVEL*BLANK    $BGUTX           Condition Name
     C                     MOVEL*BLANK    $BQZCD           Base/Conv/Loss
     C                     MOVEL*BLANK    $BHLTX           Condition Desc.
     C                     MOVEL*BLANK    $BSYCD           G/L Sub Code
     C                     MOVEL*BLANK    $BQYNA           G/L Sub Code De
     C                     MOVEL*BLANK    $BTCST           Item TF Classif
     C                     MOVEL*BLANK    $BQ0NA           TF Classificati
     C                     MOVEL*BLANK    $BRBCD           Item Level
     C                     MOVEL*BLANK    $BAUNA           Description
     C                     MOVEL*BLANK    $BVMST           Credit Item Sta
     C                     MOVEL*BLANK    $BHMTX           Condition Desc.
     C                     MOVEL*BLANK    $BS6ST           Value Added Sts
     C                     MOVEL*BLANK    $BHPTX           Condition Desc.
     C                     MOVEL*BLANK    $BX6ST           Print on Realiz
     C                     MOVEL*BLANK    $BHNTX           Condition Desc.
     C                     MOVEL*BLANK    $BPCCT           Piece Count Ite
     C                     MOVEL*BLANK    $BHOTX           Condition Desc.
     C                     MOVEL*BLANK    $BVSST           Record Status
     C                     MOVEL*BLANK    $BHQTX           Condition Desc.
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDBZAIC3    $CAIC3           Company Number
     C                     Z-ADDBZRGNB    $CRGNB           Item Structure
     C                     Z-ADDBZRHNB    $CRHNB           Item Structure
     C                     Z-ADDBZRINB    $CRINB           Item Structure
     C                     MOVELBZR3CD    $CR3CD           Department Code
     C                     MOVEL*BLANK    $CEWAA           Production Line
     C                     MOVEL*BLANK    $CE2AA           Usage Departmen
     C                     MOVEL*BLANK    $CE3AA           Usage Productio
     C                     MOVELBZN0CD    $CN0CD           Item Type Code
     C                     MOVELBZQZCD    $CQZCD           Base/Conv/Loss
     C                     MOVELBZSYCD    $CSYCD           G/L Sub Code
     C                     MOVELBZTCST    $CTCST           Item TF Classif
     C                     MOVELBZRBCD    $CRBCD           Item Level
     C                     MOVELBZVMST    $CVMST           Credit Item Sta
     C                     MOVELBZS6ST    $CS6ST           Value Added Sts
     C                     MOVELBZX6ST    $CX6ST           Print on Realiz
     C                     MOVELBZPCCT    $CPCCT           Piece Count Ite
     C                     Z-ADDBZBDNB    $CBDNB           Pieces Per Bag
     C                     Z-ADDBZBJNB    $CBJNB           Bags Per Unit
     C                     MOVELBZVSST    $CVSST           Record Status
     C                     Z-ADDBZHGCD    $CHGCD           Item Code
     C                     MOVELBZAVNA    $CAVNA           Description Lin
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDBZAIC3    $DAIC3           Company Number
     C                     Z-ADDBZRGNB    $DRGNB           Item Structure
     C                     MOVEL*BLANK    $DDCTX           Item Structure
     C                     Z-ADDBZRHNB    $DRHNB           Item Structure
     C                     MOVEL*BLANK    $DDDTX           Item Structure
     C                     Z-ADDBZRINB    $DRINB           Item Structure
     C                     MOVEL*BLANK    $DDETX           Item Structure
     C                     MOVELBZR3CD    $DR3CD           Department Code
     C                     MOVEL*BLANK    $DEWAA           Production Line
     C                     MOVEL*BLANK    $DE2AA           Usage Departmen
     C                     MOVEL*BLANK    $DE3AA           Usage Productio
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDBZAIC3    $EAIC3           Company Number
     C                     MOVELBZN0CD    $EN0CD           Item Type Code
     C                     MOVELBZQZCD    $EQZCD           Base/Conv/Loss
     C                     MOVELBZSYCD    $ESYCD           G/L Sub Code
     C                     MOVELBZTCST    $ETCST           Item TF Classif
     C                     MOVELBZRBCD    $ERBCD           Item Level
     C                     MOVELBZVMST    $EVMST           Credit Item Sta
     C                     MOVELBZS6ST    $ES6ST           Value Added Sts
     C                     MOVELBZX6ST    $EX6ST           Print on Realiz
     C                     MOVELBZPCCT    $EPCCT           Piece Count Ite
     C                     Z-ADDBZBDNB    $EBDNB           Pieces Per Bag
     C                     Z-ADDBZBJNB    $EBJNB           Bags Per Unit
     C                     MOVELBZVSST    $EVSST           Record Status
     C                     Z-ADDBZHGCD    $EHGCD           Item Code
     C                     MOVELBZAVNA    $EAVNA           Description Lin
     C                     MOVELBZAWNA    $EAWNA           Description Lin
     C                     MOVELBZL7NA    $EL7NA           Item Label Line
     C                     MOVELBZL8NA    $EL8NA           Item Label Line
     C                     MOVELBZL6NA    $EL6NA           Item Label Line
     C                     MOVELBZMFNA    $EMFNA           Item Label Line
     C                     MOVELBZADCD    $EADCD           U/M - Primary
     C                     Z-ADDBZAWPC    $EAWPC           Conversion Fact
     C                     MOVELBZLXST    $ELXST           Operation Facto
     C                     MOVELBZAECD    $EAECD           U/M - Second
     C                     Z-ADDBZAXPC    $EAXPC           Conversion Fact
     C                     MOVELBZLYST    $ELYST           Operation Facto
     C                     MOVELBZAFCD    $EAFCD           U/M - Third
     C                     MOVELBZAICD    $EAICD           U/M - Pricing
     C                     Z-ADDBZAIWG    $EAIWG           Unit Weight
     C                     MOVELBZHICD    $EHICD           Quality Level
     C                     MOVELBZFZST    $EFZST           Production Date
     C                     MOVELBZAVST    $EAVST           Catch Weight St
     C                     Z-ADDBZCZWG    $ECZWG           Minimum Weight
     C                     Z-ADDBZC0WG    $EC0WG           Maximum Weight
     C                     Z-ADDBZURTN    $EURTN           Number Cases On
     C                     Z-ADDBZAJC8    $EAJC8           Vendor - Item D
     C                     Z-ADDBZRINB    $ERINB           Item Structure
     C                     Z-ADDBZRHNB    $ERHNB           Item Structure
     C                     Z-ADDBZRGNB    $ERGNB           Item Structure
     C                     MOVELBZLNCD    $ELNCD           Default Commod
     C                     Z-ADDBZTFNB    $ETFNB           Transportation
     C                     MOVELBZX4ST    $EX4ST           Package Type Co
     C                     Z-ADDBZTMVA    $ETMVA           Maximum Audit V
     C                     Z-ADDBZTNVA    $ETNVA           Minimum Audit V
     C                     Z-ADDBZBLPR    $EBLPR           Market Overage
     C                     Z-ADDBZBMPR    $EBMPR           Standard Overag
     C                     MOVELBZLRCD    $ELRCD           Commodity Price
     C                     MOVELBZU9ST    $EU9ST           Item Pricing Op
     C                     Z-ADDBZCMCO    $ECMCO           Item Pricing Co
     C                     MOVELBZQ1CD    $EQ1CD           Default Warehou
     C                     MOVELBZQ8CD    $EQ8CD           Price Method De
     C                     Z-ADDBZCHTM    $ECHTM           Fresh Chilling
     C                     MOVELBZXWST    $EXWST           Variety/Rendere
     C                     MOVELBZXXST    $EXXST           Case Ready Stat
     C                     Z-ADDBZSWGH    $ESWGH           Std Weight/Head
     C                     Z-ADDBZPPHE    $EPPHE           Pieces Per Head
     C                     MOVELBZR3CD    $ER3CD           Department Code
     C                     MOVELBZSDCD    $ESDCD           Group for Packa
     C                     Z-ADDBZICN1    $EICN1           Item Category N
     C                     MOVELBZSVCD    $ESVCD           MTO Code
     C                     Z-ADDBZICN2    $EICN2           Item Category N
     C                     MOVELBZSWCD    $ESWCD           Item Category C
     C                     Z-ADDBZV2NB    $EV2NB           Item Category N
     C                     MOVELBZSXCD    $ESXCD           Item Category C
     C                     Z-ADDBZITCN    $EITCN           Item Category N
     C                     Z-ADDBZITC5    $EITC5           Item Category N
     C                     MOVELBZSZCD    $ESZCD           Item Category C
     C                     Z-ADDBZICN6    $EICN6           Item Category N
     C                     MOVELBZS0CD    $ES0CD           Item Category C
     C                     Z-ADDBZICN7    $EICN7           Item Category N
     C                     MOVELBZS1CD    $ES1CD           Item Category C
     C                     Z-ADDBZICN8    $EICN8           Item Category N
     C                     MOVELBZS2CD    $ES2CD           Item Category C
     C                     Z-ADDBZICN9    $EICN9           Item Category N
     C                     MOVELBZS3CD    $ES3CD           Item Category C
     C                     Z-ADDBZICN0    $EICN0           Item Category N
     C                     MOVELBZS4CD    $ES4CD           Item Category C
     C                     Z-ADDBZSFNB    $ESFNB           Pallet Tare Wei
     C                     Z-ADDBZA3WG    $EA3WG           Misc Tare Weigh
     C                     Z-ADDBZSJNB    $ESJNB           CI Unused Numbe
     C                     MOVELBZLLCD    $ELLCD           Packaging Code
     C                     MOVELBZLMCD    $ELMCD           Grade Code
     C                     MOVELBZP3ST    $EP3ST           TF Co-Ownership
     C                     Z-ADDBZSKNB    $ESKNB           Agrimetrics gro
     C                     Z-ADDBZSLNB    $ESLNB           Agrimetrics pac
     C                     Z-ADDBZSMNB    $ESMNB           Agrimetrics gra
     C                     MOVELBZP4ST    $EP4ST           PA Base Avail R
     C                     Z-ADDBZCFNB    $ECFNB           PM Pounds per H
     C                     Z-ADDBZCGNB    $ECGNB           PM Line Time Ef
     C                     Z-ADDBZILNB    $EILNB           PM % 2nds Facto
     C                     Z-ADDBZCHNB    $ECHNB           Use/Freeze/Sell
     C                     Z-ADDBZCINB    $ECINB           PM Batch Size
     C                     Z-ADDBZCJNB    $ECJNB           PM Lot Size
     C                     Z-ADDBZCMNB    $ECMNB           Partial Item Co
     C                     Z-ADDBZCNNB    $ECNNB           WIP Item Code
     C                     Z-ADDBZCRNB    $ECRNB           WIP Reject Code
     C                     Z-ADDBZCSNB    $ECSNB           Std Costing Uni
     C                     Z-ADDBZCVNB    $ECVNB           FP Std Green We
     C                     Z-ADDBZCWNB    $ECWNB           PM Standard LBS
     C                     Z-ADDBZCXNB    $ECXNB           PM Raw Meat LBS
     C                     Z-ADDBZCZNB    $ECZNB           PM Formula LBS/
     C                     Z-ADDBZC0NB    $EC0NB           PM Finished LBS
     C                     MOVELBZN1CD    $EN1CD           SH Unused (was
     C                     Z-ADDBZB4NB    $EB4NB           PM R/M Type Cod
     C                     Z-ADDBZB5NB    $EB5NB           PM Line Number
     C                     MOVELBZX5ST    $EX5ST           Seconds Item
     C                     MOVELBZX7ST    $EX7ST           Unit Weight Cha
     C                     MOVELBZSUST    $ESUST           Export/Domestic
     C                     MOVELBZSVST    $ESVST           Print On Schedu
     C                     MOVELBZSYST    $ESYST           Fresh Inv Alloc
     C                     MOVELBZSZST    $ESZST           Fresh Sched As
     C                     MOVELBZS1ST    $ES1ST           Frozen Sched As
     C                     MOVELBZXRCD    $EXRCD           Primal Group Co
     C                     MOVELBZXTCD    $EXTCD           UPC Code 1
     C                     MOVELBZXUCD    $EXUCD           UPC Code 2
     C                     Z-ADDBZF5WG    $EF5WG           Item Target Pri
     C                     Z-ADDBZF6WG    $EF6WG           Minimum Piece W
     C                     Z-ADDBZF7WG    $EF7WG           Maximum Piece W
     C                     Z-ADDBZBLNB    $EBLNB           Seaboard Equiva
     C                     Z-ADDBZBNNB    $EBNNB           Production Qty
     C                     MOVELBZS2ST    $ES2ST           Scheduling Posi
     C                     MOVELBZS4ST    $ES4ST           Sold 100% Froze
     C                     MOVELBZS5ST    $ES5ST           Maximum Shifts
     C                     MOVELBZS8ST    $ES8ST           Label Type
     C                     MOVELBZS9ST    $ES9ST           Item TF Exempt
     C                     MOVELBZTDST    $ETDST           Default Workcen
     C                     MOVELBZUVST    $EUVST           EDI Status 1
     C                     MOVELBZUWST    $EUWST           EDI Status 2
     C                     MOVELBZUXST    $EUXST           EDI Status 3
     C                     Z-ADDBZAATM    $EAATM           Job Time
     C                     MOVELBZAYNA    $EAYNA           User Id
     C                     MOVELBZA0NA    $EA0NA           Job Name
     C                     Z-ADDBZAXDT    $EAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN BZAIC3    WZA001           Company Number
     C                     Z-ADDBZAIC3    WZA001
     C           *LIKE     DEFN BZRGNB    WZA002           Item Structure
     C                     Z-ADDBZRGNB    WZA002
     C           *LIKE     DEFN BZRHNB    WZA003           Item Structure
     C                     Z-ADDBZRHNB    WZA003
     C           *LIKE     DEFN BZRINB    WZA004           Item Structure
     C                     Z-ADDBZRINB    WZA004
     C           *LIKE     DEFN BZHGCD    WZA005           Item Code
     C                     Z-ADDBZHGCD    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@BZREB6                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Replace Item Level with TF Classification
      * SEL: Item Structure Type
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Item Structure Type Code is Entered
      *   |- c2    : PAR.Item Structure Type Code NE DB1.Item Structure T
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2RGNB    IFNE *ZERO                      *IF
     C           P2RGNB    IFNE BZRGNB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * SEL: Item Structure Group
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Item Structure Group Code is Entered
      *   |- c2    : PAR.Item Structure Group Code NE DB1.Item Structure
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2RHNB    IFNE *ZERO                      *IF
     C           P2RHNB    IFNE BZRHNB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * SEL: Item Structure Class
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Item Structure Class Code is Entered
      *   |- c2    : PAR.Item Structure Class Code NE DB1.Item Structure
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2RINB    IFNE *ZERO                      *IF
     C           P2RINB    IFNE BZRINB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * SEL: Item Type Code
      * CASE:
      *  - c1 OR (c2 AND c32)
      *   |- c1    : DB1.Item Type Code is Packaging and Supplies
      *   |- c2    : DB1.Item Type Code NE PAR.Item Type Code
      *   |- c32   : PAR.Item Type Code is Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           BZN0CD    IFEQ 'PS'                       *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           BZN0CD    IFNE P2N0CD                     *IF
     C           P2N0CD    IFNE *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * SEL: Base/Converted/Loss
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Base/Conv/Loss Item is Valid Entries
      *   |- c2    : PAR.Base/Conv/Loss Item NE DB1.Base/Conv/Loss Item
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2QZCD    IFEQ 'B'                        *IF
     C           P2QZCD    OREQ 'C'
     C           P2QZCD    OREQ 'F'
     C           P2QZCD    OREQ 'L'
     C           P2QZCD    IFNE BZQZCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * SEL: G/L Sub Code
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.G/L Sub Code is Entered
      *   |- c2    : DB1.G/L Sub Code NE PAR.G/L Sub Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2SYCD    IFGT *BLANK                     *IF
     C           BZSYCD    IFNE P2SYCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * SEL: Item TF Classfication
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Item TF Classification is Entered
      *   |- c2    : PAR.Item TF Classification NE DB1.Item TF Classifica
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2TCST    IFNE *BLANK                     *IF
     C           P2TCST    IFNE BZTCST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * SEL: Credit Item Status
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Credit Item Status is yes
      *   |- c2    : DB1.Credit Item Status NE PAR.Credit Item Status
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2VMST    IFEQ 'Y'                        *IF
     C           BZVMST    IFNE P2VMST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * SEL: Value Added Sts
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Value Added Sts is yes
      *   |- c2    : DB1.Value Added Sts NE PAR.Value Added Sts
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2S6ST    IFEQ 'Y'                        *IF
     C           BZS6ST    IFNE P2S6ST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * SEL: Print on Realization Sts
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Print on Realization Rpt is Yes
      *   |- c2    : DB1.Print on Realization Rpt NE PAR.Print on Realiza
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2X6ST    IFEQ 'Y'                        *IF
     C           BZX6ST    IFNE P2X6ST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * SEL: Piece count item
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : DB1.Piece Count Item NE PAR.Piece Count Item
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           BZPCCT    IFNE P2PCCT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * SEL: Record Status
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Record Status is Valid Entries
      *   |- c2    : DB1.Record Status NE PAR.Record Status
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2VSST    IFEQ 'A'                        *IF
     C           P2VSST    OREQ 'D'
     C           P2VSST    OREQ 'I'
     C           BZVSST    IFNE P2VSST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Item Structure
     C                     MOVEL*BLANK    W0AL02  1        Item Structure
     C                     MOVEL*BLANK    W0AL03  1        Item Structure
     C                     MOVEL*BLANK    W0AL04  1        Item Code
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Item Structure
     C                     MOVEL'Y'       W0AL02  1        Item Structure
     C                     MOVEL'Y'       W0AL03  1        Item Structure
     C                     MOVEL'Y'       W0AL04  1        Item Code
     C                     ELSE
      * Next record - Detect level breaks
     C           BZAIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           BZRGNB    IFNE WZA002                     Item Structure
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           BZRHNB    IFNE WZA003                     Item Structure
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           BZRINB    IFNE WZA004                     Item Structure
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           BZHGCD    IFNE WZA005                     Item Code
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Item Str/Items    PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Item Str/Items    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
      * 1PG = PAR By name
     C                     Z-ADDP2AIC3    $BAIC3           Company Number
     C                     Z-ADDP2RGNB    $BRGNB           Item Structure
     C                     Z-ADDP2RHNB    $BRHNB           Item Structure
     C                     Z-ADDP2RINB    $BRINB           Item Structure
     C                     MOVELP2N0CD    $BN0CD           Item Type Code
     C                     MOVELP2QZCD    $BQZCD           Base/Conv/Loss
     C                     MOVELP2SYCD    $BSYCD           G/L Sub Code
     C                     MOVELP2TCST    $BTCST           Item TF Classif
     C                     MOVELP2VMST    $BVMST           Credit Item Sta
     C                     MOVELP2S6ST    $BS6ST           Value Added Sts
     C                     MOVELP2X6ST    $BX6ST           Print on Realiz
     C                     MOVELP2PCCT    $BPCCT           Piece Count Ite
     C                     MOVELP2VSST    $BVSST           Record Status
     C                     MOVEL*BLANK    $BSQTX           Company Name DR
      * Company Name DRV
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SCRVGN
      * Item Structure Class
      * CASE: 1PG.Item Structure Class Code is Entered
     C           $BRINB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    $BQVNA           Item Str Class
      * Item Str Class Desc DRV
      * Rtv Item Class Desc    RT - Item Structure Class  * 
     C                     EXSR SDRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $BQVNA           Item Str Class
     C                     MOVEL'*All'    $BQVNA           Item Str Class
     C                     END                             *FI
      * Item Structure Group
      * CASE: PAR.Item Structure Group Code is Entered
     C           P2RHNB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    $BQWNA           Item Str Group
      * Item Str Group Desc DRV
      * Rtv Group Desc - Item Structure Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BRHNB    WL0001           Item Structure
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    $BQWNA    P      Item Structure
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $BQWNA           Item Str Group
     C                     MOVEL'*All'    $BQWNA           Item Str Group
     C                     END                             *FI
      * Item Structure Type
      * CASE: 1PG.Item Structure Type Code is Entered
     C           $BRGNB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    $BQXNA           Item Str Type D
      * Item Str Type Desc DRV
      * Rtv Type Description   RT - Item Structure Type  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BRGNB    WL0003           Item Structure
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    $BQXNA    P      Item Structure
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $BQXNA           Item Str Type D
     C                     MOVEL'*All'    $BQXNA           Item Str Type D
     C                     END                             *FI
      * G/L Sub Code
      * CASE: 1PG.G/L Sub Code is Entered
     C           $BSYCD    IFGT *BLANK                     *IF
     C                     MOVEL*BLANK    $BQYNA           G/L Sub Code De
      * G/L Sub Code Desc DRV
      * Rtv Item Ctg Desc     RT - Item Category  * 
     C                     EXSR SGRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $BQYNA           G/L Sub Code De
     C                     MOVEL'*All'    $BQYNA           G/L Sub Code De
     C                     END                             *FI
      * TF Classification
      * CASE: 1PG.Item TF Classification is Entered
     C           $BTCST    IFNE *BLANK                     *IF
      * Rtv TF Class Desc     RT - TF Classification  * 
     C                     EXSR SHRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $BQ0NA           TF Classificati
     C                     MOVEL'*All'    $BQ0NA           TF Classificati
     C                     END                             *FI
      * Base/Converted/Loss Item
      * CASE: 1PG.Base/Conv/Loss Item is Blank
     C           $BQZCD    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $BHLTX           Condition Desc.
     C                     MOVEL'*All'    $BHLTX           Condition Desc.
     C                     ELSE
      * CASE: *OTHERWISE
      * 1PG.Condition Desc. 1  USR = Condition name of 1PG.Base/Conv/Loss
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1294120   Y2LSNO  70       List number
     C                     PARM $BQZCD    W0INVL 25        Base/Conv/Loss
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     END                             *FI
      * Credit Item Status
      * CASE: 1PG.Credit Item Status is blank
     C           $BVMST    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $BHMTX           Condition Desc.
     C                     MOVEL'*All'    $BHMTX           Condition Desc.
     C                     ELSE
      * CASE: *OTHERWISE
      * 1PG.Condition Desc. 2  USR = Condition name of 1PG.Credit Item St
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100273   Y2LSNO  70       List number
     C                     PARM $BVMST    W0INVL 25        Credit Item Sta
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHMTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     END                             *FI
      * Print on Realization
      * CASE: 1PG.Print on Realization Rpt EQ WRK.BLANK
     C           $BX6ST    IFEQ WUGSTX                     *IF
     C                     MOVEL*BLANK    $BHNTX           Condition Desc.
     C                     MOVEL'*All'    $BHNTX           Condition Desc.
     C                     ELSE
      * CASE: *OTHERWISE
      * 1PG.Condition Desc. 3  USR = Condition name of 1PG.Print on Reali
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1386664   Y2LSNO  70       List number
     C                     PARM $BX6ST    W0INVL 25        Print on Realiz
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHNTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     END                             *FI
      * Piece Count Item
      * CASE: 1PG.Piece Count Item is blank
     C           $BPCCT    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $BHOTX           Condition Desc.
     C                     MOVEL'*ALL'    $BHOTX           Condition Desc.
     C                     ELSE
      * CASE: *OTHERWISE
      * 1PG.Condition Desc. 4  USR = Condition name of 1PG.Piece Count It
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100273   Y2LSNO  70       List number
     C                     PARM $BPCCT    W0INVL 25        Piece Count Ite
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHOTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     END                             *FI
      * Value Added Sts
      * CASE: 1PG.Value Added Sts is blank
     C           $BS6ST    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $BHPTX           Condition Desc.
     C                     MOVEL'*ALL'    $BHPTX           Condition Desc.
     C                     ELSE
      * CASE: *OTHERWISE
      * 1PG.Condition Desc. 5  USR = Condition name of 1PG.Value Added St
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100273   Y2LSNO  70       List number
     C                     PARM $BS6ST    W0INVL 25        Value Added Sts
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHPTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     END                             *FI
      * Item type code
      * CASE: 1PG.Item Type Code is Blank
     C           $BN0CD    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $BGUTX           Condition Name
     C                     MOVEL'*ALL'    $BGUTX           Condition Name
     C                     ELSE
      * CASE: *OTHERWISE
      * 1PG.Condition Name USR = Condition name of 1PG.Item Type Code
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1294118   Y2LSNO  70       List number
     C                     PARM $BN0CD    W0INVL 25        Item Type Code
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BGUTX    PARM           W0CNNM 25        Condition Name
      *
     C                     END                             *FI
      * Record Status
      * CASE: 1PG.Record Status is *blank
     C           $BVSST    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $BHQTX           Condition Desc.
     C                     MOVEL'*ALL'    $BHQTX           Condition Desc.
     C                     ELSE
      * CASE: *OTHERWISE
      * 1PG.Condition Desc. 6  USR = Condition name of 1PG.Record Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1255478   Y2LSNO  70       List number
     C                     PARM $BVSST    W0INVL 25        Record Status
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHQTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$B1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of Prt Item Str/Items    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $CHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$CHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VCHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP00
     C                     END                             FI
      * Print Item Structure Type Code of Prt Item Str/Items    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Item Structure Group Code of Prt Item Str/Items    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Item Structure Class Code of Prt Item Str/Items    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Structure Class Code format
      * Rtv Type Description   RT - Item Structure Type  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DRGNB    WL0003           Item Structure
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    $DDCTX    P      Item Structure
      * Rtv Group Desc - Item Structure Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DRHNB    WL0001           Item Structure
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    $DDDTX    P      Item Structure
      * Rtv Class Desc - Item Structure Class  * 
     C                     EXSR SIRVGN
      * Rtv Dept/Line         RT - Production Line/Item Str  * 
     C                     EXSR SJRVGN
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : CUR.Item Structure Type Code EQ LCL.Item Structure T
      *   |- c2    : CUR.Item Structure Group Code EQ LCL.Item Structure
      *   |- c3    : CUR.Item Structure Class Code EQ LCL.Item Structure
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $DRGNB    IFEQ YL0001                     *IF
     C           $DRHNB    IFEQ YL0002                     *IF
     C           $DRINB    IFEQ YL0003                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADD*ZERO     $DRGNB           Item Structure
     C                     MOVEL*BLANK    $DDCTX           Item Structure
     C                     Z-ADD*ZERO     $DRHNB           Item Structure
     C                     MOVEL*BLANK    $DDDTX           Item Structure
     C                     Z-ADD*ZERO     $DRINB           Item Structure
     C                     MOVEL*BLANK    $DDETX           Item Structure
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDBZRGNB    $DRGNB           Item Structure
     C                     Z-ADDBZRGNB    YL0001           Item Structure
     C                     Z-ADDBZRHNB    $DRHNB           Item Structure
     C                     Z-ADDBZRHNB    YL0002           Item Structure
     C                     Z-ADDBZRINB    $DRINB           Item Structure
     C                     Z-ADDBZRINB    YL0003           Item Structure
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Item Code of Prt Item Str/Items    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of Prt Item Str/Items    PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $EHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$EHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VEHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VEHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$ECOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$EDTLRCD
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Item Str/Items    PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  14        W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt Item Str/Items    PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  5         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Type Code of Prt Item Str/Items    PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Group Code of Prt Item Str/Items    PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Class Code of Prt Item Str/Items    PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Item Code of Prt Item Str/Items    PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Item Str/Items    PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'C/A'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD$BAIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BSQTX           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    $BSQTX           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Item Class Desc    RT - Item Structure Class  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           FARINB           Item Structure
      * Setup key
     C                     Z-ADD$BRINB    FARINB           Item Structure
      * Establish starting position
     C           KRSSD     CHAIN@FAREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1170' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BQVNA           Item Structure
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFADETX    $BQVNA           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Group Desc - Item Structure Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           E9RHNB           Item Structure
      * Setup key
     C                     Z-ADDWL0001    E9RHNB           Item Structure
      * Establish starting position
     C           KRSSE     CHAIN@E9REA8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1168' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Item Structure
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELE9DDTX    WL0002           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Type Description   RT - Item Structure Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           E8RGNB           Item Structure
      * Setup key
     C                     Z-ADDWL0003    E8RGNB           Item Structure
      * Establish starting position
     C           KRSSF     CHAIN@E8REBB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1166' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0004           Item Structure
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELE8DCTX    WL0004           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Item Ctg Desc     RT - Item Category  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           JIAIC3           Company Number
     C                     KFLD           JIUSNB           Item Category N
     C                     KFLD           JISLCD           Item Category C
      * Setup key
     C                     Z-ADD$BAIC3    JIAIC3           Company Number
     C                     Z-ADD4         JIUSNB           Item Category N
     C                     MOVELP2SYCD    JISLCD           Item Category C
      * Establish starting position
     C           KRSSG     CHAIN@JIREXX              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1854' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BQYNA           Description
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELJIAUNA    $BQYNA           Description
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv TF Class Desc     RT - TF Classification  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           AMFLAA           TF Classificati
      * Setup key
     C                     MOVEL$BTCST    AMFLAA           TF Classificati
      * Establish starting position
     C           KRSSH     CHAIN@AMREVR              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3376' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BQ0NA           TF Classificati
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAMQ0NA    $BQ0NA           TF Classificati
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Class Desc - Item Structure Class  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           FARINB           Item Structure
      * Setup key
     C                     Z-ADD$DRINB    FARINB           Item Structure
      * Establish starting position
     C           KRSSI     CHAIN@FAREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1170' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $DDETX           Item Structure
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFADETX    $DDETX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv Dept/Line         RT - Production Line/Item Str  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN CNRGNB    WQSJ01           Item Structure
     C           *LIKE     DEFN CNRHNB    WQSJ02           Item Structure
     C           *LIKE     DEFN CNRINB    WQSJ03           Item Structure
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Item Structure
     C                     KFLD           WQSJ02           Item Structure
     C                     KFLD           WQSJ03           Item Structure
      * Setup key
     C                     Z-ADD$DRGNB    WQSJ01           Item Structure
     C                     Z-ADD$DRHNB    WQSJ02           Item Structure
     C                     Z-ADD$DRINB    WQSJ03           Item Structure
      * Establish starting position
     C           KRSSJ     SETLL@CNREP3                    *
     C           KRSSJ     READE@CNREP3                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3213' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $DR3CD           Department Code
     C                     MOVEL*BLANK    $DEWAA           Production Line
     C                     MOVEL*BLANK    $DE2AA           WIP Usage Dept
     C                     MOVEL*BLANK    $DE3AA           WIP Usage Prod
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELCNR3CD    $DR3CD           Department Code
     C                     MOVELCNEWAA    $DEWAA           Production Line
     C                     MOVELCNE1AA    $DE2AA           WIP Usage Dept
     C                     MOVELCNE0AA    $DE3AA           WIP Usage Prod
     C           KRSSJ     READE@CNREP3                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modification/Changes
      *================================================================
      * 080505 slm --- Replace Item Level with the TF Class
      * Also new prompt to select this report.
      * Replace Item Level with TF Classification
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1DNCD           Application Cod
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    BZAIC3           Company Number
     C                     MOVEL*LOVAL    BZRGNB           Item Structure
     C                     MOVEL*LOVAL    BZRHNB           Item Structure
     C                     MOVEL*LOVAL    BZRINB           Item Structure
     C                     MOVEL*LOVAL    BZHGCD           Item Code
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002 30
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0003  30
     C                     MOVEL*BLANK    WL0004 30
      * Define null work field Item Category Type Number
     C                     Z-ADD*ZERO     YN0001  20
      * Define null work field Item Category Type Code
     C                     MOVEL*BLANK    YN0002  3
      * Define null work field Record Status
     C                     MOVEL*BLANK    YN0003  1
      * Define local work field Item Structure Type Code
     C                     Z-ADD*ZERO     YL0001  30
      * Define local work field Item Structure Group Code
     C                     Z-ADD*ZERO     YL0002  30
      * Define local work field Item Structure Class Code
     C                     Z-ADD*ZERO     YL0003  30
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * Modification/Changes
     C                     EXSR UASUBR                     Modification/Ch
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
      *================================================================
     CSR         ZZEXIT    ENDSR
