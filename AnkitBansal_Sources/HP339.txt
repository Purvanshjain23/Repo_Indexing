      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP339
      * TITLE:       Workfile: Costed Transfers into BGF Farms
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     10/30/02
      *
      * FUNCTION:  This function builds a workfile for a report that is:
      *              a) an EOP report
      *              b) an on-demand report
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 08/11/03  LeAnne Fedor
      *           The report can now be generated on-demand. The on-demand version
      *           has many selectors. So, we added an open query in the on-demand
      *           CL over the group file and added some additional code in this
      *           program.
      *
      * 08/19/03  LeAnne Fedor
      *           The users no longer want the EOP version limited to GDU groups. SO,
      *           removed GDU logic for origin groups.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 03/04/16  R Centonze    (E5290)
      *           check company from lda when reading hsl034d
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp018    if   e           k disk
      *  Farm site
      *
      *
     Fhsl034d   if   e           k disk
      *  Hog group (records selected with open query for on-demand version)
      *
      *
     Fhsl118a   if   e           k disk
      *  Costed movements
      *
      *
     Fhsp339    o    e           k disk
      *  Workfile: Costed Transfers into BGF Groups
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldper                 17     18  0
     D  ldeffl                19     19
     D  ldccyy                20     23  0
      *
     D  ldcell               102    103  0
      *
     D  ldcocd               200    202
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Read all costed transfers for the accounting year/period.
      * If the destination group is a BGF group, continue processing.
      *
     C     key01         setll     hsl118a
      *
     C                   dou       *in90 = *on                                  Main do
     C     key01         reade     hsl118a                                90
     C                   if        *in90 = *off and cmdnppcd = 'BGF  '          If dest BGF
      *
      *
      * Retrieve origin group info.
      *
     C     cmorhgsn      chain     hsl034d                            92
     C                   select                                                 Select
     C                   when      *in92 = *on or ldcocd <> hgcocd              e5290
      *
      * EOP version
     C                   when      ldeffl <> 'D'
     C                   exsr      $wrt339
      *
      * On-demand version
     C                   when      ldeffl = 'D'
      *
     C                   if        ldcell = 0
     C                   exsr      $wrt339
     C                   else
      *
     C     hgfscd        chain     hsp018                             92
     C                   if        *in92 = *off and fscell = ldcell
     C                   exsr      $wrt339
     C                   endif
     C                   endif
     C                   endsl                                                  Select
      *
     C                   endif                                                  If dest BGF
     C                   enddo                                                  Main do
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Write a workfile record
      *---------------------------------------------------------------
      *
     C     $wrt339       begsr
      *
     C                   z-add     cmmvsn        wtmvsn
     C                   z-add     cmlnno        wtlnno
      *
     C                   z-add     cmrcdt        wtrcdt
     C                   z-add     cmacyr        wtacyr
     C                   z-add     cmacpe        wtacpe
      *
     C                   z-add     cmorhgsn      wtorhgsn
     C                   z-add     cmorfscd      wtorfscd
     C                   move      cmorppcd      wtorppcd
      *
     C                   z-add     cmdnhgsn      wtdnhgsn
     C                   z-add     cmdnfscd      wtdnfscd
     C                   move      cmdnppcd      wtdnppcd
      *
     C                   z-add     cmhdrt        wthdrt
     C                   z-add     cmam          wttram
     C                   z-add     cmhd          wttrhd
     C                   z-add     cmlb          wttrlb
      *
      * Calculate rate per pound
      *
     C                   if        cmlb <> 0
     C     cmam          div(h)    cmlb          wtlbrt
     C                   endif
      *
      *
      * Move in 'origin' group fields retrieved previously from the Hog Group file.
      *
     C                   move      hghgcd        wtorhgcd
     C                   move      hggtcd        wtorgtcd
     C                   move      hggscd        wtorgscd
      *
      *
      * Retrieve the 'destination' group fields just retrieved from the Hog Group file.
      *
     C     cmdnhgsn      chain     hsl034d                            92
     C                   if        *in92 = *off                                 If hit
     C                   move      hghgcd        wtdnhgcd
     C                   move      hggtcd        wtdngtcd
     C                   endif                                                  If hit
      *
     C                   write     wtrec
     C                   clear                   wtrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     key01         klist
     C                   kfld                    ldccyy
     C                   kfld                    ldper
      *
     C                   endsr
      /eject
