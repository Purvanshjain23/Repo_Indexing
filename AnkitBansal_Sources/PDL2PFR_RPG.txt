     H/TITLE PRT Credit Line Exp Dt PF Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by  : 2E  Version:  1181
     H* Function type : Print file
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISBGUTI
     H* Date          : 02/25/08  Time  : 11:37:02
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FCABBREL7IF  E           K        DISK
      * RSQ : Customer                  RSQ PCrdLmt/Name/Shipto
      *
     FCABBREL3IF  E           K        DISK
      * RSQ : Customer                  RSQ Parent #/AR #  Activ
      *
     FPDLDCPL3IF  E           K        DISK
      * RSQ : A/R Balance File          AR Cust/BalYr/BalMO/Co
      *
     FPDL2PFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: PRT Credit Line Exp Dt PF Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L7         7  1
      * Long constants
     E                    @CN#    1   1  6   @CN    25
     E                    YK01       12 11  A            Highest A/R Bal
      *
     I@BBREL6
      * Customer                  RSQ Parent #/AR #  Activ
      * Renamed input format fields
     I              BBBKC7                          WABKC7
     I              BBAYTX                          WAAYTX
     I              BBACNA                          WAACNA
     I              BBADNA                          WAADNA
     I              BBAENA                          WAAENA
     I              BBAJNA                          WAAJNA
     I              BBBGCD                          WABGCD
     I              BBG5CD                          WAG5CD
     I              BBBTTX                          WABTTX
     I              BBBVTX                          WABVTX
     I              BBBWTX                          WABWTX
     I              BBABTX                          WAABTX
     I              BBA2NA                          WAA2NA
     I              BBCBST                          WACBST
     I              BBB0NA                          WAB0NA
     I              BBP3NB                          WAP3NB
     I              BBAXNA                          WAAXNA
     I              BBI6DT                          WAI6DT
     I              BBAYDT                          WAAYDT
     I              BBANC7                          WAANC7
     I              BBBTC7                          WABTC7
     I              BBK6ST                          WAK6ST
     I              BBUZST                          WAUZST
     I              BBKXCD                          WAKXCD
     I              BBLTCD                          WALTCD
     I              BBQNST                          WAQNST
     I              BBS2NB                          WAS2NB
     I              BBVHVA                          WAVHVA
     I              BBI7DT                          WAI7DT
     I              BBRJST                          WARJST
     I              BBRKST                          WARKST
     I              BBQWST                          WAQWST
     I              BBQXST                          WAQXST
     I              BBQYST                          WAQYST
     I              BBUNCS                          WAUNCS
     I              BBUVST                          WAUVST
     I              BBUWST                          WAUWST
     I              BBUXST                          WAUXST
     I              BBVSST                          WAVSST
     I              BBAATM                          WAAATM
     I              BBAYNA                          WAAYNA
     I              BBA0NA                          WAA0NA
     I              BBAXDT                          WAAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
     IYD01        DS
     I                                        1   40YI0101
     I                                        5   60YI0102
     I                                        7  110YI01
      *
     IYM01        DS                         12
     I                                        1   40WBA1NB
     I                                        5   60WBY4NB
     I                                        7  172WBALVA
      *
     IYW01        DS
     I                                        1   40XAA1NB
     I                                        5   60XAY4NB
     I                                        7  172XAALVA
      *
      /EJECT
     IXD1T        DS
      * Internal date
     I                                        1   70XDINT1
     I                                        1   30XDINY1
     I                                        4   50XDINM1
     I                                        6   70XDIND1
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXDMT        DS
      * Duration mask
     I                                        1   70XDIMDT
     I                                        1   30XDIMYY
     I                                        4   50XDIMMM
     I                                        6   70XDIMDD
      * Outward parameters
     IPARC        DS                              4
      * KEY : Customer                  Retrieval index       NV
      * I :  Ship To Customer
     I                                    P   1   40PABKC7
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * I :  From Date (alpha)     USR
     I                                        1   7 P1ZDCD
     IP2PARM      DS
      * I :  To Date (alpha)       USR
     I                                        1   7 P2ZCCD
     IP3PARM      DS
      * FLD: *Arrays
      * N :  Application Code
     I                                        1   6 P3DNCD
     IP4PARM      DS
      * N :  From Date             USR
     I                                    P   1   40P4L9DT
     IP5PARM      DS
      * N :  To Date               USR
     I                                    P   1   40P5MADT
     IP6PARM      DS
      * N :  Parent Status         USR
     I                                        1   1 P6B6SX
     IP7PARM      DS
      * N :  From Month 2          USR
     I                                    P   1   20P7L1X1
     IP8PARM      DS
      * N :  Compare Month         USR
     I                                    P   1   20P8
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1ZDCD    PARM           WP0001  7        From Date (alph
     C           P2ZCCD    PARM           WP0002  7        To Date (alpha)
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * PRT Credit Line Exp Dt PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$EENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * PRT Credit Line Exp Dt PF: Mainline
      *================================================================
      * Define keylist
     C           KPSA      KLIST
     C                     KFLD           BBS2NB           Parent Credit L
     C                     KFLD           BBAYTX           Customer Name
     C                     KFLD           BBBKC7           Ship To Custome
      * Initialize key list
     C                     MOVEL*HIVAL    BBS2NB           Parent Credit L
     C                     MOVEL*LOVAL    BBAYTX           Customer Name
     C                     MOVEL*LOVAL    BBBKC7           Ship To Custome
      * Establish starting position
     C           KPSA      SETLL@BBREVX                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Parent Credit L
     C                     MOVEL'Y'       W0AL01  1        Customer Name
     C                     MOVEL'Y'       W0AL02  1        Ship To Custome
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $D               Count Records
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDBBBKC7    $CBKC7           Ship To Custome
     C                     MOVELBBAYTX    $CAYTX           Customer Name
     C                     MOVELBBACNA    $CACNA           Address Line 1
     C                     Z-ADDBBBTC7    $CBTC7           Parent Customer
     C                     Z-ADDBBAYDT    $CAYDT           Credit Line Exp
     C                     MOVELBBADNA    $CADNA           Address Line 2
     C                     MOVELBBAENA    $CAENA           Address Line 3
     C                     MOVEL*BLANK    $CPGTX           City/State/Zip
     C                     MOVELBBAJNA    $CAJNA           City
     C                     MOVELBBBGCD    $CBGCD           State Code
     C                     MOVELBBBTTX    $CBTTX           Zip/Postal Code
     C                     MOVELBBBVTX    $CBVTX           Telephone Numbe
     C                     Z-ADDBBS2NB    $CS2NB           Parent Credit L
     C                     Z-ADD*ZERO     $CALVA           Amount of Highe
     C                     Z-ADD*ZERO     $CY4NB           A/R Balance Mon
     C                     Z-ADD*ZERO     $CA1NB           A/R Balance Yea
     C                     MOVELBBQNST    $CQNST           Order Entry Hol
     C                     Z-ADD*ZERO     $CRYNX           Days to Pay 1 U
     C                     Z-ADD*ZERO     $CRZNX           Days to Pay 2 U
     C                     Z-ADD*ZERO     $CR0NX           Days to Pay 3 U
     C                     Z-ADD*ZERO     $CR1NX           Days to Pay 4 U
     C                     Z-ADD*ZERO     $CR2NX           Days to Pay 5 U
     C                     Z-ADD*ZERO     $CR3NX           Days to Pay 6 U
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  1         $D               Count Records
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN BBS2NB    WZA001           Parent Credit L
     C                     Z-ADDBBS2NB    WZA001
     C           *LIKE     DEFN BBAYTX    WZA002           Customer Name
     C                     MOVELBBAYTX    WZA002
     C           *LIKE     DEFN BBBKC7    WZA003           Ship To Custome
     C                     Z-ADDBBBKC7    WZA003
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @BBREVX                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * CASE: DB1.Record Status is Active
     C           BBVSST    IFEQ 'A'                        *IF
      * Verify Credit Line Expiration Date Selection.
     C                     EXSR ULSUBR                     Verify Credit L
      * Verify Parent Customer Selection.
     C                     EXSR UOSUBR                     Verify Parent C
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Parent Credit L
     C                     MOVEL*BLANK    W0AL01  1        Customer Name
     C                     MOVEL*BLANK    W0AL02  1        Ship To Custome
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Parent Credit L
     C                     MOVEL'Y'       W0AL01  1        Customer Name
     C                     MOVEL'Y'       W0AL02  1        Ship To Custome
     C                     ELSE
      * Next record - Detect level breaks
     C           BBS2NB    IFNE WZA001                     Parent Credit L
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           BBAYTX    IFNE WZA002                     Customer Name
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           BBBKC7    IFNE WZA003                     Ship To Custome
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$DFINTTL
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of PRT Credit Line Exp Dt PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of PRT Credit Line Exp Dt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * USER: On print of first page format
     C                     MOVEL'N'       YL0001           Print Selection
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Parent Credit Limit of PRT Credit Line Exp Dt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print Customer Name of PRT Credit Line Exp Dt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Ship To Customer of PRT Credit Line Exp Dt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Detail line. of PRT Credit Line Exp Dt PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * 06/15/04 SLM Change the following process to work for
      *              all companies for a customer
      * Get Highest A/R Balanc for Parent in Last 12 Months
     C                     EXSR UFSUBR                     Get Highest A/R
      * 06/15/04 SLM Add routine to get the 6 period averages.
      * 05/19/06 Field size changed from 3.0 to 5.0
      * Get Pas 6 Avg Days Pay - A/R Balance File
     C                     EXSR UKSUBR                     Get Pas 6 Avg D
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Ship To Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $CBKC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$CBKC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VCBKC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCBKC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Credit Line Expire Date to display format
      * Convert date
     C           1000000   ADD  $CAYDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCAYDT
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$CCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$CDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of PRT Credit Line Exp Dt PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Parent Credit Limit of PRT Credit Line Exp Dt PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Customer Name of PRT Credit Line Exp Dt PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Ship To Customer of PRT Credit Line Exp Dt PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT Credit Line Exp Dt PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
      * USER: Process top of page
      * CASE: LCL.Print Selections is Yes
     C           YL0001    IFEQ 'Y'                        *IF
     C                     Z-ADDP4L9DT    $BL9DT           From Date
     C                     Z-ADDP5MADT    $BMADT           To Date
      * Load Month Description
     C                     MOVEL*BLANK    $BPITX           Month Descripti
      * CASE: PAR.Month                 USR is January
     C           P7L1X1    IFEQ 01                         *IF
     C                     MOVEL*BLANK    $BPITX           Month Descripti
     C                     MOVEL'January' $BPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is February
     C           P7L1X1    IFEQ 02                         *IF
     C                     MOVEL*BLANK    $BPITX           Month Descripti
     C                     MOVEL'February'$BPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is March
     C           P7L1X1    IFEQ 03                         *IF
     C                     MOVEL*BLANK    $BPITX           Month Descripti
     C                     MOVEL'March'   $BPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is April
     C           P7L1X1    IFEQ 04                         *IF
     C                     MOVEL*BLANK    $BPITX           Month Descripti
     C                     MOVEL'April'   $BPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is May
     C           P7L1X1    IFEQ 05                         *IF
     C                     MOVEL*BLANK    $BPITX           Month Descripti
     C                     MOVEL'May'     $BPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is June
     C           P7L1X1    IFEQ 06                         *IF
     C                     MOVEL*BLANK    $BPITX           Month Descripti
     C                     MOVEL'June'    $BPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is July
     C           P7L1X1    IFEQ 07                         *IF
     C                     MOVEL*BLANK    $BPITX           Month Descripti
     C                     MOVEL'July'    $BPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is August
     C           P7L1X1    IFEQ 08                         *IF
     C                     MOVEL*BLANK    $BPITX           Month Descripti
     C                     MOVEL'August'  $BPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is September
     C           P7L1X1    IFEQ 09                         *IF
     C                     MOVEL@CN,01    $BPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is October
     C           P7L1X1    IFEQ 10                         *IF
     C                     MOVEL*BLANK    $BPITX           Month Descripti
     C                     MOVEL'October' $BPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is November
     C           P7L1X1    IFEQ 11                         *IF
     C                     MOVEL*BLANK    $BPITX           Month Descripti
     C                     MOVEL'November'$BPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is December
     C           P7L1X1    IFEQ 12                         *IF
     C                     MOVEL*BLANK    $BPITX           Month Descripti
     C                     MOVEL'December'$BPITX           Month Descripti
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDYL0002    $BR4NX           Month 1 USR
     C                     Z-ADDYL0005    $BR5NX           Month 2 USR
     C                     Z-ADDYL0007    $BR6NX           Month 3 USR
     C                     Z-ADDYL0009    $BR7NX           Month 4 USR
     C                     Z-ADDYL0011    $BR8NX           Month 5 USR
     C                     Z-ADDYL0013    $BR9NX           Month 6 USR
      * Convert fields to external form
      * Convert From Date             USR to display format
      * Convert date
     C           1000000   ADD  $BL9DT    XDINDT
     C                     EXSR XDVC4T
     C                     Z-ADDXDEXDT    VBL9DT
      * Convert To Date               USR to display format
      * Convert date
     C           1000000   ADD  $BMADT    XDINDT
     C                     EXSR XDVC4T
     C                     Z-ADDXDEXDT    VBMADT
     C                     MOVEL'0'       *IN79
     C           YL0001    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVELP3DNCD    WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV highest bal-parent RT - Customer  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  70       Save A/R Custom
     C                     Z-ADD*ZERO     WN0002  50       Count USR
     C                     Z-ADD*ZERO     WN0003  70       Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WN0001           Save A/R Custom
      * Prepare Array.
     C                     EXSR UGSUBR                     Prepare Array.
      * Declare restrictor key work fields
     C           *LIKE     DEFN WABTC7    WQSC01           Parent Customer
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           Parent Customer
      * Setup key
     C                     Z-ADD$CBKC7    WQSC01           Parent Customer
      * Establish starting position
     C           KRSSC     SETLL@BBREL6                    *
     C           KRSSC     READE@BBREL6                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0170' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADD*ZERO     $CA1NB           A/R Balance Yea
     C                     Z-ADD*ZERO     $CY4NB           A/R Balance Mon
     C                     Z-ADD*ZERO     $CALVA           Amount of Highe
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.A/R Customer Number NE PAR.Save A/R Customer Nbr USR
     C           WAANC7    IFNE WN0001                     *IF
      * Calculate Highest Bal for A/R Cust & Add to Array.
     C                     EXSR UJSUBR                     Calculate Highe
     C                     END                             *FI
     C                     Z-ADDWAANC7    WN0001           Save A/R Custom
     C           KRSSC     READE@BBREL6                  90*
     C                     ENDDO
      * USER: Exit processing
      * Find & Return Highest Balance and Date.
      * RTV Highest A/R Bal    RT - *Arrays  * 
     C                     EXSR SIRVGN
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDDLRC    BEGSR
      *================================================================
      * CLR Highest Bal Array  DL - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SECRRC    BEGSR
      *================================================================
      * CRT Highest Bal Array  CR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL01      IFEQ 12
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C                     Z-ADD*ZERO     XAA1NB           A/R Balance Yea
     C                     Z-ADD*ZERO     XAY4NB           A/R Balance Mon
     C                     Z-ADD*ZERO     XAALVA           Amount of Highe
      * Move all fields to Highest A/R Balance
     C                     Z-ADD$CA1NB    XAA1NB           A/R Balance Yea
     C                     Z-ADD$CY4NB    XAY4NB           A/R Balance Mon
     C                     Z-ADD*ZERO     XAALVA           Amount of Highe
      *
      * Move key fields to Highest A/R Balance
     C                     Z-ADDXAA1NB    YI0101           A/R Balance Yea
     C                     Z-ADDXAY4NB    YI0102           A/R Balance Mon
      *
      * Check for duplicate primary key
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFEQ XAA1NB
     C           YI0102    ANDEQXAY4NB
      * Array element already exists
     C                     MOVEL'Y2U0003' W0RTN   7
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Insert after last used element
     C           YL01      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK01,Y    IFNE *HIVAL
      * If so, reuse MODS index
     C                     MOVELYK01,Y    YD01
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI01
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to Highest A/R Balance
     C                     Z-ADDXAA1NB    YI0101           A/R Balance Yea
     C                     Z-ADDXAY4NB    YI0102           A/R Balance Mon
      *
     C                     MOVELYD01      YK01,Y
     C           YI01      OCUR YM01
      * Update MODS fields
     C                     Z-ADDXAA1NB    WBA1NB           A/R Balance Yea
     C                     Z-ADDXAY4NB    WBY4NB           A/R Balance Mon
     C                     Z-ADDXAALVA    WBALVA           Amount of Highe
      * Only sort if element is out of position
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE12
     C           YK01,YR01 ANDGTYD01
     C                     ADD  1         YR01    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK01
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL01
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * UPD Highest Bal Array  RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0004 112       Amount of Highe
      *
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD1         Y       50
     C           YL01      IFGT 0
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
     C                     ELSE
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
      * 06/16/04 slm Change this RTV to accumulate all companies for a
      *              specific customer and date year and date month
      *              NEW Logical file
      * RTV Highest Bal-Parent RT - A/R Balance File  * 
     C                     EXSR SGRVGN
     C                     ADD  WBALVA    WN0004           Amount of Highe
      * CHG Highest Bal Array  CH - *Arrays  * 
     C                     EXSR SHCHRC
     C                     ADD  1         YR01
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Highest Bal-Parent RT - A/R Balance File  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * 06/16/04 slm -- Change this process to accumulate for all compani
     C                     Z-ADD*ZERO     YL0015           Amount of Highe
      * Declare restrictor key work fields
     C           *LIKE     DEFN LDANC7    WQSG01           A/R Customer Nu
     C           *LIKE     DEFN LDA1NB    WQSG02           A/R Balance Yea
     C           *LIKE     DEFN LDY4NB    WQSG03           A/R Balance Mon
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           A/R Customer Nu
     C                     KFLD           WQSG02           A/R Balance Yea
     C                     KFLD           WQSG03           A/R Balance Mon
      * Setup key
     C                     Z-ADDWAANC7    WQSG01           A/R Customer Nu
     C                     Z-ADDWBA1NB    WQSG02           A/R Balance Yea
     C                     Z-ADDWBY4NB    WQSG03           A/R Balance Mon
      * Establish starting position
     C           KRSSG     SETLL@LDCPU0                    *
     C           KRSSG     READE@LDCPU0                  90*
      * Data record not found
     C   90                MOVEL'USR2448' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  LDALVA    YL0015           Amount of Highe
     C           KRSSG     READE@LDCPU0                  90*
     C                     ENDDO
      * USER: Exit processing
     C                     Z-ADDYL0015    WN0004           Amount of Highe
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHCHRC    BEGSR
      *================================================================
      * CHG Highest Bal Array  CH - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to Highest A/R Balance
     C                     Z-ADDWBA1NB    YI0101           A/R Balance Yea
     C                     Z-ADDWBY4NB    YI0102           A/R Balance Mon
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WBA1NB
     C           YI0102    ORNE WBY4NB
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to Highest A/R Balance
     C                     Z-ADDWN0004    WBALVA           Amount of Highe
      *
      *
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Highest A/R Bal    RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     $CA1NB           A/R Balance Yea
     C                     Z-ADD*ZERO     $CY4NB           A/R Balance Mon
     C                     Z-ADD*ZERO     $CALVA           Amount of Highe
     C                     Z-ADD1         Y       50
     C           YL01      IFGT 0
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
     C                     ELSE
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
      * CASE: DB1.Amount of Highest A/R Bal GT PAR.Amount of Highest A/R
     C           WBALVA    IFGT $CALVA                     *IF
     C                     Z-ADDWBA1NB    $CA1NB           A/R Balance Yea
     C                     Z-ADDWBY4NB    $CY4NB           A/R Balance Mon
     C                     Z-ADDWBALVA    $CALVA           Amount of Highe
     C                     END                             *FI
     C                     ADD  1         YR01
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Create months for Past monthly Trend using job date Month 1-6
      *================================================================
      * LCL.Month 1 USR = JOB.*Job date *MONTH
     C           ##JDT     ADD  1000000   XDINDT
     C                     Z-ADDXDINMM    YL0002
      * LCL.A/R Balance Year = JOB.*Job date *YEAR
     C           ##JDT     ADD  1000000   XDINDT
     C           1800      ADD  XDINYY    YL0003
     C                     SUB  1         YL0002           Month 1 USR
     C                     Z-ADDYL0003    YL0004           YEAR 1 USR
      * CASE: LCL.Month 1 USR is Zero
     C           YL0002    IFEQ *ZERO                      *IF
     C                     Z-ADD12        YL0002           Month 1 USR
     C           YL0003    SUB  1         YL0004           YEAR 1 USR
     C                     SUB  1         YL0003           A/R Balance Yea
     C                     END                             *FI
     C           YL0002    SUB  1         YL0005           Month 2 USR
     C                     Z-ADDYL0003    YL0006           YEAR 2 USR
      * CASE: LCL.Month 2 USR is Zero
     C           YL0005    IFEQ *ZERO                      *IF
     C                     Z-ADD12        YL0005           Month 2 USR
     C           YL0003    SUB  1         YL0006           YEAR 2 USR
     C                     SUB  1         YL0003           A/R Balance Yea
     C                     END                             *FI
     C           YL0005    SUB  1         YL0007           Month 3 USR
     C                     Z-ADDYL0003    YL0008           YEAR 3 USR
      * CASE: LCL.Month 3 USR is Zero
     C           YL0007    IFEQ *ZERO                      *IF
     C                     Z-ADD12        YL0007           Month 3 USR
     C           YL0003    SUB  1         YL0008           YEAR 3 USR
     C                     SUB  1         YL0003           A/R Balance Yea
     C                     END                             *FI
     C           YL0007    SUB  1         YL0009           Month 4 USR
     C                     Z-ADDYL0003    YL0010           YEAR 4 USR
      * CASE: LCL.Month 4 USR is Zero
     C           YL0009    IFEQ *ZERO                      *IF
     C                     Z-ADD12        YL0009           Month 4 USR
     C           YL0003    SUB  1         YL0010           YEAR 4 USR
     C                     SUB  1         YL0003           A/R Balance Yea
     C                     END                             *FI
     C           YL0009    SUB  1         YL0011           Month 5 USR
     C                     Z-ADDYL0003    YL0012           YEAR 5 USR
      * CASE: LCL.Month 5 USR is Zero
     C           YL0011    IFEQ *ZERO                      *IF
     C                     Z-ADD12        YL0011           Month 5 USR
     C           YL0003    SUB  1         YL0012           YEAR 5 USR
     C                     SUB  1         YL0003           A/R Balance Yea
     C                     END                             *FI
     C           YL0011    SUB  1         YL0013           Month 6 USR
     C                     Z-ADDYL0003    YL0014           YEAR 6 USR
      * CASE: LCL.Month 6 USR is Zero
     C           YL0013    IFEQ *ZERO                      *IF
     C                     Z-ADD12        YL0013           Month 6 USR
     C           YL0003    SUB  1         YL0014           YEAR 6 USR
     C                     SUB  1         YL0003           A/R Balance Yea
     C                     END                             *FI
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * 06/15/04
     C                     EXSR UCSUBR                     06/15/04
      * 05/19/2006
     C                     EXSR UDSUBR                     05/19/2006
      * 02/25/2008
     C                     EXSR UESUBR                     02/25/2008
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * 06/15/04
      *================================================================
      * 06/15/04 SLM -- Add OE HOLD AND Days to pay to report.  Also corr
      *            the process using the hard coded value of 360.
      *            Report will not be select for a specific company
      *            or for all companies.
      *            Add STD for Report Selections.
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * 05/19/2006
      *================================================================
      * ** 05/19/2006 LJB T00009
      * ** Size of the Days to Pay User fields has been changed from
      * ** 3.0 to 5.0 to prevent truncating when accumulating for
      * ** large volume customers.
      * *****
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * 02/25/2008
      *================================================================
      * ** 02/25/2008 blg and rmc
      * ** Fixed problem of Past Monthly Trend buckets not being calculat
      * ** correctly when selection spans two years
      * *****
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * Get Highest A/R Balanc for Parent in Last 12 Months
      *================================================================
      * RTV highest bal-parent RT - Customer  * 
     C                     EXSR SCRVGN
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * Prepare Array.
      *================================================================
      * CLR Highest Bal Array  DL - *Arrays  * 
     C                     EXSR SDDLRC
      * Determine Start Month and Year.
     C                     EXSR UHSUBR                     Determine Start
     C                     Z-ADD1         WN0002           Count USR
      * DO WHILE: PAR.Count USR is LE 12
     C           WN0002    DOWLE12                         *DOW
      * CRT Highest Bal Array  CR - *Arrays  * 
     C                     EXSR SECRRC
      * CASE: PAR.Count USR is LT 12
     C           WN0002    IFLT 12                         *IF
      * Adjust Date.
     C                     EXSR UISUBR                     Adjust Date.
     C                     END                             *FI
     C                     ADD  1         WN0002           Count USR
     C                     END                             *ITR
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         UHSUBR    BEGSR
      *================================================================
      * Determine Start Month and Year.
      *================================================================
     C                     Z-ADD##JDT     WN0003           Date
     C                     Z-ADD##JMM     $CY4NB           A/R Balance Mon
      * PAR.A/R Balance Year = JOB.*Job date *YEAR
     C           ##JDT     ADD  1000000   XDINDT
     C           1800      ADD  XDINYY    $CA1NB
      *================================================================
     CSR         UHEXIT    ENDSR
      /EJECT
     CSR         UISUBR    BEGSR
      *================================================================
      * Adjust Date.
      *================================================================
      * Subtract 1 Month from Date.
      * PAR.Date                  USR = PAR.Date                  USR + C
     C           WN0003    ADD  1000000   XDINDT
     C                     Z-ADD-1        XDURR   80
     C                     EXSR XDAMO
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0003
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0003
     C                     END
      * Extract Month and Year from Date.
      * PAR.A/R Balance Month = PAR.Date                  USR *MONTH
     C           WN0003    ADD  1000000   XDINDT
     C                     Z-ADDXDINMM    $CY4NB
      * PAR.A/R Balance Year = PAR.Date                  USR *YEAR
     C           WN0003    ADD  1000000   XDINDT
     C           1800      ADD  XDINYY    $CA1NB
      *================================================================
     CSR         UIEXIT    ENDSR
      /EJECT
     CSR         UJSUBR    BEGSR
      *================================================================
      * Calculate Highest Bal for A/R Cust & Add to Array.
      *================================================================
      * UPD Highest Bal Array  RT - *Arrays  * 
     C                     EXSR SFRVGN
      *================================================================
     CSR         UJEXIT    ENDSR
      /EJECT
     CSR         UKSUBR    BEGSR
      *================================================================
      * Get Pas 6 Avg Days Pay - A/R Balance File
      *================================================================
      * Rtv Past 6-12 AvgDys PyXF - A/R Balance File  * 
     C                     CALL 'PPFBXFR'              90  Rtv Past 6-12 A
     C                     PARM *BLANK    W0RTN   7
     C                     PARM YL0002    WQ0001  20       Month 1 USR
     C           $CRYNX    PARM $CRYNX    WQ0002  50       Days to Pay 1 U
     C                     PARM YL0005    WQ0003  20       Month 2 USR
     C           $CRZNX    PARM $CRZNX    WQ0004  50       Days to Pay 2 U
     C                     PARM YL0007    WQ0005  20       Month 3 USR
     C           $CR0NX    PARM $CR0NX    WQ0006  50       Days to Pay 3 U
     C                     PARM YL0009    WQ0007  20       Month 4 USR
     C           $CR1NX    PARM $CR1NX    WQ0008  50       Days to Pay 4 U
     C                     PARM YL0011    WQ0009  20       Month 5 USR
     C           $CR2NX    PARM $CR2NX    WQ0010  50       Days to Pay 5 U
     C                     PARM YL0013    WQ0011  20       Month 6 USR
     C           $CR3NX    PARM $CR3NX    WQ0012  50       Days to Pay 6 U
     C                     PARM *ZERO     WQ0013  20       Month 7 USR
     C           YL0016    PARM YL0016    WQ0014  50       Days to Pay 7 U
     C                     PARM *ZERO     WQ0015  20       Month 8 USR
     C           YL0017    PARM YL0017    WQ0016  50       Days to Pay 8 U
     C                     PARM *ZERO     WQ0017  20       Month 9 USR
     C           YL0018    PARM YL0018    WQ0018  50       Days to Pay 9 U
     C                     PARM *ZERO     WQ0019  20       Month 10 USR
     C           YL0019    PARM YL0019    WQ0020  50       Days to Pay 10
     C                     PARM YL0004    WQ0021  40       YEAR 1 USR
     C                     PARM YL0006    WQ0022  40       YEAR 2 USR
     C                     PARM YL0008    WQ0023  40       YEAR 3 USR
     C                     PARM YL0010    WQ0024  40       YEAR 4 USR
     C                     PARM YL0012    WQ0025  40       YEAR 5 USR
     C                     PARM YL0014    WQ0026  40       YEAR 6 USR
     C                     PARM YL0020    WQ0027  40       YEAR 7 USR
     C                     PARM YL0021    WQ0028  40       YEAR 8 USR
     C                     PARM YL0022    WQ0029  40       YEAR 9 USR
     C                     PARM YL0023    WQ0030  40       YEAR 10 USR
     C                     PARM YL0024    WQ0031  40       YEAR 11 USR
     C                     PARM YL0025    WQ0032  40       YEAR 12 USR
     C                     PARM *ZERO     WQ0033  20       Month 11 USR
     C           WUTKNX    PARM WUTKNX    WQ0034  50       Days to Pay 11
     C                     PARM 0         WQ0035  20       Month 12 USR
     C           YL0026    PARM YL0026    WQ0036  50       Days to Pay 12
     C                     PARM WUAIC3    WQ0037  30       Company Number
     C                     PARM BBANC7    WQ0038  70       A/R Customer Nu
     C                     PARM $CA1NB    WQ0039  40       A/R Balance Yea
     C                     PARM 6         WQ0040  20       Number of Month
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPFBXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      *================================================================
     CSR         UKEXIT    ENDSR
      /EJECT
     CSR         ULSUBR    BEGSR
      *================================================================
      * Verify Credit Line Expiration Date Selection.
      *================================================================
      * CASE: PAR.From Month 2          USR is Zero
     C           P7L1X1    IFEQ *ZERO                      *IF
      * "Date Range" Selection.
     C                     EXSR UMSUBR                     "Date Range" Se
     C                     ELSE
      * CASE: *OTHERWISE
      * "Month Only" Selection.
     C                     EXSR UNSUBR                     "Month Only" Se
     C                     END                             *FI
      *================================================================
     CSR         ULEXIT    ENDSR
      /EJECT
     CSR         UMSUBR    BEGSR
      *================================================================
      * "Date Range" Selection.
      *================================================================
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Credit Line Expire Date GE PAR.From Date
      *   |- c2    : DB1.Credit Line Expire Date LE PAR.To Date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           BBAYDT    IFGE P4L9DT                     *IF
     C           BBAYDT    IFLE P5MADT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * *** In range! Select record. ***
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      *================================================================
     CSR         UMEXIT    ENDSR
      /EJECT
     CSR         UNSUBR    BEGSR
      *================================================================
      * "Month Only" Selection.
      *================================================================
      * PAR.Compare Month         USR = DB1.Credit Line Expire Date *MONT
     C           BBAYDT    ADD  1000000   XDINDT
     C                     Z-ADDXDINMM    P8
      * CASE: PAR.Compare Month         USR NE PAR.From Month 2
     C           P8        IFNE P7L1X1                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      *================================================================
     CSR         UNEXIT    ENDSR
      /EJECT
     CSR         UOSUBR    BEGSR
      *================================================================
      * Verify Parent Customer Selection.
      *================================================================
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * VAL Determ. If Parent  XF - Customer  * 
     C                     CLEARPARC
     C                     Z-ADDBBBKC7    PABKC7           Ship To Custome
      *
     C                     CALL 'PDL5XFR'              90  VAL Determ. If
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Customer
     C           P6B6SX    PARM *BLANK    WQ0041  1        Parent Status
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDL5XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Parent Status         USR is Not a Parent Customer
     C           P6B6SX    IFEQ 'N'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UOEXIT    ENDSR
      /EJECT
     CSR         XDAG1     BEGSR
      *================================================================
      * Prepare parameters to calculate Date Increment
      *================================================================
     C           XDURR     IFLT 0
      * Negative date increment
     C                     Z-ADD-1        XDWK2   60
     C                     ELSE
      * Positive date increment
     C                     Z-ADD1         XDWK2
     C                     ENDIF
     C                     MULT XDWK2     XDURR
      * Refresh the length of updated month (returned in XDWK1).
     C                     Z-ADDXDINDT    XDINT2
     C                     EXSR XDMNH
     C           XDINDD    IFEQ XDWK1
      * Save the start day
     C                     Z-ADD0         XDINDD
     C                     ENDIF
     C                     Z-ADD0         XDINT2
     C                     Z-ADD0         XDIMDT
     C                     MOVEL*BLANK    W0RTN   7
      *================================================================
     CSR         XDAG1E    ENDSR
      /EJECT
     CSR         XDAG2     BEGSR
      *================================================================
      * General calculations driven by Increment Mask
      *================================================================
      * Extract days
     C           XDIMDD    IFEQ 1
     C                     DIV  100       XDURR   80
     C                     MVR            XDIND2
     C                     ENDIF
      * Extract months
     C           XDIMMM    IFEQ 1
     C                     DIV  100       XDURR   80
     C                     MVR            XDINM2
     C                     ENDIF
      * Extract years
     C           XDIMYY    IFEQ 1
     C                     DIV  1000      XDURR   80
     C                     MVR            XDINY2
     C                     ENDIF
     C           XDURR     IFNE 0
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      * Normalize month increment
     C           XDINM2    DIV  12        XDURR   80
     C                     MVR            XDINM2
     C                     ADD  XDURR     XDINY2
      * Apply year increment
     C                     MULT XDWK2     XDINY2
     C                     ADD  XDINYY    XDINY2
      * Apply month increment
     C                     MULT XDWK2     XDINM2
     C                     ADD  XDINMM    XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C           XDINDD    IFGT XDWK1
     C           XDINDD    OREQ 0
      * Restore the start day
     C                     Z-ADDXDWK1     XDINDD
     C                     ENDIF
      * Apply day increment
     C                     MULT XDWK2     XDIND2
     C           XDINDD    ADD  XDIND2    XDURR
     C                     Z-ADD0         XDIND2
      * Normalize day increment
     C           XDIND2    DOWLE0
     C           XDURR     IFEQ 0
     C                     ADD  XDWK2     XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C                     Z-ADDXDWK1     XDURR
     C                     ENDIF
     C           XDURR     IFLT 0
     C                     SUB  1         XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C                     ADD  XDWK1     XDURR
     C                     ELSE
     C           XDURR     IFGT XDWK1
     C                     SUB  XDWK1     XDURR
     C                     ADD  1         XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C                     ELSE
     C                     Z-ADDXDURR     XDIND2
     C                     ENDIF
     C                     ENDIF
     C                     ENDDO
      * Check updated year
     C           XDINY2    IFGE 400
     C           XDINY2    ORLE 0
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
     C           W0RTN     IFEQ 'Y2U0006'
     C                     Z-ADD0         XDINDT
     C                     ELSE
     C                     Z-ADDXDINT2    XDINDT
     C                     ENDIF
      *================================================================
     CSR         XDAG2E    ENDSR
      /EJECT
     CSR         XDAMO     BEGSR
      *================================================================
      * Calculate duration, *MONTHS
      *================================================================
      * Transform the *MONTHS format to the *YYMM format.
     C                     DIV  12        XDURR
     C                     MVR            XDWK1
     C                     MULT 100       XDURR
     C                     ADD  XDWK1     XDURR
      * Check and adjust End Of Month dates, if any.
     C                     EXSR XDAG1
      * Define increment Mask.
     C                     Z-ADD1         XDIMYY
     C                     Z-ADD1         XDIMMM
      * Initiate general DATE INCREMENT calculations.
     C                     EXSR XDAG2
      *================================================================
     CSR         XDAMOE    ENDSR
      /EJECT
     CSR         XDMNH     BEGSR
      *================================================================
      * Find length(XDWK1) in days for the month passed in XDIN2TS
      *================================================================
     C           XDINM2    IFEQ 4
     C           XDINM2    OREQ 6
     C           XDINM2    OREQ 9
     C           XDINM2    OREQ 11
     C                     Z-ADD30        XDWK1   80
     C                     ELSE
     C                     Z-ADD31        XDWK1
     C                     END
     C           XDINM2    IFEQ 2
      * Determine February length
     C           XDINY2    IFEQ 300
     C           XDINY2    OREQ 100
     C                     Z-ADD28        XDWK1
     C                     ELSE
     C           XDINY2    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD29        XDWK1
     C                     ELSE
     C                     Z-ADD28        XDWK1
     C                     END
     C                     END
     C                     END
      *================================================================
     CSR         XDMNHE    ENDSR
      /EJECT
     CSR         XDNZM     BEGSR
      *================================================================
      * Normalize days
      *================================================================
     C           XDINM2    IFLT 1
     C                     ADD  12        XDINM2
     C                     SUB  1         XDINY2
     C                     ENDIF
     C           XDINM2    IFGT 12
     C                     SUB  12        XDINM2
     C                     ADD  1         XDINY2
     C                     ENDIF
      * Refresh the length of updated month (returned in XDWK1).
     C                     EXSR XDMNH
      *================================================================
     CSR         XDNZME    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         XDVC4T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX01           DD
     C                     Z-ADDXDINMM    XDEX02           MM
     C           XDINDT    IFEQ 1000000
     C                     Z-ADD*ZERO     XDEY02
     C                     ELSE
     C           XDINYY    IFEQ 900
     C                     Z-ADD9999      XDEY02
     C                     ELSE
     C           1800      ADD  XDINYY    XDEY02           YYYY
     C                     END
     C                     END
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX01           MM
     C                     Z-ADDXDINDD    XDEX02           DD
     C           XDINDT    IFEQ 1000000
     C                     Z-ADD*ZERO     XDEY02
     C                     ELSE
     C           XDINYY    IFEQ 900
     C                     Z-ADD9999      XDEY02
     C                     ELSE
     C           1800      ADD  XDINYY    XDEY02           YYYY
     C                     END
     C                     END
     C                     ELSE
      * YMD format
     C           XDINDT    IFEQ 1000000
     C                     Z-ADD*ZERO     XDEY01
     C                     ELSE
     C           XDINYY    IFEQ 900
     C                     Z-ADD9999      XDEY01
     C                     ELSE
     C           1800      ADD  XDINYY    XDEY01           YYYY
     C                     END
     C                     END
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC4E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P3DNCD           Application Cod
     C                     Z-ADD*ZERO     P4L9DT           From Date
     C                     Z-ADD*ZERO     P5MADT           To Date
     C                     MOVEL*BLANK    P6B6SX           Parent Status
     C                     Z-ADD*ZERO     P7L1X1           From Month 2
     C                     Z-ADD*ZERO     P8               Compare Month
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WABKC7           Ship To Custome
     C                     Z-ADD*ZERO     WAP3NB           D & B Number
     C                     Z-ADD*ZERO     WAI6DT           Date of D & B R
     C                     Z-ADD*ZERO     WAAYDT           Credit Line Exp
     C                     Z-ADD*ZERO     WAANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WABTC7           Parent Customer
     C                     Z-ADD*ZERO     WAS2NB           Parent Credit L
     C                     Z-ADD*ZERO     WAVHVA           A/R Credit Limi
     C                     Z-ADD*ZERO     WAI7DT           Order Entry Hol
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01    50
     C                     Z-ADD1         Y       50
     C                     ENDIF
      *
      * Define work field Days to Pay 11 USR
     C                     Z-ADD*ZERO     WUTKNX  50
      * Define work field Company Number
     C                     Z-ADD*ZERO     WUAIC3  30
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field Print Selections
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Month 1 USR
     C                     Z-ADD*ZERO     YL0002  20
      * Define local work field A/R Balance Year
     C                     Z-ADD*ZERO     YL0003  40
      * Define local work field YEAR 1 USR
     C                     Z-ADD*ZERO     YL0004  40
      * Define local work field Month 2 USR
     C                     Z-ADD*ZERO     YL0005  20
      * Define local work field YEAR 2 USR
     C                     Z-ADD*ZERO     YL0006  40
      * Define local work field Month 3 USR
     C                     Z-ADD*ZERO     YL0007  20
      * Define local work field YEAR 3 USR
     C                     Z-ADD*ZERO     YL0008  40
      * Define local work field Month 4 USR
     C                     Z-ADD*ZERO     YL0009  20
      * Define local work field YEAR 4 USR
     C                     Z-ADD*ZERO     YL0010  40
      * Define local work field Month 5 USR
     C                     Z-ADD*ZERO     YL0011  20
      * Define local work field YEAR 5 USR
     C                     Z-ADD*ZERO     YL0012  40
      * Define local work field Month 6 USR
     C                     Z-ADD*ZERO     YL0013  20
      * Define local work field YEAR 6 USR
     C                     Z-ADD*ZERO     YL0014  40
      * Define local work field Amount of Highest A/R Bal
     C                     Z-ADD*ZERO     YL0015 112
      * Define local work field Days to Pay 7 USR
     C                     Z-ADD*ZERO     YL0016  50
      * Define local work field Days to Pay 8 USR
     C                     Z-ADD*ZERO     YL0017  50
      * Define local work field Days to Pay 9 USR
     C                     Z-ADD*ZERO     YL0018  50
      * Define local work field Days to Pay 10 USR
     C                     Z-ADD*ZERO     YL0019  50
      * Define local work field YEAR 7 USR
     C                     Z-ADD*ZERO     YL0020  40
      * Define local work field YEAR 8 USR
     C                     Z-ADD*ZERO     YL0021  40
      * Define local work field YEAR 9 USR
     C                     Z-ADD*ZERO     YL0022  40
      * Define local work field YEAR 10 USR
     C                     Z-ADD*ZERO     YL0023  40
      * Define local work field YEAR 11 USR
     C                     Z-ADD*ZERO     YL0024  40
      * Define local work field YEAR 12 USR
     C                     Z-ADD*ZERO     YL0025  40
      * Define local work field Days to Pay 12 USR
     C                     Z-ADD*ZERO     YL0026  50
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
     C                     MOVEL'Y'       YL0001           Print Selection
     C                     MOVEL*BLANK    P3DNCD           Application Cod
     C                     MOVEL'A/R'     P3DNCD           Application Cod
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
      * *** Determine Date Selection. ***
     C                     MOVE P1ZDCD    P4L9DT           From Date
     C                     MOVE P2ZCCD    P5MADT           To Date
      * CASE: PAR.To Date               USR is Zero
     C           P5MADT    IFEQ *ZERO                      *IF
      * PAR.From Month 2          USR = PAR.From Date             USR *MO
     C           P4L9DT    ADD  1000000   XDINDT
     C                     Z-ADDXDINMM    P7L1X1
     C                     Z-ADD*ZERO     P4L9DT           From Date
     C                     Z-ADD*ZERO     P5MADT           To Date
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     P7L1X1           From Month 2
     C                     END                             *FI
      * Create months for Past monthly Trend using job date Month 1-6
     C                     EXSR UASUBR                     Create months f
      * ***** Change Log and Comments
     C                     EXSR UBSUBR                     ***** Change Lo
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 September
