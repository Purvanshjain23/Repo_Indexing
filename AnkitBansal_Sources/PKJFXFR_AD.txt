// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKJFXFR
// ?Date: 14.08.2025 Time: 02:51:53
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//? length from 5 to 7.
ENDDO;

EXECUTE FUNCTION(HPE096) TYPE(EXCINTFUN)                                        AB1196857;

//?Rtv the Competitors Carcass Merit codes only 3 allowed
EXECUTE FUNCTION(Rtv Cmp Competitors   RT) TYPE(RTVOBJ) FILE(PKARREP)           AB1166528;
PARAMETER(WRK.Competitors_Code_1_Usr);
PARAMETER(WRK.Competitors_Code_2_Usr);
PARAMETER(WRK.Competitors_Code_3_Usr);
{
 //?USER: Initialize routine

 // *MO.VE             1183529*Bu = ilt. in functions
 WRK.Count_USR = *ZERO;

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.Competitors_Code_1_Usr = *BLANK;

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.Competitors_Code_2_Usr = *BLANK;

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.Competitors_Code_3_Usr = *BLANK;

 //?USER: Process Data record

 // WRK.Count USR = WRK.Count USR + CON.001
 WRK.Count_USR = WRK.Count_USR + 001;

 CASE;

 // IF WRK.Count USR is One
 IF WRK.Count_USR = 1;

 // PAR.Competitors Code 1 Usr = DB1.CMP Program Code
 PAR.Competitors_Code_1_Usr = DB1.CMP_Program_Code;

 // IF WRK.Count USR is Two
 IF WRK.Count_USR = 2;

 // PAR.Competitors Code 2 Usr = DB1.CMP Program Code
 PAR.Competitors_Code_2_Usr = DB1.CMP_Program_Code;

 // IF WRK.Count USR is Three
 IF WRK.Count_USR = 3;

 // PAR.Competitors Code 3 Usr = DB1.CMP Program Code
 PAR.Competitors_Code_3_Usr = DB1.CMP_Program_Code;

 QUIT;

 ENDIF;

}


//?Read each Tattoo for the passed in voucher date
//?and Build the Competitors file
EXECUTE FUNCTION(Rtv Clc Competitors   RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1196670;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.Pmt_Current_Payment_Date);
PARAMETER(WRK.Competitors_Code_1_Usr);
PARAMETER(WRK.Competitors_Code_2_Usr);
PARAMETER(WRK.Competitors_Code_3_Usr);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(HPE096) TYPE(EXCINTFUN)                                        AB1196857;
 // WRK.Last BOH BuyOrder Nbr USR = CON.*ZERO
 WRK.Last_BOH_BuyOrder_Nbr_USR = *ZERO;

 // WRK.Last BOL Load number  USR = CON.*ZERO
 WRK.Last_BOL_Load_number_USR = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.RS Record Status is Active
 IF DB1.RS_Record_Status = 'A';

 // LCL.TH VC Gross Value /HD = DB1.TH VC Gross Value /HD
 LCL.TH_VC_Gross_Value_HD = DB1.TH_VC_Gross_Value_HD;

 EXECUTE FUNCTION(Clc Competitors Rpts  IF) TYPE(EXCINTFUN)                      AB1196680;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TH_Purchase_Date);
 PARAMETER(DB1.TH_Group_Reference);
 PARAMETER(DB1.TH_Live_Purchase_UOM);
 PARAMETER(DB1.TH_Live_Purchase_Price);
 PARAMETER(DB1.TH_Live_Gross_Amt);
 PARAMETER(DB1.TH_LIve_Net_Amt);
 PARAMETER(DB1.TH_Resale_UOM);
 PARAMETER(DB1.TH_Recalc_Live_Wgt_Yld);
 PARAMETER(DB1.TH_Pricing_Date);
 PARAMETER(DB1.TH_Resale_Spread_Sts);
 PARAMETER(DB1.TH_Dead_On_Arrival);
 PARAMETER(DB1.TH_Head_Received);
 PARAMETER(DB1.TH_Yard_Deads);
 PARAMETER(DB1.TH_Held_Over);
 PARAMETER(DB1.TH_Head_Condemned);
 PARAMETER(DB1.TH_Head_Killed);
 PARAMETER(DB1.TH_Head_Adds);
 PARAMETER(DB1.TH_Head_Accepted);
 PARAMETER(DB1.TH_Live_Wgt);
 PARAMETER(DB1.TH_Adj_Live_Wgt);
 PARAMETER(DB1.TH_Hot_Wgt);
 PARAMETER(DB1.TH_Tot_Loin_Eye_Depth);
 PARAMETER(DB1.TH_Tot_Backfat_Inches);
 PARAMETER(DB1.TH_Tot_Light_Reflectance);
 PARAMETER(DB1.TH_Avg_Live_Wgt);
 PARAMETER(DB1.TH_Avg_Hot_Wgt);
 PARAMETER(DB1.TH_Avg_Light_Reflectance);
 PARAMETER(DB1.TH_Avg_Lean_Percent);
 PARAMETER(DB1.TH_Avg_Loin_Eye_Depth);
 PARAMETER(DB1.TH_Avg_Backfat);
 PARAMETER(DB1.TH_Std_Yield_Percent);
 PARAMETER(DB1.TH_Actual_Yield);
 PARAMETER(DB1.TH_Adj_Actual_Yield);
 PARAMETER(DB1.TH_Yield_Difference);
 PARAMETER(DB1.TH_Recalc_Live_Wgt);
 PARAMETER(DB1.TH_CM_Market_Price);
 PARAMETER(DB1.TH_CM_Base_Mkt_Price);
 PARAMETER(DB1.TH_CM_Base_Mkt_Price_Amt);
 PARAMETER(DB1.TH_CM_Sort_Discount_Amt);
 PARAMETER(DB1.TH_CM_Yield_Gain_Loss_Amt);
 PARAMETER(DB1.TH_CM_Base_Carcass_Value);
 PARAMETER(DB1.TH_CM_LN_AddOn_Deduct_Amt);
 PARAMETER(DB1.TH_CM_Carcass_Gross_Amt);
 PARAMETER(DB1.TH_Deduction_Amt);
 PARAMETER(DB1.TH_Total_Net_WO_Adds);
 PARAMETER(DB1.TH_Carcass_Net_Amt);
 PARAMETER(DB1.TH_Additions_Amt);
 PARAMETER(DB1.TH_Payment_Gross);
 PARAMETER(DB1.Th_Payment_Net_Amt);
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(DB1.TH_Freight_Amount);
 PARAMETER(DB1.TH_Accrual_Amount);
 PARAMETER(DB1.TH_Fixed_Cost_Amount);
 PARAMETER(DB1.TH_Calc_Net_Sts);
 PARAMETER(DB1.TH_Payment_Sts);
 PARAMETER(DB1.TH_Header_Error_Sts);
 PARAMETER(DB1.TH_Detail_Error_Sts);
 PARAMETER(DB1.TH_Kill_Balancing_Sts);
 PARAMETER(DB1.TH_Bal_to_Kill_Gen);
 PARAMETER(DB1.TH_Commission_A_P_Voucher);
 PARAMETER(DB1.TH_Voucher_Payment_Date);
 PARAMETER(DB1.TH_User_Error_Override);
 PARAMETER(DB1.TH_Held_Over_Record);
 PARAMETER(DB1.TH_Sex);
 PARAMETER(DB1.TH_Held_Ovr_Completed_Dte);
 PARAMETER(DB1.TH_Commission_Paid_Date);
 PARAMETER(DB1.TH_Actual_Check_Date);
 PARAMETER(DB1.TH_Shipped_Weight);
 PARAMETER(DB1.TH_Avg_Hot_Wgt_EXC_ADD);
 PARAMETER(DB1.TH_FFLI);
 PARAMETER(DB1.TH_Kill_Product_Value);
 PARAMETER(DB1.TH_Cut_Product_Value);
 PARAMETER(DB1.TH_Render_Product_Value);
 PARAMETER(DB1.TH_Head_Excluded);
 PARAMETER(DB1.TH_CM_Bse_Mkt_Live_CWT);
 PARAMETER(DB1.TH_CM_Bse_Mkt_Carc_CWT);
 PARAMETER(DB1.TH_CM_Srt_Dsc_Live_CWT);
 PARAMETER(DB1.TH_CM_Srt_Dsc_Carc_CWT);
 PARAMETER(DB1.TH_CM_Yld_G_L_Live_CWT);
 PARAMETER(DB1.TH_CM_Yld_G_L_Carc_CWT);
 PARAMETER(DB1.TH_CM_Crc_Val_Live_CWT);
 PARAMETER(DB1.TH_CM_Crc_Val_Carc_CWT);
 PARAMETER(DB1.TH_CM_Lean_Prem_Live_CWT);
 PARAMETER(DB1.TH_CM_Lean_Prem_Carc_CWT);
 PARAMETER(DB1.TH_CM_Gross_Live_CWT);
 PARAMETER(DB1.TH_CM_Gross_Carc_CWT);
 PARAMETER(DB1.TH_Source_Type);
 PARAMETER(DB1.TH_Scale_Ticket_Sts);
 PARAMETER(DB1.TH_Payment_Type);
 PARAMETER(DB1.TH_HPS_Movement_Ref_#);
 PARAMETER(DB1.TH_Source_Code);
 PARAMETER(DB1.TH_Hog_Class_Type);
 PARAMETER(DB1.TH_Posted_to_HPS_Flag);
 PARAMETER(DB1.TH_Schedule_Kill_Shift);
 PARAMETER(DB1.TH_Shift_Held_Over);
 PARAMETER(DB1.TH_PHA_Lean_Prm_Crc_CWT);
 PARAMETER(LCL.TH_VC_Gross_Value_HD);
 PARAMETER(DB1.TH_PHA_Sort_Disc_Fctr);
 PARAMETER(DB1.DF_Defect_Code);
 PARAMETER(DB1.THP_Process_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(DB1.HB_Buyer_Code);
 PARAMETER(DB1.GN_Genetic_Code);
 PARAMETER(DB1.HC_Class_Code);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 PARAMETER(PAR.TH_Voucher_Payment_Date);
 PARAMETER(PAR.Competitors_Code_1_Usr);
 PARAMETER(PAR.Competitors_Code_2_Usr);
 PARAMETER(PAR.Competitors_Code_3_Usr);
 {
  //?Execute internal function

  EXECUTE FUNCTION(HPE096) TYPE(EXCINTFUN)                                        AB1196857;
  EXECUTE FUNCTION(Rtv Hog Class         RT) TYPE(RTVOBJ) FILE(PKA8REP)           AB1127629;
  PARAMETER(PAR.HC_Class_Code);
  PARAMETER(WRK.HC_Description);
  PARAMETER(WRK.HC_Defect_Required);
  PARAMETER(WRK.HC_Price_Required);
  PARAMETER(WRK.HC_Resolution);
  PARAMETER(WRK.HC_Qualification);
  PARAMETER(WRK.HC_Class_Type);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Market and head kill greater then zero
  //?Build Competitors file
  CASE;

  // IF WRK.HC Class Type is Market
  IF WRK.HC_Class_Type = 'M';

  EXECUTE FUNCTION(Rtv/Dlt Comptitors Tat RT) TYPE(RTVOBJ) FILE(PKDGCPP)          AB1166611;
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Dlt Competitors Tattoo DO) TYPE(DLTOBJ) FILE(PKDGCPP)          AB1166576;
   PARAMETER(DB1.CMP_Program_Code);
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
  }

  //?*Retrieve Purchase Price calculation information.
  EXECUTE FUNCTION(Rtv PrchPrc Clc Info  RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1116661;
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(WRK.BOH_Market_Add_Deduct);
  PARAMETER(WRK.BOH_Quote_Price_Type);
  PARAMETER(WRK.BOH_Quoted_Base_Mkt_Price);
  PARAMETER(WRK.BOH_Commodity_Market_Code);
  PARAMETER(WRK.BOH_Commodity_Price_Group);
  PARAMETER(WRK.BOH_Market_Date_Method);
  PARAMETER(WRK.PC_Contract_Code);
  PARAMETER(WRK.PSC_Sub_Contract_Code);
  PARAMETER(WRK.PO_Option_Code);
  PARAMETER(WRK.CMP_Program_Code);
  {
   //?USER: Processing if Data record not found

   //?1/28/08 SLM LEFT OVER INFORMATION MAY HAVE CAUSED ISSUES
   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Competitors will be using CASH BASIC Pricing, and no pricing opition
  //?Competitor 1
  DO;

  CASE;

  // IF PAR.Competitors Code 1 Usr NE WRK.Blank USR
  IF PAR.Competitors_Code_1_Usr <> WRK.Blank_USR;

  CASE;

  // IF PAR.TH Head Killed is Not Zero
  IF PAR.TH_Head_Killed <> *ZERO;

  EXECUTE FUNCTION(Rtv Competitors Comm   RT) TYPE(RTVOBJ) FILE(PKDEREP)          AB1166598;
  PARAMETER(00001);
  PARAMETER(WRK.CCC_Commodity_Mrkt_Code);
  PARAMETER(WRK.CCC_Commodity_Price_Group);
  PARAMETER(WRK.CCC_Market_Date_Method);
  PARAMETER(PAR.Competitors_Code_1_Usr);
  PARAMETER(WRK.CMP_Market_Add_Deduct);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   EXECUTE FUNCTION(Rtv CMP Info          RT) TYPE(RTVOBJ) FILE(PKARREP)           AB1116767;
   PARAMETER(PAR.CMP_Program_Code);
   PARAMETER(WRK.CMP_Description);
   PARAMETER(WRK.CMP_Grading_Type);
   PARAMETER(WRK.CMP_Sort_Basis);
   PARAMETER(WRK.CMP_Carc_Wgt_Type);
   PARAMETER(WRK.CMP_Std_Lean_Percent);
   PARAMETER(WRK.CMP_Lean_Factor);
   PARAMETER(WRK.CMP_Optimal_Row_Nbr_f_srt);
   PARAMETER(WRK.CMP_Type);
   PARAMETER(PAR.CMP_Market_Add_Deduct);
   PARAMETER(WRK.RS_Record_Status);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

  }

  // Call program Carcass Merit Process  XF.
  CALL PROGRAM(Carcass Merit Process  XF) ('PKXNXFR');
  PARAMETER(WRK.CMP_Market_Add_Deduct);
  PARAMETER('LP');
  PARAMETER(*ZERO);
  PARAMETER(WRK.CCC_Commodity_Mrkt_Code);
  PARAMETER(WRK.CCC_Commodity_Price_Group);
  PARAMETER(WRK.CCC_Market_Date_Method);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER('CBP');
  PARAMETER(PAR.Competitors_Code_1_Usr);
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(PAR.TH_Purchase_Date);
  PARAMETER(PAR.TH_Live_Wgt);
  PARAMETER(WRK.TH_CM_Base_Mkt_Price);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.TH_CM_Market_Price);
  PARAMETER(PAR.TH_Head_Killed);
  PARAMETER(PAR.TH_Head_Adds);
  PARAMETER(PAR.TH_Actual_Yield);
  PARAMETER(PAR.TH_Adj_Actual_Yield);
  PARAMETER(PAR.TH_CM_Market_Price);
  PARAMETER(PAR.TH_Avg_Hot_Wgt_EXC_ADD);
  PARAMETER(PAR.TH_Head_Excluded);
  PARAMETER(PAR.TH_Source_Type);
  PARAMETER(PAR.TH_Payment_Type);
  PARAMETER(PAR.TH_PHA_Lean_Prm_Crc_CWT);
  PARAMETER(PAR.TH_VC_Gross_Value_HD);
  PARAMETER(PAR.TH_PHA_Sort_Disc_Fctr);
  PARAMETER('Y');
  PARAMETER('P');

  ENDIF;

  ENDIF;

  ENDDO;

  //?Competitor 2
  DO;

  CASE;

  // IF PAR.Competitors Code 2 Usr NE WRK.Blank USR
  IF PAR.Competitors_Code_2_Usr <> WRK.Blank_USR;

  CASE;

  // IF PAR.TH Head Killed is Not Zero
  IF PAR.TH_Head_Killed <> *ZERO;

  EXECUTE FUNCTION(Rtv Competitors Comm   RT) TYPE(RTVOBJ) FILE(PKDEREP)          AB1166598;
  PARAMETER(00001);
  PARAMETER(WRK.CCC_Commodity_Mrkt_Code);
  PARAMETER(WRK.CCC_Commodity_Price_Group);
  PARAMETER(WRK.CCC_Market_Date_Method);
  PARAMETER(PAR.Competitors_Code_2_Usr);
  PARAMETER(WRK.CMP_Market_Add_Deduct);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   EXECUTE FUNCTION(Rtv CMP Info          RT) TYPE(RTVOBJ) FILE(PKARREP)           AB1116767;
   PARAMETER(PAR.CMP_Program_Code);
   PARAMETER(WRK.CMP_Description);
   PARAMETER(WRK.CMP_Grading_Type);
   PARAMETER(WRK.CMP_Sort_Basis);
   PARAMETER(WRK.CMP_Carc_Wgt_Type);
   PARAMETER(WRK.CMP_Std_Lean_Percent);
   PARAMETER(WRK.CMP_Lean_Factor);
   PARAMETER(WRK.CMP_Optimal_Row_Nbr_f_srt);
   PARAMETER(WRK.CMP_Type);
   PARAMETER(PAR.CMP_Market_Add_Deduct);
   PARAMETER(WRK.RS_Record_Status);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

  }

  // Call program Carcass Merit Process  XF.
  CALL PROGRAM(Carcass Merit Process  XF) ('PKXNXFR');
  PARAMETER(WRK.CMP_Market_Add_Deduct);
  PARAMETER('LP');
  PARAMETER(*ZERO);
  PARAMETER(WRK.CCC_Commodity_Mrkt_Code);
  PARAMETER(WRK.CCC_Commodity_Price_Group);
  PARAMETER(WRK.CCC_Market_Date_Method);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER('CBP');
  PARAMETER(PAR.Competitors_Code_2_Usr);
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(PAR.TH_Purchase_Date);
  PARAMETER(PAR.TH_Live_Wgt);
  PARAMETER(WRK.TH_CM_Base_Mkt_Price);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.TH_CM_Market_Price);
  PARAMETER(PAR.TH_Head_Killed);
  PARAMETER(PAR.TH_Head_Adds);
  PARAMETER(PAR.TH_Actual_Yield);
  PARAMETER(PAR.TH_Adj_Actual_Yield);
  PARAMETER(PAR.TH_CM_Market_Price);
  PARAMETER(PAR.TH_Avg_Hot_Wgt_EXC_ADD);
  PARAMETER(PAR.TH_Head_Excluded);
  PARAMETER(PAR.TH_Source_Type);
  PARAMETER(PAR.TH_Payment_Type);
  PARAMETER(PAR.TH_PHA_Lean_Prm_Crc_CWT);
  PARAMETER(PAR.TH_VC_Gross_Value_HD);
  PARAMETER(PAR.TH_PHA_Sort_Disc_Fctr);
  PARAMETER('Y');
  PARAMETER('P');

  ENDIF;

  ENDIF;

  ENDDO;

  //?Competitor 3
  DO;

  CASE;

  // IF PAR.Competitors Code 3 Usr NE WRK.Blank USR
  IF PAR.Competitors_Code_3_Usr <> WRK.Blank_USR;

  CASE;

  // IF PAR.TH Head Killed is Not Zero
  IF PAR.TH_Head_Killed <> *ZERO;

  EXECUTE FUNCTION(Rtv Competitors Comm   RT) TYPE(RTVOBJ) FILE(PKDEREP)          AB1166598;
  PARAMETER(00001);
  PARAMETER(WRK.CCC_Commodity_Mrkt_Code);
  PARAMETER(WRK.CCC_Commodity_Price_Group);
  PARAMETER(WRK.CCC_Market_Date_Method);
  PARAMETER(PAR.Competitors_Code_3_Usr);
  PARAMETER(WRK.CMP_Market_Add_Deduct);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   EXECUTE FUNCTION(Rtv CMP Info          RT) TYPE(RTVOBJ) FILE(PKARREP)           AB1116767;
   PARAMETER(PAR.CMP_Program_Code);
   PARAMETER(WRK.CMP_Description);
   PARAMETER(WRK.CMP_Grading_Type);
   PARAMETER(WRK.CMP_Sort_Basis);
   PARAMETER(WRK.CMP_Carc_Wgt_Type);
   PARAMETER(WRK.CMP_Std_Lean_Percent);
   PARAMETER(WRK.CMP_Lean_Factor);
   PARAMETER(WRK.CMP_Optimal_Row_Nbr_f_srt);
   PARAMETER(WRK.CMP_Type);
   PARAMETER(PAR.CMP_Market_Add_Deduct);
   PARAMETER(WRK.RS_Record_Status);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

  }

  // Call program Carcass Merit Process  XF.
  CALL PROGRAM(Carcass Merit Process  XF) ('PKXNXFR');
  PARAMETER(WRK.CMP_Market_Add_Deduct);
  PARAMETER('LP');
  PARAMETER(*ZERO);
  PARAMETER(WRK.CCC_Commodity_Mrkt_Code);
  PARAMETER(WRK.CCC_Commodity_Price_Group);
  PARAMETER(WRK.CCC_Market_Date_Method);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER('CBP');
  PARAMETER(PAR.Competitors_Code_3_Usr);
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(PAR.TH_Purchase_Date);
  PARAMETER(PAR.TH_Live_Wgt);
  PARAMETER(WRK.TH_CM_Base_Mkt_Price);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.TH_CM_Market_Price);
  PARAMETER(PAR.TH_Head_Killed);
  PARAMETER(PAR.TH_Head_Adds);
  PARAMETER(PAR.TH_Actual_Yield);
  PARAMETER(PAR.TH_Adj_Actual_Yield);
  PARAMETER(PAR.TH_CM_Market_Price);
  PARAMETER(PAR.TH_Avg_Hot_Wgt_EXC_ADD);
  PARAMETER(PAR.TH_Head_Excluded);
  PARAMETER(PAR.TH_Source_Type);
  PARAMETER(PAR.TH_Payment_Type);
  PARAMETER(PAR.TH_PHA_Lean_Prm_Crc_CWT);
  PARAMETER(PAR.TH_VC_Gross_Value_HD);
  PARAMETER(PAR.TH_PHA_Sort_Disc_Fctr);
  PARAMETER('Y');
  PARAMETER('P');

  ENDIF;

  ENDIF;

  ENDDO;

  ENDIF;

 }

 ENDIF;

}


//?Do not print the reports by Mel/Jancie 4/6/00.  -Purva
//?Competitor reports
