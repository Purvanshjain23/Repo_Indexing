// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNLGXFR
// ?Date: 14.08.2025 Time: 03:45:28
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// LCL.Text USR 20 = CON.whatever the heck!!!
LCL.Text_USR_20 = 'whatever the heck!!!';

//?Case quantity=Gross gallons    Quantity Shipped Total = Net Gallons
// PAR.HPB Meter Start Gallon = CON.1
PAR.HPB_Meter_Start_Gallon = 1;

// PAR.HPB Meter Ending Gallon = CON.*ZERO + PAR.Case Quantity
PAR.HPB_Meter_Ending_Gallon = 0 + PAR.Case_Quantity;

// PAR.HPB Meter Total Gallon = PAR.HPB Meter Ending Gallon
PAR.HPB_Meter_Total_Gallon = PAR.HPB_Meter_Ending_Gallon;

EXECUTE FUNCTION(RTV all used fields    RT) TYPE(RTVOBJ) FILE(PMCAREP)          AC1851688;
PARAMETER(361);
PARAMETER('B100');
PARAMETER(NLL.COA_Bio_dsl_Fuel_Cd_Descr);
PARAMETER(NLL.COA_Producer_Regist_Nbr);
PARAMETER(NLL.COA_Employer_ID);
PARAMETER(NLL.COA_Sold_From_Address);
PARAMETER(NLL.COA_Sold_From_Name);
PARAMETER(NLL.COA_ULSD_Company_#);
PARAMETER(NLL.COA_ULSD_Facility_#);
PARAMETER(LCL.COA_RIN_Equivalence_Valu);
PARAMETER(LCL.COA_RIN_Renewable_Enrgy);
PARAMETER(LCL.COA_RIN_Type_Flag);
PARAMETER(NLL.COA_Density_Loadout);
PARAMETER(NLL.COA_Density_Reference);
PARAMETER(NLL.COA_Temperature_Loadout);
PARAMETER(NLL.COA_Temperature_Ref);
PARAMETER(LCL.COA_BOL_Percent);
PARAMETER(NLL.COA_Sale_Location);
PARAMETER(NLL.COA_Active_Whse_Tank_1);
PARAMETER(NLL.COA_Active_Whse_Tank_2);
PARAMETER(NLL.COA_Active_Whse_Tank_3);
PARAMETER(NLL.COA_Active_Whse_Tank_4);
PARAMETER(NLL.COA_Active_Whse_Tank_5);
PARAMETER(NLL.COA_Active_Whse_Tank_6);
PARAMETER(LCL.COA_Temp_Conv_Factor_1);
PARAMETER(LCL.Operation_Factor_1);
PARAMETER(LCL.COA_Temp_Conv_Factor_2);
PARAMETER(LCL.Operation_Factor_2);
PARAMETER(NLL.COA_RFS_Renew_Fuel_Code);
PARAMETER(NLL.COA_RFS_Rnwbl_Feedstock);
PARAMETER(LCL.Sold_To_Customer_hpb_biod);
PARAMETER(NLL.Record_Status);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// LCL.COA Temperature Loadout = PAR.Product Temperature
LCL.COA_Temperature_Loadout = PAR.Product_Temperature;

//?Calc temperature adjustment which is used to calc the net gallons
//?Conversion factor 1
CASE;

// IF LCL.COA Temp Conv Factor 1 is Entered
IF LCL.COA_Temp_Conv_Factor_1 <> 0;

CASE;

// IF LCL.Operation Factor 1 is Multiply
IF LCL.Operation_Factor_1 = 'M';

// PGM.*Synon (17,9) work field = LCL.COA Temperature Loadout * LCL.COA Temp Conv Factor 1 *
PGM.*Synon_179_work_field = LCL.COA_Temperature_Loadout * LCL.COA_Temp_Conv_Factor_1;

// IF LCL.Operation Factor 1 is Divide
IF LCL.Operation_Factor_1 = 'D';

// PGM.*Synon (17,9) work field = LCL.COA Temperature Loadout / LCL.COA Temp Conv Factor 1 *
PGM.*Synon_179_work_field = LCL.COA_Temperature_Loadout / LCL.COA_Temp_Conv_Factor_1;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Synon (17,9) work field = LCL.COA Temperature Loadout + LCL.COA Temp Conv Factor 1
PGM.*Synon_179_work_field = LCL.COA_Temperature_Loadout + LCL.COA_Temp_Conv_Factor_1;

ENDIF;

//?Conversion factor 1
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Synon (17,9) work field = LCL.COA Temperature Loadout
PGM.*Synon_179_work_field = LCL.COA_Temperature_Loadout;

ENDIF;

//?Conversion factor 2   -- do to the result of conv factor 1
CASE;

// IF LCL.COA Temp Conv Factor 2 is Entered
IF LCL.COA_Temp_Conv_Factor_2 <> 0;

CASE;

// IF LCL.Operation Factor 2 is Multiply
IF LCL.Operation_Factor_2 = 'M';

// PGM.*Synon (17,9) work field = PGM.*Synon (17,9) work field * LCL.COA Temp Conv Factor 2 *
PGM.*Synon_179_work_field = PGM.*Synon_179_work_field * LCL.COA_Temp_Conv_Factor_2;

// IF LCL.Operation Factor 2 is Divide
IF LCL.Operation_Factor_2 = 'D';

// PGM.*Synon (17,9) work field = PGM.*Synon (17,9) work field / LCL.COA Temp Conv Factor 2 *
PGM.*Synon_179_work_field = PGM.*Synon_179_work_field / LCL.COA_Temp_Conv_Factor_2;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Synon (17,9) work field = PGM.*Synon (17,9) work field + LCL.COA Temp Conv Factor 2
PGM.*Synon_179_work_field = PGM.*Synon_179_work_field + LCL.COA_Temp_Conv_Factor_2;

ENDIF;

ENDIF;

// PAR.HPB Temperature Adjustmnt = CON.1 * PGM.*Synon (17,9) work field *Rounded
PAR.HPB_Temperature_Adjustmnt = 1 * PGM.*Synon_179_work_field 'H';

// LCL.COA Last RIN EEEEEEEE = CON.*ZERO
LCL.COA_Last_RIN_EEEEEEEE = *ZERO;

EXECUTE FUNCTION(HPB Create RIN Nbr    IF) TYPE(EXCINTFUN)                      AC1857543;
PARAMETER(4846);
PARAMETER(82883);
PARAMETER(15);
PARAMETER(2);
PARAMETER(1);
PARAMETER(PAR.COA_BOL_Percent);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(PAR.HPB_Meter_Start_Gallon);
PARAMETER(PAR.HPB_Meter_Ending_Gallon);
PARAMETER(PAR.HPB_Meter_Total_Gallon);
PARAMETER(PAR.HPB_Temperature_Adjustmnt);
PARAMETER(LCL.COA_Last_RIN_EEEEEEEE);
PARAMETER(PAR.COA_Batch_Header_RIN);
PARAMETER(PAR.COA_RIN_SSSSSSSS);
PARAMETER(PAR.COA_RIN_EEEEEEEE);
PARAMETER(PAR.COA_RIN_Volume_in_Gallons);
PARAMETER(PAR.COA_Batch_RIN_Volume);
PARAMETER(PAR.COA_RIN_Quantity);
PARAMETER(1100622);
{
 //?Execute internal function

 //?P00579  RMC 5/13/10 EMTS Processing: pass out the Batch Volume,
 //?  RIN Quantity. Calc rin qty from batch volume as a whole number
 //? because Rin qty must =  batch volume * equiv value.
 //?6/22/2010 added 1 dec place to prop conv factor fields
 //?6/25/2010 added 2 dec place to hpb temperature adjustmnt field. was 7,6
 //?7/13/2010 recalc meter end gallon after rounding to whole nbr
 //?7/14/2010 use new table for api vol corr factor
 //?S00946  RMC 9/24/09 calc EEEEEEEE = (SSSSSSSS + Rin Volume) - 1
 //? instead of adding 1 to the RIN Volume.
 //?  for ex. RIN Vol of 10502 would have rin 00000001 00010502
 //?  which represents 10502 RINS
 //?S00813  RMC 5/21/09 adjust gross gallons to be 99.9% of the gross
 //?which is the amount that is actually renewable fuel. the .1% is petro
 //?  gross gall of renewable fuel = gross gallons * (bol percent/100)
 //? See compute statement below
 //?____________________________________________________
 //?The net gallons are calculated by taking the gross gallons
 //? times a temperature adjustment formula which is stored in the
 //? Property Batch Header
 //?Example:  145 degrees * -.0008008 + 1.048 = temp adjustment
 //?       temp adjustment * gross Gallons = Net Gallons
 //?The 1st RIN for a batch will have SSSSSSSS = 00000001,
 //?The subsequent RINS, will have SSSSSSSS = last RIN EEEEEEEE + 1,
 //?** EEEEEEEE = (Net Total Gallons for that detail) + its SSSSSSSS nbr
 //?** EEEEEEEE = SSSSSSSS nbr if the batch_RIN represents 1 gallon
 //? Equivalence value = 1.5 for now. it is stored in prop hdr as 15
 // LCL.USR Count = CVTVAR(PAR.COA RIN Equivalence Valu)
 LCL.USR_Count = CVTVAR(PAR.COA_RIN_Equivalence_Valu);

 // LCL.HPB Equivalence Value USR = LCL.USR Count / CON.10 *
 LCL.HPB_Equivalence_Value_USR = LCL.USR_Count / 10;

 // LCL.USR Work Field 5A     USR = CVTVAR(PAR.HPB COA Batch Number)
 LCL.USR_Work_Field_5A_USR = CVTVAR(PAR.HPB_COA_Batch_Number);

 //?Temp adjust * start and end gallons to get the Net Gallons
 //?Calc RIN SSSSSSSS nbr
 CASE;

 // IF PAR.COA Last RIN EEEEEEEE is eq 00000000
 IF PAR.COA_Last_RIN_EEEEEEEE = 0;

 // LCL.HPB Meter Start Gallon = CON.1
 LCL.HPB_Meter_Start_Gallon = 1;

 //?Calc RIN SSSSSSSS nbr
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.HPB Meter Start Gallon = PAR.COA Last RIN EEEEEEEE + CON.1
 LCL.HPB_Meter_Start_Gallon = PAR.COA_Last_RIN_EEEEEEEE + 1;

 ENDIF;

 //?Temperature Adjust the Total Gross Gallons to get the Net
 //?S00689    RMC 3/26/09 dont round to zero decimal field yet.
 // Synon (17,7) work field =       * Compu: gross gal*temp adj
 PGM.*Synon_177_work_field = ( PAR.HPB_Meter_Total_Gallon * ( PAR.COA_BOL_Percent / 100 )
 'H' ) * PAR.HPB_Temperature_Adjustmnt;

 //?Calc Volume for the Total Net Gallons using workfield from above calc
 // LCL.HPB Meter Ending Gallon = PGM.*Synon (17,7) work field * LCL.HPB Equivalence Value USR *Roun
 LCL.HPB_Meter_Ending_Gallon = PGM.*Synon_177_work_field * LCL.HPB_Equivalence_Value_USR
 'H';

 //?EMTS: Rin qty must =  batch volume * equiv value.  5/13/2010
 // PAR.COA Batch RIN Volume = CON.1 * PGM.*Synon (17,7) work field *Rounded
 PAR.COA_Batch_RIN_Volume = 1 * PGM.*Synon_177_work_field 'H';

 // PAR.COA RIN Quantity = PAR.COA Batch RIN Volume * LCL.HPB Equivalence Value USR *Rounded
 PAR.COA_RIN_Quantity = PAR.COA_Batch_RIN_Volume * LCL.HPB_Equivalence_Value_USR 'H';

 // LCL.HPB Meter Ending Gallon = PAR.COA Batch RIN Volume * LCL.HPB Equivalence Value USR *Rounded
 LCL.HPB_Meter_Ending_Gallon = PAR.COA_Batch_RIN_Volume * LCL.HPB_Equivalence_Value_USR
 'H';

 // PAR.COA RIN Volume in Gallons = LCL.HPB Meter Ending Gallon
 PAR.COA_RIN_Volume_in_Gallons = LCL.HPB_Meter_Ending_Gallon;

 //?Add Volume to SSSSSSSS nbr to get the EEEEEEEE nbr
 CASE;

 // IF PAR.HPB Meter Total Gallon is Eq 1
 IF PAR.HPB_Meter_Total_Gallon = 1;

 // LCL.HPB Meter Ending Gallon = LCL.HPB Meter Start Gallon
 LCL.HPB_Meter_Ending_Gallon = LCL.HPB_Meter_Start_Gallon;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.HPB Meter Ending Gallon = LCL.HPB Meter Start Gallon + LCL.HPB Meter Ending Gallon
 LCL.HPB_Meter_Ending_Gallon = LCL.HPB_Meter_Start_Gallon + LCL.HPB_Meter_Ending_Gallon;

 // LCL.HPB Meter Ending Gallon = LCL.HPB Meter Ending Gallon - CON.1
 LCL.HPB_Meter_Ending_Gallon = LCL.HPB_Meter_Ending_Gallon - 1;

 ENDIF;

 // PAR.COA RIN SSSSSSSS = LCL.HPB Meter Start Gallon
 PAR.COA_RIN_SSSSSSSS = LCL.HPB_Meter_Start_Gallon;

 // PAR.COA RIN EEEEEEEE = LCL.HPB Meter Ending Gallon
 PAR.COA_RIN_EEEEEEEE = LCL.HPB_Meter_Ending_Gallon;

 // PAR.COA Last RIN EEEEEEEE = LCL.HPB Meter Ending Gallon
 PAR.COA_Last_RIN_EEEEEEEE = LCL.HPB_Meter_Ending_Gallon;

 // LCL.Generic Heading 8 = CVTVAR(LCL.HPB Meter Start Gallon)
 LCL.Generic_Heading_8 = CVTVAR(LCL.HPB_Meter_Start_Gallon);

 // LCL.Generic Heading 9 = CVTVAR(LCL.HPB Meter Ending Gallon)
 LCL.Generic_Heading_9 = CVTVAR(LCL.HPB_Meter_Ending_Gallon);

 //?Use the batch's production year- per tom 9/08/09
 // LCL.Year Code = PAR.COA Batch Production Date *YEAR
 LCL.Year_Code = DATEDTLS(PAR.COA_Batch_Production_Date 'YR' 1111111 'NONE' 'N' 1);

 // LCL.Year Alpha (YYYY) USR = LCL.Year Code
 LCL.Year_Alpha_YYYY_USR = LCL.Year_Code;

 //?Concatenate all fields together
 // LCL.COA Batch Header RIN = CONCAT(PAR.COA RIN Type Flag,LCL.Year Alpha (YYYY) USR,CND.*None)
 LCL.COA_Batch_Header_RIN = PAR.COA_RIN_Type_Flag + LCL.Year_Alpha_YYYY_USR (*ZERO);

 // LCL.COA Batch Header RIN = CONCAT(LCL.COA Batch Header RIN,PAR.COA ULSD Company #,CND.*None)
 LCL.COA_Batch_Header_RIN = LCL.COA_Batch_Header_RIN + PAR.COA_ULSD_Company_# (*ZERO);

 // LCL.COA Batch Header RIN = CONCAT(LCL.COA Batch Header RIN,PAR.COA ULSD Facility #,CND.*None)
 LCL.COA_Batch_Header_RIN = LCL.COA_Batch_Header_RIN + PAR.COA_ULSD_Facility_# (*ZERO);

 // LCL.COA Batch Header RIN = CONCAT(LCL.COA Batch Header RIN,LCL.USR Work Field 5A     USR,CND.*No
 LCL.COA_Batch_Header_RIN = LCL.COA_Batch_Header_RIN + LCL.USR_Work_Field_5A_USR (*ZERO);

 // LCL.COA Batch Header RIN = CONCAT(LCL.COA Batch Header RIN,PAR.COA RIN Equivalence Valu,CND.*Non
 LCL.COA_Batch_Header_RIN = LCL.COA_Batch_Header_RIN + PAR.COA_RIN_Equivalence_Valu (*ZERO);

 // LCL.COA Batch Header RIN = CONCAT(LCL.COA Batch Header RIN,PAR.COA RIN Renewable Enrgy,CND.*None
 LCL.COA_Batch_Header_RIN = LCL.COA_Batch_Header_RIN + PAR.COA_RIN_Renewable_Enrgy (*ZERO);

 // LCL.COA Batch Header RIN = CONCAT(LCL.COA Batch Header RIN,LCL.Generic Heading 8,CND.*None)
 LCL.COA_Batch_Header_RIN = LCL.COA_Batch_Header_RIN + LCL.Generic_Heading_8 (*ZERO);

 // PAR.COA Batch Header RIN = CONCAT(LCL.COA Batch Header RIN,LCL.Generic Heading 9,CND.*None)
 PAR.COA_Batch_Header_RIN = LCL.COA_Batch_Header_RIN + LCL.Generic_Heading_9 (*ZERO);

}


