// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNJSXFR
// ?Date: 14.08.2025 Time: 03:45:22
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Rtv QtyWgt Ord/Sch     RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1930780;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(PAR.Detail_Line_Status);
PARAMETER(PAR.Scheduled_Ship_Date);
PARAMETER(PAR.Event_Code);
PARAMETER(PAR.Quantity_Ordered_2_USR);
PARAMETER(PAR.Quantity_Scheduled_2_USR);
PARAMETER(PAR.Weight_Order_2_usr);
PARAMETER(PAR.Weight_Schd_2_USR);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Warehouse_Type_USR);
PARAMETER(PAR.Reserved_Product_USR);
{
 //?USER: Initialize routine

 // PAR.Quantity Ordered 2 USR = CND.Equal to Zero
 PAR.Quantity_Ordered_2_USR = *ZERO;

 // PAR.Quantity Scheduled 2 USR = CND.Equal to Zero
 PAR.Quantity_Scheduled_2_USR = *ZERO;

 // PAR.Weight Order 2 usr = CND.Equal to zero
 PAR.Weight_Order_2_usr = *ZERO;

 // PAR.Weight Schd 2 USR = CND.Equal to zero
 PAR.Weight_Schd_2_USR = *ZERO;

 //?USER: Processing if Data record not found

 // PAR.Quantity Ordered 2 USR = CND.Equal to Zero
 PAR.Quantity_Ordered_2_USR = *ZERO;

 // PAR.Quantity Scheduled 2 USR = CND.Equal to Zero
 PAR.Quantity_Scheduled_2_USR = *ZERO;

 // PAR.Weight Order 2 usr = CND.Equal to zero
 PAR.Weight_Order_2_usr = *ZERO;

 // PAR.Weight Schd 2 USR = CND.Equal to zero
 PAR.Weight_Schd_2_USR = *ZERO;

 //?USER: Process Data record

 // LCL.Record Selected       USR = CND.yes
 LCL.Record_Selected_USR = 'Y';

 //?Schedule Ship Date
 CASE;

 // IF PAR.Scheduled Ship Date is entered
 IF PAR.Scheduled_Ship_Date <> *ZERO;

 CASE;

 // IF DB1.Scheduled Ship Date GE PAR.Scheduled Ship Date
 IF DB1.Scheduled_Ship_Date >= PAR.Scheduled_Ship_Date;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Record Selected       USR = CND.no
 LCL.Record_Selected_USR = 'N';

 ENDIF;

 ENDIF;

 //?Warehouse selection
 CASE;

 // IF PAR.Warehouse Code is Warehouse Code not Blank
 IF PAR.Warehouse_Code <> *BLANK;

 CASE;

 // IF DB1.Warehouse Code EQ PAR.Warehouse Code
 IF DB1.Warehouse_Code = PAR.Warehouse_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Record Selected       USR = CND.no
 LCL.Record_Selected_USR = 'N';

 ENDIF;

 ENDIF;

 //?detail line
 CASE;

 // IF PAR.Detail Line Status is *None
 IF PAR.Detail_Line_Status = *BLANK;

 //?detail line
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.Detail Line Status EQ PAR.Detail Line Status
 IF DB1.Detail_Line_Status = PAR.Detail_Line_Status;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Record Selected       USR = CND.no
 LCL.Record_Selected_USR = 'N';

 ENDIF;

 ENDIF;

 // LCL.Reserved Product  USR = CND.Blank
 LCL.Reserved_Product_USR = *BLANK;

 //?Rtv warehouse type, and display rcd if it eq CTL.Whs type if entered.
 EXECUTE FUNCTION(RTV Desc/Type/LotTrk  RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1471511;
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(LCL.Warehouse_Description);
 PARAMETER(LCL.Lot_Tracking_Flag);
 PARAMETER(LCL.Warehouse_Type_USR);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(VAL Order Schedule    RT) TYPE(RTVOBJ) FILE(PDKNCPP)           AC1502667;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(WRK.Record_Found_USR);
 {
  //?USER: Initialize routine

  // PAR.Record Found USR = CND.Record Not Found
  PAR.Record_Found_USR = 'N';

  //?USER: Process Data record

  // PAR.Record Found USR = CND.Record Found
  PAR.Record_Found_USR = 'Y';

  QUIT;

 }

 //?If order detail schedule exist, product is reserved, so * record.
 CASE;

 // IF WRK.Record Found USR is Record Found
 IF WRK.Record_Found_USR = 'Y';

 // AND DB1.Quantity Scheduled is Greater than zero
 AND DB1.Quantity_Scheduled > *ZERO;

 // LCL.Reserved Product  USR = CND.*Astrict
 LCL.Reserved_Product_USR = *;

 ENDIF;

 //?Select on warehouse type, reserved product
 CASE;

 // IF PAR.Warehouse Type USR NE WRK.BLANK 1               USR
 IF PAR.Warehouse_Type_USR <> WRK.BLANK_1_USR;

 // AND PAR.Warehouse Type USR NE LCL.Warehouse Type USR
 AND PAR.Warehouse_Type_USR <> LCL.Warehouse_Type_USR;

 // LCL.Record Selected       USR = CND.no
 LCL.Record_Selected_USR = 'N';

 //?Select on warehouse type, reserved product
 //?Select on warehouse type, reserved product
 // IF *OTHERWISE
 IF *OTHERWISE;

 ENDIF;

 //?Schedule Ship is zero
 CASE;

 // IF DB1.Scheduled Ship Date is not entered
 IF DB1.Scheduled_Ship_Date = *ZERO;

 // LCL.Record Selected       USR = CND.no
 LCL.Record_Selected_USR = 'N';

 ENDIF;

 CASE;

 // IF LCL.Record Selected       USR is yes
 IF LCL.Record_Selected_USR = 'Y';

 // PAR.Quantity Ordered 2 USR = PAR.Quantity Ordered 2 USR + DB1.Quantity Ordered
 PAR.Quantity_Ordered_2_USR = PAR.Quantity_Ordered_2_USR + DB1.Quantity_Ordered;

 // PAR.Quantity Scheduled 2 USR = PAR.Quantity Scheduled 2 USR + DB1.Quantity Scheduled
 PAR.Quantity_Scheduled_2_USR = PAR.Quantity_Scheduled_2_USR + DB1.Quantity_Scheduled;

 // PAR.Weight Order 2 usr = PAR.Weight Order 2 usr + DB1.Weight Ordered
 PAR.Weight_Order_2_usr = PAR.Weight_Order_2_usr + DB1.Weight_Ordered;

 // PAR.Weight Schd 2 USR = PAR.Weight Schd 2 USR + DB1.Weight Scheduled
 PAR.Weight_Schd_2_USR = PAR.Weight_Schd_2_USR + DB1.Weight_Scheduled;

 ENDIF;

}


