// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMYDPFR
// ?Date: 14.08.2025 Time: 12:05:51
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
//?PIO 11/26/24 We are recompiling the program as index is used in SQL Query
//?CSTAR02 AB Changes: Once PMEDCPL4 is converted to view, program is changed
//?to SQLRPG, and there due to Synon bug it is not initializing key fields
//?before fetching the first record and there the key values are null
//?resulting in decimal-data-error when moving it to local variables to hold
//?the previous values...therefore, initialized the key fields here
//?E5262 JJH 04/25/16 - Rebill (RB) for Invoice Suffix
//?- Recompile only because Rebill (RB) added to Invoice Suffix.
//?- (RB) added to LST - Not Blank
EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('A/R');

//?CSTAR02 Changes to avoid decimal-data error
// Execute function Initialize Key Fields.
EXECUTE FUNCTION(Initialize Key Fields) TYPE(EXCUSRSRC) ('PVGYUFR');

//?USER: Record selection processing

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

//?SEL: Remaining Balance
CASE;

// IF DB1.Remaining Balance Due is equal to zero
IF DB1.Remaining_Balance_Due = *ZERO;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?SEL: Company Number
CASE;

// IF PAR.Company Number is greater than zero
IF PAR.Company_Number > *ZERO;

CASE;

// IF DB1.Company Number NE PAR.Company Number
IF DB1.Company_Number <> PAR.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL: Invoice Number
CASE;

// IF PAR.Invoice Number is GT Zero
IF PAR.Invoice_Number > *ZERO;

CASE;

// IF DB1.Invoice Number NE PAR.Invoice Number
IF DB1.Invoice_Number <> PAR.Invoice_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL: Invoice Suffix
CASE;

// IF PAR.Invoice Suffix is Not Blank
IF PAR.Invoice_Suffix = 'CB'/'CM'/'DM'/'FT'/'IN'/'LC'/'NA'/'OA'/'RB';

CASE;

// IF DB1.Invoice Suffix NE PAR.Invoice Suffix
IF DB1.Invoice_Suffix <> PAR.Invoice_Suffix;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL: Note Date
CASE;

// IF PAR.ARHN Note Date is Entered
IF PAR.ARHN_Note_Date <> *ZERO;

CASE;

// IF DB1.ARHN Note Date NE PAR.ARHN Note Date
IF DB1.ARHN_Note_Date <> PAR.ARHN_Note_Date;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL: Note Time
CASE;

// IF PAR.ARHN Note Time is Entered
IF PAR.ARHN_Note_Time <> *ZERO;

CASE;

// IF DB1.ARHN Note Time NE PAR.ARHN Note Time
IF DB1.ARHN_Note_Time <> PAR.ARHN_Note_Time;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL: Note Created by
CASE;

// IF PAR.ARHN Note Created By is Entered
IF PAR.ARHN_Note_Created_By = 'PORKCRDT'/'ISBGUTI'/'PORKSLS4'/'PORKSCHE'/'PORKSCHE2';

CASE;

// IF DB1.ARHN Note Created By NE PAR.ARHN Note Created By
IF DB1.ARHN_Note_Created_By <> PAR.ARHN_Note_Created_By;

ENDIF;

ENDIF;

//?SEL: Follow Up Date
CASE;

// IF PAR.ARHN Follow Up Date is Entered
IF PAR.ARHN_Follow_Up_Date <> *ZERO;

CASE;

// IF DB1.ARHN Follow Up Date NE PAR.ARHN Follow Up Date
IF DB1.ARHN_Follow_Up_Date <> PAR.ARHN_Follow_Up_Date;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL: Follow Up Status
CASE;

// IF PAR.ARHN Follow Up Status is Entered
IF PAR.ARHN_Follow_Up_Status = 'C'/'O';

CASE;

// IF DB1.ARHN Follow Up Status NE PAR.ARHN Follow Up Status
IF DB1.ARHN_Follow_Up_Status <> PAR.ARHN_Follow_Up_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL: A/R Customer
CASE;

// IF PAR.A/R Customer Number is not equal to zero
IF PAR.AR_Customer_Number <> *ZERO;

CASE;

// IF DB1.A/R Customer Number NE PAR.A/R Customer Number
IF DB1.AR_Customer_Number <> PAR.AR_Customer_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL: Sales Route Code
CASE;

// IF PAR.Sales Route Code is entered
IF PAR.Sales_Route_Code <> *BLANK;

CASE;

// IF DB1.Sales Route Code NE PAR.Sales Route Code
IF DB1.Sales_Route_Code <> PAR.Sales_Route_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: On print of first page format

MOVE *ALL (To: 1PG From: PAR);

//?Company Name
CASE;

// IF PAR.Company Number is greater than zero
IF PAR.Company_Number > *ZERO;

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(X1PG_Company_Name_DRV);
PARAMETER(X1PG_Company_Number);

//?Company Name
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Company Name DRV = CON.*BLANK
X1PG_Company_Name_DRV = *BLANK;

ENDIF;

//?A/R Customer Name
CASE;

// IF 1PG.A/R Customer Number is not equal to zero
IF X1PG_AR_Customer_Number <> *ZERO;

EXECUTE FUNCTION(Ship To Name          DRV) TYPE(DRVFLD)                        AC1573561;
PARAMETER(X1PG_Ship_To_Name_DRV);
PARAMETER(X1PG_AR_Customer_Number);

//?A/R Customer Name
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Ship To Name          DRV = CON.*BLANK
X1PG_Ship_To_Name_DRV = *BLANK;

ENDIF;

//?Sales Route Description
CASE;

// IF 1PG.Sales Route Code is entered
IF X1PG_Sales_Route_Code <> *BLANK;

EXECUTE FUNCTION(Sales Route Desc      DRV) TYPE(DRVFLD)                        AC1575490;
PARAMETER(X1PG_Sales_Route_Desc_DRV);
PARAMETER(X1PG_Sales_Route_Code);

//?Sales Route Description
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Sales Route Desc      DRV = CON.*BLANK
X1PG_Sales_Route_Desc_DRV = *BLANK;

ENDIF;

// 1PG.Condition Desc. 1  USR = Condition name of 1PG.ARHN Follow Up Status
X1PG_Condition_Desc_1_USR = RTVCND(X1PG_ARHN_Follow_Up_Status);

//?USER: Print required level headings

// SUPPRESSED PRINT Invoice Number header format

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT Invoice Suffix header format

// SUPPRESSED PRINT ARHN Note Date header format

// SUPPRESSED PRINT ARHN Note Time header format

//?USER: On print of detail format

EXECUTE FUNCTION(Ship To Name          DRV) TYPE(DRVFLD)                        AC1573561;
PARAMETER(CUR.Ship_To_Name_DRV);
PARAMETER(CUR.AR_Customer_Number);

EXECUTE FUNCTION(Sales Route Desc      DRV) TYPE(DRVFLD)                        AC1575490;
PARAMETER(CUR.Sales_Route_Desc_DRV);
PARAMETER(CUR.Sales_Route_Code);

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : Prt Note Detail       PO
EXECUTE FUNCTION(Prt Note Detail       PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Invoice_Number);
PARAMETER(CUR.Invoice_Suffix);
PARAMETER(CUR.ARHN_Note_Number);

//?USER: Print required level totals

// SUPPRESSED PRINT ARHN Note Time totals format

// SUPPRESSED PRINT ARHN Note Date totals format

// SUPPRESSED PRINT Invoice Suffix totals format

// SUPPRESSED PRINT Company Number totals format

CASE;

IF NEW Invoice_Number;
// Print Invoice Number totals format
PRINT Invoice Number totals format;

ENDIF;

