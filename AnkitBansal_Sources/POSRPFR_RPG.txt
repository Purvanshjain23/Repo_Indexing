     H/TITLE Prt Pckg Var w/FG     PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 01/22/13  Time  : 11:33:19
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPOARREL5IF  E           K        DISK
      * RSQ : Packaging Item            Co/Ctgry/Grp/PkgItm
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FPOCCREL1IF  E           K        DISK
      * RTV : Packaging Group Category  Retrieval index
      *
     FPOCBREL1IF  E           K        DISK
      * RTV : Packaging Reporting Group Retrieval index
      *
     FPOARREL1IF  E           K        DISK
      * RTV : Packaging Item            Retrieval index
      *
     FPOAZCPL2IF  E           K        DISK
      * RSQ : Packaging BOM             Co/Pckg Item/Item
      *
     FPMALCPL2IF  E           K        DISK
      * RSQ : WF ISC Trans Sum/Pkg Var  Co/Item
      *
     FPOA0CPL1IF  E           K        DISK
      * RTV : Packaging Daily Usage     Retrieval index
      *
     FPOCAREL1IF  E           K        DISK
      * RTV : Packaging Type            Retrieval index
      *
     FCABZREL7IF  E           K        DISK
      * RSQ : Company Item              RSQ by Item only      NV
      *
     FPOSRPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Pckg Var w/FG     PF  Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
      * Long constants
     E                    @CN#    1  01  6   @CN    25
     I@ARREGL
      * Packaging Item            Retrieval index
      * Renamed input format fields
     I              ARAIC3                          WAAIC3
     I              ARBRAA                          WABRAA
     I              ARXITX                          WAXITX
     I              ARNONX                          WANONX
     I              AREAAA                          WAEAAA
     I              ARI5SX                          WAI5SX
     I              ARHGCD                          WAHGCD
     I              ARBICS                          WABICS
     I              ARIIWG                          WAIIWG
     I              ARD8AA                          WAD8AA
     I              ARM3SX                          WAM3SX
     I              ARM1SX                          WAM1SX
     I              ARNGSX                          WANGSX
     I              ARM2SX                          WAM2SX
     I              ARNHSX                          WANHSX
     I              ARNISX                          WANISX
     I              ARNJSX                          WANJSX
     I              ARNKSX                          WANKSX
     I              ARNLSX                          WANLSX
     I              ARNMSX                          WANMSX
     I              ARNNSX                          WANNSX
     I              AREBAA                          WAEBAA
     I              ARVSST                          WAVSST
     I              ARMJDT                          WAMJDT
     I              ARBETM                          WABETM
     I              ARCCVN                          WACCVN
     I              ARCDVN                          WACDVN
     I              ARMKDT                          WAMKDT
     I              ARBFTM                          WABFTM
     I              ARCEVN                          WACEVN
     I              ARCFVN                          WACFVN
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Packaging Item
      * I : RST Company Number
     I                                    P   1   20P1AIC3
      * I : MAP Packaging Item Code
     I                                        3  27 P1BRAA
      * I : MAP Pckg Type Class
     I                                       28  30 P1EAAA
      * I : MAP Pckg Reporting Group
     I                                       31  35 P1D8AA
      * I : MAP Pckg Group Category
     I                                       36  40 P1M3SX
     IP2PARM      DS
      * I :  Date From             USR
     I                                    P   1   40P2JEDT
     IP3PARM      DS
      * I :  Date To               USR
     I                                    P   1   40P3JFDT
     IP4PARM      DS
      * FLD: *Arrays
      * N : MAP Application Code
     I                                        1   6 P4DNCD
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1BRAA    PARM           WP0002 25        Packaging Item
     C           P1EAAA    PARM           WP0003  3        Pckg Type Class
     C           P1D8AA    PARM           WP0004  5        Pckg Reporting
     C           P1M3SX    PARM           WP0005  5        Pckg Group Cate
     C           P2JEDT    PARM           WP0006  70       Date From
     C           P3JFDT    PARM           WP0007  70       Date To
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Pckg Var w/FG     PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$MENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Pckg Var w/FG     PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN ARAIC3    WQKA01           Company Number
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           Company Number
      * Setup key
     C                     Z-ADDP1AIC3    WQKA01           Company Number
      * Establish starting position
     C           KRSA      SETLL@ARREOF                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
      * USER: Null report processing
      * CLC Set for Null Rpt   US - /UT User Source  * 
     C                     MOVEL'Y'       W0AP1P
     C                     MOVEL'Y'       W0NEWP
     C                     MOVEL'Y'       WUGGST           USR Display fie
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Pckg Group Cate
     C                     MOVEL'Y'       W0AL02  1        Pckg Reporting
     C                     MOVEL'Y'       W0AL03  1        Packaging Item
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $CAIC3           Company Number
     C                     MOVEL*BLANK    $CSQTX           Company Name DR
     C                     Z-ADD*ZERO     $CJEDT           Date From
     C                     Z-ADD*ZERO     $CJFDT           Date To
     C                     MOVEL*BLANK    $CEAAA           Pckg Type Class
     C                     MOVEL*BLANK    $CHMTX           Condition Desc.
     C                     MOVEL*BLANK    $CM3SX           Pckg Group Cate
     C                     MOVEL*BLANK    $CCGT1           Pckg Group Cate
     C                     MOVEL*BLANK    $CQBST           Report Type USR
     C                     MOVEL*BLANK    $CHLTX           Condition Desc.
     C                     MOVEL*BLANK    $CD8AA           Pckg Reporting
     C                     MOVEL*BLANK    $CCFT1           Pckg Group Desc
     C                     MOVEL*BLANK    $CBRAA           Packaging Item
     C                     MOVEL*BLANK    $CXITX           Pckg Item Descr
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDARAIC3    $DAIC3           Company Number
     C                     MOVEL*BLANK    $DOTTX           Blank for 4
      * Load related totals format
     C                     Z-ADDARAIC3    $LAIC3           Company Number
     C                     Z-ADD*ZERO     $LQ9NX           Actual Usage
     C                     Z-ADD*ZERO     $LRCNX           Standard Usage
     C                     Z-ADD*ZERO     $LRDNX           Variance Usage
     C                     Z-ADD*ZERO     $LRENX           Standard Waste
     C                     Z-ADD*ZERO     $LRQNX           Standard Usage
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDARAIC3    $EAIC3           Company Number
     C                     MOVELARM3SX    $EM3SX           Pckg Group Cate
     C                     MOVEL*BLANK    $ECGT1           Pckg Group Cate
      * Load related totals format
     C                     Z-ADDARAIC3    $KAIC3           Company Number
     C                     MOVELARM3SX    $KM3SX           Pckg Group Cate
     C                     Z-ADD*ZERO     $KQ9NX           Actual Usage
     C                     Z-ADD*ZERO     $KRCNX           Standard Usage
     C                     Z-ADD*ZERO     $KRDNX           Variance Usage
     C                     Z-ADD*ZERO     $KRENX           Standard Waste
     C                     Z-ADD*ZERO     $KRQNX           Standard Usage
     C                     MOVEL*BLANK    $KOTTX           Blank for 4
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDARAIC3    $FAIC3           Company Number
     C                     MOVELARD8AA    $FD8AA           Pckg Reporting
     C                     MOVEL*BLANK    $FCFT1           Pckg Group Desc
     C                     MOVELARM3SX    $FM3SX           Pckg Group Cate
      * Load related totals format
     C                     Z-ADDARAIC3    $JAIC3           Company Number
     C                     MOVELARD8AA    $JD8AA           Pckg Reporting
     C                     Z-ADD*ZERO     $JQ9NX           Actual Usage
     C                     Z-ADD*ZERO     $JRCNX           Standard Usage
     C                     Z-ADD*ZERO     $JRDNX           Variance Usage
     C                     Z-ADD*ZERO     $JRENX           Standard Waste
     C                     Z-ADD*ZERO     $JRRNX           Standard Usage
     C                     MOVEL*BLANK    $JOTTX           Blank for 4
     C                     MOVELARM3SX    $JM3SX           Pckg Group Cate
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELARBRAA    $GBRAA           Packaging Item
     C                     MOVELARI5SX    $GI5SX           Pckg Item Type
     C                     MOVELARXITX    $GXITX           Pckg Item Descr
     C                     Z-ADD*ZERO     $GQVNX           Actual Usage
     C                     Z-ADD*ZERO     $GSUQT           Standard Usage
     C                     Z-ADD*ZERO     $GQWNX           Variance Usage
     C                     Z-ADD*ZERO     $GQXNX           Standard Waste
     C                     Z-ADDARAIC3    $GAIC3           Company Number
     C                     Z-ADDARNONX    $GNONX           Pckg List Seque
     C                     MOVELAREAAA    $GEAAA           Pckg Type Class
     C                     Z-ADDARHGCD    $GHGCD           Item Code
     C                     Z-ADDARBICS    $GBICS           Pckg Unit Cost
     C                     Z-ADDARIIWG    $GIIWG           Pckg Tare Weigh
     C                     MOVELARD8AA    $GD8AA           Pckg Reporting
     C                     MOVELARM3SX    $GM3SX           Pckg Group Cate
     C                     MOVELARM1SX    $GM1SX           Pckg Modified W
     C                     MOVELARNGSX    $GNGSX           Pckg Unused Sta
     C                     MOVELARM2SX    $GM2SX           Pckg Unused Sts
     C                     MOVELARNHSX    $GNHSX           Pre-printed Bag
     C                     MOVELARNISX    $GNISX           Pckg Unused Sta
     C                     MOVELARNJSX    $GNJSX           Pckg Unused Sta
     C                     MOVELARNKSX    $GNKSX           Pckg Unused Sta
     C                     MOVELARNLSX    $GNLSX           Pckg Unused Sta
     C                     MOVELARNMSX    $GNMSX           Pckg Unused Sta
     C                     MOVELARNNSX    $GNNSX           Pckg Unused Sta
     C                     MOVELAREBAA    $GEBAA           Pckg Unused Cod
     C                     MOVELARVSST    $GVSST           Record Status
     C                     Z-ADDARMJDT    $GMJDT           Create Date
     C                     Z-ADDARBETM    $GBETM           Create Time
     C                     MOVELARCCVN    $GCCVN           Create User
     C                     MOVELARCDVN    $GCDVN           Create Program
     C                     Z-ADDARMKDT    $GMKDT           Change Date
     C                     Z-ADDARBFTM    $GBFTM           Change Time
     C                     MOVELARCEVN    $GCEVN           Change User
     C                     MOVELARCFVN    $GCFVN           Change Program
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * PRTOBJ calls after print of detail format
      * Embedded PRTOBJ : Prt Variance Dtl      PO
     C                     EXSR UASUBR                     Embedded PRTOBJ
      * USER: Process after print of detail format
     C                     ADD  $GQVNX    $JQ9NX           Actual Usage
     C                     ADD  $GSUQT    $JRCNX           Standard Usage
     C                     ADD  $GQWNX    $JRDNX           Variance Usage
     C                     ADD  $GQXNX    $JRENX           Standard Waste
     C                     ADD  WURPNX    YL0013           Standard Usage
     C                     Z-ADD*ZERO     WURPNX           Standard Usage
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN ARAIC3    WZA001           Company Number
     C                     Z-ADDARAIC3    WZA001
     C           *LIKE     DEFN ARM3SX    WZA002           Pckg Group Cate
     C                     MOVELARM3SX    WZA002
     C           *LIKE     DEFN ARD8AA    WZA003           Pckg Reporting
     C                     MOVELARD8AA    WZA003
     C           *LIKE     DEFN ARBRAA    WZA004           Packaging Item
     C                     MOVELARBRAA    WZA004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@ARREOF                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Rtv Include Flag      RT - Packaging Reporting Group  * 
     C                     EXSR SLRVGN
      * CASE: LCL.Pckg Include on Var Rpt is No
     C           YL0014    IFEQ 'N'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Pckg Type Class NE WRK.Blank for 4           USR
      *   |- c2    : DB1.Pckg Type Class NE PAR.Pckg Type Class
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1EAAA    IFNE WUOTTX                     *IF
     C           AREAAA    IFNE P1EAAA                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Pckg Group Category NE WRK.Blank 6 USR
      *   |- c2    : DB1.Pckg Group Category NE PAR.Pckg Group Category
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1M3SX    IFNE WUXKTX                     *IF
     C           ARM3SX    IFNE P1M3SX                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Pckg Reporting Group NE WRK.Blank 6 USR
      *   |- c2    : DB1.Pckg Reporting Group NE PAR.Pckg Reporting Group
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1D8AA    IFNE WUXKTX                     *IF
     C           ARD8AA    IFNE P1D8AA                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Packaging Item Code NE WRK.BLANK
      *   |- c2    : DB1.Packaging Item Code NE PAR.Packaging Item Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BRAA    IFNE WUGSTX                     *IF
     C           ARBRAA    IFNE P1BRAA                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Pckg Group Cate
     C                     MOVEL*BLANK    W0AL02  1        Pckg Reporting
     C                     MOVEL*BLANK    W0AL03  1        Packaging Item
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Pckg Group Cate
     C                     MOVEL'Y'       W0AL02  1        Pckg Reporting
     C                     MOVEL'Y'       W0AL03  1        Packaging Item
     C                     ELSE
      * Next record - Detect level breaks
     C           ARAIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           ARM3SX    IFNE WZA002                     Pckg Group Cate
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           ARD8AA    IFNE WZA003                     Pckg Reporting
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           ARBRAA    IFNE WZA004                     Packaging Item
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Pckg Reporting Group format
     C                     Z-ADDYL0013    $JRRNX           Standard Usage
     C                     Z-ADD*ZERO     YL0013           Standard Usage
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$JKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
      * USER: Process after print of Pckg Reporting Group format
     C                     ADD  $JRENX    $KRENX           Standard Waste
     C                     ADD  $JRDNX    $KRDNX           Variance Usage
     C                     ADD  $JRCNX    $KRCNX           Standard Usage
     C                     ADD  $JQ9NX    $KQ9NX           Actual Usage
     C                     ADD  $JRRNX    $KRQNX           Standard Usage
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 4
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Print format
     C                     WRITE$KKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
      * USER: Process after print of Pckg Group Category format
     C                     ADD  $KRCNX    $LRCNX           Standard Usage
     C                     ADD  $KQ9NX    $LQ9NX           Actual Usage
     C                     ADD  $KRDNX    $LRDNX           Variance Usage
     C                     ADD  $KRENX    $LRENX           Standard Waste
     C                     ADD  $KRQNX    $LRQNX           Standard Usage
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $LAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$LAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VLAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VLAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$LKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         B0MAIN    BEGSR
      *================================================================
      * Prt Variance Dtl      PO: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN AZAIC3    WQKB01           Company Number
     C           *LIKE     DEFN AZBRAA    WQKB02           Packaging Item
      * Define keylist
     C           KRSB      KLIST
     C                     KFLD           WQKB01           Company Number
     C                     KFLD           WQKB02           Packaging Item
      * Setup key
     C                     Z-ADD$GAIC3    WQKB01           Company Number
     C                     MOVEL$GBRAA    WQKB02           Packaging Item
      * Establish starting position
     C           KRSB      SETLL@AZCPH4                    *
      * Read first record with user selection
     C                     EXSR B3READ
     C           W0EOFB    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0BL1P  1        First page
     C                     MOVEL'Y'       W0BL00  1        Company Number
     C                     MOVEL'Y'       W0BL01  1        Packaging Item
     C                     MOVEL'Y'       W0BL02  1        Item Code
      * Set column headings flag
     C                     MOVE 'Y'       W0BCDT
      * Print report body
     C           W0EOFB    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR B1PHDR
      * Print report detail line
     C                     EXSR B2PDTL
      * Read next record with user selection
     C                     EXSR B3READ
      * Print totals
     C                     EXSR B4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         B0EXIT    ENDSR
      /EJECT
     CSR         B1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0BL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP1P  1
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP00  1
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $IRQNX           Standard Usage
     C                     Z-ADDAZAIC3    $IAIC3           Company Number
     C                     MOVELAZBRAA    $IBRAA           Packaging Item
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP01  1
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP02  1
     C                     END
      *
      *================================================================
     CSR         B1EXIT    ENDSR
      /EJECT
     CSR         B2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDAZAIC3    $HAIC3           Company Number
     C                     Z-ADDAZHGCD    $HHGCD           Item Code
     C                     MOVEL*BLANK    $HGENA           Item Descriptio
     C                     Z-ADD*ZERO     $HQPQT           Qty Produced
     C                     Z-ADD*ZERO     $HAUNB           Qty Produced 2
     C                     Z-ADDAZM1QT    $HM1QT           Packaging Item
     C                     Z-ADD*ZERO     $HQVNX           Actual Usage
     C                     Z-ADD*ZERO     $HRPNX           Standard Usage
     C                     MOVELAZBRAA    $HBRAA           Packaging Item
     C                     MOVELAZI5SX    $HI5SX           Pckg Item Type
     C                     MOVELAZD8AA    $HD8AA           Pckg Reporting
     C                     MOVELAZM3SX    $HM3SX           Pckg Group Cate
     C                     MOVELAZM7SX    $HM7SX           Pckg BOM Unused
     C                     MOVELAZM8SX    $HM8SX           Pckg BOM Unused
     C                     MOVELAZVSST    $HVSST           Record Status
     C                     Z-ADDAZMJDT    $HMJDT           Create Date
     C                     Z-ADDAZBETM    $HBETM           Create Time
     C                     MOVELAZCCVN    $HCCVN           Create User
     C                     MOVELAZCDVN    $HCDVN           Create Program
     C                     Z-ADDAZMKDT    $HMKDT           Change Date
     C                     Z-ADDAZBFTM    $HBFTM           Change Time
     C                     MOVELAZCEVN    $HCEVN           Change User
     C                     MOVELAZCFVN    $HCFVN           Change Program
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $HRPNX    $IRQNX           Standard Usage
      *
      *================================================================
     CSR         B2EXIT    ENDSR
      /EJECT
     CSR         B3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN AZAIC3    WZB001           Company Number
     C                     Z-ADDAZAIC3    WZB001
     C           *LIKE     DEFN AZBRAA    WZB002           Packaging Item
     C                     MOVELAZBRAA    WZB002
     C           *LIKE     DEFN AZHGCD    WZB003           Item Code
     C                     Z-ADDAZHGCD    WZB003
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFB    OREQ '1'
     C           KRSB      READE@AZCPH4                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFB  1
      * Quit if no record read
     C           W0EOFB    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0BL00  1        Company Number
     C                     MOVEL*BLANK    W0BL01  1        Packaging Item
     C                     MOVEL*BLANK    W0BL02  1        Item Code
     C           W0EOFB    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0BL00  1        Company Number
     C                     MOVEL'Y'       W0BL01  1        Packaging Item
     C                     MOVEL'Y'       W0BL02  1        Item Code
     C                     ELSE
      * Next record - Detect level breaks
     C           AZAIC3    IFNE WZB001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL00
     C                     END
     C           AZBRAA    IFNE WZB002                     Packaging Item
     C           W0BL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL01
     C                     END
     C           AZHGCD    IFNE WZB003                     Item Code
     C           W0BL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL02
     C                     END
     C                     END
      *================================================================
     CSR         B3EXIT    ENDSR
      /EJECT
     CSR         B4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0BL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP02
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Packaging Item Code format
      * CASE: CUR.Standard Usage 2      SUM EQ WRK.ZERO
     C           $IRQNX    IFEQ WUW0NB                     *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C                     Z-ADD$IRQNX    WURPNX           Standard Usage
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$IKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP01
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP00
     C                     END
      *
     C           W0EOFB    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         B4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Pckg Var w/FG     PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Pckg Var w/FG     PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
      * 1PG = PAR By name
     C                     Z-ADDP1AIC3    $CAIC3           Company Number
     C                     Z-ADDP2JEDT    $CJEDT           Date From
     C                     Z-ADDP3JFDT    $CJFDT           Date To
     C                     MOVELP1EAAA    $CEAAA           Pckg Type Class
     C                     MOVELP1M3SX    $CM3SX           Pckg Group Cate
     C                     MOVELP1D8AA    $CD8AA           Pckg Reporting
     C                     MOVELP1BRAA    $CBRAA           Packaging Item
      * 1PG.Condition Desc. 1  USR = Condition name of 1PG.Report Type US
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1456722   Y2LSNO  70       List number
     C                     PARM $CQBST    W0INVL 25        Report Type USR
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVEL*BLANK    $CSQTX           Company Name DR
      * Company Name DRV
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SCRVGN
      * CASE: PAR.Pckg Group Category NE WRK.Blank 6 USR
     C           P1M3SX    IFNE WUXKTX                     *IF
      * Rtv Pckgng Grp Desc   RT - Packaging Group Category  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$CM3SX    WL0001    P      Pckg Group Cate
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    $CCGT1    P      Pckg Group Cate
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CCGT1           Pckg Group Cate
     C                     MOVEL'All'     $CCGT1           Pckg Group Cate
     C                     END                             *FI
      * CASE: PAR.Pckg Reporting Group NE WRK.Blank 6 USR
     C           P1D8AA    IFNE WUXKTX                     *IF
      * Rtv Pckng Reprtng Grp RT - Packaging Reporting Group  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$CD8AA    WL0003    P      Pckg Reporting
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    $CCFT1    P      Pckg Group Desc
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CCFT1           Pckg Group Desc
     C                     MOVEL'All'     $CCFT1           Pckg Group Desc
     C                     END                             *FI
      * CASE: PAR.Packaging Item Code NE WRK.Blank 6 USR
     C           P1BRAA    IFNE WUXKTX                     *IF
      * RTV Packaging Item    RT - Packaging Item  * 
     C                     EXSR SFRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CXITX           Pckg Item Descr
     C                     MOVEL'All'     $CXITX           Pckg Item Descr
     C                     END                             *FI
      * CASE: PAR.Pckg Type Class NE WRK.Blank 6 USR
     C           P1EAAA    IFNE WUXKTX                     *IF
      * 1PG.Condition Desc. 2  USR = Condition name of 1PG.Pckg Type Clas
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1657889   Y2LSNO  70       List number
     C                     PARM $CEAAA    W0INVL 25        Pckg Type Class
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CHMTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CHMTX           Condition Desc.
     C                     MOVEL'All'     $CHMTX           Condition Desc.
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Date From             USR to display format
      * Convert date
     C           1000000   ADD  $CJEDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCJEDT
      * Convert Date To               USR to display format
      * Convert date
     C           1000000   ADD  $CJFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCJFDT
     C                     MOVEL'0'       *IN79
     C           WUGGST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$C1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of Prt Pckg Var w/FG     PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP00
     C                     END                             FI
      * Print Pckg Group Category of Prt Pckg Var w/FG     PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Pckg Group Category format
      * Rtv Pckgng Grp Desc   RT - Packaging Group Category  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$EM3SX    WL0001    P      Pckg Group Cate
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    $ECGT1    P      Pckg Group Cate
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Print format
     C                     WRITE$EKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Pckg Reporting Group of Prt Pckg Var w/FG     PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Pckg Reporting Group format
      * Rtv Pckng Reprtng Grp RT - Packaging Reporting Group  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$FD8AA    WL0003    P      Pckg Reporting
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    $FCFT1    P      Pckg Group Desc
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$FKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Packaging Item Code of Prt Pckg Var w/FG     PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Detail line. of Prt Pckg Var w/FG     PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * Rtv Calc Std Usage    RT - Packaging BOM  * 
     C                     EXSR SGRVGN
      * Rtv Dly Usg per Item  RT - Packaging Daily Usage  * 
     C                     EXSR SIRVGN
     C           $GSUQT    SUB  $GQVNX    $GQWNX           Variance Usage
      * Rtv Waste Factor      RT - Packaging Type  * 
     C                     EXSR SJRVGN
     C           $GSUQT    MULT YL0008    $GQXNX           Standard Waste
      * CASE:
      *  - c1ANDc2
      *   |- c1    : CUR.Actual Usage          USR EQ WRK.ZERO
      *   |- c2    : CUR.Standard Usage        USR EQ WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $GQVNX    IFEQ WUW0NB                     *IF
     C           $GSUQT    IFEQ WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$GCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$GDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Print First Page Format of Prt Variance Dtl      PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0BL1P
     C                     END                             FI
      * Print Company Number of Prt Variance Dtl      PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP00
     C                     END                             FI
      * Print Packaging Item Code of Prt Variance Dtl      PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP01
     C                     END                             FI
      * Print Item Code of Prt Variance Dtl      PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP02
     C                     END                             FI
      * Print Detail line. of Prt Variance Dtl      PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0BCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BPDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
     C                     Z-ADDAZM1QT    $HM1QT           Packaging Item
     C                     Z-ADD*ZERO     $HQPQT           Qty Produced
      * E00112 RMC 3/10/08 Get from workf instead of item trans dtl each
      * Rtv Summ for Var Rpt  RT - WF ISC Trans Sum/Pkg Var  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDAZAIC3    WL0005           ISC Warehouse C
     C                     Z-ADDAZHGCD    WL0006           ISC Item Code
     C                     Z-ADDYL0009    WL0007           WF Trans Total
     C                     Z-ADDYL0010    WL0008           WF Trans Total
     C                     Z-ADDYL0011    WL0009           WF Trans Total
     C                     Z-ADDYL0012    WL0010           WF ISC Part/Rej
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    YL0009           WF Trans Total
     C                     Z-ADDWL0008    YL0010           WF Trans Total
     C                     Z-ADDWL0009    YL0011           WF Trans Total
     C                     Z-ADDWL0010    YL0012           WF ISC Part/Rej
     C                     Z-ADDYL0009    $HQPQT           Qty Produced
     C                     Z-ADDYL0012    $HAUNB           Qty Produced 2
      * Compute: Std Usage,Accum
      * CUR.Standard Usage 2      USR =
      *    *COMPUTE (x1 * x2)
      * x1    : CUR.Qty Produced          USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DB1.Packaging Item Quantity
     C           $HQPQT    MULT AZM1QT    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HRPNX           Standard Usage
      * Rtv Item Description   RT - Company Item  * 
     C                     EXSR SKRVGN
      * CASE: CUR.Standard Usage 2      USR EQ WRK.ZERO
     C           $HRPNX    IFEQ WUW0NB                     *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $HHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$HHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VHHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VHHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print column headings if required
     C           W0BCDT    IFEQ 'Y'
     C                     WRITE$HCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0BCDT
     C                     END                             FI
      * Print format
     C                     WRITE$HDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0BPDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Pckg Var w/FG     PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  9         W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt Pckg Var w/FG     PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  4         W0FSUM
     C                     END                             FI
      *
      * * Pckg Group Category of Prt Pckg Var w/FG     PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Pckg Reporting Group of Prt Pckg Var w/FG     PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Packaging Item Code of Prt Pckg Var w/FG     PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Pckg Var w/FG     PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD2         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt Variance Dtl      PO
     C           W0BP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt Variance Dtl      PO
     C           W0BP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Packaging Item Code of Prt Variance Dtl      PO
     C           W0BP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Code of Prt Variance Dtl      PO
     C           W0BP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Variance Dtl      PO
     C           W0BPDT    IFEQ 'Y'
     C                     Z-ADD2         W0DTLN
     C           W0BCDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'C/S'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD$CAIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $CSQTX           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    $CSQTX           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Pckgng Grp Desc   RT - Packaging Group Category  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           CCM3SX           Pckg Group Cate
      * Setup key
     C                     MOVELWL0001    CCM3SX           Pckg Group Cate
      * Establish starting position
     C           KRSSD     CHAIN@CCREN3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3173' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Pckg Group Cate
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELCCCGT1    WL0002           Pckg Group Cate
     C                     GOTO SDEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Pckng Reprtng Grp RT - Packaging Reporting Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           CBD8AA           Pckg Reporting
      * Setup key
     C                     MOVELWL0003    CBD8AA           Pckg Reporting
      * Establish starting position
     C           KRSSE     CHAIN@CBREN0              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3171' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0004           Pckg Group Desc
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELCBCFT1    WL0004           Pckg Group Desc
     C                     GOTO SEEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Packaging Item    RT - Packaging Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WABRAA           Packaging Item
      * Setup key
     C                     Z-ADD$CAIC3    WAAIC3           Company Number
     C                     MOVEL$CBRAA    WABRAA           Packaging Item
      * Establish starting position
     C           KRSSF     CHAIN@ARREGL              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2982' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $CXITX           Pckg Item Descr
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAXITX    $CXITX           Pckg Item Descr
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Calc Std Usage    RT - Packaging BOM  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     $GSUQT           Standard Usage
     C                     Z-ADD*ZERO     YL0001           Adjustment Qty
     C                     Z-ADD*ZERO     YL0002           Rework Usage
      * Declare restrictor key work fields
     C           *LIKE     DEFN AZAIC3    WQSG01           Company Number
     C           *LIKE     DEFN AZBRAA    WQSG02           Packaging Item
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Company Number
     C                     KFLD           WQSG02           Packaging Item
      * Setup key
     C                     Z-ADD$GAIC3    WQSG01           Company Number
     C                     MOVEL$GBRAA    WQSG02           Packaging Item
      * Establish starting position
     C           KRSSG     SETLL@AZCPH4                    *
     C           KRSSG     READE@AZCPH4                  90*
      * Data record not found
     C   90                MOVEL'USR3007' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv Summ for Var Rpt  RT - WF ISC Trans Sum/Pkg Var  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDAZAIC3    WL0005           ISC Warehouse C
     C                     Z-ADDAZHGCD    WL0006           ISC Item Code
     C                     Z-ADDYL0003    WL0007           WF Trans Total
     C                     Z-ADDYL0004    WL0008           WF Trans Total
     C                     Z-ADDYL0005    WL0009           WF Trans Total
     C                     Z-ADDYL0006    WL0010           WF ISC Part/Rej
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    YL0003           WF Trans Total
     C                     Z-ADDWL0008    YL0004           WF Trans Total
     C                     Z-ADDWL0009    YL0005           WF Trans Total
     C                     Z-ADDWL0010    YL0006           WF ISC Part/Rej
      * Compute: Std Usage,Accum
      * PAR.Standard Usage        USR =
      *    *COMPUTE (x1 * x2 +x3)
      * x1    : LCL.WF Trans Total type RR qt
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DB1.Packaging Item Quantity
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Standard Usage        USR
     C           YL0003    MULT AZM1QT    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  $GSUQT    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $GSUQT           Standard Usage
      * Compute: RwrkUsage,Accum
      * PAR.Rework Usage          USR =
      *    *COMPUTE (x1 * x2 +x3)
      * x1    : LCL.WF ISC Part/Rej Curr Qty
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DB1.Packaging Item Quantity
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Rework Usage          USR
     C           YL0006    MULT AZM1QT    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  YL0002    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    YL0002           Rework Usage
      * Compute: Adj Usage,Accum
      * PAR.Adjustment Qty 7.0    USR =
      *    *COMPUTE ((x1+x4) * x2 +x3)
      * x1    : LCL.WF Trans Total type A qty
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.WF Trans Total type AP qt
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DB1.Packaging Item Quantity
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Adjustment Qty 7.0    USR
     C           YL0004    ADD  YL0005    W0WD02           *Synon (17,7) w
     C           W0WD02    MULT AZM1QT    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  YL0001    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    YL0001           Adjustment Qty
     C           KRSSG     READE@AZCPH4                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Summ for Var Rpt  RT - WF ISC Trans Sum/Pkg Var  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0007           WF Trans Total
     C                     Z-ADD*ZERO     WL0008           WF Trans Total
     C                     Z-ADD*ZERO     WL0009           WF Trans Total
     C                     Z-ADD*ZERO     WL0010           WF ISC Part/Rej
      * Declare restrictor key work fields
     C           *LIKE     DEFN ALB2C3    WQSH01           ISC Warehouse C
     C           *LIKE     DEFN ALEJC7    WQSH02           ISC Item Code
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WQSH01           ISC Warehouse C
     C                     KFLD           WQSH02           ISC Item Code
      * Setup key
     C                     Z-ADDWL0005    WQSH01           ISC Warehouse C
     C                     Z-ADDWL0006    WQSH02           ISC Item Code
      * Establish starting position
     C           KRSSH     SETLL@ALCPRM                    *
     C           KRSSH     READE@ALCPRM                  90*
      * Data record not found
     C   90                MOVEL'USR3695' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  ALO4QT    WL0007           WF Trans Total
     C                     ADD  ALO2QT    WL0009           WF Trans Total
     C                     ADD  ALO0QT    WL0008           WF Trans Total
      * This is -RR = rework
     C                     ADD  ALO7QT    WL0010           WF ISC Part/Rej
     C           KRSSH     READE@ALCPRM                  90*
     C                     ENDDO
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Dly Usg per Item  RT - Packaging Daily Usage  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     $GQVNX           PDU Quantity Us
     C                     Z-ADD*ZERO     YL0007           PDU Ending Inve
      * Declare restrictor key work fields
     C           *LIKE     DEFN A0AIC3    WQSI01           Company Number
     C           *LIKE     DEFN A0BRAA    WQSI02           Packaging Item
      * Define keylist
     C           KPSSI     KLIST
     C                     KFLD           WQSI01           Company Number
     C                     KFLD           WQSI02           Packaging Item
     C                     KFLD           A0ELDT           Production Date
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Company Number
     C                     KFLD           WQSI02           Packaging Item
      * Setup key
     C                     Z-ADD$GAIC3    WQSI01           Company Number
     C                     MOVEL$GBRAA    WQSI02           Packaging Item
     C                     Z-ADDP2JEDT    A0ELDT           Production Date
      * Establish starting position
     C           KPSSI     SETLL@A0CPHW                    *
     C           KRSSI     READE@A0CPHW                  90*
      * Data record not found
     C   90                MOVEL'USR3009' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Production Date GT PAR.Date To               USR
     C           A0ELDT    IFGT P3JFDT                     *IF
     C                     GOTO SIEXIT                     *QUIT
     C                     END                             *FI
     C                     ADD  A0M2QT    $GQVNX           PDU Quantity Us
      * CASE: DB1.PDU Ending Inventory is Greater than Zero
     C           A0M5QT    IFGT *ZERO                      *IF
     C                     Z-ADDA0M5QT    YL0007           PDU Ending Inve
     C                     END                             *FI
     C           KRSSI     READE@A0CPHW                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv Waste Factor      RT - Packaging Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           CAAIC3           Company Number
     C                     KFLD           CAI5SX           Pckg Item Type
      * Setup key
     C                     Z-ADD$GAIC3    CAAIC3           Company Number
     C                     MOVEL$GI5SX    CAI5SX           Pckg Item Type
      * Establish starting position
     C           KRSSJ     CHAIN@CARENX              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3168' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0008           Pckg Waste Fact
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDCAFIPC    YL0008           Pckg Waste Fact
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv Item Description   RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BZHGCD    WQSK01           Item Code
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Item Code
      * Setup key
     C                     Z-ADD$HHGCD    WQSK01           Item Code
      * Establish starting position
     C           KRSSK     SETLL@BZRED0                    *
     C           KRSSK     READE@BZRED0                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $HGENA           Description Lin
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    $HGENA           Description Lin
     C           KRSSK     READE@BZRED0                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Rtv Include Flag      RT - Packaging Reporting Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           CBD8AA           Pckg Reporting
      * Setup key
     C                     MOVELARD8AA    CBD8AA           Pckg Reporting
      * Establish starting position
     C           KRSSL     CHAIN@CBREN0              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3171' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0014           Pckg Include on
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELCBM6SX    YL0014           Pckg Include on
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Variance Dtl      PO
      *================================================================
      * CASE: PGM.*Print format is Do not print format
     C           W0PFM     IFEQ 'N'                        *IF
     C                     GOTO UAEXIT                     *QUIT
     C                     END                             *FI
      * Prt Variance Dtl      PO: Mainline
     C                     EXSR B0MAIN
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P4DNCD           Application Cod
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field USR Display field
     C                     MOVEL*BLANK    WUGGST  1
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    ARAIC3           Company Number
     C                     MOVEL*LOVAL    ARM3SX           Pckg Group Cate
     C                     MOVEL*LOVAL    ARD8AA           Pckg Reporting
     C                     MOVEL*LOVAL    ARBRAA           Packaging Item
      * Define work field Blank 6 USR
     C                     MOVEL*BLANK    WUXKTX  6
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WANONX           Pckg List Seque
     C                     Z-ADD*ZERO     WAHGCD           Item Code
     C                     Z-ADD*ZERO     WABICS           Pckg Unit Cost
     C                     Z-ADD*ZERO     WAIIWG           Pckg Tare Weigh
     C                     Z-ADD*ZERO     WAMJDT           Create Date
     C                     Z-ADD*ZERO     WABETM           Create Time
     C                     Z-ADD*ZERO     WAMKDT           Change Date
     C                     Z-ADD*ZERO     WABFTM           Change Time
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Standard Usage 2      USR
     C                     Z-ADD*ZERO     WURPNX  70
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    AZAIC3           Company Number
     C                     MOVEL*LOVAL    AZBRAA           Packaging Item
     C                     MOVEL*LOVAL    AZHGCD           Item Code
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Blank for 4           USR
     C                     MOVEL*BLANK    WUOTTX  4
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SDRVGN.
     C                     MOVEL*BLANK    WL0001  5
     C                     MOVEL*BLANK    WL0002 70
      * Define local variables for subroutine SERVGN.
     C                     MOVEL*BLANK    WL0003  5
     C                     MOVEL*BLANK    WL0004 25
      * Define local variables for subroutine SHRVGN.
     C                     Z-ADD*ZERO     WL0005  30
     C                     Z-ADD*ZERO     WL0006  70
     C                     Z-ADD*ZERO     WL0007 112
     C                     Z-ADD*ZERO     WL0008 112
     C                     Z-ADD*ZERO     WL0009 112
     C                     Z-ADD*ZERO     WL0010 112
      * Define local work field Adjustment Qty 7.0    USR
     C                     Z-ADD*ZERO     YL0001  70
      * Define local work field Rework Usage          USR
     C                     Z-ADD*ZERO     YL0002  70
      * Define local work field WF Trans Total type RR qt
     C                     Z-ADD*ZERO     YL0003 112
      * Define local work field WF Trans Total type A qty
     C                     Z-ADD*ZERO     YL0004 112
      * Define local work field WF Trans Total type AP qt
     C                     Z-ADD*ZERO     YL0005 112
      * Define local work field WF ISC Part/Rej Curr Qty
     C                     Z-ADD*ZERO     YL0006 112
      * Define local work field PDU Ending Inventory
     C                     Z-ADD*ZERO     YL0007  70
      * Define local work field Pckg Waste Factor %
     C                     Z-ADD*ZERO     YL0008  52
      * Define local work field WF Trans Total type RR qt
     C                     Z-ADD*ZERO     YL0009 112
      * Define local work field WF Trans Total type A qty
     C                     Z-ADD*ZERO     YL0010 112
      * Define local work field WF Trans Total type AP qt
     C                     Z-ADD*ZERO     YL0011 112
      * Define local work field WF ISC Part/Rej Curr Qty
     C                     Z-ADD*ZERO     YL0012 112
      * Define local work field Standard Usage 3      USR
     C                     Z-ADD*ZERO     YL0013  80
      * Define local work field Pckg Include on Var Rpt
     C                     MOVEL*BLANK    YL0014  1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * FP1271 01/25/08 RMC - chgd packaging qty from 5.0 to 7.3
      * E00112 03/10/08 RMC - read workfile built in poswupc/pmstxfr for
      *   FG trans total RR/AP/A
      * E00221 10/02/08 RMC - added company to key of packaging type file
      * E00458  07/29/09 RMC 1. Remove Std Waste column
      *   2. Std Usage includes Phantom box transactions I03 and I04
      *   3. Add Rework column to FG prtobj
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     MOVEL'N'       WUGGST           USR Display fie
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Y2U0005
