      *****************  RPG PROGRAM HEADING  ************************
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      HPS---Datamart
      * PROGRAM:     HP226 - Datamart FIN: Build Open Group Cost Detail
      *                     (Nursery/Grow Finish Only)
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     08/21/03
      *
      *
      * FUNCTION:    All data will be cumulative, to-date thru the Ending Period Date.
      *
      *              Write a Open Group Header Record for the group/period
      *
      *              Write detail records for costs for the open group...1 record
      *              for each Expense Code. And, then 4 additional records for:
      *                     1) feed
      *                     2) cull sales
      *                     3) BGF amounts
      *                     4) variance
      *
      *              This program is called from HP226CL.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 09/23/03  Barb Gutierrez
      *           Removed the *lda processing and brought in the data
      *           area DALPER.
      *
      * 11/14/03  Alice
      *           Added Group Status to the HPPF035.
      *           Changed the calc for Stage of Growth. Do not
      *           increment the week for partial weeks.
      *
      * 01/30/04  Barb Gutierrez
      *           Added the retrieval of the accounting quarter to bring
      *           into cognos.
      *
      * 10/27/04  LeAnne Fedor
      *           Recompile only. New field "3-week average dead" added to file
      *           Datamart FIN: Weekly Group Detail.
      *
      * 11/03/04  LeAnne Fedor
      *           The users changed the calc for 'Average Days of Growth In'.
      *           We now use a hardcoded value of '16' days instead of '14' days in
      *           the calc.
      *
      * 08/25/05  LeAnne Fedor
      *           Recompile only.
      *           Added a new field "Man Hours" to Weekly Group Detail file.
      *
      * 09/19/07  LeAnne Ramsey
      *           Recompile only. New "target" fields added to the Datamart FIN: Weekly
      *           Group Detail file.
      *
      * 07/02/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 05/24/10  LeAnne Ramsey
      *           Recompile only. Added 2 fields to HPPF075-Weekly Group Detail:
      *              WBWEDTMDCY-Week Ending Date in date format mm/dd/ccyy
      *              WBPAJTIHD -Placement Adjusted Transfer In Head
      *
      * 05/20/11  LeAnne Ramsey (E1557)
      *           Recompile only. Added Yard Dead to HSJ085E.
      *
      * 05/12/16  Barb Gutierrez  (E5752)
      *          -Added company control file HSP0071 and changed some logic to
      *           accomodate multiple companies being processed.  E5752
      *          -populate company number in hppf035 and hppf121.
      *
      * 03/25/20  Danny Nguyen - P405 - Farm Number Increase
      *           Recompile only. Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp034    if   e           k disk
      *    Hog group (groups selected by open query)
      *
      *
     Fhsl038e   if   e           k disk
      *    Feed tickets
      *
      *
     Fhsl048k   if   e           k disk
      *    Expense tickets
      *
      *
     Fhsp052    if   e           k disk
      *    Expenses
      *
      *
     Fhsp055    if   e           k disk
      *    Period costs for hogs moved out
      *
      *
     Fhsl064b   if   e           k disk
      *    Check detail
      *
      *
     Fhsl065c   if   e           k disk
      *    Check adjustments
      *
      *
     Fhsl068d   if   e           k disk
      *  Killed/dead hogs
      *
      *
     Fhsl069a   if   e           k disk
      *  Inventory adjustments
      *
      *
     Fhsp073    if   e           k disk
      *    Ration calories
      *
      *
     Fhsj075g   if   e           k disk    rename(mdrec:mdrecg)
      *   Transfer detail + Transfer Header
      *
      *
     Fhsj075i   if   e           k disk    rename(mdrec:mdreci)
      *   Transfer detail + Transfer Header
      *
      *
     Fhsj085e   if   e           k disk
      *    Sales detail + sales header
      *
      *
     Fhsl118b   if   e           k disk    rename(cmrec:cmrecb)
      *    Costed movements
      *
      *
     Fhsl118c   if   e           k disk    rename(cmrec:cmrecc)
      *    Costed movements
      *
      *
     Fhsl120b   if   e           k disk    rename(cxrec:cxrecb)
      *    Costed movements expense codes
      *
      *
     Fhsl120c   if   e           k disk    rename(cxrec:cxrecc)
      *    Costed movements expense codes
      *
      *
     Fhppf075   if   e           k disk
      *    Datamart FIN: Weekly Group Detail
      *
      *
     Fhsp0071   if   e           k disk
      *    Company Control File
      *
      *
     Fhppf035   uf a e           k disk
      *    Datamart FIN: Open group EOP header
      *
      *
     Fhppf121   uf a e           k disk
      *    Datamart FIN: Open group cost detail
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields for dates
      *
     d  wkexcd         s                   like(g1excd)
     d  wkam           s                   like(g1am)
      *
     d wkisoopdt       s               d   datfmt(*iso)
     d wkisoepdt       s               d   datfmt(*iso)
     d wkcymdiso       s               d   datfmt(*iso)
     d wkwbdt          s                   like(wb80wedt)
     d svlepdt         s                   like(cclepdt)
     d svlbpdt         s                   like(cclbpdt)
      *
      *
      * Workfields
      *
     d svccly          s                   like(ccccly)
     d svcclp          s                   like(cccclp)
     d wkqt            s             15  2
     d wkadgi          s                   like(hgadoi)
     d wkdays          s              5  0
     d wkwk            s              2  0
     d wkday           s              1  0
     d wkalphwk        s              2
     d wkalphday       s              1
      *
     d  wktispam       s                   like(g1tispam)
     d  wktidpam       s                   like(g1tispam)
     d  wktospam       s                   like(g1tispam)
     d  wktodpam       s                   like(g1tispam)
     d  wkcosam        s                   like(g1cosam)
      *
     d  wkextispam     s                   like(g1tispam)
     d  wkextidpam     s                   like(g1tispam)
     d  wkextospam     s                   like(g1tispam)
     d  wkextodpam     s                   like(g1tispam)
     d  wkexcosam      s                   like(g1cosam)
      *
     d  wkfdtispam     s                   like(g1tispam)
     d  wkfdtidpam     s                   like(g1tispam)
     d  wkfdtospam     s                   like(g1tispam)
     d  wkfdtodpam     s                   like(g1tispam)
     d  wkfdcosam      s                   like(g1cosam)
      *
     d  wkcstispam     s                   like(g1tispam)
     d  wkcstidpam     s                   like(g1tispam)
     d  wkcstospam     s                   like(g1tispam)
     d  wkcstodpam     s                   like(g1tispam)
     d  wkcscosam      s                   like(g1cosam)
      *
     d  wkbgtispam     s                   like(g1tispam)
     d  wkbgtidpam     s                   like(g1tispam)
     d  wkbgtospam     s                   like(g1tispam)
     d  wkbgtodpam     s                   like(g1tispam)
     d  wkbgcosam      s                   like(g1cosam)
      *
     d  wkacqr         s                   like(g1acqr)
      *
      * Parms
      *
     D xxwk            s                   like(g2grwwk)
     D xxversion       s              4
     D xxpigday        s             11  0
     D xxepdt          s                   like(hgopdt)
      *
     d  xxperiod       s                   like(g1acpe)
     d  xxquarter      s                   like(g1acqr)
      *
      * Define parms for the generic movement program
      *
     D xxcymd          s                   like(fdtkdt)
     D xxhgsn          s                   like(fdhgsn)
     D @@nu50          s              5  0
     D gpihd           s                   like(@@nu50)
     D pinhd           s                   like(@@nu50)
     D tinhd           s                   like(@@nu50)
     D tisphd          s                   like(@@nu50)
     D tidphd          s                   like(@@nu50)
     D pouhd           s                   like(@@nu50)
     D touhd           s                   like(@@nu50)
     D tosphd          s                   like(@@nu50)
     D todphd          s                   like(@@nu50)
     D rinhd           s                   like(@@nu50)
     D rouhd           s                   like(@@nu50)
     D qinhd           s                   like(@@nu50)
     D qouhd           s                   like(@@nu50)
     D morhd           s                   like(@@nu50)
     D inahd           s                   like(@@nu50)
      *
     D @@nu92          s              9  2
     D pinlb           s                   like(@@nu92)
     D tinlb           s                   like(@@nu92)
     D tisplb          s                   like(@@nu92)
     D tidplb          s                   like(@@nu92)
     D poulb           s                   like(@@nu92)
     D toulb           s                   like(@@nu92)
     D tosplb          s                   like(@@nu92)
     D todplb          s                   like(@@nu92)
     D rinlb           s                   like(@@nu92)
     D roulb           s                   like(@@nu92)
     D qinlb           s                   like(@@nu92)
     D qoulb           s                   like(@@nu92)
     D morlb           s                   like(@@nu92)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *-----------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      *  Definition for external data area 'DALPER' which holds the last
      *  period that was closed in HPS.
      *---------------------------------------------------------------
      *   Remove use of dalper.  e5752
     D*                DS
     D* DALPER                 1     24
     D* DACCYY                 1      4  0
     D* DAPER                  5      6  0
     D* DABPDT                 7     14  0
     D* DAEPDT                15     22  0
     D* DAPPFL                24     24
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Read the records selected by the open query. If the group's create date is
      * on/before the Ending Period date OR if the group had any feed delivered on or
      * before the EOP date, even if the group CREATE date is GT the EOP date
      * we need to process the group.
      *
      * The company being processed is selected out in the opnqry in HPBLDCD$.
      *
     C     *loval        setll     hsp034
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsp034                                 90
     C                   if        *in90 = *off                                 If read
      *
      * Check the Feed consumed and calories for ALL groups..  sometimes feed is delivered
      *  before the group is OPENED and for some reason we seem to allow a Group CREATE date
      *  after a Feed Delivery date.  We need to get the feed in the correct period even if
      *  the date on the Group Header is not in this period.
      *     changed to use ending date from company control.  E5752
      *
     C                   exsr      $fcons
      *
     C                   if        hgcrdt <= svlepdt or g2fclb <> 0              process
      *
      * Processing for header record
      *
     C                   exsr      $header
      *
      * Processing for detail records
      *
     C                   exsr      $detail
      *
     C                   endif                                                  If feed or CR
      *
     C                   endif                                                  If read
     C                   enddo                                                  Main do
      *
      * EOF Processing
      *
     C                   seton                                        lr
      /EJECT
      *----------------------------------------------------------------
      * Processing for group/period header record (HPPF035)
      *----------------------------------------------------------------
      *
     C     $header       begsr
      *
      * Populate the year, period and ending date with the company control file
      *  values instead of using dalper.  e5752
      *
     C                   z-add     svccly        g2acyr
     C                   z-add     svcclp        g2acpe
     C                   z-add     svlepdt       g2epdt
      * get quarter
     C                   exsr      $getqtr
     C                   z-add     wkacqr        g2acqr
      *
      * Populate fields with values from hog group master file
      *
     C                   move      hgcocd        g2cocd
     C                   move      hghgcd        g2hgcd
     C                   move      hggscd        g2gscd
      *
      * Retrieve Beginning Inventory head (use the date 'previous' to the
      * Beginning Period Date.)  use last begin period date from company control
      *  instead of using lda.  E5752
      *
     C**                 move      dabpdt        wkcymdiso
     C                   move      svlbpdt       wkcymdiso
     C     wkcymdiso     subdur    1:*days       wkcymdiso
     C                   move      wkcymdiso     xxcymd
      *
     C                   z-add     hghgsn        xxhgsn
     C                   call      'HPMOVE'      plist01
     C                   add       gpihd         g2bihd
      *
      *
      * Retrieve Ending Inventory head
      *   use last end period date from company control instead of lda.  E5752
      *
     C                   z-add     hghgsn        xxhgsn
     C**                 z-add     daepdt        xxcymd
     C                   z-add     svlepdt       xxcymd
     C                   call      'HPMOVE'      plist01
     C                   add       gpihd         g2eihd
      *
      *
      * Head transferred out to sow farms
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsj075g
      *
     C                   dou       *in91 = *on                                  Do to BGF
     C     hghgsn        reade     hsj075g                                91
     C                   if        *in91 = *off and mhdnpp = 'BGF  '
     C                             and mhrcdt <= svlepdt
     C**                           and mhrcdt <= daepdt
     C                   add       mdqlhd        g2btohd
     C                   add       mdrjhd        g2btohd
     C                   endif
     C                   enddo                                                  Do to BGF
      *
      *
      * Daily dead
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsl068d
     C                   dou       *in91 = *on                                  Do daily dead
     C     hghgsn        reade     hsl068d                                91
     C                   if        *in91 = *off and kdkddt <= svlepdt
     C                   add       kdkdhd        g2ddhd
     C                   add       kdkdlb        g2ddlb
     C                   endif
     C                   enddo                                                  Do daily dead
      *
      *
      * Inventory adjustments
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsl069a
     C                   dou       *in91 = *on                                  Do adjustments
     C     hghgsn        reade     hsl069a                                91
     C                   if        *in91 = *off and iaiadt <= svlepdt
     C                   add       iaiahd        g2iahd
     C                   endif
     C                   enddo                                                  Do adjustments
      *
      * Pig Days
      * Only perform this logic if the group's open date is a) not zero and
      * b) <= the Period End date.
      *   use last end period date from company control instead of lda.  E5752
      *
     C                   if        hgopdt <> 0 and hgopdt <= svlepdt
     C                   call      'HPPDAY'                                                   002
     C                   parm                    hghgsn
     C                   parm                    hgopdt
     C                   parm      svlepdt       xxepdt
     C     g2pigday      parm      0             xxpigday
     C                   endif
      *
      * Calculate:
      *  Phase days
      *  Growth days
      *  7-week average dead
      *
     C                   exsr      $phase
     C                   exsr      $growth
     C                   exsr      $7weekdead
      *
      * Transferred in
      * Adjusted transferred in
      * Transferred out
      * Sales
     C                   exsr      $trani
     C                   exsr      $trana
     C                   exsr      $trano
     C                   exsr      $sales
      *
      *
     C                   write     g2rec
     C                   clear                   g2rec
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Calculate the 'days of growth' fields
      *---------------------------------------------------------------
      *
     C     $growth       begsr
      *
      * Only perform this logic if the group's open date is a) not zero and
      * b) <= the Period End date.
      *   use last end period date from company control instead of lda.  E5752
      *
     C                   if        hgopdt <> 0 and hgopdt <= svlepdt            If was open
      *
      * Calculate an 'average days of growth in' for this group:
      *   If 'average days old in' is less than 20 days,
      *      Set the value to zero
      *   Otherwise
      *      Subtract 16 days from 'average days old in'
      *   (Note: We use 16 days because the users think it is the average number of days
      *          a piglet lives in the BGF farm before it is weaned.)
      *
     C                   select
     C                   when      hgadoi < 20
     C                   z-add     0             wkadgi
     C                   other
     C     hgadoi        sub       16            wkadgi
     C                   endsl
      *
      *
      * Add 'elapsed days' and 'avg days of growth in' together
      * to get the 'total days of growth' for this group.
      *
     C     wkdays        add       wkadgi        g2totday
      *
      *
      * Convert the 'total days of growth' to weeks/days of growth for printing.
      *
     C     g2totday      div       7             g2grwwk
     C                   mvr                     g2grwday
      *
      * Call generic program to calculate 'stage of growth' the 'accounting dept' way!
      * If you have a partial week from the calc above, increment the week value
      * that is passed into the generic program.
      *
     C****////           if        g2grwday > 0
     C**// g2grwwk       add       1             xxwk
     C****////           else
     C                   z-add     g2grwwk       xxwk
     C***////            endif
      *
     C                   call      'HP8012'
     C                   parm                    xxwk
     C                   parm      *blank        g2alphstg
     C                   parm      0             g2numstg
     C                   parm      'ACCT'        xxversion
      *
     C                   endif                                                  If was open
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------
      * Determine the '7-week average dead'
      *------------------------------------------------------------------
      *
     C     $7weekdead    begsr
      *
      * Use the Datamart Weekly Group Detail file to get the 7-week Average
      * Dead Head.
      *
     C     hghgcd        setll     hppf075
     C                   dou       *in91 = *on or g2avddhd <> 0                 Do avg dead
     C     hghgcd        reade     hppf075                                91
     C                   if        *in91 = *off                                 If continue
      *
      * Test the week-ending date for a valid date. If it's valid,
      * subtract 6 days to get the week beginning date and determine
      * if the Period Ending Date falls in this week.
      *
     C     *iso          test(d)                 wb80wedt               92
     C                   if        *in92 = *off                                 If good date
     C                   movel     wb80wedt      wkcymdiso
     C                   subdur    6:*days       wkcymdiso
     C                   move      wkcymdiso     wkwbdt
      *
      *   use last end period date from company control instead of lda.  E5752
      *
     C                   if        svlepdt >= wkwbdt and svlepdt <= wb80wedt
     C                   z-add     wbavddhd      g2avddhd
     C                   endif
      *
     C                   endif                                                  If good date
      *
     C                   endif                                                  If continue
     C                   enddo                                                  Do avg dead
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------
      * Determine the 'days in the phase' for the group
      *------------------------------------------------------------------
      *
     C     $phase        begsr
      *
      * Only perform this logic if the group's open date is a) not zero and
      * b) <= the Period End date.
      *   use last end period date from company control instead of lda.  E5752
      *
     C                   if        hgopdt <> 0 and hgopdt <= svlepdt            If was open
      *
      * Calculate the days in the phase
      * Find the elapsed days between the open date of the group and the
      * period end date. (Test for a valid open date first.)
      *   use last end period date from company control instead of lda.  E5752
      *
     C                   z-add     0             wkdays
      *
     C     *iso          test(d)                 hgopdt                 92
     C                   if        *in92 = *off
     C                   movel     hgopdt        wkisoopdt
     C                   movel     svlepdt       wkisoepdt
     C     wkisoepdt     subdur    wkisoopdt     wkdays:*d
     C     wkisoepdt     subdur    wkisoopdt     g2phsday:*d
     C                   endif
      *
      *
      * Format days in the phase into an alpha field of weeks-days:
      *
      * Calculate 'weeks in the phase'.
      *
     C     g2phsday      div       7             wkwk
     C                   mvr                     wkday
      *
      * Concatenate the week and day into a single alpha field.
      *
     C                   movel     wkwk          wkalphwk
     C                   if        %subst(wkalphwk: 1: 1) = '0'
     C                   eval      %subst(wkalphwk: 1: 1) = *blank
     C                   endif
      *
     C                   movel     wkday         wkalphday
      *
     C                   eval      g2phswd = wkalphwk + '-' + wkalphday
      *
     C                   endif                                                  If was open
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Transfer in
      *----------------------------------------------------------------
      *
     C     $trani        begsr
      *
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsj075i
      *
     C                   dou       *in91 = *on                                  Do tran in
     C     hghgsn        reade     hsj075i                                91
     C                   if        *in91 = *off and mhmscd <> 'SC'
     C                             and mhrcdt <= svlepdt
      * Transfer in
     C                   add       mdqlhd        g2tihd
     C                   add       mdrjhd        g2tihd
      *
     C                   add       mdqllb        g2tilb
     C                   add       mdrjlb        g2tilb
      * Reject in
     C                   add       mdrjhd        g2rihd
     C                   add       mdrjlb        g2rilb
      *
      * Transfer in same phase/different phase
      *
     C                   select
     C                   when      mhorpp = mhdnpp
     C                   add       mdqlhd        g2stihd
     C                   add       mdrjhd        g2stihd
     C                   add       mdqllb        g2stilb
     C                   add       mdrjlb        g2stilb
      *
     C                   when      mhorpp <> mhdnpp
     C                   add       mdqlhd        g2dtihd
     C                   add       mdrjhd        g2dtihd
     C                   add       mdqllb        g2dtilb
     C                   add       mdrjlb        g2dtilb
     C                   endsl
      *
     C                   endif
     C                   enddo                                                  Do tran in
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Adjusted transfers-in
      *----------------------------------------------------------------
      *
     C     $trana        begsr
      *
      * Test the group's open date for a valid date.
      *
     C     *iso          test(d)                 hgopdt                 92
     C                   if        *in92 = *off                                 If good date
     C                   movel     hgopdt        wkcymdiso
      *
      * Calculate the 'cut-off' date as 7 days after the group's open date.
      *
     C                   adddur    7:*days       wkcymdiso
     C                   move      wkcymdiso     xxcymd
      *
      * If the calculated date is after the period ending date, use the period
      * end date instead for the retrieval of 'adjusted' head.
      *   use last end period date from company control instead of lda.  E5752
      *
     C                   if        xxcymd > svlepdt
     C                   z-add     svlepdt       xxcymd
     C                   endif
      *
      * Retrieve the 'transfer out head and pounds' as of the cutoff date.
      * Then, calculate the 'adjusted transfer in' head and pounds by subtracting
      * the returned transfer out values from the transfer in values.
      *
     C                   call      'HPMOVE'      plist01
     C     g2tihd        sub       touhd         g2ajtihd
     C     g2tilb        sub       toulb         g2ajtilb
      *
     C                   endif                                                  If good date
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Transfers out
      *----------------------------------------------------------------
      *
     C     $trano        begsr
      *
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsj075g
      *
     C                   dou       *in91 = *on                                  Do tran out
     C     hghgsn        reade     hsj075g                                91
     C                   if        *in91 = *off and mhmscd <> 'SC'
     C                             and mhrcdt <= svlepdt
      * DOAs
     C                   add       mddohd        g2doahd
     C                   add       mddolb        g2doalb
      *
      * Transfer in
     C                   add       mdqlhd        g2tohd
     C                   add       mdrjhd        g2tohd
      *
     C                   add       mdqllb        g2tolb
     C                   add       mdrjlb        g2tolb
      * Reject in
     C                   add       mdrjhd        g2rohd
     C                   add       mdrjlb        g2rolb
      *
      * Transfer in same phase/different phase
      *
     C                   select
     C                   when      mhorpp = mhdnpp
     C                   add       mdqlhd        g2stohd
     C                   add       mdrjhd        g2stohd
     C                   add       mdqllb        g2stolb
     C                   add       mdrjlb        g2stolb
      *
     C                   when      mhorpp <> mhdnpp
     C                   add       mdqlhd        g2dtohd
     C                   add       mdrjhd        g2dtohd
     C                   add       mdqllb        g2dtolb
     C                   add       mdrjlb        g2dtolb
     C                   endsl
      *
     C                   endif
     C                   enddo                                                  Do tran out
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Sales
      *----------------------------------------------------------------
      *
     C     $sales        begsr
      *
      * (Note: This logical omits 'scheduled' sales.)
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsj085e
     C                   dou       *in91 = *on                                  Do sales
     C     hghgsn        reade     hsj085e                                91
     C                   if        *in91 = *off and                             If more sales
     C                             shrcdt <= svlepdt
      * DOAs
     C                   add       sgdohd        g2doahd
     C                   add       sgdolb        g2doalb
      *
     C                   select
     C                   when      shstcd = 'MRKTS'
     C                   add       sglvhd        g2mkhd
     C                   add       sglvlb        g2mklb
      *
     C                   when      shstcd = 'CULLS'
     C                   add       sglvhd        g2cuhd
     C                   add       sglvlb        g2culb
      *
     C                   when      shstcd = 'FPS  '
     C                   add       sglvhd        g2fphd
     C                   add       sglvlb        g2fplb
     C                   endsl
      *
     C                   endif                                                  If more sales
     C                   enddo                                                  Do sales
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Feed consumed with calories
      *----------------------------------------------------------------
      *
     C     $fcons        begsr
      *
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsl038e
      *
     C                   dou       *in91 = *on                                  Do feed
     C     hghgsn        reade     hsl038e                                91
     C                   if        *in91 = *off and fdtkdt <= svlepdt            If not EOF
      *
     C                   add       fdfdlb        g2fclb
      *
      * Retrieve the ration's Caloric Content. Use the Reference Ticket
      * Date for the retrieval.
      *
     C     key04         chain     hsp073                             92
     C                   if        *in92 = *on                                  If not exact
     C     key04         setll     hsp073
     C     fdrncd        readpe    hsp073                                 92
     C                   endif                                                  If not exact
      *
     C                   if        *in92 = *off                                 If calories
     C     fdfdlb        mult      cpclrt        wkqt
     C                   add       wkqt          g2fcal
     C                   endif                                                  If calories
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do feed
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Processing for cost detail records
      *----------------------------------------------------------------
      *
     C     $detail       begsr
      *
      * Several of the special, hardcoded records that you will ultimately
      * write to the datamart cost detail file, will use data from the costed
      * movements file. So, just go get this data 1-time per group.
      *
     C                   exsr      $costmove
      *
     C                   exsr      $expenses
     C                   exsr      $feed
     C                   exsr      $culls
     C                   exsr      $bgf
     C                   exsr      $variance
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Clear accumulators/workfields for detail record
      *----------------------------------------------------------------
      *
     C     $clear        begsr
      *
      * Amount
     C                   z-add     0             wktispam
     C                   z-add     0             wktidpam
     C                   z-add     0             wktospam
     C                   z-add     0             wktodpam
     C                   z-add     0             wkcosam
      *
      * Expense
     C                   z-add     0             wkextispam
     C                   z-add     0             wkextidpam
     C                   z-add     0             wkextospam
     C                   z-add     0             wkextodpam
     C                   z-add     0             wkexcosam
      *
      * Feed
     C                   z-add     0             wkfdtispam
     C                   z-add     0             wkfdtidpam
     C                   z-add     0             wkfdtospam
     C                   z-add     0             wkfdtodpam
     C                   z-add     0             wkfdcosam
      *
      * Cull sales
     C                   z-add     0             wkcstispam
     C                   z-add     0             wkcstidpam
     C                   z-add     0             wkcstospam
     C                   z-add     0             wkcstodpam
     C                   z-add     0             wkcscosam
      *
      * BGF
     C                   z-add     0             wkbgtispam
     C                   z-add     0             wkbgtidpam
     C                   z-add     0             wkbgtospam
     C                   z-add     0             wkbgtodpam
     C                   z-add     0             wkbgcosam
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Costed movements
      *----------------------------------------------------------------
      *
      * Several of the special, hardcoded records that you will ultimately
      * write to the datamart file, will use data from the costed movements
      * file. So, just go get this data 1-time per group.
      *
     C     $costmove     begsr
      *
      * Clear accumulators
      *
     C                   exsr      $clear
      *
      *------------------------
      * TRANSFER OUT  &  SALES
      *------------------------
      * Retrieve all Costed Movement records where the group is the Origin
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsl118b
     C                   dou       *in91 = *on                                  Do out
     C     hghgsn        reade     hsl118b                                91
     C                   if        *in91 = *off and cmrcdt <= svlepdt           If more
      * sales = COS
     C                   select
     C                   when      cmmtcd = 'S'
     C                   add       cmfdam        wkfdcosam
     C                   add       cmcsam        wkcscosam
     C                   add       cmbgam        wkbgcosam
      * T.O. Same Phase
     C                   when      cmorppcd = cmdnppcd
     C                   add       cmfdam        wkfdtospam
     C                   add       cmcsam        wkcstospam
     C                   add       cmbgam        wkbgtospam
      * T.O. Diff Phase
     C                   when      cmorppcd <> cmdnppcd
     C                   add       cmfdam        wkfdtodpam
     C                   add       cmcsam        wkcstodpam
     C                   add       cmbgam        wkbgtodpam
     C                   endsl
      *
     C                   endif                                                  If more
     C                   enddo                                                  Do out
      *
      *---------------
      * TRANSFER IN
      *---------------
      * Retrieve all Costed Movement 'transfer' records where the group
      * is the destination...  ONLY TRANSFER record types..
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsl118c
     C                   dou       *in91 = *on                                  Do in
     C     hghgsn        reade     hsl118c                                91
     C                   if        *in91 = *off and cmrcdt <= svlepdt            If not eof
     C                             and cmmtcd = 'T'
      *
     C                   select
     C                   when      cmorppcd = cmdnppcd
     C                   add       cmfdam        wkfdtispam
     C                   add       cmcsam        wkcstispam
     C                   add       cmbgam        wkbgtispam
      *
     C                   when      cmorppcd <> cmdnppcd
     C                   add       cmfdam        wkfdtidpam
     C                   add       cmcsam        wkcstidpam
     C                   add       cmbgam        wkbgtidpam
     C                   endsl
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do in
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Expenses
      *----------------------------------------------------------------
      *
      * Write a datamart record for each expense code in the Expense Master
      * ----even if the group had no dollars for this code.
      * EXCEPT, There are 2 expense codes (*BGF and *VAR) that must be handled
      *           outside of this routine.  They have their own subroutines
      *
     C     $expenses     begsr
      *
      *
     C     *loval        setll     hsp052
      *
     C                   dou       *in91 = *on                                  Do expenses
     C                   read      hsp052                                 91
     C                   if        *in91 = *off and                             If not eof
     C                             exexcd <> '*BGF ' and
     C                             exexcd <> '*VAR '
      *
     C                   move      exexcd        g1excd
      *--------------
      * PHASE COST:
      *--------------
      * Read all Expense Tickets for the group/expense code to accumulate
      * the Phase Cost for the datamart record.
      *   use last end period date from company control instead of lda.  E5752
      *
     C     key01         setll     hsl048k
     C                   dou       *in93 = *on                                  Do phase
     C     key01         reade     hsl048k                                93
     C                   if        *in93 = *off and xtxedt <= svlepdt           If more
     C                   add       xtxtam        g1am
     C                   endif                                                  If more
     C                   enddo                                                  Do phase
      *
      *---------------------------------
      * TRANSFER OUT & SALE transactions
      *---------------------------------
      * Read ALL the Costed Expense records for the group/expense code
      * where the group is the origin group to get 'Transfer Out' and COS values.
      *   use last end period date from company control instead of lda.  E5752
      *
     C     key01         setll     hsl120b
     C                   dou       *in93 = *on                                  Do out
     C     key01         reade     hsl120b                                93
     C                   if        *in93 = *off and                             If read
     C                             cxrcdt <= svlepdt
      *
     C                   select
      * COS
     C                   when      cxmtcd = 'S'
     C                   add       cxexam        g1cosam
      * TO Same Phase
     C                   when      cxorppcd = cxdnppcd
     C                   add       cxexam        g1tospam
      * TO Diff Phase
     C                   when      cxorppcd <> cxdnppcd
     C                   add       cxexam        g1todpam
     C                   endsl
      *
     C                   endif                                                  If read
     C                   enddo                                                  Do out
      *
      *--------------
      * TRANSFER IN:
      *--------------
      * Read ALL the Costed Expense 'transfer' records for the group/expense code
      * where the group is the destination group to get 'Transfer In' values.
      *   use last end period date from company control instead of lda.  E5752
      *
     C     key01         setll     hsl120c
     C                   dou       *in93 = *on                                  Do in
     C     key01         reade     hsl120c                                93
     C                   if        *in93 = *off and cxmtcd = 'T' and            If more in
     C                             cxrcdt <= svlepdt
      *
     C                   select
     C                   when      cxorppcd = cxdnppcd
     C                   add       cxexam        g1tispam
     C                   when      cxorppcd <> cxdnppcd
     C                   add       cxexam        g1tidpam
     C                   endsl
      *
     C                   endif                                                  If more in
     C                   enddo                                                  Do in
      *
      * Write record
     C                   exsr      $wrt121
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do expenses
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Feed
      *----------------------------------------------------------------
      *
     C     $feed         begsr
      *
      * Read all Feed Tickets for the group to accumulate the PHASE COST
      *   use last end period date from company control instead of lda.  E5752
      *
     C                   z-add     0             wkam
     C     hghgsn        setll     hsl038e
      *
     C                   dou       *in91 = *on                                  Do phase
     C     hghgsn        reade     hsl038e                                91
     C                   if        *in91 = *off and fdtkdt <= svlepdt           If more
     C                   add       fdinam        wkam
     C                   add       fdmdam        wkam
     C                   add       fdmfam        wkam
     C                   add       fddlam        wkam
     C                   endif                                                  If more
     C                   enddo                                                  Do phase
      *
      *
      * We are hardcoding '6100' for the FEED expense code.
      * BUT, we will have ALREADY written a 6100 record
      * during the Expense subroutine earlier--since 6100 is a valid expense
      * code in the master file.
      *
      * So, we will chain to HPPF121 to retrieve this existing record for code
      * 6100 and update it. If, for who knows how/why, there is not an existing
      * 6100 record, we will, ultimately, write one.
      *
     C                   eval      wkexcd = '6100 '
     C     key06         chain     hppf121                            92
     C                   if        *in92 = *off                                 If exists
     C                   add       wkam          g1am
     C                   add       wkfdtispam    g1tispam
     C                   add       wkfdtidpam    g1tidpam
     C                   add       wkfdtospam    g1tospam
     C                   add       wkfdtodpam    g1todpam
     C                   add       wkfdcosam     g1cosam
     C                   update    g1rec
     C                   clear                   g1rec
     C                   else
      *
      * You are writing a new record.
      *
     C                   z-add     wkam          g1am
     C                   z-add     wkfdtispam    g1tispam
     C                   z-add     wkfdtidpam    g1tidpam
     C                   z-add     wkfdtospam    g1tospam
     C                   z-add     wkfdtodpam    g1todpam
     C                   z-add     wkfdcosam     g1cosam
      *
     C                   eval      g1excd = '6100 '
     C                   exsr      $wrt121
     C                   endif                                                  If exists
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Cull sales
      *----------------------------------------------------------------
      *
     C     $culls        begsr
      *
     C                   z-add     0             wkam
      *
      * Retrieve Net Cull Sales amount for the group's PHASE COST
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsj085e
     C                   dou       *in91 = *on                                  Do cull sales
     C     hghgsn        reade     hsj085e                                91
     C                   if        *in91 = *off and                             If more sales
     C                             shstcd = 'CULLS' and
     C                             shrcdt <= svlepdt
      *
      * Retrieve the check detail records(s) for this movement/group to get
      * the 'gross amount'.
      *
     C     key03         setll     hsl064b
      *
     C                   dou       *in93 = *on                                  Do check detail
     C     key03         reade     hsl064b                                93
     C                   if        *in93 = *off                                 If not eof
     C                   add       cdgram        wkam
      *
      * Now, retrieve all the adjustments for this detail line so that
      * you can get to the 'net' amount for the check detail line.
      * (NOTE: Deductions/additions are carried in the Adjustment file
      * with the appropriate +/- sign. So, just 'add' them to the 'gross'.)
      *
     C     key05         setll     hsl065c
     C                   dou       *in94 = *on                                  Do ded/add
     C     key05         reade     hsl065c                                94
     C                   if        *in94 = *off and cjcjfl = 'D'
     C                   add       cjcjam        wkam
     C                   endif
     C                   enddo                                                  Do ded/add
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do check detail
      *
     C                   endif                                                  If more sales
     C                   enddo                                                  Do cull sales
      *
      *
      * We want Cull values to have a negative sign. We will
      * flip the sign on the Phase Amount just retrieved and the values
      * retrieved/accumulated earlier in the Costed Movements subroutine.
      *
     C                   mult      -1            wkam
     C                   mult      -1            wkcstispam
     C                   mult      -1            wkcstidpam
     C                   mult      -1            wkcstospam
     C                   mult      -1            wkcstodpam
     C                   mult      -1            wkcscosam
      *
      *
      * We are hardcoding '7970' for
      * the expense code. BUT, we will have ALREADY written a 7970 record
      * during the Expense subroutine earlier--since 7970 is a valid expense
      * code in the master file.
      *
      * So, we will chain to hppf121 to retrieve this existing record for code
      * 7970 and update it. If, for who knows how/why, there is not an existing
      * 7970 record, we will, ultimately, write one.
      *
      *
     C                   eval      wkexcd = '7970 '
     C     key06         chain     hppf121                            92
     C                   if        *in92 = *off                                 If exists
     C                   add       wkam          g1am
     C                   add       wkcstispam    g1tispam
     C                   add       wkcstidpam    g1tidpam
     C                   add       wkcstospam    g1tospam
     C                   add       wkcstodpam    g1todpam
     C                   add       wkcscosam     g1cosam
     C                   update    g1rec
     C                   clear                   g1rec
     C                   else
      *
     C                   z-add     wkam          g1am
     C                   z-add     wkcstispam    g1tispam
     C                   z-add     wkcstidpam    g1tidpam
     C                   z-add     wkcstospam    g1tospam
     C                   z-add     wkcstodpam    g1todpam
     C                   z-add     wkcscosam     g1cosam
      *
     C                   eval      g1excd = '7970 '
     C                   exsr      $wrt121
     C                   endif                                                  If exists
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * BGF amount
      *----------------------------------------------------------------
      *
     C     $BGF          begsr
      *
      * Set Phase Cost to zero.
      *
     C                   z-add     0             g1am
      *
      * Populate the remaining fields in the datamart record with values
      * retrieved/accumulated earlier in the Costed Movements subroutine.
      *
     C                   z-add     wkbgtispam    g1tispam
     C                   z-add     wkbgtidpam    g1tidpam
     C                   z-add     wkbgtospam    g1tospam
     C                   z-add     wkbgtodpam    g1todpam
     C                   z-add     wkbgcosam     g1cosam
      *
     C                   eval      g1excd = '*BGF'
      *
     C                   exsr      $wrt121
      *
     C                   endsr
      *----------------------------------------------------------------
      * Variance record
      *----------------------------------------------------------------
      *
     C     $variance     begsr
      *
      * Clear accumulators
      *
     C                   exsr      $clear
      *
      *---------------
      * TRANSFER OUT
      *---------------
      * Retrieve all Costed 'TRANSFER' Movement records where the group
      * is the origin
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsl118b
     C                   dou       *in91 = *on                                  Do out
     C     hghgsn        reade     hsl118b                                91
     C                   if        *in91 = *off and cmmtcd = 'T' and            If more out
     C                             cmrcdt <= svlepdt
      *
     C                   select
     C                   when      cmorppcd = cmdnppcd
     C                   add       cmfdam        wkfdtospam
     C                   add       cmcsam        wkcstospam
     C                   add       cmbgam        wkbgtospam
     C                   add       cmexam        wkextospam
     C                   add       cmam          wktospam
      *
     C                   when      cmorppcd <> cmdnppcd
     C                   add       cmfdam        wkfdtodpam
     C                   add       cmcsam        wkcstodpam
     C                   add       cmbgam        wkbgtodpam
     C                   add       cmexam        wkextodpam
     C                   add       cmam          wktodpam
     C                   endsl
      *
     C                   endif                                                  If more out
     C                   enddo                                                  Do out
      *
      *---------------
      * TRANSFER IN
      *---------------
      * Retrieve all Costed 'TRANSFER' records where the group is the destination
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsl118c
     C                   dou       *in91 = *on                                  Do in
     C     hghgsn        reade     hsl118c                                91
     C                   if        *in91 = *off and cmmtcd = 'T' and            If more
     C                             cmrcdt <= svlepdt
      *
     C                   select
     C                   when      cmorppcd = cmdnppcd
     C                   add       cmfdam        wkfdtispam
     C                   add       cmcsam        wkcstispam
     C                   add       cmbgam        wkbgtispam
     c                   add       cmexam        wkextispam
     c                   add       cmam          wktispam
      *
     C                   when      cmorppcd <> cmdnppcd
     C                   add       cmfdam        wkfdtidpam
     C                   add       cmcsam        wkcstidpam
     C                   add       cmbgam        wkbgtidpam
     C                   add       cmexam        wkextidpam
     C                   add       cmam          wktidpam
     C                   endsl
      *
     C                   endif                                                  If more
     C                   enddo                                                  Do in
      *
      *
      *---------------
      * SALES  --   COS variance
      *---------------
      * Retrieve all Costed 'SALES' Movement records where the group
      * is the origin
      *   use last end period date from company control instead of lda.  E5752
      *
     C     hghgsn        setll     hsl118b
     C                   dou       *in91 = *on                                  Do out
     C     hghgsn        reade     hsl118b                                91
     C                   if        *in91 = *off and cmmtcd = 'S' and            If more out
     C                             cmrcdt <= svlepdt
      *
     C                   add       cmfdam        wkfdcosam
     C                   add       cmcsam        wkcscosam
     C                   add       cmbgam        wkbgcosam
     C                   add       cmexam        wkexcosam
     C                   add       cmam          wkcosam
      *
     C                   endif                                                  If more
     C                   enddo                                                  Do
      *
     C                   z-add     0             g1am
     C                   eval      g1excd = '*VAR'
      *
      * Calc the variance value for each field using the accumulated
      * group values in the workfields and the formula:
      *
      *  variance amount = amount - expense - feed + cull sale - BGF
      *
     C                   eval      g1tispam = wktispam - wkextispam - wkfdtispam
     C                                        + wkcstispam - wkbgtispam
      *
     C                   eval      g1tidpam = wktidpam - wkextidpam - wkfdtidpam
     C                                        + wkcstidpam - wkbgtidpam
      *
     C                   eval      g1tospam = wktospam - wkextospam - wkfdtospam
     C                                        + wkcstospam - wkbgtospam
      *
     C                   eval      g1todpam = wktodpam - wkextodpam - wkfdtodpam
     C                                        + wkcstodpam - wkbgtodpam
      *
     C                   eval      g1cosam = wkcosam - wkexcosam - wkfdcosam
     C                                        + wkcscosam - wkbgcosam
      *
     C                   exsr      $wrt121
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Write a Datamart record for the Cost Detail
      *----------------------------------------------------------------
      *
     C     $wrt121       begsr
      *
     C                   move      hgcocd        g1cocd
     C                   move      hghgcd        g1hgcd
      *
      * Populate the year, period with the values from the data area
      *   use last end period date and last closed year/period from
      *   company control instead of lda.  E5752
      *
     C***                z-add     daccyy        g1acyr
     C***                z-add     daper         g1acpe
     C***                z-add     daepdt        g1epdt
     C                   z-add     svccly        g1acyr
     C                   z-add     svcclp        g1acpe
     C                   z-add     svlepdt       g1epdt
      * get quarter
     C                   exsr      $getqtr
     C                   z-add     wkacqr        g1acqr
      *
     C                   write     g1rec
     C                   clear                   g1rec
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Get the quarter the period falls in
      *----------------------------------------------------------------
      *
     C     $getqtr       begsr
      *
      * Call the generic program to retrieve the quarter associated with the accounting period.
      *   Use last closed period from company control file instead of lda.  E5752
      *
     C                   call      'HP8006'
     C**                 parm      daper         xxperiod
     C                   parm      svcclp        xxperiod
     C     wkacqr        parm      0             xxquarter
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *  Pass in company.  E5752
      *
     C     *entry        plist
     C                   parm                    xxcocd            3
      *
      * Bring in the data area that contains the last Period posted
      * in hps.
      *    remove use of dalper E5752
      *
     C***  *dtaara       define                  dalper
     C***                in        dalper
      *
      * Read the company control file for the company being passed in to retrieve
      * the last HPS closed year/period.      E5752
      *
     C     xxcocd        chain     hsp0071                            92
     C                   if        *in92 = *off                                 If exists
     C                   move      ccccly        svccly                         last close year
     C                   move      cccclp        svcclp                         last close period
     C                   move      cclbpdt       svlbpdt                        last close beg date
     C                   move      cclepdt       svlepdt                        last close end date
     C                   endif                                                  If exists
     C*
      * Key lists
      *
     C     key01         klist
     C                   kfld                    hghgsn
     C                   kfld                    exexcd
      *
      * Added company to key and use yr/per from company control.  E5752
      *
     C     key02         klist
     C                   kfld                    xxcocd
     C                   kfld                    svccly
     C                   kfld                    svcclp
      *
     C     key03         klist
     C                   kfld                    sgmvsn
     C                   kfld                    hghgsn
      *
     C     key04         klist
     C                   kfld                    fdrncd
     C                   kfld                    fdrtdt
      *
     C     key05         klist
     C                   kfld                    cdchdt
     C                   kfld                    cdcvno
     C                   kfld                    cdchno
     C                   kfld                    cdlnno
      *
      * Added company to key and use yr/per from company control.  E5752
      *
     C     key06         klist
     C                   kfld                    xxcocd
     C                   kfld                    svccly
     C                   kfld                    svcclp
     C                   kfld                    hghgcd
     C                   kfld                    wkexcd
      *
      *
      * Always delete any existing period detail records from the Datamart file.
      *
     C     key02         setll     hppf121
     C                   dou       *in91 = *on                                  Do deletes
     C     key02         reade     hppf121                                91
     C                   if        *in91 = *off                                 If read
     C                   delete    g1rec
     C                   endif                                                  If read
     C                   enddo                                                  Do deletes
      *
     C                   MOVE      *OFF          *IN91
      *
      * Always delete any existing period header records from the Datamart file.
      *
     C     key02         setll     hppf035
     C                   dou       *in91 = *on                                  Do deletes
     C     key02         reade     hppf035                                91
     C                   if        *in91 = *off                                 If read
     C                   delete    g2rec
     C                   endif                                                  If read
     C                   enddo                                                  Do deletes
      *
      * Parm list
      *
     C     plist01       plist
     C                   parm                    xxhgsn
     C                   parm                    xxcymd
      * Head
     C                   parm                    gpihd                          GROUP INV
     C                   parm                    pinhd                          PIG IN
     C                   parm                    tinhd                          TRSF IN
     C                   parm                    tisphd                         SAME PHASE
     C                   parm                    tidphd                         DIFF PHASE
     C                   parm                    pouhd                          PIGS OUT
     C                   parm                    touhd                          TRSF OUT
     C                   parm                    tosphd                         SAME PHASE
     C                   parm                    todphd                         DIFF PHASE
     C                   parm                    rinhd                          REJECT IN
     C                   parm                    rouhd                          REJECT OUT
     C                   parm                    qinhd                          QUALITY IN
     C                   parm                    qouhd                          QUALITY OUT
     C                   parm                    morhd                          MORTALITY
     C                   parm                    inahd                          INV ADJ
      * Pounds
     C                   parm                    pinlb                          PIG IN
     C                   parm                    tinlb                          TRSF IN
     C                   parm                    tisplb                         SAME PHASE
     C                   parm                    tidplb                         DIFF PHASE
     C                   parm                    poulb                          PIG OUT
     C                   parm                    toulb                          TRSF OUT
     C                   parm                    tosplb                         SAME PHASE
     C                   parm                    todplb                         DIFF PHASE
     C                   parm                    rinlb                          REJECT IN
     C                   parm                    roulb                          REJECT OUT
     C                   parm                    qinlb                          QUALITY IN
     C                   parm                    qoulb                          QUALITY OUT
     C                   parm                    morlb                          MORTALITY
      *
      *
     C                   endsr
      *
