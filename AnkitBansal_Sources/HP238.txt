      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production
      * PROGRAM:     HP238 - Batch Edit Listing of Uploaded Feed Tickets
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     05/01/97
      *
      * FUNCTION: This program performs a batch edit of the Feed Tickets that have been
      *           uploaded from the PC.
      *
      *           The listing prints each record and all error messages for each record..up
      *           to a maximum of 20 per record.
      *
      *           This program is automatically submitted by two functions:
      *            1) As the final step in moving the data from the Upload Receiving file
      *               to the Upload Editing Files (This move function is user-submitted
      *               via HP437 (HP437CL).
      *            2) As the first step when the user submits the interface function via
      *               HP434 (HP434CL)
      *
      *           This program can also be called on-demand thru the menu option that calls
      *           HP438-Specify Batch Edit Listing of Uploaded Feed Tickets.
      *
      *           If this program finds any errors,
      *              The Feed Ticket Header Record is flagged as an error and
      *              The LDA is set to indicate that Errors exist.
      *
      *  Error Messages
      *
      *           Error messages are printed for each record. The messages are retrieved
      *           through a call to CLP UT80046A using the same suer message file, arrays
      *           and array logic as in the interactive programs.  HOwever, they are printed
      *           from the CL using the command 'CLPRINTA' that was created by Ernie Wallace.
      *
      *           QPRINT is used for the output file since the command 'CLPRINTA' prints to
      *           QPRINT. QPRINT is overridden in the submission CLP to "SHARE=YES" to allow
      *           both this RPGLE program and CLP UT80046A to write to the same print file.
      *
      *           Since the 'CLPRINTA' command logic in UT80046A is not being used to print
      *           headings, count lines or page break, these functions are controlled from
      *           this RPGLE program by counting lines.
      *
      *           This program page-breaks when the line count reaches 62 lines because the
      *           report is designed to run on paper that is 68 lines long. Therefore, if
      *           the users generate this report on various laser printers with different
      *           page lengths, the page breaks may be goofy.
      /EJECT
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 06/03/97  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELDS 'PURGE FLAG' AND 'DATE OF
      *           FIRST PURGE' ADDED TO HOG GROUP FILE.
      *
      * 06/25/97  LEANNE FEDOR
      *           addED LOGIC FOR NEW FEED TICKET HEADER FIELD--
      *           'COST THROUGH SYSTEM FLAG'.
      *
      * 04/13/98  LeAnne Fedor
      *           Recompile only. New field 'state' added to farm site file.
      *
      * 04/23/01  LeAnne Fedor
      *           Removed warning message on ration/phase. We wanted to
      *           reduce the number of printed pages.
      *
      * 05/10/01  LeAnne Fedor
      *           Added more hardcoded mapping of 'warehouses' to 'mills. Created
      *
      * 06/05/01  LeAnne Fedor
      *           Recompile only. New field 'multisite' added to Farm Site file.
      *
      * 06/28/01  LeAnne Fedor
      *           Recompile only.
      *           Three fields (manager/supervisor/multisite) renamed in Farm Site file.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 08/14/01  LeAnne Fedor
      *           Added more hardcoded mapping of 'warehouses' to mills. Warehouse
      *           2 (Hugoton) will now map to KSMIL. Warehouse 99 (LEOTI) will now
      *           map to new mill LEMIL. Prior to this, both 2 and 99 mapped to KSMIL.
      *
      * 09/04/01  LeAnne Fedor
      *           Recompile only. New 'square feet' fields added to Farm Site file.
      *
      * 12/11/01  LeAnne Fedor
      *           I replaced the hard-coded mapping logic with retrievals from our new
      *           Mill Alias file.
      *
      * 01/09/01  LeAnne Fedor
      *           I added a default 'feed manufacturing type' to the Mill Alias file and
      *           replaced the hard-coding of 'feed manufacturing type' with a retrieval
      *           of this default value from the Mill Alias file.
      *
      * 01/28/02  LeAnne Fedor
      *           We added an additional check for determining a shared bin...rooms have
      *           to be 'active' ...not 'inactive'. Also, we now call a generic program
      *           to make the 'shared' bin determination.
      *
      * 10/20/03  LeAnne Fedor
      *           Added an edit that the Feed Ticket Date cannot be prior to the
      *           Created Date of the group. Alice does not want any feed delivered
      *           to a group before it is created.
      *
      * 01/18/06  LeAnne Fedor
      *           Changed logic using HSP020-Building/Rooms to now use our new file
      *           HSP113-Rooms/Bin Sets.
      *
      * 04/23/09  LeAnne Ramsey
      *           Recompile only. Costed Time/User added to Feed Ticket Header.
      *
      * 05/12/09  LeAnne Ramsey
      *           Recompile only. PickUp Ticket Type added to Feed Ticket Header.
      *
      * 07/06/09  LeAnne Ramsey
      *           We added new field 'Continuous Flow Flag' to Hog Group file. If a Group is
      *           a 'Continuous Flow' group, we will NOT do a "max age" check on the Ration.
      *
      * 09/21/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Upload Date' to Feed Ticket Header.
      *
      * 10/26/09  LeAnne Ramsey
      *           Rewrote to incorporate David Weaver's enhancements from his Grain Accounting
      *           Project (where he rewrote the pc side of things.)
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 06/05/2017 Lara Buser   E010639
      *           Recompile only. Three new fields were added to HSP089 -
      *           Mill Type Code and Description, and Active/Inactive Status
      *
      * 10/30/2019 Brad Baden  E15736
      *            Recompiled for change to file HSP089.  Replace UDATE
      *            logic with System Date.
      *
      * 03/26/20  Danny Nguyen - P405 - Farm Number Increase
      *           Recompile only. Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp014    if   e           k disk
      *    Group status codes
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp024    if   e           k disk
      *  Feed manufacturing type
      *
      *
     Fhsl034d   if   e           k disk
      *  Hog groups
      *
      *
     Fhsl034e   if   e           k disk    rename(hgrec:hgrece)
      *  Hog groups
      *
      *
     Fhsj034w   if   e           k disk    rename(hgrec:hgrecw)
      *  Hog Group + Rooms/Bin sets + Bin Set Bins
      *
      *
     Fhsp036    if   e           k disk
      *  Bin set bins
      *
      *
     FHSL036B   IF   E           k disk    RENAME(BNREC:BNRECB)
      *  BIN SET BINS
      *
      *
     Fhsj036a   if   e           k disk    rename(bnrec:bnreca)
      *  Bin set bins
      *  Building rooms
      *  Hog groups
      *  Hog group status codes (select: gsfdfl = Y)
      *
      *
     Fhsp037    if   e           k disk
      *  Feed ticket header
      *
      *
     Fhsp071    if   e           k disk
      *  Rations
      *
      *
     Fhsp072    if   e           k disk
      *  Ration additive
      *
      *
     Fhsl089a   if   e           k disk
      *  Mill Alias
      *
      *
     Fhsp237    uf   e           k disk
      *  Uploaded feed ticekts: edit file-header
      *
      *
     Fhsp238    uf   e           k disk
      *  Uploaded feed ticekts: edit file-detail
      *
      *
     Fqprint    o    f  198        printer oflind(*inof)
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * CONSTANTS
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *---------------------------------------------------------------
      * STANDALONE FIELDS
      *---------------------------------------------------------------
      *
      * System date
     d sysdate         s               d   inz(*sys)
      *
      * Standard fields
      *
     d dash            s            198    inz(*all'-')
     d rtime           s              6  0
      *
      *
      * Control fields
      *
     d maxmsg          s              2  0 inz(20)
     d errfl           s              1    inz('N')
      *
     d svtkno          s                   like(uhtkno)
     d dirfl           s              1
     d binfl           s              1
     d okfarmfl        s              1
     d oktkdtfl        s              1
     d okrncdfl        s              1
      *
      *
      * Fields for controlling printing
      *
     d wkdifl          s              3  0
     d wkovfl          s              3  0 inz(62)
     d wkcurl          s              3  0
      *
      *
      * Work fields for date manipulation
      *
     D wksysdt         s              8  0
     D wkisodate       s               D   datfmt(*iso)
     D wkisotkdt       s               d   datfmt(*iso)
     D wkisoopdt       s               d   datfmt(*iso)
     D wkdays          s              3  0
     D wkdaysalph      s              3
      *
      *
      * Workfields
      *
     d wktype          s              1    inz('D')
     d wkftcd          s              1    inz('P')
     d wkhgcd          s                   like(hghgcd)
      *
      *
      * Parms
      *
     d msgfl           s             10
     d xxmmno          s              4
     d xxtkno          s              7
     d xxhgsn          s              7
     d xxfscd          s              5
     d xxshared        s              1
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * DATA AREAS
      *---------------------------------------------------------------
      *
      * Local data area.
      *
     Dlda             uds                  dtaara(*lda)
     D  lderfl                 2      2
      *
      *-------------------------------------------------------------------
      * Definition for external data area 'DAAPER' for accounting period
      *-------------------------------------------------------------------
      *
     D daaper          ds                  dtaara(daaper)
     D  daccyy                        4s 0
     D  daper                         2s 0
     D  dabpdt                        8s 0
     D  daepdt                        8s 0
     D  dapgfl                        1a
     D  dappfl                        1a
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Process each record in the Uploaded Feed Ticket Header file.
      *
     C     *start        setll     hsp237
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsp237                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Edit/Print Feed Ticket Header record
      *
     C                   exsr      $edt237
      *
      * Edit/Print each Feed Ticket Detail record for this Header record
      *
     C     uhtkno        setll     hsp238
     C                   dou       *in91 = *on
     C     uhtkno        reade     hsp238                                 91
     C                   if        *in91 = *off
     C                   exsr      $edt238
     C                   endif
     C                   enddo
      *
     C                   if        uherfl = yes
     C                   move      yes           errfl
     C                   endif
      *
      * Update Feed Ticket Header record with the Error Flag value.
      *
     C                   update    uhrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      *---------------
      * EOF PROCESSING
      *---------------
      *
      * If the data is error free, print in informational message saying so
      * otherwise, update the LDA to indicate that errors exist.
      *
     C                   if        errfl = no                                   If no errors
     C                   except    noerr
     C                   move      no            lderfl
     C                   else
     C                   move      yes           lderfl
     C                   endif                                                  If no errors
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Edit Feed Ticket Header
      *---------------------------------------------------------------
      *
     C     $edt237       begsr
      *
      * Initialize flags:
      *   1) error flag to NO
      *   2) valid date to YES
      *
     C                   move      no            uherfl
     C                   move      yes           oktkdtfl
      *
      * Validate:
      *   Feed Mill Business Office
      *   Ticket Number
      *   Ticket Date
      *   Produced Flag
      *   Cost Through System Flag
      *   Farm Site
     C                   exsr      $fmbo
     C                   exsr      $tkno
     C                   exsr      $tkdt
     C                   exsr      $prfl
     C                   exsr      $csfl
     C                   exsr      $fscd
      *
      * Print the Feed Ticket Header Record followed by its Error Messages
      *
     C                   exsr      $prt237
     C                   exsr      $prtmsg
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit Farm Site Code
      *----------------------------------------------------------------
      *
     C     $fscd         begsr
      *
     C                   move      *blank        uhrgcd
     C                   move      yes           okfarmfl
      *
     C                   select
     C                   when      uhfscd = 0                                   WH NO FARM
     C                   move      no            okfarmfl
     C                   movel     yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00808'     mgid(e)
     C                   endif
     C                   other
      *
      * Check that Farm Site exists
      *
     C     uhfscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  IF BAD FARM
     C                   movel     yes           uherfl
     C                   move      no            okfarmfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      uhfscd        xxfscd
     C                   movea     xxfscd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
     C                   movel     fsrgcd        uhrgcd
     C                   endif                                                  IF BAD FARM
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Map incoming Mill to HPS feed mill business office
      *----------------------------------------------------------------
      *
     C     $fmbo         begsr
      *
     C     uhmmno        chain     hsl089a                            92
     C                   if        *in92 = *off                                 If hit
     C                   move      mafmbo        uhfmbo
     C                   move      maftcd        wkftcd
     C                   else
      *
     C                   move      *blank        uhfmbo
     C                   move      'P'           wkftcd
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00833'     mgid(e)
     C                   clear                   mgw
     C                   move      uhmmno        xxmmno
     C                   movea     xxmmno        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit Ticket Number
      *----------------------------------------------------------------
      *
     C     $tkno         begsr
      *
     C                   select
     C                   when      uhtkno = 0
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00809'     mgid(e)
     C                   endif
      *
     C                   when      uhtkno < 0
     C                   movel     yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00810'     mgid(e)
     C                   endif
     C                   other
      *
      * If you have a Business Office, verify that no Ticket already exists in
      * the HPS Feed Ticket file.
      *
     C                   if        uhfmbo <> *blank                             If have mill
     C     key01         chain     hsp037                             92
     C                   if        *in92 = *off                                 If exists
     C                   movel     yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00805'     mgid(e)
     C                   clear                   mgw
     C                   movel     uhtkno        xxtkno
     C                   movea     xxtkno        mgw(1)
     C                   movea     uhfmbo        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If exists
     C                   endif                                                  If have mill
      *
      * A Ticket can only be in the Editing Header 1 time.
      *
     C                   if        uhtkno = svtkno                              If dup in edit
     C                   movel     yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00807'     mgid(e)
     C                   clear                   mgw
     C                   movel     uhtkno        xxtkno
     C                   movea     xxtkno        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If dup in edit
     C                   endsl
      *
      * Always save the Ticket Number
      *
     C                   z-add     uhtkno        svtkno
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit Ticket Date
      *----------------------------------------------------------------
      *
     C     $tkdt         begsr
      *
     C                   select
     C                   when      uhtkdt = 0
     C                   move      yes           uherfl
     C                   move      no            oktkdtfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00814'     mgid(e)
     C                   endif
      *
     C                   when      uhtkdt < 0
     C                   move      yes           uherfl
     C                   move      no            oktkdtfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00798'     mgid(e)
     C                   endif
     C                   other
      *
     C     *iso          test(d)                 uhtkdt                 92
     C                   if        *in92 = *on                                  If invalid date
     C                   move      no            oktkdtfl
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   move      'HS00811'     mgid(e)
     C                   endif
     C                   else
      *
      * If the date is valid,
      *    Check that it is not greater than today's date
      *    Check that it is not in a closed period
      *    If it is in the Current Period,
      *         check that the Period Close programs are not running
      *
     C                   in        daaper
      *
     C                   select
     C                   when      uhtkdt > wksysdt
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00812'     mgid(e)
     C                   endif
      *
     C                   when      uhtkdt < dabpdt
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00813'     mgid(e)
     C                   endif
      *
     C                   when      uhtkdt >= dabpdt and
     C                             uhtkdt <= daepdt and
     C                             dappfl <> *blank
     C                   movel     yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00816'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endif                                                  If invalid date
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit Produced Flag
      *---------------------------------------------------------------
      *
     C     $prfl         begsr
      *
     C                   if        uhprfl <> yes and uhprfl <> no
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00815'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit Cost-Through-System Flag
      *---------------------------------------------------------------
      *
     C     $csfl         begsr
      *
      * Value must be Yes/No
      *
     C                   if        uhcsfl <> yes and uhcsfl <> no
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00831'     mgid(e)
     C                   endif
     C                   endif
      *
      * Tickets for "purchased" feed cannot be "costed thru system".
      * Validate user's combination.
      *
     C                   if        uhprfl = no and uhcsfl = yes
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00832'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit Feed Ticket Detail record
      *---------------------------------------------------------------
      *
     C     $edt238       begsr
      *
     C                   move      *blank        wkhgcd
     C                   move      *blank        udrmcd
     C                   move      *blank        udblcd
     C                   move      *blank        udalfl
      *
      * Validate:
      *    Bin code (and Hog Group if Bin is valid)
      *    Ration/Additive Code
      *    Feed Type Code
      *    Feed Pounds and Amounts:
      *        Ingredient amount
      *        Medication amount
      *        Manufacturing amount
      *
     C                   if        okfarmfl = no                                If bad farm
     C                   z-add     0             udhgsn
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00818'     mgid(e)
     C                   endif
     C                   else
     C                   exsr      $bncd
     C                   endif                                                  If bad farm
      *
     C                   exsr      $racd
     C                   exsr      $ftcd
     C                   exsr      $lbsamt
      *
      * Update the Feed Ticket Detail record
      *
     C                   update    udrec
      *
      * Print the Feed Ticket Detail record and its corresponding error messages.
      *
     C                   exsr      $prt238
     C                   exsr      $prtmsg
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Validate Bin Code
      *-------------------------------------------------------------------
      *
     C     $bncd         begsr
      *
      * Perform Bin validations:
      *   1) cannot be blank
      *   2) must be valid for the Farm Site
      *   3) must have at least one Hog Group eligible for feed
      *
     C                   select
     C                   when      udbncd = *blank
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00817'     mgid(e)
     C                   endif
     C                   other
      *
      * Check that Bin exists for the Farm in the 'Bin Set Bins' file
      *
     C     key03         chain     hsl036b                            92
     C                   if        *in92 = *on                                  If bad bin
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00139'     mgid(e)
     C                   clear                   mgw
     C                   movea     udbncd        mgw(1)
     C                   move      uhfscd        xxfscd
     C                   movea     xxfscd        mgw(6)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      * Bin is valid, so determine if it is a Direct or Shared Bin
      *
     C                   exsr      $shared
      *
      * Does this Bin have at least one Hog Group eligible for Feed?
      * If it does, continue with Hog Group validations.
      *
     C     key03         chain     hsj036a                            92
     C                   if        *in92 = *on                                  If no eaters
     C                   movel     yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00138'     mgid(e)
     C                   clear                   mgw
     C                   movea     udbncd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
     C                   exsr      $hgcd
     C                   endif                                                  If no eaters
      *
     C                   endif                                                  If bad bin
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Determine if Bin is Direct or Shared
      *----------------------------------------------------------------
      *
     C     $shared       begsr
      *
      * Default the 'direct bin' flag to yes.
      *
     C                   move      yes           dirfl
      *
      * Call the generic program to determine if the bin is shared.
      *
     C                   call      'HP8004'
     C                   parm                    bnfscd
     C                   parm                    bnbncd
     C                   parm      no            xxshared
      *
     C                   if        xxshared = yes
     C                   movel     no            dirfl
     C                   endif
      *
     C                   if        dirfl = yes
     C                   movel     'D'           udalfl
     C                   else
     C                   movel     'T'           udalfl
     C                   endif
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------
      * Validate Hog Group
      *------------------------------------------------------------------
      *
      * If the Bin entered by the user is 'Direct':
      *    If the user keyed a Group, validate that:
      *        1) It is a valid group for this Farm Site
      *        2) The group is eligible for feed
      *    If Hog Group is blank, default in a group eligible for feed when
      *       only one group is eligible; otherwise, issue an error message
      *       telling the user to take F4 and select a group.
      *
      * If the Bin entered by the User is 'SHARED', Group must be blank.
      *
     C     $hgcd         begsr
      *
     C                   select
      * Direct bin
     C                   when      dirfl = yes
     C                   if        udhgsn = 0
     C                   exsr      $nogrp
     C                   else
     C                   exsr      $group
     C                   endif
      *
      * When the Bin is shared, Hog Group must be blank.
      *
     C                   when      dirfl = no
     C                   if        udhgsn <> 0                                  If group entered
     C                   move      yes           uherfl
      *
      *    Retrieve Hog Group Code for printing
      *
     C     udhgsn        chain     hsl034d                            92
     C                   if        *in92 = *off
     C                   move      hghgcd        wkhgcd
     C                   endif
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00263'     mgid(e)
     C                   clear                   mgw
     C                   movea     udbncd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If group entered
     C                   endsl
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Find Group when Bin is Direct and No Group is entered
      *-------------------------------------------------------------------
      *
      * If only one Group is eligible for feed, default it in.
      * If multiple Groups are eligible, issue a message to the user to select
      * a Group.
      *
     C     $nogrp        begsr
      *
     C     key03         chain     hsj036a                            92
     C                   if        *in92 = *off                                 If eater
      *
      * Check to see if there is another Group eligible for Feed
      *
     C     key03         reade     hsj036a                                92
     C                   if        *in92 = *off                                 If mult group
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00821'     mgid(e)
     C                   clear                   mgw
     C                   movea     udbncd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      * Only one Group is eligible; so, default its values in.
      *
     C                   move      hghgcd        wkhgcd
     C                   z-add     hghgsn        udhgsn
     C                   move      hgblcd        udblcd
     C                   move      hgrmcd        udrmcd
     C                   endif                                                  If mult grp
     C                   else
      *
      * No Groups are eligible for Feed
      *
     C                   movel     yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00264'     mgid(e)
     C                   clear                   mgw
     C                   move      uhfscd        XXFSCD
     C                   movea     xxfscd        mgw(1)
     C                   movea     udbncd        mgw(6)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If eater
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Validate the Group entered by the User for a Direct Bin
      *-------------------------------------------------------------------
      *
     C     $group        begsr
      *
      * Validate Hog Group exists in Hog Group file.
      *
     C     udhgsn        chain     hsl034d                            92
     C                   if        *in92 = *on                                  If bad group
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00819'     mgid(e)
     C                   clear                   mgw
     C                   move      udhgsn        xxhgsn
     C                   movea     xxhgsn        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   movel     hghgcd        wkhgcd
      *
      * Verify that Group/Farm combination still exists.
      *
     C     key04         chain     hsl034e                            92
     C                   if        *in92 = *on                                  If Farm mismatch
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00820'     mgid(e)
     C                   clear                   mgw
     C                   movea     wkhgcd        mgw(1)
     C                   move      hgfscd        xxfscd
     C                   movea     xxfscd        mgw(8)
     C                   move      uhfscd        xxfscd
     C                   movea     xxfscd        mgw(13)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      * The Group is valid for the Farm; so, perform additional checks.
      *
     C                   move      hgblcd        udblcd
     C                   move      hgrmcd        udrmcd
      *
      * Check that the Status of this Group is one that "eats" feed.
      *
     C     hggscd        chain     hsp014                             92
     C                   select                                                 select
     C                   when      *in92 = *on
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00268'     mgid(e)
     C                   clear                   mgw
     C                   movea     wkhgcd        mgw(1)
     C                   movea     hggscd        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   other
      *
     C                   if        gsfdfl = no                                  If not eating
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00266'     mgid(e)
     C                   clear                   mgw
     C                   movea     wkhgcd        mgw(1)
     C                   movea     hggscd        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      * The Group is eligible to eat feed, so check to see if it eats from the Bin
      * keyed by the user.
      *
     C                   move      no            binfl
     C     udhgsn        setll     hsj034w
      *
     C                   dou       *in93 = *on or binfl = yes                   Do bin loop
     C     udhgsn        reade     hsj034w                                93
     C                   if        *in93 = *off and                             If not eof
     C                             bnbncd = udbncd
     C                   move      yes           binfl
     C                   endif                                                  If not eof
     C                   enddo                                                  Do bin loop
      *
     C                   if        binfl = no                                   If wrong bin
     C                   movel     yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00269'     mgid(e)
     C                   clear                   mgw
     C                   movea     wkhgcd        mgw(1)
     C                   movea     udbncd        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If wrong bin
      *
      * Make sure that the 'create date' of the group is on/after the
      * ticket date. Alice does not want any group on a ticket if the ticket
      * date is prior to the group's create date.
      *
     C                   if        uhtkdt < hgcrdt
     C                   movel     yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00388'     mgid(e)
     C                   clear                   mgw
     C                   movea     hghgcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   endif                                                  If not eating
     C                   endsl                                                  Select
     C                   endif                                                  If farm mismatch
     C                   endif                                                  If bad group
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Validate Ration/Additive Codes
      *-------------------------------------------------------------------
      *
      * Ration validations:
      *    Cannot be blank
      *    Ration Code must exist in Ration file
      *    Ration Code must be Active
      * Ration/Additive validations:
      *    Ration/Additive combination must exists in Ration/Additive file
      *    Ration/Additive combo must be Active
      *
     C     $racd         begsr
      *
     C                   move      yes           okrncdfl
      *
     C                   select
     C                   when      udrncd = *blank
     C                   move      yes           uherfl
     C                   move      no            okrncdfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00826'     mgid(e)
     C                   endif
     C                   other
      *
     C     udrncd        chain     hsp071                             92
     C                   if        *in92 = *on                                  If bad ration
     C                   movel     yes           uherfl
     C                   move      no            okrncdfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00247'     mgid(e)
     C                   clear                   mgw
     C                   movea     udrncd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      * Ration must be Active
      *
     C                   if        rnrnst = 'I'                                 If inactive ration
     C                   movel     yes           uherfl
     C                   move      no            okrncdfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00529'     mgid(e)
     C                   clear                   mgw
     C                   movea     udrncd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If inactive ration
      *
      * If Additive is entered, validate that the Ration/Additive combination
      * is valid.
      *
     C                   if        udadcd <> *blank                             If additive
     C     key02         chain     hsp072                             92
     C                   if        *in92 = *on                                  If bad combo
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00417'     mgid(e)
     C                   clear                   mgw
     C                   movea     udrncd        mgw(1)
     C                   movea     udadcd        mgw(6)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      * Ration/Additive combination must be Active
      *
     C                   if        rarast = 'I'                                 If inactive
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00530'     mgid(e)
     C                   clear                   mgw
     C                   movea     udrncd        mgw(1)
     C                   movea     udadcd        mgw(6)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If inactive
     C                   endif                                                  If bad combo
     C                   endif                                                  If additive
     C                   endif                                                  If bad ration
     C                   endsl
      *
      *
      * If: a) ticket date is valid
      *     b) ration code is valid
      *     c) group is valid
      *     d) the group is not a BGF group
      *     e) the group is not a Continuous Flow group
      * then, check that the group is the correct age for this ration
      *
     C                   if        oktkdtfl = yes and okrncdfl = yes            If OK
     C                             and wkhgcd <> *blank and hgppcd <> 'BGF  '
     C                             and hgcffl = no
     C                   exsr      $age
     C                   endif                                                  If OK
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------------
      * Calculate the 'age' of the group and compare it to the ration max age
      *-------------------------------------------------------------------------
      *
     C     $age          begsr
      *
      * Default the 'age' of the group to the 'average days old in'.
      *
     C                   z-add     hgadoi        wkdays
      *
      * If the 'ticket date' is after the 'open date' of the group,
      * move the 'ticket date' and the 'open date' of the group to date format fields.
      * Find the number of days between the 'ticket date' and the 'open date'.
      * Add this difference to the 'average days old in'.
      *
      *
     C                   if        uhtkdt > hgopdt and hgopdt <> 0              If need to calc
     C     *iso          move      uhtkdt        wkisotkdt
     C     *iso          move      hgopdt        wkisoopdt
     C     wkisotkdt     subdur    wkisoopdt     wkdays:*d
     C                   add       hgadoi        wkdays
     C                   endif                                                  If need to calc
      *
      * Check 'age' against ration's max.
      *
     C                   if        rnmaxday < wkdays                            If too old
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00525'     mgid(e)
     C                   clear                   mgw
     C                   movea     udrncd        mgw(1)
     C                   movel     rnmaxday      wkdaysalph
     C                   movea     wkdaysalph    mgw(6)
     C                   movea     hghgcd        mgw(9)
     C                   movel     wkdays        wkdaysalph
     C                   movea     wkdaysalph    mgw(16)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If too old
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Validate Feed Type Code
      *-------------------------------------------------------------------
      *
     C     $ftcd         begsr
      *
     C                   move      wkftcd        udftcd
      *
     C     udftcd        chain     hsp024                             92
     C                   if        *in92 = *on                                  If bad type
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00201'     mgid(e)
     C                   clear                   mgw
     C                   movea     udftcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      * Feed Manufacturing Type must have an Active Status
      *
     C                   if        ftftst = 'I'
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00208'     mgid(e)
     C                   clear                   mgw
     C                   movea     udftcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
     C                   endif                                                  If bad type
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Validate Pounds and Amounts
      *-------------------------------------------------------------------
      *
     C     $lbsamt       begsr
      *
      * Feed Pounds must be greater than zero.
      *
     C                   select
     C                   when      udfdlb = 0
     C                   movel     yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00822'     mgid(e)
     C                   endif
      *
     C                   when      udfdlb < 0
     C                   movel     yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09155'     mgid(e)
     C                   endif
     C                   endsl
      *
      * If the Delivery Ticket is to be costed through the System, all of the
      * Dollar Amounts (Ingredient, medication, manufacturing) must be blank.
      *
     C                   if        uhcsfl = yes                                 If cost thru system
      *
     C                   if        udinam <> 0                                     If ingred
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00313'     mgid(e)
     C                   endif
     C                   endif                                                     If ingred
      *
     C                   if        udmdam <> 0                                     If medication
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00315'     mgid(e)
     C                   endif
     C                   endif                                                     If medication
      *
     C                   if        udmfam <> 0                                     If manufacturing
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00316'     mgid(e)
     C                   endif
     C                   endif                                                     If manufacturing
     C                   endif                                                  If cost thru system
      *
      * If the Delivery Ticket is not to be Costed Through The System:
      *    The user is required to key an Ingredient Amount
      *    The user may key a Medication Amount
      *    The user may key a Manufacturing Amount
      *
     C                   if        uhcsfl = no                                  If don't cost
      *
     C                   if        udinam = 0                                      If no ingredient
     C                   move      yes           uherfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00825'     mgid(e)
     C                   endif
     C                   endif                                                     If no ingredient
     C                   endif                                                  If don't cost
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print Report Headings
      *---------------------------------------------------------------
      *
      * Print headings, reset Current Line.
      *
     C     $h1hdr        begsr
      *
     C                   except    h1hdr
     C                   z-add     7             wkcurl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print Feed Ticket Header
      *---------------------------------------------------------------
      *
     C     $prt237       begsr
      *
     C                   if        wkcurl > wkovfl
     C                   exsr      $h1hdr
     C                   endif
      *
     C                   except    dtlhdr
     C                   add       2             wkcurl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print Feed Ticket Detail
      *---------------------------------------------------------------
      *
     C     $prt238       begsr
      *
     C                   if        wkcurl > wkovfl
     C                   exsr      $h1hdr
     C                   exsr      $prt237
     C                   endif
      *
     C                   except    dtldtl
     C                   add       1             wkcurl
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Print error messages
      *-------------------------------------------------------------------
      *
     C     $prtmsg       begsr
      *
     C                   if        error <> 0
     C                   exsr      $wrmsg
     C                   z-add     0             error
     C                   exsr      $clmsg
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages to report
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
      * If overflow, print report headings.
      *
     C                   if        wkcurl > wkovfl
     C                   exsr      $h1hdr
     C                   endif
      *
      * Program UT80046A does not print headings or check for page breaks. Before calling
      * UT80046A, determine if all the error messages can be printed on the current page.
      * Calculate remaining print liens on the page using the overflow line and the current
      * line.
      *
     C     wkovfl        sub       wkcurl        wkdifl
      *
      * If you have more messages than will fit on the page, then page break and
      * print headings.
      *
     C                   if        error > wkdifl
     C                   exsr      $h1hdr
     C                   exsr      $prt237
     C                   exsr      $prt238
     C                   endif
      *
      * Increment the current line by the number of error messages.
      * You will be printing in UT80046A plus one for the space after.
      * This sets the current line number properly for when you return from
      * UT80046A.
      *
     C     wkcurl        add       error         wkcurl
     C                   add       1             wkcurl
      *
     C                   call      'UT80046A'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      msgfil        msgfl
      *
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Clear Messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80046A'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      msgfil        msgfl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
     C     key01         klist
     C                   kfld                    uhfmbo
     C                   kfld                    uhtkno
     C                   kfld                    wktype
      *
      *
     C     key02         klist
     C                   kfld                    udrncd
     C                   kfld                    udadcd
      *
     C     key03         klist
     C                   kfld                    uhfscd
     C                   kfld                    udbncd
      *
     C     key04         klist
     C                   kfld                    uhfscd
     C                   kfld                    wkhgcd
      *
      * Get System Date into CCYYMMDD format
      *
     C*    *mdy          move      udate         wkisodate
     c                   move      sysdate       wkisodate
     C                   move      wkisodate     wksysdt
      *
      * Print Report Headings
      *
     C                   exsr      $h1hdr
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------
      * Report Heading Lines
      *-------------------------------------------------------------
      *
     Oqprint    e            h1hdr          1 01
     O                       sdpgm               10
     O                                          109 'HOG PRODUCTION SYSTEM'
     O                                          188 'DATE'
     O                       udate         Y    198
      *
     O          e            h1hdr          1
     O                       sdusr               10
     O                                           97 'BATCH EDIT LISTING OF'
     O                                          119 'UPLOADED FEED TICKETS'
     O                                          188 'TIME'
     O                       rtime              198 '  :  :  '
      *
     O          e            h1hdr          2
     O                                          188 'PAGE'
     O                       page          Z    198
      *
      *
     O          e            h1hdr          1
     O                                           10 'TICKET'
     O                                           18 'TICKET'
     O                                           29 'INVOICE'
     O                                           37 'PROD'
     O                                           43 'COST'
     O                                           48 'BUS'
     O                                           70 'FARM'
      *
     O                                           81 'BUILDING'
     O                                           87 'ROOM'
     O                                           93 'BIN'
      *
     O                                          102 'ALLOC'
     O                                          107 'HOG'
     O                                          120 'GROUP'
      *
     O                                          129 'RATION'
     O                                          139 'ADDITIVE'
     O                                          145 'FEED'
     O                                          168 'INGREDIENT'
     O                                          183 'MANUFACTURING'
     O                                          198 'MEDICATION'
      *
     O          e            h1hdr          1
     O                                           10 'NUMBER'
     O                                           17 'DATE'
     O                                           29 'NUMBER'
     O                                           36 'Y/N'
     O                                           42 'Y/N'
     O                                           48 'OFF'
     O                                           70 'SITE'
      *
     O                                           78 'CODE'
     O                                           87 'CODE'
     O                                           94 'CODE'
      *
     O                                          102 'FLAG'
     O                                          109 'GROUP'
     O                                          120 'NUMBER'
      *
     O                                          128 'CODE'
     O                                          137 'CODE'
     O                                          145 'TYPE'
     O                                          154 'POUNDS'
     O                                          168 'COST'
     O                                          183 'COST'
     O                                          198 'COST'
      *
     O          e            h1hdr          0
     O                       dash               198
      *
      *-------------------------------------------------------------
      * Detail line for Feed Ticket Header records
      *-------------------------------------------------------------
      *
     O          e            dtlhdr      2  0
     O                       uhtkno              10                             SDN736
     O                       uhtkdt              19
     O                       uhvino              32
     O                       uhprfl              35
     O                       uhcsfl              41
     O                       uhfmbo              50
     O                       uhfscd        m     71
      *
      *-------------------------------------------------------------
      * Detail line for Feed Ticket Detail Records
      *-------------------------------------------------------------
      *
     O          e            dtldtl      1  0
     O                       udblcd              79
     O                       udrmcd              88
     O                       udbncd              95
      *
     O                       udalfl             100
     O                       wkhgcd             111
     O                       udhgsn        z    120
      *
     O                       udrncd             129
     O                       udadcd             137
     O                       udftcd             143
     O                       udfdlb        k    155
     O                       udinam        k    169
     O                       udmfam        k    184
     O                       udmdam        k    198
      *
      *-------------------------------------------------------------
      * No Error Message Line
      *-------------------------------------------------------------
      *
     O          e            noerr       2
     O                                           23 'No terminal errors were'
     O                                           48 'found in the Batch Edit.'
