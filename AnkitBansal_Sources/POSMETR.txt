// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POSMETR
// ?Date: 14.08.2025 Time: 03:38:55
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?WHD63011 RMC- no error on pckg type in relations               4/15/20
//?FP1271 01/25/08 RMC - chgd packaging qty from 5.0 to 7.3
//?FP1271 01/28/08 RMC - Update FG Item Misc Tare when Qty changes,
//?       if Include in Misc Calc is Yes on the pkg type,
//?       dsp pkg tare wt
//?PIO 11/26/24 We are recompiling the program as new field is added in WHS
//?E01630 - Change Application Code to be PKGUPD from C/S.
EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('PKGUPD');
PARAMETER(NLL.Company_Number);
PARAMETER(NLL.Warehouse_Code);
PARAMETER(NLL.Allow_Multi_Company);
PARAMETER(NLL.Default_Printer);
PARAMETER(NLL.Salesperson_Code);

// PAR.USR Display field = CND.no
PAR.USR_Display_field = 'N';

EXECUTE FUNCTION(RTV Box Item code      RT) TYPE(RTVOBJ) FILE(PDIOREP)          AC1402262;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(PAR.Item_Code_USR);

//?USER: Initialize screen for old transaction

EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Description_Line_One);
PARAMETER(NLL.Description_Line_Two);
PARAMETER(NLL.UOM_Primary);
PARAMETER(NLL.UOM_Second);
PARAMETER(NLL.UOM_Third);

//?USER: Initialize subfile record (new record)

// RCD.Display Flag = CND.No
RCD.Display_Flag = 'N';

// RCD.Select Status = CND.yes
RCD.Select_Status = 'Y';

//?USER: Validate subfile record fields

CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> RCD.Packaging Item Code
IF PGM.*Cursor_field = RCD.Packaging_Item_Code;

// Call program Sel Packaging Item    SR.
CALL PROGRAM(Sel Packaging Item    SR) ('POFRSRR');
PARAMETER(CTL.Company_Number);
PARAMETER(RCD.Packaging_Item_Code);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

ENDIF;

//?Default item qty to 1
CASE;

// IF RCD.Packaging Item Quantity is Eq 0
IF RCD.Packaging_Item_Quantity = *ZERO;

// RCD.Packaging Item Quantity = CON.1
RCD.Packaging_Item_Quantity = 1;

ENDIF;

//?If status is blank, move in active
CASE;

// IF RCD.Record Status EQ WRK.BLANK
IF RCD.Record_Status = WRK.BLANK;

// RCD.Record Status = CND.Active
RCD.Record_Status = 'A';

ENDIF;

CASE;

// IF RCD.Packaging Item Code is Not Entered
IF RCD.Packaging_Item_Code = *BLANK;

// RCD.Packaging Item Quantity = CON.*ZERO
RCD.Packaging_Item_Quantity = *ZERO;

// RCD.Record Status = CND.*blank
RCD.Record_Status = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Packaging Item    RT) TYPE(RTVOBJ) FILE(POARREP)           AC1602514;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Packaging_Item_Code);
PARAMETER(LCL.Pckg_Item_Description);

CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Packaging Item not found.'
ERROR(USR2982);
MSGPARM(RCD.Packaging_Item_Code);

ENDIF;

ENDIF;

//?CALC: Subfile record function fields

EXECUTE FUNCTION(RTV Packaging Itm All RT) TYPE(RTVOBJ) FILE(POARREP)           AC1608356;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Packaging_Item_Code);
PARAMETER(LCL.Pckg_Item_Description);
PARAMETER(LCL.Pckg_List_Sequence);
PARAMETER(RCD.Pckg_Item_Type);
PARAMETER(RCD.Item_Code_USR);
PARAMETER(LCL.Pckg_Unit_Cost);
PARAMETER(LCL.Pckg_Tare_Weight);
PARAMETER(RCD.Pckg_Reporting_Group);
PARAMETER(RCD.Pckg_Group_Category);
PARAMETER(LCL.Pckg_Modified_Weight);
PARAMETER(LCL.Pckg_Unused_Sts_2);

// RCD.Misc Tare Weight = LCL.Pckg Tare Weight
RCD.Misc_Tare_Weight = LCL.Pckg_Tare_Weight;

//?Add up number of boxes
CASE;

// IF RCD.Pckg Item Type is Box
IF RCD.Pckg_Item_Type = 'BX';

// OR RCD.Pckg Item Type is Combo box
OR RCD.Pckg_Item_Type = 'CB';

// WRK.USR number = CON.1
WRK.USR_number = 1;

CTL.Total_Box_Comp_Items_SUM = SUM(WRK.USR_number);

ENDIF;

//?USER: Validate totals

//?VAL: Boxes
CASE;

// IF CTL.Total Box Comp Items SUM is Greater than 1
IF CTL.Total_Box_Comp_Items_SUM > 1;

// Send error message - 'Only one component item with packaging type Box can be entered.'
ERROR(USR1907);

ENDIF;

//?USER: Change header DBF record

EXECUTE FUNCTION(Chg Co/Item BOM       IF) TYPE(EXCINTFUN) FILE(CABZREP)        AC1397808;

//?USER: Change detail DBF record

EXECUTE FUNCTION(Chg Packaging BOM/Box IF) TYPE(EXCINTFUN) FILE(POAZCPP)        AC1655477;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Packaging_Item_Code);
PARAMETER(RCD.Packaging_Item_Quantity);
PARAMETER(RCD.Pckg_Item_Type);
PARAMETER(RCD.Pckg_Reporting_Group);
PARAMETER(RCD.Pckg_Group_Category);
PARAMETER(RCD.Pckg_BOM_Unused_Sts_1);
PARAMETER(RCD.Pckg_BOM_Unused_Sts_2);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Item_Code_USR);

//?USER: Create detail DBF record

EXECUTE FUNCTION(Crt Packaging BOM/Box IF) TYPE(EXCINTFUN) FILE(POAZCPP)        AC1655476;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Packaging_Item_Code);
PARAMETER(RCD.Packaging_Item_Quantity);
PARAMETER(RCD.Pckg_Item_Type);
PARAMETER(RCD.Pckg_Reporting_Group);
PARAMETER(RCD.Pckg_Group_Category);
PARAMETER(RCD.Pckg_BOM_Unused_Sts_1);
PARAMETER(RCD.Pckg_BOM_Unused_Sts_2);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);
PARAMETER(RCD.Item_Code_USR);

//?USER: Process detail record

//?Process Delete
CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4';

EXECUTE FUNCTION(Dlt Packaging BOM/Box IF) TYPE(EXCINTFUN)                      AC1655480;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(RCD.Packaging_Item_Code);
PARAMETER(RCD.Item_Code_USR);

ENDIF;

//?USER: Process command keys

// PGM.*Continue transaction = CND.*NO
PGM.*Continue_transaction = 'N';

QUIT;

//?USER: Exit program processing

//?NEW:Accum for Pkg Items that have PKG Type Incl in Misc Tare = Y
//?  and put it in the Misc Tare Wt for the FG item   (FP1271 01/29/08)
//?RMC THIS PGM UPDATES THE FG MISC TARE REAL TIME AND SENDS EMAIL
//?status = no -> dont do sql, but send email instead
// Call program Clc Misc Tare Wt       XF.
CALL PROGRAM(Clc Misc Tare Wt       XF) ('PMRZXFR');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER('N');

EXECUTE FUNCTION(Rtv Misc Tare         RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1739282;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Misc_Tare_Weight);

//?****************
EXECUTE FUNCTION(RTV Box Item code      RT) TYPE(RTVOBJ) FILE(PDIOREP)          AC1402262;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(WRK.Item_Code_USR);

CASE;

// IF PAR.Item Code USR NE WRK.Item Code USR
IF PAR.Item_Code_USR <> WRK.Item_Code_USR;

// PAR.Item Code USR = WRK.Item Code USR
PAR.Item_Code_USR = WRK.Item_Code_USR;

//?If Box ID is Invalid, then flag to write delete item rcd to accusort
CASE;

// IF WRK.Item Code USR is Not Entered
IF WRK.Item_Code_USR = *ZERO;

// PAR.AS Add/Change/Delete = CND.Delete
PAR.AS_Add_Change_Delete = 'D';

//?If Box ID is Invalid, then flag to write delete item rcd to accusort
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.AS Add/Change/Delete = CND.Add
PAR.AS_Add_Change_Delete = 'A';

ENDIF;

// Call program PFS One Prod/Box Rec  XF.
CALL PROGRAM(PFS One Prod/Box Rec  XF) ('PDK1XFR');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Description_Line_One);
PARAMETER(CTL.Item_Label_Line_1);
PARAMETER(CTL.Item_Label_Line_2);
PARAMETER(CTL.Item_Label_Line_3);
PARAMETER(CTL.Unit_Weight);
PARAMETER(CTL.Catch_Weight_Status);
PARAMETER(CTL.Minimum_Weight_Per_Case);
PARAMETER(CTL.Maximum_Weight_Per_Case);
PARAMETER(CTL.Number_Cases_On_A_Pallet);
PARAMETER(CTL.Item_Type_Code);
PARAMETER(CTL.Package_Type_Code);
PARAMETER(CTL.Default_Warehouse);
PARAMETER(CTL.Fresh_Chilling_Time);
PARAMETER(CTL.Misc_Tare_Weight);
PARAMETER(PAR.AS_Add_Change_Delete);

ENDIF;

