     H/TITLE Exc TRG PDLHCPP ProcessXF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISJMIST
     H* Date          : 03/19/25  Time  : 04:17:59
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPVCPCPL0  IF A E           K DISK
      * UPD : Load Order Change Log TRG Update index
      *
      * Long constants
     D @CN#            S              6    DIM(02)CTDATA PERRCD(1)
     D @CN             S             25    DIM(02) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D QPVCP1        E DS                  EXTNAME(PVCPCPL0)
      * UPD : Load Order Change Log TRG Update index
      * Renamed input format fields
     D  WAK4DT       E                     EXTFLD(CPK4DT)
     D  WAA1TM       E                     EXTFLD(CPA1TM)
     D  WADXNB       E                     EXTFLD(CPDXNB)
     D  WAB0TS       E                     EXTFLD(CPB0TS)
     D  WAC4NB       E                     EXTFLD(CPC4NB)
     D  WARMNB       E                     EXTFLD(CPRMNB)
     D  WAQ2SC       E                     EXTFLD(CPQ2SC)
     D  WAQ3SC       E                     EXTFLD(CPQ3SC)
     D  WACEDX       E                     EXTFLD(CPCEDX)
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              1
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  XDTSDL         S             26
     D  WL0001         S              7  0
     D  WL0002         S              6  0
     D  WL0003         S              3  0
     D  WL0004         S              7  0
     D  WL0005         S              7  0
     D  WL0006         S              1
     D  WL0007         S              2
     D  WL0008         S              8  0
     D  WN0001         S             26
     D  ##TMS          S             26
     D  ZADFMF         S             10
     D  YL0001         S             15  5
     D  YL0002         S             15  5
     D  WQ0001         S             15  5
     D  WQ0002         S             15  5
     D  W0CLPG         S             10
     D  WUZHNB         S             15  5
     D  WQ0003         S             15  5
     D  WQ0004         S             15  5
     D  WQ0005         S             15  5
     D  WQ0006         S             15  5
     D  WQ0007         S             15  5
     D  WQ0008         S             15  5
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS            82
      * RCD: Load Order Change Log     Retrieval index
      * I :  Created Date
     D  P1K4DT                 1      4P 0
      * I :  Created Time
     D  P1A1TM                 5      8P 0
      * I :  Sequence Number
     D  P1DXNB                 9     10P 0
      * I :  Load ID
     D  P1RMNB                11     14P 0
      * I :  Stop_Drop
     D  P1RVNB                15     17P 0
      * I :  Load Change Type
     D  P1RVST                18     23
      * I :  Department Control Code
     D  P1UJST                24     26
      * I :  Change Log Prior Value
     D  P1MNTX                27     38
      * I :  Change Log New Value
     D  P1MOTX                39     50
      * I :  User Id
     D  P1AYNA                51     60
      * I :  Job Name
     D  P1A0NA                61     70
      * I :  Carrier Code
     D  P1BZNA                71     73
      * I :  Carrier Broker Carrier Co
     D  P1XMCD                74     76
      * I :  Company Number
     D  P1AIC3                77     78P 0
      * I :  Order Number
     D  P1C4NB                79     82P 0
     D P2PARM          DS            82
      * RCD: Load Order Change Log     Retrieval index
      * I :  Created Date
     D  P2K4DT                 1      4P 0
      * I :  Created Time
     D  P2A1TM                 5      8P 0
      * I :  Sequence Number
     D  P2DXNB                 9     10P 0
      * I :  Load ID
     D  P2RMNB                11     14P 0
      * I :  Stop_Drop
     D  P2RVNB                15     17P 0
      * I :  Load Change Type
     D  P2RVST                18     23
      * I :  Department Control Code
     D  P2UJST                24     26
      * I :  Change Log Prior Value
     D  P2MNTX                27     38
      * I :  Change Log New Value
     D  P2MOTX                39     50
      * I :  User Id
     D  P2AYNA                51     60
      * I :  Job Name
     D  P2A0NA                61     70
      * I :  Carrier Code
     D  P2BZNA                71     73
      * I :  Carrier Broker Carrier Co
     D  P2XMCD                74     76
      * I :  Company Number
     D  P2AIC3                77     78P 0
      * I :  Order Number
     D  P2C4NB                79     82P 0
     D P3PARM          DS
      * I :  TRG Database Event
     D  P3D8SC                 1      1
     D                 DS
     D  ZAMSDA                 1    132
     I@CPCPW7
      * Load Order Change Log TRG Update index
      * Renamed input format fields
     I              CPK4DT                      WAK4DT
     I              CPA1TM                      WAA1TM
     I              CPDXNB                      WADXNB
     I              CPB0TS                      WAB0TS
     I              CPC4NB                      WAC4NB
     I              CPRMNB                      WARMNB
     I              CPQ2SC                      WAQ2SC
     I              CPQ3SC                      WAQ3SC
     I              CPCEDX                      WACEDX
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         RCD: Load Order
     C                   PARM                    P2PARM                         RCD: Load Order
     C     P3D8SC        PARM                    WP0001                         TRG Database Ev
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Exc TRG PDLHCPP ProcessXF
      * *****************************************************************
      * ** PR1 Parms Represent Old Record Fields (Will be blank for Inser
      * ** PR2 Parms Represent New Record Fields (Will be blank for Delet
      * *****************************************************************
      * Trigger Processing for Insert Event.
      * CASE: PR3.TRG Database Event is Insert
      * Create Load Order Change - Load Order Change Log TRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '1'
     C                   Z-ADD     P2K4DT        WL0001                         Created Date
     C                   Z-ADD     P2A1TM        WL0002                         Created Time
     C                   Z-ADD     P2DXNB        WL0003                         Sequence Number
     C                   Z-ADD     P2C4NB        WL0004                         Order Number
     C                   Z-ADD     P2RMNB        WL0005                         Load ID
     C                   MOVEL(P)  P3D8SC        WL0006                         LH TRG Database
     C                   MOVEL(P)  '0'           WL0007                         LH Process Stat
     C                   Z-ADD     *ZERO         WL0008                         LH Process Date
     C                   EXSR      SACRRC
      * If Record Already Exist.
      * CASE: PGM.*Return code is *Record already exists
      * RTV System Date/Time   UP - /UT User Programs  * 
     C                   IF        W0RTN = @CN(002)
     C                   CALL      'PDGFUPC'                            90      RTV System Date
     C     YL0001        PARM      *ZERO         WQ0001                         Current System
     C     YL0002        PARM      *ZERO         WQ0002                         Current System
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDGFUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   Z-ADD     YL0002        WUZHNB                         Current System
      * WI642 JM 02/19/25-Loop Until System Time Changes.
      * DO WHILE: LCL.Current System Time EQ WRK.Current System Time
      * RTV System Date/Time   UP - /UT User Programs  * 
     C                   DOW       YL0002 = WUZHNB
     C                   CALL      'PDGFUPC'                            90      RTV System Date
     C     YL0001        PARM      *ZERO         WQ0003                         Current System
     C     WUZHNB        PARM      *ZERO         WQ0004                         Current System
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDGFUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *ITR
      * Create Load Order Change - Load Order Change Log TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0001        WL0001                         Created Date
     C                   Z-ADD     WUZHNB        WL0002                         Created Time
     C                   Z-ADD     P2DXNB        WL0003                         Sequence Number
     C                   Z-ADD     P2C4NB        WL0004                         Order Number
     C                   Z-ADD     P2RMNB        WL0005                         Load ID
     C                   MOVEL(P)  P3D8SC        WL0006                         LH TRG Database
     C                   MOVEL(P)  '0'           WL0007                         LH Process Stat
     C                   Z-ADD     *ZERO         WL0008                         LH Process Date
     C                   EXSR      SACRRC
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Trigger Processing for Update Event.
      * CASE: PR3.TRG Database Event is Update
      * Create Load Order Change - Load Order Change Log TRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '3'
     C                   Z-ADD     P2K4DT        WL0001                         Created Date
     C                   Z-ADD     P2A1TM        WL0002                         Created Time
     C                   Z-ADD     P2DXNB        WL0003                         Sequence Number
     C                   Z-ADD     P2C4NB        WL0004                         Order Number
     C                   Z-ADD     P2RMNB        WL0005                         Load ID
     C                   MOVEL(P)  P3D8SC        WL0006                         LH TRG Database
     C                   MOVEL(P)  '0'           WL0007                         LH Process Stat
     C                   Z-ADD     *ZERO         WL0008                         LH Process Date
     C                   EXSR      SACRRC
      * If Record Already Exist.
      * CASE: PGM.*Return code is *Record already exists
      * RTV System Date/Time   UP - /UT User Programs  * 
     C                   IF        W0RTN = @CN(002)
     C                   CALL      'PDGFUPC'                            90      RTV System Date
     C     YL0001        PARM      *ZERO         WQ0005                         Current System
     C     YL0002        PARM      *ZERO         WQ0006                         Current System
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDGFUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   Z-ADD     YL0002        WUZHNB                         Current System
      * WI642 JM 02/19/25-Loop Until System Time Changes.
      * DO WHILE: LCL.Current System Time EQ WRK.Current System Time
      * RTV System Date/Time   UP - /UT User Programs  * 
     C                   DOW       YL0002 = WUZHNB
     C                   CALL      'PDGFUPC'                            90      RTV System Date
     C     YL0001        PARM      *ZERO         WQ0007                         Current System
     C     WUZHNB        PARM      *ZERO         WQ0008                         Current System
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDGFUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *ITR
      * Create Load Order Change - Load Order Change Log TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0001        WL0001                         Created Date
     C                   Z-ADD     WUZHNB        WL0002                         Created Time
     C                   Z-ADD     P2DXNB        WL0003                         Sequence Number
     C                   Z-ADD     P2C4NB        WL0004                         Order Number
     C                   Z-ADD     P2RMNB        WL0005                         Load ID
     C                   MOVEL(P)  P3D8SC        WL0006                         LH TRG Database
     C                   MOVEL(P)  '0'           WL0007                         LH Process Stat
     C                   Z-ADD     *ZERO         WL0008                         LH Process Date
     C                   EXSR      SACRRC
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Trigger Processing for Delete Event.
      * CASE: PR3.TRG Database Event is Delete
      * Create Load Order Change - Load Order Change Log TRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '2'
     C                   Z-ADD     P1K4DT        WL0001                         Created Date
     C                   Z-ADD     P1A1TM        WL0002                         Created Time
     C                   Z-ADD     P1DXNB        WL0003                         Sequence Number
     C                   Z-ADD     P1C4NB        WL0004                         Order Number
     C                   Z-ADD     P1RMNB        WL0005                         Load ID
     C                   MOVEL(P)  P3D8SC        WL0006                         LH TRG Database
     C                   MOVEL(P)  '0'           WL0007                         LH Process Stat
     C                   Z-ADD     *ZERO         WL0008                         LH Process Date
     C                   EXSR      SACRRC
     C                   END                                                    *FI
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SACRRC        BEGSR
      *================================================================
      * Create Load Order Change - Load Order Change Log TRG  * 
      *================================================================
      *
     C                   MOVEL     XDTSDL        WN0001                         LH Timestamp
      *
     C                   EVAL      W0RTN = ' '
      * Move all fields to @CPCPW7
     C                   Z-ADD     WL0001        WAK4DT                         Created Date
     C                   Z-ADD     WL0002        WAA1TM                         Created Time
     C                   Z-ADD     WL0003        WADXNB                         Sequence Number
     C                   Z-ADD     WL0004        WAC4NB                         Order Number
     C                   Z-ADD     WL0005        WARMNB                         Load ID
     C                   MOVEL     WL0006        WAQ2SC                         LH TRG Database
     C                   MOVEL     WL0007        WAQ3SC                         LH Process Stat
     C                   Z-ADD     WL0008        WACEDX                         LH Process Date
      *
      * USER: Processing before Data update
      * Set Timestamp TS#     IF
      * PAR.@Timestamp TS# = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WAB0TS                         @Timestamp TS#
     C     KLCRSA        KLIST
     C                   KFLD                    WAK4DT                         Created Date
     C                   KFLD                    WAA1TM                         Created Time
     C                   KFLD                    WADXNB                         Sequence Number
     C                   KFLD                    WAB0TS                         LH Timestamp
      * Check for duplicate primary key
     C     KLCRSA        SETLL     @CPCPW7                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5543'     W0RTN
      * Send message 'Load Order ChangeTRG EX.'
     C                   MOVEL     'USR5543'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
     C                   WRITE     @CPCPW7                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAK4DT                         Created Date
     C                   Z-ADD     *ZERO         WAA1TM                         Created Time
     C                   Z-ADD     *ZERO         WADXNB                         Sequence Number
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(001)      XDTSDL
     C                   MOVEL     XDTSDL        WAB0TS                         LH Timestamp
     C                   Z-ADD     *ZERO         WAC4NB                         Order Number
     C                   Z-ADD     *ZERO         WARMNB                         Load ID
     C                   Z-ADD     *ZERO         WACEDX                         LH Process Date
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Define work field Current System Time
     C                   Z-ADD     *ZERO         WUZHNB
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     @CN(1)        @CN(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SACRRC.
     C                   Z-ADD     *ZERO         WL0001
     C                   Z-ADD     *ZERO         WL0002
     C                   Z-ADD     *ZERO         WL0003
     C                   Z-ADD     *ZERO         WL0004
     C                   Z-ADD     *ZERO         WL0005
     C                   EVAL      WL0006 = ' '
     C                   EVAL      WL0007 = ' '
     C                   Z-ADD     *ZERO         WL0008
      * Define local work field Current System Date
     C                   Z-ADD     *ZERO         YL0001
      * Define local work field Current System Time
     C                   Z-ADD     *ZERO         YL0002
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
00002 Y2U0003
