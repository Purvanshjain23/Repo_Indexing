      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP240 - FOS Download: Build Group Files
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     08/03/00
      *
      * FUNCTION:    This function builds two files that will be imported
      *              into the P.C.-based FOS-Feed Ordering System (which was done
      *              in Access by Brad Hamilton.)
      *
      *              Only Nursery and Grow Finish groups are included.
      *              This program is executed from HP240CL.  It is intended that
      *              the function will execute nightly.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 01/30/01  LeAnne Fedor
      *           Recompile only.  Production type was removed from feed files.
      *
      * 06/28/01  LeAnne Fedor
      *           Recompile only.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 12/31/02  LeAnne Fedor
      *           Added 3 new fields to group file:
      *                group type
      *                stayed/moved code
      *                stocking density code
      *
      * 05/31/06  LeAnne Fedor
      *           Added a new field to group header file:
      *                origin BGF pod
      *
      * 08/02/06  LeAnne Fedor
      *           Recompile only. Two new fields (ration 8 feed pounds, ration paylean flag)
      *           added to Datamart Group Header file.
      *
      * 01/30/07  LeAnne Fedor
      *           Changed the "text" on the program name.
      *
      * 08/10/07  LeAnne Ramsey
      *           Recompile only. New "target" fields renamed in the Datamart Group
      *
      * 08/21/07  LeAnne Ramsey
      *           We are buying feed from Murphy's (Sunray Mill). The Murphy ration
      *           codes must be mapped to the HPS codes. John Zimmerman wants to
      *           do the mapping on the FOS side so that they/he can control it.
      *           So, the file HSP241-Group Rations must now be rolled/summed to the
      *           new Mill/Ration level so that John Z. can "map" based on the mill.
      *           So, I added "feed mill number" (John's equivalent to our Feed Mill
      *           Business Office) to the file and rolled the data to the "mill"
      *           level.
      *
      * 09/21/07  LeAnne Ramsey
      *           Recompile only. New "target" fields added/removed in the Datamart Group
      *           Header file.
      *
      * 07/02/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/18/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one.
      *
      * 10/14/16  Barb Gutierrez
      *           Recompile only. Added fields Sold days in phase, Avg Sold days in phase,
      *           Wgt open date, and company number to HPPF034.         E6136
      *
      * 06/05/2017 Lara Buser   E010639
      *           Recompile only. Three new fields were added to HSP089 -
      *           Mill Type Code and Description, and Active/Inactive Status
      *
      * 10/30/19  Brad Baden   E15736 - Upload Toll Mill Receipts
      *           Recompiled only for new field is HSP089 file.
      *
      * 03/26/20  Danny Nguyen - P405 - Farm Number Increase
      *           Recompile only. Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp036    if   e           k disk
      *    Bin set bins
      *
      *
     Fhsp034    if   e           k disk
      *    Hog group  (records selected by open query)
      *
      *
     Fhsl038e   if   e           k disk
      *    Feed ticket detail (key fields set in CL with override)
      *
      *
     Fhsp089    if   e           k disk
      *    Feed mill alias
      *
      *
     Fhsp113    if   e           k disk
      *    Rooms/Bin sets
      *
      *
     Fhppf034   if   e           k disk    rename(hgrec:hgrec2) prefix(p1)
      *    Datamart FIN: Group header
      *
      *
     Fhsp240    o    e             disk
      *    Group header for interface to FOS
      *
      *
     Fhsp241    o    e             disk
      *    Group detail (rations) for interface to FOS
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control/save fields
      *
     D svrncd          s                   like(odrncd)
     D svfmbo          s                   like(fdfmbo)
     D first           s              1a
      *
      *
      * Workfields
      *
     D wktilb          s                   like(ohajtilb)
     D wktihd          s                   like(ohhd)
      *
      *
      * Workfields for date manipulation
      *
     D wkcymdiso       s               D   datfmt(*iso)
      *
      *
      * Define parms for the generic movement program
      *
     D zzcymd          s              8  0
      *
     D @@nu50          s              5  0
     D gpihd           s                   like(@@nu50)
     D pinhd           s                   like(@@nu50)
     D tinhd           s                   like(@@nu50)
     D tisphd          s                   like(@@nu50)
     D tidphd          s                   like(@@nu50)
     D pouhd           s                   like(@@nu50)
     D touhd           s                   like(@@nu50)
     D tosphd          s                   like(@@nu50)
     D todphd          s                   like(@@nu50)
     D rinhd           s                   like(@@nu50)
     D rouhd           s                   like(@@nu50)
     D qinhd           s                   like(@@nu50)
     D qouhd           s                   like(@@nu50)
     D morhd           s                   like(@@nu50)
     D inahd           s                   like(@@nu50)
      *
     D @@nu92          s              9  2
     D pinlb           s                   like(@@nu92)
     D tinlb           s                   like(@@nu92)
     D tisplb          s                   like(@@nu92)
     D tidplb          s                   like(@@nu92)
     D poulb           s                   like(@@nu92)
     D toulb           s                   like(@@nu92)
     D tosplb          s                   like(@@nu92)
     D todplb          s                   like(@@nu92)
     D rinlb           s                   like(@@nu92)
     D roulb           s                   like(@@nu92)
     D qinlb           s                   like(@@nu92)
     D qoulb           s                   like(@@nu92)
     D morlb           s                   like(@@nu92)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Read each hog group record from the hog group file. (Records are
      * selected with an open query.)
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      hsp034                                 90
     C                   if        *in90 = *off
      *
      * Setup and format fields from the Hog Group record
      *
     C                   exsr      $setup
      *
      * Retrieve the Origin BGF Pod for the group from a Datamart file
      *
     C                   exsr      $obpod
      *
      * Retrieve a bin for the group
      *
     C                   exsr      $bin
      *
      * Get current inventory and transfer in data as of run date.
      *
     C                   exsr      $inventory
      *
      * Calculate the 'adjusted transfer in' value for the group.
      *
     C                   exsr      $adjtran
      *
      * Write a group header record and then clear the record
      *
     C                   write     ohrec
     C                   clear                   ohrec
      *
      * Retrieve feed info and write detail records for the group
      *
     C                   exsr      $feed
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      *--------------------------------------------------------------
      * EOF Processing
      *--------------------------------------------------------------
      *
     C                   seton                                        lr
      /EJECT
      *----------------------------------------------------------------
      * Setup and format fields for the Hog Group record
      *----------------------------------------------------------------
      *
     C     $setup        begsr
      *
     C                   move      hghgcd        ohhgcd
     C                   move      hggscd        ohgscd
     C                   move      hgppcd        ohppcd
     C                   move      hggncd        ohsicd
     C                   move      hgsxcd        ohsxcd
     C                   move      hggtcd        ohgtcd
     C                   move      hgsdcd        ohsdcd
     C                   move      hgsmcd        ohsmcd
     C                   z-add     hgfscd        ohfscd
     C                   move      hgblcd        ohblcd
     C                   move      hgrmcd        ohrmcd
     C                   z-add     hgopdt        ohopdt
      *
     C     *mdy          movel     udate         wkcymdiso
     C                   movel     wkcymdiso     ohbldt
     C                   time                    ohbltm
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve the Origin BGF Pod for the Group
      *----------------------------------------------------------------
      *
     C     $obpod        begsr
      *
     C     ohhgcd        chain     hppf034                            92
     C                   if        *in92 = *off                                 If hit
     C                   z-add     p1hgobpod     ohobpod
     C                   endif                                                  If hit
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve a bin for a group
      *----------------------------------------------------------------
      *
     C     $bin          begsr
      *
      * First, using farm/building/room, retrieve a 'bin set'
      *        from the Rooms/Bin Sets file
      * Then,  using farm/bin set, retrieve the first 'bin' you
      *        find in the Bin Set Bins file
      *
     C     key01         chain     hsp113                             92
     C                   if        *in92 = *off                                 If bin set
      *
     C     key02         chain     hsp036                             92
     C                   if        *in92 = *off                                 If bin
     C                   move      bnbncd        ohbncd
     C                   endif                                                  If bin
      *
     C                   endif                                                  If bin set
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Get current data
      *----------------------------------------------------------------
      *
     C     $inventory    begsr
      *
     C                   z-add     ohbldt        zzcymd
     C                   call      'HPMOVE'      plist01
      *
      * Inventory as of build date
      *
     C                   z-add     gpihd         ohhd
      *
      *
      * Transfer-in head and pounds as of build date
      *
     C                   z-add     tinhd         wktihd
     C                   z-add     tinlb         wktilb
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Adjusted transfers-in
      *----------------------------------------------------------------
      *
     C     $adjtran      begsr
      *
      *
     C     *iso          test(d)                 hgopdt                 92
     C                   if        *in92 = *off                                 If good date
     C                   movel     hgopdt        wkcymdiso
      *
      * Calculate the 'cut-off' date as 7 days after the group's open date.
      *
     C                   adddur    7:*days       wkcymdiso
     C                   move      wkcymdiso     zzcymd
      *
      *
      * Retrieve the 'transfer out head and pounds' as of the cutoff date.
      * Then, calculate the 'adjusted transfer in' head and pounds using the
      * returned values from the call.
      *
     C                   call      'HPMOVE'      plist01
     C     wktihd        sub       touhd         ohajtihd
     C     wktilb        sub       toulb         ohajtilb
      *
      *
      * Calculate the 'adjusted average weight'.
      *
     C                   if        ohajtihd <> 0                                If head
     C     ohajtilb      div(h)    ohajtihd      ohajavlb
     C                   endif                                                  If head
      *
     C                   endif                                                  If good date
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------
      * Retrieve feed records and write ration detail records for group
      *------------------------------------------------------------------------
      *
      * Write one record for each unique mill/ration for the group.
      *
     C     $feed         begsr
      *
     C                   move      yes           first
     C                   movel     hghgcd        odhgcd
      *
     C     hghgsn        setll     hsl038e
      *
     C                   dou       *in91 = *on                                  Feed loop
     C     hghgsn        reade     hsl038e                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   if        first = yes
     C                   move      fdrncd        svrncd
     C                   move      fdfmbo        svfmbo
     C                   move      no            first
     C                   endif
      *
     C                   if        svrncd <> fdrncd or
     C                             svfmbo <> fdfmbo
     C                   exsr      $write241
     C                   endif
      *
     C                   add       fdfdlb        odlb
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Feed loop
      *
      *
      * Write out last ration record if you had any pounds.
      *
     C                   if        odlb <> 0
     C                   exsr      $write241
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Write detail record
      *----------------------------------------------------------------
      *
     C     $write241     begsr
      *
     C                   move      svrncd        odrncd
      *
      * Retrieve the "Mapping Mill Number" associated with our HPS Feed Mill.
      * FOS needs the "Mapping Mill Number".
      *
     C     svfmbo        chain     hsp089                             92
     C                   if        *in92 = *off                                 If hit
     C                   z-add     mammno        odmmno
     C                   else
     C                   z-add     0             odmmno
     C                   endif
      *
     C                   write     odrec
      *
      * Save control fields
     C                   move      fdrncd        svrncd
     C                   move      fdfmbo        svfmbo
     C                   z-add     0             odlb
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    hgfscd
     C                   kfld                    hgblcd
     C                   kfld                    hgrmcd
      *
     C     key02         klist
     C                   kfld                    rbfscd
     C                   kfld                    rbbicd
      *
      *
      * Parm lists
      *
     C     plist01       plist
     C                   parm                    hghgsn
     C                   parm                    zzcymd
      * Head
     C                   parm                    gpihd                          GROUP INV
     C                   parm                    pinhd                          PIG IN
     C                   parm                    tinhd                          TRSF IN
     C                   parm                    tisphd                         SAME PHASE
     C                   parm                    tidphd                         DIFF PHASE
     C                   parm                    pouhd                          PIGS OUT
     C                   parm                    touhd                          TRSF OUT
     C                   parm                    tosphd                         SAME PHASE
     C                   parm                    tosphd                         DIFF PHASE
     C                   parm                    rinhd                          REJECT IN
     C                   parm                    rouhd                          REJECT OUT
     C                   parm                    qinhd                          QUALITY IN
     C                   parm                    qouhd                          QUALITY OUT
     C                   parm                    morhd                          MORTALITY
     C                   parm                    inahd                          INV ADJ
      * Pounds
     C                   parm                    pinlb                          PIG IN
     C                   parm                    tinlb                          TRSF IN
     C                   parm                    tisplb                         SAME PHASE
     C                   parm                    tidplb                         DIFF PHASE
     C                   parm                    poulb                          PIG OUT
     C                   parm                    toulb                          TRSF OUT
     C                   parm                    tosplb                         SAME PHASE
     C                   parm                    todplb                         DIFF PHASE
     C                   parm                    rinlb                          REJECT IN
     C                   parm                    roulb                          REJECT OUT
     C                   parm                    qinlb                          QUALITY IN
     C                   parm                    qoulb                          QUALITY OUT
     C                   parm                    morlb                          MORTALITY
      *
      *
     C                   endsr
      /EJECT
