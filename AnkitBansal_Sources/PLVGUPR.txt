             PGM        PARM(&RTNCDE &MANUAL)
   /*-------------------------------------------------------------*/
   /* iSeries data and prep for the data for the IHUB to take     */
   /* this data at 2:30 am.                                       */
   /*-------------------------------------------------------------*/
   /* PULL THE DATA FROM THE PLBUCPP using sequel                 */
   /* and select the records and summary the data into the        */
   /* SPACTUALPF Then read SPACTUALPF and write a record          */
   /* to the Sp Actual File PLBYCPP                               */
   /*-------------------------------------------------------------*/
   /* Select the previous period hot weight and the current period*/
   /* data.                                                       */
   /*                                                             */
   /* Calculate Beginning Date and Calculate Endding Date         */
   /*                                                             */
   /* BASED ON THE CURRENT DATE AND GET THE PREVIOUS PERIOD       */
   /* BEGINNING DATE, AND THEN USE THE CURRENT DATA AND GET       */
   /* THE CURRENT PERIOD ENDING DATE                              */
   /*                                                             */
   /* CLRPFM THE SP ACTUAL BEFORE GETTING STARTED.                */
   /*                                                             */
   /* PERFORM THE SEQUEL THAT WILL THEN SELET THE DATA BASED      */
   /* ON PREVIOUS BEGINNING THRU THE CURRENT PERIOD ENDDING       */
   /* DATE.                                                       */
   /*                                                             */
   /* COUNT THE RECORDS AND SUMMARIZE THE DATA                    */
   /* THEN READ THIS DATA AND WRITE THE DATA INTO THE IHUB        */
   /* DATA - WHICH IS THE SP ACTUAL                               */
   /* SLM 02/26/2015                                              */
   /* CALCULATION ON THE INFOR CALENDAR IS NOW ON THE ISERIES     */
   /*-------------------------------------------------------------*/

   /*-------------------*/
   /* Declare Variables */
   /*-------------------*/
             DCL        VAR(&CMPCDE) TYPE(*CHAR) LEN(3)
             DCL        VAR(&RTNCDE) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MANUAL) TYPE(*CHAR) LEN(1)
             DCL        VAR(&STEP) TYPE(*CHAR) LEN(3)

             DCL        VAR(&FDATE) TYPE(*DEC) LEN(7 0)
             DCL        VAR(&TDATE) TYPE(*DEC) LEN(7 0)
             DCL        VAR(&FDAT) TYPE(*DEC) LEN(7 0)
             DCL        VAR(&TDAT) TYPE(*DEC) LEN(7 0)
             DCL        VAR(&CURDAT) TYPE(*DEC) LEN(7 0)
             DCL        VAR(&FDATEA) TYPE(*CHAR) LEN(7)
             DCL        VAR(&TDATEA) TYPE(*CHAR) LEN(7)
             DCL        VAR(&JOBDATE) TYPE(*CHAR) LEN(6)
             DCL        VAR(&JOBDTE) TYPE(*CHAR) LEN(7)
             DCL        VAR(&NODAYS) TYPE(*DEC) LEN(5 0) VALUE(10)
             DCL        VAR(&WEEK) TYPE(*DEC) LEN(2 0)
             DCL        VAR(&PDATE) TYPE(*DEC) LEN(7 0)

   /*-------------------*/
   /* Parameter Fields */
   /*--FOR INDIVIDUAL---*/
   /*--DATA          ---*/
   /*-------------------*/
             DCL        VAR(&SPPROD) TYPE(*CHAR) LEN(30)
             DCL        VAR(&SPLOCA) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SPKILD) TYPE(*DEC) LEN(8 0)
             DCL        VAR(&SPHEADA) TYPE(*CHAR) LEN(14)
             DCL        VAR(&SPHEAD) TYPE(*DEC) LEN(14 4)

             DCLF       FILE(PRKPLIB/SPACTUALPF)

/* - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - */
/* REMOVE THE LINE ABOVE                                          */
/* CHANGE THIS LIKE TO ACTIVE WHEN GO LIVE IN PRODUCTION          */
/*           DCLF       FILE(SPACTUALPF)                          */
/* - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - */

  /* Get current date to get the periof beginnin and endding dates  */

             RTVJOBA    DATE(&JOBDATE)
             CVTDAT     DATE(&JOBDATE) TOVAR(&JOBDTE) FROMFMT(*MDY) +
                          TOFMT(*CYMD) TOSEP(*NONE)
             CHGVAR     VAR(&CURDAT) VALUE(&JOBDTE)

   /* Send Actuals FOR THE PERIOD THAT (CURR DATE-10 DAYS) IS IN  */
             CALL       PGM(PBPHXFR) PARM('' &CURDAT &NODAYS &PDATE) +
                          /* 10 DYS PRIOR */

 /*  GET PERIOD begin DATE TO SEL REQ SHIP DATES   */
   /*******  CALL   PGM(PBOZUPR) PARM(&RTNCDE 'C' &PDATE &FDAT + ****/
   /*******               &TDAT &WEEK)                *********/

             CALL       PGM(PBQMXFR) PARM(&RTNCDE X'445F' &PDATE  +
                           &FDAT &TDAT)

             CHGVAR     VAR(&FDATEA) VALUE(&FDAT)
             CHGVAR     VAR(&TDATEA) VALUE(&CURDAT)

  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - */
  /* perform sequel from plbucpp and summary into the      */
  /* SPACTUALPF                                            */
  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - */

             CHGVAR     VAR(&STEP) VALUE(000)
  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - */
  /* This will be from 8/24/2014 - NEW DATE                */
  /* need to wait until INFOR agrees on locking this       */
  /* down by prior from date and actual to date.           */
  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - */
             IF         COND(&MANUAL *EQ 'Y') THEN(DO)
             CHGVAR     VAR(&STEP) VALUE(001)
             EXECUTE    VIEW(*LIBL/SPACTUALSU) +
                          OUTFILE(QTEMP/SPACTUALPF) MSG(*NO)
                          ENDDO

  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - */
  /* THIS WILL BE BY FROM AND TO DATE                      */
  /* use the prior from date and actual to date.           */
  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - */
             IF         COND(&MANUAL *EQ ' ') THEN(DO)
             CHGVAR     VAR(&STEP) VALUE(002)
             EXECUTE    VIEW(SPACTUAL) OUTFILE(QTEMP/SPACTUALPF) +
                          SETVAR((&FDATE &FDATEA) (&TDATE &TDATEA)) +
                          MSG(*NO)

                          ENDDO
/* - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - */
/*  FOR TESTING ONLY                                              */
/* CHANGE THIS LINE NOT TO BE HERE WHEN WE GO LINE WITH           */
/* PRODUCTION                                                     */
/* - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - */

             CPYF       FROMFILE(QTEMP/SPACTUALPF) +
                          TOFILE(PRKPLIB/SPACTUALPF) MBROPT(*REPLACE)

 TEST0:
/* - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - */
/*  FOR TESTING ONLY                                              */
/* - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - */
/******      DMPCLPGM                                  ********/
/********    CALL       PGM(VRYSLM1)                   *******/
/* - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - */

  /* NEXT read the data from SPACTUALPF and write a record */
  /* to PLBYCPP  SPACTUAL                                  */
             CLRPFM     FILE(PLBYCPP)

 LOOP:       RCVF
             MONMSG     MSGID(CPF0889) EXEC(GOTO CMDLBL(ENDPGM))
             MONMSG     MSGID(CPF0000) EXEC(GOTO ENDPGM)

             CHGVAR     VAR(&SPPROD) VALUE(&BUZDTX)
             CHGVAR     VAR(&SPLOCA) VALUE(&BUZCTX)
             CHGVAR     VAR(&SPKILD) VALUE(&KLDTE)
             CHGVAR     VAR(&SPHEADA) VALUE(&CNTSTAR)
             CHGVAR     VAR(&SPHEAD) VALUE(&SPHEADA)

  /* Write a record to PLBYCPP                             */
             CALL       PGM(PLVFXFR) PARM(' ' &SPPROD &SPLOCA &SPKILD +
                          &SPHEAD)

             GOTO LOOP

ENDPGM:

             ENDPGM

