      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     Workfile: Nursery Groups--BGF Sources Total
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     11/11/02
      *
      * FUNCTION:    This function builds the summarized BGF Source line records for each
      *              nursery group in the workfile Nursery Groups--BGF sources.
      *
      *              It calculates the % of total head received into the group that is
      *              represented by each origin BGF farm. An 'unknown farm' record is written
      *              for all unaccounted for head.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
      *
     Fhsp018    if   e           k disk
      *  Farm site
      *
      *
     Fhsp326    if   e           k disk
      *  Workfile: Nursery groups--BGF sources
      *
      *
     Fhsp336    uf a e           k disk
      *  Workfile: Nursery groups--BGF source total
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
     D arrfscd         s              5s 0 dim(50)
     D arrrchd         s              5s 0 dim(50)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svdnhgsn        s                   like(w2dnhgsn)
     D svdnhgcd        s                   like(w2dnhgcd)
     D svdnfscd        s                   like(w2dnfscd)
     D svdncell        s                   like(w2dncell)
      *
      *
      * Workfields
      *
     D wkhd            s                   like(w2rchd)
     D wkrchd          s                   like(w2rchd)
     D wkarrhd         s                   like(w2rchd)
     D wkpr            s             15  8
     D wkrempr         s              5  2
      *
     D wksysdt         s              8  0
      *
      *
      * Workfields for date manipulation
      *
     D wkcymdiso       s               D   datfmt(*iso)
      *
      *
      *
      * Define parms for the generic movement program
      *
     D zzcymd          s              8  0
      *
     D @@nu50          s              5  0
     D gpihd           s                   like(@@nu50)
     D pinhd           s                   like(@@nu50)
     D tinhd           s                   like(@@nu50)
     D tisphd          s                   like(@@nu50)
     D tidphd          s                   like(@@nu50)
     D pouhd           s                   like(@@nu50)
     D touhd           s                   like(@@nu50)
     D tosphd          s                   like(@@nu50)
     D todphd          s                   like(@@nu50)
     D rinhd           s                   like(@@nu50)
     D rouhd           s                   like(@@nu50)
     D qinhd           s                   like(@@nu50)
     D qouhd           s                   like(@@nu50)
     D morhd           s                   like(@@nu50)
     D inahd           s                   like(@@nu50)
      *
     D @@nu92          s              9  2
     D pinlb           s                   like(@@nu92)
     D tinlb           s                   like(@@nu92)
     D tisplb          s                   like(@@nu92)
     D tidplb          s                   like(@@nu92)
     D poulb           s                   like(@@nu92)
     D toulb           s                   like(@@nu92)
     D tosplb          s                   like(@@nu92)
     D todplb          s                   like(@@nu92)
     D rinlb           s                   like(@@nu92)
     D roulb           s                   like(@@nu92)
     D qinlb           s                   like(@@nu92)
     D qoulb           s                   like(@@nu92)
     D morlb           s                   like(@@nu92)
      *
      *
      *
      * Array indexes
      *
     D x               s              3  0
     D y               s              3  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Process each destination group in the Workfile: Nursery Groups-BGF Sources
      *
     C     *loval        setll     hsp326
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      hsp326                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
      * First time
     C                   if        first = yes
     C                   exsr      $clear
     C                   move      no            first
     C                   endif
      *
      * Break on destination group
      *
     C                   if        w2dnhgsn <> svdnhgsn
     C                   exsr      $break
     C                   endif
      *
      * Detail processing when you have 'received' head and 'origin' farm site.
      *  1) accumulate head received into array
      *
     C                   if        w2rchd <> 0 and w2orfscd <> 0
     C                   exsr      $detail
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      * Last record processing for last nursery group
      *
     C                   if        first = no
     C                   exsr      $break
     C                   endif
      *
      * EOF Processing
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------------
      * Detail processing
      *---------------------------------------------------------------------
      *
     C     $detail       begsr
      *
     C                   z-add     1             x
     C     w2orfscd      lookup    arrfscd(x)                             92
     C                   if        *in92 = *on                                  If exists
     C                   add       w2rchd        arrrchd(x)
     C                   else
     C                   add       1             y
     C                   z-add     w2orfscd      arrfscd(y)
     C                   z-add     w2rchd        arrrchd(y)
     C                   endif                                                  If exists
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Control break on group
      *----------------------------------------------------------------
      *
     C     $break        begsr
      *
      * Find the total head in the head array for the group
      *
     C                   xfoot     arrrchd       wkarrhd
      *
      * Find the total head 'received' into the group as of the system date.
      *
     C                   exsr      $rchd
      *
      *
      * Set up fields that do not change per record.
      *
     C                   z-add     svdnfscd      w9dnfscd
     C                   z-add     svdncell      w9dncell
     C                   z-add     svdnhgsn      w9dnhgsn
     C                   move      svdnhgcd      w9dnhgcd
      *
      *
      * Start the percent out out 100%.
      *
     C                   z-add     100           wkrempr
      *
      * Write a record for each element in the origin BGF farm array.
      *
     C                   do        y             x
     C                   z-add     arrfscd(x)    w9orfscd
     C                   z-add     arrrchd(x)    w9rchd
      *
      * Calculate percent of total
      *
     C                   if        wkrchd <> 0
     C     w9rchd        div       wkrchd        wkpr
     C     wkpr          mult(h)   100           w9hdpr
     C                   sub       w9hdpr        wkrempr
     C                   else
     C                   z-add     0             w9hdpr
     C                   endif
      *
      * Retrieve cell for origin farm site
      *
     C     w9orfscd      chain     hsp018                             92
     C                   if        *in92 = *off
     C                   z-add     fscell        w9orcell
     C                   else
     C                   z-add     0             w9orcell
     C                   endif
      *
     C                   write     w9rec
     C                   enddo
      *
      * Now, you have finished processing the arrays, if you have 'remaining' percent,
      * 1) add it to the last record written if remaining head is 0
      * 2) write an 'unknown bgf source' record if remaining head is not zero
      *
     C                   if        wkrempr <> 0                                 If leftovers
     C     wkrchd        sub       wkarrhd       wkhd
      *
     C                   select
     C                   when      wkhd <> 0
     C                   z-add     0             w9orfscd
     C                   z-add     0             w9orcell
     C                   z-add     wkrempr       w9hdpr
     C                   z-add     wkhd          w9rchd
     C                   write     w9rec
     C                   other
      *
     C     key01         chain     hsp336                             92
     C                   if        *in92 = *off
     C                   add       wkhd          w9rchd
     C                   add       wkrempr       w9hdpr
     C                   update    w9rec
     C                   endif
     C                   endsl
      *
     C                   endif                                                  If leftovers
      *
      * Clear/initialize for next group
      *
     C                   exsr      $clear
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------
      * Retrieve 'total head received' into the group as of the system date
      *---------------------------------------------------------------------
      *
     C     $rchd         begsr
      *
     C                   call      'HPMOVE'      plist01
     C     qinhd         add       rinhd         wkrchd
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear routine
      *----------------------------------------------------------------
      *
     C     $clear        begsr
      *
      * Clear arrays and set array indexes back to zero
      *
     C                   z-add     0             arrfscd
     C                   z-add     0             arrrchd
     C                   z-add     0             x
     C                   z-add     0             y
      *
      *
      * Set save fields
     C                   z-add     w2dnhgsn      svdnhgsn
     C                   move      w2dnhgcd      svdnhgcd
     C                   z-add     w2dnfscd      svdnfscd
     C                   z-add     w2dncell      svdncell
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     plist01       plist
     C                   parm                    svdnhgsn
     C                   parm                    wksysdt
      * Head
     C                   parm                    gpihd                          GROUP INV
     C                   parm                    pinhd                          PIG IN
     C                   parm                    tinhd                          TRSF IN
     C                   parm                    tisphd                         SAME PHASE
     C                   parm                    tidphd                         DIFF PHASE
     C                   parm                    pouhd                          PIGS OUT
     C                   parm                    touhd                          TRSF OUT
     C                   parm                    tosphd                         SAME PHASE
     C                   parm                    tosphd                         DIFF PHASE
     C                   parm                    rinhd                          REJECT IN
     C                   parm                    rouhd                          REJECT OUT
     C                   parm                    qinhd                          QUALITY IN
     C                   parm                    qouhd                          QUALITY OUT
     C                   parm                    morhd                          MORTALITY
     C                   parm                    inahd                          INV ADJ
      * Pounds
     C                   parm                    pinlb                          PIG IN
     C                   parm                    tinlb                          TRSF IN
     C                   parm                    tisplb                         SAME PHASE
     C                   parm                    tidplb                         DIFF PHASE
     C                   parm                    poulb                          PIG OUT
     C                   parm                    toulb                          TRSF OUT
     C                   parm                    tosplb                         SAME PHASE
     C                   parm                    todplb                         DIFF PHASE
     C                   parm                    rinlb                          REJECT IN
     C                   parm                    roulb                          REJECT OUT
     C                   parm                    qinlb                          QUALITY IN
     C                   parm                    qoulb                          QUALITY OUT
     C                   parm                    morlb                          MORTALITY
      *
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    svdnhgsn
     C                   kfld                    w9orfscd
      *
      * Put system date into work field.
      *
     C     *mdy          movel     udate         wkcymdiso
     C                   movel     wkcymdiso     wksysdt
      *
     C                   endsr
      /EJECT
