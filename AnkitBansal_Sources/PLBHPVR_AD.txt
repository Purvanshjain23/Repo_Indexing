// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLBHPVR
// ?Date: 14.08.2025 Time: 02:53:39
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification History
DO;

//?C9426 JBB 04/13/17 - Data Base Chgs for ProdServ
//?- Copy function Exc Crt BOL for Dtls  XF - Delivery Sched Detail
//?  to function Exc Crt BOL-All Source XF - Delivery Sched Detail.
//?  The calling of this new function is conditioned to only company
//?  440.  For now,  Company 440 does not select records based on
//?  Source Code.  This new rule may change based on a review of the
//?  design.
//?- Remove logic that had "Hardcode" for Producer Code = SEABOA.
//?R7515 JJH 02/15/17 - Producer Code
//?- Do not allow entry of a Producer Code with a Source Type of
//?  I=Internal.
//?- Remove logic that had "Hardcode" for Producer Code = SEABOA.
ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?USER: Load screen

// DTL.BOH Company Number = PAR.CC Company Number
DTL.BOH_Company_Number = PAR.CC_Company_Number;

//?USER: Process command keys

CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.PD Producer Code
IF PGM.*Cursor_field = DTL.PD_Producer_Code;

// OR PGM.*Cursor field <IS> DTL.PL Location Code
OR PGM.*Cursor_field = DTL.PL_Location_Code;

// Call program Sel Producer Loc      SR.
CALL PROGRAM(Sel Producer Loc      SR) ('PKKMSRR');
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);

ENDIF;

ENDIF;

//?USER: Validate fields

CASE;

// IF DTL.PD Producer Code is Entered
IF DTL.PD_Producer_Code <> *BLANK;

//?R7515 JJH 02/15/17 - Do NOT allow Producer with Source Type = Internal
EXECUTE FUNCTION(Rtv PrdcrName,Sts,Src RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1264668;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PD_Name);
PARAMETER(NLL.SR_Source_Code);
PARAMETER(NLL.RS_Record_Status);
PARAMETER(LCL.SR_Type);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 EXECUTE FUNCTION(Rtv Source Type       RT) TYPE(RTVOBJ) FILE(PKAAREP)           AB1141829;
 PARAMETER(DB1.SR_Source_Code);
 PARAMETER(PAR.SR_Type);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


CASE;

// IF LCL.SR Type is Internal
IF LCL.SR_Type = 'I';

// Send error message - 'Producer &1 is NOT allowed because Source Type is Internal.'
ERROR(PRK1417);
MSGPARM(DTL.PD_Producer_Code);

ENDIF;

CASE;

// IF DTL.PD Name is Blank
IF DTL.PD_Name = *BLANK;

// Send error message - 'Producer not found.'
ERROR(PRK0009);

ENDIF;

ENDIF;

CASE;

// IF DTL.PL Location Code is Entered
IF DTL.PL_Location_Code <> *BLANK;

EXECUTE FUNCTION(Rtv Pdctn Loc Name    RT) TYPE(RTVOBJ) FILE(PKAFREP)           AB1101543;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.PL_Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF DTL.PL Name is Blank
IF DTL.PL_Name = *BLANK;

// Send error message - 'Producer Location not found.'
ERROR(PRK0015);

ENDIF;

ENDIF;

//?USER: User defined action

//?04/13/17 JBB C9426 - Get Y/N flag Allow All Source Codes from the
//?Company Values file.  If flag is No, then call the external
//?functions that only process records for a specific Source Code.
//?If the Allow All Source Codes flag is Yes, then call the new
//?function that processes all Source Codes.  If it ever decided that
//?the restrictive functions are not needed, then those functions
//?will be obsolete and removed, as well as this check of the flag.
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER('HPEALLSRC');
PARAMETER(LCL.Allow_All_Source_Codes);

//?If Allow All Source Codes is Yes
CASE;

// IF LCL.Allow All Source Codes is Yes
IF LCL.Allow_All_Source_Codes = 'Y';

//?Process all records regardless of Source Code
// Call program Exc Crt BOL-All Source XF.
CALL PROGRAM(Exc Crt BOL-All Source XF) ('PWBLXFR');
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.DSH_Kill_Date);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.SR_Source_Code);

//?If Allow All Source Codes is Yes
// IF *OTHERWISE
IF *OTHERWISE;

//?Process only records for a specific Source Code
// Call program Exc Crt BOL for Dtls  XF.
CALL PROGRAM(Exc Crt BOL for Dtls  XF) ('PLBDXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.DSH_Kill_Date);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER('CPR');

// Call program Exc Crt BOL for Dtls  XF.
CALL PROGRAM(Exc Crt BOL for Dtls  XF) ('PLBDXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.DSH_Kill_Date);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER('ODB');

ENDIF;

