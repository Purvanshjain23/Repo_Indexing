     H/TITLE WW Whs Inv/Ord Comp   DF  Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Display file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 06/15/12  Time  : 10:21:53
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPOQUDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: WW Whs Inv/Ord Comp   DF  Display file
      *
     FPDKLREL2IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RSQ : Company Item Avail Group  Co/Group/Item
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FPDKKREL1IF  E           K        DISK
      * RTV : Availability Group        Retrieval index
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCAADREL8IF  E           K        DISK
      * RSQ : Warehouse                 Production Warehouse
      *
     FCAB0RELJIF  E           K        DISK
      * RTV : Item Balance              Acitve records only
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FPDL5CPL1IF  E           K        DISK
      * RTV : Item Lot Location         Retrieval index
      *
     FCAB0RELCIF  E           K        DISK
      * RSQ : Item Balance              Co/Whse/Item
      *
     FOPBGWKLFIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FOPBGWKM4IF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/SSD(D/Whs/Ord
      *
     FOPBGWKLUIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/SSD/Shp/Whs/Ord+
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FCAADREL9IF  E           K        DISK
      * RSQ : Warehouse                 ShipCo/Warehouse
      *
     FCABZREL7IF  E           K        DISK
      * RSQ : Company Item              RSQ by Item only      NV
      *
     FCAADRELBIF  E           K        DISK
      * RSQ : Warehouse                 AcctCo/Warehouse
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     E                    J3          3  1
     E                    K3          3  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    J7          7  1
     E                    K7          7  1
      * RIGHT JUSTIFY INPUT FIELD
      * Days in month for date validation
     E                    @XD    12  12  2 0
     E                    #L3         3  1
     E                    #L7         7  1
     E                    UCT        40  1               CENTER TABLE
      * Screen: Field position and name array
     E                    W0BEG   7 027  5 0A
     E                    W0END   7 027  5 0A
     E                    W0NAM   7 027 10
      * Long constants
     E                    @CN#    1  05  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@ADREYH
      * Warehouse                 Production Warehouse
      * Renamed input format fields
     I              ADAJCD                          WAAJCD
     I              ADF8NA                          WAF8NA
     I              ADACNA                          WAACNA
     I              ADADNA                          WAADNA
     I              ADAENA                          WAAENA
     I              ADAJNA                          WAAJNA
     I              ADBTTX                          WABTTX
     I              ADAOCD                          WAAOCD
     I              ADBGCD                          WABGCD
     I              ADVHST                          WAVHST
     I              ADMPNA                          WAMPNA
     I              ADWPST                          WAWPST
     I              ADXUST                          WAXUST
     I              ADT0ST                          WAT0ST
     I              ADT1ST                          WAT1ST
     I              ADDBNB                          WADBNB
     I              ADT2ST                          WAT2ST
     I              ADT3ST                          WAT3ST
     I              ADT4ST                          WAT4ST
     I              ADT6ST                          WAT6ST
     I              ADBWC3                          WABWC3
     I              ADBTC3                          WABTC3
     I              ADBUC3                          WABUC3
     I              ADBVC3                          WABVC3
     I              ADFCAA                          WAFCAA
     I              ADRQSX                          WARQSX
     I              ADRRSX                          WARRSX
     I              ADRSSX                          WARSSX
     I              ADRTSX                          WARTSX
     I              ADT7ST                          WAT7ST
     I              ADT8ST                          WAT8ST
     I              ADRNSX                          WARNSX
     I              ADROSX                          WAROSX
     I              ADRPSX                          WARPSX
     I              ADUVST                          WAUVST
     I              ADUWST                          WAUWST
     I              ADUXST                          WAUXST
     I              ADVSST                          WAVSST
     I              ADAATM                          WAAATM
     I              ADAYNA                          WAAYNA
     I              ADA0NA                          WAA0NA
     I              ADAXDT                          WAAXDT
      *
     I@B0REHD
      * Item Balance              Co/Whse/Item
      * Renamed input format fields
     I              B0AIC3                          WBAIC3
     I              B0HGCD                          WBHGCD
     I              B0AJCD                          WBAJCD
     I              B0AGCS                          WBAGCS
     I              B0AECS                          WBAECS
     I              B0BACS                          WBBACS
     I              B0BBCS                          WBBBCS
     I              B0CBPR                          WBCBPR
     I              B0GUDT                          WBGUDT
     I              B0XYST                          WBXYST
     I              B0CTPR                          WBCTPR
     I              B0G4DT                          WBG4DT
     I              B0BOWG                          WBBOWG
     I              B0DDQT                          WBDDQT
     I              B0DEQT                          WBDEQT
     I              B0DFQT                          WBDFQT
     I              B0HDQT                          WBHDQT
     I              B0HEQT                          WBHEQT
     I              B0AJQT                          WBAJQT
     I              B0AQQT                          WBAQQT
     I              B0AUQT                          WBAUQT
     I              B0EMQT                          WBEMQT
     I              B0DOQT                          WBDOQT
     I              B0ATNA                          WBATNA
     I              B0AKDT                          WBAKDT
     I              B0ANDT                          WBANDT
     I              B0IDVA                          WBIDVA
     I              B0JVST                          WBJVST
     I              B0BZPC                          WBBZPC
     I              B0DGQT                          WBDGQT
     I              B0DIDT                          WBDIDT
     I              B0ALCD                          WBALCD
     I              B0BFDY                          WBBFDY
     I              B0DJDT                          WBDJDT
     I              B0BGDY                          WBBGDY
     I              B0DKDT                          WBDKDT
     I              B0J2ST                          WBJ2ST
     I              B0DJQT                          WBDJQT
     I              B0BNWG                          WBBNWG
     I              B0DLDT                          WBDLDT
     I              B0DPQT                          WBDPQT
     I              B0DQQT                          WBDQQT
     I              B0DMDT                          WBDMDT
     I              B0M0ST                          WBM0ST
     I              B0J9ST                          WBJ9ST
     I              B0KBST                          WBKBST
     I              B0AKC8                          WBAKC8
     I              B0RINB                          WBRINB
     I              B0RHNB                          WBRHNB
     I              B0RGNB                          WBRGNB
     I              B0UVST                          WBUVST
     I              B0UWST                          WBUWST
     I              B0UXST                          WBUXST
     I              B0VSST                          WBVSST
     I              B0AATM                          WBAATM
     I              B0AYNA                          WBAYNA
     I              B0A0NA                          WBA0NA
     I              B0AXDT                          WBAXDT
      *
     I@BGWKN3
      * Order Detail              Co/Itm/SSD(D/Whs/Ord
      * Renamed input format fields
     I              OMAIC3                          WCAIC3
     I              OMC4NB                          WCC4NB
     I              OMDPNB                          WCDPNB
     I              OMUENB                          WCUENB
     I              OMHGCD                          WCHGCD
     I              OMAJCD                          WCAJCD
     I              OMBKC7                          WCBKC7
     I              OMCFC7                          WCCFC7
     I              OMGMST                          WCGMST
     I              OMGNST                          WCGNST
     I              OMMAVA                          WCMAVA
     I              OMKDVA                          WCKDVA
     I              OML8VA                          WCL8VA
     I              OML9VA                          WCL9VA
     I              OMGTST                          WCGTST
     I              OMGVST                          WCGVST
     I              OMGUST                          WCGUST
     I              OMQFST                          WCQFST
     I              OMAYVA                          WCAYVA
     I              OMEXDT                          WCEXDT
     I              OMLQCD                          WCLQCD
     I              OMRDCD                          WCRDCD
     I              OMQ7CD                          WCQ7CD
     I              OMBZPR                          WCBZPR
     I              OML6NB                          WCL6NB
     I              OMU1ST                          WCU1ST
     I              OMGIDT                          WCGIDT
     I              OMCRCD                          WCCRCD
     I              OMAGCD                          WCAGCD
     I              OMRZST                          WCRZST
     I              OMR0ST                          WCR0ST
     I              OMR1ST                          WCR1ST
     I              OMG7NA                          WCG7NA
     I              OMG8NA                          WCG8NA
     I              OMRPCD                          WCRPCD
     I              OMVEST                          WCVEST
     I              OMVGST                          WCVGST
     I              OMAVST                          WCAVST
     I              OMU0ST                          WCU0ST
     I              OMRFCD                          WCRFCD
     I              OMFZST                          WCFZST
     I              OMR1NB                          WCR1NB
     I              OMAVQT                          WCAVQT
     I              OMD0WG                          WCD0WG
     I              OMCCQT                          WCCCQT
     I              OMAUWG                          WCAUWG
     I              OMCBQT                          WCCBQT
     I              OMATWG                          WCATWG
     I              OMAQCS                          WCAQCS
     I              OMAGCS                          WCAGCS
     I              OMAKPR                          WCAKPR
     I              OMALPR                          WCALPR
     I              OMAUPR                          WCAUPR
     I              OMAVWG                          WCAVWG
     I              OMA4WG                          WCA4WG
     I              OMA5DT                          WCA5DT
     I              OMAODT                          WCAODT
     I              OMGNDT                          WCGNDT
     I              OMAMST                          WCAMST
     I              OMANST                          WCANST
     I              OMVAST                          WCVAST
     I              OMRGNB                          WCRGNB
     I              OMRHNB                          WCRHNB
     I              OMRINB                          WCRINB
     I              OMRBCD                          WCRBCD
     I              OMHICD                          WCHICD
     I              OMRNCD                          WCRNCD
     I              OMROCD                          WCROCD
     I              OMCXDT                          WCCXDT
     I              OMAJVN                          WCAJVN
     I              OMKXCD                          WCKXCD
     I              OMJPCD                          WCJPCD
     I              OMCQCD                          WCCQCD
     I              OMR4CD                          WCR4CD
     I              OMZ1ST                          WCZ1ST
     I              OMZ3ST                          WCZ3ST
     I              OMZ4ST                          WCZ4ST
     I              OMDUPR                          WCDUPR
     I              OMB6VL                          WCB6VL
     I              OMA1AA                          WCA1AA
     I              OMFZSX                          WCFZSX
     I              OMF0SX                          WCF0SX
     I              OMF1SX                          WCF1SX
     I              OMF2SX                          WCF2SX
     I              OMF3SX                          WCF3SX
     I              OMF4SX                          WCF4SX
     I              OMF5SX                          WCF5SX
     I              OMF6SX                          WCF6SX
     I              OMF7SX                          WCF7SX
     I              OMNTDT                          WCNTDT
     I              OMNUDT                          WCNUDT
     I              OMNVDT                          WCNVDT
     I              OMNWDT                          WCNWDT
     I              OMNXDT                          WCNXDT
     I              OMBUTM                          WCBUTM
     I              OMBVTM                          WCBVTM
     I              OMBWTM                          WCBWTM
     I              OMBXTM                          WCBXTM
     I              OMBYTM                          WCBYTM
     I              OMH5NX                          WCH5NX
     I              OMH6NX                          WCH6NX
     I              OMH7NX                          WCH7NX
     I              OMH8NX                          WCH8NX
     I              OMH9NX                          WCH9NX
     I              OMDVPR                          WCDVPR
     I              OMDWPR                          WCDWPR
     I              OMDXPR                          WCDXPR
     I              OMDYPR                          WCDYPR
     I              OMDZPR                          WCDZPR
     I              OMGSPR                          WCGSPR
     I              OMGTPR                          WCGTPR
     I              OMGUPR                          WCGUPR
     I              OMHOST                          WCHOST
     I              OMHPST                          WCHPST
     I              OMIOST                          WCIOST
     I              OMPEWG                          WCPEWG
     I              OMRINY                          WCRINY
     I              OMTIDT                          WCTIDT
     I              OMTJDT                          WCTJDT
     I              OMH2ST                          WCH2ST
     I              OMH0ST                          WCH0ST
     I              OMH1ST                          WCH1ST
     I              OMTKDT                          WCTKDT
     I              OMTLDT                          WCTLDT
     I              OMTMDT                          WCTMDT
     I              OMUVST                          WCUVST
     I              OMUWST                          WCUWST
     I              OMUXST                          WCUXST
     I              OMAATM                          WCAATM
     I              OMAYNA                          WCAYNA
     I              OMA0NA                          WCA0NA
     I              OMAXDT                          WCAXDT
      *
     I@BGWKW6
      * Order Detail              Co/Itm/SSD/Shp/Whs/Ord+
      * Renamed input format fields
     I              OMAIC3                          WDAIC3
     I              OMC4NB                          WDC4NB
     I              OMDPNB                          WDDPNB
     I              OMUENB                          WDUENB
     I              OMHGCD                          WDHGCD
     I              OMAJCD                          WDAJCD
     I              OMBKC7                          WDBKC7
     I              OMCFC7                          WDCFC7
     I              OMGMST                          WDGMST
     I              OMGNST                          WDGNST
     I              OMMAVA                          WDMAVA
     I              OMKDVA                          WDKDVA
     I              OML8VA                          WDL8VA
     I              OML9VA                          WDL9VA
     I              OMGTST                          WDGTST
     I              OMGVST                          WDGVST
     I              OMGUST                          WDGUST
     I              OMQFST                          WDQFST
     I              OMAYVA                          WDAYVA
     I              OMEXDT                          WDEXDT
     I              OMLQCD                          WDLQCD
     I              OMRDCD                          WDRDCD
     I              OMQ7CD                          WDQ7CD
     I              OMBZPR                          WDBZPR
     I              OML6NB                          WDL6NB
     I              OMU1ST                          WDU1ST
     I              OMGIDT                          WDGIDT
     I              OMCRCD                          WDCRCD
     I              OMAGCD                          WDAGCD
     I              OMRZST                          WDRZST
     I              OMR0ST                          WDR0ST
     I              OMR1ST                          WDR1ST
     I              OMG7NA                          WDG7NA
     I              OMG8NA                          WDG8NA
     I              OMRPCD                          WDRPCD
     I              OMVEST                          WDVEST
     I              OMVGST                          WDVGST
     I              OMAVST                          WDAVST
     I              OMU0ST                          WDU0ST
     I              OMRFCD                          WDRFCD
     I              OMFZST                          WDFZST
     I              OMR1NB                          WDR1NB
     I              OMAVQT                          WDAVQT
     I              OMD0WG                          WDD0WG
     I              OMCCQT                          WDCCQT
     I              OMAUWG                          WDAUWG
     I              OMCBQT                          WDCBQT
     I              OMATWG                          WDATWG
     I              OMAQCS                          WDAQCS
     I              OMAGCS                          WDAGCS
     I              OMAKPR                          WDAKPR
     I              OMALPR                          WDALPR
     I              OMAUPR                          WDAUPR
     I              OMAVWG                          WDAVWG
     I              OMA4WG                          WDA4WG
     I              OMA5DT                          WDA5DT
     I              OMAODT                          WDAODT
     I              OMGNDT                          WDGNDT
     I              OMAMST                          WDAMST
     I              OMANST                          WDANST
     I              OMVAST                          WDVAST
     I              OMRGNB                          WDRGNB
     I              OMRHNB                          WDRHNB
     I              OMRINB                          WDRINB
     I              OMRBCD                          WDRBCD
     I              OMHICD                          WDHICD
     I              OMRNCD                          WDRNCD
     I              OMROCD                          WDROCD
     I              OMCXDT                          WDCXDT
     I              OMAJVN                          WDAJVN
     I              OMKXCD                          WDKXCD
     I              OMJPCD                          WDJPCD
     I              OMCQCD                          WDCQCD
     I              OMR4CD                          WDR4CD
     I              OMZ1ST                          WDZ1ST
     I              OMZ3ST                          WDZ3ST
     I              OMZ4ST                          WDZ4ST
     I              OMDUPR                          WDDUPR
     I              OMB6VL                          WDB6VL
     I              OMA1AA                          WDA1AA
     I              OMFZSX                          WDFZSX
     I              OMF0SX                          WDF0SX
     I              OMF1SX                          WDF1SX
     I              OMF2SX                          WDF2SX
     I              OMF3SX                          WDF3SX
     I              OMF4SX                          WDF4SX
     I              OMF5SX                          WDF5SX
     I              OMF6SX                          WDF6SX
     I              OMF7SX                          WDF7SX
     I              OMNTDT                          WDNTDT
     I              OMNUDT                          WDNUDT
     I              OMNVDT                          WDNVDT
     I              OMNWDT                          WDNWDT
     I              OMNXDT                          WDNXDT
     I              OMBUTM                          WDBUTM
     I              OMBVTM                          WDBVTM
     I              OMBWTM                          WDBWTM
     I              OMBXTM                          WDBXTM
     I              OMBYTM                          WDBYTM
     I              OMH5NX                          WDH5NX
     I              OMH6NX                          WDH6NX
     I              OMH7NX                          WDH7NX
     I              OMH8NX                          WDH8NX
     I              OMH9NX                          WDH9NX
     I              OMDVPR                          WDDVPR
     I              OMDWPR                          WDDWPR
     I              OMDXPR                          WDDXPR
     I              OMDYPR                          WDDYPR
     I              OMDZPR                          WDDZPR
     I              OMGSPR                          WDGSPR
     I              OMGTPR                          WDGTPR
     I              OMGUPR                          WDGUPR
     I              OMHOST                          WDHOST
     I              OMHPST                          WDHPST
     I              OMIOST                          WDIOST
     I              OMPEWG                          WDPEWG
     I              OMRINY                          WDRINY
     I              OMTIDT                          WDTIDT
     I              OMTJDT                          WDTJDT
     I              OMH2ST                          WDH2ST
     I              OMH0ST                          WDH0ST
     I              OMH1ST                          WDH1ST
     I              OMTKDT                          WDTKDT
     I              OMTLDT                          WDTLDT
     I              OMTMDT                          WDTMDT
     I              OMUVST                          WDUVST
     I              OMUWST                          WDUWST
     I              OMUXST                          WDUXST
     I              OMAATM                          WDAATM
     I              OMAYNA                          WDAYNA
     I              OMA0NA                          WDA0NA
     I              OMAXDT                          WDAXDT
      *
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WEAJCD
     I              ADF8NA                          WEF8NA
     I              ADACNA                          WEACNA
     I              ADADNA                          WEADNA
     I              ADAENA                          WEAENA
     I              ADAJNA                          WEAJNA
     I              ADBTTX                          WEBTTX
     I              ADAOCD                          WEAOCD
     I              ADBGCD                          WEBGCD
     I              ADVHST                          WEVHST
     I              ADMPNA                          WEMPNA
     I              ADWPST                          WEWPST
     I              ADXUST                          WEXUST
     I              ADT0ST                          WET0ST
     I              ADT1ST                          WET1ST
     I              ADDBNB                          WEDBNB
     I              ADT2ST                          WET2ST
     I              ADT3ST                          WET3ST
     I              ADT4ST                          WET4ST
     I              ADT6ST                          WET6ST
     I              ADBWC3                          WEBWC3
     I              ADBTC3                          WEBTC3
     I              ADBUC3                          WEBUC3
     I              ADBVC3                          WEBVC3
     I              ADFCAA                          WEFCAA
     I              ADRQSX                          WERQSX
     I              ADRRSX                          WERRSX
     I              ADRSSX                          WERSSX
     I              ADRTSX                          WERTSX
     I              ADT7ST                          WET7ST
     I              ADT8ST                          WET8ST
     I              ADRNSX                          WERNSX
     I              ADROSX                          WEROSX
     I              ADRPSX                          WERPSX
     I              ADUVST                          WEUVST
     I              ADUWST                          WEUWST
     I              ADUXST                          WEUXST
     I              ADVSST                          WEVSST
     I              ADAATM                          WEAATM
     I              ADAYNA                          WEAYNA
     I              ADA0NA                          WEA0NA
     I              ADAXDT                          WEAXDT
      *
     I@ADREWA
      * Warehouse                 ShipCo/Warehouse
      * Renamed input format fields
     I              ADAJCD                          WFAJCD
     I              ADF8NA                          WFF8NA
     I              ADACNA                          WFACNA
     I              ADADNA                          WFADNA
     I              ADAENA                          WFAENA
     I              ADAJNA                          WFAJNA
     I              ADBTTX                          WFBTTX
     I              ADAOCD                          WFAOCD
     I              ADBGCD                          WFBGCD
     I              ADVHST                          WFVHST
     I              ADMPNA                          WFMPNA
     I              ADWPST                          WFWPST
     I              ADXUST                          WFXUST
     I              ADT0ST                          WFT0ST
     I              ADT1ST                          WFT1ST
     I              ADDBNB                          WFDBNB
     I              ADT2ST                          WFT2ST
     I              ADT3ST                          WFT3ST
     I              ADT4ST                          WFT4ST
     I              ADT6ST                          WFT6ST
     I              ADBWC3                          WFBWC3
     I              ADBTC3                          WFBTC3
     I              ADBUC3                          WFBUC3
     I              ADBVC3                          WFBVC3
     I              ADFCAA                          WFFCAA
     I              ADRQSX                          WFRQSX
     I              ADRRSX                          WFRRSX
     I              ADRSSX                          WFRSSX
     I              ADRTSX                          WFRTSX
     I              ADT7ST                          WFT7ST
     I              ADT8ST                          WFT8ST
     I              ADRNSX                          WFRNSX
     I              ADROSX                          WFROSX
     I              ADRPSX                          WFRPSX
     I              ADUVST                          WFUVST
     I              ADUWST                          WFUWST
     I              ADUXST                          WFUXST
     I              ADVSST                          WFVSST
     I              ADAATM                          WFAATM
     I              ADAYNA                          WFAYNA
     I              ADA0NA                          WFA0NA
     I              ADAXDT                          WFAXDT
      *
     I@BZRED0
      * Company Item              RSQ by Item only      NV
      * Renamed input format fields
     I              BZAIC3                          WGAIC3
     I              BZHGCD                          WGHGCD
     I              BZAVNA                          WGAVNA
     I              BZAWNA                          WGAWNA
     I              BZL7NA                          WGL7NA
     I              BZL8NA                          WGL8NA
     I              BZL6NA                          WGL6NA
     I              BZMFNA                          WGMFNA
     I              BZADCD                          WGADCD
     I              BZAWPC                          WGAWPC
     I              BZLXST                          WGLXST
     I              BZAECD                          WGAECD
     I              BZAXPC                          WGAXPC
     I              BZLYST                          WGLYST
     I              BZAFCD                          WGAFCD
     I              BZAICD                          WGAICD
     I              BZAIWG                          WGAIWG
     I              BZHICD                          WGHICD
     I              BZRBCD                          WGRBCD
     I              BZFZST                          WGFZST
     I              BZAVST                          WGAVST
     I              BZCZWG                          WGCZWG
     I              BZC0WG                          WGC0WG
     I              BZURTN                          WGURTN
     I              BZAJC8                          WGAJC8
     I              BZRINB                          WGRINB
     I              BZRHNB                          WGRHNB
     I              BZRGNB                          WGRGNB
     I              BZLNCD                          WGLNCD
     I              BZTFNB                          WGTFNB
     I              BZN0CD                          WGN0CD
     I              BZX4ST                          WGX4ST
     I              BZTMVA                          WGTMVA
     I              BZTNVA                          WGTNVA
     I              BZBLPR                          WGBLPR
     I              BZBMPR                          WGBMPR
     I              BZLRCD                          WGLRCD
     I              BZU9ST                          WGU9ST
     I              BZCMCO                          WGCMCO
     I              BZQ1CD                          WGQ1CD
     I              BZQ8CD                          WGQ8CD
     I              BZCHTM                          WGCHTM
     I              BZQZCD                          WGQZCD
     I              BZXWST                          WGXWST
     I              BZXXST                          WGXXST
     I              BZVMST                          WGVMST
     I              BZSWGH                          WGSWGH
     I              BZPPHE                          WGPPHE
     I              BZR3CD                          WGR3CD
     I              BZSDCD                          WGSDCD
     I              BZICN1                          WGICN1
     I              BZSVCD                          WGSVCD
     I              BZICN2                          WGICN2
     I              BZSWCD                          WGSWCD
     I              BZV2NB                          WGV2NB
     I              BZSXCD                          WGSXCD
     I              BZITCN                          WGITCN
     I              BZSYCD                          WGSYCD
     I              BZITC5                          WGITC5
     I              BZSZCD                          WGSZCD
     I              BZICN6                          WGICN6
     I              BZS0CD                          WGS0CD
     I              BZICN7                          WGICN7
     I              BZS1CD                          WGS1CD
     I              BZICN8                          WGICN8
     I              BZS2CD                          WGS2CD
     I              BZICN9                          WGICN9
     I              BZS3CD                          WGS3CD
     I              BZICN0                          WGICN0
     I              BZS4CD                          WGS4CD
     I              BZSFNB                          WGSFNB
     I              BZA3WG                          WGA3WG
     I              BZSJNB                          WGSJNB
     I              BZLLCD                          WGLLCD
     I              BZLMCD                          WGLMCD
     I              BZP3ST                          WGP3ST
     I              BZSKNB                          WGSKNB
     I              BZSLNB                          WGSLNB
     I              BZSMNB                          WGSMNB
     I              BZP4ST                          WGP4ST
     I              BZCFNB                          WGCFNB
     I              BZCGNB                          WGCGNB
     I              BZILNB                          WGILNB
     I              BZCHNB                          WGCHNB
     I              BZCINB                          WGCINB
     I              BZCJNB                          WGCJNB
     I              BZCMNB                          WGCMNB
     I              BZCNNB                          WGCNNB
     I              BZCRNB                          WGCRNB
     I              BZCSNB                          WGCSNB
     I              BZCVNB                          WGCVNB
     I              BZCWNB                          WGCWNB
     I              BZCXNB                          WGCXNB
     I              BZCZNB                          WGCZNB
     I              BZC0NB                          WGC0NB
     I              BZN1CD                          WGN1CD
     I              BZB4NB                          WGB4NB
     I              BZB5NB                          WGB5NB
     I              BZX5ST                          WGX5ST
     I              BZX6ST                          WGX6ST
     I              BZX7ST                          WGX7ST
     I              BZPCCT                          WGPCCT
     I              BZBDNB                          WGBDNB
     I              BZBJNB                          WGBJNB
     I              BZSUST                          WGSUST
     I              BZSVST                          WGSVST
     I              BZSYST                          WGSYST
     I              BZSZST                          WGSZST
     I              BZS1ST                          WGS1ST
     I              BZXRCD                          WGXRCD
     I              BZXTCD                          WGXTCD
     I              BZXUCD                          WGXUCD
     I              BZF5WG                          WGF5WG
     I              BZF6WG                          WGF6WG
     I              BZF7WG                          WGF7WG
     I              BZBLNB                          WGBLNB
     I              BZBNNB                          WGBNNB
     I              BZS2ST                          WGS2ST
     I              BZS4ST                          WGS4ST
     I              BZS5ST                          WGS5ST
     I              BZS6ST                          WGS6ST
     I              BZS8ST                          WGS8ST
     I              BZS9ST                          WGS9ST
     I              BZTCST                          WGTCST
     I              BZTDST                          WGTDST
     I              BZUVST                          WGUVST
     I              BZUWST                          WGUWST
     I              BZUXST                          WGUXST
     I              BZVSST                          WGVSST
     I              BZAATM                          WGAATM
     I              BZAYNA                          WGAYNA
     I              BZA0NA                          WGA0NA
     I              BZAXDT                          WGAXDT
      *
     I@ADREHQ
      * Warehouse                 AcctCo/Warehouse
      * Renamed input format fields
     I              ADAJCD                          WHAJCD
     I              ADF8NA                          WHF8NA
     I              ADACNA                          WHACNA
     I              ADADNA                          WHADNA
     I              ADAENA                          WHAENA
     I              ADAJNA                          WHAJNA
     I              ADBTTX                          WHBTTX
     I              ADAOCD                          WHAOCD
     I              ADBGCD                          WHBGCD
     I              ADVHST                          WHVHST
     I              ADMPNA                          WHMPNA
     I              ADWPST                          WHWPST
     I              ADXUST                          WHXUST
     I              ADT0ST                          WHT0ST
     I              ADT1ST                          WHT1ST
     I              ADDBNB                          WHDBNB
     I              ADT2ST                          WHT2ST
     I              ADT3ST                          WHT3ST
     I              ADT4ST                          WHT4ST
     I              ADT6ST                          WHT6ST
     I              ADBWC3                          WHBWC3
     I              ADBTC3                          WHBTC3
     I              ADBUC3                          WHBUC3
     I              ADBVC3                          WHBVC3
     I              ADFCAA                          WHFCAA
     I              ADRQSX                          WHRQSX
     I              ADRRSX                          WHRRSX
     I              ADRSSX                          WHRSSX
     I              ADRTSX                          WHRTSX
     I              ADT7ST                          WHT7ST
     I              ADT8ST                          WHT8ST
     I              ADRNSX                          WHRNSX
     I              ADROSX                          WHROSX
     I              ADRPSX                          WHRPSX
     I              ADUVST                          WHUVST
     I              ADUWST                          WHUWST
     I              ADUXST                          WHUXST
     I              ADVSST                          WHVSST
     I              ADAATM                          WHAATM
     I              ADAYNA                          WHAYNA
     I              ADA0NA                          WHA0NA
     I              ADAXDT                          WHAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      * Outward parameters
     IPARC        DS                             18
      * KEY : PS Production Adjustment  Retrieval index
      * I : MAP Company Number
     I                                    P   1   20PAAIC3
      * I : MAP Production Date
     I                                    P   3   60PAELDT
      * I : MAP Item Code
     I                                    P   7  100PAHGCD
      * I : MAP Warehouse Code
     I                                       11  13 PAAJCD
      * I : MAP PS Adjustment Type
     I                                       14  15 PAPSAD
      * I : MAP PS Adjustment Number
     I                                    P  16  180PAPSAN
      *
      * Outward parameters
     IPBRC        DS                             16
      * KEY : PS Production Detail Com  Co/Itm/Whs/Dte/Typ/Seq
      * I : RST Company Number
     I                                    P   1   20PBAIC3
      * I : RST Item Code
     I                                    P   3   60PBHGCD
      * I : RST Warehouse Code
     I                                        7   9 PBAJCD
      * I : MAP Production Date
     I                                    P  10  130PBELDT
      *
      * Outward parameters
     IPCRC        DS                             13
      * KEY : Order Detail Schedule     Co/Item/Whse/SchdDte
      * I : RST Company Number
     I                                    P   1   20PCAIC3
      * I : RST Item Code
     I                                    P   3   60PCHGCD
      * I : RST Warehouse Code
     I                                        7   9 PCAJCD
      *
      * Outward parameters
     IPDRC        DS                             27
      * KEY : Order Detail              CItm/PrWhs/SSD/Itm/DD+
      * I : RST Consumed Item Code
     I                                    P   1   40PDNUDT
      * I : RST Production Warehouse
     I                                        5   7 PDF6SX
      *
      * Outward parameters
     IPERC        DS                              6
      * KEY : Company Item              Retrieval index       NV
      * I : RST Company Number
     I                                    P   1   20PEAIC3
      * I : RST Item Code
     I                                    P   3   60PEHGCD
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Company Item Avail Group
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Warehouse Code
     I                                        1   3 P2AJCD
      * N :  Company Number
     I                                    P   4   50P2AIC3
      * N :  Application Code
     I                                        6  11 P2DNCD
      * N :  Enterprise Code 1
     I                                       12  15 P2DQCD
      * N :  Enterprise Code 2
     I                                       16  27 P2DRCD
      * N :  Salesperson Code
     I                                       28  30 P2BCCD
      * N :  System Date Format
     I                                       31  33 P2B8NA
      * N :  User Profile Name
     I                                       34  43 P2AJVN
      * N :  Allow Multi-Company
     I                                       44  44 P2I6ST
      * N :  Default Printer
     I                                       45  54 P2MPNA
      * N :  First Time Flag
     I                                       55  55 P2TAST
      * N :  Name
     I                                       56  85 P2ADTX
      * N :  System Value Alpha
     I                                       86 125 P2BXTX
      * N :  Access Denied (Y/N)
     I                                      126 126 P2WVST
     IP3PARM      DS
      * FLD: *Arrays
      * N :  PRT Printer Device
     I                                        1  10 P3WRST
      * N :  PRT Hold Output Sts
     I                                       11  14 P3WSST
      * N :  PRT Save Output Sts
     I                                       15  18 P3WTST
      * N :  PRT Number of Copies
     I                                       19  200P3DYNB
      * N :  PRT Night Queue Run Sts
     I                                       21  21 P3WUST
      * N :  PRT Night Queue
     I                                       22  31 P3BVVN
      * N :  Program name USR
     I                                       32  41 P3BMVN
      * N :  Program Name$ USR
     I                                       42  51 P3BWVN
      * N :  Display Prt Opt Pmt USR
     I                                       52  55 P3XFST
     IP4PARM      DS
      * FLD: *Arrays
      * N :  Display Flag
     I                                        1   1 P4QKST
      * N :  Record Found USR
     I                                        2   2 P4WXST
      * N :  Status - Y or N
     I                                        3   3 P4B8ST
      * N :  Report Type Schedule  USR
     I                                        4   4 P4RYST
      * N :  Print On Schedule
     I                                        5   5 P4SVST
      * N :  Sel Value 1 USR
     I                                        6   6 P4EXSX
      * N :  Sel Value 2 USR
     I                                        7   7 P4E0SX
      * N :  Sel Value 3 USR
     I                                        8   8 P4E1SX
      * N :  Sel Value 4 USR
     I                                        9   9 P4LGSX
      * N :  Sel Value 5 USR
     I                                       10  10 P4LHSX
      * N :  Status Flag 1  Y/N
     I                                       11  11 P4Q1ST
      * N :  Ord/Sch Sts USR
     I                                       12  12 P4E2ST
      * N :  Base Item Code
     I                                    P  13  160P4DOC7
     IP5PARM      DS
      * FLD: PS Production Adjustment
      * N :  Production Date
     I                                    P   1   40P5ELDT
      * N :  PS Adjustment Quantity
     I                                    P   5   70P5PIAD
     IP6PARM      DS
      * N :  USR Item Code
     I                                    P   1   40P6DKCD
     IP7PARM      DS
      * N :  Count 2 USR
     I                                    P   1   30P7A7NX
     IP8PARM      DS
      * N :  Prod Date Alpha USR
     I                                        1   7 P8TOTX
     IP9PARM      DS
      * N :  Email Selection usr
     I                                        1   1 P9VQSX
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'CD3 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'Company Number Req'
      * Company Number
     I                                        1   3 ZA0001
      * Message data for 'Warehouse Invalid for Co'
      * Warehouse Code
     I                                        1   3 ZA0002
      * Company Number
     I                                        4   6 ZA0003
      * Message data for 'Warehouse not found'
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0004
      * Application Code
     I                                       11  16 ZA0005
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0006
      * Application Code
     I                                       11  16 ZA0007
      * Message data for 'RTV WW Whs Inv/Ord Comp1'
      * Message data for 'RTV WW Whs Inv/Ord Comp2'
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * First Time Processing
      * CASE: WRK.First Time Flag is Yes
     C           WUTAST    IFEQ 'Y'                        *IF
     C                     Z-ADDP2AIC3    #2AIC3           Company Number
     C                     MOVELP2AJCD    #CAJCD           Warehouse Code
     C                     MOVEL'ALL'     #2V4CD           Availability Gr
     C                     MOVEL'Y'       #CSVST           Print On Schedu
     C                     MOVEL#CSVST    P4SVST           Print On Schedu
     C                     MOVEL'A'       #CP2ST           Active Status F
     C                     MOVEL'N'       WUTAST           First Time Flag
     C                     END                             *FI
      * INIT:  Date
      * CASE: CTL.Date To               USR is Zeros
     C           #CJFDT    IFEQ *ZERO                      *IF
     C                     Z-ADD##JDT     #CFFDT           USR Day 1
      * Rtv Kill/Prod Day Sts RT - Calendar  * Day 1
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CFFDT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLNSX    P      Production Day
      * CTL.USR Day 2 = CTL.USR Day 1 + CON.1 *DAYS
     C           #CFFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE1DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE1DT
     C                     END
      * Rtv Kill/Prod Day Sts RT - Calendar  * Day 2
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE1DT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLOSX    P      Production Day
      * CTL.USR Day 3 = CTL.USR Day 2 + CON.1 *DAYS
     C           #CE1DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE2DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE2DT
     C                     END
      * Rtv Kill/Prod Day Sts RT - Calendar  * Day 3
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE2DT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLPSX    P      Production Day
      * CTL.USR Day 4 = CTL.USR Day 3 + CON.1 *DAYS
     C           #CE2DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE3DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE3DT
     C                     END
      * Rtv Kill/Prod Day Sts RT - Calendar  * Day 4
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE3DT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLQSX    P      Production Day
      * CTL.USR Day 5 = CTL.USR Day 4 + CON.1 *DAYS
     C           #CE3DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE4DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE4DT
     C                     END
      * Rtv Kill/Prod Day Sts RT - Calendar  * Day 5
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE4DT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLRSX    P      Production Day
     C                     Z-ADD#CE4DT    #CJFDT           Date To
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD#CJFDT    #CE4DT           USR Day 5
      * Rtv Kill/Prod Day Sts RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE4DT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLRSX    P      Production Day
      * USR Day 4
      * CASE: CTL.USR Day 5 GT JOB.*Job date
     C           #CE4DT    IFGT ##JDT                      *IF
      * CTL.USR Day 4 = CTL.USR Day 5 + CON.-1 *DAYS
     C           #CE4DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE3DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE3DT
     C                     END
      * Rtv Kill/Prod Day Sts RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE3DT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLQSX    P      Production Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #CE3DT           USR Day 4
     C                     Z-ADD*ZERO     #CE2DT           USR Day 3
     C                     Z-ADD*ZERO     #CE1DT           USR Day 2
     C                     Z-ADD*ZERO     #CFFDT           USR Day 1
     C                     MOVEL*BLANK    #CLQSX           Production Day
     C                     MOVEL*BLANK    #CLPSX           Production Day
     C                     MOVEL*BLANK    #CLOSX           Production Day
     C                     MOVEL*BLANK    #CLNSX           Production Day
     C                     END                             *FI
      * USR Day 3
      * CASE: CTL.USR Day 4 GT JOB.*Job date
     C           #CE3DT    IFGT ##JDT                      *IF
      * CTL.USR Day 3 = CTL.USR Day 4 + CON.-1 *DAYS
     C           #CE3DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE2DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE2DT
     C                     END
      * Rtv Kill/Prod Day Sts RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE2DT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLPSX    P      Production Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #CE2DT           USR Day 3
     C                     Z-ADD*ZERO     #CE1DT           USR Day 2
     C                     Z-ADD*ZERO     #CFFDT           USR Day 1
     C                     MOVEL*BLANK    #CLPSX           Production Day
     C                     MOVEL*BLANK    #CLOSX           Production Day
     C                     MOVEL*BLANK    #CLNSX           Production Day
     C                     END                             *FI
      * USR Day 2
      * CASE: CTL.USR Day 3 GT JOB.*Job date
     C           #CE2DT    IFGT ##JDT                      *IF
      * CTL.USR Day 2 = CTL.USR Day 3 + CON.-1 *DAYS
     C           #CE2DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE1DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE1DT
     C                     END
      * Rtv Kill/Prod Day Sts RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE1DT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLOSX    P      Production Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #CE1DT           USR Day 2
     C                     Z-ADD*ZERO     #CFFDT           USR Day 1
     C                     MOVEL*BLANK    #CLOSX           Production Day
     C                     MOVEL*BLANK    #CLNSX           Production Day
     C                     END                             *FI
      * USR Day 1
      * CASE: CTL.USR Day 2 GT JOB.*Job date
     C           #CE1DT    IFGT ##JDT                      *IF
      * CTL.USR Day 1 = CTL.USR Day 2 + CON.-1 *DAYS
     C           #CE1DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CFFDT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CFFDT
     C                     END
      * Rtv Kill/Prod Day Sts RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CFFDT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLNSX    P      Production Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #CFFDT           USR Day 1
     C                     MOVEL*BLANK    #CLNSX           Production Day
     C                     END                             *FI
     C                     END                             *FI
      * INIT:  Availability Group
      * CASE: CTL.Availability Group Code is Blank
     C           #2V4CD    IFEQ *BLANK                     *IF
     C                     MOVEL'ALL'     #2V4CD           Availability Gr
     C                     END                             *FI
      * Descriptions:
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SBRVGN
      * RTV Group Description  RT - Availability Group  * 
     C                     EXSR SCRVGN
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
     C                     EXSR SDRVGN
      * All/Active Items
      * CASE: CTL.Active Status Flag is Active
     C           #CP2ST    IFEQ 'A'                        *IF
      * CTL.Condition Name 10 USR = Condition name of CTL.Active Status F
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1216184   Y2LSNO  70       List number
     C                     PARM #CP2ST    W0INVL 25        Active Status F
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #CIXTX    PARM           W0CNNM 25        Condition Name
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #CIXTX           Condition Name
     C                     END                             *FI
      * *Set Cursor: CTL.Item Code  (*Override=*YES)
     C                     Z-ADD*ZERO     W0RR0
     C                     Z-ADD012       W0ROW0
     C                     Z-ADD005       W0COL0
     C                     MOVEL'1'       W0OVR0           *YES
      * Val Production Whs     RT - Warehouse  * 
     C                     EXSR SERVGN
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           KLAIC3           Company Number
     C                     KFLD           KLV4CD           Availability Gr
     C                     KFLD           KLIDSQ           Item Display Se
     C                     KFLD           KLHGCD           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    KLAIC3
     C                     MOVEL#2V4CD    KLV4CD
     C                     Z-ADD#2IDSQ    KLIDSQ
     C                     Z-ADD#2HGCD    KLHGCD
     C           KPOS      SETLL@KLREHI
     C                     READ @KLREHI                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2IDSQ    WZIDSQ
     C                     MOVEL#2IDSQ    WZIDSQ           Item Display Se
     C           *LIKE     DEFN #2AIC3    WZAIC3
     C                     MOVEL#2AIC3    WZAIC3           Company Number
     C           *LIKE     DEFN #2V4CD    WZV4CD
     C                     MOVEL#2V4CD    WZV4CD           Availability Gr
     C           *LIKE     DEFN #2HGCD    WZHGCD
     C                     MOVEL#2HGCD    WZHGCD           Item Code
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@KLREHI                  90*
     C  N82                READ @KLREHI                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,38
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2V4CD    OREQ *BLANK                     Availability Gr
     C           #2IDSQ    IFNE *ZERO                      Item Display Se
     C           KLIDSQ    CABNE#2IDSQ    BB020            Item Display Se
     C                     END
     C                     END
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2V4CD    IFNE *BLANK                     Availability Gr
     C           KLV4CD    CABNE#2V4CD    BB020            Availability Gr
     C                     END
     C                     END
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2V4CD    OREQ *BLANK                     Availability Gr
     C           #2IDSQ    OREQ *ZERO                      Item Display Se
     C           #2HGCD    IFNE *ZERO                      Item Code
     C           KLHGCD    CABLT#2HGCD    BB020            Item Code
     C                     END
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * ** Change all retrieves to use the same context. Use CTL since
      * ** this is the context being tested.          03/03/06 LJB
      * RST:  Company Number
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Company Number is not equal to zero
      *   |- c2    : CTL.Company Number NE DB1.Company Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #2AIC3    IFNE *ZERO                      *IF
     C           #2AIC3    IFNE KLAIC3                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * RST:  Availability Group
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Availability Group Code is NE Blank
      *   |- c2    : CTL.Availability Group Code NE DB1.Availability Grou
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #2V4CD    IFNE *BLANK                     *IF
     C           #2V4CD    IFNE KLV4CD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * RST:  Warehouse code if entered
      * CASE: CTL.Warehouse Code is Warehouse Code not Blank
     C           #CAJCD    IFNE *BLANK                     *IF
      * Val Item Bal Exist    RT - Item Balance  * 
     C                     EXSR SFRVGN
      * CASE: PAR.Record Found USR is Record Not Found
     C           P4WXST    IFEQ 'N'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Prd Sch Info   PS RT - Company Item  * 
     C                     EXSR SGRVGN
      * Rtv First Consumed Itm XF - Item Bill Of Material  * 
     C                     CALL 'POP1XFR'              90  Rtv First Consu
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0001  30       Company Number
     C                     PARM #1HGCD    WQ0002  70       Item Code
     C           #RDOC7    PARM *ZERO     WQ0003  70       Component Item
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POP1XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * Sel:  Print on Schedule
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Print On Schedule is Y/N Values
      *   |- c2    : CTL.Print On Schedule NE RCD.Print On Schedule
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CSVST    IFEQ 'N'                        *IF
     C           #CSVST    OREQ 'Y'
     C           #CSVST    IFNE #RSVST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * Sel:  Base Item Code
      * CASE: CTL.Base Item Code is Entered
     C           #CDOC7    IFNE *ZERO                      *IF
      * CASE: CTL.Base Item Code NE RCD.Base Item Code
     C           #CDOC7    IFNE #RDOC7                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * RTV:  On-Hand Quantity
      * CASE: CTL.Lot Tracking Flag is yes
     C           #CVHST    IFEQ 'Y'                        *IF
      * CASE: CTL.Warehouse Code is Not Blanks
     C           #CAJCD    IFNE *BLANK                     *IF
      * Rtv Item Loc Qty Tot  RT - Item Lot Location  * 
     C                     EXSR SHRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * new 6/14/12
      * Rtv Item Loc Qty-AlWh RT - Item Lot Location  * 
     C                     EXSR SIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CTL.Warehouse Code is Not Blanks
     C           #CAJCD    IFNE *BLANK                     *IF
      * RTV On Hand Qty f/Whse RT - Item Balance  * 
     C                     EXSR SJRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * new 6/14/12
      * RTV On Hand Qty A/Whse RT - Item Balance  * 
     C                     EXSR SKRVGN
     C                     END                             *FI
     C                     END                             *FI
      * If inventory qty is less than zero then make zero
      * CASE: RCD.Qty On-Hand USR is LT Zero
     C           #RLEQT    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     #RLEQT           Qty On-Hand USR
     C                     END                             *FI
      * FP1054 4/15/09 status flag 10 = Y, then accum sched qty, else acc
     C                     MOVEL'N'       YL0002           Status Flag 10
     C                     MOVEL'O'       P4E2ST           Ord/Sch Sts USR
      * ** Change LF used by RTV to exclude Not Prod planned orders  FP10
      * Warehouse is selected
      * CASE: CTL.Warehouse Code is Not Blanks
     C           #CAJCD    IFNE *BLANK                     *IF
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     MOVEL#CAJCD    WL0007    P      Warehouse Code
     C                     Z-ADD#CFFDT    WL0008           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0009           Weight Schedule
     C                     Z-ADD#RLKQT    WL0010           Quantity Schedu
     C                     MOVELYL0002    WL0011    P      Status Flag 10
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    WUEEWG           Weight Schedule
     C                     Z-ADDWL0010    #RLKQT           Quantity Schedu
      * USR Day 1
      * CASE: CTL.USR Day 1 is GT Zero
     C           #CFFDT    IFGT *ZERO                      *IF
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     MOVEL#CAJCD    WL0007    P      Warehouse Code
     C                     Z-ADD#CFFDT    WL0008           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0009           Weight Schedule
     C                     Z-ADD#RLKQT    WL0010           Quantity Schedu
     C                     MOVELYL0002    WL0011    P      Status Flag 10
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    WUEEWG           Weight Schedule
     C                     Z-ADDWL0010    #RLKQT           Quantity Schedu
     C                     END                             *FI
      * USR Day 2
      * CASE: CTL.USR Day 2 is GT Zero
     C           #CE1DT    IFGT *ZERO                      *IF
      * CASE: CTL.USR Day 2 EQ JOB.*Job date
     C           #CE1DT    IFEQ ##JDT                      *IF
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     MOVEL#CAJCD    WL0007    P      Warehouse Code
     C                     Z-ADD#CE1DT    WL0008           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0009           Weight Schedule
     C                     Z-ADD#RLLQT    WL0010           Quantity Schedu
     C                     MOVELYL0002    WL0011    P      Status Flag 10
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    WUEEWG           Weight Schedule
     C                     Z-ADDWL0010    #RLLQT           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0016           Company Number
     C                     Z-ADD#1HGCD    WL0017           Item Code
     C                     MOVEL#CAJCD    WL0018    P      Warehouse Code
     C                     Z-ADD#CE1DT    WL0019           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0020           Weight Schedule
     C                     Z-ADD#RLLQT    WL0021           Quantity Schedu
     C                     MOVELP4E2ST    WL0022    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    WUEEWG           Weight Schedule
     C                     Z-ADDWL0021    #RLLQT           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
      * USR Day 3
      * CASE: CTL.USR Day 3 is GT Zero
     C           #CE2DT    IFGT *ZERO                      *IF
      * CASE: CTL.USR Day 3 EQ JOB.*Job date
     C           #CE2DT    IFEQ ##JDT                      *IF
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     MOVEL#CAJCD    WL0007    P      Warehouse Code
     C                     Z-ADD#CE2DT    WL0008           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0009           Weight Schedule
     C                     Z-ADD#RLVQT    WL0010           Quantity Schedu
     C                     MOVELYL0002    WL0011    P      Status Flag 10
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    WUEEWG           Weight Schedule
     C                     Z-ADDWL0010    #RLVQT           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0016           Company Number
     C                     Z-ADD#1HGCD    WL0017           Item Code
     C                     MOVEL#CAJCD    WL0018    P      Warehouse Code
     C                     Z-ADD#CE2DT    WL0019           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0020           Weight Schedule
     C                     Z-ADD#RLVQT    WL0021           Quantity Schedu
     C                     MOVELP4E2ST    WL0022    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    WUEEWG           Weight Schedule
     C                     Z-ADDWL0021    #RLVQT           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
      * USR Day 4
      * CASE: CTL.USR Day 4 is GT Zero
     C           #CE3DT    IFGT *ZERO                      *IF
      * CASE: CTL.USR Day 4 EQ JOB.*Job date
     C           #CE3DT    IFEQ ##JDT                      *IF
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     MOVEL#CAJCD    WL0007    P      Warehouse Code
     C                     Z-ADD#CE3DT    WL0008           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0009           Weight Schedule
     C                     Z-ADD#RMOQT    WL0010           Quantity Schedu
     C                     MOVELYL0002    WL0011    P      Status Flag 10
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    WUEEWG           Weight Schedule
     C                     Z-ADDWL0010    #RMOQT           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0016           Company Number
     C                     Z-ADD#1HGCD    WL0017           Item Code
     C                     MOVEL#CAJCD    WL0018    P      Warehouse Code
     C                     Z-ADD#CE3DT    WL0019           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0020           Weight Schedule
     C                     Z-ADD#RMOQT    WL0021           Quantity Schedu
     C                     MOVELP4E2ST    WL0022    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    WUEEWG           Weight Schedule
     C                     Z-ADDWL0021    #RMOQT           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
      * USR Day 5
      * CASE: CTL.USR Day 5 is GT Zero
     C           #CE4DT    IFGT *ZERO                      *IF
      * CASE: CTL.USR Day 5 EQ JOB.*Job date
     C           #CE4DT    IFEQ ##JDT                      *IF
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     MOVEL#CAJCD    WL0007    P      Warehouse Code
     C                     Z-ADD#CE4DT    WL0008           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0009           Weight Schedule
     C                     Z-ADD#RMPQT    WL0010           Quantity Schedu
     C                     MOVELYL0002    WL0011    P      Status Flag 10
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    WUEEWG           Weight Schedule
     C                     Z-ADDWL0010    #RMPQT           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0016           Company Number
     C                     Z-ADD#1HGCD    WL0017           Item Code
     C                     MOVEL#CAJCD    WL0018    P      Warehouse Code
     C                     Z-ADD#CE4DT    WL0019           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0020           Weight Schedule
     C                     Z-ADD#RMPQT    WL0021           Quantity Schedu
     C                     MOVELP4E2ST    WL0022    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    WUEEWG           Weight Schedule
     C                     Z-ADDWL0021    #RMPQT           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Warehouse is Blank so get All NEW 6/14/12
      * CASE: CTL.Warehouse Code is Blanks
     C           #CAJCD    IFEQ *BLANK                     *IF
      * Rtv Sched Ship AL-Whs RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0023           Company Number
     C                     Z-ADD#1HGCD    WL0024           Item Code
     C                     Z-ADD#CFFDT    WL0025           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0026           Weight Schedule
     C                     Z-ADD#RLKQT    WL0027           Quantity Schedu
     C                     MOVELYL0002    WL0028    P      Status Flag 10
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0026    WUEEWG           Weight Schedule
     C                     Z-ADDWL0027    #RLKQT           Quantity Schedu
      * USR Day 1
      * CASE: CTL.USR Day 1 is GT Zero
     C           #CFFDT    IFGT *ZERO                      *IF
      * Rtv Sched Ship AL-Whs RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0023           Company Number
     C                     Z-ADD#1HGCD    WL0024           Item Code
     C                     Z-ADD#CFFDT    WL0025           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0026           Weight Schedule
     C                     Z-ADD#RLKQT    WL0027           Quantity Schedu
     C                     MOVELYL0002    WL0028    P      Status Flag 10
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0026    WUEEWG           Weight Schedule
     C                     Z-ADDWL0027    #RLKQT           Quantity Schedu
     C                     END                             *FI
      * USR Day 2
      * CASE: CTL.USR Day 2 is GT Zero
     C           #CE1DT    IFGT *ZERO                      *IF
      * CASE: CTL.USR Day 2 EQ JOB.*Job date
     C           #CE1DT    IFEQ ##JDT                      *IF
      * Rtv Sched Ship AL-Whs RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0023           Company Number
     C                     Z-ADD#1HGCD    WL0024           Item Code
     C                     Z-ADD#CE1DT    WL0025           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0026           Weight Schedule
     C                     Z-ADD#RLLQT    WL0027           Quantity Schedu
     C                     MOVELYL0002    WL0028    P      Status Flag 10
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0026    WUEEWG           Weight Schedule
     C                     Z-ADDWL0027    #RLLQT           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Sched Shipm-AllWh RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0029           Company Number
     C                     Z-ADD#1HGCD    WL0030           Item Code
     C                     Z-ADD#CE1DT    WL0031           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0032           Weight Schedule
     C                     Z-ADD#RLLQT    WL0033           Quantity Schedu
     C                     MOVELP4E2ST    WL0034    P      Ord/Sch Sts USR
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0032    WUEEWG           Weight Schedule
     C                     Z-ADDWL0033    #RLLQT           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
      * USR Day 3
      * CASE: CTL.USR Day 3 is GT Zero
     C           #CE2DT    IFGT *ZERO                      *IF
      * CASE: CTL.USR Day 3 EQ JOB.*Job date
     C           #CE2DT    IFEQ ##JDT                      *IF
      * Rtv Sched Ship AL-Whs RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0023           Company Number
     C                     Z-ADD#1HGCD    WL0024           Item Code
     C                     Z-ADD#CE2DT    WL0025           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0026           Weight Schedule
     C                     Z-ADD#RLVQT    WL0027           Quantity Schedu
     C                     MOVELYL0002    WL0028    P      Status Flag 10
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0026    WUEEWG           Weight Schedule
     C                     Z-ADDWL0027    #RLVQT           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Sched Shipm-AllWh RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0029           Company Number
     C                     Z-ADD#1HGCD    WL0030           Item Code
     C                     Z-ADD#CE2DT    WL0031           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0032           Weight Schedule
     C                     Z-ADD#RLVQT    WL0033           Quantity Schedu
     C                     MOVELP4E2ST    WL0034    P      Ord/Sch Sts USR
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0032    WUEEWG           Weight Schedule
     C                     Z-ADDWL0033    #RLVQT           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
      * USR Day 4
      * CASE: CTL.USR Day 4 is GT Zero
     C           #CE3DT    IFGT *ZERO                      *IF
      * CASE: CTL.USR Day 4 EQ JOB.*Job date
     C           #CE3DT    IFEQ ##JDT                      *IF
      * Rtv Sched Ship AL-Whs RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0023           Company Number
     C                     Z-ADD#1HGCD    WL0024           Item Code
     C                     Z-ADD#CE3DT    WL0025           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0026           Weight Schedule
     C                     Z-ADD#RMOQT    WL0027           Quantity Schedu
     C                     MOVELYL0002    WL0028    P      Status Flag 10
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0026    WUEEWG           Weight Schedule
     C                     Z-ADDWL0027    #RMOQT           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Sched Shipm-AllWh RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0029           Company Number
     C                     Z-ADD#1HGCD    WL0030           Item Code
     C                     Z-ADD#CE3DT    WL0031           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0032           Weight Schedule
     C                     Z-ADD#RMOQT    WL0033           Quantity Schedu
     C                     MOVELP4E2ST    WL0034    P      Ord/Sch Sts USR
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0032    WUEEWG           Weight Schedule
     C                     Z-ADDWL0033    #RMOQT           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
      * USR Day 5
      * CASE: CTL.USR Day 5 is GT Zero
     C           #CE4DT    IFGT *ZERO                      *IF
      * CASE: CTL.USR Day 5 EQ JOB.*Job date
     C           #CE4DT    IFEQ ##JDT                      *IF
      * Rtv Sched Ship AL-Whs RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0023           Company Number
     C                     Z-ADD#1HGCD    WL0024           Item Code
     C                     Z-ADD#CE4DT    WL0025           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0026           Weight Schedule
     C                     Z-ADD#RMPQT    WL0027           Quantity Schedu
     C                     MOVELYL0002    WL0028    P      Status Flag 10
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0026    WUEEWG           Weight Schedule
     C                     Z-ADDWL0027    #RMPQT           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Sched Shipm-AllWh RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0029           Company Number
     C                     Z-ADD#1HGCD    WL0030           Item Code
     C                     Z-ADD#CE4DT    WL0031           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0032           Weight Schedule
     C                     Z-ADD#RMPQT    WL0033           Quantity Schedu
     C                     MOVELP4E2ST    WL0034    P      Ord/Sch Sts USR
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0032    WUEEWG           Weight Schedule
     C                     Z-ADDWL0033    #RMPQT           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Total Scheduled Quantity
      * RCD.Scheduled Quantity =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5)
      * x1    : RCD.Qty Sched Ord 1 USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : RCD.Qty Sched Ord 2 USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : RCD.Qty Sched Ord 3 USR
      * +     : PGM.*Synon (15,0) work field
      * x4    : RCD.Qty Sched Ord 4 USR
      * +     : PGM.*Synon (15,0) work field
      * x5    : RCD.Qty Sched Ord 5 USR
     C           #RLKQT    ADD  #RLLQT    W0WJ03           *Synon (15,0) w
     C           W0WJ03    ADD  #RLVQT    W0WJ02           *Synon (15,0) w
     C           W0WJ02    ADD  #RMOQT    W0WJ01           *Synon (15,0) w
     C           W0WJ01    ADD  #RMPQT    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    #RH1QT           Scheduled Quant
     C           #RLEQT    SUB  #RH1QT    #RP2NX           Variance Qty 1
      * Sel:  Active
      * CASE: CTL.Active Status Flag is Active
     C           #CP2ST    IFEQ 'A'                        *IF
      * CASE:
      *  - c1 AND c2
      *   |- c1    : RCD.Scheduled Quantity is LE Zero
      *   |- c2    : RCD.Qty On-Hand USR is LE Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #RH1QT    IFLE *ZERO                      *IF
     C           #RLEQT    IFLE *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @KLREHI                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate Company Number and convert to internal.
      * CD3 Ext/Int
     C                     MOVELV2AIC3    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC3  3
     C                     MOVEA*BLANKS   K3
     C                     Z-ADD3         C       30
     C                     Z-ADD3         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUDMCD    J3
     C                     MOVE *BLANKS   W0RTN
     C                     DO   3
     C           J3,C      IFNE ' '
     C                     MOVEAJ3,C      K3,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK3        JUSTC3
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC3    TESTC   1
     C           TESTC     IFGT '?'
     C           TESTC     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC3     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC3    WUDMCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ @CN,003                    *IF
      * Setup message data for message
      * Send message 'CD3 Non numeric data'
     C                     MOVEL'USR0752' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #2AIC3           CD3 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUDMCD    #2AIC3           CD3 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * Validate Print On Schedule
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#CSVST'  IFEQ YPMTFD
      * Print On Schedule
     C                     MOVEL#CSVST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFSVST
     C                     SELEC
     C           W0INVL    WHEQ 'N'                        N
     C                     Z-ADD1         ZFSVST
     C           W0INVL    WHEQ 'Y'                        Y
     C                     Z-ADD2         ZFSVST
     C                     ENDSL
     C                     EXFMTZESVST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFSVST    WHEQ 1
     C                     MOVEL'N'       W0INVL           N
     C           ZFSVST    WHEQ 2
     C                     MOVEL'Y'       W0INVL           Y
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #CSVST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate Base Item Code and convert to internal.
      * CD7 Ext/Int
     C                     MOVELVCDOC7    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELVCDOC7    WUEOCD           CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC7  7
     C                     MOVEA*BLANKS   K7
     C                     Z-ADD7         C       30
     C                     Z-ADD7         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUEOCD    J7
     C                     MOVE *BLANKS   W0RTN
     C                     DO   7
     C           J7,C      IFNE ' '
     C                     MOVEAJ7,C      K7,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK7        JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC7    TEST7   1
     C           TEST7     IFGT '?'
     C           TEST7     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC7     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC7    WUEOCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ @CN,003                    *IF
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                     MOVEL'USR0802' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #CDOC7           CD7 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUEOCD    #CDOC7           CD7 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * Validate Date To               USR
      * External date
     C                     Z-ADDVCJFDT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9936  *
     C                     END
     C                     Z-ADDXDINDT    #CJFDT
      * Validate Item Code and convert to internal.
      * CD7 Ext/Int
     C                     MOVELV2HGCD    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC7  7
     C                     MOVEA*BLANKS   K7
     C                     Z-ADD7         C       30
     C                     Z-ADD7         D       30
     C                     MOVEAWUEOCD    J7
     C                     MOVE *BLANKS   W0RTN
     C                     DO   7
     C           J7,C      IFNE ' '
     C                     MOVEAJ7,C      K7,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK7        JUSTC7
     C                     MOVE JUSTC7    TEST7   1
     C           TEST7     IFGT '?'
     C           TEST7     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC7     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC7    WUEOCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ @CN,003                    *IF
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                     MOVEL'USR0802' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #2HGCD           CD7 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUEOCD    #2HGCD           CD7 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZAIC3    CASNE#2AIC3    FBRQRL
     C           WZV4CD    CASNE#2V4CD    FBRQRL
     C           WZHGCD    CASNE#2HGCD    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * F4=Prompt  (Company/Warehouse/PA Group)
      * CASE: CTL.*CMD key is *Prompt
     C           *IN04     IFEQ '1'                        *IF
      * CASE: PGM.*Cursor field <IS> CTL.Company Number
     C           W0CFL     IFEQ 'V2AIC3'                   *IF
      * SEL Company - plants   SR - Company Name and Address  * 
     C                     CALL 'PPF2SRR'              90  SEL Company - p
     C                     PARM *BLANK    W0RTN   7
     C           #2AIC3    PARM #2AIC3    WQ0004  30       Company Number
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPF2SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     ELSE
      * CASE: PGM.*Cursor field <IS> CTL.Warehouse Code
     C           W0CFL     IFEQ '#CAJCD'                   *IF
      * SEL ShipCo/Warehouse   SR - Warehouse  * 
     C                     CALL 'PPHQSRR'              90  SEL ShipCo/Ware
     C                     PARM *BLANK    W0RTN   7
     C           #CAJCD    PARM #CAJCD    WQ0005  3        Warehouse Code
     C                     PARM #2AIC3    WQ0006  30       Shipping Compan
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPHQSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993431*
     C                     END
     C                     ELSE
      * CASE: PGM.*Cursor field <IS> CTL.Availability Group Code
     C           W0CFL     IFEQ '#2V4CD'                   *IF
      * Sel Avail Group       SR - Availability Group  * 
     C                     CALL 'PDDVSRR'              90  SEL Avail Group
     C                     PARM *BLANK    W0RTN   7
     C           #2V4CD    PARM #2V4CD    WQ0007  3        Availability Gr
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDDVSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9933  *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * RTV Shipping Co        RT - Warehouse  * 
     C                     EXSR SQRVGN
      * chg it to match the warehouse if it was entered.
      * CASE: CTL.Company Number is greater than zero
     C           #2AIC3    IFGT *ZERO                      *IF
      * CASE: LCL.Company Number is greater than zero
     C           YL0003    IFGT *ZERO                      *IF
     C                     Z-ADDYL0003    #2AIC3           Company Number
     C                     END                             *FI
     C                     END                             *FI
      * Val:  Company Number
      * CASE: CTL.Company Number is Equal to zero
     C           #2AIC3    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0001           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0001           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Company Number Req'
     C                     MOVEL'USR2183' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
      * Val:  Warehouse Code
      * CASE: CTL.Warehouse Code is Warehouse Code Blank
     C           #CAJCD    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL'*ALL'    #CF8NA           Warehouse Descr
     C                     ELSE
      * CASE: *OTHERWISE
      * VAL Shipping Co WHS   RT - Warehouse  * 
     C                     EXSR SRRVGN
      * CASE: WRK.Warehouse Description is equal to blank
     C           WUF8NA    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#CAJCD    ZA0002           Warehouse Code
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0003           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0003           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Warehouse Invalid for Co'
     C                     MOVEL'USR3404' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993431*
      *
     C                     END                             *FI
      * Rtv Warehouse/type Val RT - Warehouse  * 
     C                     EXSR SSRVGN
      * CASE: PAR.Record Found USR is Record Not Found
     C           P4WXST    IFEQ 'N'                        *IF
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Chg:  Warehouse Code
      * CASE: PAR.Warehouse Code NE CTL.Warehouse Code
     C           P2AJCD    IFNE #CAJCD                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL#CAJCD    P2AJCD           Warehouse Code
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Chg:  Print on Schedule
      * CASE: PAR.Print On Schedule NE CTL.Print On Schedule
     C           P4SVST    IFNE #CSVST                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL#CSVST    P4SVST           Print On Schedu
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Chg:  Date To NE USR Day 5
      * CASE: CTL.Date To               USR NE CTL.USR Day 5
     C           #CJFDT    IFNE #CE4DT                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Chg:  Base Item Code
      * CASE: PAR.Base Item Code NE CTL.Base Item Code
     C           P4DOC7    IFNE #CDOC7                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     Z-ADD#CDOC7    P4DOC7           Base Item Code
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * *Set Cursor: CTL.Item Code  (*Override=*YES)
     C                     Z-ADD*ZERO     W0RR0
     C                     Z-ADD012       W0ROW0
     C                     Z-ADD005       W0COL0
     C                     MOVEL'1'       W0OVR0           *YES
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: Process command keys
      * F5=Refresh
      * CASE: CTL.*CMD key is *Refresh
     C           *IN05     IFEQ '1'                        *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * F10=All/Active Items
      * CASE: CTL.*CMD key is CF10
     C           *IN10     IFEQ '1'                        *IF
      * CASE: CTL.Active Status Flag is Active
     C           #CP2ST    IFEQ 'A'                        *IF
     C                     MOVEL*BLANK    #CP2ST           Active Status F
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'A'       #CP2ST           Active Status F
     C                     END                             *FI
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * F12=WW kill plan
      * CASE: CTL.*CMD key is CF12
     C           *IN12     IFEQ '1'                        *IF
      * WW Kill/Plan Dsp HPE   UP - STR Hog Prcr & Eval Sys  * 
     C                     CALL 'PKBZDFR'              90  WW Kill/Plan Ds
     C                     PARM WUH3TX    WQ0008  7        Return Code Usr
     C                     PARM #2AIC3    WQ0009  30       Company
     C                     PARM #CFFDT    WQ0010  70       Kill Date
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKBZDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
     C                     END
     C                     END                             *FI
      * F13=WW Production Hold Orders
      * CASE: CTL.*CMD key is CF13
     C           *IN13     IFEQ '1'                        *IF
      * WW Prod Order Hold     DF - PD Order Header  * 
     C                     CALL 'PDVLDFR'              90  WW Prod Order H
     C                     PARM *BLANK    W0RTN   7
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDVLDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * F16=WW PA
      * CASE: CTL.*CMD key is CF16
     C           *IN16     IFEQ '1'                        *IF
      * ** Pass the Co# and Whse code to Product Availability 9/01/06 LJB
      * WW Product Availablty DF - Company Item Avail Group  * 
     C                     CALL 'PDFPDFR'              90  WW Product Avai
     C                     PARM *BLANK    W0RTN   7
     C           #2AIC3    PARM #2AIC3    WQ0011  30       Company Number
     C                     PARM #CAJCD    WQ0012  3        Warehouse Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDFPDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993134*
     C                     END
     C                     END                             *FI
      * 11/21/2008 * out and replace with new prompt that will also
      * allow the user to select the trim & belly reports
      * F21=Print Schedule
      * CASE: CTL.*CMD key is CF21
     C           *IN21     IFEQ '1'                        *IF
     C                     Z-ADD#CE1DT    P5ELDT           Production Date
      * Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P5ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WUV5ST           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WUV5ST           Production Type
     C                     END                             *FI
     C                     MOVEL'*YES'    P3XFST           Display Prt Opt
     C                     MOVEL'N'       YL0004           PRT Night Queue
      * Prt Prd Schedule Rpts PV - PS Prod Item Schedule  * 
     C                     CALL 'PMAQPVR'              90  Prt Prd Schedul
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P5ELDT    WQ0013  70       Production Date
     C           #CAJCD    PARM #CAJCD    WQ0014  3        Warehouse Code
     C           P3XFST    PARM P3XFST    WQ0015  4        Display Prt Opt
     C                     PARM #2AIC3    WQ0016  30       Company Number
     C                     PARM WUV5ST    WQ0017  1        Production Type
     C                     PARM @CN,004   WQ0018 25        PRT Description
     C           P3WRST    PARM P3WRST    WQ0019 10        PRT Printer Dev
     C           P3WSST    PARM P3WSST    WQ0020  4        PRT Hold Output
     C           P3WTST    PARM P3WTST    WQ0021  4        PRT Save Output
     C           P3DYNB    PARM P3DYNB    WQ0022  20       PRT Number of C
     C           YL0004    PARM YL0004    WQ0023  1        PRT Night Queue
     C           P3BVVN    PARM P3BVVN    WQ0024 10        PRT Night Queue
     C                     PARM P2DNCD    WQ0025  6        Application Cod
     C                     PARM '1'       WQ0026  1        Paper Type USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMAQPVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993431*
     C                     END
     C                     END                             *FI
      * F22=WW Production Adjustments
      * CASE: CTL.*CMD key is CF22
     C           *IN22     IFEQ '1'                        *IF
      * WW Prd Adjustments    DF - PS Production Adjustment  * 
     C                     CALL 'PDTIDFR'              90  WW Prd Adjustme
     C                     PARM *BLANK    W0RTN   7
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDTIDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * F23=WW Production Adjustments
      * CASE: CTL.*CMD key is CF23
     C           *IN23     IFEQ '1'                        *IF
      * Prt Inventory/Orders  PV - Company Item  * 
     C                     CALL 'PDM8PVR'              90  Prt Inventory/O
     C                     PARM *BLANK    W0RTN   7
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDM8PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,38
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * 2=Edit Production Adjustment
      * CASE: RCD.*SFLSEL is *Edit
     C           #1SEL     IFEQ '2'                        *IF
     C           #1SEL     OREQ ' 2'
      * Edt Adjustment        ER - PS Production Adjustment  * 
     C                     CLEARPARC
     C                     Z-ADD#1AIC3    PAAIC3           Company Number
     C                     Z-ADD##JDT     PAELDT           Production Date
     C                     Z-ADD#1HGCD    PAHGCD           Item Code
     C                     MOVEL#CAJCD    PAAJCD    P      Warehouse Code
     C                     MOVEL'PR'      PAPSAD    P      PS Adjustment T
     C                     Z-ADD*ZERO     PAPSAN           PS Adjustment N
      *
     C                     CALL 'PDTPE1R'              90  Edt Adjustment
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: PS Product
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDTPE1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9834  *
     C                     END
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     END                             *FI
      * 5=Display Item Warehouse inquiry Detail
      * CASE: RCD.*SFLSEL is Option 5
     C           #1SEL     IFEQ ' 5'                       *IF
     C           #1SEL     OREQ '5'
     C                     MOVEL'Y'       YL0005           *Initial call
      * Rtv Item Description   RT - Company/Item  * 
     C                     EXSR STRVGN
      * Dsp Item/Whse Inqy Dtl DF - Item Balance Detail  * 
     C                     CALL 'ICQ9DFR'              90  Dsp Item/Whse I
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0027  30       Company Number
     C                     PARM #1HGCD    WQ0028  70       Item Code
     C                     PARM YL0006    WQ0029 30        Description Lin
     C                     PARM #RADCD    WQ0030  2        U/M - Primary
     C                     PARM #RAWPC    WQ0031  94       Conversion Fact
     C                     PARM #RLXST    WQ0032  1        Operation Facto
     C                     PARM #RAECD    WQ0033  2        U/M - Second
     C                     PARM #RAXPC    WQ0034  94       Conversion Fact
     C                     PARM #RLYST    WQ0035  1        Operation Facto
     C                     PARM #RAFCD    WQ0036  2        U/M - Third
     C                     PARM #RAIWG    WQ0037 112       Unit Weight
     C                     PARM #RFZST    WQ0038  1        Production Date
     C                     PARM #RAVST    WQ0039  1        Catch Weight St
     C                     PARM #CAJCD    WQ0040  3        Warehouse Code
     C                     PARM #CF8NA    WQ0041 30        Warehouse Descr
     C                     PARM P2ADTX    WQ0042 30        Name
     C           YL0005    PARM YL0005    WQ0043  1        *Initial call
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ICQ9DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9834  *
     C                     END
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     END                             *FI
      * 7=Edit Comments
      * CASE: RCD.*SFLSEL is Option 7
     C           #1SEL     IFEQ '7'                        *IF
     C           #1SEL     OREQ ' 7'
      * Edt Prod Sched Commnt EF - PS Production Detail Com  * 
     C                     CLEARPBRC
     C                     Z-ADD#1AIC3    PBAIC3           Company Number
     C                     Z-ADD#1HGCD    PBHGCD           Item Code
     C                     MOVEL#CAJCD    PBAJCD    P      Warehouse Code
     C                     Z-ADD#CFFDT    PBELDT           Production Date
      *
     C                     CALL 'PDSNEFR'              90  Edt Prod Sched
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PBRC             KEY: PS Product
     C                     PARM P2ADTX    WQ0044 30        Name
     C                     PARM #RGENA    WQ0045 30        Description Lin
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDSNEFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9834  *
     C                     END
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     END                             *FI
      * 8=Display Item Orders
      * CASE: RCD.*SFLSEL is Option 8
     C           #1SEL     IFEQ '8'                        *IF
     C           #1SEL     OREQ ' 8'
     C                     MOVEL'Y'       YL0005           *Initial call
      * Dsp Item Orders       DF - Order Detail  * 
     C                     CALL 'PDO7DFR'              90  Dsp Item Orders
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0046  30       Company Number
     C                     PARM #1HGCD    WQ0047  70       Item Code
     C                     PARM #CFFDT    WQ0048  70       Scheduled Ship
     C                     PARM P2ADTX    WQ0049 30        Name
     C                     PARM #CAJCD    WQ0050  3        Warehouse Code
     C           YL0005    PARM YL0005    WQ0051  1        *Initial call
     C                     PARM 'FR'      WQ0052  2        Warehouse Type
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDO7DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9834  *
     C                     END
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     END                             *FI
      * 9=Display BOM
      * CASE: RCD.*SFLSEL is Option 9
     C           #1SEL     IFEQ '9'                        *IF
     C           #1SEL     OREQ ' 9'
      * DSP Bill of Material   ET - Company Item  * 
     C                     CALL 'PPVMETR'              90  DSP Bill of Mat
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0053  30       Company Number
     C                     PARM #1HGCD    WQ0054  70       Item Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPVMETR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
      * 10=Work With Item Allocation
      * CASE: RCD.*SFLSEL is Option 10
     C           #1SEL     IFEQ '10'                       *IF
      * WW Inv Allocation     DF - Order Detail Schedule  * 
     C                     CLEARPCRC
     C                     Z-ADD#1AIC3    PCAIC3           Company Number
     C                     Z-ADD#1HGCD    PCHGCD           Item Code
     C                     MOVEL#CAJCD    PCAJCD    P      Warehouse Code
      *
     C                     CALL 'POP5DFR'              90  WW Inv Allocati
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PCRC             KEY: Order Deta
     C                     PARM *ZERO     WQ0055  70       Order Number
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POP5DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9834  *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * 11=Work With Order Production Sched
      * CASE: RCD.*SFLSEL is Option 11
     C           #1SEL     IFEQ '11'                       *IF
      * CASE: RCD.Base/Conv/Loss Item is Base
     C           #RQZCD    IFEQ 'B'                        *IF
     C                     Z-ADD#1HGCD    YL0007           Component Item
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv First Consumed Itm XF - Item Bill Of Material  * 
     C                     CALL 'POP1XFR'              90  Rtv First Consu
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0056  30       Company Number
     C                     PARM #1HGCD    WQ0057  70       Item Code
     C           YL0007    PARM *ZERO     WQ0058  70       Component Item
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POP1XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
      * FP1054 pass in prod warehouse
      * Rtv Prd WHS w/AcctCo  RT - Warehouse  * 
     C                     EXSR SURVGN
      * WW OrdPrdSch Edit     DF - Order Detail  * 
     C                     CLEARPDRC
     C                     Z-ADDYL0007    PDNUDT           Consumed Item C
     C                     MOVELYL0008    PDF6SX    P      Production Ware
      *
     C                     CALL 'POQJDFR'              90  WW OrdPrdSch Ed
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PDRC             KEY: Order Deta
     C                     PARM #1HGCD    WQ0059  70       Item Code
     C                     PARM *BLANK    WQ0060132        Message USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POQJDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * 15=Display Item Specifications
      * CASE: RCD.*SFLSEL is Option 15
     C           #1SEL     IFEQ '15'                       *IF
      * Dsp Item Specs        DR - Company Item  * 
     C                     CLEARPERC
     C                     Z-ADD#1AIC3    PEAIC3           Company Number
     C                     Z-ADD#1HGCD    PEHGCD           Item Code
      *
     C                     CALL 'POQMD1R'              90  Dsp Item Specs
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PERC             KEY: Company It
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POQMD1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C                     MOVEL'0'       *IN73
     C           #RQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'1'       *IN73
     C                     END                             *FI
     C                     MOVEL'0'       *IN72
     C           #CFFDT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN72
     C                     END                             *FI
     C                     MOVEL'0'       *IN71
     C           #CE1DT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN71
     C                     END                             *FI
     C                     MOVEL'0'       *IN70
     C           #CE2DT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN70
     C                     END                             *FI
     C                     MOVEL'0'       *IN69
     C           #CE3DT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN69
     C                     END                             *FI
     C                     MOVEL'0'       *IN68
     C           #CE4DT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN68
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C                     MOVEL'0'       *IN79
     C           P2I6ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           #CLNSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           #CLOSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
     C                     MOVEL'0'       *IN76
     C           #CLPSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN76
     C                     END                             *FI
     C                     MOVEL'0'       *IN75
     C           #CLQSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN75
     C                     END                             *FI
     C                     MOVEL'0'       *IN74
     C           #CLRSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN74
     C                     END                             *FI
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @KLREHI fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDKLAIC3    #1AIC3           Company Number
     C                     MOVELKLV4CD    #1V4CD           Availability Gr
     C                     Z-ADDKLIDSQ    #1IDSQ           Item Display Se
     C                     MOVELKLUVST    #1UVST           EDI Status 1
     C                     MOVELKLUWST    #1UWST           EDI Status 2
     C                     MOVELKLUXST    #1UXST           EDI Status 3
     C                     MOVELKLVSST    #1VSST           Record Status
     C                     Z-ADDKLAATM    #1AATM           Job Time
     C                     MOVELKLAYNA    #1AYNA           User Id
     C                     MOVELKLA0NA    #1A0NA           Job Name
     C                     Z-ADDKLAXDT    #1AXDT           Job Date
     C                     Z-ADDKLHGCD    #1HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V1HGCD
     C                     Z-ADD*ZERO     #RDOC7           Base Item Code
     C                     MOVEL*BLANK    #RDXSX           Display Flag 1
     C                     MOVEL*BLANK    #RVMST           Credit Item Sta
     C                     MOVEL*BLANK    #RQKST           Display Flag
     C                     MOVEL*BLANK    #RQZCD           Base/Conv/Loss
     C                     MOVEL*BLANK    #RPCCT           Piece Count Ite
     C                     Z-ADD*ZERO     #RBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     #RBJNB           Bags Per Unit
     C                     MOVEL*BLANK    #RADCD           U/M - Primary
     C                     Z-ADD*ZERO     #RCHTM           Fresh Chilling
     C                     Z-ADD*ZERO     #RAWPC           Conversion Fact
     C                     MOVEL*BLANK    #RLXST           Operation Facto
     C                     MOVEL*BLANK    #RAECD           U/M - Second
     C                     Z-ADD*ZERO     #RAXPC           Conversion Fact
     C                     MOVEL*BLANK    #RLYST           Operation Facto
     C                     MOVEL*BLANK    #RAFCD           U/M - Third
     C                     Z-ADD*ZERO     #RAIWG           Unit Weight
     C                     MOVEL*BLANK    #RFZST           Production Date
     C                     MOVEL*BLANK    #RAVST           Catch Weight St
     C                     Z-ADD*ZERO     #RLOQT           Qty Produced US
     C                     MOVEL*BLANK    #RLISX           Output Only 1 U
     C                     Z-ADD*ZERO     #RLPQT           Qty Remaining H
     C                     Z-ADD*ZERO     #RLMQT           Qty Prod Needed
     C                     Z-ADD*ZERO     #RLNQT           Qty Prod Adjust
     C                     MOVEL*BLANK    #RLJSX           Output Only 2 U
     C                     MOVEL*BLANK    #RCMAA           Shift/Priority
     C                     Z-ADD*ZERO     #RLTQT           Qty Prod Adjust
     C                     MOVEL*BLANK    #RLKSX           Output Only 3 U
     C                     Z-ADD*ZERO     #RLUQT           Qty Prod Needed
     C                     Z-ADD*ZERO     #RLSQT           Qty Prod Adj Ho
     C                     Z-ADD*ZERO     #RNHQT           Qty Prod Needed
     C                     Z-ADD*ZERO     #RNDQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     #RNFQT           Qty Prod Adj Ho
     C                     MOVEL*BLANK    #RLLSX           Output Only 4 U
     C                     Z-ADD*ZERO     #RNIQT           Qty Prod Needed
     C                     Z-ADD*ZERO     #RNEQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     #RNGQT           Qty Prod Adj Ho
     C                     MOVEL*BLANK    #RLMSX           Output Only 5 U
     C                     MOVEL*BLANK    #RSVST           Print On Schedu
     C                     Z-ADD*ZERO     #RLQQT           Qty Prod Adj Ho
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     MOVEL*BLANK    #RGENA           Item Descriptio
     C                     Z-ADD*ZERO     #RLKQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     #RLLQT           Qty Sched Ord 2
     C                     Z-ADD*ZERO     #RLVQT           Qty Sched Ord 3
     C                     Z-ADD*ZERO     #RMOQT           Qty Sched Ord 4
     C                     Z-ADD*ZERO     #RMPQT           Qty Sched Ord 5
     C                     Z-ADD*ZERO     #RH1QT           Scheduled Quant
     C                     Z-ADD*ZERO     #RLEQT           Qty On-Hand USR
     C                     Z-ADD*ZERO     #RP2NX           Variance Qty 1
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     MOVEL*BLANK    #CVHST           Lot Tracking Fl
     C                     Z-ADD*ZERO     #2IDSQ           Item Display Se
     C                     MOVEL*BLANK    #CP2ST           Active Status F
     C                     MOVEL*BLANK    #CLNSX           Production Day
     C                     MOVEL*BLANK    #CLOSX           Production Day
     C                     MOVEL*BLANK    #CLPSX           Production Day
     C                     MOVEL*BLANK    #CLQSX           Production Day
     C                     MOVEL*BLANK    #CLRSX           Production Day
     C                     Z-ADD*ZERO     #2AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V2AIC3
     C                     MOVEL*BLANK    #CAPTX           Company Name
     C                     MOVEL*BLANK    #CSVST           Print On Schedu
     C                     MOVEL*BLANK    #2V4CD           Availability Gr
     C                     MOVEL*BLANK    #CNVNA           Availability Gr
     C                     MOVEL*BLANK    #CAJCD           Warehouse Code
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     Z-ADD*ZERO     #CDOC7           Base Item Code
      * Clear external version also
     C                     MOVEL*BLANK    VCDOC7
     C                     MOVEL*BLANK    #CIXTX           Condition Name
     C                     Z-ADD*ZERO     #CJFDT           Date To
      * Clear external version also
     C                     Z-ADD*ZERO     VCJFDT
     C                     Z-ADD*ZERO     #CFFDT           USR Day 1
      * Clear external version also
     C                     Z-ADD*ZERO     VCFFDT
     C                     Z-ADD*ZERO     #CE1DT           USR Day 2
      * Clear external version also
     C                     Z-ADD*ZERO     VCE1DT
     C                     Z-ADD*ZERO     #CE2DT           USR Day 3
      * Clear external version also
     C                     Z-ADD*ZERO     VCE2DT
     C                     Z-ADD*ZERO     #CE3DT           USR Day 4
      * Clear external version also
     C                     Z-ADD*ZERO     VCE3DT
     C                     Z-ADD*ZERO     #CE4DT           USR Day 5
      * Clear external version also
     C                     Z-ADD*ZERO     VCE4DT
     C                     Z-ADD*ZERO     #2HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V2HGCD
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1HGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1HGCD           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Base Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #CDOC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#CDOC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VCDOC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCDOC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Date To               USR to display format
      * Convert date
     C           1000000   ADD  #CJFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCJFDT
      * Convert USR Day 1 to display format
      * Convert date
     C           1000000   ADD  #CFFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCFFDT
      * Convert USR Day 2 to display format
      * Convert date
     C           1000000   ADD  #CE1DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE1DT
      * Convert USR Day 3 to display format
      * Convert date
     C           1000000   ADD  #CE2DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE2DT
      * Convert USR Day 4 to display format
      * Convert date
     C           1000000   ADD  #CE3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE3DT
      * Convert USR Day 5 to display format
      * Convert date
     C           1000000   ADD  #CE4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE4DT
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2HGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2HGCD           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Kill/Prod Day Sts RT - Calendar  * Day 1
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           AFAIC3           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0001    AFAIC3           Company Number
     C                     Z-ADDWL0002    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSSA     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0003           Kill Day Status
     C                     MOVEL*BLANK    WL0004           Production Day
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAFV9ST    WL0003           Kill Day Status
     C                     MOVELAFWAST    WL0004           Production Day
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD#2AIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSB     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #CAPTX           Name
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    #CAPTX           Name
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Group Description  RT - Availability Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           KKV4CD           Availability Gr
      * Setup key
     C                     MOVEL#2V4CD    KKV4CD           Availability Gr
      * Establish starting position
     C           KRSSC     CHAIN@KKREG7              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2215' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #CNVNA           Availability Gr
     C                     MOVEL@CN,002   W0RTN            *Return code
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELKKNVNA    #CNVNA           Availability Gr
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#CAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSD     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,002   W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL*BLANK    #CVHST           Lot Tracking Fl
     C                     MOVEL*BLANK    WUWPST           Warehouse Type
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADF8NA    #CF8NA           Warehouse Descr
     C                     MOVELADVHST    #CVHST           Lot Tracking Fl
     C                     MOVELADWPST    WUWPST           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Val Production Whs     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAOCD    WQSE01           Production Ware
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           Production Ware
      * Setup key
     C                     MOVEL#CAJCD    WQSE01           Production Ware
      * Establish starting position
     C           KRSSE     SETLL@ADREYH                    *
     C           KRSSE     READE@ADREYH                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       P4Q1ST           Record Found US
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y'       P4Q1ST           Record Found US
     C                     GOTO SEEXIT                     *QUIT
     C           KRSSE     READE@ADREYH                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Val Item Bal Exist    RT - Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           B0AIC3           Company Number
     C                     KFLD           B0HGCD           Item Code
     C                     KFLD           B0AJCD           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    B0AIC3           Company Number
     C                     Z-ADD#1HGCD    B0HGCD           Item Code
     C                     MOVEL#CAJCD    B0AJCD           Warehouse Code
      * Establish starting position
     C           KRSSF     CHAIN@B0REYY              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0328' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       P4WXST           Record Found US
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       P4WXST           Record Found US
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    BZAIC3           Company Number
     C                     Z-ADD#1HGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSG     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #RGENA           Description Lin
     C                     MOVEL*BLANK    #RADCD           U/M - Primary
     C                     Z-ADD*ZERO     #RAIWG           Unit Weight
     C                     Z-ADD*ZERO     WURINB           Item Structure
     C                     Z-ADD*ZERO     WURHNB           Item Structure
     C                     Z-ADD*ZERO     WURGNB           Item Structure
     C                     MOVEL*BLANK    WUN0CD           Item Type Code
     C                     MOVEL*BLANK    WUQ1CD           Default Warehou
     C                     Z-ADD*ZERO     #RCHTM           Fresh Chilling
     C                     MOVEL*BLANK    #RQZCD           Base/Conv/Loss
     C                     MOVEL*BLANK    WUXWST           Variety/Rendere
     C                     MOVEL*BLANK    #RVMST           Credit Item Sta
     C                     Z-ADD*ZERO     WUSWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WUPPHE           Pieces Per Head
     C                     MOVEL*BLANK    WUR3CD           Department Code
     C                     MOVEL*BLANK    WUSDCD           Group for Packa
     C                     MOVEL*BLANK    WUX5ST           Seconds Item
     C                     MOVEL*BLANK    #RPCCT           Piece Count Ite
     C                     Z-ADD*ZERO     #RBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     #RBJNB           Bags Per Unit
     C                     MOVEL*BLANK    WUSUST           Export/Domestic
     C                     MOVEL*BLANK    #RSVST           Print On Schedu
     C                     MOVEL*BLANK    WUSYST           Fresh Inv Alloc
     C                     MOVEL*BLANK    WUSZST           Fresh Sched As
     C                     MOVEL*BLANK    WUS1ST           Frozen Inv Allo
     C                     MOVEL*BLANK    WUXRCD           Primal Group Co
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    #RGENA           Description Lin
     C                     MOVELBZADCD    #RADCD           U/M - Primary
     C                     Z-ADDBZAIWG    #RAIWG           Unit Weight
     C                     Z-ADDBZRINB    WURINB           Item Structure
     C                     Z-ADDBZRHNB    WURHNB           Item Structure
     C                     Z-ADDBZRGNB    WURGNB           Item Structure
     C                     MOVELBZN0CD    WUN0CD           Item Type Code
     C                     MOVELBZQ1CD    WUQ1CD           Default Warehou
     C                     Z-ADDBZCHTM    #RCHTM           Fresh Chilling
     C                     MOVELBZQZCD    #RQZCD           Base/Conv/Loss
     C                     MOVELBZXWST    WUXWST           Variety/Rendere
     C                     MOVELBZVMST    #RVMST           Credit Item Sta
     C                     Z-ADDBZSWGH    WUSWGH           Std Weight/Head
     C                     Z-ADDBZPPHE    WUPPHE           Pieces Per Head
     C                     MOVELBZR3CD    WUR3CD           Department Code
     C                     MOVELBZSDCD    WUSDCD           Group for Packa
     C                     MOVELBZX5ST    WUX5ST           Seconds Item
     C                     MOVELBZPCCT    #RPCCT           Piece Count Ite
     C                     Z-ADDBZBDNB    #RBDNB           Pieces Per Bag
     C                     Z-ADDBZBJNB    #RBJNB           Bags Per Unit
     C                     MOVELBZSUST    WUSUST           Export/Domestic
     C                     MOVELBZSVST    #RSVST           Print On Schedu
     C                     MOVELBZSYST    WUSYST           Fresh Inv Alloc
     C                     MOVELBZSZST    WUSZST           Fresh Sched As
     C                     MOVELBZS1ST    WUS1ST           Frozen Inv Allo
     C                     MOVELBZXRCD    WUXRCD           Primal Group Co
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Item Loc Qty Tot  RT - Item Lot Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     #RLEQT           Quantity Loc On
      * Declare restrictor key work fields
     C           *LIKE     DEFN L5AIC3    WQSH01           Company Number
     C           *LIKE     DEFN L5HGCD    WQSH02           Item Code
     C           *LIKE     DEFN L5AJCD    WQSH03           Warehouse Code
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WQSH01           Company Number
     C                     KFLD           WQSH02           Item Code
     C                     KFLD           WQSH03           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSH01           Company Number
     C                     Z-ADD#1HGCD    WQSH02           Item Code
     C                     MOVEL#CAJCD    WQSH03           Warehouse Code
      * Establish starting position
     C           KRSSH     SETLL@L5CPSV                    *
     C           KRSSH     READE@L5CPSV                  90*
      * Data record not found
     C   90                MOVEL'USR2634' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  L5J2QT    #RLEQT           Quantity Loc On
     C           KRSSH     READE@L5CPSV                  90*
     C                     ENDDO
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Item Loc Qty-AlWh RT - Item Lot Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     #RLEQT           Quantity Loc On
      * Declare restrictor key work fields
     C           *LIKE     DEFN L5AIC3    WQSI01           Company Number
     C           *LIKE     DEFN L5HGCD    WQSI02           Item Code
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Company Number
     C                     KFLD           WQSI02           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSI01           Company Number
     C                     Z-ADD#1HGCD    WQSI02           Item Code
      * Establish starting position
     C           KRSSI     SETLL@L5CPSV                    *
     C           KRSSI     READE@L5CPSV                  90*
      * Data record not found
     C   90                MOVEL'USR2634' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  L5J2QT    #RLEQT           Quantity Loc On
     C           KRSSI     READE@L5CPSV                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV On Hand Qty f/Whse RT - Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSJ01           Company Number
     C           *LIKE     DEFN WBAJCD    WQSJ02           Warehouse Code
     C           *LIKE     DEFN WBHGCD    WQSJ03           Item Code
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Company Number
     C                     KFLD           WQSJ02           Warehouse Code
     C                     KFLD           WQSJ03           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSJ01           Company Number
     C                     MOVEL#CAJCD    WQSJ02           Warehouse Code
     C                     Z-ADD#1HGCD    WQSJ03           Item Code
      * Establish starting position
     C           KRSSJ     SETLL@B0REHD                    *
     C           KRSSJ     READE@B0REHD                  90*
      * Data record not found
     C   90                MOVEL'USR0328' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  WBDDQT    #RLEQT           On Hand U/M1 Su
     C           KRSSJ     READE@B0REHD                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * RTV On Hand Qty A/Whse RT - Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSK01           Company Number
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Company Number
      * Setup key
     C                     Z-ADD#2AIC3    WQSK01           Company Number
      * Establish starting position
     C           KRSSK     SETLL@B0REHD                    *
     C           KRSSK     READE@B0REHD                  90*
      * Data record not found
     C   90                MOVEL'USR0328' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Item Code EQ DB1.Item Code
     C           #1HGCD    IFEQ WBHGCD                     *IF
     C                     ADD  WBDDQT    #RLEQT           On Hand U/M1 Su
     C                     END                             *FI
     C           KRSSK     READE@B0REHD                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0009           Weight Schedule
     C                     Z-ADD*ZERO     WL0010           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSL01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSL02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSL03           Warehouse Code
      * Define keylist
     C           KPSSL     KLIST
     C                     KFLD           WQSL01           Company Number
     C                     KFLD           WQSL02           Item Code
     C                     KFLD           WQSL03           Warehouse Code
     C                     KFLD           OMAODT           Scheduled Ship
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WQSL01           Company Number
     C                     KFLD           WQSL02           Item Code
     C                     KFLD           WQSL03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0005    WQSL01           Company Number
     C                     Z-ADDWL0006    WQSL02           Item Code
     C                     MOVELWL0007    WQSL03           Warehouse Code
     C                     Z-ADDWL0008    OMAODT           Scheduled Ship
      * Establish starting position
     C           KPSSL     SETLL@BGWKKG                    *
     C           KRSSL     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0012           Company Number
     C                     Z-ADDOMC4NB    WL0013           Order Number
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0014    WUGWST    P      Header Status
     C                     MOVELWL0015    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Status Flag 10 Y/N is Yes
     C           WL0011    IFEQ 'Y'                        *IF
      * FP1054 if Yes, accum Scheduled qty & wgt as it was before
     C                     ADD  OMAUWG    WL0009           Weight Schedule
     C                     ADD  OMCCQT    WL0010           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 if no, accum Ordered & qty & wgt
     C                     ADD  OMD0WG    WL0009           Weight Schedule
     C                     ADD  OMAVQT    WL0010           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSL     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0012    BEAIC3           Company Number
     C                     Z-ADDWL0013    BEC4NB           Order Number
      * Establish starting position
     C           KRSSM     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,002   W0RTN            *Return code
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    WL0014           Header Status
     C                     MOVELBEOBST    WL0015           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Sched Shipments   RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0020           Weight Schedule
     C                     Z-ADD*ZERO     WL0021           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSN01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSN02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSN03           Warehouse Code
     C           *LIKE     DEFN OMAODT    WQSN04           Scheduled Ship
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WQSN01           Company Number
     C                     KFLD           WQSN02           Item Code
     C                     KFLD           WQSN03           Warehouse Code
     C                     KFLD           WQSN04           Scheduled Ship
      * Setup key
     C                     Z-ADDWL0016    WQSN01           Company Number
     C                     Z-ADDWL0017    WQSN02           Item Code
     C                     MOVELWL0018    WQSN03           Warehouse Code
     C                     Z-ADDWL0019    WQSN04           Scheduled Ship
      * Establish starting position
     C           KRSSN     SETLL@BGWKKG                    *
     C           KRSSN     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0012           Company Number
     C                     Z-ADDOMC4NB    WL0013           Order Number
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0014    WUGWST    P      Header Status
     C                     MOVELWL0015    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Ord/Sch Sts USR is Scheduled
     C           WL0022    IFEQ 'S'                        *IF
     C                     ADD  OMAUWG    WL0020           Weight Schedule
     C                     ADD  OMCCQT    WL0021           Quantity Schedu
     C                     ELSE
      * CASE: PAR.Ord/Sch Sts USR is Ordered
     C           WL0022    IFEQ 'O'                        *IF
     C                     ADD  OMD0WG    WL0020           Weight Schedule
     C                     ADD  OMAVQT    WL0021           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSN     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * Rtv Sched Ship AL-Whs RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0026           Weight Schedule
     C                     Z-ADD*ZERO     WL0027           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCAIC3    WQSO01           Company Number
     C           *LIKE     DEFN WCHGCD    WQSO02           Item Code
      * Define keylist
     C           KPSSO     KLIST
     C                     KFLD           WQSO01           Company Number
     C                     KFLD           WQSO02           Item Code
     C                     KFLD           WCAODT           Scheduled Ship
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           WQSO01           Company Number
     C                     KFLD           WQSO02           Item Code
      * Setup key
     C                     Z-ADDWL0023    WQSO01           Company Number
     C                     Z-ADDWL0024    WQSO02           Item Code
     C                     Z-ADDWL0025    WCAODT           Scheduled Ship
      * Establish starting position
     C           KPSSO     SETLL@BGWKN3                    *
     C           KRSSO     READE@BGWKN3                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0012           Company Number
     C                     Z-ADDWCC4NB    WL0013           Order Number
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0014    WUGWST    P      Header Status
     C                     MOVELWL0015    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Status Flag 10 Y/N is Yes
     C           WL0028    IFEQ 'Y'                        *IF
      * FP1054 if Yes, accum Scheduled qty & wgt as it was before
     C                     ADD  WCAUWG    WL0026           Weight Schedule
     C                     ADD  WCCCQT    WL0027           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 if no, accum Ordered & qty & wgt
     C                     ADD  WCD0WG    WL0026           Weight Schedule
     C                     ADD  WCAVQT    WL0027           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSO     READE@BGWKN3                  90*
     C                     ENDDO
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Rtv Sched Shipm-AllWh RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0032           Weight Schedule
     C                     Z-ADD*ZERO     WL0033           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSP01           Company Number
     C           *LIKE     DEFN WDHGCD    WQSP02           Item Code
     C           *LIKE     DEFN WDAODT    WQSP03           Scheduled Ship
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           WQSP01           Company Number
     C                     KFLD           WQSP02           Item Code
     C                     KFLD           WQSP03           Scheduled Ship
      * Setup key
     C                     Z-ADDWL0029    WQSP01           Company Number
     C                     Z-ADDWL0030    WQSP02           Item Code
     C                     Z-ADDWL0031    WQSP03           Scheduled Ship
      * Establish starting position
     C           KRSSP     SETLL@BGWKW6                    *
     C           KRSSP     READE@BGWKW6                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWDAIC3    WL0012           Company Number
     C                     Z-ADDWDC4NB    WL0013           Order Number
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0014    WUGWST    P      Header Status
     C                     MOVELWL0015    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Ord/Sch Sts USR is Scheduled
     C           WL0034    IFEQ 'S'                        *IF
     C                     ADD  WDAUWG    WL0032           Weight Schedule
     C                     ADD  WDCCQT    WL0033           Quantity Schedu
     C                     ELSE
      * CASE: PAR.Ord/Sch Sts USR is Ordered
     C           WL0034    IFEQ 'O'                        *IF
     C                     ADD  WDD0WG    WL0032           Weight Schedule
     C                     ADD  WDAVQT    WL0033           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSP     READE@BGWKW6                  90*
     C                     ENDDO
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * RTV Shipping Co        RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WEAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#CAJCD    WEAJCD           Warehouse Code
      * Establish starting position
     C           KRSSQ     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0003           Shipping Compan
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWEBWC3    YL0003           Shipping Compan
     C                     ENDIF
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * VAL Shipping Co WHS   RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WFBWC3    WQSR01           Shipping Compan
     C           *LIKE     DEFN WFAJCD    WQSR02           Warehouse Code
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           WQSR01           Shipping Compan
     C                     KFLD           WQSR02           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSR01           Shipping Compan
     C                     MOVEL#CAJCD    WQSR02           Warehouse Code
      * Establish starting position
     C           KRSSR     SETLL@ADREWA                    *
     C           KRSSR     READE@ADREWA                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUF8NA           Warehouse Descr
     C                     GOTO SREXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWFF8NA    WUF8NA           Warehouse Descr
     C           KRSSR     READE@ADREWA                  90*
     C                     ENDDO
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * Rtv Warehouse/type Val RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#CAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSS     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       P4WXST           Record Found US
     C                     GOTO SSEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       P4WXST           Record Found US
     C                     MOVELADWPST    WUWPST           Warehouse Type
     C                     GOTO SSEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * Rtv Item Description   RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WGHGCD    WQST01           Item Code
      * Define keylist
     C           KRSST     KLIST
     C                     KFLD           WQST01           Item Code
      * Setup key
     C                     Z-ADD#1HGCD    WQST01           Item Code
      * Establish starting position
     C           KRSST     SETLL@BZRED0                    *
     C           KRSST     READE@BZRED0                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0006           Description Lin
     C                     GOTO STEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWGAVNA    YL0006           Description Lin
     C           KRSST     READE@BZRED0                  90*
     C                     ENDDO
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SURVGN    BEGSR
      *================================================================
      * Rtv Prd WHS w/AcctCo  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WHBTC3    WQSU01           Accounting Comp
      * Define keylist
     C           KRSSU     KLIST
     C                     KFLD           WQSU01           Accounting Comp
      * Setup key
     C                     Z-ADD#2AIC3    WQSU01           Accounting Comp
      * Establish starting position
     C           KRSSU     SETLL@ADREHQ                    *
     C           KRSSU     READE@ADREHQ                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0008           Production Ware
     C                     GOTO SUEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWHAOCD    YL0008           Production Ware
     C                     GOTO SUEXIT                     *QUIT
     C           KRSSU     READE@ADREHQ                  90*
     C                     ENDDO
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSV     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0001    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSV     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,002   W0RTN            *Return code
     C                     GOTO SVEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    P2I6ST           Allow Multi-Com
     C                     MOVELDRMPNA    P2MPNA           Default Printer
     C                     MOVELDRBCCD    P2BCCD           Salesperson Cod
     C                     Z-ADDDRAIC3    YL0009           Company Number
     C                     MOVELDRBUVN    WN0002           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSW     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0035    DTAJVN           User Profile Na
     C                     MOVELWL0036    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSW     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0037           Company Number
     C                     MOVELDTAJCD    WL0038           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         SXRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSX01           Application Cod
      * Define keylist
     C           KRSSX     KLIST
     C                     KFLD           WQSX01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSX01           Application Cod
     C                     MOVEL'OMS'     WQSX01           Application Cod
      * Establish starting position
     C           KRSSX     SETLL@DNRESF                    *
     C           KRSSX     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SYRVGN
     C                     END                             *FI
     C           KRSSX     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SXEXIT    ENDSR
      /EJECT
     CSR         SYRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSY01           Application Cod
      * Define keylist
     C           KRSSY     KLIST
     C                     KFLD           WQSY01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSY01           Application Cod
      * Establish starting position
     C           KRSSY     SETLL@DNRESF                    *
     C           KRSSY     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL@CN,002   W0RTN            *Return code
     C                     GOTO SYEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSY     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * ** 06/14/2012 RMC E2146 ALLOW ALL WAREHOUSES- about half of the c
      *   there. Added rtvs to accum numbers for all warhouses
      * ** 04/29/2011 slm Add the WW Kill/Plan Dsp
      * ** 07/07/2009 RMC FP1054 when reading the OD, exclude orders with
      * ** prod plan sts = "N" in the logical file select/omit
      * ** This will exclude CM/DM/+TR,OR for items that arent planned
      * ** 06/30/2009 LJB E00446
      * ** Change to exclude Chargebacks when accumulating ordered quanti
      * **  FP1054 4/15/09 status flag 10 = Y, then accum sched qty & wgt
      * **   else accum orderd qty and wt. with new PA, they need to see
      * ** 02/25/2009 FP1054 SLM REMOVE *  OUT Prt Prd Schedule      PV
      * ** Chg rtv to use the CTL for company and warehouse
      * ** 02/04/2009 FP1054 RMC  Chg parms going to poqjdfr, option 11
      * ** Chg rtv to use the CTL for company and warehouse
      * ** 11/21/2008 slm E00243 Add selection of the trim & belly
      * ** to production schedule report selecction f21
      * ** 04/14/2008 LJB FP1235
      * ** Add option to email the production schedule to distribution li
      * ** 03/03/2006 LJB
      * ** There are mixed usage of contexts in the retrieves. Some are
      * ** using PAR context, some CTL and some RCD. I changed all
      * ** retrieves to use the CTL context for Company Number and
      * ** Warehouse Code to maintain consistancy.
      * *
      * ** 08/31/2006 RMC PFS019 print new prod sched pla9pfr
      * ** 09/14/2006 RMC PFS019 put pgm name in print sched prompt
      * *
      * ** 09/01/2006 LJB L60831A  Pass the Co# and Whse code to
      * **   Product Availability
      * ** DLY029R 05/25/07 JRB Changed Co Num from hard coded to RCD
      * ** in 9=Edit BOM
      * *****
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
     C           *IN25     IFEQ '0'
      * Bypass when help done
     C                     SETOF                     94    *
     C           W0OVR0    IFEQ '1'
     C           W0OVR0    OREQ '0'
     C           *IN99     ANDEQ'0'
      * If override or no error
     C                     SETON                     94    *
     C           W0RR0     IFNE *ZERO
     C           W0RR0     IFGT ##RRMX
     C                     Z-ADD##RRMX    ##SFRC
     C                     ELSE
     C                     Z-ADDW0RR0     ##SFRC
     C                     END
     C                     END
     C                     Z-ADDW0ROW0    ZZCSRW
     C                     Z-ADDW0COL0    ZZCSCL
     C                     END
     C                     END
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C           ZINPOS    IFGE 03328
     C           ZINPOS    ANDLE06144
      * Cursor in the subfile record area
      * Reset cursor position to the basic (first) record for lookup
     C           W0CRW     SUB  13        W0CSRR  50
     C           03328     ADD  W0CCL     ZINPOS
      * Calculate rrn of the cursor position
     C                     ADD  ##SFRC    W0CSRR
     C                     ENDIF
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
     C           W0CFL     IFEQ *BLANK
     C                     Z-ADD0         W0CSRR
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
     C                     SETOF                     94    *
     C                     Z-ADD0         W0RR0   40
     C                     Z-ADD0         W0ROW0  30
     C                     Z-ADD0         W0COL0  30
     C                     MOVE '2'       W0OVR0  1
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD13        ZHSTRW  40
     C                     Z-ADD23        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           ZHCSRW    IFEQ 004
     C           ZHCSCL    ANDEQ076
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#CSVST'  YPMTFD           Print On Schedu
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              92    *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2AJCD           Warehouse Code
     C                     Z-ADD*ZERO     P2AIC3           Company Number
     C                     MOVEL*BLANK    P2DNCD           Application Cod
     C                     MOVEL*BLANK    P2DQCD           Enterprise Code
     C                     MOVEL*BLANK    P2DRCD           Enterprise Code
     C                     MOVEL*BLANK    P2BCCD           Salesperson Cod
     C                     MOVEL*BLANK    P2B8NA           System Date For
     C                     MOVEL*BLANK    P2AJVN           User Profile Na
     C                     MOVEL*BLANK    P2I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P2MPNA           Default Printer
     C                     MOVEL*BLANK    P2TAST           First Time Flag
     C                     MOVEL*BLANK    P2ADTX           Name
     C                     MOVEL*BLANK    P2BXTX           System Value Al
     C                     MOVEL*BLANK    P2WVST           Access Denied (
     C                     MOVEL*BLANK    P3WRST           PRT Printer Dev
     C                     MOVEL*BLANK    P3WSST           PRT Hold Output
     C                     MOVEL*BLANK    P3WTST           PRT Save Output
     C                     Z-ADD*ZERO     P3DYNB           PRT Number of C
     C                     MOVEL*BLANK    P3WUST           PRT Night Queue
     C                     MOVEL*BLANK    P3BVVN           PRT Night Queue
     C                     MOVEL*BLANK    P3BMVN           Program name US
     C                     MOVEL*BLANK    P3BWVN           Program Name$ U
     C                     MOVEL*BLANK    P3XFST           Display Prt Opt
     C                     MOVEL*BLANK    P4QKST           Display Flag
     C                     MOVEL*BLANK    P4WXST           Record Found US
     C                     MOVEL*BLANK    P4B8ST           Status - Y or N
     C                     MOVEL*BLANK    P4RYST           Report Type Sch
     C                     MOVEL*BLANK    P4SVST           Print On Schedu
     C                     MOVEL*BLANK    P4EXSX           Sel Value 1 USR
     C                     MOVEL*BLANK    P4E0SX           Sel Value 2 USR
     C                     MOVEL*BLANK    P4E1SX           Sel Value 3 USR
     C                     MOVEL*BLANK    P4LGSX           Sel Value 4 USR
     C                     MOVEL*BLANK    P4LHSX           Sel Value 5 USR
     C                     MOVEL*BLANK    P4Q1ST           Status Flag 1
     C                     MOVEL*BLANK    P4E2ST           Ord/Sch Sts USR
     C                     Z-ADD*ZERO     P4DOC7           Base Item Code
     C                     Z-ADD*ZERO     P5ELDT           Production Date
     C                     Z-ADD*ZERO     P5PIAD           PS Adjustment Q
     C                     Z-ADD*ZERO     P6DKCD           USR Item Code
     C                     Z-ADD*ZERO     P7A7NX           Count 2 USR
     C                     MOVEL*BLANK    P8TOTX           Prod Date Alpha
     C                     MOVEL*BLANK    P9VQSX           Email Selection
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field First Time Flag
     C                     MOVEL*BLANK    WUTAST  1
      * Define work field Warehouse Type
     C                     MOVEL*BLANK    WUWPST  2
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WADBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WABWC3           Shipping Compan
     C                     Z-ADD*ZERO     WABTC3           Accounting Comp
     C                     Z-ADD*ZERO     WABUC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WABVC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Item Structure Class Code
     C                     Z-ADD*ZERO     WURINB  30
      * Define work field Item Structure Group Code
     C                     Z-ADD*ZERO     WURHNB  30
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field Item Type Code
     C                     MOVEL*BLANK    WUN0CD  3
      * Define work field Default Warehouse
     C                     MOVEL*BLANK    WUQ1CD  3
      * Define work field Variety/Rendered/Cut
     C                     MOVEL*BLANK    WUXWST  1
      * Define work field Std Weight/Head (Var/Ren)
     C                     Z-ADD*ZERO     WUSWGH 112
      * Define work field Pieces Per Head
     C                     Z-ADD*ZERO     WUPPHE  70
      * Define work field Department Code
     C                     MOVEL*BLANK    WUR3CD  6
      * Define work field Group for Packaging
     C                     MOVEL*BLANK    WUSDCD  1
      * Define work field Seconds Item
     C                     MOVEL*BLANK    WUX5ST  1
      * Define work field Export/Domestic
     C                     MOVEL*BLANK    WUSUST  1
      * Define work field Fresh Inv Allocation Seq
     C                     MOVEL*BLANK    WUSYST  1
      * Define work field Fresh Sched As Ordered
     C                     MOVEL*BLANK    WUSZST  1
      * Define work field Frozen Inv Allocation Seq
     C                     MOVEL*BLANK    WUS1ST  1
      * Define work field Primal Group Code
     C                     MOVEL*BLANK    WUXRCD  6
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBHGCD           Item Code
     C                     Z-ADD*ZERO     WBAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WBAECS           Last Cost
     C                     Z-ADD*ZERO     WBBACS           Cost per Primar
     C                     Z-ADD*ZERO     WBBBCS           Cost per Pricin
     C                     Z-ADD*ZERO     WBCBPR           Revaluation Cos
     C                     Z-ADD*ZERO     WBGUDT           Revaluation Eff
     C                     Z-ADD*ZERO     WBCTPR           Last Revaluatio
     C                     Z-ADD*ZERO     WBG4DT           Last Revaluatio
     C                     Z-ADD*ZERO     WBBOWG           On Hand Weight
     C                     Z-ADD*ZERO     WBDDQT           On Hand U/M1 Su
     C                     Z-ADD*ZERO     WBDEQT           On Hand U/M2 Su
     C                     Z-ADD*ZERO     WBDFQT           On Hand U/M3 Su
     C                     Z-ADD*ZERO     WBHDQT           Quantity In Chi
     C                     Z-ADD*ZERO     WBHEQT           Weight In Chill
     C                     Z-ADD*ZERO     WBAJQT           Quantity Schedu
     C                     Z-ADD*ZERO     WBAQQT           Quantity on Sal
     C                     Z-ADD*ZERO     WBAUQT           Quantity on Pur
     C                     Z-ADD*ZERO     WBEMQT           Quantity on Tra
     C                     Z-ADD*ZERO     WBDOQT           Quantity Avail.
     C                     Z-ADD*ZERO     WBAKDT           Date of Last Or
     C                     Z-ADD*ZERO     WBANDT           Date of Last Sh
     C                     Z-ADD*ZERO     WBIDVA           Value of On Han
     C                     Z-ADD*ZERO     WBBZPC           Safety Allowanc
     C                     Z-ADD*ZERO     WBDGQT           Safety Allowanc
     C                     Z-ADD*ZERO     WBDIDT           Stock Out Date
     C                     Z-ADD*ZERO     WBBFDY           Lead Time - Las
     C                     Z-ADD*ZERO     WBDJDT           Lead Time - Dat
     C                     Z-ADD*ZERO     WBBGDY           Lead Time - Nex
     C                     Z-ADD*ZERO     WBDKDT           Lead Time - Dat
     C                     Z-ADD*ZERO     WBDJQT           Usage Qty per C
     C                     Z-ADD*ZERO     WBBNWG           Usage Weight pe
     C                     Z-ADD*ZERO     WBDLDT           Inventory Manag
     C                     Z-ADD*ZERO     WBDPQT           Minimum Quantit
     C                     Z-ADD*ZERO     WBDQQT           Maximum Quantit
     C                     Z-ADD*ZERO     WBDMDT           Last Physical C
     C                     Z-ADD*ZERO     WBAKC8           Vendor - Item/W
     C                     Z-ADD*ZERO     WBRINB           Item Structure
     C                     Z-ADD*ZERO     WBRHNB           Item Structure
     C                     Z-ADD*ZERO     WBRGNB           Item Structure
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field Weight Scheduled SUM
     C                     Z-ADD*ZERO     WUEEWG 112
      * Define work field Header Status
     C                     MOVEL*BLANK    WUGWST  1
      * Define work field Billing Activity Type
     C                     MOVEL*BLANK    WUOBST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCC4NB           Order Number
     C                     Z-ADD*ZERO     WCDPNB           Order Sequence
     C                     Z-ADD*ZERO     WCUENB           Order Secondary
     C                     Z-ADD*ZERO     WCHGCD           Item Code
     C                     Z-ADD*ZERO     WCBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WCCFC7           Order Group Cod
     C                     Z-ADD*ZERO     WCMAVA           Billing Detail
     C                     Z-ADD*ZERO     WCKDVA           Billing Detail
     C                     Z-ADD*ZERO     WCL8VA           Billing Detail
     C                     Z-ADD*ZERO     WCL9VA           Quantity to Sub
     C                     Z-ADD*ZERO     WCAYVA           Extended Amount
     C                     Z-ADD*ZERO     WCEXDT           Market Pricing
     C                     Z-ADD*ZERO     WCBZPR           Price Overage O
     C                     Z-ADD*ZERO     WCL6NB           Contract Number
     C                     Z-ADD*ZERO     WCGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WCR1NB           Rated Freight
     C                     Z-ADD*ZERO     WCAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WCD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WCCCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WCAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WCCBQT           Quantity Shippe
     C                     Z-ADD*ZERO     WCATWG           Weight Shipped
     C                     Z-ADD*ZERO     WCAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WCAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WCAKPR           Unit Price
     C                     Z-ADD*ZERO     WCALPR           Unit Price - Cr
     C                     Z-ADD*ZERO     WCAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WCAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WCA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WCA5DT           Requested Ship
     C                     Z-ADD*ZERO     WCAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WCGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WCRGNB           Item Structure
     C                     Z-ADD*ZERO     WCRHNB           Item Structure
     C                     Z-ADD*ZERO     WCRINB           Item Structure
     C                     Z-ADD*ZERO     WCCXDT           Date of Origina
     C                     Z-ADD*ZERO     WCDUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WCB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WCA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WCNTDT           Warehouse Palle
     C                     Z-ADD*ZERO     WCNUDT           Consumed Item C
     C                     Z-ADD*ZERO     WCNVDT           Deadline Depart
     C                     Z-ADD*ZERO     WCNWDT           OD Price Type R
     C                     Z-ADD*ZERO     WCNXDT           OD Unused Date
     C                     Z-ADD*ZERO     WCBUTM           Deadline Depart
     C                     Z-ADD*ZERO     WCBVTM           Price Code
     C                     Z-ADD*ZERO     WCBWTM           Maximum Net Wei
     C                     Z-ADD*ZERO     WCBXTM           Substitution Li
     C                     Z-ADD*ZERO     WCBYTM           Max Qty to sche
     C                     Z-ADD*ZERO     WCH5NX           Warehouse Palle
     C                     Z-ADD*ZERO     WCH6NX           Warehouse Avg P
     C                     Z-ADD*ZERO     WCH7NX           OD Item Target
     C                     Z-ADD*ZERO     WCH8NX           OD Minimum Unit
     C                     Z-ADD*ZERO     WCH9NX           OD Maximum Unit
     C                     Z-ADD*ZERO     WCDVPR           Order Gate Pric
     C                     Z-ADD*ZERO     WCDWPR           OD Ceiling Pric
     C                     Z-ADD*ZERO     WCDXPR           OD Unused Prc 3
     C                     Z-ADD*ZERO     WCDYPR           OD Unused Prc 4
     C                     Z-ADD*ZERO     WCDZPR           OD Unused Prc 5
     C                     Z-ADD*ZERO     WCGSPR           OD Unused Prc 6
     C                     Z-ADD*ZERO     WCGTPR           OD Unused Prc 7
     C                     Z-ADD*ZERO     WCGUPR           OD Unused Prc 8
     C                     Z-ADD*ZERO     WCPEWG           Weight Amount E
     C                     Z-ADD*ZERO     WCRINY           Item Age Days
     C                     Z-ADD*ZERO     WCTIDT           Production Ovr
     C                     Z-ADD*ZERO     WCTJDT           Production Ovr
     C                     Z-ADD*ZERO     WCTKDT           OD Market Begin
     C                     Z-ADD*ZERO     WCTLDT           OD Market Endin
     C                     Z-ADD*ZERO     WCTMDT           OD UnUsed Date
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field USR First Position
     C                     MOVEL*BLANK    WUI3ST  1
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Warehouse Description
     C                     MOVEL*BLANK    WUF8NA 30
      * Define work field Return Code Usr
     C                     MOVEL*BLANK    WUH3TX  7
      * Define work field Production Type
     C                     MOVEL*BLANK    WUV5ST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WGAIC3           Company Number
     C                     Z-ADD*ZERO     WGHGCD           Item Code
     C                     Z-ADD*ZERO     WGAWPC           Conversion Fact
     C                     Z-ADD*ZERO     WGAXPC           Conversion Fact
     C                     Z-ADD*ZERO     WGAIWG           Unit Weight
     C                     Z-ADD*ZERO     WGCZWG           Minimum Weight
     C                     Z-ADD*ZERO     WGC0WG           Maximum Weight
     C                     Z-ADD*ZERO     WGURTN           Number Cases On
     C                     Z-ADD*ZERO     WGAJC8           Vendor - Item D
     C                     Z-ADD*ZERO     WGRINB           Item Structure
     C                     Z-ADD*ZERO     WGRHNB           Item Structure
     C                     Z-ADD*ZERO     WGRGNB           Item Structure
     C                     Z-ADD*ZERO     WGTFNB           Transportation
     C                     Z-ADD*ZERO     WGTMVA           Maximum Audit V
     C                     Z-ADD*ZERO     WGTNVA           Minimum Audit V
     C                     Z-ADD*ZERO     WGBLPR           Market Overage
     C                     Z-ADD*ZERO     WGBMPR           Standard Overag
     C                     Z-ADD*ZERO     WGCMCO           Item Pricing Co
     C                     Z-ADD*ZERO     WGCHTM           Fresh Chilling
     C                     Z-ADD*ZERO     WGSWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WGPPHE           Pieces Per Head
     C                     Z-ADD*ZERO     WGICN1           Item Category N
     C                     Z-ADD*ZERO     WGICN2           Item Category N
     C                     Z-ADD*ZERO     WGV2NB           Item Category N
     C                     Z-ADD*ZERO     WGITCN           Item Category N
     C                     Z-ADD*ZERO     WGITC5           Item Category N
     C                     Z-ADD*ZERO     WGICN6           Item Category N
     C                     Z-ADD*ZERO     WGICN7           Item Category N
     C                     Z-ADD*ZERO     WGICN8           Item Category N
     C                     Z-ADD*ZERO     WGICN9           Item Category N
     C                     Z-ADD*ZERO     WGICN0           Item Category N
     C                     Z-ADD*ZERO     WGSFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     WGA3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     WGSJNB           Production Lead
     C                     Z-ADD*ZERO     WGSKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WGSLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WGSMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WGCFNB           PM Pounds per H
     C                     Z-ADD*ZERO     WGCGNB           Item Frt Overag
     C                     Z-ADD*ZERO     WGILNB           Packages per ca
     C                     Z-ADD*ZERO     WGCHNB           Use/Freeze/Sell
     C                     Z-ADD*ZERO     WGCINB           PM Batch Size
     C                     Z-ADD*ZERO     WGCJNB           Package Level s
     C                     Z-ADD*ZERO     WGCMNB           Partial Item Co
     C                     Z-ADD*ZERO     WGCNNB           WIP Item Code
     C                     Z-ADD*ZERO     WGCRNB           WIP Reject Code
     C                     Z-ADD*ZERO     WGCSNB           Std Costing Uni
     C                     Z-ADD*ZERO     WGCVNB           FP Std Green We
     C                     Z-ADD*ZERO     WGCWNB           PM Standard LBS
     C                     Z-ADD*ZERO     WGCXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     WGCZNB           PM Formula LBS/
     C                     Z-ADD*ZERO     WGC0NB           PM Finished LBS
     C                     Z-ADD*ZERO     WGB4NB           PM R/M Type Cod
     C                     Z-ADD*ZERO     WGB5NB           PM Line Number
     C                     Z-ADD*ZERO     WGBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WGBJNB           Bags Per Unit
     C                     Z-ADD*ZERO     WGF5WG           Item Target Pri
     C                     Z-ADD*ZERO     WGF6WG           Minimum Piece W
     C                     Z-ADD*ZERO     WGF7WG           Maximum Piece W
     C                     Z-ADD*ZERO     WGBLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     WGBNNB           Production Qty
     C                     Z-ADD*ZERO     WGAATM           Job Time
     C                     Z-ADD*ZERO     WGAXDT           Job Date
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize *SET CURSOR data
     C                     MOVE 'Y'       YSETCS  1
     C                     EXSR Y9CLR
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WJ03 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      * Define local variables for subroutine SARVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003  1
     C                     MOVEL*BLANK    WL0004  1
      * Define local variables for subroutine SLRVGN.
     C                     Z-ADD*ZERO     WL0005  30
     C                     Z-ADD*ZERO     WL0006  70
     C                     MOVEL*BLANK    WL0007  3
     C                     Z-ADD*ZERO     WL0008  70
     C                     Z-ADD*ZERO     WL0009 112
     C                     Z-ADD*ZERO     WL0010 112
     C                     MOVEL*BLANK    WL0011  1
      * Define local variables for subroutine SMRVGN.
     C                     Z-ADD*ZERO     WL0012  30
     C                     Z-ADD*ZERO     WL0013  70
     C                     MOVEL*BLANK    WL0014  1
     C                     MOVEL*BLANK    WL0015  1
      * Define local variables for subroutine SNRVGN.
     C                     Z-ADD*ZERO     WL0016  30
     C                     Z-ADD*ZERO     WL0017  70
     C                     MOVEL*BLANK    WL0018  3
     C                     Z-ADD*ZERO     WL0019  70
     C                     Z-ADD*ZERO     WL0020 112
     C                     Z-ADD*ZERO     WL0021 112
     C                     MOVEL*BLANK    WL0022  1
      * Define local variables for subroutine SORVGN.
     C                     Z-ADD*ZERO     WL0023  30
     C                     Z-ADD*ZERO     WL0024  70
     C                     Z-ADD*ZERO     WL0025  70
     C                     Z-ADD*ZERO     WL0026 112
     C                     Z-ADD*ZERO     WL0027 112
     C                     MOVEL*BLANK    WL0028  1
      * Define local variables for subroutine SPRVGN.
     C                     Z-ADD*ZERO     WL0029  30
     C                     Z-ADD*ZERO     WL0030  70
     C                     Z-ADD*ZERO     WL0031  70
     C                     Z-ADD*ZERO     WL0032 112
     C                     Z-ADD*ZERO     WL0033 112
     C                     MOVEL*BLANK    WL0034  1
      * Define local variables for subroutine SWRVGN.
     C                     MOVEL*BLANK    WL0035 10
     C                     MOVEL*BLANK    WL0036  6
     C                     Z-ADD*ZERO     WL0037  30
     C                     MOVEL*BLANK    WL0038  3
      * Define local work field Kill Day Status
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Status Flag 10 Y/N
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0003  30
      * Define local work field PRT Night Queue Run Sts
     C                     MOVEL*BLANK    YL0004  1
      * Define local work field *Initial call
     C                     MOVEL*BLANK    YL0005  1
      * Define local work field Description Line One
     C                     MOVEL*BLANK    YL0006 30
      * Define local work field Component Item Code
     C                     Z-ADD*ZERO     YL0007  70
      * Define local work field Production Warehouse
     C                     MOVEL*BLANK    YL0008  3
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0009  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0010  3
      * Define local work field CMDKEY Line 1 130 Char
     C                     MOVEL*BLANK    YL0011130
      * Define local work field CMDKEY Line 2 130 Char
     C                     MOVEL*BLANK    YL0012130
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD11        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      *
     C                     MOVEL*BLANK    WN0001 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0001           User Profile Na
      *
     C                     MOVEL*BLANK    WN0002 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SVRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,002                    *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0004           User Profile Na
     C                     MOVEL'OMS'     ZA0005           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL@CN,005   P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0002    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0001    WL0035    P      User Profile Na
     C                     MOVEL'OMS'     WL0036    P      Application Cod
     C                     EXSR SWRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0037    P2AIC3           Company Number
     C                     MOVELWL0038    YL0010    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0002    WL0035    P      User Profile Na
     C                     MOVEL'OMS'     WL0036    P      Application Cod
     C                     EXSR SWRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0037    P2AIC3           Company Number
     C                     MOVELWL0038    YL0010    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0010    P2AJCD           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0006           User Profile Na
     C                     MOVEL'OMS'     ZA0007           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL@CN,005   P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0009    IFNE *ZERO                      *IF
     C                     Z-ADDYL0009    P2AIC3           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0010    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C           P2AJCD    PARM *BLANK    WQ0061  3        Warehouse Code
     C                     PARM YL0009    WQ0062  30       Shipping Compan
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SXRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL'Y'       WUTAST           First Time Flag
     C                     Z-ADD99999     W0SLM            *Scan limit
      * ***** Change Log and Comments
     C                     EXSR UASUBR                     ***** Change Lo
      * Format Command Key Text
      * Setup message data for message
      * Retrieve message RTV WW Whs Inv/Ord Comp1
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR4402' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C           YL0011    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Setup message data for message
      * Retrieve message RTV WW Whs Inv/Ord Comp2
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR4403' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C           YL0012    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Screen 132 Wide 2 CMDLN - *Standard header/footer  * 
     C                     MOVELYL0011    ##VIT1
     C                     MOVELYL0012    ##VJT1
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** W0BEG
01043010490110001299013050155501561
01612025650263002850028590286802877
02886030770333003333033410336403373
033820339103400034070341803428
** W0END
01045010780110001301013340155701590
01618025700263702857028660287502884
02893030830333103339033600336803377
033860339503404034130342303435
** W0NAM
V2AIC3    #CAPTX    #CSVST    #2V4CD    #CNVNA    #CAJCD    #CF8NA
VCDOC7    #CIXTX    VCJFDT    VCFFDT    VCE1DT    VCE2DT    VCE3DT
VCE4DT    V2HGCD    #1SEL     V1HGCD    #RGENA    #RLKQT    #RLLQT
#RLVQT    #RMOQT    #RMPQT    #RH1QT    #RLEQT    #RP2NX
** @CN
00001 1111111
00002 Y2U0005
00003 USR0752
00004 Production Schedule
00005 Y2U9999
