     h option(*SRCSTMT:*NODEBUGIO)
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Resource Optimization
      * PROGRAM:     RO226
      * TITLE:       Byproduct Mix Detail/Summary  (WP only)
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     08/06/07
      *
      * FUNCTION:    This program creates the "detail" and "summary" records for a
      *              Week for the TF Fees & Payments System in the files:
      *                    1) TF Byproduct Mix Summary
      *                    2) Byproduct Detail
      *
      *               Only 'Work in Process' items are processed in this program.
      *
      ***************************************************************************************
      * MODIFICATIONS:
      ***************************************************************************************
      * DATE      PROGRAMMER
      *
      * 10/23/07  Alice Brownfield
      *           Changed to add special processing for WIP Boneless SRLN's
      *
      * 12/26/07  Alice Brownfield
      *           minor changes when we combined the Credit Item Meat Costs with the
      *           Byproduct MIX processing/files.
      *
      * 06/05/08  LeAnne Ramsey
      *           Changed program name.
      *
      * 06/06/08  LeAnne Ramsey
      *           Recompile only. New fields (Ingredient and Other Cost) added to
      *           multiple files.
      *
      * 06/19/08  LeAnne Ramsey
      *           Changed logic to populate our new fields.
      *
      * 06/26/08  LeAnne Ramsey
      *           Changed logic to use our new "Summary Level".
      *           Removed file ROP124 and its logic; we are eliminating this file.
      *
      * 08/14/08  LeAnne Ramsey
      *           Changed calc of YDSTRPAM-SBF CoOwned Transfer Product Cost Amount to
      *           handle CoOwned when Triumph is the Producing Company.
      *
      * 11/20/08  LeAnne Ramsey
      *           As a prep for synchronizing the TFS and Meat Cost LDAs, we
      *           removed the unused LDA fields.
      *
      * 11/21/08  LeAnne Ramsey
      *           As part of synchronizing the LDAs between the TFS Margin Adjustment Close
      *           and the Meat Costing, we changed the LDA positions.
      *
      * 04/02/09  LeAnne Ramsey
      *           Add logic to populate new field 'Producing Company' in the Byproduct Detail
      *           file.
      *
      * 02/01/11  LeAnne Ramsey (E1298)
      *           Removed file ROP124-TF ByProduct Mix Exceptions and its logic.
      *           We are no longer building weekly records in ROP124..although we will keep it
      *           for historical reporting.
      *           We had a subroutine in this program ($blsrln) that used this file. BUT, no
      *           WP items hade gone thru that code since 2008. Damon G. says that they are
      *           no longer doing the WPs that way. So, I removed the subroutine.
      *
      * 11/15/12  LeAnne Ramsey (E2337)
      *           Recompile only.
      *           Rose had to increase the price/cwt field sizes in PPBTCPP-Inventory
      *           Value file and PPBSCPP-Inventory Stock Closing.
      /EJECT
      ***************************************************************************************
      * FILE SPECIFICATION
      ***************************************************************************************
      *
     fombyrelc  if   e           k disk
      *  Item default
      *
      *
     fomfarel1  if   e           k disk
      *  Product class
      *
      *
     Fppaorel1  if   e           k disk
      *  TF margin adjustment group detail
      *  (records selected/keyed with Open Query)
      *
      *
     Fppbscpl3  if   e           k disk
      *    Inventory stock closing
      *
      *
     frop012    if   e           k disk
      *  Item control data
      *
      *
     frol121e   if   e           k disk    rename(ysrec:ysrece) prefix(p1)
      *  TF Byproduct mix summary
      *
      *
     frop121    o    e           k disk
      *  TF Byproduct mix summary
      *
      *
     frol122g   uf a e           k disk
      *  Byproduct detail
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      * Parms
      *
     D xxcgcd          s                   like(ydcgcd)
     D xxtfclcd        s                   like(ydtfclcd)
     D xxmixgrp        s                   like(ydmixgrp)
     D xxistycd        s                   like(ydistycd)
     D xxisgrcd        s                   like(ydisgrcd)
     D xxisclcd        s                   like(ydisclcd)
     D xxsumlev        s                   like(ydsumlev)
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control/Save fields
      *
     D first           s              1    inz('Y')
     D svsumlev        s                   like(ydsumlev)
      *
      *
      * Workfields
      *
     D wktown          s              9  6
     D wksown          s              9  6
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldwedt                29     36  0
      *
     D  ldcono                82     84  0
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      **********************************************************************************
      * Mainline
      **********************************************************************************
      *
      * STEP 1: Write Byproduct Detail records for the WPs
      *
     C                   exsr      $step1
      *
      * STEP 2: Write Byproduct Mix Summary records for Detail records just written
      *
     C                   exsr      $step2
      *
     C                   seton                                        lr
      /eject
      *-----------------------------------------------------------------------------------
      * Step 1: Detail
      *-----------------------------------------------------------------------------------
      *
     C     $step1        begsr
      *
      * Process each record in the TF Margin Adjustment Group Detail file selected by
      * the Open Query: Include in Mix = Yes
      *                 TF Class Group = BP (ByProduct)
      *
     C                   dou       *in90 = *on                                  Do detail
     C                   read      ppaorel1                               90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Detail processing:
      *    1) Retrieve all Active Non-Exempt WP Items for this Classification.
      *    2) Write a Byproduct Detail record for each record that has
      *       Produced Pounds
      *
     C     key01         setll     ombyrelc
     C                   dou       *in91 = *on                                  Do items
     C     key01         reade     ombyrelc                               91
     C                   if        *in91 = *off and
     C                             byvsst = 'A' and
     C                             bys9st <> 'EP' and
     C                             byn0cd = 'WP '
      *
      * Accumulate Produced Pounds.
      * If there are Produced Pounds, write a Detail record
      *
     C                   exsr      $pounds
     C                   if        ydspulb <> 0 or ydtpulb <> 0
     C                   exsr      $wrt122
     C                   endif
      *
     C                   endif
     C                   enddo                                                  Do items
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do detail
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Write an Item record to the Byproduct Detail file
      *-----------------------------------------------------------------------------------
      *
     C     $wrt122       begsr
      *
      * LDA values
     C                   z-add     ldwedt        ydwedt
      *
      * Hardcoded values
     C                   z-add     100           ydmupc
     C                   z-add     100           ydsypc
     C                   z-add     0             ydpumppc
     C                   move      no            ydexfl
      * Item default
     C                   move      bytcst        ydtfclcd
     C                   z-add     byrgnb        ydistycd
     C                   z-add     byrhnb        ydisgrcd
     C                   z-add     byrinb        ydisclcd
     C                   z-add     byhgcd        yditcd
     C                   movel     byn0cd        ydittycd
      *
      * TF margin adjustment group detail
      *
     C                   move      aosvsx        ydtfcgcd
     C                   move      aohfaa        ydcgcd
     C                   move      aoi1t1        ydmixgrp
     C                   move      aoswsx        ydmixfl
     C                   z-add     aoggpc        ydtownpc
      *
     C                   if        ydtownpc <> 0                                If CoOwn %
     C                   select
     C                   when      aod3tx = 'S'
     C                   eval      ydprdcmp = 'SBF'
      *
     C                   when      aod3tx = 'T'
     C                   eval      ydprdcmp = 'TF '
     C                   endsl
     C                   endif                                                  If CoOwn %
      *
      * Retrieve Description for Item Structure Class Code.
      *
     C     ydisclcd      chain     omfarel1                           92
     C                   if        *in92 = *off
     C                   eval      ydisclds = fadetx
     C                   endif
      *
      * Call generic program to retrieve the Summary Level
      *
     C                   call      'RO801'
     C                   parm      ydcgcd        xxcgcd
     C                   parm      ydtfclcd      xxtfclcd
     C                   parm      ydistycd      xxistycd
     C                   parm      ydisgrcd      xxisgrcd
     C                   parm      ydisclcd      xxisclcd
     C                   parm      ydmixgrp      xxmixgrp
     C     ydsumlev      parm      *blank        xxsumlev
      *
      *
      * Populate the Meat Cost Sub-Group code.  All items will have the same
      * Sub-Group code as the MC Group Code other than the SRLN items.  We use
      * the Sub-Group code to designate if the SRLN is BNIN or BNLS.
      * If the IS Structure Class is 850 it is considered BNIN, otherwise
      * it is BNLS.
      *
     C                   eval      ydsgcd = ydcgcd
      *
     C                   if        ydcgcd = 'SRLN'
     C                   if        ydisclcd = 850
     C                   eval      ydsgcd = 'BNIN'
     C                   else
     C                   eval      ydsgcd = 'BNLS'
     C                   endif
     C                   endif
      *
      * Retrieve price
     C                   exsr      $price
      *
      * Calculate Amounts:
      *    1) Produced Value
      *    2) Net Produced Value
      *
      *            SBF:
     C                   eval      ydspuam  = ydspulb * ydpupr
     C                   eval      ydsnpuam = ydspulb * ydnpupr
      *            TF:
     C                   eval      ydtpuam  = ydtpulb * ydpupr
     C                   eval      ydtnpuam = ydtpulb * ydnpupr
      *           AGG:
     C                   eval      ydapuam  = ydspuam + ydtpuam
     C                   eval      ydanpuam = ydsnpuam + ydtnpuam
      *
      * Calculate SBF CoOwned Transfer Product Cost Amount
      *
     C                   if        ydtownpc <> 0                                If CoOwn %
     C                   eval      wktown = ydtownpc / 100
     C                   eval      wksown = 1 - wktown
      *
     C                   select
     C                   when      ydprdcmp = 'SBF'
     C                   eval      ydstrpam = ydspuam * wktown
      *
     C                   when      ydprdcmp = 'TF '
     C                   eval      ydstrpam = (ydtpuam * wksown) * -1
     C                   endsl
     C                   endif                                                  If CoOwn%
      *
      *
     C                   write     ydrec
     C                   clear                   ydrec
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------------
      * Retrieve a Price per Pound for the Detail record
      *-----------------------------------------------------------------------------------------
      *
     C     $price        begsr
      *
      * For WIPs, we will populate both:
      *           1) Produced Price/LB
      *           2) Net Produced Price/LB
      * With:
      *           1) Aggregate Net Produced Price/Lb from the Companion FG summary record or
      *           2) The override price from the Item Control Data
      *
      * Retrieve the companion FG Summary record using a key of:
      *  1) WeekEnding Date
      *  2) Summary Level
      *
     C     key04         chain     rol121e                            92
     C                   if        *in92 = *on                                  If no FG
     C                   move      yes           ydsafl
     C                   move      yes           yssafl
     C                   else
     C                   move      no            ydsafl
     C                   move      no            yssafl
     C                   z-add     p1ysanpupr    ydpupr
     C                   z-add     p1ysanpupr    ydnpupr
     C                   endif                                                  If no FG
      *
      * You may/may not have hit a companion FG record. Even if we had a
      * companion FG, we will override with an Item's override price--if
      * it has one.
      *
     C     key03         chain     rop012                             92
     C                   if        *in92 = *off and
     C                             icdocd = 'OVR'
     C                   z-add     icdobspr      ydpupr
     C                   z-add     icdobspr      ydnpupr
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Accumulate pounds for the Week/Item for the Detail record
      *---------------------------------------------------------------
      *
     C     $pounds       begsr
      *
      * Process all records in the Inventory Stock Closing file for this:
      *      Week-ending date
      *      Item
      *
     C     key02         setll     ppbscpl3
      *
     C                   dou       *in93 = *on                                  Do pounds
     C     key02         reade     ppbscpl3                               93
     C                   if        *in93 = *off                                 If not EOF
      *
      * Accumulate by Company:
      *      produced pounds   using ISC Unused Pounds 1
      *
      * Seaboard
     C                   select
     C                   when      bsb2c3 = 360 and byp3st = 'S'
     C                   add       bsm6wg        ydspulb
     C                   add       bsm6wg        ydapulb
      * Triumph
     C                   when      bsb2c3 = 960 and byp3st = 'T'
     C                   add       bsm6wg        ydtpulb
     C                   add       bsm6wg        ydapulb
     C                   endsl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do pounds
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Step 2: Summary
      *-----------------------------------------------------------------------------------
      *
     C     $step2        begsr
      *
      * Process each WP record in the ByProduct Detail file for this Week.
      *
     C     ldwedt        setll     rol122g
     C                   dou       *in90 = *on                                  Do summary
     C     ldwedt        reade     rol122g                                90
     C                   if        *in90 = *off and                             If not EOF
     C                             ydittycd = 'WP'
      *
      * Control break
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   exsr      $directmap
      *
     C                   when      ydsumlev <> svsumlev
     C                   exsr      $wrt121
     C                   exsr      $directmap
     C                   endsl
      *
      * Detail processing
     C                   exsr      $accum
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do summary
      *
      * Write out last summary record
      *
     C                   if        first = no
     C                   exsr      $wrt121
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Accumulate Detail Record values for the Summary Record
      *-----------------------------------------------------------------------------------
      *
     C     $accum        begsr
      *
      * Produced Pounds
     C                   add       ydspulb       ysspulb
     C                   add       ydtpulb       ystpulb
     C                   add       ydapulb       ysapulb
      *
      * Produced Value Amount
      *
     C                   add       ydspuam       ysspuam
     C                   add       ydtpuam       ystpuam
     C                   add       ydapuam       ysapuam
      *
      * Net Produced Value Amount
      *
     C                   add       ydsnpuam      yssnpuam
     C                   add       ydtnpuam      ystnpuam
     C                   add       ydanpuam      ysanpuam
      *
      * SBF CoOwned Transfer Product Cost Amount
      *
     C                   add       ydstrpam      ysstrpam
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Move fields that are a direct map from the Detail to the Summary Record
      *-----------------------------------------------------------------------------------
      *
     C     $directmap    begsr
      *
     C                   z-add     ydwedt        yswedt
     C                   move      ydtfclcd      ystfclcd
     C                   z-add     ydistycd      ysistycd
     C                   z-add     ydisgrcd      ysisgrcd
     C                   z-add     ydisclcd      ysisclcd
     C                   move      ydisclds      ysisclds
      *
     C                   move      ydcgcd        yscgcd
     C                   move      ydsgcd        yssgcd
     C                   move      ydittycd      ysittycd
     C                   move      ydmixgrp      ysmixgrp
     C                   move      ydsafl        yssafl
     C                   move      ydsumlev      yssumlev
      *
      * Save break field
     C                   move      ydsumlev      svsumlev
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Write a record to the TF Byproduct Mix Summary file
      *-----------------------------------------------------------------------------------
      *
     C     $wrt121       begsr
      *
     C                   z-add     ldwedt        yswedt
     C                   move      'WP'          ysittycd
      *
      * Calculate:
      *  1) Produced Price/LB
      *  2) Net Produced Price/LB
      *
     C                   if        ysapulb <> 0
     C                   eval(h)   ysapupr  = ysapuam / ysapulb
     C                   eval(h)   ysanpupr = ysanpuam / ysapulb
     C                   endif
      *
     C                   if        ysspulb <> 0
     C                   eval(h)   ysspupr  = ysspuam / ysspulb
     C                   eval(h)   yssnpupr = yssnpuam / ysspulb
     C                   endif
      *
     C                   if        ystpulb <> 0
     C                   eval(h)   ystpupr  = ystpuam / ystpulb
     C                   eval(h)   ystnpupr = ystnpuam / ystpulb
     C                   endif
      *
      * Write/clear the Summary record
      *
     C                   write     ysrec
     C                   clear                   ysrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    aoflaa
     C                   kfld                    aorgnb
     C                   kfld                    aorhnb
     C                   kfld                    aorinb
      *
     C     key02         klist
     C                   kfld                    ldwedt
     C                   kfld                    byhgcd
      *
     C     key03         klist
     C                   kfld                    ldcono
     C                   kfld                    ldwedt
     C                   kfld                    yditcd
      *
     C     key04         klist
     C                   kfld                    ldwedt
     C                   kfld                    ydsumlev
      *
     C                   endsr
      /eject
