// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDZ2XFR
// ?Date: 14.08.2025 Time: 03:30:47
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?This routine will convert a Price which had previously been
//?converted to CWT back to Pricing U/M Price.
//?It will first convert the CWT Price to Primary U/M Price
//?and then convert from Primary U/M Price to Pricing U/M Price
EXECUTE FUNCTION(RTV Item Price Struct  RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1230472;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.UOM_Primary);
PARAMETER(PAR.Conversion_Factor_1);
PARAMETER(PAR.Operation_Factor_1);
PARAMETER(PAR.UOM_Second);
PARAMETER(PAR.Conversion_Factor_2);
PARAMETER(PAR.Operation_Factor_2);
PARAMETER(PAR.UOM_Third);
PARAMETER(PAR.UOM_Pricing);
PARAMETER(PAR.Unit_Weight);
PARAMETER(WRK.Market_Overage);
PARAMETER(WRK.Standard_Overage_Underage);
PARAMETER(WRK.Commodity_Price_Group);
PARAMETER(WRK.Item_Pricing_Operation);
PARAMETER(WRK.Item_Pricing_Constant);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PAR.U/M - Pricing is Hundred Weight
IF PAR.UOM_Pricing = 'CW';

// WRK.Price Adjustment Amount = PAR.Unit Price
WRK.Price_Adjustment_Amount = PAR.Unit_Price;

// IF *OTHERWISE
IF *OTHERWISE;

//?Calculate from Hundred Weight to Primary U/M(Selling) Price
CASE;

// IF PAR.Unit Weight NE WRK.ZERO
IF PAR.Unit_Weight <> WRK.ZERO;

// WRK.Pricing Work Quantity 1 = CON.100 / PAR.Unit Weight *
WRK.Pricing_Work_Quantity_1 = 100 / PAR.Unit_Weight;

CASE;

// IF PAR.Unit Price is Not Zeros
IF PAR.Unit_Price <> *ZERO;

// WRK.Price Adjustment Amount = PAR.Unit Price / WRK.Pricing Work Quantity 1 *Roun
WRK.Price_Adjustment_Amount = PAR.Unit_Price / WRK.Pricing_Work_Quantity_1 'H';

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Price Adjustment Amount = PAR.Unit Price
WRK.Price_Adjustment_Amount = PAR.Unit_Price;

ENDIF;

ENDIF;

ENDIF;

//?Calculate from Primary U/M(Selling) Price to Pricing U/M Price
CASE;

// IF WRK.Price Adjustment Amount NE WRK.ZERO
IF WRK.Price_Adjustment_Amount <> WRK.ZERO;

CASE;

// IF PAR.U/M - Pricing is Pounds
IF PAR.UOM_Pricing = 'LB';

// LCL.U/M - Primary = PAR.U/M - Primary
LCL.UOM_Primary = PAR.UOM_Primary;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.U/M - Primary = PAR.U/M - Pricing
LCL.UOM_Primary = PAR.UOM_Pricing;

ENDIF;

// Call program CLC Convert Price Qtys XF.
CALL PROGRAM(CLC Convert Price Qtys XF) ('PDKGXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(LCL.UOM_Primary);
PARAMETER(PAR.Price_based_on_U_M1_S);
PARAMETER(PAR.Price_based_on_U_M2_S);
PARAMETER(PAR.Price_based_on_U_M3_S);
PARAMETER(WRK.Price_Adjustment_Amount);

//?If Pricing U/M = Primary U/M, move Price 1 to Parm
CASE;

// IF PAR.U/M - Pricing EQ PAR.U/M - Primary
IF PAR.UOM_Pricing = PAR.UOM_Primary;

// PAR.Price Adjustment Amount = PAR.Price based on U/M1 S
PAR.Price_Adjustment_Amount = PAR.Price_based_on_U_M1_S;

ENDIF;

//?If Pricing U/M = Second U/M, move Price 2 to Parm
CASE;

// IF PAR.U/M - Pricing EQ PAR.U/M - Second
IF PAR.UOM_Pricing = PAR.UOM_Second;

// PAR.Price Adjustment Amount = PAR.Price based on U/M2 S
PAR.Price_Adjustment_Amount = PAR.Price_based_on_U_M2_S;

ENDIF;

//?If Pricing U/M = Third U/M, move Price 3 to Parm
CASE;

// IF PAR.U/M - Pricing EQ PAR.U/M - Third
IF PAR.UOM_Pricing = PAR.UOM_Third;

// PAR.Price Adjustment Amount = PAR.Price based on U/M3 S
PAR.Price_Adjustment_Amount = PAR.Price_based_on_U_M3_S;

ENDIF;

ENDIF;

