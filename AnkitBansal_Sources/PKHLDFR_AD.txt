// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKHLDFR
// ?Date: 14.08.2025 Time: 02:49:35
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Number
ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.Company_Number_USR);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

//?USER: Initialize subfile control

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// CTL.RS Record Status = CND.Active
CTL.RS_Record_Status = 'A';

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

ENDIF;

//?USER: Initialize subfile record from DBF record

// RCD.CMP Effect Kill Date = JOB.*Job date
RCD.CMP_Effect_Purchase_Date = JOB.*Job_date;

EXECUTE FUNCTION(Rtv Carcass Merit Prog RT) TYPE(RTVOBJ) FILE(PLBPCPP)          AB1316570;
PARAMETER(RCD.CMP_Program_Code);
PARAMETER(RCD.CMP_Effect_Purchase_Date);
PARAMETER(RCD.CMP_Commodity_Market);
PARAMETER(RCD.CMP_Commodity_Group);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF PAR.CMP Effect Kill Date GE DB1.CMP Effect Kill Date
 IF PAR.CMP_Effect_Purchase_Date >= DB1.CMP_Effect_Purchase_Date;

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

 // IF PAR.CMP Effect Kill Date LT DB1.CMP Effect Kill Date
 IF PAR.CMP_Effect_Purchase_Date < DB1.CMP_Effect_Purchase_Date;

 ENDIF;

}


//?USER: Process subfile control (Pre-confirm)

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?F6=Create
CASE;

// IF CTL.*CMD key is CF06
IF CTL.*CMD_key = '06';

// Call program Edt Carc Merit Pgm    E1.
CALL PROGRAM(Edt Carc Merit Pgm    E1) ('PKHGE1R');
PARAMETER(*BLANK);

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Defer_confirm = 'N';

ENDIF;

//?F21=Print List
CASE;

// IF CTL.*CMD key is Print List
IF CTL.*CMD_key = '21';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Print CMP List');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Execute command - 'SBM Prt CMP List'
EXECUTE COMMAND(PRK0313);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(CTL.RS_Record_Status);
PARAMETER(PAR.Oms_System_Value_Alpha);

ENDIF;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?F22=Competitors Commodity
CASE;

// IF CTL.*CMD key is CF22
IF CTL.*CMD_key = '22';

// Call program Edt Competitors Comm   E1.
CALL PROGRAM(Edt Competitors Comm   E1) ('PKXTE1R');
PARAMETER(00001);
PARAMETER(CTL.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?Option 2 EDIT
CASE;

// IF RCD.*SFLSEL is *Revise request
IF RCD.*SFLSEL = '2'/'2';

// Call program Edt Carc Merit Pgm    E1.
CALL PROGRAM(Edt Carc Merit Pgm    E1) ('PKHGE1R');
PARAMETER(RCD.CMP_Program_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?3=Copy Carcass Merit Pgm
CASE;

// IF RCD.*SFLSEL is CPY CARCASS MERIT PGM
IF RCD.*SFLSEL = '3'/'3';

// Call program Cpy Carc Merit Pgm     PV.
CALL PROGRAM(Cpy Carc Merit Pgm     PV) ('PKKGPVR');
PARAMETER(RCD.CMP_Program_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?8=Edit Carcass Merit Commodity Market and Group Meat/Fixed cost
CASE;

// IF RCD.*SFLSEL is *Option 8 request
IF RCD.*SFLSEL = '8'/'8';

CASE;

// IF RCD.CMP Grading Type is Meat Value
IF RCD.CMP_Grading_Type = 'M';

// Call program Zzt Carcass MertMktGrpEF.
CALL PROGRAM(Zzt Carcass MertMktGrpEF) ('PLT7EFR');
PARAMETER(RCD.CMP_Program_Code);
PARAMETER(CTL.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Option not allowed'
ERROR(PRK0648);
MSGPARM(RCD.*SFLSEL);

ENDIF;

ENDIF;

// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(WRK.Company_Number_USR);
PARAMETER('CMPMASDEL');
PARAMETER(LCL.*USER);

CASE;

// IF LCL.*USER EQ JOB.*USER
IF LCL.*USER = JOB.*USER;

//?Allow Mass Delete - Manager approved
//?4=Delete
CASE;

// IF RCD.*SFLSEL is *Delete request
IF RCD.*SFLSEL = '4'/'4';

//?Check Carcass Merit Matrix relationships
DO;

//?E00176 SLM 070308 Add Mass Delete of Lower Level Files.
EXECUTE FUNCTION(Chk Crcs Mrt/Prd Sc    Rt) TYPE(RTVOBJ) FILE(PKAQCPP)          AB1124595;
PARAMETER(RCD.CMP_Program_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // PGM.*Return code = CND.Record Found
 PGM.*Return_code = 999;

 // Send error message - 'A Producer Sub-Contract is using record.  Delete is invalid.'
 ERROR(PRK0264);

 QUIT;

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

EXECUTE FUNCTION(Chk CMP in BOH        RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1161705;
PARAMETER(RCD.CMP_Program_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // PGM.*Return code = CND.Record Found
 PGM.*Return_code = 999;

 // Send error message - 'A Buy Order is using this record.  Delete is not allowed.'
 ERROR(PRK0263);

 QUIT;

}


ENDIF;

ENDDO;

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

//?4=Delete
CASE;

// IF RCD.*SFLSEL is *Delete request
IF RCD.*SFLSEL = '4'/'4';

//?Check Carcass Merit Matrix relationships
DO;

EXECUTE FUNCTION(Chk Carc Merit Mtx Col Rt) TYPE(RTVOBJ) FILE(PKBZREP)          AB1117662;
PARAMETER(RCD.CMP_Program_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // PGM.*Return code = CND.Record Found
 PGM.*Return_code = 999;

 // Send error message - 'A Carcass Merit Matrix Col is using this record.  Delete is invalid.'
 ERROR(PRK0266);

 QUIT;

}


EXECUTE FUNCTION(Chk Carc Merit Mtx Row RT) TYPE(RTVOBJ) FILE(PKBYREP)          AB1117660;
PARAMETER(RCD.CMP_Program_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // PGM.*Return code = CND.Record Found
 PGM.*Return_code = 999;

 // Send error message - 'A Carcass Merit Matrix Row is using the record.  Delete is invalid.'
 ERROR(PRK0267);

 QUIT;

}


EXECUTE FUNCTION(Chk Crcs Mrt/Prd Sc    Rt) TYPE(RTVOBJ) FILE(PKAQCPP)          AB1124595;
PARAMETER(RCD.CMP_Program_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // PGM.*Return code = CND.Record Found
 PGM.*Return_code = 999;

 // Send error message - 'A Producer Sub-Contract is using record.  Delete is invalid.'
 ERROR(PRK0264);

 QUIT;

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

EXECUTE FUNCTION(Chk CMP in BOH        RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1161705;
PARAMETER(RCD.CMP_Program_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // PGM.*Return code = CND.Record Found
 PGM.*Return_code = 999;

 // Send error message - 'A Buy Order is using this record.  Delete is not allowed.'
 ERROR(PRK0263);

 QUIT;

}


ENDIF;

ENDDO;

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

ENDIF;

ENDIF;

//?Option 6  PRINT CARCASS MERIT REPORTS
CASE;

// IF RCD.*SFLSEL is *Print
IF RCD.*SFLSEL = '6';

//?Print Options Prompt
CASE;

// IF WRK.Display Print Prompt  Usr is Prompt is to be displayed
IF WRK.Display_Print_Prompt_Usr = 'Y';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Carcass Merit Program');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

// WRK.Display Print Prompt  Usr = CND.Do not display prompt
WRK.Display_Print_Prompt_Usr = 'N';

ENDIF;

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Execute command - 'SBM Prt CMP'
EXECUTE COMMAND(PRK0314);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(RCD.CMP_Program_Code);
PARAMETER(RCD.CMP_Grading_Type);
PARAMETER(CTL.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?Option 7  Comments
CASE;

// IF RCD.*SFLSEL is *Option 7 (Reusable)
IF RCD.*SFLSEL = '7';

// Call program Edt CMP Comments      EF.
CALL PROGRAM(Edt CMP Comments      EF) ('PKC7EFR');
PARAMETER(RCD.CMP_Program_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?06/20/05 SLM HPE011 Add new Carcass Merit Pgm for "Meat Value"
//?Option 9=Edit Matrix
CASE;

// IF RCD.*SFLSEL is *Option 9 (Reusable)
IF RCD.*SFLSEL = '9';

CASE;

// IF RCD.CMP Grading Type is Backfat
IF RCD.CMP_Grading_Type = 'B';

// Call program Edt Backfat Row       EF.
CALL PROGRAM(Edt Backfat Row       EF) ('PKDDEFR');
PARAMETER(RCD.CMP_Program_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(RCD.CMP_Sort_Basis);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF RCD.CMP Grading Type is Lean Factor
IF RCD.CMP_Grading_Type = 'F';

// Call program Zzz Lean Factor Row   EF.
CALL PROGRAM(Zzz Lean Factor Row   EF) ('PKDCEFR');
PARAMETER(RCD.CMP_Program_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(RCD.CMP_Sort_Basis);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF RCD.CMP Grading Type is Lean Percent FOM
IF RCD.CMP_Grading_Type = 'P';

// Call program Edt Lean Percent Row  EF.
CALL PROGRAM(Edt Lean Percent Row  EF) ('PKCREFR');
PARAMETER(RCD.CMP_Program_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(RCD.CMP_Sort_Basis);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF RCD.CMP Grading Type is Ln%N/SrtDscF/FltCrc/MtVal
IF RCD.CMP_Grading_Type = 'L'/'S'/'C'/'D';

// Call program Edt Lean Percent Row  EF.
CALL PROGRAM(Edt Lean Percent Row  EF) ('PKCREFR');
PARAMETER(RCD.CMP_Program_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(RCD.CMP_Sort_Basis);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF RCD.CMP Grading Type is Meat Value
IF RCD.CMP_Grading_Type = 'M';

// Call program Zzz Meat Value Row    EF.
CALL PROGRAM(Zzz Meat Value Row    EF) ('PLFOEFR');
PARAMETER(RCD.CMP_Program_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(RCD.CMP_Sort_Basis);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?USER: Final processing (Pre-confirm)

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

//?USER: Process subfile record (Post-confirm)

CASE;

// IF LCL.*USER EQ JOB.*USER
IF LCL.*USER = JOB.*USER;

//?Option 4= Delete
CASE;

// IF RCD.*SFLSEL is *Delete request
IF RCD.*SFLSEL = '4'/'4';

// Call program PMT Enter Email       PV.
CALL PROGRAM(PMT Enter Email       PV) ('PLLSPVR');
PARAMETER(LCL.EMail_Address);

CASE;

// IF LCL.EMail Address is Not Entered
IF LCL.EMail_Address = *BLANK;

// Send error message - 'Delete is not allowed'
ERROR(PRK0282);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Clp Snd CMP via xls   CL.
CALL PROGRAM(Clp Snd CMP via xls   CL) ('CMPSNDEML');
PARAMETER(RCD.CMP_Program_Code);
PARAMETER(LCL.EMail_Address);

//?E00176 SLM 070308 Add Mass Delete of Lower Level Files.
// Call program Dlt CMP & Lower Files XF.
CALL PROGRAM(Dlt CMP & Lower Files XF) ('PLMFXFR');
PARAMETER(PGM.*Return_code);
PARAMETER(RCD.CMP_Program_Code);

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Delete is not allowed'
ERROR(PRK0282);
MSGPARM(RCD.*SFLSEL);

ENDIF;

ENDIF;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

//?Option 4= Delete
CASE;

// IF RCD.*SFLSEL is *Delete request
IF RCD.*SFLSEL = '4'/'4';

EXECUTE FUNCTION(Dlt Carc Merit Pgm    DO) TYPE(DLTOBJ) FILE(PKARREP)           AB1101851;
PARAMETER(RCD.CMP_Program_Code);

EXECUTE FUNCTION(DLT Carc Mrt Pgm Com  RT) TYPE(RTVOBJ) FILE(PKB0REP)           AB1117655;
PARAMETER(RCD.CMP_Program_Code);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(DLT Carc Mrt Prg Com  DO) TYPE(DLTOBJ) FILE(PKB0REP)           AB1103760;
 PARAMETER(DB1.CMP_Program_Code);
 PARAMETER(DB1.CMPC_Comment_Line);
}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Delete is not allowed'
ERROR(PRK0282);
MSGPARM(RCD.*SFLSEL);

ENDIF;

ENDIF;

ENDIF;

