      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP423
      * TITLE:       Specify Options: Costed Transfers into BGF Farms
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     08/11/03
      *
      *
      * FUNCTION: This Specify uses an edit record format to allow the user
      *           to specify options for generating the report.
      *
      *           The report has been and will continue to be generated
      *           during EOP.  But, we now have this on-demand function.
      *
      ****************************************************************
      * MODIFICATIONS:
      *
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      * 04/22/16  Barb Gutierrez   (E5619)
      *           Added company to the screen.
      * 05/10/16  Barb Gutierrez   (E5752)
      *           Recompile Only.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd423    cf   e             workstn
     F                                     infds(iofeed)
      *
     Fhsp0071   if   e           k disk
      * Company control
      *
     Fhsp002    if   e           k disk
      *    Functions
      *
      *
     Fhsp010    if   e           k disk
      *    Production type
      *
      *
     Fhsp011    if   e           k disk
      *    Production Phase
      *
      *
     Fhsp012    if   e           k disk
      *    Company relationship
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp025    if   e           k disk
      *    Group type
      *
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D all             c                   'A'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Compile time array for SBMJOB used in QCMDEXC
      *---------------------------------------------------------------
     D cmd             s              1    dim(80) ctdata perrcd(80)
      *
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2    inz('00')
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Control fields
      *
     D termfl          s              1
     D svdvcd          s                   like(oudvcd)
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkmmddyy        s              6  0
      *
      *
      *
      * Parm fields
      *
     D xxcocd          s              3  0
     D xxalphcell      s              2a
     D xxalphfscd      s              5a
      *
     D xxbpdt          s              8  0
     D xxepdt          s              8  0
      *
     D xxaist          s              1
     D xxfscd          s                   like(fsfscd)
     D xxfsnm          s                   like(fsfsnm)
     D xxfsbo          s                   like(d1fsbo)
     D xxbods          s                   like(d1bods)
     D xxppcd          s                   like(d1ppcd)
     D xxppds          s                   like(d1ppds)
     D xxptcd          s                   like(d1ptcd)
     D xxptds          s                   like(d1ptds)
     D xxcrcd          s                   like(d1crcd)
     D xxcrds          s                   like(d1crds)
     D xxgtcd          s                   like(d1gtcd)
     D xxgtds          s                   like(gtgtds)
      *
     D xxjobq          s             10     inz('*JOBD     ')
     D xxnite          s              1     inz('N')
     D xxcopy          s              1  0
      *
     D infncd          s             10
     D inbobo          s              5
     D indvfl          s              1
     D inbofl          s              1
     D oubobo          s              5
     D oubods          s             30
     D oudvcd          s              5
     D secfl           s              1
     D oubofl          s              1
     D ourmfl          s              1
      *
      *  Parms for use with QCMDEXC.  'LENGTH' is the length of the
      *  command that will be issued with QCMDEXC.  QCMDEXC requires
      *  the field containing length to be defined as 15 with 5 decimal
      *  positions.  The field 'CMDSBM' will hold the values of the
      *  submit job command when passed as a parm on the call to
      *  QCMDEXC.
      *
     D length          s             15  5 inz(80)
     D cmdsbm          s             80
      *
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      *
      * Local data area. (Note: This LDA must not conflict with the EOP job stream...
      *                   since it also prints this report.)
      *
     Dlda             uds                  dtaara(*lda)
     D  ldbpdt                 1     08  0
     D  ldepdt                 9     16  0
     D  ldacpe                17     18  0
     D  ldeffl                19     19
     D  ldacyr                20     23  0
     D  ldblank1              24     59
     D  ldbmdy                60     66  0
     D  ldemdy                70     76  0
      *
     D  ldblank2              80     80
     D  ldblank3              81     84  0
     D  ldblank4              85     86  0
      *
     D  ldfsbo                87     91
     D  ldptcd                92     96
     D  ldppcd                97    101
     D  ldcell               102    103  0
     D  ldcrcd               104    108
     D  ldfscd               109    113  0
     D  ldgtcd               114    114
      *
     D  ldbods               115    144
     D  ldptds               145    154
     D  ldppds               155    184
     D  ldcocd               200    202
     D  ldgtds               210    224
     D  ldcrds               225    234
     D  ldfsnm               235    259
      *
     D  ldoutu               401    410
     D  ldhold               411    411
     D  ldcopy               412    412  0
     D  ldoutq               413    422
      *
      *------------------------------------------------------------------
      * Definition for external data area 'DAAPER' for accounting period
      *------------------------------------------------------------------
      *
     D dsdaaper       uds                  dtaara(daaper)
     D  daccyy                        4s 0
     D  daper                         2s 0
     D  dabpdt                        8s 0
     D  daepdt                        8s 0
     D  dapgfl                        1a
     D  dappfl                        1a
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
     C
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * If the user failed the initial security checks, set on indicator to
      * protect input fields and invalidate function keys.
      *
     C                   if        termfl = yes
     C                   seton                                        99
     C                   endif
      *
      * Write the error messages from the error arrays to the error
      * message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT.
      *
      *
     C                   write     hp423k1
     C                   write     hp423ec
     C                   exfmt     hp423r1
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in20 = *on                                  F20-wrksplf
     C                   call      'QEZOUTPT'                                       API
     C                   eval      routne = scrn1
      *
     C                   when      *in17 = *on                                  F17-print options
     C                   eval      routne = scrn1
     C                   call      'HP451'
     C                   parm                    sdpgm
     C     ldcopy        parm      ldcopy        xxcopy
     C                   parm                    ldhold
     C                   parm                    ldoutq
     C                   parm                    xxnite
     C                   parm                    xxjobq
     C                   other
      *
      * Always check security for business office
      *
     C                   exsr      $chkbo
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit screen 1 input fields
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *   1) Company
      *   2) accounting year
      *   3) accounting period
      *   4) production type
      *   5) production phase
      *   6) cell
      *   7) company relationship
      *   8) farm site
      *   9) group type
      *
      *
     C                   exsr      $company
     C                   exsr      $acyr
     C                   exsr      $acpe
     C                   exsr      $ptcd
     C                   exsr      $ppcd
     C                   exsr      $cell
     C                   exsr      $crcd
     C                   exsr      $fscd
     C                   exsr      $gtcd
      *
      * If there are no errors, execute the subroutine to submit the
      * report.
      *
     C                   if        error = 0                                    If no error
     C                   if        *in44 = *off                                 If no F8
     C                   seton                                        44
     C                   else
     C                   if        *in08 = *on                                  If F8=submit
     C                   exsr      $proc1
     C                   endif                                                  If F8=submit
     C                   endif                                                  If no F8
     C                   else
     C                   setoff                                       44
     C                   endif                                                  If no error
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * company
      *----------------------------------------------------------------
      *
     C     $company      begsr
      *
     C                   if        d1cocd  = *blank
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS00175'
     C                   endif
     c                   else
     c     D1COCD        chain     hsp0071                            39
     c     *IN39         ifeq      *ON
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS00175'
     C                   clear                   mgw
     C                   movea     d1cocd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   end
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate accounting year
      *---------------------------------------------------------------
      *
     C     $acyr         begsr
      *
      *  Year
     C                   select
     C                   when      d1acyr = 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1acyr < 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
      *
     C                   when      d1acyr < 1994
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09028'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate accounting period
      *---------------------------------------------------------------
      *
     C     $acpe         begsr
      *
     C                   select
     C                   when      d1acpe = 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1acpe < 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
      *
     C                   when      d1acpe > 13
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09006'
     C                   endif
     C                   endsl
      *
      *  If both year/period are valid, check that the period is closed.
      *
     C                   if        *in30 = *off and *in31 = *off                If not closed
     C                             and (d1acyr > daccyy or
     C                                 (d1acyr = daccyy and
     C                                  d1acpe >= daper))
     C                   seton                                        3031
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09208'
     C                   endif
      *
     C                   endif                                                  If not closed
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate production type
      *----------------------------------------------------------------
      *
     C     $ptcd         begsr
      *
     C                   move      *blank        d1ptds
      *
     C                   select
     C                   when      d1ptcd <> *blank
     C     d1ptcd        chain     hsp010                             92
     C                   if        *in92 = *off                                 If good type
     C                   move      ptptds        d1ptds
     C                   else
     C                   seton                                        33
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00180'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ptcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good type
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate production phase
      *----------------------------------------------------------------
      *
     C     $ppcd         begsr
      *
     C                   move      *blank        d1ppds
      *
     C                   select
     C                   when      d1ppcd = *blank
     C                   other
      *
     C     d1ppcd        chain     hsp011                             92
     C                   if        *in92 = *off                                 If good phase
     C                   move      ppppds        d1ppds
     C                   else
     C                   seton                                        34
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00170'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ppcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good phase
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate cell
      *---------------------------------------------------------------
      *
     C     $cell         begsr
      *
     C                   if        d1cell < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate Company Relationship
      *----------------------------------------------------------------
      *
     C     $crcd         begsr
      *
     C                   move      *blank        d1crds
      *
     C                   select
     C                   when      d1crcd = *blank
     C                   other
      *
     C     d1crcd        chain     hsp012                             92
     C                   if        *in92 = *off                                 If ok
     C                   movel     crcrds        d1crds
     C                   else
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00175'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1crcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If ok
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate farm site
      *---------------------------------------------------------------
      *
     C     $fscd         begsr
      *
     C                   move      *blank        d1fsnm
      *
     C                   select
     C                   when      d1fscd = 0
      *
     C                   when      d1fscd < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   seton                                        37
     C                   other
      *
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move(p)   fsfsnm        d1fsnm
      *
      * Must match Business Office the user has keyed...if he keyed one
      *
     C                   if        d1fsbo <> *blank and                         If office
     C                             fsfsbo <> d1fsbo
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00158'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fsfsbo        mgw(6)
     C                   movea     d1fsbo        mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If office
      *
      *
      * Must match cell the user has keyed...if he keyed one
      *
     C                   if        d1cell <> 0 and                              If cell mismatch
     C                             fscell <> d1cell
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00705'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   move      fscell        xxalphcell
     C                   movea     xxalphcell    mgw(6)
     C                   move      d1cell        xxalphcell
     C                   movea     xxalphcell    mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If cell mismatch
      *
      *
      * Must match the company relation ship the user keyed...if he keyed one
      *
     C                   if        d1crcd <> *blank and                         If relation
     C                             fscrcd <> d1crcd
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00852'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fscrcd        mgw(6)
     C                   movea     d1crcd        mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If relation
      *
     C                   endif                                                  If bad farm
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate Group Type
      *----------------------------------------------------------------
      *
     C     $gtcd         begsr
      *
     C                   move      *blank        d1gtds
      *
     C                   select
     C                   when      d1gtcd  <> *blank
     C     d1gtcd        chain     hsp025                             92
     C                   if        *in92 = *off                                 If ok
     C                   move      gtgtds        d1gtds
     C                   else
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00137'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1gtcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If ok
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Check the business office
      *---------------------------------------------------------------
      *
     C     $chkbo        begsr
      *
      * Set the 'Validate B.O.' flag depending on whether the user left
      * business office blank to get all business offices or entered a
      * specific office.
      *
     C                   if        d1fsbo = *blank
     C                   move      all           inbofl
     C                   else
     C                   move      yes           inbofl
     C                   endif
      *
      *
      * Check the user's security to the business office.  Set the INDVFL flag
      * to YES to tell the security program to compare the function division
      * code to the B.O. division code.
      *
     C                   move      yes           indvfl
     C                   exsr      $sec
     C                   move      no            indvfl
      *
     C                   movel     oubods        d1bods
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Process user's request
      *---------------------------------------------------------------
      *
      * This subroutine is only executed if the user submits the listing
      *
     C     $proc1        begsr
      *
      * Retrieve the beginning/ending period dates associated with this
      * Accounting Year/Period.
      *
     C                   call      'HP8014'
     C                   parm                    d1acyr
     C                   parm                    d1acpe
     C                   parm      0             xxbpdt
     C                   parm      0             xxepdt
      *
      * Format the beginning/ending dates into MMDDYY for the LDA
      *
     C                   z-add     0             ldbmdy
     C     *iso          test(d)                 xxbpdt                 92
     C                   if        *in92 = *off                                 If OK begin
     C                   move      xxbpdt        wkisodate
     C     *mdy          move      wkisodate     wkmmddyy
     C                   z-add     wkmmddyy      ldbmdy
     C                   endif                                                  If OK begin
      *
      *
     C                   z-add     0             ldemdy
     C     *iso          test(d)                 xxepdt                 92
     C                   if        *in92 = *off                                 If OK ending
     C                   move      xxepdt        wkisodate
     C     *mdy          move      wkisodate     wkmmddyy
     C                   z-add     wkmmddyy      ldemdy
     C                   endif                                                  If OK ending
      *
      *
      * Move remaining submission values into LDA
      *
     C                   move      d1cocd        ldcocd
     C                   z-add     d1acyr        ldacyr
     C                   z-add     d1acpe        ldacpe
     C                   z-add     xxbpdt        ldbpdt
     C                   z-add     xxepdt        ldepdt
      *
     C                   move      *blank        ldblank1
     C                   move      *blank        ldblank2
      *
     C                   move      d1fsbo        ldfsbo
     C                   move      d1bods        ldbods
      *
     C                   move      d1ptcd        ldptcd
     C                   move      d1ptds        ldptds
      *
     C                   z-add     d1cell        ldcell
      *
     C                   move      d1ppcd        ldppcd
     C                   move      d1ppds        ldppds
      *
     C                   move      d1crcd        ldcrcd
     C                   move      d1crds        ldcrds
      *
     C                   move      d1gtcd        ldgtcd
     C                   move      d1gtds        ldgtds
      *
     C                   z-add     d1fscd        ldfscd
     C                   move      d1fsnm        ldfsnm
      *
      * Move D=demand to the edit/final field
      *
     C                   move      'D'           ldeffl
      *
      * Move the 80-character compile time array 'CMD' to an
      * 80-character field for passing as a parm with QCMDEXC.
      *
     C                   out       lda
     C                   movea     xxjobq        cmd(51)
     C                   movea     cmd           cmdsbm
     C                   call      'QCMDEXC'
     C                   parm                    cmdsbm
     C                   parm                    length
      *
      * Issue the standard request submission message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09003'
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Security Program
      *---------------------------------------------------------------
      *
     C     $sec          begsr
      *
     C                   move      no            termfl
      *
     C                   call      'HPSEC  '
      **** IN
     C                   parm                    mgid                           MSGID ARRAY
     C                   parm                    mgdt                           MSGDTA DATA
     C                   parm                    error                          # OF errorS
     C                   parm      sdpgm         infncd                         FUNC CODE
     C                   parm      d1fsbo        inbobo                         BO CODE
     C                   parm                    indvfl                         CHECK DIV?
     C                   parm                    inbofl                         CHECK B.O.?
      **** OUT
     C                   parm      *blank        oubobo                         BO CODE
     C                   parm      *blank        oubods                         BO DESC.
     C                   parm      *blank        oudvcd                         DIV CODE
     C                   parm                    secfl                          SEC ERR FLAG
     C                   parm                    oubofl                         B.O. ERR FLG
     C                   parm                    ourmfl
      *
     C                   if        oubofl = yes
     C                   seton                                        32
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Business office
     C                   select
     C                   when      fld = 'D1FSBO'
     C                   call      'HP503'
     C                   parm      *blank        xxfsbo
     C                   parm      *blank        xxbods
     C                   parm                    svdvcd
     C                   seton                                        52
     C                   if        xxfsbo <> *blank
     C                   movel     xxfsbo        d1fsbo
     C                   movel     xxbods        d1bods
     C                   endif
      *
      * Production type
      *
     C                   when      fld = 'D1PTCD'
     C                   call      'HP504'
     C                   parm      *blank        xxptcd
     C                   parm      *blank        xxptds
     C                   seton                                        53
     C                   if        xxptcd <> *blank
     C                   movel     xxptcd        d1ptcd
     C                   movel     xxptds        d1ptds
     C                   endif
      *
      * Production phase
      *
     C                   when      fld = 'D1PPCD'
     C                   call      'HP507'
     C                   parm      *blank        xxppcd
     C                   parm      *blank        xxppds
     C                   seton                                        54
     C                   if        xxppcd <> *blank
     C                   movel     xxppcd        d1ppcd
     C                   movel     xxppds        d1ppds
     C                   endif
      *
      * Farm site
     C                   when      fld = 'D1FSCD'
     C                   call      'HP5040'
     C                   parm      *blank        xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        57
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1fscd
     C                   movel     xxfsnm        d1fsnm
     C                   endif
      *
      *
      * Company relationship
      *
     C                   when      fld = 'D1CRCD'
     C                   call      'HP506'
     C                   parm      *blank        xxcrcd
     C                   parm      *blank        xxcrds
     C                   SETON                                        56
     C                   if        xxcrcd <> *blank
     C                   movel     xxcrcd        d1crcd
     C                   movel     xxcrds        d1crds
     C                   endif
      *
      * Group type
     C                   when      fld = 'D1GTCD'
     C                   call      'HP531'
     C                   parm      *blank        xxgtcd
     C                   parm      *blank        xxgtds
     C                   seton                                        58
     C                   if        xxgtcd <> *blank
     C                   move      xxgtcd        d1gtcd
     C                   move      xxgtds        d1gtds
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *   none
      *
      * Key lists
      *    None
      *
      * Initialize numeric LDA fields
      *
     C                   z-add     0             ldbpdt
     C                   z-add     0             ldepdt
     C                   z-add     0             ldacpe
     C                   z-add     0             ldacyr
     C                   z-add     0             ldbmdy
     C                   z-add     0             ldemdy
     C                   z-add     0             ldcell
     C                   z-add     0             ldfscd
     C                   z-add     0             ldblank3
     C                   z-add     0             ldblank4
      *
      *
      *
      * Get this functions' number of copies, etc.
      *
     C     sdpgm         chain     hsp002                             92
     C                   if        *in92 = *off
     C                   z-add     fncopy        ldcopy
     C                   movel     fnhold        ldhold
     C                   endif
      *
     C                   if        ldcopy = 0
     C                   z-add     1             ldcopy
     C                   endif
      *
     C                   if        ldhold = *blank
     C                   movel     no            ldhold
     C                   endif
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
      *
      * Execute the security routine to determine the user's authorizations.
      * If errors on the initial call, set the terminal flag to yes.
      *
     C                   exsr      $sec
      *
     C                   if        secfl = yes
     C                   movel     yes           termfl
     C                   endif
      *
      * Save this function's division code
      *
     C                   movel     oudvcd        svdvcd
      *
      * Unlock the current period data area.
      *
     C                   unlock    dsdaaper
      *
     C                   endsr
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD table 'CMD' submits listing when F8 selected
SBMJOB CMD(CALL PGM(HP423CL )) JOB(COSTTRAN) JOBQ(__________)
