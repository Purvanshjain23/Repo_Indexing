// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMDYXFR
// ?Date: 14.08.2025 Time: 03:42:47
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?06/26/25  Ankit Bansal  Bug 36512, Task 38180: Added Credit_Check_Complete
//?_Dt field to OMGZCPP file, need to re-compile it for CST/ITM changes
//?R9064  - RMC 06/08/17 Only upd Co/Cust rcd sts for New custs, and if
//?   customer is changing to Inactive
//?FP1110 - RMC 01/07/08 update Comp Cust Ext with HPB Fields
//?FP1322 - RMC 02/12/10 update Comp Cust Ext with HPB ship to whse
//?FP1390 - slm 04/05/10 update Comp Cust Ext with HPB * age fields
//?E01654 RMC 8/18/11 upd gl sales acct type in comp cust ext
EXECUTE FUNCTION(CHG Co/Cust w/G/L PlntsRT) TYPE(RTVOBJ) FILE(PDJYREP)          AC1808927;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(PAR.Terms_Code);
PARAMETER(PAR.Sales_Route_Code);
PARAMETER(PAR.Special_Instructions_2);
PARAMETER(PAR.Special_Instructions);
PARAMETER(PAR.Carrier_Code);
PARAMETER(PAR.Broker);
PARAMETER(PAR.P_O_Required_Flag);
PARAMETER(PAR.Deliver_after_time);
PARAMETER(PAR.Deliver_before_time);
PARAMETER(PAR.Type_Code);
PARAMETER(PAR.Age_Code);
PARAMETER(PAR.Outside_Warehouse_Flag);
PARAMETER(PAR.Customer_Group_Code);
PARAMETER(PAR.Customer_Group_Code_2);
PARAMETER(PAR.Commodity_Market_Code);
PARAMETER(PAR.Credit_Contact_Name);
PARAMETER(PAR.Credit_Contact_Telephone);
PARAMETER(PAR.Credit_Contact_Bus_Title);
PARAMETER(PAR.Credit_Contact_Fax_Number);
PARAMETER(PAR.Allow_Man_Qt_WO_Approval);
PARAMETER(PAR.Fax_Invoice_Flag);
PARAMETER(PAR.Fax_Invoice_Fax_Number);
PARAMETER(PAR.Fax_Invoice_Contact_Name);
PARAMETER(PAR.Distributor);
PARAMETER(PAR.Record_Status);
PARAMETER(PAR.Extra_Amount_1);
PARAMETER(PAR.Extra_Number_1);
PARAMETER(PAR.Extra_Status_1);
PARAMETER(PAR.SH_Expense_Bucket);
PARAMETER(PAR.G_L_Sub_Account);
PARAMETER(PAR.Change_Flag_USR);
PARAMETER(PAR.City);
PARAMETER(PAR.AR_Customer_Number);
PARAMETER(PAR.State_Code);
PARAMETER(PAR.Shipping_Zone_Code);
PARAMETER(PAR.HPB_Employer_ID_#);
PARAMETER(PAR.HPB_ULSD_Company_#);
PARAMETER(PAR.HPB_ULSD_Facility_ID);
PARAMETER(PAR.CCE_GL_Sales_Acct_Type);
PARAMETER(PAR.Item_Age_Days_Fresh);
PARAMETER(PAR.Item_Age_Days_Frozen);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(CHG Co/Cust w/G/L PlntsCH) TYPE(CHGOBJ) FILE(CAEOREP)          AC1708952;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Terms_Code);
 PARAMETER(PAR.Sales_Route_Code);
 PARAMETER(PAR.Special_Instructions_2);
 PARAMETER(PAR.Special_Instructions);
 PARAMETER(PAR.Carrier_Code);
 PARAMETER(PAR.Broker);
 PARAMETER(PAR.P_O_Required_Flag);
 PARAMETER(PAR.Deliver_after_time);
 PARAMETER(PAR.Deliver_before_time);
 PARAMETER(PAR.Type_Code);
 PARAMETER(PAR.Age_Code);
 PARAMETER(PAR.Outside_Warehouse_Flag);
 PARAMETER(PAR.Customer_Group_Code);
 PARAMETER(PAR.Customer_Group_Code_2);
 PARAMETER(PAR.Commodity_Market_Code);
 PARAMETER(PAR.Credit_Contact_Name);
 PARAMETER(PAR.Credit_Contact_Telephone);
 PARAMETER(PAR.Credit_Contact_Bus_Title);
 PARAMETER(PAR.Credit_Contact_Fax_Number);
 PARAMETER(PAR.Allow_Man_Qt_WO_Approval);
 PARAMETER(PAR.Fax_Invoice_Flag);
 PARAMETER(PAR.Fax_Invoice_Fax_Number);
 PARAMETER(PAR.Fax_Invoice_Contact_Name);
 PARAMETER(PAR.Distributor);
 PARAMETER(PAR.Record_Status);
 PARAMETER(PAR.Extra_Amount_1);
 PARAMETER(PAR.Extra_Number_1);
 PARAMETER(PAR.Extra_Status_1);
 PARAMETER(PAR.SH_Expense_Bucket);
 PARAMETER(PAR.G_L_Sub_Account);
 {
  //?USER: Processing after Data read

  // LCL.Record Status = DB1.Record Status
  LCL.Record_Status = DB1.Record_Status;

  //?USER: Processing before Data update

  //?Inactivate comp cust
  CASE;

  // IF PAR.Record Status is Inactive
  IF PAR.Record_Status = 'I';

  // AND LCL.Record Status is Active
  AND LCL.Record_Status = 'A';

  //?only change if cust is now INACTIVE
  // DB1.Record Status = PAR.Record Status
  DB1.Record_Status = PAR.Record_Status;

  //?Inactivate comp cust
  // IF *OTHERWISE
  IF *OTHERWISE;

  // DB1.Record Status = LCL.Record Status
  DB1.Record_Status = LCL.Record_Status;

  ENDIF;

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  //?USER: Processing after Data update

  EXECUTE FUNCTION(CHG OM Company/Cust    CH) TYPE(CHGOBJ) FILE(OMGZCPP)          AC1214274;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(PAR.Extra_Amount_1);
  PARAMETER(PAR.Extra_Number_1);
  PARAMETER(PAR.Extra_Status_1);
  PARAMETER(PAR.SH_Expense_Bucket);
  PARAMETER(PAR.G_L_Sub_Account);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  {
   //?USER: Processing before Data read

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(CRT OM Company/Cust    CR) TYPE(CRTOBJ) FILE(OMGZCPP)          AC1214273;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Ship_To_Customer);
   PARAMETER(PAR.Extra_Amount_1);
   PARAMETER(PAR.Extra_Number_1);
   PARAMETER(PAR.Extra_Status_1);
   PARAMETER(PAR.SH_Expense_Bucket);
   PARAMETER(PAR.G_L_Sub_Account);
   PARAMETER(PAR.EDI_Status_1);
   PARAMETER(PAR.EDI_Status_2);
   PARAMETER(PAR.EDI_Status_3);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

 }

 EXECUTE FUNCTION(Chg HPB/Age Fields    CH) TYPE(CHGOBJ) FILE(PDNIREP)           AC1984219;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.HPB_Employer_ID_#);
 PARAMETER(PAR.HPB_ULSD_Company_#);
 PARAMETER(PAR.HPB_ULSD_Facility_ID);
 PARAMETER(PAR.CCE_GL_Sales_Acct_Type);
 PARAMETER(PAR.Item_Age_Days_Fresh);
 PARAMETER(PAR.Item_Age_Days_Frozen);
 {
  //?USER: Processing if Data record not found

  //?create if not there
  EXECUTE FUNCTION(Crt HPB Records       CR) TYPE(CRTOBJ) FILE(PDNIREP)           AC1862864;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Ship_To_Customer);
  PARAMETER(PAR.HPB_Employer_ID_#);
  PARAMETER(PAR.HPB_ULSD_Company_#);
  PARAMETER(PAR.HPB_ULSD_Facility_ID);
  PARAMETER(PAR.CCE_GL_Sales_Acct_Type);
  PARAMETER(PAR.Item_Age_Days_Fresh);
  PARAMETER(PAR.Item_Age_Days_Frozen);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 //?A/R Customer Changed: Create A/R Summary if necessary.
 CASE;

 // IF PAR.Change Flag USR is Yes
 IF PAR.Change_Flag_USR = 'Y';

 EXECUTE FUNCTION(Val Customer in A/R SumRT) TYPE(RTVOBJ) FILE(ARBCREP)          AC1463166;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.AR_Customer_Number);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  // PGM.*Return code = CND.*Record already exists
  PGM.*Return_code = 'Y2U0003';

 }

 CASE;

 // IF PGM.*Return code is *Record does not exist
 IF PGM.*Return_code = 'Y2U0005';

 // WRK.Current Month = JOB.*Job date *MONTH
 WRK.Current_Month = DATEDTLS(JOB.*Job_date 'MO' 1111111 'NONE' 'N' 1);

 EXECUTE FUNCTION(RTV Sales Route        RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1371227;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.AR_Customer_Number);
 PARAMETER(LCL.Sales_Route_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Salesman Code      RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1284971;
 PARAMETER(LCL.Sales_Route_Code);
 PARAMETER(LCL.Salesperson_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(CRT A/R Summary        CR) TYPE(CRTOBJ) FILE(ARBCREP)          AC1109013;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.AR_Customer_Number);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Salesperson_Code);
 PARAMETER(LCL.Sales_Route_Code);
 PARAMETER(WRK.Current_Month);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 //?Old A/R Customer ifne New A/R Customer number --> chg open orders
 // LCL.Ship To Customer = PAR.Ship To Customer
 LCL.Ship_To_Customer = PAR.Ship_To_Customer;

 EXECUTE FUNCTION(Rtv Chg AR Cust/BllTo RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1573466;
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Ship_To_Customer);
 PARAMETER(PAR.AR_Customer_Number);
 {
  //?USER: Initialize routine

  // WRK.Ship To Customer = PAR.Ship To Customer
  WRK.Ship_To_Customer = PAR.Ship_To_Customer;

  EXECUTE FUNCTION(RTV Cust Name/Addr     RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1129143;
  PARAMETER(PAR.AR_Customer_Number);
  PARAMETER(PAR.Customer_Name);
  PARAMETER(PAR.Address_Line_1);
  PARAMETER(PAR.Address_Line_2);
  PARAMETER(PAR.Address_Line_3);
  PARAMETER(PAR.City);
  PARAMETER(PAR.State_Code);
  PARAMETER(PAR.Zip_Postal_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.Ship To Customer = WRK.Ship To Customer
  PAR.Ship_To_Customer = WRK.Ship_To_Customer;

  //?USER: Process Data record

  EXECUTE FUNCTION(Chg AR cust/BillTo Ad CH) TYPE(CHGOBJ) FILE(OPBFCPP)           AC1573467;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(PAR.AR_Customer_Number);
  PARAMETER(PAR.AR_Customer_Number);
  PARAMETER(PAR.Customer_Name);
  PARAMETER(PAR.Address_Line_1);
  PARAMETER(PAR.Address_Line_2);
  PARAMETER(PAR.Address_Line_3);
  PARAMETER(PAR.City);
  PARAMETER(PAR.State_Code);
  PARAMETER(PAR.Zip_Postal_Code);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

 ENDIF;

 //?If customer change then update the destination
 // Call program Add/Chg Cust Dest.     XF.
 CALL PROGRAM(Add/Chg Cust Dest.     XF) ('PPHMXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.State_Code);
 PARAMETER(PAR.Shipping_Zone_Code);
 PARAMETER(PAR.City);

}


