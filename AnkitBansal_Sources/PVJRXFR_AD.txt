// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PVJRXFR
// ?Date: 14.08.2025 Time: 03:52:20
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?NOTE: The following JS calls this process every 15 min interval.
//?      From 5AM to 11:59PM.
//?      PROD: WIMAPIOBER
EXECUTE FUNCTION(Prt WIM API Outb ShipErRT) TYPE(RTVOBJ) FILE(PVADCPP)          AC2240411;
{
 //?USER: Initialize routine

 // LCL.USR Print Report = CND.no
 LCL.USR_Print_Report = 'N';

 //?USER: Process Data record

 //?02/10/25 DN SR26186-Revalidate Trans Exist in WIM Item Trans Detail.
 EXECUTE FUNCTION(Val API Timeout Trsn ExRT) TYPE(RTVOBJ) FILE(PUCICPP)          AC2240396;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Ship_From_Warehouse);
 PARAMETER('FG');
 PARAMETER(DB1.WIM_Inventory_Trans_ID);
 PARAMETER(DB1.WIM_Inventory_Trans_Type);
 PARAMETER(DB1.Transaction_Date);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Item_Transaction_Source);
 PARAMETER(DB1.Transaction_Description);
 PARAMETER(DB1.Transaction_Quantity);
 PARAMETER(DB1.Shift_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Match_Found_USR);
 {
  //?USER: Initialize routine

  // PAR.Match Found USR = CND.No
  PAR.Match_Found_USR = 'N';

  //?USER: Process Data record

  //?Must Also Match.
  CASE;

  // IF DB1.Item Transaction Source EQ PAR.Item Transaction Source
  IF DB1.Item_Transaction_Source = PAR.Item_Transaction_Source;

  // AND DB1.Transaction Description EQ PAR.Transaction Description
  AND DB1.Transaction_Description = PAR.Transaction_Description;

  // AND DB1.Shift Number EQ PAR.Shift Number
  AND DB1.Shift_Number = PAR.Shift_Number;

  // AND DB1.Order Number EQ PAR.Order Number
  AND DB1.Order_Number = PAR.Order_Number;

  // WRK.Transaction Quantity = PAR.Transaction Quantity
  WRK.Transaction_Quantity = PAR.Transaction_Quantity;

  // LCL.Transaction Quantity = DB1.Transaction Quantity
  LCL.Transaction_Quantity = DB1.Transaction_Quantity;

  //?Use Absolute Value if Negative Qty from PAR Context.
  CASE;

  // IF PAR.Transaction Quantity is Less than zero
  IF PAR.Transaction_Quantity < *ZERO;

  // WRK.Transaction Quantity = PAR.Transaction Quantity * CON.-1 *Rounded
  WRK.Transaction_Quantity = PAR.Transaction_Quantity * -1 'H';

  ENDIF;

  //?Use Absolute Value if Negative Qty from DB1 Context.
  CASE;

  // IF DB1.Transaction Quantity is Less than zero
  IF DB1.Transaction_Quantity < *ZERO;

  // LCL.Transaction Quantity = DB1.Transaction Quantity * CON.-1 *Rounded
  LCL.Transaction_Quantity = DB1.Transaction_Quantity * -1 'H';

  ENDIF;

  //?Qty Must Match.
  CASE;

  // IF LCL.Transaction Quantity EQ WRK.Transaction Quantity
  IF LCL.Transaction_Quantity = WRK.Transaction_Quantity;

  // PAR.Match Found USR = CND.Yes
  PAR.Match_Found_USR = 'Y';

  QUIT;

  ENDIF;

  ENDIF;

 }

 CASE;

 // IF LCL.Match Found USR is Yes
 IF LCL.Match_Found_USR = 'Y';

 EXECUTE FUNCTION(Chg Record Processed  CH) TYPE(CHGOBJ) FILE(PVADCPP)           AC2219094;
 PARAMETER(DB1.Surrogate_Nbr);
 PARAMETER('Y');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Time Stamp DDL IF) TYPE(EXCINTFUN)                     AC2212930;
  PARAMETER(DB1.Update_Date_Timestamp);
  PARAMETER(DB1.Update_User_Id);
  PARAMETER(DB1.Update_Program_Name);
  {
   //?Execute internal function

   //?*** Set CHANGE Time Stamp Info.
   // PAR.Update Date Timestamp = JOB.*System timestamp
   PAR.Update_Date_Timestamp = JOB.*System_timestamp;

   // PAR.Update User Id = JOB.*USER
   PAR.Update_User_Id = JOB.*USER;

   // PAR.Update Program Name = JOB.*PROGRAM
   PAR.Update_Program_Name = JOB.*PROGRAM;

  }

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.USR Print Report = CND.yes
 LCL.USR_Print_Report = 'Y';

 ENDIF;

 //?USER: Exit processing

 //?02/10/25 DN SR26186-Print Report?
 CASE;

 // IF LCL.USR Print Report is yes
 IF LCL.USR_Print_Report = 'Y';

 // Call program Prt WIM API Outb ShipErCL.
 CALL PROGRAM(Prt WIM API Outb ShipErCL) ('PVJQUPC');

 ENDIF;

}


