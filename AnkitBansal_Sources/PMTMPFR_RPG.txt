     H/TITLE PRT MrgnMgt TrfInfo   PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 06/21/17  Time  : 15:09:14
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPDJYREL3IF  E           K        DISK
      * RTV : Company Defaults Internal Plant Companies Only CO
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCAEOREL3IF  E           K        DISK
      * RSQ : Company Customer          Customer/Company
      *
     FCAAPREL2IF  E           K        DISK
      * RTV : Salesperson               Retrieval index       V
      *
     FCABBREL1IF  E           K        DISK
      * RTV : Customer                  Retrieval index       NV
      *
     FPDLFREL1IF  E           K        DISK
      * RTV : Mileage Between Cities    Retrieval index
      *
     FPDJEREL1IF  E           K        DISK
      * RTV : Sales Route               Retrieval index
      *
     FPMDSCPL0IF  E           K        DISK                      A
      * UPD : WF MrgnMgt Transportation Update index
      *
     FPMTMPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: PRT MrgnMgt TrfInfo   PF  Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    AR1        30  1               ARRAY 1
     E                    AR2        30  1               ARRAY 2
     E                    #L7         7  1
      * Long constants
     E                    @CN#    1  01  6   @CN    25
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
     IQPMDS1    E DSPMDSCPL0
      * UPD : WF MrgnMgt Transportation Update index
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * N :  Output Only 1 USR
     I                                        1   1 P1LISX
     IP2PARM      DS
      * N :  Output Only 2 USR
     I                                        1   1 P2LJSX
     IP3PARM      DS
      * I :  Company Number
     I                                    P   1   20P3AIC3
     IP4PARM      DS
      * I :  Salesperson Code 1
     I                                        1   3 P4DFCD
     IP5PARM      DS
      * I :  Record Status
     I                                        1   1 P5VSST
     IP6PARM      DS
      * FLD: *Arrays
      * N :  Default 1 USR
     I                                        1   1 P6L4TX
      * N :  Default 2 USR
     I                                        2   2 P6L5TX
      * N :  Default 3 USR
     I                                        3   3 P6L6TX
      * N :  Default 4 USR
     I                                        4   4 P6L7TX
      * N :  Default 5 USR
     I                                        5   5 P6L8TX
     IP7PARM      DS
      * N :  Number 5,0           USR1
     I                                        1   50P7YBNX
     IP8PARM      DS
      * N :  Number 5,0           USR2
     I                                        1   50P8YCNX
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P3AIC3    PARM           WP0001  30       Company Number
     C           P4DFCD    PARM           WP0002  3        Salesperson Cod
     C           P5VSST    PARM           WP0003  1        Record Status
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * PRT MrgnMgt TrfInfo   PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$EENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * PRT MrgnMgt TrfInfo   PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@EOREU0                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Ship To Custome
     C                     MOVEL'Y'       W0AL01  1        Company Number
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDEOBKC7    $DBKC7           Ship To Custome
     C                     MOVEL*BLANK    $DAYTX           Customer Name
     C                     MOVEL*BLANK    $DAJNA           City
     C                     MOVEL*BLANK    $DBGCD           State Code
     C                     MOVEL*BLANK    $DBTTX           Zip/Postal Code
     C                     MOVELEOR4CD    $DR4CD           Sales Route Cod
     C                     Z-ADDEOTBNB    $DTBNB           Absorbed Freigh
     C                     Z-ADD*ZERO     $DCYNY           Usr Abs Freight
     C                     Z-ADD*ZERO     $DYBNX           Number 5,0
     C                     Z-ADD*ZERO     $DYCNX           Number 5,0
     C                     Z-ADD*ZERO     $DBXC3           Default Company
     C                     MOVEL*BLANK    $DPFTX           Text 1 Length U
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDEOBKC7    $CBKC7           Ship To Custome
     C                     MOVEL*BLANK    $CAYTX           Customer Name
     C                     MOVEL*BLANK    $CAJNA           City
     C                     MOVEL*BLANK    $CBGCD           State Code
     C                     MOVEL*BLANK    $CBTTX           Zip/Postal Code
     C                     Z-ADDEOAIC3    $CAIC3           Company Number
     C                     Z-ADDEOTBNB    $CTBNB           Absorbed Freigh
     C                     Z-ADDEOMTCU    $CMTCU           Mileage To Cust
     C                     MOVELEOAQCD    $CAQCD           Terms Code
     C                     MOVELEOR4CD    $CR4CD           Sales Route Cod
     C                     MOVELEOBYNA    $CBYNA           Special Instruc
     C                     MOVELEOB6NA    $CB6NA           Special Instruc
     C                     MOVELEOBZNA    $CBZNA           Carrier Code
     C                     MOVELEOLLST    $CLLST           Broker
     C                     MOVELEOPPST    $CPPST           P.O. Required F
     C                     Z-ADDEOR5NB    $CR5NB           Deliver after t
     C                     Z-ADDEOR6NB    $CR6NB           Deliver before
     C                     MOVELEOQGST    $CQGST           Alt Remittance
     C                     MOVELEOBOCD    $CBOCD           Type Code
     C                     Z-ADDEOW2NB    $CW2NB           Co/Cust Overage
     C                     MOVELEORPCD    $CRPCD           Age Code
     C                     MOVELEOAJCD    $CAJCD           Warehouse Code
     C                     MOVELEOX9ST    $CX9ST           Outside Warehou
     C                     MOVELEOT9CD    $CT9CD           Customer Group
     C                     MOVELEOUBCD    $CUBCD           Customer Group
     C                     MOVELEOISTX    $CISTX           G/L Code
     C                     MOVELEOLQCD    $CLQCD           Commodity Marke
     C                     MOVELEONJNA    $CNJNA           Credit Contact
     C                     MOVELEOI0TX    $CI0TX           Credit Contact
     C                     MOVELEONKNA    $CNKNA           Credit Contact
     C                     MOVELEOI1TX    $CI1TX           Credit Contact
     C                     MOVELEOVLST    $CVLST           Allow Man/Qt WO
     C                     MOVELEORLST    $CRLST           Fax Invoice Fla
     C                     MOVELEOMMTX    $CMMTX           Fax Invoice Fax
     C                     MOVELEOOHNA    $COHNA           Fax Invoice Con
     C                     MOVELEOQ6ST    $CQ6ST           Distributor
     C                     MOVELEOQ8ST    $CQ8ST           Default Shippin
     C                     MOVELEORBST    $CRBST           Ord Ent Default
     C                     MOVELEOREST    $CREST           Bypass DDt/Dela
     C                     MOVELEOUVST    $CUVST           EDI Status 1
     C                     MOVELEOUWST    $CUWST           EDI Status 2
     C                     MOVELEOUXST    $CUXST           EDI Status 3
     C                     MOVELEOVSST    $CVSST           Record Status
     C                     Z-ADDEOAATM    $CAATM           Job Time
     C                     MOVELEOAYNA    $CAYNA           User Id
     C                     MOVELEOA0NA    $CA0NA           Job Name
     C                     Z-ADDEOAXDT    $CAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN EOBKC7    WZA001           Ship To Custome
     C                     Z-ADDEOBKC7    WZA001
     C           *LIKE     DEFN EOAIC3    WZA002           Company Number
     C                     Z-ADDEOAIC3    WZA002
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @EOREU0                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * RMC 8/9/6 pass/use record sts from Customer file
      * CASE: PAR.Record Status is Valid Entries
     C           P5VSST    IFEQ 'A'                        *IF
     C           P5VSST    OREQ 'D'
     C           P5VSST    OREQ 'I'
      * RTV Record Sts         RT - Customer  * 
     C                     EXSR SGRVGN
      * ** Skip not = par
      * CASE: WRK.Record Status NE PAR.Record Status
     C           WUVSST    IFNE P5VSST                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * ** Skip Company # if passed in and no match
      * CASE: PAR.Company Number is not equal to zero
     C           P3AIC3    IFNE *ZERO                      *IF
      * CASE: DB1.Company Number NE PAR.Company Number
     C           EOAIC3    IFNE P3AIC3                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * ** Skip Salesperson if passed in and no match   07/27/2006 LJB
      * CASE: PAR.Salesperson Code 1 is entered
     C           P4DFCD    IFNE *BLANK                     *IF
      * CASE: DB1.Sales Route Code NE PAR.Salesperson Code 1
     C           EOR4CD    IFNE P4DFCD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Ship To Custome
     C                     MOVEL*BLANK    W0AL01  1        Company Number
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Ship To Custome
     C                     MOVEL'Y'       W0AL01  1        Company Number
     C                     ELSE
      * Next record - Detect level breaks
     C           EOBKC7    IFNE WZA001                     Ship To Custome
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           EOAIC3    IFNE WZA002                     Company Number
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Ship To Customer format
      * RTV Cust Name/Addr     RT - Customer  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DBKC7    WL0015           Ship To Custome
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0016    $DAYTX    P      Customer Name
     C                     MOVELWL0017    WUACNA    P      Address Line 1
     C                     MOVELWL0018    WUADNA    P      Address Line 2
     C                     MOVELWL0019    WUAENA    P      Address Line 3
     C                     MOVELWL0020    $DAJNA    P      City
     C                     MOVELWL0021    $DBGCD    P      State Code
     C                     MOVELWL0022    $DBTTX    P      Zip/Postal Code
      * Company 1 Miles
      * CASE: CUR.Number 5,0           USR1 is Zero
     C           $DYBNX    IFEQ *ZERO                      *IF
      *
     C                     MOVEL*BLANK    WN0001 20        USR City
     C                     MOVEL*BLANK    WN0002 20        Ship To City
      *
      * RTV Miles Between      IF
     C                     Z-ADD0         P7YBNX           Miles to next s
      * ensure cities are all caps, no punctuation
      * usr city is From City; Ship to City is To city
      * CVT Str to Upper Alpha US - /UT User Source  * 
     C                     MOVEAYL0006    AR1              LOAD ARRAY
     C                     MOVEA*BLANK    AR2              LOAD ARRAY
     C                     Z-ADD1         X1      20       SET COUNTER
     C                     Z-ADD1         Y1      20       SET COUNTER
      * * * * * * * CHECK FOR ALPHABETIC CHARACTERS * * * * * * *
     C           X1        DOWLT31
     C           AR1,X1    IFEQ ' '
     C           AR1,X1    ORGE 'a'
     C           AR1,X1    ANDLE'Z'
     C           AR1,X1    ANDNE'~'
     C           AR1,X1    ANDNE'{'
     C           AR1,X1    ANDNE'}'
     C           AR1,X1    ANDNE'\'
     C                     MOVE AR1,X1    AR2,Y1
     C                     ADD  1         Y1
     C                     ADD  1         X1
     C                     ELSE
     C                     ADD  1         X1
     C                     END
     C                     END
     C                     Z-ADD1         Y1
     C           Y1        DOWLT31
     C           AR2,Y1    IFEQ 'a'
     C                     MOVEL'A'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'b'
     C                     MOVEL'B'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'c'
     C                     MOVEL'C'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'd'
     C                     MOVEL'D'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'e'
     C                     MOVEL'E'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'f'
     C                     MOVEL'F'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'g'
     C                     MOVEL'G'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'h'
     C                     MOVEL'H'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'i'
     C                     MOVEL'I'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'j'
     C                     MOVEL'J'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'k'
     C                     MOVEL'K'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'l'
     C                     MOVEL'L'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'm'
     C                     MOVEL'M'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'n'
     C                     MOVEL'N'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'o'
     C                     MOVEL'O'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'p'
     C                     MOVEL'P'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'q'
     C                     MOVEL'Q'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'r'
     C                     MOVEL'R'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 's'
     C                     MOVEL'S'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 't'
     C                     MOVEL'T'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'u'
     C                     MOVEL'U'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'v'
     C                     MOVEL'V'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'w'
     C                     MOVEL'W'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'x'
     C                     MOVEL'X'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'y'
     C                     MOVEL'Y'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'z'
     C                     MOVEL'Z'       AR2,Y1
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ADD  1         Y1
     C                     END
     C                     MOVEAAR2       WN0001           LOAD OUTPUT
      * CVT Str to Upper Alpha US - /UT User Source  * 
     C                     MOVEA$DAJNA    AR1              LOAD ARRAY
     C                     MOVEA*BLANK    AR2              LOAD ARRAY
     C                     Z-ADD1         X1      20       SET COUNTER
     C                     Z-ADD1         Y1      20       SET COUNTER
     C           X1        DOWLT31
     C           AR1,X1    IFEQ ' '
     C           AR1,X1    ORGE 'a'
     C           AR1,X1    ANDLE'Z'
     C           AR1,X1    ANDNE'~'
     C           AR1,X1    ANDNE'{'
     C           AR1,X1    ANDNE'}'
     C           AR1,X1    ANDNE'\'
     C                     MOVE AR1,X1    AR2,Y1
     C                     ADD  1         Y1
     C                     ADD  1         X1
     C                     ELSE
     C                     ADD  1         X1
     C                     END
     C                     END
     C                     Z-ADD1         Y1
     C           Y1        DOWLT31
     C           AR2,Y1    IFEQ 'a'
     C                     MOVEL'A'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'b'
     C                     MOVEL'B'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'c'
     C                     MOVEL'C'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'd'
     C                     MOVEL'D'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'e'
     C                     MOVEL'E'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'f'
     C                     MOVEL'F'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'g'
     C                     MOVEL'G'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'h'
     C                     MOVEL'H'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'i'
     C                     MOVEL'I'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'j'
     C                     MOVEL'J'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'k'
     C                     MOVEL'K'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'l'
     C                     MOVEL'L'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'm'
     C                     MOVEL'M'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'n'
     C                     MOVEL'N'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'o'
     C                     MOVEL'O'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'p'
     C                     MOVEL'P'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'q'
     C                     MOVEL'Q'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'r'
     C                     MOVEL'R'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 's'
     C                     MOVEL'S'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 't'
     C                     MOVEL'T'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'u'
     C                     MOVEL'U'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'v'
     C                     MOVEL'V'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'w'
     C                     MOVEL'W'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'x'
     C                     MOVEL'X'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'y'
     C                     MOVEL'Y'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'z'
     C                     MOVEL'Z'       AR2,Y1
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ADD  1         Y1
     C                     END
     C                     MOVEAAR2       WN0002           LOAD OUTPUT
      * ** Rtv miles, if none, then reverse the order of cities and check
      * RTV Miles Between      RT - Mileage Between Cities  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0001    WL0023    P      From City
     C                     MOVELYL0011    WL0024    P      From State
     C                     MOVELWN0002    WL0025    P      To City
     C                     MOVEL$DBGCD    WL0026    P      To State State
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0027    P7YBNX           Miles to next s
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,001                    *IF
      * RTV Miles Between      RT - Mileage Between Cities  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0002    WL0023    P      From City
     C                     MOVEL$DBGCD    WL0024    P      From State
     C                     MOVELWN0001    WL0025    P      To City
     C                     MOVELYL0011    WL0026    P      To State State
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0027    P7YBNX           Miles to next s
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,001                    *IF
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,001                    *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP7YBNX    $DYBNX           Number 5,0
     C                     END                             *FI
     C                     END                             *FI
      * Company 2 Miles
      * CASE: CUR.Number 5,0           USR2 is Zero
     C           $DYCNX    IFEQ *ZERO                      *IF
      *
     C                     MOVEL*BLANK    WN0003 20        USR City
     C                     MOVEL*BLANK    WN0004 20        Ship To City
      *
      * RTV Miles Between      IF
     C                     Z-ADD0         P8YCNX           Miles to next s
      * ensure cities are all caps, no punctuation
      * usr city is From City; Ship to City is To city
      * CVT Str to Upper Alpha US - /UT User Source  * 
     C                     MOVEAYL0007    AR1              LOAD ARRAY
     C                     MOVEA*BLANK    AR2              LOAD ARRAY
     C                     Z-ADD1         X1      20       SET COUNTER
     C                     Z-ADD1         Y1      20       SET COUNTER
     C           X1        DOWLT31
     C           AR1,X1    IFEQ ' '
     C           AR1,X1    ORGE 'a'
     C           AR1,X1    ANDLE'Z'
     C           AR1,X1    ANDNE'~'
     C           AR1,X1    ANDNE'{'
     C           AR1,X1    ANDNE'}'
     C           AR1,X1    ANDNE'\'
     C                     MOVE AR1,X1    AR2,Y1
     C                     ADD  1         Y1
     C                     ADD  1         X1
     C                     ELSE
     C                     ADD  1         X1
     C                     END
     C                     END
     C                     Z-ADD1         Y1
     C           Y1        DOWLT31
     C           AR2,Y1    IFEQ 'a'
     C                     MOVEL'A'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'b'
     C                     MOVEL'B'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'c'
     C                     MOVEL'C'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'd'
     C                     MOVEL'D'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'e'
     C                     MOVEL'E'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'f'
     C                     MOVEL'F'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'g'
     C                     MOVEL'G'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'h'
     C                     MOVEL'H'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'i'
     C                     MOVEL'I'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'j'
     C                     MOVEL'J'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'k'
     C                     MOVEL'K'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'l'
     C                     MOVEL'L'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'm'
     C                     MOVEL'M'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'n'
     C                     MOVEL'N'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'o'
     C                     MOVEL'O'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'p'
     C                     MOVEL'P'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'q'
     C                     MOVEL'Q'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'r'
     C                     MOVEL'R'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 's'
     C                     MOVEL'S'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 't'
     C                     MOVEL'T'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'u'
     C                     MOVEL'U'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'v'
     C                     MOVEL'V'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'w'
     C                     MOVEL'W'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'x'
     C                     MOVEL'X'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'y'
     C                     MOVEL'Y'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'z'
     C                     MOVEL'Z'       AR2,Y1
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ADD  1         Y1
     C                     END
     C                     MOVEAAR2       WN0003           LOAD OUTPUT
      * CVT Str to Upper Alpha US - /UT User Source  * 
     C                     MOVEA$DAJNA    AR1              LOAD ARRAY
     C                     MOVEA*BLANK    AR2              LOAD ARRAY
     C                     Z-ADD1         X1      20       SET COUNTER
     C                     Z-ADD1         Y1      20       SET COUNTER
     C           X1        DOWLT31
     C           AR1,X1    IFEQ ' '
     C           AR1,X1    ORGE 'a'
     C           AR1,X1    ANDLE'Z'
     C           AR1,X1    ANDNE'~'
     C           AR1,X1    ANDNE'{'
     C           AR1,X1    ANDNE'}'
     C           AR1,X1    ANDNE'\'
     C                     MOVE AR1,X1    AR2,Y1
     C                     ADD  1         Y1
     C                     ADD  1         X1
     C                     ELSE
     C                     ADD  1         X1
     C                     END
     C                     END
     C                     Z-ADD1         Y1
     C           Y1        DOWLT31
     C           AR2,Y1    IFEQ 'a'
     C                     MOVEL'A'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'b'
     C                     MOVEL'B'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'c'
     C                     MOVEL'C'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'd'
     C                     MOVEL'D'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'e'
     C                     MOVEL'E'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'f'
     C                     MOVEL'F'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'g'
     C                     MOVEL'G'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'h'
     C                     MOVEL'H'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'i'
     C                     MOVEL'I'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'j'
     C                     MOVEL'J'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'k'
     C                     MOVEL'K'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'l'
     C                     MOVEL'L'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'm'
     C                     MOVEL'M'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'n'
     C                     MOVEL'N'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'o'
     C                     MOVEL'O'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'p'
     C                     MOVEL'P'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'q'
     C                     MOVEL'Q'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'r'
     C                     MOVEL'R'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 's'
     C                     MOVEL'S'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 't'
     C                     MOVEL'T'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'u'
     C                     MOVEL'U'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'v'
     C                     MOVEL'V'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'w'
     C                     MOVEL'W'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'x'
     C                     MOVEL'X'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'y'
     C                     MOVEL'Y'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'z'
     C                     MOVEL'Z'       AR2,Y1
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ADD  1         Y1
     C                     END
     C                     MOVEAAR2       WN0004           LOAD OUTPUT
      * ** Rtv miles, if none, then reverse the order of cities and check
      * RTV Miles Between      RT - Mileage Between Cities  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0003    WL0023    P      From City
     C                     MOVELYL0012    WL0024    P      From State
     C                     MOVELWN0004    WL0025    P      To City
     C                     MOVEL$DBGCD    WL0026    P      To State State
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0027    P8YCNX           Miles to next s
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,001                    *IF
      * RTV Miles Between      RT - Mileage Between Cities  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0004    WL0023    P      From City
     C                     MOVEL$DBGCD    WL0024    P      From State
     C                     MOVELWN0003    WL0025    P      To City
     C                     MOVELYL0012    WL0026    P      To State State
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0027    P8YCNX           Miles to next s
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,001                    *IF
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,001                    *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP8YCNX    $DYCNX           Number 5,0
     C                     END                             *FI
     C                     END                             *FI
      * Default Company
      * CASE: PAR.Default 1 USR is Yes
     C           P6L4TX    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0001    $DBXC3           Default Company
     C                     ELSE
      * CASE: PAR.Default 2 USR is Yes
     C           P6L5TX    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0002    $DBXC3           Default Company
     C                     END                             *FI
     C                     END                             *FI
      * EXCEPTION
      * CASE:
      *  - (c1 AND c2) AND c3
      *   |- c1    : CUR.Number 5,0           USR1 is Not Zero
      *   |- c2    : CUR.Number 5,0           USR2 is Not Zero
      *   |- c3    : CUR.Number 5,0           USR1 NE CUR.Number 5,0
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $DYBNX    IFNE *ZERO                      *IF
     C           $DYCNX    IFNE *ZERO                      *IF
     C           $DYBNX    IFNE $DYCNX                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: CUR.Number 5,0           USR1 LT CUR.Number 5,0           U
     C           $DYBNX    IFLT $DYCNX                     *IF
      * CASE: CUR.Default Company Usr NE LCL.USR Company Number 1
     C           $DBXC3    IFNE YL0001                     *IF
     C                     MOVEL'*'       $DPFTX           Text 1 Length U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $DPFTX           Text 1 Length U
     C                     END                             *FI
     C                     ELSE
      * CASE: CUR.Number 5,0           USR1 GT CUR.Number 5,0           U
     C           $DYBNX    IFGT $DYCNX                     *IF
      * CASE: CUR.Default Company Usr NE LCL.USR Company Number 2
     C           $DBXC3    IFNE YL0002                     *IF
     C                     MOVEL'*'       $DPFTX           Text 1 Length U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $DPFTX           Text 1 Length U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * RTV SR Desc,person     RT - Sales Route  * 
     C                     EXSR SJRVGN
      * Create WF MrgnMgt Transpo - WF MrgnMgt Transportation  * 
     C                     EXSR SKCRRC
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 1
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Ship To Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $DBKC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$DBKC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VDBKC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDBKC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Default Company Usr to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $DBXC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$DBXC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VDBXC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDBXC3           CD3 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           P1LISX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           P2LJSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      * Print format
     C                     WRITE$DKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of PRT MrgnMgt TrfInfo   PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of PRT MrgnMgt TrfInfo   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Ship To Customer of PRT MrgnMgt TrfInfo   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print Company Number of PRT MrgnMgt TrfInfo   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Detail line. of PRT MrgnMgt TrfInfo   PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
      * USER: On print of detail format
      * ** Condition selection criteria not to print after 1st page
     C                     MOVEL'N'       WUDTSX           Print (Yes/No)
      * CASE: CUR.Company Number EQ LCL.USR Company Number 1
     C           $CAIC3    IFEQ YL0001                     *IF
     C                     Z-ADD$CTBNB    $DTBNB           Absorbed Freigh
     C                     Z-ADD$CMTCU    $DYBNX           Number 5,0
     C                     MOVEL$CQ8ST    P6L4TX           Default 1 USR
     C                     ELSE
      * CASE: CUR.Company Number EQ LCL.USR Company Number 2
     C           $CAIC3    IFEQ YL0002                     *IF
     C                     Z-ADD$CTBNB    $DCYNY           Usr Abs Freight
     C                     Z-ADD$CMTCU    $DYCNX           Number 5,0
     C                     MOVEL$CQ8ST    P6L5TX           Default 2 USR
     C                     END                             *FI
     C                     END                             *FI
      * Mention hidden format
     C   99N99             WRITE$CDTLRCD
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of PRT MrgnMgt TrfInfo   PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Ship To Customer of PRT MrgnMgt TrfInfo   PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Company Number of PRT MrgnMgt TrfInfo   PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT MrgnMgt TrfInfo   PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD0         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
      * USER: Process top of page
     C                     MOVELP5VSST    $BVSST           Record Status
      * CASE: TOP.Record Status is Valid Entries
     C           $BVSST    IFEQ 'A'                        *IF
     C           $BVSST    OREQ 'D'
     C           $BVSST    OREQ 'I'
      * TOP.Condition Desc. 1  USR = Condition name of TOP.Record Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1255478   Y2LSNO  70       List number
     C                     PARM $BVSST    W0INVL 25        Record Status
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $BHLTX           Condition Desc.
     C                     MOVEL'*ALL'    $BHLTX           Condition Desc.
     C                     END                             *FI
      * ** Print Salesperson # and Name if passed in  07/27/2006 LJB
      * ** Retrieve salesperson name if salesperson code is passed in
      * CASE: PAR.Salesperson Code 1 is not entered
     C           P4DFCD    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $BALTX           Salesperson Nam
     C                     MOVEL'*ALL'    $BALTX           Salesperson Nam
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELP4DFCD    $BDFCD           Salesperson Cod
      * RTV Salesperson Name   RT - Salesperson  * 
     C                     EXSR SERVGN
     C                     END                             *FI
      * ** Retrieve Company Name if Company# is passed in
      * CASE: PAR.Company Number is Equal to zero
     C           P3AIC3    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    $BSQTX           Company Name DR
     C                     MOVEL'*ALL'    $BSQTX           Company Name DR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP3AIC3    $BAIC3           Company Number
     C                     MOVEL*BLANK    $BSQTX           Company Name DR
      * Company Name DRV
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SFRVGN
     C                     END                             *FI
     C                     MOVEL'N'       P1LISX           Output Only 1 U
     C                     MOVEL'N'       P2LJSX           Output Only 2 U
     C                     Z-ADDYL0001    $BB5C3           USR Company Num
     C                     Z-ADDYL0002    $BB6C3           USR Company Num
     C                     Z-ADD$BB5C3    $BBQC3           Company Number
     C                     Z-ADD$BB6C3    $BBSC3           Company Number
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BAIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert USR Company Number 1 to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BB5C3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BB5C3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBB5C3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBB5C3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert USR Company Number 2 to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BB6C3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BB6C3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBB6C3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBB6C3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Company Number     041405 to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BBQC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BBQC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBBQC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBBQC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Company Number     041743 to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BBSC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BBSC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBBSC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBBSC3           CD3 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           WUDTSX    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'A/R'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Plant Cos all     RT - Company Defaults Internal  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KPSSC     KLIST
     C                     KFLD           JYAIC3           Company Number
      * Setup key
     C                     Z-ADDWL0001    JYAIC3           Company Number
      * Establish starting position
     C           KPSSC     SETLL@JYREEY                    *
     C                     READ @JYREEY                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2025' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0002           USR Company Num
     C                     Z-ADD*ZERO     WL0003           USR Company Num
     C                     Z-ADD*ZERO     WL0004           USR Company Num
     C                     Z-ADD*ZERO     WL0005           USR Company Num
     C                     Z-ADD*ZERO     WL0006           USR Company Num
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.USR Company Number 1 is Equal to zero
     C           WL0002    IFEQ 0                          *IF
     C                     Z-ADDJYAIC3    WL0002           USR Company Num
     C                     ELSE
      * CASE: PAR.USR Company Number 2 is Equal to zero
     C           WL0003    IFEQ 0                          *IF
     C                     Z-ADDJYAIC3    WL0003           USR Company Num
     C                     ELSE
      * CASE: PAR.USR Company Number 3 is Equal to zero
     C           WL0004    IFEQ 0                          *IF
     C                     Z-ADDJYAIC3    WL0004           USR Company Num
     C                     ELSE
      * CASE: PAR.USR Company Number 4 is Equal to zero
     C           WL0005    IFEQ 0                          *IF
     C                     Z-ADDJYAIC3    WL0005           USR Company Num
     C                     ELSE
      * CASE: PAR.USR Company Number 5 is Equal to zero
     C           WL0006    IFEQ 0                          *IF
     C                     Z-ADDJYAIC3    WL0006           USR Company Num
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     READ @JYREEY                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Company Address    RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADDWL0007    ABAIC3           Company Number
      * Establish starting position
     C           KRSSD     CHAIN@ABREG3              90    *
      * Data record not found
     C   90                MOVEL'USR0003' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    WL0008           Name
     C                     MOVELABACNA    WL0009           Address Line 1
     C                     MOVELABADNA    WL0010           Address Line 2
     C                     MOVELABAENA    WL0011           Address Line 3
     C                     MOVELABAJNA    WL0012           City
     C                     MOVELABBTTX    WL0013           Zip/Postal Code
     C                     MOVELABBGCD    WL0014           State Code
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Salesperson Name   RT - Salesperson  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           APBCCD           Salesperson Cod
      * Setup key
     C                     MOVEL$BDFCD    APBCCD           Salesperson Cod
      * Establish starting position
     C           KRSSE     CHAIN@APREBU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0039' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BDFCD           Salesperson Cod
     C                     MOVEL*BLANK    $BALTX           Salesperson Nam
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAPBCCD    $BDFCD           Salesperson Cod
     C                     MOVELAPALTX    $BALTX           Salesperson Nam
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADDP3AIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSF     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BSQTX           Name
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    $BSQTX           Name
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Record Sts         RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           BBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADDEOBKC7    BBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSG     CHAIN@BBREE9              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0170' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUVSST           Record Status
     C                     GOTO SGEXIT                     *QUIT
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBBVSST    WUVSST           Record Status
     C                     GOTO SGEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Cust Name/Addr     RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           BBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADDWL0015    BBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSH     CHAIN@BBREE9              90    *
      * Data record not found
     C   90                MOVEL'USR0170' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBBAYTX    WL0016           Customer Name
     C                     MOVELBBACNA    WL0017           Address Line 1
     C                     MOVELBBADNA    WL0018           Address Line 2
     C                     MOVELBBAENA    WL0019           Address Line 3
     C                     MOVELBBAJNA    WL0020           City
     C                     MOVELBBBGCD    WL0021           State Code
     C                     MOVELBBBTTX    WL0022           Zip/Postal Code
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Miles Between      RT - Mileage Between Cities  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           LFXFCD           From City
     C                     KFLD           LFXICD           From State
     C                     KFLD           LFXGCD           To City
     C                     KFLD           LFXHCD           To State State
      * Setup key
     C                     MOVELWL0023    LFXFCD           From City
     C                     MOVELWL0024    LFXICD           From State
     C                     MOVELWL0025    LFXGCD           To City
     C                     MOVELWL0026    LFXHCD           To State State
      * Establish starting position
     C           KRSSI     CHAIN@LFRENA              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2457' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDLFRWNB    WL0027           Miles to next s
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV SR Desc,person     RT - Sales Route  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           JER4CD           Sales Route Cod
      * Setup key
     C                     MOVEL$DR4CD    JER4CD           Sales Route Cod
      * Establish starting position
     C           KRSSJ     CHAIN@JEREWF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1800' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0016           Sales Route Des
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELJEMZNA    YL0016           Sales Route Des
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKCRRC    BEGSR
      *================================================================
      * Create WF MrgnMgt Transpo - WF MrgnMgt Transportation  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @DSCPSN
     C                     Z-ADD$DBKC7    DSBKC7           Ship To Custome
     C                     MOVEL$DAYTX    DSAYTX           Customer Name
     C                     MOVEL$DAJNA    DSAJNA           City
     C                     MOVEL$DBGCD    DSBGCD           State Code
     C                     MOVEL$DBTTX    DSBTTX           Zip/Postal Code
     C                     MOVEL$DR4CD    DSR4CD           Sales Route Cod
     C                     MOVELYL0016    DSQENA           Sales Route Des
     C                     Z-ADDYL0001    DSCGC3           Plant Company 1
     C                     Z-ADDYL0002    DSCHC3           Plant Company 2
     C                     Z-ADD$DTBNB    DSLMNY           Absorbed Freigh
     C                     Z-ADD$DCYNY    DSLNNY           Absorbed Freigh
     C                     Z-ADD$DYBNX    DSLONY           Mileage to Cust
     C                     Z-ADD$DYCNX    DSLPNY           Mileage to Cust
     C                     Z-ADD$DBXC3    DSCIC3           Default Company
     C                     MOVEL$DPFTX    DSECST           Error Status
      *
     C           KLCRSK    KLIST
     C                     KFLD           DSBKC7           Ship To Custome
      * Check for duplicate primary key
     C           KLCRSK    SETLL@DSCPSN                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3922' W0RTN   7
      * Send message 'WF MrgnMgt Transportat EX'
     C                     MOVEL'USR3922' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C                     WRITE@DSCPSN                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1LISX           Output Only 1 U
     C                     MOVEL*BLANK    P2LJSX           Output Only 2 U
     C                     MOVEL*BLANK    P6L4TX           Default 1 USR
     C                     MOVEL*BLANK    P6L5TX           Default 2 USR
     C                     MOVEL*BLANK    P6L6TX           Default 3 USR
     C                     MOVEL*BLANK    P6L7TX           Default 4 USR
     C                     MOVEL*BLANK    P6L8TX           Default 5 USR
     C                     Z-ADD*ZERO     P7YBNX           Number 5,0
     C                     Z-ADD*ZERO     P8YCNX           Number 5,0
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field Print (Yes/No) USR
     C                     MOVEL*BLANK    WUDTSX  1
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    EOBKC7           Ship To Custome
     C                     MOVEL*LOVAL    EOAIC3           Company Number
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field Record Status
     C                     MOVEL*BLANK    WUVSST  1
      * Define work field Address Line 1
     C                     MOVEL*BLANK    WUACNA 30
      * Define work field Address Line 2
     C                     MOVEL*BLANK    WUADNA 30
      * Define work field Address Line 3
     C                     MOVEL*BLANK    WUAENA 30
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SCRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  30
     C                     Z-ADD*ZERO     WL0003  30
     C                     Z-ADD*ZERO     WL0004  30
     C                     Z-ADD*ZERO     WL0005  30
     C                     Z-ADD*ZERO     WL0006  30
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0007  30
     C                     MOVEL*BLANK    WL0008 30
     C                     MOVEL*BLANK    WL0009 30
     C                     MOVEL*BLANK    WL0010 30
     C                     MOVEL*BLANK    WL0011 30
     C                     MOVEL*BLANK    WL0012 20
     C                     MOVEL*BLANK    WL0013 11
     C                     MOVEL*BLANK    WL0014  2
      * Define local variables for subroutine SHRVGN.
     C                     Z-ADD*ZERO     WL0015  70
     C                     MOVEL*BLANK    WL0016 30
     C                     MOVEL*BLANK    WL0017 30
     C                     MOVEL*BLANK    WL0018 30
     C                     MOVEL*BLANK    WL0019 30
     C                     MOVEL*BLANK    WL0020 20
     C                     MOVEL*BLANK    WL0021  2
     C                     MOVEL*BLANK    WL0022 11
      * Define local variables for subroutine SIRVGN.
     C                     MOVEL*BLANK    WL0023 20
     C                     MOVEL*BLANK    WL0024  2
     C                     MOVEL*BLANK    WL0025 20
     C                     MOVEL*BLANK    WL0026  2
     C                     Z-ADD*ZERO     WL0027  50
      * Define local work field USR Company Number 1
     C                     Z-ADD*ZERO     YL0001  30
      * Define local work field USR Company Number 2
     C                     Z-ADD*ZERO     YL0002  30
      * Define local work field USR Company Number 3
     C                     Z-ADD*ZERO     YL0003  30
      * Define local work field USR Company Number 4
     C                     Z-ADD*ZERO     YL0004  30
      * Define local work field USR Company Number 5
     C                     Z-ADD*ZERO     YL0005  30
      * Define local work field USR City 1
     C                     MOVEL*BLANK    YL0006 20
      * Define local work field USR City 2
     C                     MOVEL*BLANK    YL0007 20
      * Define local work field USR City 3
     C                     MOVEL*BLANK    YL0008 20
      * Define local work field USR City 4
     C                     MOVEL*BLANK    YL0009 20
      * Define local work field USR City 5
     C                     MOVEL*BLANK    YL0010 20
      * Define local work field State 1 USR
     C                     MOVEL*BLANK    YL0011  2
      * Define local work field State 2 USR
     C                     MOVEL*BLANK    YL0012  2
      * Define local work field State 3 USR
     C                     MOVEL*BLANK    YL0013  2
      * Define local work field State 4 USR
     C                     MOVEL*BLANK    YL0014  2
      * Define local work field State 5 USR
     C                     MOVEL*BLANK    YL0015  2
      * Define null work field Name
     C                     MOVEL*BLANK    YN0001 30
      * Define null work field Address Line 1
     C                     MOVEL*BLANK    YN0002 30
      * Define null work field Address Line 2
     C                     MOVEL*BLANK    YN0003 30
      * Define null work field Address Line 3
     C                     MOVEL*BLANK    YN0004 30
      * Define null work field Zip/Postal Code
     C                     MOVEL*BLANK    YN0005 11
      * Define local work field Sales Route Description
     C                     MOVEL*BLANK    YL0016 30
      * Define null work field Salesperson Code
     C                     MOVEL*BLANK    YN0006  3
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     MOVEL'Y'       WUDTSX           Print (Yes/No)
      * Rtv Plant Co/City St  IF
      * Rtv Plant Cos all     RT - Company Defaults Internal  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP3AIC3    WL0001           Company Number
     C                     Z-ADDYL0001    WL0002           USR Company Num
     C                     Z-ADDYL0003    WL0003           USR Company Num
     C                     Z-ADDYL0002    WL0004           USR Company Num
     C                     Z-ADDYL0004    WL0005           USR Company Num
     C                     Z-ADDYL0005    WL0006           USR Company Num
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0002    YL0001           USR Company Num
     C                     Z-ADDWL0003    YL0003           USR Company Num
     C                     Z-ADDWL0004    YL0002           USR Company Num
     C                     Z-ADDWL0005    YL0004           USR Company Num
     C                     Z-ADDWL0006    YL0005           USR Company Num
      * Company 1
      * CASE: PAR.USR Company Number 1 is not equal to zero
     C           YL0001    IFNE 0                          *IF
      * RTV Company Address    RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0001    WL0007           Company Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0008    YN0001    P      Name
     C                     MOVELWL0009    YN0002    P      Address Line 1
     C                     MOVELWL0010    YN0003    P      Address Line 2
     C                     MOVELWL0011    YN0004    P      Address Line 3
     C                     MOVELWL0012    YL0006    P      City
     C                     MOVELWL0013    YN0005    P      Zip/Postal Code
     C                     MOVELWL0014    YL0011    P      State Code
     C                     END                             *FI
      * Company 2
      * CASE: PAR.USR Company Number 2 is not equal to zero
     C           YL0002    IFNE 0                          *IF
      * RTV Company Address    RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0007           Company Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0008    YN0001    P      Name
     C                     MOVELWL0009    YN0002    P      Address Line 1
     C                     MOVELWL0010    YN0003    P      Address Line 2
     C                     MOVELWL0011    YN0004    P      Address Line 3
     C                     MOVELWL0012    YL0007    P      City
     C                     MOVELWL0013    YN0005    P      Zip/Postal Code
     C                     MOVELWL0014    YL0012    P      State Code
     C                     END                             *FI
      * Company 3
      * CASE: PAR.USR Company Number 3 is not equal to zero
     C           YL0003    IFNE 0                          *IF
      * RTV Company Address    RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0003    WL0007           Company Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0008    YN0001    P      Name
     C                     MOVELWL0009    YN0002    P      Address Line 1
     C                     MOVELWL0010    YN0003    P      Address Line 2
     C                     MOVELWL0011    YN0004    P      Address Line 3
     C                     MOVELWL0012    YL0008    P      City
     C                     MOVELWL0013    YN0005    P      Zip/Postal Code
     C                     MOVELWL0014    YL0013    P      State Code
     C                     END                             *FI
      * Company 4
      * CASE: PAR.USR Company Number 4 is not equal to zero
     C           YL0004    IFNE 0                          *IF
      * RTV Company Address    RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0004    WL0007           Company Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0008    YN0001    P      Name
     C                     MOVELWL0009    YN0002    P      Address Line 1
     C                     MOVELWL0010    YN0003    P      Address Line 2
     C                     MOVELWL0011    YN0004    P      Address Line 3
     C                     MOVELWL0012    YL0009    P      City
     C                     MOVELWL0013    YN0005    P      Zip/Postal Code
     C                     MOVELWL0014    YL0014    P      State Code
     C                     END                             *FI
      * Company 5
      * CASE: PAR.USR Company Number 5 is not equal to zero
     C           YL0005    IFNE 0                          *IF
      * RTV Company Address    RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0005    WL0007           Company Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0008    YN0001    P      Name
     C                     MOVELWL0009    YN0002    P      Address Line 1
     C                     MOVELWL0010    YN0003    P      Address Line 2
     C                     MOVELWL0011    YN0004    P      Address Line 3
     C                     MOVELWL0012    YL0010    P      City
     C                     MOVELWL0013    YN0005    P      Zip/Postal Code
     C                     MOVELWL0014    YL0015    P      State Code
     C                     END                             *FI
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Y2U0005
