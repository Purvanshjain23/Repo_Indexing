// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKX5XFR
// ?Date: 14.08.2025 Time: 02:53:18
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?H16853 ISE 11/05/2020-Recompiled due to change in Buy Order Number
// LCL.TH Kill Date = PAR.TH Kill Date
LCL.TH_Kill_Date = PAR.TH_Kill_Date;

CASE;

// IF PAR.TH Kill Date is Not Found Kill Date
IF PAR.TH_Kill_Date = *ZERO;

EXECUTE FUNCTION(Rtv Current Kill Dt   RT) TYPE(RTVOBJ) FILE(PKAZREP)           AB1125333;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(LCL.Current_Kill_Date);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Call program Rtv Prev Kill Date    XF.
CALL PROGRAM(Rtv Prev Kill Date    XF) ('PDRUXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(LCL.Current_Kill_Date);
PARAMETER(LCL.TH_Kill_Date);

// Call program Rtv Next Prod Date    XF.
CALL PROGRAM(Rtv Next Prod Date    XF) ('PDITXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(LCL.TH_Kill_Date);
PARAMETER(PAR.Production_Date);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Rtv Next Prod Date    XF.
CALL PROGRAM(Rtv Next Prod Date    XF) ('PDITXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(PAR.Production_Date);

ENDIF;

EXECUTE FUNCTION(Bld Exp Rate HPE Sum  RT) TYPE(RTVOBJ) FILE(PKCPCPP)           AB1241456;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(LCL.TH_Kill_Date);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Export_Rate_Calc_STS_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 // LCL.EA Tattoo Number = CON.*ZERO
 LCL.EA_Tattoo_Number = *ZERO;

 //?USER: Process Data record

 //?Retrieve Source Type
 CASE;

 // IF LCL.EA Tattoo Number NE DB1.EA Tattoo Number
 IF LCL.EA_Tattoo_Number <> DB1.EA_Tattoo_Number;

 EXECUTE FUNCTION(Rtv Source Type       RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1241748;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(LCL.TH_Source_Type);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // LCL.EA Tattoo Number = DB1.EA Tattoo Number
 LCL.EA_Tattoo_Number = DB1.EA_Tattoo_Number;

 ENDIF;

 //?Valid Source Type
 CASE;

 // IF LCL.TH Source Type is *ALL values
 IF LCL.TH_Source_Type = 'E'/'I';

 CASE;

 // IF PAR.Export Rate Calc STS USR is All
 IF PAR.Export_Rate_Calc_STS_USR = *BLANK;

 // OR PAR.Export Rate Calc STS USR is HPE Summary
 OR PAR.Export_Rate_Calc_STS_USR = 'H';

 CASE;

 // IF DB1.EA Hot Weight is Not Zero
 IF DB1.EA_Hot_Weight <> *ZERO;

 // AND DB1.EA Backfat MM is GT Zero
 AND DB1.EA_Backfat_MM > *ZERO;

 // AND DB1.EA LoinEye MM is GT Zero
 AND DB1.EA_LoinEye_MM > *ZERO;

 CASE;

 // IF DB1.EA Hot Weight is Between 130 & 310
 IF DB1.EA_Hot_Weight >= 130;
 AND DB1.EA_Hot_Weight <= 310;

 //?COMPUTE LEAN % Morrison Hot Scale
 DO;

 //?Calculate Lean % per Pork Rules
 //?Backfat/loin are in inches
 //?2.827
 //?+ (0.469 * Carcass Weight)
 //?- (0.7271657 * Backfat MM)
 //?+ (0.3867718 * Loin Eye MM)
 //?-----------------------------
 //?/ Carcass Weight
 //?* 100
 // LCL.Lean % Fld 1 Usr = CON.1 * CON.2.827 *
 LCL.Lean_Fld_1_Usr = 1 * 2.827;

 // LCL.Lean % Fld 2 Usr = CON.1 * CON.0.469 *
 LCL.Lean_Fld_2_Usr = 1 * 0.469;

 // LCL.Lean % Fld 3 Usr = CON.0.7271657
 LCL.Lean_Fld_3_Usr = 0.7271657;

 // LCL.Lean % Fld 4 Usr = CON.0.3867718
 LCL.Lean_Fld_4_Usr = 0.3867718;

 CASE;

 // IF DB1.EA Hot Weight NE WRK.Zero USR
 IF DB1.EA_Hot_Weight <> WRK.Zero_USR;

 // LEAN % COMPUTE
 LCL.Lean_Fld_5_Usr = ( ( ( ( LCL.Lean_Fld_1_Usr + ( LCL.Lean_Fld_2_Usr
 * DB1.EA_Hot_Weight ) ) - ( LCL.Lean_Fld_3_Usr * DB1.EA_Backfat_MM ) ) + (                        +
 LCL.Lean_Fld_4_Usr * DB1.EA_LoinEye_MM ) ) / DB1.EA_Hot_Weight ) * 100;

 ENDIF;

 // LCL.ET Lean Percent NPPC = LCL.Lean % Fld 5 Usr * CON.1 *Rounded
 LCL.ET_Lean_Percent_NPPC = LCL.Lean_Fld_5_Usr * 1 'H';

 ENDDO;

 CASE;

 // IF LCL.ET Lean Percent NPPC is Between 42 & 62
 IF LCL.ET_Lean_Percent_NPPC >= 42;
 AND LCL.ET_Lean_Percent_NPPC <= 62;

 // Call program Clc Live Weight       XF.
 CALL PROGRAM(Clc Live Weight       XF) ('PDO1XFR');
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Hot_Weight);
 PARAMETER(NLL.Live_Weight_11_2_Usr);
 PARAMETER(LCL.Live_wgt_total_11_1_USR);
 PARAMETER(NLL.Live_Weight_5_0_USR);

 //?Live Weight, Hot Weight, Head Killed
 CASE;

 // IF LCL.TH Source Type is Internal
 IF LCL.TH_Source_Type = 'I';

 CASE;

 // IF DB1.EA Shift is Shift 1
 IF DB1.EA_Shift = '1';

 // PAR.Shift A Int Adj Live Wgt = PAR.Shift A Int Adj Live Wgt + LCL.Live wgt total 11.1   USR
 PAR.Shift_A_Int_Adj_Live_Wgt = PAR.Shift_A_Int_Adj_Live_Wgt
 + LCL.Live_wgt_total_11_1_USR;

 // PAR.Shift A Int Hot Wgt = PAR.Shift A Int Hot Wgt + DB1.EA Hot Weight
 PAR.Shift_A_Int_Hot_Wgt = PAR.Shift_A_Int_Hot_Wgt + DB1.EA_Hot_Weight;

 // PAR.Shift A Int Hd Killed = PAR.Shift A Int Hd Killed + CON.1
 PAR.Shift_A_Int_Hd_Killed = PAR.Shift_A_Int_Hd_Killed + 1;

 // IF DB1.EA Shift is Shift 2
 IF DB1.EA_Shift = '2';

 // PAR.Shift B Int Adj Live Wgt = PAR.Shift B Int Adj Live Wgt + LCL.Live wgt total 11.1   USR
 PAR.Shift_B_Int_Adj_Live_Wgt = PAR.Shift_B_Int_Adj_Live_Wgt
 + LCL.Live_wgt_total_11_1_USR;

 // PAR.Shift B Int Hot Wgt = PAR.Shift B Int Hot Wgt + DB1.EA Hot Weight
 PAR.Shift_B_Int_Hot_Wgt = PAR.Shift_B_Int_Hot_Wgt + DB1.EA_Hot_Weight;

 // PAR.Shift B Int Hd Killed = PAR.Shift B Int Hd Killed + CON.1
 PAR.Shift_B_Int_Hd_Killed = PAR.Shift_B_Int_Hd_Killed + 1;

 ENDIF;

 //?Live Weight, Hot Weight, Head Killed
 // IF LCL.TH Source Type is External
 IF LCL.TH_Source_Type = 'E';

 CASE;

 // IF DB1.EA Shift is Shift 1
 IF DB1.EA_Shift = '1';

 // PAR.Shift A Ext Adj Live Wgt = PAR.Shift A Ext Adj Live Wgt + LCL.Live wgt total 11.1   USR
 PAR.Shift_A_Ext_Adj_Live_Wgt = PAR.Shift_A_Ext_Adj_Live_Wgt
 + LCL.Live_wgt_total_11_1_USR;

 // PAR.Shift A Ext Hot Wgt = PAR.Shift A Ext Hot Wgt + DB1.EA Hot Weight
 PAR.Shift_A_Ext_Hot_Wgt = PAR.Shift_A_Ext_Hot_Wgt + DB1.EA_Hot_Weight;

 // PAR.Shift A Ext Hd Killed = PAR.Shift A Ext Hd Killed + CON.1
 PAR.Shift_A_Ext_Hd_Killed = PAR.Shift_A_Ext_Hd_Killed + 1;

 // IF DB1.EA Shift is Shift 2
 IF DB1.EA_Shift = '2';

 // PAR.Shift B Ext Adj Live Wgt = PAR.Shift B Ext Adj Live Wgt + LCL.Live wgt total 11.1   USR
 PAR.Shift_B_Ext_Adj_Live_Wgt = PAR.Shift_B_Ext_Adj_Live_Wgt
 + LCL.Live_wgt_total_11_1_USR;

 // PAR.Shift B Ext Hot Wgt = PAR.Shift B Ext Hot Wgt + DB1.EA Hot Weight
 PAR.Shift_B_Ext_Hot_Wgt = PAR.Shift_B_Ext_Hot_Wgt + DB1.EA_Hot_Weight;

 // PAR.Shift B Ext Hd Killed = PAR.Shift B Ext Hd Killed + CON.1
 PAR.Shift_B_Ext_Hd_Killed = PAR.Shift_B_Ext_Hd_Killed + 1;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?USER: Exit processing

 //?Calculate Standard Deviation
 CASE;

 // IF PAR.Export Rate Calc STS USR is All
 IF PAR.Export_Rate_Calc_STS_USR = *BLANK;

 // OR PAR.Export Rate Calc STS USR is Standard Deviation
 OR PAR.Export_Rate_Calc_STS_USR = 'S';

 // Call program Clc Std Deviation     CL.
 CALL PROGRAM(Clc Std Deviation     CL) ('PKX6UPC');
 PARAMETER('A');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(1);
 PARAMETER('I');
 PARAMETER(PAR.Shift_A_Int_Hot_Wgt_SDev);

 // Call program Clc Std Deviation     CL.
 CALL PROGRAM(Clc Std Deviation     CL) ('PKX6UPC');
 PARAMETER('A');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(2);
 PARAMETER('I');
 PARAMETER(PAR.Shift_B_Int_Hot_Wgt_SDev);

 // Call program Clc Std Deviation     CL.
 CALL PROGRAM(Clc Std Deviation     CL) ('PKX6UPC');
 PARAMETER('A');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(1);
 PARAMETER('E');
 PARAMETER(PAR.Shift_A_Ext_Hot_Wgt_SDev);

 // Call program Clc Std Deviation     CL.
 CALL PROGRAM(Clc Std Deviation     CL) ('PKX6UPC');
 PARAMETER('A');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(2);
 PARAMETER('E');
 PARAMETER(PAR.Shift_B_Ext_Hot_Wgt_SDev);

 // Call program Clc Std Deviation     CL.
 CALL PROGRAM(Clc Std Deviation     CL) ('PKX6UPC');
 PARAMETER('B');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(1);
 PARAMETER(LCL.TH_Source_Type);
 PARAMETER(PAR.Shift_A_Tot_Hot_Wgt_SDev);

 // Call program Clc Std Deviation     CL.
 CALL PROGRAM(Clc Std Deviation     CL) ('PKX6UPC');
 PARAMETER('B');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(2);
 PARAMETER(LCL.TH_Source_Type);
 PARAMETER(PAR.Shift_B_Tot_Hot_Wgt_SDev);

 // Call program Clc Std Deviation     CL.
 CALL PROGRAM(Clc Std Deviation     CL) ('PKX6UPC');
 PARAMETER('D');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(LCL.EA_Shift);
 PARAMETER('I');
 PARAMETER(PAR.Total_Int_Hot_Wgt_SDev);

 // Call program Clc Std Deviation     CL.
 CALL PROGRAM(Clc Std Deviation     CL) ('PKX6UPC');
 PARAMETER('D');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(LCL.EA_Shift);
 PARAMETER('E');
 PARAMETER(PAR.Total_Ext_Hot_Wgt_SDev);

 // Call program Clc Std Deviation     CL.
 CALL PROGRAM(Clc Std Deviation     CL) ('PKX6UPC');
 PARAMETER('C');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(LCL.EA_Shift);
 PARAMETER(LCL.TH_Source_Type);
 PARAMETER(PAR.Total_Hot_Wgt_SDev);

 ENDIF;

 //?Calculate Head w/2 Hours Rest
 CASE;

 // IF PAR.Export Rate Calc STS USR is All
 IF PAR.Export_Rate_Calc_STS_USR = *BLANK;

 // OR PAR.Export Rate Calc STS USR is 2Hr Rest
 OR PAR.Export_Rate_Calc_STS_USR = '2';

 // LCL.Company Number Alpha Usr = CVTVAR(PAR.EA Company Number)
 LCL.Company_Number_Alpha_Usr = CVTVAR(PAR.EA_Company_Number);

 // LCL.Date Alpha USR = CVTVAR(PAR.EA Kill Date)
 LCL.Date_Alpha_USR = CVTVAR(PAR.EA_Kill_Date);

 // LCL.Tattoo Nbr Alpha Usr = CVTVAR(WRK.TH Tattoo Number)
 LCL.Tattoo_Nbr_Alpha_Usr = CVTVAR(WRK.TH_Tattoo_Number);

 // LCL.Date Alpha Usr 2 = CVTVAR(PAR.EA Kill Date)
 LCL.Date_Alpha_Usr_2 = CVTVAR(PAR.EA_Kill_Date);

 // Execute command - 'SBM Prt/Download Rest Time Evaluation Report'
 EXECUTE COMMAND(PRK0998);
 PARAMETER(*BLANK);
 PARAMETER(WRK.PRT_Hold_Output_Sts);
 PARAMETER(WRK.PRT_Save_Output_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(LCL.Company_Number_Alpha_Usr);
 PARAMETER(LCL.Date_Alpha_USR);
 PARAMETER(WRK.TH_Source_Type);
 PARAMETER(*BLANK);
 PARAMETER(WRK.TH_Schedule_Kill_Shift);
 PARAMETER(LCL.Tattoo_Nbr_Alpha_Usr);
 PARAMETER(LCL.Date_Alpha_Usr_2);
 PARAMETER(*BLANK);
 PARAMETER('B');
 PARAMETER(*BLANK);

 // Call program Rtv >2hr Rest Head    XF.
 CALL PROGRAM(Rtv >2hr Rest Head    XF) ('PKX7XFR');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(PAR.Shift_A_Int_Hd_To_Kill);
 PARAMETER(PAR.Shift_A_Int_Hd_w_2Hr_Rest);
 PARAMETER(PAR.Shift_A_Ext_Hd_To_Kill);
 PARAMETER(PAR.Shift_A_Ext_Hd_w_2Hr_Rest);
 PARAMETER(PAR.Shift_B_Int_Hd_To_Kill);
 PARAMETER(PAR.Shift_B_Int_Hd_w_2Hr_Rest);
 PARAMETER(PAR.Shift_B_Ext_Hd_To_Kill);
 PARAMETER(PAR.Shift_B_Ext_Hd_w_2Hr_Rest);

 ENDIF;

 //?Retrieve Export Rate Adjustment
 CASE;

 // IF PAR.Export Rate Calc STS USR is All
 IF PAR.Export_Rate_Calc_STS_USR = *BLANK;

 // OR PAR.Export Rate Calc STS USR is Rate Adjustment
 OR PAR.Export_Rate_Calc_STS_USR = 'R';

 //?Shift A Internal
 CASE;

 // IF PAR.Shift A Int Hd Killed is Not Zero
 IF PAR.Shift_A_Int_Hd_Killed <> *ZERO;

 // LCL.Avg Hot Wgt 7.4 USR = PAR.Shift A Int Hot Wgt / PAR.Shift A Int Hd Killed *Rounded
 LCL.Avg_Hot_Wgt_7_4_USR = PAR.Shift_A_Int_Hot_Wgt / PAR.Shift_A_Int_Hd_Killed 'H';

 // Call program Rtv Export Rate Adj   XF.
 CALL PROGRAM(Rtv Export Rate Adj   XF) ('POPAXFR');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(1);
 PARAMETER(PAR.Shift_A_Int_Hot_Wgt_SDev);
 PARAMETER(LCL.Avg_Hot_Wgt_7_4_USR);
 PARAMETER(PAR.Shift_A_Int_Rate_Adj);

 ENDIF;

 //?Shift A External
 CASE;

 // IF PAR.Shift A Ext Hd Killed is Not Zero
 IF PAR.Shift_A_Ext_Hd_Killed <> *ZERO;

 // LCL.Avg Hot Wgt 7.4 USR = PAR.Shift A Ext Hot Wgt / PAR.Shift A Ext Hd Killed *Rounded
 LCL.Avg_Hot_Wgt_7_4_USR = PAR.Shift_A_Ext_Hot_Wgt / PAR.Shift_A_Ext_Hd_Killed 'H';

 // Call program Rtv Export Rate Adj   XF.
 CALL PROGRAM(Rtv Export Rate Adj   XF) ('POPAXFR');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(1);
 PARAMETER(PAR.Shift_A_Ext_Hot_Wgt_SDev);
 PARAMETER(LCL.Avg_Hot_Wgt_7_4_USR);
 PARAMETER(PAR.Shift_A_Ext_Rate_Adj);

 ENDIF;

 //?Shift A
 CASE;

 // IF PAR.Shift A Int Hd Killed is Not Zero
 IF PAR.Shift_A_Int_Hd_Killed <> *ZERO;

 // OR PAR.Shift A Ext Hd Killed is Not Zero
 OR PAR.Shift_A_Ext_Hd_Killed <> *ZERO;

 // Avg Hot Wgt
 LCL.Avg_Hot_Wgt_7_4_USR = ( PAR.Shift_A_Int_Hot_Wgt + PAR.Shift_A_Ext_Hot_Wgt ) / (
 PAR.Shift_A_Int_Hd_Killed + PAR.Shift_A_Ext_Hd_Killed ) 'H';

 // Call program Rtv Export Rate Adj   XF.
 CALL PROGRAM(Rtv Export Rate Adj   XF) ('POPAXFR');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(1);
 PARAMETER(PAR.Shift_A_Tot_Hot_Wgt_SDev);
 PARAMETER(LCL.Avg_Hot_Wgt_7_4_USR);
 PARAMETER(PAR.Shift_A_Tot_Rate_Adj);

 ENDIF;

 //?Shift B Internal
 CASE;

 // IF PAR.Shift B Int Hd Killed is Not Zero
 IF PAR.Shift_B_Int_Hd_Killed <> *ZERO;

 // LCL.Avg Hot Wgt 7.4 USR = PAR.Shift B Int Hot Wgt / PAR.Shift B Int Hd Killed *Rounded
 LCL.Avg_Hot_Wgt_7_4_USR = PAR.Shift_B_Int_Hot_Wgt / PAR.Shift_B_Int_Hd_Killed 'H';

 // Call program Rtv Export Rate Adj   XF.
 CALL PROGRAM(Rtv Export Rate Adj   XF) ('POPAXFR');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(2);
 PARAMETER(PAR.Shift_B_Int_Hot_Wgt_SDev);
 PARAMETER(LCL.Avg_Hot_Wgt_7_4_USR);
 PARAMETER(PAR.Shift_B_Int_Rate_Adj);

 ENDIF;

 //?Shift B External
 CASE;

 // IF PAR.Shift B Ext Hd Killed is Not Zero
 IF PAR.Shift_B_Ext_Hd_Killed <> *ZERO;

 // LCL.Avg Hot Wgt 7.4 USR = PAR.Shift B Ext Hot Wgt / PAR.Shift B Ext Hd Killed *Rounded
 LCL.Avg_Hot_Wgt_7_4_USR = PAR.Shift_B_Ext_Hot_Wgt / PAR.Shift_B_Ext_Hd_Killed 'H';

 // Call program Rtv Export Rate Adj   XF.
 CALL PROGRAM(Rtv Export Rate Adj   XF) ('POPAXFR');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(2);
 PARAMETER(PAR.Shift_B_Ext_Hot_Wgt_SDev);
 PARAMETER(LCL.Avg_Hot_Wgt_7_4_USR);
 PARAMETER(PAR.Shift_B_Ext_Rate_Adj);

 ENDIF;

 //?Shift B
 CASE;

 // IF PAR.Shift B Int Hd Killed is Not Zero
 IF PAR.Shift_B_Int_Hd_Killed <> *ZERO;

 // OR PAR.Shift B Ext Hd Killed is Not Zero
 OR PAR.Shift_B_Ext_Hd_Killed <> *ZERO;

 // Avg Hot Wgt
 LCL.Avg_Hot_Wgt_7_4_USR = ( PAR.Shift_B_Int_Hot_Wgt + PAR.Shift_B_Ext_Hot_Wgt ) / (
 PAR.Shift_B_Int_Hd_Killed + PAR.Shift_B_Ext_Hd_Killed ) 'H';

 // Call program Rtv Export Rate Adj   XF.
 CALL PROGRAM(Rtv Export Rate Adj   XF) ('POPAXFR');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(2);
 PARAMETER(PAR.Shift_B_Tot_Hot_Wgt_SDev);
 PARAMETER(LCL.Avg_Hot_Wgt_7_4_USR);
 PARAMETER(PAR.Shift_B_Tot_Rate_Adj);

 ENDIF;

 //?Total Internal
 CASE;

 // IF PAR.Shift A Int Hd Killed is Not Zero
 IF PAR.Shift_A_Int_Hd_Killed <> *ZERO;

 // OR PAR.Shift B Int Hd Killed is Not Zero
 OR PAR.Shift_B_Int_Hd_Killed <> *ZERO;

 // Avg Hot Wgt
 LCL.Avg_Hot_Wgt_7_4_USR = ( PAR.Shift_A_Int_Hot_Wgt + PAR.Shift_B_Int_Hot_Wgt ) / (
 PAR.Shift_A_Int_Hd_Killed + PAR.Shift_B_Int_Hd_Killed ) 'H';

 // Call program Rtv Export Rate Adj   XF.
 CALL PROGRAM(Rtv Export Rate Adj   XF) ('POPAXFR');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(WRK.EA_Shift);
 PARAMETER(PAR.Total_Int_Hot_Wgt_SDev);
 PARAMETER(LCL.Avg_Hot_Wgt_7_4_USR);
 PARAMETER(PAR.Total_Int_Rate_Adj);

 ENDIF;

 //?Total External
 CASE;

 // IF PAR.Shift A Ext Hd Killed is Not Zero
 IF PAR.Shift_A_Ext_Hd_Killed <> *ZERO;

 // OR PAR.Shift B Ext Hd Killed is Not Zero
 OR PAR.Shift_B_Ext_Hd_Killed <> *ZERO;

 // Avg Hot Wgt
 LCL.Avg_Hot_Wgt_7_4_USR = ( PAR.Shift_A_Ext_Hot_Wgt + PAR.Shift_B_Ext_Hot_Wgt ) / (
 PAR.Shift_A_Ext_Hd_Killed + PAR.Shift_B_Ext_Hd_Killed ) 'H';

 // Call program Rtv Export Rate Adj   XF.
 CALL PROGRAM(Rtv Export Rate Adj   XF) ('POPAXFR');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(WRK.EA_Shift);
 PARAMETER(PAR.Total_Ext_Hot_Wgt_SDev);
 PARAMETER(LCL.Avg_Hot_Wgt_7_4_USR);
 PARAMETER(PAR.Total_Ext_Rate_Adj);

 ENDIF;

 //?Total
 CASE;

 // IF PAR.Shift A Int Hd Killed is Not Zero
 IF PAR.Shift_A_Int_Hd_Killed <> *ZERO;

 // OR PAR.Shift B Int Hd Killed is Not Zero
 OR PAR.Shift_B_Int_Hd_Killed <> *ZERO;

 // OR PAR.Shift A Ext Hd Killed is Not Zero
 OR PAR.Shift_A_Ext_Hd_Killed <> *ZERO;

 // OR PAR.Shift B Ext Hd Killed is Not Zero
 OR PAR.Shift_B_Ext_Hd_Killed <> *ZERO;

 //?**  There can't be an adjustment, how do I know the max piece. **
 // Avg Hot Wgt
 LCL.Avg_Hot_Wgt_7_4_USR = ( ( ( PAR.Shift_A_Int_Hot_Wgt + PAR.Shift_A_Ext_Hot_Wgt )
 + PAR.Shift_B_Int_Hot_Wgt ) + PAR.Shift_B_Ext_Hot_Wgt ) ( ( ( PAR.Shift_A_Int_Hd_Killed           +
 + PAR.Shift_A_Ext_Hd_Killed ) + PAR.Shift_B_Int_Hd_Killed ) + PAR.Shift_B_Ext_Hd_Killed )         +
 'H';

 // WRK.EA Shift = WRK.Blank USR
 WRK.EA_Shift = WRK.Blank_USR;

 // Call program Rtv Export Rate Adj   XF.
 CALL PROGRAM(Rtv Export Rate Adj   XF) ('POPAXFR');
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(WRK.EA_Shift);
 PARAMETER(PAR.Total_Hot_Wgt_SDev);
 PARAMETER(LCL.Avg_Hot_Wgt_7_4_USR);
 PARAMETER(PAR.Total_Rate_Adj);

 ENDIF;

 ENDIF;

 EXECUTE FUNCTION(Upd Exp Rate HPE Sum  RT) TYPE(RTVOBJ) FILE(PKFDCPP)           AB1241554;
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(PAR.Shift_A_Int_Adj_Live_Wgt);
 PARAMETER(PAR.Shift_A_Int_Hot_Wgt);
 PARAMETER(PAR.Shift_A_Int_Hd_Killed);
 PARAMETER(PAR.Shift_A_Int_Hd_To_Kill);
 PARAMETER(PAR.Shift_A_Int_Hd_w_2Hr_Rest);
 PARAMETER(PAR.Shift_A_Int_Hot_Wgt_SDev);
 PARAMETER(PAR.Shift_A_Int_Rate_Adj);
 PARAMETER(PAR.Shift_A_Ext_Adj_Live_Wgt);
 PARAMETER(PAR.Shift_A_Ext_Hot_Wgt);
 PARAMETER(PAR.Shift_A_Ext_Hd_Killed);
 PARAMETER(PAR.Shift_A_Ext_Hd_To_Kill);
 PARAMETER(PAR.Shift_A_Ext_Hd_w_2Hr_Rest);
 PARAMETER(PAR.Shift_A_Ext_Hot_Wgt_SDev);
 PARAMETER(PAR.Shift_A_Ext_Rate_Adj);
 PARAMETER(PAR.Shift_A_Tot_Hot_Wgt_SDev);
 PARAMETER(PAR.Shift_A_Tot_Rate_Adj);
 PARAMETER(PAR.Shift_B_Int_Adj_Live_Wgt);
 PARAMETER(PAR.Shift_B_Int_Hot_Wgt);
 PARAMETER(PAR.Shift_B_Int_Hd_Killed);
 PARAMETER(PAR.Shift_B_Int_Hd_To_Kill);
 PARAMETER(PAR.Shift_B_Int_Hd_w_2Hr_Rest);
 PARAMETER(PAR.Shift_B_Int_Hot_Wgt_SDev);
 PARAMETER(PAR.Shift_B_Int_Rate_Adj);
 PARAMETER(PAR.Shift_B_Ext_Adj_Live_Wgt);
 PARAMETER(PAR.Shift_B_Ext_Hot_Wgt);
 PARAMETER(PAR.Shift_B_Ext_Hd_Killed);
 PARAMETER(PAR.Shift_B_Ext_Hd_To_Kill);
 PARAMETER(PAR.Shift_B_Ext_Hd_w_2Hr_Rest);
 PARAMETER(PAR.Shift_B_Ext_Hot_Wgt_SDev);
 PARAMETER(PAR.Shift_B_Ext_Rate_Adj);
 PARAMETER(PAR.Shift_B_Tot_Hot_Wgt_SDev);
 PARAMETER(PAR.Shift_B_Tot_Rate_Adj);
 PARAMETER(PAR.Total_Int_Hot_Wgt_SDev);
 PARAMETER(PAR.Total_Int_Rate_Adj);
 PARAMETER(PAR.Total_Ext_Hot_Wgt_SDev);
 PARAMETER(PAR.Total_Ext_Rate_Adj);
 PARAMETER(PAR.Total_Hot_Wgt_SDev);
 PARAMETER(PAR.Total_Rate_Adj);
 PARAMETER(PAR.Production_Date);
 PARAMETER(PAR.Export_Rate_Calc_STS_USR);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Exp Rate HPE Sum  CR) TYPE(CRTOBJ) FILE(PKFDCPP)           AB1241449;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(PAR.Shift_A_Int_Adj_Live_Wgt);
  PARAMETER(PAR.Shift_A_Int_Hot_Wgt);
  PARAMETER(PAR.Shift_A_Int_Hd_Killed);
  PARAMETER(PAR.Shift_A_Int_Hd_To_Kill);
  PARAMETER(PAR.Shift_A_Int_Hd_w_2Hr_Rest);
  PARAMETER(PAR.Shift_A_Int_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_A_Int_Rate_Adj);
  PARAMETER(PAR.Shift_A_Ext_Adj_Live_Wgt);
  PARAMETER(PAR.Shift_A_Ext_Hot_Wgt);
  PARAMETER(PAR.Shift_A_Ext_Hd_Killed);
  PARAMETER(PAR.Shift_A_Ext_Hd_To_Kill);
  PARAMETER(PAR.Shift_A_Ext_Hd_w_2Hr_Rest);
  PARAMETER(PAR.Shift_A_Ext_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_A_Ext_Rate_Adj);
  PARAMETER(PAR.Shift_A_Tot_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_A_Tot_Rate_Adj);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Shift_B_Int_Adj_Live_Wgt);
  PARAMETER(PAR.Shift_B_Int_Hot_Wgt);
  PARAMETER(PAR.Shift_B_Int_Hd_Killed);
  PARAMETER(PAR.Shift_B_Int_Hd_To_Kill);
  PARAMETER(PAR.Shift_B_Int_Hd_w_2Hr_Rest);
  PARAMETER(PAR.Shift_B_Int_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_B_Int_Rate_Adj);
  PARAMETER(PAR.Shift_B_Ext_Adj_Live_Wgt);
  PARAMETER(PAR.Shift_B_Ext_Hot_Wgt);
  PARAMETER(PAR.Shift_B_Ext_Hd_Killed);
  PARAMETER(PAR.Shift_B_Ext_Hd_To_Kill);
  PARAMETER(PAR.Shift_B_Ext_Hd_w_2Hr_Rest);
  PARAMETER(PAR.Shift_B_Ext_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_B_Ext_Rate_Adj);
  PARAMETER(PAR.Shift_B_Tot_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_B_Tot_Rate_Adj);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Total_Int_Hot_Wgt_SDev);
  PARAMETER(PAR.Total_Int_Rate_Adj);
  PARAMETER(PAR.Total_Ext_Hot_Wgt_SDev);
  PARAMETER(PAR.Total_Ext_Rate_Adj);
  PARAMETER(PAR.Total_Hot_Wgt_SDev);
  PARAMETER(PAR.Total_Rate_Adj);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Production_Date);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // Call program Rtv System Date & Tim UP.
    CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
    PARAMETER(PAR.RS_Date_Added);
    PARAMETER(PAR.RS_Time_Added);

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  CASE;

  // IF PAR.Export Rate Calc STS USR is All
  IF PAR.Export_Rate_Calc_STS_USR = *BLANK;

  EXECUTE FUNCTION(Chg Exp Rate HPE Sum  CH) TYPE(CHGOBJ) FILE(PKFDCPP)           AB1241450;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(PAR.Shift_A_Int_Adj_Live_Wgt);
  PARAMETER(PAR.Shift_A_Int_Hot_Wgt);
  PARAMETER(PAR.Shift_A_Int_Hd_Killed);
  PARAMETER(PAR.Shift_A_Int_Hd_To_Kill);
  PARAMETER(PAR.Shift_A_Int_Hd_w_2Hr_Rest);
  PARAMETER(PAR.Shift_A_Int_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_A_Int_Rate_Adj);
  PARAMETER(PAR.Shift_A_Ext_Adj_Live_Wgt);
  PARAMETER(PAR.Shift_A_Ext_Hot_Wgt);
  PARAMETER(PAR.Shift_A_Ext_Hd_Killed);
  PARAMETER(PAR.Shift_A_Ext_Hd_To_Kill);
  PARAMETER(PAR.Shift_A_Ext_Hd_w_2Hr_Rest);
  PARAMETER(PAR.Shift_A_Ext_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_A_Ext_Rate_Adj);
  PARAMETER(PAR.Shift_A_Tot_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_A_Tot_Rate_Adj);
  PARAMETER(DB1.Shift_A_Kill_to_Cut_Avg);
  PARAMETER(PAR.Shift_B_Int_Adj_Live_Wgt);
  PARAMETER(PAR.Shift_B_Int_Hot_Wgt);
  PARAMETER(PAR.Shift_B_Int_Hd_Killed);
  PARAMETER(PAR.Shift_B_Int_Hd_To_Kill);
  PARAMETER(PAR.Shift_B_Int_Hd_w_2Hr_Rest);
  PARAMETER(PAR.Shift_B_Int_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_B_Int_Rate_Adj);
  PARAMETER(PAR.Shift_B_Ext_Adj_Live_Wgt);
  PARAMETER(PAR.Shift_B_Ext_Hot_Wgt);
  PARAMETER(PAR.Shift_B_Ext_Hd_Killed);
  PARAMETER(PAR.Shift_B_Ext_Hd_To_Kill);
  PARAMETER(PAR.Shift_B_Ext_Hd_w_2Hr_Rest);
  PARAMETER(PAR.Shift_B_Ext_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_B_Ext_Rate_Adj);
  PARAMETER(PAR.Shift_B_Tot_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_B_Tot_Rate_Adj);
  PARAMETER(DB1.Shift_B_Kill_to_Cut_Avg);
  PARAMETER(PAR.Total_Int_Hot_Wgt_SDev);
  PARAMETER(PAR.Total_Int_Rate_Adj);
  PARAMETER(PAR.Total_Ext_Hot_Wgt_SDev);
  PARAMETER(PAR.Total_Ext_Rate_Adj);
  PARAMETER(PAR.Total_Hot_Wgt_SDev);
  PARAMETER(PAR.Total_Rate_Adj);
  PARAMETER(DB1.Total_Kill_to_Cut_Avg);
  PARAMETER(PAR.Production_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // Call program Rtv System Date & Tim UP.
    CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
    PARAMETER(PAR.RS_Date_Changed);
    PARAMETER(PAR.RS_Time_Changed);

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  // IF PAR.Export Rate Calc STS USR is HPE Summary
  IF PAR.Export_Rate_Calc_STS_USR = 'H';

  EXECUTE FUNCTION(Chg Exp Rate HPE Sum  CH) TYPE(CHGOBJ) FILE(PKFDCPP)           AB1241450;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(PAR.Shift_A_Int_Adj_Live_Wgt);
  PARAMETER(PAR.Shift_A_Int_Hot_Wgt);
  PARAMETER(PAR.Shift_A_Int_Hd_Killed);
  PARAMETER(DB1.Shift_A_Int_Hd_To_Kill);
  PARAMETER(DB1.Shift_A_Int_Hd_w_2Hr_Rest);
  PARAMETER(DB1.Shift_A_Int_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_A_Int_Rate_Adj);
  PARAMETER(PAR.Shift_A_Ext_Adj_Live_Wgt);
  PARAMETER(PAR.Shift_A_Ext_Hot_Wgt);
  PARAMETER(PAR.Shift_A_Ext_Hd_Killed);
  PARAMETER(DB1.Shift_A_Ext_Hd_To_Kill);
  PARAMETER(DB1.Shift_A_Ext_Hd_w_2Hr_Rest);
  PARAMETER(DB1.Shift_A_Ext_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_A_Ext_Rate_Adj);
  PARAMETER(DB1.Shift_A_Tot_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_A_Tot_Rate_Adj);
  PARAMETER(DB1.Shift_A_Kill_to_Cut_Avg);
  PARAMETER(PAR.Shift_B_Int_Adj_Live_Wgt);
  PARAMETER(PAR.Shift_B_Int_Hot_Wgt);
  PARAMETER(PAR.Shift_B_Int_Hd_Killed);
  PARAMETER(DB1.Shift_B_Int_Hd_To_Kill);
  PARAMETER(DB1.Shift_B_Int_Hd_w_2Hr_Rest);
  PARAMETER(DB1.Shift_B_Int_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_B_Int_Rate_Adj);
  PARAMETER(PAR.Shift_B_Ext_Adj_Live_Wgt);
  PARAMETER(PAR.Shift_B_Ext_Hot_Wgt);
  PARAMETER(PAR.Shift_B_Ext_Hd_Killed);
  PARAMETER(DB1.Shift_B_Ext_Hd_To_Kill);
  PARAMETER(DB1.Shift_B_Ext_Hd_w_2Hr_Rest);
  PARAMETER(DB1.Shift_B_Ext_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_B_Ext_Rate_Adj);
  PARAMETER(DB1.Shift_B_Tot_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_B_Tot_Rate_Adj);
  PARAMETER(DB1.Shift_B_Kill_to_Cut_Avg);
  PARAMETER(DB1.Total_Int_Hot_Wgt_SDev);
  PARAMETER(DB1.Total_Int_Rate_Adj);
  PARAMETER(DB1.Total_Ext_Hot_Wgt_SDev);
  PARAMETER(DB1.Total_Ext_Rate_Adj);
  PARAMETER(DB1.Total_Hot_Wgt_SDev);
  PARAMETER(DB1.Total_Rate_Adj);
  PARAMETER(DB1.Total_Kill_to_Cut_Avg);
  PARAMETER(PAR.Production_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // Call program Rtv System Date & Tim UP.
    CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
    PARAMETER(PAR.RS_Date_Changed);
    PARAMETER(PAR.RS_Time_Changed);

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  // IF PAR.Export Rate Calc STS USR is Standard Deviation
  IF PAR.Export_Rate_Calc_STS_USR = 'S';

  EXECUTE FUNCTION(Chg Exp Rate HPE Sum  CH) TYPE(CHGOBJ) FILE(PKFDCPP)           AB1241450;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.Shift_A_Int_Adj_Live_Wgt);
  PARAMETER(DB1.Shift_A_Int_Hot_Wgt);
  PARAMETER(DB1.Shift_A_Int_Hd_Killed);
  PARAMETER(DB1.Shift_A_Int_Hd_To_Kill);
  PARAMETER(DB1.Shift_A_Int_Hd_w_2Hr_Rest);
  PARAMETER(PAR.Shift_A_Int_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_A_Int_Rate_Adj);
  PARAMETER(DB1.Shift_A_Ext_Adj_Live_Wgt);
  PARAMETER(DB1.Shift_A_Ext_Hot_Wgt);
  PARAMETER(DB1.Shift_A_Ext_Hd_Killed);
  PARAMETER(DB1.Shift_A_Ext_Hd_To_Kill);
  PARAMETER(DB1.Shift_A_Ext_Hd_w_2Hr_Rest);
  PARAMETER(PAR.Shift_A_Ext_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_A_Ext_Rate_Adj);
  PARAMETER(PAR.Shift_A_Tot_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_A_Tot_Rate_Adj);
  PARAMETER(DB1.Shift_A_Kill_to_Cut_Avg);
  PARAMETER(DB1.Shift_B_Int_Adj_Live_Wgt);
  PARAMETER(DB1.Shift_B_Int_Hot_Wgt);
  PARAMETER(DB1.Shift_B_Int_Hd_Killed);
  PARAMETER(DB1.Shift_B_Int_Hd_To_Kill);
  PARAMETER(DB1.Shift_B_Int_Hd_w_2Hr_Rest);
  PARAMETER(PAR.Shift_B_Int_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_B_Int_Rate_Adj);
  PARAMETER(DB1.Shift_B_Ext_Adj_Live_Wgt);
  PARAMETER(DB1.Shift_B_Ext_Hot_Wgt);
  PARAMETER(DB1.Shift_B_Ext_Hd_Killed);
  PARAMETER(DB1.Shift_B_Ext_Hd_To_Kill);
  PARAMETER(DB1.Shift_B_Ext_Hd_w_2Hr_Rest);
  PARAMETER(PAR.Shift_B_Ext_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_B_Ext_Rate_Adj);
  PARAMETER(PAR.Shift_B_Tot_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_B_Tot_Rate_Adj);
  PARAMETER(DB1.Shift_B_Kill_to_Cut_Avg);
  PARAMETER(PAR.Total_Int_Hot_Wgt_SDev);
  PARAMETER(DB1.Total_Int_Rate_Adj);
  PARAMETER(PAR.Total_Ext_Hot_Wgt_SDev);
  PARAMETER(DB1.Total_Ext_Rate_Adj);
  PARAMETER(PAR.Total_Hot_Wgt_SDev);
  PARAMETER(DB1.Total_Rate_Adj);
  PARAMETER(DB1.Total_Kill_to_Cut_Avg);
  PARAMETER(PAR.Production_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // Call program Rtv System Date & Tim UP.
    CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
    PARAMETER(PAR.RS_Date_Changed);
    PARAMETER(PAR.RS_Time_Changed);

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  // IF PAR.Export Rate Calc STS USR is 2Hr Rest
  IF PAR.Export_Rate_Calc_STS_USR = '2';

  EXECUTE FUNCTION(Chg Exp Rate HPE Sum  CH) TYPE(CHGOBJ) FILE(PKFDCPP)           AB1241450;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.Shift_A_Int_Adj_Live_Wgt);
  PARAMETER(DB1.Shift_A_Int_Hot_Wgt);
  PARAMETER(DB1.Shift_A_Int_Hd_Killed);
  PARAMETER(PAR.Shift_A_Int_Hd_To_Kill);
  PARAMETER(PAR.Shift_A_Int_Hd_w_2Hr_Rest);
  PARAMETER(DB1.Shift_A_Int_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_A_Int_Rate_Adj);
  PARAMETER(DB1.Shift_A_Ext_Adj_Live_Wgt);
  PARAMETER(DB1.Shift_A_Ext_Hot_Wgt);
  PARAMETER(DB1.Shift_A_Ext_Hd_Killed);
  PARAMETER(PAR.Shift_A_Ext_Hd_To_Kill);
  PARAMETER(PAR.Shift_A_Ext_Hd_w_2Hr_Rest);
  PARAMETER(DB1.Shift_A_Ext_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_A_Ext_Rate_Adj);
  PARAMETER(DB1.Shift_A_Tot_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_A_Tot_Rate_Adj);
  PARAMETER(DB1.Shift_A_Kill_to_Cut_Avg);
  PARAMETER(DB1.Shift_B_Int_Adj_Live_Wgt);
  PARAMETER(DB1.Shift_B_Int_Hot_Wgt);
  PARAMETER(DB1.Shift_B_Int_Hd_Killed);
  PARAMETER(PAR.Shift_B_Int_Hd_To_Kill);
  PARAMETER(PAR.Shift_B_Int_Hd_w_2Hr_Rest);
  PARAMETER(DB1.Shift_B_Int_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_B_Int_Rate_Adj);
  PARAMETER(DB1.Shift_B_Ext_Adj_Live_Wgt);
  PARAMETER(DB1.Shift_B_Ext_Hot_Wgt);
  PARAMETER(DB1.Shift_B_Ext_Hd_Killed);
  PARAMETER(PAR.Shift_B_Ext_Hd_To_Kill);
  PARAMETER(PAR.Shift_B_Ext_Hd_w_2Hr_Rest);
  PARAMETER(DB1.Shift_B_Ext_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_B_Ext_Rate_Adj);
  PARAMETER(DB1.Shift_B_Tot_Hot_Wgt_SDev);
  PARAMETER(DB1.Shift_B_Tot_Rate_Adj);
  PARAMETER(DB1.Shift_B_Kill_to_Cut_Avg);
  PARAMETER(DB1.Total_Int_Hot_Wgt_SDev);
  PARAMETER(DB1.Total_Int_Rate_Adj);
  PARAMETER(DB1.Total_Ext_Hot_Wgt_SDev);
  PARAMETER(DB1.Total_Ext_Rate_Adj);
  PARAMETER(DB1.Total_Hot_Wgt_SDev);
  PARAMETER(DB1.Total_Rate_Adj);
  PARAMETER(DB1.Total_Kill_to_Cut_Avg);
  PARAMETER(PAR.Production_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // Call program Rtv System Date & Tim UP.
    CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
    PARAMETER(PAR.RS_Date_Changed);
    PARAMETER(PAR.RS_Time_Changed);

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  // IF PAR.Export Rate Calc STS USR is Rate Adjustment
  IF PAR.Export_Rate_Calc_STS_USR = 'R';

  EXECUTE FUNCTION(Chg Exp Rate HPE Sum  CH) TYPE(CHGOBJ) FILE(PKFDCPP)           AB1241450;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.Shift_A_Int_Adj_Live_Wgt);
  PARAMETER(DB1.Shift_A_Int_Hot_Wgt);
  PARAMETER(DB1.Shift_A_Int_Hd_Killed);
  PARAMETER(DB1.Shift_A_Int_Hd_To_Kill);
  PARAMETER(DB1.Shift_A_Int_Hd_w_2Hr_Rest);
  PARAMETER(DB1.Shift_A_Int_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_A_Int_Rate_Adj);
  PARAMETER(DB1.Shift_A_Ext_Adj_Live_Wgt);
  PARAMETER(DB1.Shift_A_Ext_Hot_Wgt);
  PARAMETER(DB1.Shift_A_Ext_Hd_Killed);
  PARAMETER(DB1.Shift_A_Ext_Hd_To_Kill);
  PARAMETER(DB1.Shift_A_Ext_Hd_w_2Hr_Rest);
  PARAMETER(DB1.Shift_A_Ext_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_A_Ext_Rate_Adj);
  PARAMETER(DB1.Shift_A_Tot_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_A_Tot_Rate_Adj);
  PARAMETER(DB1.Shift_A_Kill_to_Cut_Avg);
  PARAMETER(DB1.Shift_B_Int_Adj_Live_Wgt);
  PARAMETER(DB1.Shift_B_Int_Hot_Wgt);
  PARAMETER(DB1.Shift_B_Int_Hd_Killed);
  PARAMETER(DB1.Shift_B_Int_Hd_To_Kill);
  PARAMETER(DB1.Shift_B_Int_Hd_w_2Hr_Rest);
  PARAMETER(DB1.Shift_B_Int_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_B_Int_Rate_Adj);
  PARAMETER(DB1.Shift_B_Ext_Adj_Live_Wgt);
  PARAMETER(DB1.Shift_B_Ext_Hot_Wgt);
  PARAMETER(DB1.Shift_B_Ext_Hd_Killed);
  PARAMETER(DB1.Shift_B_Ext_Hd_To_Kill);
  PARAMETER(DB1.Shift_B_Ext_Hd_w_2Hr_Rest);
  PARAMETER(DB1.Shift_B_Ext_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_B_Ext_Rate_Adj);
  PARAMETER(DB1.Shift_B_Tot_Hot_Wgt_SDev);
  PARAMETER(PAR.Shift_B_Tot_Rate_Adj);
  PARAMETER(DB1.Shift_B_Kill_to_Cut_Avg);
  PARAMETER(DB1.Total_Int_Hot_Wgt_SDev);
  PARAMETER(PAR.Total_Int_Rate_Adj);
  PARAMETER(DB1.Total_Ext_Hot_Wgt_SDev);
  PARAMETER(PAR.Total_Ext_Rate_Adj);
  PARAMETER(DB1.Total_Hot_Wgt_SDev);
  PARAMETER(PAR.Total_Rate_Adj);
  PARAMETER(DB1.Total_Kill_to_Cut_Avg);
  PARAMETER(PAR.Production_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // Call program Rtv System Date & Tim UP.
    CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
    PARAMETER(PAR.RS_Date_Changed);
    PARAMETER(PAR.RS_Time_Changed);

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  ENDIF;

 }

}


