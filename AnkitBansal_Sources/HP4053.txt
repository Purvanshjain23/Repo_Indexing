      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP4053
      * TITLE:       Specify Options for Wean Pig Projection Listing
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     06/09/02
      *
      *
      * FUNCTION: This Specify uses an edit record format to allow the user
      *           to specify options for generating the listing.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 08/05/02  LeAnne Fedor
      *           Added 2 new yes/no flag fields that allow user to elect
      *           to print either/both parts of the report:  wean pig data and/or
      *           out-of-nursery/grow finish data
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd4053   cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhsp002    if   e           k disk
      *    Functions
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D all             c                   'A'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Compile time array for SBMJOB used in QCMDEXC
      *---------------------------------------------------------------
     D cmd             s              1    dim(80) ctdata perrcd(80)
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Control fields
      *
     D termfl          s              1
      *
      *
      * Parm fields
      *
     D xxaist          s              1
     D xxalphfscd      s              5a
     D xxfscd          s                   like(fsfscd)
     D xxfsnm          s                   like(fsfsnm)
     D xxdsfl          s                   like(d1dsfl)
     D xxdsds          s                   like(d1dsds)
     D xxynfl          s                   like(d1wynfl)
     D xxalphcell      s              2a
      *
     D xxjobq          s             10     inz('*JOBD     ')
     D xxnite          s              1     inz('N')
     D xxcopy          s              1  0
      *
     D infncd          s             10
     D inbobo          s              5
     D indvfl          s              1
     D inbofl          s              1
     D oubobo          s              5
     D oubods          s             30
     D oudvcd          s              5
     D secfl           s              1
     D oubofl          s              1
     D ourmfl          s              1
      *
      *
      * Workfields
      *
     D wkfld           s              2  0
      *
      *  Parms for use with QCMDEXC.  'LENGTH' is the length of the
      *  command that will be issued with QCMDEXC.  QCMDEXC requires
      *  the field containing length to be defined as 15 with 5 decimal
      *  positions.  The field 'CMDSBM' will hold the values of the
      *  submit job command when passed as a parm on the call to
      *  QCMDEXC.
      *
     D length          s             15  5 inz(80)
     D cmdsbm          s             80
      *
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      *
      * Local data area.
      *
     Dlda             uds                  dtaara(*lda)
     D  ldsvyr                 1      4  0
     D  ldsvwk                 5      6  0
     D  ldwnyr                 7     10  0
     D  ldwnwk                11     12  0
      *
     D  ldbwfl                13     13
     D  ldweeks               14     15  0
      *
     D  ldfryr                16     19  0
     D  ldfrwk                20     21  0
     D  ldtoyr                22     25  0
     D  ldtowk                26     27  0
      *
     D  lddsfl                28     28
     D  lddsds                29     38
     D  ldcell                39     40  0
     D  ldfscd                41     45  0
     D  ldfsnm                46     70
      *
     D  ldwynfl               71     71
     D  ldfynfl               72     72
      *
     D  ldoutu               401    410
     D  ldhold               411    411
     D  ldcopy               412    412  0
     D  ldoutq               413    422
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
     C
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * If the user failed the initial security checks, set on indicator to
      * protect input fields and invalidate function keys.
      *
     C                   if        termfl = yes
     C                   seton                                        99
     C                   endif
      *
      * Write the error messages from the error arrays to the error
      * message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT.
      *
     C                   write     hp4053k1
     C                   write     hp4053ec
     C                   exfmt     hp4053r1
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in20 = *on                                  F20-wrksplf
     C                   call      'QEZOUTPT'                                       API
     C                   eval      routne = scrn1
      *
     C                   when      *in17 = *on                                  F17-print options
     C                   eval      routne = scrn1
     C                   call      'HP451'
     C                   parm                    sdpgm
     C     ldcopy        parm      ldcopy        xxcopy
     C                   parm                    ldhold
     C                   parm                    ldoutq
     C                   parm                    xxnite
     C                   parm                    xxjobq
     C                   other
      *
      * Always check security for business office
      *
     C                   exsr      $chkbo
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit screen 1 input fields
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *   1) year/week
      *   2) weeks to print
      *   3) detail/summary flag
      *   4) cell (optional)
      *   5) farm site (optional)
      *   6) print wean data flag
      *   7) print finisher data flag
      *
     C                   exsr      $yrwk
     C                   exsr      $weeks
     C                   exsr      $dsfl
     C                   exsr      $cell
     C                   exsr      $fscd
     C                   exsr      $wynfl
     C                   exsr      $fynfl
      *
      * If there are no errors, execute the subroutine to submit the
      * report.
      *
     C                   if        error = 0                                    If no error
     C                   if        *in44 = *off                                 If no F8
     C                   seton                                        44
     C                   else
     C                   if        *in08 = *on                                  If F8=submit
     C                   exsr      $proc1
     C                   endif                                                  If F8=submit
     C                   endif                                                  If no F8
     C                   else
     C                   setoff                                       44
     C                   endif                                                  If no error
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate year/week
      *---------------------------------------------------------------
      *
     C     $yrwk         begsr
      *
      *  Year
     C                   select
      * Nothing entered
     C                   when      d1svyr = 0 and d1svwk = 0 and
     C                             d1wnyr = 0 and d1wnwk = 0
     C                   seton                                        303132
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09051'
     C                   endif
      *
      * Too much entered
     C                   when      (d1svyr <> 0 or d1svwk <> 0) and
     C                             (d1wnyr <> 0 or d1wnwk <> 0)
     C                   seton                                        303132
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09052'
     C                   endif
      *
      * When Breed Year is Entered
      *
     C                   when      d1svyr <> 0
      *
     C                   select
     C                   when      d1svwk = 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09053'
     C                   endif
      *
     C                   when      d1svwk < 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09054'
     C                   endif
      *
     C                   when      d1svwk > 52
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09055'
     C                   endif
     C                   endsl
      *
      * When Wean Year is Entered
      *
     C                   when      d1wnyr <> 0
      *
     C                   select
     C                   when      d1wnwk = 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09053'
     C                   endif
      *
     C                   when      d1wnwk < 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09054'
     C                   endif
      *
     C                   when      d1wnwk > 52
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09055'
     C                   endif
     C                   endsl
      *
      * When Breed Week is Entered without Breed Year
      *
     C                   when      d1svwk <> 0 and d1svyr = 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09061'
     C                   endif
      *
      * When Wean Week is Entered without Wean Year
      *
     C                   when      d1wnwk <> 0 and d1wnyr = 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09060'
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Number of weeks to print
      *---------------------------------------------------------------
      *
     C     $weeks        begsr
      *
     C                   select
     C                   when      d1weeks = 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1weeks < 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
      *
     C                   when      d1weeks > 52
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09059'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate detail/summary flag
      *---------------------------------------------------------------
      *
     C     $dsfl         begsr
      *
     C                   move      *blank        d1dsds
      *
     C                   select
     C                   when      d1dsfl = 'S'
     C                   movel(p)  'Summary'     d1dsds
      *
     C                   when      d1dsfl = 'D'
     C                   movel(p)  'Detail'      d1dsds
     C                   other
      *
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS00454'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate cell
      *---------------------------------------------------------------
      *
     C     $cell         begsr
      *
     C                   if        d1cell < 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate farm site
      *---------------------------------------------------------------
      *
     C     $fscd         begsr
      *
     C                   move      *blank        d1fsnm
      *
     C                   select
     C                   when      d1fscd = 0
      *
     C                   when      d1fscd < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   seton                                        37
     C                   other
      *
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move(p)   fsfsnm        d1fsnm
      *
      *
      * Must match cell the user has keyed...if he keyed one
      *
     C                   if        d1cell <> 0 and                              If cell mismatch
     C                             fscell <> d1cell
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00705'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   move      fscell        xxalphcell
     C                   movea     xxalphcell    mgw(6)
     C                   move      d1cell        xxalphcell
     C                   movea     xxalphcell    mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If cell mismatch
      *
     C                   endif                                                  If bad farm
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate print wean data yes/no flag
      *---------------------------------------------------------------
      *
     C     $wynfl        begsr
      *
     C                   if        d1wynfl <> yes and d1wynfl <> no
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09106'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate print finisher data yes/no flag
      *---------------------------------------------------------------
      *
     C     $fynfl        begsr
      *
     C                   if        d1fynfl <> yes and d1fynfl <> no
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09106'     mgid(e)
     C                   endif
     C                   endif
      *
      * At least 1 of the yes/no data flags must be YES.
      *
     C                   if        d1wynfl = no and d1fynfl = no
     C                   seton                                        3839
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09118'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Check the business office
      *---------------------------------------------------------------
      *
     C     $chkbo        begsr
      *
      * Set the 'Validate B.O.' flag to all.
      *
     C                   move      all           inbofl
      *
      * Check the user's security to the business office.  Set the INDVFL flag
      * to YES to tell the security program to compare the function division
      * code to the B.O. division code.
      *
     C                   move      yes           indvfl
     C                   exsr      $sec
     C                   move      no            indvfl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * F4 prompt on screen 1
      *----------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
     C                   select
      * Farm site
     C                   when      fld = 'D1FSCD'
     C                   call      'HP5040'
     C                   parm      'A'           xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        57
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1fscd
     C                   movel     xxfsnm        d1fsnm
     C                   endif
      *
      * Detail/summary flag
      *
     C                   when      fld = 'D1DSFL'
     C                   call      'HP565'
     C                   parm      *blank        xxdsfl
     C                   parm      *blank        xxdsds
     C                   seton                                        55
     C                   if        xxdsfl <> *blank
     C                   move      xxdsfl        d1dsfl
     C                   move      xxdsds        d1dsds
     C                   endif
      *
      * Wean pig data yes/no flag
      *
     C                   when      fld = 'D1WYNFL'
     C                   call      'HP522'
     C                   parm      *blank        xxynfl
     C                   seton                                        58
     C                   if        xxynfl <> *blank
     C                   move      xxynfl        d1wynfl
     C                   endif
      *
      * Finisher data yes/no flag
      *
     C                   when      fld = 'D1FYNFL'
     C                   call      'HP522'
     C                   parm      *blank        xxynfl
     C                   seton                                        59
     C                   if        xxynfl <> *blank
     C                   move      xxynfl        d1fynfl
     C                   endif
      *
     C                   other
      *
      * F4 not valid for this field, so issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09011'
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Process user's request
      *---------------------------------------------------------------
      *
      * This subroutine is only executed if the user submits the listing
      *
     C     $proc1        begsr
      *
      * Move submission values into LDA
      *
     C                   z-add     d1svyr        ldsvyr
     C                   z-add     d1svwk        ldsvwk
     C                   z-add     d1wnyr        ldwnyr
     C                   z-add     d1wnwk        ldwnwk
     C                   z-add     d1weeks       ldweeks
     C                   move      d1dsfl        lddsfl
     C                   move      d1dsds        lddsds
     C                   z-add     d1cell        ldcell
     C                   z-add     d1fscd        ldfscd
     C                   move      d1fsnm        ldfsnm
     C                   move      d1wynfl       ldwynfl
     C                   move      d1fynfl       ldfynfl
      *
      * Calculate the from/to year/week based on user's entries.
      *
     C                   select
     C                   when      d1svyr <> 0
     C                   move      'B'           ldbwfl
     C                   z-add     d1svyr        ldfryr
     C                   z-add     d1svwk        ldfrwk
      *
     C                   when      d1wnyr <> 0
     C                   move      'W'           ldbwfl
     C                   z-add     d1wnyr        ldfryr
     C                   z-add     d1wnwk        ldfrwk
     C                   endsl
      *
     C                   eval      wkfld = ldfrwk + ldweeks - 1
      *
     C                   if        wkfld <= 52                                  If in same year
     C                   z-add     ldfryr        ldtoyr
     C                   z-add     wkfld         ldtowk
     C                   else
     C     1             add       ldfryr        ldtoyr
     C     wkfld         sub       52            ldtowk
     C                   endif                                                  If in same year
      *
      * Move the 80-character compile time array 'CMD' to an
      * 80-character field for passing as a parm with QCMDEXC.
      *
     C                   out       lda
     C                   movea     xxjobq        cmd(51)
     C                   movea     cmd           cmdsbm
     C                   call      'QCMDEXC'
     C                   parm                    cmdsbm
     C                   parm                    length
      *
      * Issue the standard request submission message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09003'
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Security Program
      *---------------------------------------------------------------
      *
     C     $sec          begsr
      *
     C                   call      'HPSEC  '
      **** IN
     C                   parm                    mgid                           MSGID ARRAY
     C                   parm                    mgdt                           MSGDTA DATA
     C                   parm                    error                          # OF errorS
     C                   parm      sdpgm         infncd                         FUNC CODE
     C                   parm                    inbobo                         BO CODE
     C                   parm                    indvfl                         CHECK DIV?
     C                   parm                    inbofl                         CHECK B.O.?
      **** OUT
     C                   parm      *blank        oubobo                         BO CODE
     C                   parm      *blank        oubods                         BO DESC.
     C                   parm      *blank        oudvcd                         DIV CODE
     C                   parm                    secfl                          SEC ERR FLAG
     C                   parm                    oubofl                         B.O. ERR FLG
     C                   parm                    ourmfl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *   none
      *
      * Key lists
      *    None
      *
      * Set up screen defaults
      *
     C                   move      yes           d1wynfl
     C                   move      yes           d1fynfl
      *
      * Initialize LDA fields
      *
     C                   z-add     0             ldsvyr
     C                   z-add     0             ldsvwk
     C                   z-add     0             ldwnyr
     C                   z-add     0             ldwnwk
      *
     C                   z-add     0             ldfryr
     C                   z-add     0             ldfrwk
     C                   z-add     0             ldtoyr
     C                   z-add     0             ldtowk
      *
     C                   z-add     0             ldweeks
     C                   z-add     0             ldcell
     C                   z-add     0             ldfscd
     C                   move      *blank        ldhold
     C                   z-add     0             ldcopy
     C                   movel     ldoutu        ldoutq
      *
      * Get this functions' number of copies, etc.
      *
     C     sdpgm         chain     hsp002                             92
     C                   if        *in92 = *off
     C                   z-add     fncopy        ldcopy
     C                   movel     fnhold        ldhold
     C                   endif
      *
     C                   if        ldcopy = 0
     C                   z-add     1             ldcopy
     C                   endif
      *
     C                   if        ldhold = *blank
     C                   movel     no            ldhold
     C                   endif
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
      *
      * Execute the security routine to determine the user's authorizations.
      *
     C                   exsr      $sec
      *
      * If errors on the initial call, set the terminal flag to yes.
      *
     C                   if        secfl = yes
     C                   movel     yes           termfl
     C                   endif
      *
     C                   endsr
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD table 'CMD' submits listing when F8 selected
SBMJOB CMD(CALL PGM(HP4053CL)) JOB(WEANPROJ) JOBQ(__________)
