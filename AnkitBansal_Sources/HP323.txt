      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP323 - WRITE PERIOD WORKFILES TO DATABASE
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     07/25/94
      *
      * FUNCTION: THIS PROGRAM READS THE CLOSING PERIOD WORKFILES
      *           AND WRITES THE RECORDS TO THE HPS DATABASE
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 07/14/03  LEANNE FEDOR
      *           Removed the logic to write to HSP047-End of Period Farm Site;
      *           we no longer have this file in the system.
      *
      * 08/26/03  LEANNE FEDOR
      *           To handle some new Datamart logic, Alice wanted us to create
      *           a new data area that holds the 'last' accounting period. We
      *           are to move the 'current' values from DAAPER to the new
      *           data area DALPER prior to updating DAAPER.
      *
      * 04/23/09  LeAnne Ramsey
      *           Recompile only. Costed Time/User added to Feed Ticket Header.
      *
      * 05/12/09  LeAnne Ramsey
      *           Recompile only. PickUp Ticket Type added to Feed Ticket Header.
      *
      * 09/21/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Upload Date' to Feed Ticket Header.
      *
      * 02/29/16  ROSE CENTONZE    E5290
      *           PASS COMPANY NUMBER PARM AND UPDATE COMPANY CONTROL WHEN UPD DAAPER
      *
      * 05/10/16  Barb Gutierrez   E5752
      *           Update last HPS closed begin and end dates as well as the cost cube
      *           build flag.
      * 01/21/21  ISE              TSN593
      *           Replaced *loval with *start
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHSP009    IF   E           K DISK
      *    BUSINESS OFFICE
      *
      *
     FHSP037    IF   E           K DISK
      *    FEED TICKET HEADER
      *    (RECORDS SELECTED/KEYED IN OPNQRY)
      *
      *
     FHSL037E   UF   E           K DISK
     F                                     RENAME(FHREC:FHRECE)
      *    FEED TICKET HEADER
      *
      *
     FHSP048    IF   E           K DISK
      *    EXPENSE TICKET
      *    (RECORDS SELECTED/KEYED IN OPNQRY)
      *
      *
     FHSL048A   UF   E           K DISK
     F                                     RENAME(XTREC:XTRECA)
      *    EXPENSE TICKET   R
      *
     FHSP068    UF   E           K DISK
      *  KILLED/DEAD HOGS
      *
      *
     FHSP069    UF   E           K DISK
      *  INVENTORY ADJUSTMENTS
      *
      *
     FHSP074    UF   E           K DISK
      *    TRANSFER MOVEMENT HEADER
      *
      *
     FHSP084    UF   E           K DISK
      *    SALES MOVEMENT HEADER
      *
      *
     FHSP320    IF   E           K DISK
      *    MOVEMENT WORKFILE
      *
     FHSP0071   UF   E           K DISK
      *    COMPANY CONTROL
      *
      /EJECT
      ****************************************************************
      * Definition specs
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DAAPER' WHICH HOLDS
      *  THE "CURRENT" ACCOUNTING PERIOD
      *---------------------------------------------------------------
     D                 DS
     D  DAAPER                 1     24
     D  DACCYY                 1      4  0
     D  DAPER                  5      6  0
     D  DABPDT                 7     14  0
     D  DAEPDT                15     22  0
     D  DAPGFL                23     23
     D  DAPPFL                24     24
     D                 DS
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DALPER' WHICH HOLDS
      *  THE "LAST" ACCOUNTING PERIOD
      *---------------------------------------------------------------
     D                 DS
     D  DALPER                 1     24
     D  DLCCYY                 1      4  0
     D  DLPER                  5      6  0
     D  DLBPDT                 7     14  0
     D  DLEPDT                15     22  0
     D  DLPGFL                23     23
     D  DLPPFL                24     24
      *
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
      *
      *---------------------------------------------------------------
      *  LOCAL DATA AREA
      *---------------------------------------------------------------
      *
     D                UDS
     D  LDBPDT                 1     08  0
     D  LDEPDT                 9     16  0
     D  LDPER                 17     18  0
     D  LDEFFL                19     19
     D  LDCCYY                20     23  0
     D  LDBMDY                60     66  0
     D  LDEMDY                70     76  0
     D  LDERFL                80     80
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Update HPS database files for:
      *
     C                   exsr      $feed
     C                   exsr      $expenses
     C                   exsr      $movements
      *
      * Get 'next' accounting period
      *
     C                   exsr      $next
      *
     C                   SETON                                        LR
      /EJECT
      *--------------------------------------------------------------------------------------
      * UPDATE EACH FEED TICKET HEADER WITH A POSTED STATUS AND DATE
      *--------------------------------------------------------------------------------------
      *
     C     $feed         begsr
      *
593  C*    *LOVAL        SETLL     HSP037
593  C     *START        SETLL     HSP037
      *
     C     *IN96         DOUEQ     *ON                                          DO FEED
     C                   READ      HSP037                                 96
     C     *IN96         IFEQ      *OFF                                         IF NOT EOF
     C     KEY01         CHAIN     HSL037E                            97
     C     *IN97         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     'PP'          FHTSCD
     C                   Z-ADD     LDEPDT        FHEPDT
     C                   UPDATE    FHRECE
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO FEED
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * UPDATE EACH EXPENSE TICKET RECORD WITH A POSTED STATUS/DATE
      *--------------------------------------------------------------------------------------
      *
     C     $expenses     begsr
      *
593  C*    *LOVAL        SETLL     HSP048
593  C     *START        SETLL     HSP048
      *
     C     *IN94         DOUEQ     *ON                                          DO EXPENSE
     C                   READ      HSP048                                 94
     C     *IN94         IFEQ      *OFF                                         IF NOT EOF
     C                   MOVEL     XTBOBO        SVBOBO
     C                   Z-ADD     XTXTSN        SVXTSN
      *
     C     KEY02         CHAIN     HSL048A                            95
     C     *IN95         IFEQ      *OFF                                         IF FOUND
      *
      * IF THIS TICKET HAS ALREADY BEEN UPDATED WITH THE
      * POSTED STATUS, JUST RELEASE THE RECORD.
      *
     C     XTXSCD        IFEQ      'PP'                                         IF ALREADY
     C                   UPDATE    XTRECA
     C                   ELSE
      *
      * IF THIS TICKET HAS NOT YET BEEN UPDATED WITH THE
      * POSTED STATUS, UPDATE IT AND THEN FIND AND UPDATE
      * ALL THE OTHER ALLOCATED RECORDS FOR THIS TICKET.
      *
     C                   MOVEL     'PP'          XTXSCD
     C                   Z-ADD     LDEPDT        XTEPDT
     C                   UPDATE    XTRECA
      *
     C                   SETOFF                                       98
     C     *IN98         DOUEQ     *ON                                          DO ALLOCATED
     C     KEY02         READE     HSL048A                                98
     C     *IN98         IFEQ      *OFF
     C                   MOVEL     'PP'          XTXSCD
     C                   Z-ADD     LDEPDT        XTEPDT
     C                   UPDATE    XTRECA
     C                   ENDIF
     C                   ENDDO                                                  DO ALLOCATED
      *
     C                   ENDIF                                                  IF ALREADY
     C                   ENDIF                                                  IF FOUND
      *
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO EXPENSE
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * UPDATE ALL MOVEMENT HEADERS WITH A POSTED STATUS AND DATE
      *--------------------------------------------------------------------------------------
      *
     C     $movements    BEGSR
      *
593  C*    *LOVAL        SETLL     HSP320
593  C     *START        SETLL     HSP320
      *
     C     *IN91         DOUEQ     *ON                                          DO MOVE
     C                   READ      HSP320                                 91
     C     *IN91         IFEQ      *OFF                                         IF NOT EOF
      *
     C                   SELECT
     C     WMMTCD        WHENEQ    'A'
     C     WMMVSN        CHAIN     HSP069                             92
     C     *IN92         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     'PP'          IAMSCD
     C                   Z-ADD     LDEPDT        IAEPDT
     C                   UPDATE    IAREC
     C                   ENDIF
      *
     C     WMMTCD        WHENEQ    'D'
     C     WMMVSN        CHAIN     HSP068                             92
     C     *IN92         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     'PP'          KDMSCD
     C                   Z-ADD     LDEPDT        KDEPDT
     C                   UPDATE    KDREC
     C                   ENDIF
      *
     C     WMMTCD        WHENEQ    'T'
     C     WMMVSN        CHAIN     HSP074                             92
     C     *IN92         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     'PP'          MHMSCD
     C                   Z-ADD     LDEPDT        MHEPDT
     C                   UPDATE    MHREC
     C                   ENDIF
      *
     C     WMMTCD        WHENEQ    'S'
     C     WMMVSN        CHAIN     HSP084                             92
     C     *IN92         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     'PP'          SHMSCD
     C                   Z-ADD     LDEPDT        SHEPDT
     C                   UPDATE    SHREC
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO MOVE
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * UPDATE THE DATA AREA TO BE THE NEXT PERIOD.
      *--------------------------------------------------------------------------------------
      *
     C     $next         BEGSR
      *
      * YOU WILL NEED A BUSINESS OFFICE FOR THE CALL TO THE OMS
      * CALENDAR FILE. SO, RETRIEVE THE FIRST BUSINESS OFFICE IN
      * THE BUSINESS OFFICE FILE.
      * (NOTE: AS OF 11/8/95, ALL 'BUSINESS OFFICES' ARE SET UP
      * TO BE COMPANY '350' IN THE HOG PRODUCTION SYSTEM.)
      *
      * THEN, SET UP BUSINESS OFFICE AS A NUMERIC PARM FOR THE CALL
      * TO THE ORDER MANAGEMENT SYSTEM CALENDAR FILE.
      *
     C*                  Z-ADD     0             XXCOCD
     C*    *LOVAL        SETLL     HSP009
     C*                  READ      HSP009                                 92
     C*    *IN92         IFEQ      *OFF                                         IF RECORD
     C*                  TESTN                   BOCOCD               92
     C*    *IN92         IFEQ      *ON                                          IF NUMERIC
     C*                  MOVE      BOCOCD        XXCOCD
     C*                  ENDIF                                                  IF NUMERIC
     C*                  ENDIF                                                  IF RECORD
     C*
      * E5290  2/29/16  USE COMPANY PARM INSTEAD OF GRABBING THE FIRST ONE ABOVE
     C*
     C                   MOVE      PPCOCD        XXCOCD
      *
      * BRING IN THE DATA AREAS THAT CONTAIN:
      *  1) THE CURRENT ACCOUNTING PERIOD
      *  2) THE LAST ACCOUNTING PERIOD
      *
      *  CURRENT
      *
     C     *DTAARA       DEFINE                  DAAPER
     C     *LOCK         IN        *DTAARA
      *
      * LAST
     C     *DTAARA       DEFINE                  DALPER
     C     *LOCK         IN        *DTAARA
      *
      * MOVE THE 'CURRENT' VALUES TO THE 'LAST' DATA AREA AND UPDATE THE
      * 'LAST ACCOUNTING PERIOD' DATA AREA.
      *
     C                   Z-ADD     DACCYY        DLCCYY
     C                   Z-ADD     DAPER         DLPER
     C                   Z-ADD     DABPDT        DLBPDT
     C                   Z-ADD     DAEPDT        DLEPDT
     C                   MOVE      *BLANK        DLPGFL
     C                   MOVE      'F'           DLPPFL
      *
     C                   OUT       DALPER
      *
      * E5290 UPDATE COMPANY CONTROL WITH last YR/PERIOD FOR PARM COMPANY.
      *
     C     PPCOCD        CHAIN     HSP0071                            50
     C     *IN50         IFEQ      *OFF
     C                   Z-ADD     DACCYY        CCCCLY                         LAST CLOSED YEAR
     C                   Z-ADD     DAPER         CCCCLP                         LAST CLOSED PERIOD
     C                   Z-ADD     DABPDT        CCLBPDT                        LAST CLOSED BEG DT
     C                   Z-ADD     DAEPDT        CCLEPDT                        LAST CLOSED END DT
     C                   MOVE      'F'           CCC$FL                         COST CUBE BUILD FLG
     C                   UPDATE    CCREC
     C                   ENDIF
      *
      * FOR THE NEXT ACCOUNTING PERIOD: CALL THE PROGRAM TO ACCESS THE OMS CALENDAR FILE.
      *   INPUT PARMS:
      *               COMPANY
      *               CURRENT ACCOUNTING PERIOD
      *               CURRENT ACCOUNTING PERIOD YEAR
      *   OUTPUT PARMS:
      *               NEXT ACCOUNTING PERIOD
      *               NEXT ACCOUNTING PERIOD YEAR
      *               BEGINNING DATE OF NEXT ACCOUNTING PERIOD
      *               ENDING DATE OF NEXT ACCOUNTING PERIOD
      *
     C                   CALL      'HP223'
     C                   PARM                    XXCOCD
     C                   PARM      DACCYY        XXCYR
     C                   PARM      DAPER         XXCPER
     C     NACCYY        PARM      0             XXNYR
     C     NAPER         PARM      0             XXNPER
     C     NABPDT        PARM      0             XXBDT
     C     NAEPDT        PARM      0             XXEDT
     C**   DACCYY        PARM      0             XXNYR                   ORIGINAL PARMS
     C**   DAPER         PARM      0             XXNPER                              "
     C**   DABPDT        PARM      0             XXBDT                               "
     C**   DAEPDT        PARM      0             XXEDT                                "
      *
      *
      *
      *
      * E5290 UPDATE COMPANY CONTROL WITH NEXT FOR PARM COMPANY. DONT UPDATE DAAPER WITH NEXT UNTIL
      *       ALL COMPANY RECORDS HAVE THE NEXT VALUES
      *
     C     PPCOCD        CHAIN     HSP0071                            50
     C     *IN50         IFEQ      *OFF
     C                   Z-ADD     NACCYY        CCCCYY
     C                   Z-ADD     NAPER         CCPER
     C                   Z-ADD     NABPDT        CCBPDT
     C                   Z-ADD     NAEPDT        CCEPDT
     C                   MOVE      *BLANK        CCPGFL
     C                   MOVE      'F'           CCPPFL
     C                   UPDATE    CCREC
     C                   ENDIF
      * E5290 --  IF ALL CMPS HAVE BEEN PROCESSED THEY'LL ALL HAVE THE NEXT ACCT PER.
      *          IF YES, THEN UPDATE DAAPER WITH NEXT ACCTNG PERIOD
     C                   MOVE      'Y'           LASTCO
593  C*    *LOVAL        SETLL     HSP0071
593  C     *START        SETLL     HSP0071
     C     *IN51         DOWEQ     *OFF
     C                   READ      HSP0071                                51
     C     *IN51         IFEQ      *OFF
     C     CCPER         IFNE      NAPER
     C                   MOVE      'N'           LASTCO
     C                   ENDIF
     C                   ENDIF
     C                   ENDDO
      *
     C     LASTCO        IFEQ      'Y'                                          UPD WHEN LAST CO
     C                   Z-ADD     NACCYY        DACCYY
     C                   Z-ADD     NAPER         DAPER
     C                   Z-ADD     NABPDT        DABPDT
     C                   Z-ADD     NAEPDT        DAEPDT
     C                   ENDIF
     C                   MOVE      *BLANK        DAPGFL
     C                   MOVE      'F'           DAPPFL
     C                   OUT       DAAPER
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * INITIALIZATION
      *--------------------------------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
     C     *entry        plist
     C                   parm                    PPCOCD            3          COMPANY CODE
      * Key lists
      *
     C     KEY01         KLIST
     C                   KFLD                    FHFMBO
     C                   KFLD                    FHRTNO
     C                   KFLD                    FHTKNO
     C                   KFLD                    FHTRCD
      *
      *
     C     KEY02         KLIST
     C                   KFLD                    SVBOBO
     C                   KFLD                    SVXTSN
      *
      * Miscellaneous
     C                   Z-ADD     0             XXCOCD            3 0
     C                   Z-ADD     0             XXCYR             4 0
     C                   Z-ADD     0             XXCPER            2 0
      *
     C                   Z-ADD     0             XXNYR             4 0
     C                   Z-ADD     0             XXNPER            2 0
     C                   Z-ADD     0             NACCYY            4 0                 NEXT ACCTNG
     C                   Z-ADD     0             NAPER             2 0                        "
     C                   Z-ADD     0             NABPDT            8 0                        "
     C                   Z-ADD     0             NAEPDT            8 0                        "
     C                   MOVE      ' '           LASTCO            1                  LAST COMP PRCD
      *
     C     *LIKE         DEFINE    XTXBDT        XXBDT
     C     *LIKE         DEFINE    XTXEDT        XXEDT
      *
     C     *LIKE         DEFINE    XTBOBO        SVBOBO
     C     *LIKE         DEFINE    XTXTSN        SVXTSN
      *
     C                   ENDSR
      /EJECT
