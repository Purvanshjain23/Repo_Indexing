      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP678
      * TITLE:       CLOSED/DISPOSED GROUP SUMMARY
      * PROGRAMMER:  MARY PALMER
      * CREATED:     6/27/94
      *
      * FUNCTION:  THIS PROGRAM ACCESSES WORKFILES AND PRINTS CLOSED OR DISPOSED GROUP DATA.
      *
      *            PLEASE NOTE THAT THIS PROGRAM WAS REWRITTEN IN MAY 2001 TO BE:
      *              1) USED FOR ALL SUMMARY LEVELS (GROUP/FARM/CELL/BUSINESS).
      *              2) USED FOR BOTH CLOSED AND DISPOSED GROUP SUMMARY REPORTS.
      *
      *            THERE ARE 2 CATAGORIES OF DATA WHICH PRINT IN SECTIONS.
      *            THE USER MAY ELECT TO PRINT BOTH CATEGORIES OR A SINGLE CATEGORY:
      *
      *                    CATEGORY 1:  MOVEMENTS
      *                                 PERFORMANCE
      *                    CATEGORY 2:  SALES
      *                                 COSTS (CLOSED GROUPS ONLY)
      *
      *
      *     PLEASE NOTE THAT THE FOLLOWING 2 PERFORMANCE LINES ONLY
      *     PRINT ON THE REPORT WHEN THE USER HAS ELECTED TO PRINT AT THE
      *     'GROUP' SUMMARY LEVEL.
      *                     1) avg calories per lb of feed
      *                     2) avg KCAL per pig day
      *
      *
      *     ALSO, AT ALL SUMMARY LEVELS OTHER THAN 'GROUP':
      *        1)  FOUR PERFORMANCE FACTORS (CARCASS YIELD, LOIN EYE,
      *            BACK FAT, LEAN PERCENT) ARE SIMPLE AVERAGES--NOT
      *            WEIGHTED AVERAGES. FOR EXAMPLE, IF A FARM HAS 3
      *            CLOSED GROUPS, THE CARCASS YIELD FOR THE GROUPS
      *            (LET'S SAY THE VALUES ARE 75.38, 74.12, 76.05)
      *            ARE SIMPLY TOTALED UP AND THEN DIVIDED BY 3 WHEN THE
      *            REPORT IS RUN AT THE SUMMARY LEVEL OF 'FARM'.
      *
      *        2)  CERTAIN COST CALCULATIONS ARE MADE USING THE
      *            TOTALS FOR THE LEVEL--INSTEAD OF MAKING THE CALCULA-
      *            TIONS FOR EACH HOG GROUP AND THEN ACCUMULATING THE
      *            GROUP RESULTS. THIS WILL ACCOUNT FOR DIFFERENCES
      *            BETWEEN THIS REPORT AND THE TOTAL FARM VALUES ON A
      *            REPORTS SUCH AS HP682-CLOSED GROUP PERFORMANCE REPORT
      *
      *           THIS PROGRAM IS SUBMITTED BY HP478CL WHICH IS CALLED
      *           FROM HP478 THROUGH QCMDEXC. WORKFILES ARE BUILT IN HP378.
      /EJECT
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 08/17/00  LeAnne Fedor
      *           Added logic to retrieve the new 'adjusted transfer in' and
      *           print it right after the 'total in' line.
      *
      * 11/15/00  LeAnne Fedor
      *           Changed cull % and mortality % to use the new 'adjusted
      *           transfer in' instead of the transferred in value.
      *
      * 03/29/01  LeAnne Fedor
      *           Changed logic to use new amount value from TRANO record for
      *           'cost of transfers out'.
      *
      * 05/16/01  LeAnne Fedor
      *           Rewritten.
      *           Combined logic from the 'farm' summary and 'business' summary versions into
      *           this program so we could eliminate the multiple versions. So, this
      *           program now accesses workfiles and has conditional processing based
      *           on the 'summary level' selected.
      *
      * 05/22/01  LeAnne Fedor
      *           Changed function to handle 'disposed' groups as well as 'closed'
      *           groups.
      *
      * 06/25/01  LeAnne Fedor
      *           Separate the 'daily dead and DOA' line into two lines.
      *
      * 06/26/01  LeAnne Fedor
      *           Remove 'supervisor' file/logic. Farm managers and supervisors have
      *           been replaced with 'production managers' and 'cell managers'.
      *
      * 04/04/02  LeAnne Fedor
      *           Per Jeff Sherboundy, removed all special logic for FHAUL/CHAUL.
      *           They will now be treated as the 'expenses' that they truly are.
      *
      * 11/20/02  LeAnne Fedor
      *           Per Rick Crose, flip the sign of the 'adjustment' head and pounds in
      *           the Movement Section. Since this is not being done for any other reports
      *           in the system, I changed the text from 'adjustments' to 'adjustments as
      *           mortality' to try to head off apples-to-oranges problems.
      *
      * 01/29/03  LeAnne Fedor
      *           Removed all hardcoded special logic for SHAUL.
      *
      * 04/07/04  LeAnne Fedor
      *           'Lbs Gained per Head Out' will now be calculated with a 'head' value that
      *           includes DOA head.
      *
      * 08/21/06  LeAnne Ramsey
      *           The selection screen/workfile/report logic has all been changed to all the
      *           users to overrride the sort sequence to be by: Production Manager/Farm/
      *           Building/Group. (The Summary Level logic stayed intact.)
      *
      * 04/17/09  LeAnne Ramsey
      *           Sami Wilson requested that we change the text from "Daily Dead" to "Dead" in the
      *           Movements section. She said the users were getting confused!!  This has been
      *           in place since 2001....hmmmmmmm
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 06/21/10  LeAnne Ramsey    (E828)
      *           Added 'Origin BGF Farm Site' to the Group version.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 01/21/21  ISE            TSN593
      *           Replaced *loval with *start
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl006a   if   e           k disk
      *    Reporting codes
      *
      *
     Fhsl006b   if   e           k disk
     F                                     rename(rprec:rprecb)
      *    Reporting codes
      *
      *
     Fhsp009    if   e           k disk
      *    Business office
      *
      *
     Fhsp012    if   e           k disk
      *    Company relationship
      *
      *
     Fhsp016    if   e           k disk
      *    Farm manager
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp025    if   e           k disk
      *    Group type
      *
      *
     Fhsp031    if   e           k disk
      *    Breed stock
      *
      *
     Fhsp034    if   e           k disk
      *    Hog group
      *
      *
     Fhsl044a   if   e           k disk
      *    Deductions/addons
      *
      *
     Fhsl045a   if   e           k disk
      *    Premium/discount
      *
      *
     Fhsp056    if   e           k disk
      *    Sex code
      *
      *
     Fhsp130    if   e           k disk
      *    Group overrides
      *
      *
     Fhsp378    if   e           k disk
      *    Workfile of summary level values
      *
      *
     Fhsp379    if   e           k disk
      *    Workfile of report codes
      *
     Fqprint    o    f   83        printer oflind(*inof)
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * ARRAYS AND TABLES
      *---------------------------------------------------------------
      *
      * Descriptions for printing
      *
     D dsc             s             23    dim(34) ctdata perrcd(1)
      *
      *
      *---------------------------------------------------------------
      * Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D sales           c                   'SALES'
      *
      *
     D upper           c                   'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
     D lower           c                   'abcdefghijklmnopqrstuvwxyz'
      *
      *
      *---------------------------------------------------------------
      * STANDALONE FIELDS
      *---------------------------------------------------------------
      *
      * Print fields for headings
      *
     d dash            s             50    inz(*all'-')
     d rtime           s              6  0
     d hrtitle1        s             23
     d hrtitle2        s             36
     d hrgtcd          s              3
      *
     d hrmdycldt       s              6  0
     d hrmdydsdt       s              6  0
     d hrmdyopdt       s              6  0
     d hrbobo          s                   like(bobobo)
     d hrbods          s                   like(bobods)
     d hrfscd          s                   like(fsfscd)
     d hrcrcd          s                   like(fscrcd)
     d hrcell          s                   like(fscell)
     d hrfsnm          s                   like(fsfsnm)
     d hrcmgnm         s             20
     d hrpmgnm         s             20
     d hrmmgnm         s             20
     d hrbsds          s                   like(bsbsds)
     d hrsxds          s                   like(sxsxds)
     d hrgtds          s                   like(gtgtds)
     d hrcrds          s                   like(crcrds)
     d hrobfs          s                   like(fsfscd)
     d hrobfsnm        s                   like(fsfsnm)
      *
      *
      * Print fields for detail movement lines
      *
     d dmdsc           s             23
     d dmalb           s              5  2
     d dmpr            s              5  2
     d dmhd            s             11  0
     d dmlb            s             11  0
      *
      *
      * Print fields for total movement lines
      *
     d tmihd           s                   like(dmhd)
     d tmilb           s                   like(dmlb)
     d tmialb          s                   like(dmalb)
     d tmohd           s                   like(dmhd)
     d tmolb           s                   like(dmlb)
     d tmoalb          s                   like(dmalb)
      *
      *
      * Print fields for detail performance lines
      *
     d dpdsc           s             23
     d dp52            s              5  2
     d dplb52          s              5  2
     d dplb            s             11  0
      *
      *
      * Print fields for ration info in the performance section
      *
     d drdsc           s             23
     d dr92            s              9  2
      *
      *
      * Print fields for detail sales line
      *
     d dsdsc           s             23
     d dsrlds          s                   like(rprlds)
     d dshd            s             11  0
     d dslb            s             11  0
     d dsam            s             11  2
     d ds$hd           s              5  2
     d ds$cw           s              5  2
      *
      *
      * Print fields for detail cost lines
      *
     d dcdsc           s             23
     d dcrlds          s                   like(rprlds)
     d dcam            s             11  2
     d dc$hd           s              5  2
     d dc$cw           s              5  2
      *
      *
      *
      * Workfields
      *
     d wkdeadhd        s                   like(wrcghd)
     d wkdeadlb        s                   like(wrcglb)
     d wkddeadhd       s                   like(wrcghd)
     d wkddeadlb       s                   like(wrcglb)
     d wkdoahd         s                   like(wrcghd)
     d wkdoalb         s                   like(wrcglb)
      *
     d wkf155          s             15  5
     d wkf154          s             15  4
     d wkf152          s             15  2
      *
     d wkcacd          s                   like(wrcacd)
     d wkrpcd          s                   like(wrrpcd)
      *
     d wkc$cw          s             15  2
     d wkn$cw          s             15  2
     d wkt$cw          s             15  2
     d wkg$cw          s             15  4
      *
     d wkt$hd          s             15  2
     d wkn$hd          s             15  2
     d wkc$hd          s             15  2
     d wkg$hd          s             15  2
      *
     d wknam           s             15  2
     d wkgam           s             15  2
     d wktcam          s             15  2
     d wklvam          s             15  2
     d wkfpam          s             15  2
     d wkbsam          s             15  2
     d wkbgam          s             15  2
     d wkopam          s             15  2
     d wkocam          s             15  2
     d wkpdam          s             15  2
     d wkdaam          s             15  2
     d wktiam          s             15  2
     d wktranoam       s             15  2
     d wkfdam          s             15  2
     d wkcsam          s             15  2
      *
     d wkscwt          s             15  4
     d wkgcwt          s             15  4
     d wkmcwt          s             15  4
      *
     d wkwglb          s             15  2
     d wkbslb          s             15  2
     d wkfdlb          s             15  2
     d wktolb          s             15  2
     d wkmolb          s             15  2
     d wklvlb          s             15  2
     d wkfplb          s             15  2
     d wkglb           s             15  2
      *
     d wkohd           s             15  0
     d wklvhd          s             15  0
     d wkmohd          s             15  0
     d wktihd          s             15  0
     d wkajtihd        s             15  0
     d wktohd          s             15  0
     d wkbshd          s             15  0
     d wkfphd          s             15  0
     d wkghd           s             15  0
      *
     d wkpday          s             15  2
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
      *
      *
      * Control fields
      *
     d first           s              1    inz('Y')
     d trinfl          s              1    inz('Y')
     d troufl          s              1    inz('Y')
     d salefl          s              1    inz('Y')
     d svrpcd          s                   like(darpcd)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldfsbo                 1      5
     D  ldfymd                 6     13  0
     D  ldtymd                14     21  0
     D  ldptcd                22     26
     D  ldppcd                27     31
     D  ldfscd                32     36  0
     D  ldhgcd                37     43
     D  ldmvpf                44     44
     D  ldslcs                45     45
     D  ldgtcd                46     46
     D  ldcell                47     48  0
     D  ldslcd                49     49
     D  ldtmdy                50     55  0
     D  ldfmdy                56     61  0
     D  ldgscd                62     63
     D  ldcrcd                64     68
     D  ldpmgfl               69     69
      *
     D  ldbods                72    101
     D  ldptds               102    111
     D  ldppds               112    141
     D  ldfsnm               142    166
     D  ldhgsn               167    173  0
     D  ldgtds               174    188
     D  ldslds               189    219
     D  ldcrds               220    229
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
593  C*    *loval        setll     hsp378
593  C     *start        setll     hsp378
      *
      * Read all records in the header workfile
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      hsp378                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   if        first = yes
     C                   move      no            first
     C                   endif
      *
      * Clear all workfields
      *
     C                   exsr      $clrwk
      *
      *
      * Retrieve all info for report headings
      *
     C                   select
     C                   when      ldslcd = 'G'
     C                   exsr      $grouphead
     C                   exsr      $farmhead
      *
     C                   when      ldslcd = 'F'
     C                   exsr      $farmhead
     C                   endsl
      *
      * If the user wants to see movements/performance, print the headings,
      * If the user is only viewing sales/cost infor, the sales logic will
      * print the report headings.
      *
     C                   if        ldmvpf = yes
     C                   except    hrhdr
     C                   endif
      *
      * Some pieces of info are used by more than one section for calculations.
      * So, go retrieve some general group info for all calculations.
      *
     C                   exsr      $gener
      *
      *
      * Retrieve movement and performance info if the user selected to see
      * movement/performance. (If summary level is Group, also process rations.)
      *
     C                   if        ldmvpf = yes
     C                   exsr      $move
     C                   exsr      $perf
     C                   if        ldslcd = 'G'
     C                   exsr      $ration
     C                   endif
     C                   endif
      *
      * If the user specified sales/cost information
      * (NOTE: Only print COSTS for Closed Groups..Never for Disposed Groups.)
      *
     C                   if        ldslcs = yes
     C                   exsr      $sale
     C                   if        ldgscd = 'CL'
     C                   exsr      $cost
     C                   endif
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      *----------------------------------------------------------------
      * EOF PROCESSING
      *----------------------------------------------------------------
      *  If no detail records matched the selection criteria, then print
      *  the standard 'no data' message.
      *
     C                   if        first = yes
     C                   setoff                                       939495
     C                   setoff                                       96
     C                   except    hrhdr
     C                   except    nodata
     C                   endif
      *
     C                   seton                                        lr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve general information that is used by multiple sections
      *----------------------------------------------------------------
      *
     C     $gener        begsr
      *
      * Feed consumed
      *
     C                   movel     'FCONS'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 If consumed
     C                   add       wrcglb        wkfdlb
     C                   add       wrcgam        wkfdam
      *
     C                   endif                                                  If consumed
      *
      * Pig days
      *
     C                   movel     'PDAYS'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off
     C                   z-add     wrcgqt        wkpday
     C                   endif
      *
      *
      * Head transferred into the group
      *
     C                   movel     'TRANI'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off
     C                   z-add     wrcghd        wktihd
     C                   z-add     wrcgam        wktiam
     C                   endif
      *
      *
      * Adjusted head transferred into the group
      *
     C                   movel     'TRANA'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off
     C                   z-add     wrcghd        wkajtihd
     C                   endif
      *
      *
      * Head transferred out of the group
      *
     C                   movel     'TRANO'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off
     C                   z-add     wrcglb        wktolb
     C                   z-add     wrcghd        wktohd
     C                   z-add     wrcgam        wktranoam
     C                   else
     C                   z-add     0             wktranoam
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Process movement information
      *----------------------------------------------------------------
      *
     C     $move         begsr
      *
     C                   movel     'MOVES'       wkcacd
      *
      * Set the transfer flags to "NO" to check for phase transfers
      *
     C                   movel     no            trinfl
     C                   movel     no            troufl
      *
      * Clear print fields for transfer total lines
      *
     C                   z-add     0             tmihd
     C                   z-add     0             tmilb
     C                   z-add     0             tmialb
     C                   z-add     0             tmohd
     C                   z-add     0             tmolb
     C                   z-add     0             tmoalb
      *
      * Print section heading
      *
     C                   except    hmhdr
      *
      * Retrieve transfer in same phase
      *
     C                   movel     'TRISP'       wkrpcd
     C                   exsr      $movem
      *
      * Retrieve transfer in different phase
      *
     C                   movel     'TRIDP'       wkrpcd
     C                   exsr      $movem
      *
      * If there were no 'PHASE' transfers in, retrieve total transfers in.
      *
     C                   if        trinfl = no
     C                   movel     'TRANI'       wkrpcd
     C                   exsr      $movem
     C                   endif
      *
      * Retrieve rejects-in
      *
     C                   movel     'REJI '       wkrpcd
     C                   exsr      $movem
      *
      * If you had transfer-in head, print total movements-in line.
      *
     C                   if        trinfl = yes and
     C                             tmihd <> 0
     C     tmilb         div(h)    tmihd         tmialb
     C                   except    tmtoti
     C                   endif
      *
      * Retrieve adjusted transfers in
      *
     C                   movel     'TRANA'       wkrpcd
     C                   exsr      $movem
     C                   except    blank
      *
      * Retrieve transfer-out same phase
      *
     C                   movel     'TROSP'       wkrpcd
     C                   exsr      $movem
      *
      * Retrieve transfer-out different phase
      *
     C                   movel     'TRODP'       wkrpcd
     C                   exsr      $movem
      *
      * If there were no 'PHASE' transfers-out, retrieve total transfer outs
      *
     C                   if        troufl = no
     C                   movel     'TRANO'       wkrpcd
     C                   exsr      $movem
     C                   endif
      *
      * Retrieve rejects-out
      *
     C                   movel     'REJO '       wkrpcd
     C                   exsr      $movem
      *
      * Set off indicators 88 & 89 to not print "INCLUDED IN ABOVE"
      *
     C                   setoff                                       8889
      *
      * Retrieve cull and market sales info
      *
     C                   exsr      $cull
     C                   exsr      $mrkt
      *
      * Print the moved out total line if there were head moved out
      * (save the head for calculation of weight gain per head)
      *
     C                   if        tmohd <> 0
     C                   z-add     tmohd         wkohd
     C     tmolb         div(h)    tmohd         tmoalb
     C                   except    tmtoto
     C                   endif
      *
      * Retrieve dead and inventory adjustments
      *
     C                   exsr      $dead
     C                   exsr      $ddead
     C                   exsr      $doa
     C                   exsr      $inadj
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve the group movement info
      *----------------------------------------------------------------
      *
     C     $movem        begsr
      *
      * Retrieve the record for the report code.
      *
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 IF CLOSE REC
      *
      * Set transfer-in flag and accumulate values for total line
      *
     C                   if        wrrpcd = 'TRISP' or
     C                             wrrpcd = 'TRIDP' or
     C                             wrrpcd = 'TRANI'
     C                   movel     yes           trinfl
     C                   add       wrcghd        tmihd
     C                   add       wrcglb        tmilb
     C                   endif
      *
      *
      * Set transfer-out flag and accumulate values for total line
      *
     C                   if        wrrpcd = 'TROSP' or
     C                             wrrpcd = 'TRODP' or
     C                             wrrpcd = 'TRANO'
     C                   movel     yes           troufl
     C                   add       wrcglb        tmolb
     C                   add       wrcghd        tmohd
     C                   endif
      *
      *
      * Retrieve report code description
      *
     C     key02         chain     hsl006a                            92
     C                   if        *in92 = *off
     C                   movel     rprlds        dmdsc
     C                   else
     C                   eval      dmdsc = 'Unknown'
     C                   endif
      *
      *
      * If rejects, set indicator for message that prints to say
      * "INCLUDED IN ABOVE".
      *
     C                   setoff                                       8889
     C                   if        wrrpcd = 'REJI '
     C                   seton                                        89
     C                   endif
      *
     C                   if        wrrpcd = 'REJO '
     C                   seton                                        88
     C                   endif
      *
      * Set up print fields
      *
     C                   z-add     wrcghd        dmhd
     C                   z-add     wrcglb        dmlb
      *
      * Calculate average pounds transferred
      *
     C                   if        dmhd <> 0
     C     dmlb          div(h)    dmhd          dmalb
     C                   endif
      *
     C     upper:lower   xlate     dmdsc:2       dmdsc
      *
     C                   except    dmdtl
     C                   endif                                                  IF CLOSE REC
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve cull sale information for movement section
      *----------------------------------------------------------------
      *
     C     $cull         begsr
      *
     C                   movel     'CULLS'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 If record
      *
      * Accumulate moved values
      *
     C                   add       wrcghd        tmohd
     C                   add       wrcglb        tmolb
      *
      * Move the description 'CULL SALES' to the print field
      *
     C                   movea(p)  dsc(25)       dmdsc
     C                   z-add     wrcghd        dmhd
     C                   z-add     wrcglb        dmlb
      *
      * Calculate average pounds
      *
     C                   if        dmhd <> 0
     C     dmlb          div(h)    dmhd          dmalb
     C                   endif
      *
      * Calculate cull % = cull head / adjusted transferred in head
      *
     C                   if        wkajtihd <> 0
     C     wrcghd        div(h)    wkajtihd      wkf154
     C     wkf154        mult      100           dmpr
     C                   endif
      *
     C                   except    dmdtl
     C                   endif                                                  If record
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve market sales info--omit cull sales
      *----------------------------------------------------------------
      *
     C     $mrkt         begsr
      *
     C                   movel(p)  'SALES'       wkcacd
     C     wkcacd        setll     hsl006a
      *
     C                   dou       *in91 = *on                                  Do loop
     C     wkcacd        reade     hsl006a                                91
     C                   If        *in91 = *off                                 If not EOF
      *
      * Accumulate butcher, live and feeder pig sales
      *
     C                   if        rprpcd = 'BTCAR' or                          If not cull
     C                             rprpcd = 'BTLIV' or
     C                             rprpcd = 'FPS  '
      *
     C                   movel     rprpcd        wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 If record
     C                   add       wrcghd        dmhd
     C                   add       wrcglb        dmlb
      *
      * Accumulate 'moved Out'
      *
     C                   add       wrcghd        tmohd
     C                   add       wrcglb        tmolb
     C                   endif                                                  If record
     C                   endif                                                  If not cull
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
      * If head is not zero, calculate average pounds and print movement line
      *
     C                   if        dmhd <> 0
     C     dmlb          div(h)    dmhd          dmalb
     C                   movel(p)  'Sales'       dmdsc
     C                   except    dmdtl
     C                   endif
      *
      * Since values are always accumulated but printing is conditional,
      * clear the detail movement print line fields.
      *
     C                   exsr      $clrdm
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Clear the print fields on the detail movement line
      *----------------------------------------------------------------
      *
     C     $clrdm        begsr
      *
     C                   move      *blank        dmdsc
     C                   z-add     0             dmhd
     C                   z-add     0             dmlb
     C                   z-add     0             dmalb
     C                   z-add     0             dmpr
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve dead (daily dead + doa) for movement section
      *----------------------------------------------------------------
      *
      * We do not build separate records in the workfile for DOA and Daily Dead.
      * We have a) one record that sums both together and b) a second record for the
      * daily dead values only. So, to print DOA as a separate line, we must find the
      * difference between the 'dead' and 'daily dead' records.
      *
      * This subroutine retrieves/saves the 'dead' values for this later calculation.
      *
     C     $dead         begsr
      *
     C                   movel     'DEAD '       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 If deads
     C                   z-add     wrcghd        wkdeadhd
     C                   z-add     wrcglb        wkdeadlb
     C                   else
     C                   z-add     0             wkdeadhd
     C                   z-add     0             wkdeadlb
     C                   endif                                                  If deads
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve daily dead data for the movement section
      *----------------------------------------------------------------
      *
      * NOTE: In 2009, the users had us change the text on the report from "Daily Dead" to
      * just "Dead".......BUT, the value we retrieve/print is still truly the "Daily Dead".
      *
     C     $ddead        begsr
      *
     C                   z-add     0             wkddeadhd
     C                   z-add     0             wkddeadlb
      *
     C                   movel     'DDEAD'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 If daily dead
      *
     C                   z-add     wrcghd        wkddeadhd
     C                   z-add     wrcglb        wkddeadlb
      *
      * Calculate dead % = dead head / adjusted transferred in head
      *
     C                   if        wkajtihd <> 0
     C     wrcghd        div(h)    wkajtihd      wkf154
     C     wkf154        mult      100           dmpr
     C                   endif
      *
      * Calculate average pounds
      *
     C                   if        wrcghd <> 0
     C     wrcglb        div(h)    wrcghd        dmalb
     C                   endif
      *
      * Set up print fields and print line
      *
     C                   z-add     wrcglb        dmlb
     C                   z-add     wrcghd        dmhd
     C                   movea     dsc(3)        dmdsc
     C                   except    dmdtl
     C                   endif                                                  If daily dead
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Calculate DOA values for movement section
      *----------------------------------------------------------------
      *
     C     $doa          begsr
      *
      * Calculate DOA values as: dead - daily dead
      *
     C     wkdeadhd      sub       wkddeadhd     wkdoahd
     C     wkdeadlb      sub       wkddeadlb     wkdoalb
      *
      * Calculate dead % = dead head / adjusted transferred in head
      *
     C                   if        wkajtihd <> 0
     C     wkdoahd       div(h)    wkajtihd      wkf154
     C     wkf154        mult      100           dmpr
     C                   endif
      *
      * Calculate average pounds
      *
     C                   if        wkdoahd <> 0
     C     wkdoalb       div(h)    wkdoahd       dmalb
     C                   endif
      *
      * Set up print fields and print line
      *
     C                   z-add     wkdoalb       dmlb
     C                   z-add     wkdoahd       dmhd
     C                   movea     dsc(34)       dmdsc
     C                   except    dmdtl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve inventory adjustment data for the movement section
      *----------------------------------------------------------------
      *
     C     $inadj        begsr
      *
     C                   movel     'INADJ'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 If record
      *
      * Calculate average pounds
      *
     C                   if        wrcghd <> 0
     C     wrcglb        div(h)    wrcghd        dmalb
     C                   endif
      *
      * Calculate inventory adjustment % = adjusted head /transferred in head
      * (Flip the sign on the percent.)
      *
     C                   if        wktihd <> 0
     C     wrcghd        div(h)    wktihd        wkf154
     C     wkf154        mult      100           dmpr
     C     -1            mult      dmpr          dmpr
     C                   endif
      *
      * Set up print fields and print line (always flip the sign)
      *
     C                   z-add     wrcglb        dmlb
     C     -1            mult      dmlb          dmlb
      *
     C                   z-add     wrcghd        dmhd
     C     -1            mult      dmhd          dmhd
      *
     C                   movea     dsc(4)        dmdsc
     C                   except    dmdtl
     C                   endif                                                  If record
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve performance info
      *----------------------------------------------------------------
      *
     C     $perf         begsr
      *
      * Print performance headings
      *
     C                   except    hphdr
      *
      * Weight gained
      *
     C                   movel     'WGAIN'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                  If found
     C                   movea(p)  dsc(1)        dpdsc
     C                   z-add     wrcglb        dplb
     C                   z-add     wrcglb        wkwglb
     C                   except    dpdtl
      *
      * Calculate pounds gained per head out
      * (head out = transferred out + all sold head + all DOA head)
      * Sold head includes culls, btcar, btliv, fps
      *
     C                   add       wkdoahd       wkohd
     C                   if        wkohd <> 0
     C     wkwglb        div(h)    wkohd         dplb52
     C                   seton                                        97
     C                   movea(p)  dsc(2)        dpdsc
     C                   except    dpdtl
     C                   setoff                                       97
     C                   endif
     C                   endif                                                  If found
      *
      * Feed Consumption
      *
     C                   movel     'FCONS'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 If consumed
     C                   z-add     wrcglb        dplb
     C                   movea(p)  dsc(5)        dpdsc
     C                   except    dpdtl
      *
      * Feed conversion = feed consumption / weight gain
      *
     C                   if        wkwglb <> 0
     C     wrcglb        div(h)    wkwglb        dp52
     C                   movea(p)  dsc(6)        dpdsc
     C                   except    dpdtl
     C                   endif
     C                   endif                                                  If consumed
      *
      * Average days fed = Pig days / Transferred in head
      *
     C                   if        wktihd <> 0
     C     wkpday        div(h)    wktihd        dp52
     C                   movea(p)  dsc(7)        dpdsc
     C                   except    dpdtl
     C                   endif
      *
      * Average daily gain = weight gain / total pig days
      *
     C                   if        wkpday <> 0                                  If days
     C     wkwglb        div(h)    wkpday        dp52
     C                   movea(p)  dsc(8)        dpdsc
     C                   except    dpdtl
     C                   endif                                                  If days
      *
      *
      * Calculate Phase Cost per Pound of Gain =
      *   The Feed COS record less the Transfer In amount
      *
     C                   movel     'COS  '       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                  If cost rec
     C     wrcgam        sub       wktiam        wkf152
      *
     C                   if        wkwglb <> 0
     C     wkf152        div(h)    wkwglb        dp52
     C                   movea(p)  dsc(11)       dpdsc
     C                   except    dpdtl
     C                   endif
     C                   endif                                                  If cost rec
      *
      * Feed cost per pounds of gain
      *
     C                   if        wkwglb <> 0
     C     wkfdam        div(h)    wkwglb        dp52
     C                   movea(p)  dsc(12)       dpdsc
     C                   except    dpdtl
     C                   endif
      *
      * Average feed cost per ton
      *
     C     wkfdlb        div       2000          wkf152
     C                   if        wkf152 <> 0
     C     wkfdam        div(h)    wkf152        dp52
     C                   movea(p)  dsc(13)       dpdsc
     C                   except    dpdtl
     C                   endif
      *
      * Carcass yield
      *
     C                   movel     'CYIEL'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off
     C                   z-add     wrcgqt        dp52
      *
     C                   if        ldslcd <> 'G'
     C     dp52          div(h)    whnbhg        dp52
     C                   endif
      *
     C                   z-add     wrcrlb        dplb
     C                   movea(p)  dsc(14)       dpdsc
     C                   except    dpdtl
     C                   endif
      *
      * Backfat inches
      *
     C                   movel     'BFIN '       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off
     C                   z-add     wrcgqt        dp52
      *
     C                   if        ldslcd <> 'G'
     C     dp52          div(h)    whnbhg        dp52
     C                   endif
      *
     C                   movea(p)  dsc(15)       dpdsc
     C                   except    dpdtl
     C                   endif
      *
      * Loin eye depth
      *
     C                   movel     'LEYE '       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off
     C                   z-add     wrcgqt        dp52
      *
     C                   if        ldslcd <> 'G'
     C     dp52          div(h)    whnbhg        dp52
     C                   endif
      *
     C                   movea(p)  dsc(16)       dpdsc
     C                   except    dpdtl
     C                   endif
      *
      * Lean percent
      *
     C                   movel     'LEAN '       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off
     C                   z-add     wrcgqt        dp52
      *
     C                   if        ldslcd <> 'G'
     C     dp52          div(h)    whnbhg        dp52
     C                   endif
      *
     C                   movea(p)  dsc(17)       dpdsc
     C                   except    dpdtl
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Ration part of Performance Section
      *----------------------------------------------------------------
      *
     C     $ration       begsr
      *
      * Retrieve feed calories
      *
     C                   movel     'FCAL '       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 If calories
      *
      * Calculate and print calories per pound of feed
      * Calorie conversion = calories / lbs of feed
      *
     C                   if        wkfdlb <> 0
     C     wrcgqt        div(h)    wkfdlb        dr92
     C                   movea(p)  dsc(32)       drdsc
     C                   except    drdtl1
     C                   endif
      *
      * Convert calories to KCAL
      * Calculate and print KCAL per pig day
      * Calorie conversion = (calories / 1000) / pigdays
      *
     C     wrcgqt        div(h)    1000          wkf155
      *
     C                   if        wkpday <> 0
     C     wkf155        div(h)    wkpday        dr92
     C                   movea(p)  dsc(9)        drdsc
     C                   except    drdtl1
     C                   endif
     C                   endif                                                  If calories
      *
      * Calculate and print 'lysine grams / pig day'
      *     = protein grams / pig days
      *     = (protein lbs * 453.6) / pig days
      *
     C                   movel     'FPRO '       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off and
     C                             wkpday <> 0
     C     wrcglb        mult      453.6         wkf155
     C     wkf155        div(h)    wkpday        dr92
     C                   movea(p)  dsc(10)       drdsc
     C                   except    drdtl1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Process sales data for the sales section
      *----------------------------------------------------------------
      *
     C     $sale         begsr
      *
      * Reset the 'first sale' flag
      *
     C                   movel     yes           salefl
      *
      * Retrieve:
      *  a) butcher hog sales
      *  b) premiums/discounts
      *
     C                   exsr      $butch
     C                   exsr      $prem
      *
      * Calculate Butcher Gross Amount = Butcher sales + premiums discounts
      *
     C     wkbsam        add       wkpdam        wkbgam
     C                   add       wkbgam        dsam
      *
      * If you have a butcher gross amount, print
      *
     C                   if        dsam <> 0                                    IF BUTCH GR
     C                   movea(p)  dsc(19)       dsdsc
     C                   seton                                        82
      *
     C                   z-add     wkbshd        dshd
     C                   z-add     wkbslb        dslb
     C                   z-add     wkt$hd        ds$hd
     C                   z-add     wkt$cw        ds$cw
      *
     C                   except    dsund1
     C                   except    dsdtl
     C                   endif                                                  IF BUTCH GR
      *
      *---------------------------------------------------------------
      * Clear the work fields to use again to accumulate the dollars
      * per head and the dolalrs per hundred weight.
      *
     C                   z-add     0             wkt$hd
     C                   z-add     0             wkt$cw
      *
      * Retrieve:
      *  a) market sales paid live
      *  b) feeder pig sales
      *
     C                   exsr      $live
     C                   exsr      $feedpig
      *
      * Calculate Total Gross Sales = butcher + live + feeder pig
      *
     C     wkbgam        add       wklvam        dsam
     C                   add       wkfpam        dsam
      *
      *
      * Only print the Total Gross line if you have dollars
      *
     C                   if        dsam <> 0                                    IF TOT GROSS
     C     wkbshd        add       wklvhd        dshd
     C                   add       wkfphd        dshd
     C     wkbslb        add       wklvlb        dslb
     C                   add       wkfplb        dslb
      *
      * Save the Total Gross values for later calculations
      *
     C                   z-add     dsam          wkgam
     C                   z-add     dshd          wkghd
     C                   z-add     dslb          wkglb
     C     wkglb         div(h)    100           wkgcwt
      *
      * Calculate the dollars per head
      *
     C                   if        dshd <> 0
     C     dsam          div(h)    dshd          ds$hd
     C                   z-add     ds$hd         wkg$hd
     C                   endif
      *
      * Calculate the dollars per cwt
      *
     C     dslb          div       100           wkf152
     C                   if        wkf152 <> 0
     C     dsam          div(h)    wkf152        ds$cw
     C                   z-add     ds$cw         wkg$cw
     C                   endif
      *
     C                   movea(p)  dsc(20)       dsdsc
     C                   seton                                        82
      *
     C                   except    dsund1
     C                   except    blank
     C                   except    dsdtl
     C                   except    blank
     C                   endif                                                  IF TOT GROSS
      *
      *----------------------------------------------------------------
      * Retrieve the deductions/add-ons
      *
     C                   exsr      $dedad
      *
      * Calculate the 'TOTAL NET' line values as the 'GROSS' values
      * plus the 'DEDUCTION/ADD-ON' values
      *
     C     wkgam         add       wkdaam        dsam
      *
      * If you have dollars, print the 'TOTAL NET' line
      *
     C                   if        dsam <> 0                                    IF TOT NET
     C     wkg$hd        add       wkt$hd        ds$hd
     C     wkg$cw        add       wkt$cw        ds$cw
      *
      * Also, save the 'NET SALES' values for later calculation of
      * the 'NET PROFIT BEFORE TAXES' margin
      *
     C                   z-add     dsam          wknam
     C                   z-add     ds$hd         wkn$hd
     C                   z-add     ds$cw         wkn$cw
      *
     C                   movea(p)  dsc(21)       dsdsc
     C                   seton                                        82
      *
     C                   except    dsund2
     C                   except    dsdtl
     C                   endif                                                  IF TOT NET
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Butcher hog sales
      *----------------------------------------------------------------
      *
     C     $butch        begsr
      *
     C                   movel     'BTCAR'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 IF FOUND
      *
      * Move verbage 'BUTCHER SALES' to the description and set up print fields
      *
     C                   movea     dsc(22)       dsdsc
     C                   seton                                        82
      *
     C                   z-add     wrcghd        dshd
     C                   z-add     wrcglb        dslb
     C                   z-add     wrcgam        dsam
      *
      * Save amounts for calculating the GROSS SALES later
      *
     C                   z-add     wrcghd        wkbshd
     C                   z-add     wrcglb        wkbslb
     C                   z-add     wrcgam        wkbsam
      *
      * Calculate DOLLARS PER HEAD
      *
     C                   if        dshd <> 0
     C     dsam          div(h)    dshd          ds$hd
     C                   add       ds$hd         wkt$hd
     C                   endif
      *
      * Calculate DOLLARS PER CWT
      *
     C     dslb          div(h)    100           wkscwt
     C                   if        wkscwt <> 0
     C     dsam          div(h)    wkscwt        ds$cw
     C                   add       ds$cw         wkt$cw
     C                   endif
      *
      * If this is the first sale, print sale headings and set flag.
      *
     C                   if        salefl = yes
     C                   exsr      $salehead
     C                   endif
      *
      * Print the butcher sales detail line
      *
     C                   except    dsdtl
     C                   endif                                                  IF FOUND
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Live hog sale info
      *----------------------------------------------------------------
      *
     C     $live         begsr
      *
     C                   movel     'BTLIV'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 IF LIVE
      *
     C                   movea     dsc(23)       dsdsc
     C                   seton                                        82
      *
     C                   z-add     wrcghd        dshd
     C                   z-add     wrcglb        dslb
     C                   z-add     wrcgam        dsam
      *
      * Save amounts for calculating GROSS SALES
      *
     C                   z-add     wrcghd        wklvhd
     C                   z-add     wrcglb        wklvlb
     C                   z-add     wrcgam        wklvam
      *
      * Calculate DOLLARS PER HEAD
      *
     C                   if        dshd <> 0
     C     dsam          div(h)    dshd          ds$hd
     C                   endif
      *
      * Calculate  DOLLARS PER CWT
      *
     C     wrcglb        div(h)    100           wkf152
     C                   if        wkf152 <> 0
     C     dsam          div(h)    wkf152        ds$cw
     C                   endif
      *
      * If this is the first sale, print sale headings
      *
     C                   if        salefl = yes
     C                   exsr      $salehead
     C                   endif
      *
      * Print the live sales detail line
      *
     C                   except    dsdtl
     C                   endif                                                  IF LIVE
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Feeder pig sales
      *----------------------------------------------------------------
      *
     C     $feedpig      begsr
      *
     C                   movel     'FPS  '       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 IF FEEDER
      *
      * Set up description
      *
     C                   movea     dsc(24)       dsdsc
     C                   seton                                        82
      *
     C                   z-add     wrcghd        dshd
     C                   z-add     wrcglb        dslb
     C                   z-add     wrcgam        dsam
      *
      * Save amounts to calculate GROSS SALES
      *
     C                   z-add     wrcghd        wkfphd
     C                   z-add     wrcglb        wkfplb
     C                   z-add     wrcgam        wkfpam
      *
      * Calculate DOLLARS PER HEAD
      *
     C                   if        dshd <> 0
     C     dsam          div(h)    dshd          ds$hd
     C                   endif
      *
      * Calculate THE DOLLARS PER CWT.
      *
     C     wrcglb        div       100           wkf152
     C                   if        wkf152 <> 0
     C     dsam          div(h)    wkf152        ds$cw
     C                   endif
      *
      * If this is the first sale, print sale headings
      *
     C                   if        salefl = yes
     C                   exsr      $salehead
     C                   endif
      *
      * Print Feeder Pig Sales Detail line
      *
     C                   except    dsdtl
     C                   endif                                                  IF FEEDER
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Premium/discount sale info
      *----------------------------------------------------------------
      *
     C     $prem         begsr
      *
      * Set indicator 82 off. This controls which description field will print
      * on the detail line--the one from the compile-time table or a description
      * retrieved from a file for premiums/discounts.
      *
     C                   setoff                                       82
      *
      * Read the PREMUIM/DISCOUNT file to get all the report codes and descriptions.
      *
     C                   move      *blank        svrpcd
593  C*    *loval        setll     hsl045a
593  C     *start        setll     hsl045a
      *
     C                   dou       *in91 = *on                                  DO PREM LOOP
     C                   read      hsl045a                                91
     C                   if        *in91 = *off and                             IF NOT EOF
     C                             pdrpcd <> svrpcd
      *
     C                   movel     pdrpcd        svrpcd
     C                   movel     pdrpcd        wkrpcd
      *
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 IF HIT
      *
      * Set up the description
      *
     C                   movel(p)  pdpdds        dsrlds
     C     upper:lower   xlate     dsrlds:2      dsrlds
      *
     C                   z-add     wrcgam        dsam
      *
      * Accumulate amount
      *
     C                   add       wrcgam        wkpdam
      *
      * Calculate  DOLLARS PER HEAD =  AMOUNT / BUTCH SALES HEAD
      *
     C                   if        wkbshd <> 0
     C     wrcgam        div(h)    wkbshd        ds$hd
     C                   add       ds$hd         wkt$hd
     C                   endif
      *
      * Calculate DOLLARS PER CWT = AMOUNT / BUTCHER SALES CWT
      *
     C                   if        wkscwt <> 0
     C     wrcgam        div(h)    wkscwt        ds$cw
     C                   add       ds$cw         wkt$cw
     C                   endif
      *
      * If this is the first sale, print sales headings.
      *
     C                   if        salefl = yes
     C                   exsr      $salehead
     C                   endif
      *
      * Print the premium/discount line.
      *
     C                   except    dsdtl
      *
     C                   endif                                                  IF HIT
     C                   endif                                                  IF NOT EOF
     C                   enddo                                                  DO PREM LOOP
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Deduction/add-on sale info
      *----------------------------------------------------------------
      *
     C     $dedad        begsr
      *
      * Read the deduction/add-on file to retrieve and process all the
      * deduction/add-on report codes. Ultimately, however, only one line
      * of summarized deductions/add-ons will be printed.
      *
     C                   move      *blank        svrpcd
593  C*    *loval        setll     hsl044a
593  C     *start        setll     hsl044a
      *
     C                   dou       *in91 = *on                                  DO DED LOOP
     C                   read      hsl044a                                91
     C                   if        *in91 = *off and                             IF NOT EOF
     C                             darpcd <> svrpcd
      *
     C                   movel     darpcd        svrpcd
     C                   movel     darpcd        wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 IF HIT
     C                   add       wrcgam        dsam
     C                   add       wrcgam        wkdaam
     C                   endif                                                   IF HIT
      *
     C                   endif                                                   IF NOT EOF
     C                   enddo                                                   DO DED LOOP
      *
      * Continue if the amount is not zero
      *
     C                   if        wkdaam <> 0                                  IF DEDADS
      *
     C                   z-add     wkdaam        dsam
      *
      * Calculate  DOLLARS PER HEAD =  AMOUNT / GROSS HEAD
      *
     C                   if        wkghd <> 0
     C     wkdaam        div(h)    wkghd         ds$hd
     C                   add       ds$hd         wkt$hd
     C                   endif
      *
      * Calculate  DOLLARS PER CWT = AMT / GROSS SALES CWT
      *
     C                   if        wkgcwt <> 0
     C     wkdaam        div(h)    wkgcwt        ds$cw
     C                   add       ds$cw         wkt$cw
     C                   endif
      *
      * If this is the first sale, print sale headings
      *
     C                   if        salefl = yes
     C                   exsr      $salehead
     C                   endif
      *
      * Retrieve the description and print the line of summarized
      * deductions and add-ons.
      *
     C                   movea(p)  dsc(18)       dsdsc
     C                   seton                                        82
      *
     C                   except    dsdtl
     C                   endif                                                  IF DEDADS
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Print sale headings
      *----------------------------------------------------------------
      *
     C     $salehead     begsr
      *
     C                   if        *inof = *on or ldmvpf = no
     C                   except    hrhdr
     C                   endif
      *
     C                   except    hshdr
     C                   movel     no            salefl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Cost info
      *----------------------------------------------------------------
      *
     C     $cost         begsr
      *
      * Always to to a new page for COSTS.
      *
     C                   except    hrhdr
     C                   except    hchdr
      *
      * Combine GROSS SALES and TRANSFERRED OUT VALUES
      * to create MOVED OUT head and pounds.
      *
     C     wkghd         add       wktohd        wkmohd
     C     wkglb         add       wktolb        wkmolb
      *
      * Calculate hundred weight for pounds MOVED OUT
      *
     C     wkmolb        div       100           wkmcwt
      *
      *---------------------------------------------------------------
      * Calculate feed cost using the value retrieved in $GENER which
      * includes the dollars from FCONS.
      *
     C                   z-add     wkfdam        dcam
      *
      * Calculate FEED COST per HEAD MOVED OUT
      *
     C                   if        wkmohd <> 0
     C     dcam          div(h)    wkmohd        dc$hd
     C                   endif
      *
      * Calculate FEED COST per CWT MOVED OUT
      *
     C                   if        wkmcwt <> 0
     C     dcam          div(h)    wkmcwt        dc$cw
     C                   endif
      *
      * Accumulate feed cost dollars into TOTAL OPERATING COST
      *
     C                   add       dcam          wkopam
      *
      * Set up the description "FEED"
      *
     C                   movea     dsc(26)       dcdsc
     C                   seton                                        82
      *
     C                   if        *inof = *on
     C                   except    hrhdr
     C                   except    hchdr
     C                   endif
      *
     C                   except    dcdtl
      *
      *---------------------------------------------------------------
      * Retrieve the operating costs
      *---------------------------------------------------------------
      *
      * Process each report code record for the report category
      * 'OPERATING COST'.  (Retrieve records in sequence order.)
      *
     C                   movel(p)  'OPCST'       wkcacd
     C     wkcacd        setll     hsl006b
      *
     C                   dou       *in91 = *on                                  DO CODES
     C     wkcacd        reade     hsl006b                                91
     C                   if        *in91 = *off                                  IF NOT EOF
      *
     C                   movel     rprpcd        wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 IF FOUND
      *
      * Set up print fields
     C                   movel(p)  rprlds        dcrlds
     C     upper:lower   xlate     dcrlds:2      dcrlds
     C                   setoff                                       82
      *
     C                   z-add     wrcgam        dcam
      *
      * Calculate DOLLARS PER HEAD = AMOUNT / MOVED OUT HEAD
      *
     C                   if        wkmohd <> 0
     C     dcam          div(h)    wkmohd        dc$hd
     C                   endif
      *
      * Calculate DOLLARS PER CWT PER MOVED OUT
      *
     C                   if        wkmcwt <> 0
     C     dcam          div(h)    wkmcwt        dc$cw
     C                   endif
      *
      * Accumulate the dollars for TOTAL OPERATING COSTS
      *
     C                   add       dcam          wkopam
      *
      * Print the detail line
      *
     C                   if        *inof = *on
     C                   except    hrhdr
     C                   except    hchdr
     C                   endif
      *
     C                   except    dcdtl
      *
     C                   endif                                                   IF FOUND
     C                   endif                                                   IF NOT EOF
     C                   enddo                                                   DO CODES
      *
      *---------------------------------------------------------------
      * Retrieve cull sales info
      *---------------------------------------------------------------
      *
      * Retrieve cull sales dollars and reverse sign
      *
     C                   movel     'CULLS'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 IF CULL SALE
     C                   z-sub     wrcgam        dcam
     C                   endif                                                  IF CULL SALE
      *
     C                   if        dcam <> 0                                    IF ANY CULL
      *
      * Move the description 'CULL SALES' to the print field
      *
     C                   movea     dsc(25)       dcdsc
     C                   seton                                        82
      *
      * Calculate DOLLARS PER HEAD = AMOUNT / MOVED OUT HEAD
      *
     C                   if        wkmohd <> 0
     C     dcam          div(h)    wkmohd        dc$hd
     C                   endif
      *
      * Calculate DOLLARS PER CWT = DOLLARS / MOVED OUT CWT
      *
     C                   if        wkmcwt <> 0
     C     dcam          div(h)    wkmcwt        dc$cw
     C                   endif
      *
      * Accumulate  CULL DOLLARS for TOTAL OPERATING COSTS
      *
     C                   add       dcam          wkopam
      *
     C                   if        *inof = *on
     C                   except    hrhdr
     C                   except    hchdr
     C                   endif
      *
     C                   except    dcdtl
     C                   endif                                                  IF ANY CULL
      *
      *---------------------------------------------------------------
      * Total operating cost
      *---------------------------------------------------------------
      * If you have total operating cost dollars, print the TOTAL OPERATING
      * COSTS line.
      *
     C                   if        wkopam <> 0                                  IF OPER COST
      *
      * Set up the description TOTAL OPERATING COSTS
      *
     C                   movea(p)  dsc(27)       dcdsc
     C                   seton                                        82
      *
      * Calculate DOLLARS PER HEAD = AMOUNT / MOVED OUT HEAD
      *
     C                   if        wkmohd <> 0
     C     wkopam        div(h)    wkmohd        dc$hd
     C                   endif
      *
      * Calculate DOLLARS PER CWT = DOLLARS / MOVED OUT CWT
      *
     C                   if        wkmcwt <> 0
     C     wkopam        div(h)    wkmcwt        dc$cw
     C                   endif
      *
     C                   z-add     wkopam        dcam
      *
     C                   if        *inof = *on
     C                   except    hrhdr
     C                   except    hchdr
     C                   else
     C                   except    dcund
     C                   endif
      *
     C                   except    dcdtl
     C                   except    blank
     C                   endif                                                  IF OPER COST
      *
      *----------------------------------------------------------------
      * Remaining cost lines
      *----------------------------------------------------------------
      *
      * Transer in costs
     C                   if        wktiam <> 0
     C                   exsr      $ticst
     C                   endif
      *
      * Other costs
     C                   exsr      $otcst
      * Total costs
     C                   exsr      $tccst
      * Transfer out costs
     C                   exsr      $tocst
      *
      *
      * Print COST OF SALES if NET SALES and COST OF SALES are not zero.
      *
     C                   if        wknam <> 0 and
     C                             wkcsam <> 0
     C                   exsr      $slcst
     C                   endif
      *
      * Net profit
     C                   exsr      $netpr
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Transfer in costs
      *----------------------------------------------------------------
      *
      * This subroutine prints 2 lines of TRANSFER IN COSTS:
      *     same-phase and different phase
      *
     C     $ticst        begsr
      *
      * Retrieve transfer in same phase record
      *
     C                   movel     'TRISP'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 IF SAME
      *
      * Set up description TRANSFER IN COSTS SAME PHASE
      *
     C                   movea(p)  dsc(28)       dcdsc
     C                   seton                                        82
      *
     C                   z-add     wrcgam        dcam
      *
      * Calculate DOLLARS PER HEAD MOVED
      *
     C                   if        wkmohd <> 0
     C     wrcgam        div(h)    wkmohd        dc$hd
     C                   endif
      *
      * Calculate DOLLARS PER CWT MOVED
      *
     C                   if        wkmcwt <> 0
     C     wrcgam        div(h)    wkmcwt        dc$cw
     C                   endif
      *
     C                   if        *inof = *on
     C                   except    hrhdr
     C                   except    hchdr
     C                   endif
      *
     C                   except    dcdtl
     C                   endif                                                  IF SAME
      *
      *----------------------------------------------------------------
      * Retrieve TRANSFER IN DIFFERENT PHASE
      *
     C                   movel     'TRIDP'       wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off                                 IF DIFF
      *
      * Set up description TRANSFER IN COSTS DIFFERENT PHASE
      *
     C                   movea(p)  dsc(33)       dcdsc
     C                   seton                                        82
      *
     C                   z-add     wrcgam        dcam
      *
      * Calculate DOLLARS PER HEAD MOVED
      *
     C                   if        wkmohd <> 0
     C     wrcgam        div(h)    wkmohd        dc$hd
     C                   endif
      *
      * Calculate DOLLARS PER CWT MOVED
      *
     C                   if        wkmcwt <> 0
     C     wrcgam        div(h)    wkmcwt        dc$cw
     C                   endif
      *
     C                   if        *inof = *on
     C                   except    hrhdr
     C                   except    hchdr
     C                   endif
      *
     C                   except    DCDTL
     C                   endif                                                  IF DIFF
      *
     C                   except    blank
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Other costs
      *----------------------------------------------------------------
      *
     C     $otcst        begsr
      *
      * Process each OTHER COST report code that has dollars.
      * (Retrieve records in sequence order.)
      *
     C                   movel(p)  'OTCST'       wkcacd
     C     wkcacd        setll     HSL006B
      *
      * Always exclude COST OF SALES
      *
     C                   dou       *in91 = *on                                  DO OTHER
     C     wkcacd        reade     hsl006b                                91
     C                   if        *in91 = *off and                             IF NOT EOF
     C                             rprpcd <> 'COS  '
      *
     C                   movel     rprpcd        wkrpcd
     C     key01         chain     hsp379                             92
     C                   if        *in92 = *off and                             IF NOT ZERO
     C                             wrcgam <> 0
      *
     C                   z-add     wrcgam        dcam
     C                   add       wrcgam        wkocam
      *
      * Calculate  DOLLARS PER HEAD = AMOUNT / MOVED HEAD
      *
     C                   if        wkmohd <> 0
     C     wrcgam        div(h)    wkmohd        dc$hd
     C                   endif
      *
      * Calculate  DOLLARS PER MOVED CWT
      *
     C                   if        wkmcwt <> 0
     C     wrcgam        div(h)    wkmcwt        dc$cw
     C                   endif
      *
      * Set up description
      *
     C                   movel(p)  rprlds        dcrlds
     C     upper:lower   xlate     dcrlds:2      dcrlds
     C                   setoff                                       82
      *
     C                   if        *inof = *on
     C                   except    hrhdr
     C                   except    hchdr
     C                   endif
      *
     C                   except    dcdtl
     C                   endif                                                  IF NOT ZERO
     C                   endif                                                  IF NOT EOF
     C                   enddo                                                  DO OTHER
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Accumulate and print total cost
      *----------------------------------------------------------------
      *
     C     $tccst        begsr
      *
      * Accumulate TOTAL COST =
      *   TRANSFER-IN COSTS + OPERATING COSTS + OTHER COSTS
      *
     C     wktiam        add       wkopam        wktcam
     C     wktcam        add       wkocam        wktcam
      *
      * If TOTAL COST is not zero
      *
     C                   if        wktcam <> 0                                  IF TOT COST
      *
      * Calculate TOTAL COST PER HEAD MOVED
      *
     C                   if        wkmohd <> 0
     C     wktcam        div(h)    wkmohd        dc$hd
     C                   endif
      *
      * Calculate DOLLARS PER MOVED CWT
      *
     C                   if        wkmcwt <> 0
     C     wktcam        div(h)    wkmcwt        dc$cw
     C                   z-add     dc$cw         wkc$cw
     C                   endif
      *
     C                   z-add     wktcam        dcam
      *
      * Retrieve description of TOTAL COSTS
      *
     C                   movea     dsc(29)       dcdsc
     C                   seton                                        82
      *
     C                   if        *inof = *on
     C                   except    hrhdr
     C                   except    hchdr
     C                   else
     C                   except    dcund
     C                   endif
      *
     C                   except    dcdtl
     C                   except    blank
     C                   endif                                                  IF TOT COST
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Cost of transfers-out
      *----------------------------------------------------------------
      *
     C     $tocst        begsr
      *
     C                   z-add     wktranoam     dcam
      *
      * Subtract TRANSFER OUT COST from TOTAL COST to get  COST OF SALES
      *
     C     wktcam        sub       dcam          wkcsam
      *
      * If TRANSFER OUT COSTS are not zero, print
      *
     C                   if        dcam <> 0                                    IF T/O COSTS
      *
      * Reverse the sign on the transfer out cost for printing
      *
     C     -1            mult      dcam          dcam
      *
      * Calculate TRANSFER OUT COST PER HEAD
      *
     C                   if        wktohd <> 0
     C     dcam          div(h)    wktohd        dc$hd
     C                   endif
      *
      * Retrieve description COST OF TRANSFERS OUT
      *
     C                   movea(p)  dsc(30)       dcdsc
     C                   seton                                        82
      *
     C                   if        *inof = *on
     C                   except    hrhdr
     C                   except    hchdr
     C                   endif
      *
     C                   except    dcdtl
     C                   except    blank
     C                   endif                                                  IF T/O COSTS
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Calculate the Cost of Sales
      *----------------------------------------------------------------
      *
      * If NET SALES or COST OF SALES are zero, you won't be in this subroutine.
      *
      * If you are executing this subroutine, you are printing the COST OF SALES
      * which is the difference between TOTAl COSTS and TRANSFER OUT COSTS as
      * calculated in $TOCST.
      *
     C     $slcst        begsr
      *
     C                   if        *inof = *on
     C                   except    hrhdr
     C                   except    hchdr
     C                   endif
      *
      * Retrieve description COST OF SALES
      *
     C                   movea(p)  dsc(31)       dcdsc
     C                   seton                                        82
      *
     C                   z-add     wkcsam        dcam
      *
      * Calculate COST OF HEAD SOLD based on the head from
      * GROSS SALES.
      *
     C                   if        wkghd <> 0
     C     wkcsam        div(h)    wkghd         dc$hd
     C                   z-add     dc$hd         wkc$hd
     C                   endif
      *
     C                   except    dcdtl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Net profit before taxes
      *----------------------------------------------------------------
      *
     C     $netpr        begsr
      *
      * Calculate NET PROFIT =
      *    NET SALES - COST OF SALES
      *
     C     wknam         sub       wkcsam        dcam
      *
      * If NET PROFIT is not zero, Calculate
      *   PROFIT PER HEAD = NET SALES PER HEAD - TOTAL COST PER HEAD
      *   PROFIT PER CWT  = NET SALES PER CWT - COST PER CWT
      *
     C                   if        dcam <> 0
     C     wkn$hd        sub       wkc$hd        dc$hd
     C     wkn$cw        sub       wkc$cw        dc$cw
     C                   endif
      *
     C                   if        *inof = *on
     C                   except    hrhdr
     C                   except    hchdr
     C                   else
     C                   except    dcund
     C                   endif
      *
      * Print the detail line (NOTE: This is the only line for costs that had
      * a description that would not fit in the compile-time table; so, it has
      * its own detail line that has the description hardcoded.)
      *
     C                   except    dcdtl2
     C                   except    dcund
     C                   except    dcund
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve info for group headings
      *----------------------------------------------------------------
      *
     C     $grouphead    begsr
      *
     C     whhgcd        chain     hsp034                             92
     C                   if        *in92 = *off                                 If group hit
      *
     C                   z-add     hgfscd        hrfscd
      *
      * Check the feed allocated flag for the group.  Set an indicator to control
      * printing of the verbage 'shared bin' in the header if the group has
      * allocated feed.
      *
     C                   if        hgfafl = yes
     C                   seton                                        99
     C                   else
     C                   setoff                                       99
     C                   endif
      *
      * Flip open date from CCYYMMDD to MMDDYY
      *
     C     *iso          test(d)                 hgopdt                 92
     C                   if        *in92 = *on                                  If bad date
     C                   z-add     0             hrmdyopdt
     C                   else
     C                   move      hgopdt        wkisodate
     C     *mdy          move      wkisodate     hrmdyopdt
     C                   endif                                                  If bad date
      *
      * Flip closed date from CCYYMMDD to MMDDYY
      *
     C     *iso          test(d)                 hgcldt                 92
     C                   if        *in92 = *on                                  If bad date
     C                   z-add     0             hrmdycldt
     C                   else
     C                   move      hgcldt        wkisodate
     C     *mdy          move      wkisodate     hrmdycldt
     C                   endif                                                  If bad date
      *
      * Flip disposed date from CCYYMMDD to MMDDYY
      *
     C     *iso          test(d)                 hgdsdt                 92
     C                   if        *in92 = *on                                  If bad date
     C                   z-add     0             hrmdydsdt
     C                   else
     C                   move      hgdsdt        wkisodate
     C     *mdy          move      wkisodate     hrmdydsdt
     C                   endif                                                  If bad date
      *
      * Retrieve group type description
      *
     C     hggtcd        chain     hsp025                             92
     C                   if        *in92 = *off
     C                   movel     gtgtds        hrgtds
     C                   else
     C                   eval      hrgtds = 'Unknown'
     C                   endif
      *
      * Retrieve sex code description
      *
     C     hgsxcd        chain     hsp056                             92
     C                   if        *in92 = *off
     C                   movel     sxsxds        hrsxds
     C                   else
     C                   eval      hrsxds = 'Unknown'
     C                   endif
      *
      * Retrieve breed stock description
      *
     C     hgbscd        chain     hsp031                             92
     C                   if        *in92 = *off
     C                   movel     bsbsds        hrbsds
     C                   else
     C                   eval      hrbsds = 'Unknown'
     C                   endif
      *
      * Origin BGF Farm Site (use the override farm if there is one)
      * Then, retrieve Farm Site name for this Origin BGF Farm.
      *
     C                   z-add     hgobfs        hrobfs
      *
     C     hghgsn        chain     hsp130                             92
     C                   if        *in92 = *off
     C                   z-add     goobfs        hrobfs
     C                   endif
      *
     C     hrobfs        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   movel(p)  fsfsnm        hrobfsnm
     C                   else
     C                   movel(p)  'Unknown'     hrobfsnm
     C                   endif
      *
     C                   endif                                                  If group hit
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve farm heading info
      *----------------------------------------------------------------
      *
     C     $farmhead     begsr
      *
     C                   if        ldslcd = 'F'
     C                   z-add     whlevel       hrfscd
     C                   endif
      *
      * Retrieve farm site name, cell and company relationship
      *
     C     hrfscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If valid farm
     C                   eval      hrfsnm = 'Unknown'
     C                   z-add     0             hrcell
     C                   move      *blank        hrcrcd
     C                   else
     C                   movel(p)  fsfsnm        hrfsnm
     C                   movel(p)  fscrcd        hrcrcd
     C                   z-add     fscell        hrcell
      *
      * Retrieve company relationship description
      *
     C     fscrcd        chain     hsp012                             92
     C                   if        *in92 = *off
     C                   movel     crcrds        hrcrds
     C                   else
     C                   eval      hrcrds  = 'Unknown'
     C                   endif
      *
      * Retrieve multisite manger name
      *
     C     fsmmgcd       chain     hsp016                             92
     C                   if        *in92 = *off
     C                   movel     mgmgnm        hrmmgnm
     C                   else
     C                   eval      hrmmgnm = 'Unknown'
     C                   endif
      *
      * Retrieve cell manager name
      *
     C     fscmgcd       chain     hsp016                             92
     C                   if        *in92 = *off
     C                   movel     mgmgnm        hrcmgnm
     C                   else
     C                   eval      hrcmgnm = 'Unknown'
     C                   endif
      *
      * Retrieve production manager name
      *
     C     fspmgcd       chain     hsp016                             92
     C                   if        *in92 = *off
     C                   movel     mgmgnm        hrpmgnm
     C                   else
     C                   eval      hrpmgnm = 'Unknown'
     C                   endif
      *
      *
      * Retrieve farm site business office description
      *
     C     fsfsbo        chain     hsp009                             92
     C                   if        *in92 = *off
     C                   movel     bobobo        hrbobo
     C                   movel     bobods        hrbods
     C                   else
     C                   eval      hrbods = 'Unknown'
     C                   endif
      *
     C                   endif                                                  If valid farm
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Clear work fields
      *----------------------------------------------------------------
      *
     C     $CLRWK        begsr
      *
      * Pig days
     C                   z-add     0             wkpday
      *
      * Pounds of weight gained
      *
     C                   z-add     0             wkwglb
      *
      * Feed
     C                   z-add     0             wkfdam
     C                   z-add     0             wkfdlb
      *
      * Transferred
     C                   z-add     0             wktohd
     C                   z-add     0             wktolb
     C                   z-add     0             wktihd
     C                   z-add     0             wktiam
      * Moved
     C                   z-add     0             wkmohd
     C                   z-add     0             wkmolb
     C                   z-add     0             wkmcwt
      *
      * Butcher hog sales
     C                   z-add     0             wkbsam
     C                   z-add     0             wkbshd
     C                   z-add     0             wkbslb
     C                   z-add     0             wkbgam
     C                   z-add     0             wkscwt
      *
      * Premiums/discounts
     C                   z-add     0             wkpdam
      *
      * Deductions/add-ons
     C                   z-add     0             wkdaam
      *
      * BTCAR sales + premiums/discounts + deduction/add-ons
      *
     C                   z-add     0             wkt$hd
     C                   z-add     0             wkt$cw
      *
      * Live hogs
     C                   z-add     0             wklvhd
     C                   z-add     0             wklvlb
     C                   z-add     0             wklvam
      *
      * Feeder pigs
     C                   z-add     0             wkfphd
     C                   z-add     0             wkfplb
     C                   z-add     0             wkfpam
      *
      * Gross sales
     C                   z-add     0             wkgcwt
     C                   z-add     0             wkghd
     C                   z-add     0             wkglb
     C                   z-add     0             wkgam
     C                   z-add     0             wkg$hd
     C                   z-add     0             wkg$cw
      *
      * Net sales
     C                   z-add     0             wknam
     C                   z-add     0             wkn$hd
     C                   z-add     0             wkn$cw
      *
      * Operating costs
     C                   z-add     0             wkopam
      *
      * Other costs
     C                   z-add     0             wkocam
      *
      * Cost of Sales
     C                   z-add     0             wkcsam
      *
      * Total costs
     C                   z-add     0             wktcam
     C                   z-add     0             wkc$cw
     C                   z-add     0             wkc$hd
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    whlevel
     C                   kfld                    wkrpcd
      *
     C     key02         klist
     C                   kfld                    wrcacd
     C                   kfld                    wrrpcd
      *
      * Set up report headings based on summary level selected.
      *
     C                   select
      * Group level
     C                   when      ldslcd = 'G'
     C                   seton                                        93
     C                   eval      hrtitle1 = '  SUMMARY LEVEL--GROUP '
      * Farm level
     C                   when      ldslcd = 'F'
     C                   seton                                        94
     C                   eval      hrtitle1 = '  SUMMARY LEVEL--FARM  '
      * Cell level
     C                   when      ldslcd = 'C'
     C                   seton                                        95
     C                   eval      hrtitle1 = '  SUMMARY LEVEL--CELL  '
      *
      * Business level
     C                   when      ldslcd = 'B'
     C                   seton                                        96
     C                   eval      hrtitle1 = 'SUMMARY LEVEL--BUSINESS'
     C                   endsl
      *
      *
     C                   if        ldfsbo = *blank
     C                   movel     'All'         ldfsbo
     C                   endif
      *
     C                   if        ldptcd = *blank
     C                   movel     'All'         ldptcd
     C                   endif
      *
     C                   if        ldppcd = *blank
     C                   movel     'All'         ldppcd
     C                   endif
      *
     C                   if        ldcrcd = *blank
     C                   movel     'All'         ldcrcd
     C                   endif
      *
     C                   if        ldcell = 0
     C                   seton                                        87
     C                   endif
      *
     C                   if        ldfscd = 0
     C                   seton                                        86
     C                   endif
      *
     C                   if        ldgtcd = *blank
     C                   movel     'All'         hrgtcd
     C                   else
     C                   movel     ldgtcd        hrgtcd
     C                   endif
      *
     C                   if        ldhgcd = *blank
     C                   movel     'All'         ldhgcd
     C                   endif
      *
      *  You will be generating the report for 'closed' groups or
      *  'disposed' groups.  Set an indicator to control printing.
      *
     C                   if        ldgscd = 'DS'
     C                   seton                                        98
     C                   endif
      *
      * If the users have elected to override the sort/print sequence to
      * "Production Manager", plop some text to this effect into the title heading.
      *
     C                   if        ldpmgfl = yes
     C                   eval      hrtitle2 = 'Sorted/Printed by Production +
     C                                        Manager'
     C                   endif
      *
     C                   time                    rtime
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------
      * Report heading lines
      *-------------------------------------------------------------
      *
     Oqprint    e            hrhdr          1 01
     O                       sdpgm               10
     O                                           50 'HOG PRODUCTION SYSTEM'
     O                                           70 'DATE'
     O                       udate         y     80
      *
     O          e            hrhdr          1
     O                       sdusr               10
     O              n98                          50 'CLOSED GROUP SUMMARY'
     O               98                          50 'DISPOSED GROUP SUMMARY'
     O                                           70 'TIME'
     O                       rtime               80 '  :  :  '
      *
     O          e            hrhdr          1
     O                       hrtitle1            51
     O                                           70 'PAGE'
     O                       page          z     80
      *
      *
     O          e            hrhdr          2
     O                       hrtitle2            57
      *
      *-------------------------------------------------------------
      * Headings when summary level is GROUP
      *-------------------------------------------------------------
      *
     O          e    93      hrhdr          1
     O                                           24 'Business Office ........'
     O                                           34 '..........'
     O                       hrbobo              40
     O                       hrbods              75
      *
      *
     O          e    93      hrhdr          1
     O                                           24 'Cell ...................'
     O                                           34 '..........'
     O                       hrcell        z     40
      *
      *
     O          e    93      hrhdr          1
     O                                           24 'Farm Site ..............'
     O                                           34 '..........'
     O                       hrfscd        z     40
     O                       hrfsnm              70
      *
     O          e    93      hrhdr          1
     O                                           24 'Company relationship ...'
     O                                           34 '..........'
     O                       hrcrcd              40
     O                       hrcrds              55
      *
     O          e    93      hrhdr          1
     O                                           24 'Group/group type .......'
     O                                           34 '..........'
     O                       hghgcd              42
     O                       hrgtds              60
      *
     O          e    93      hrhdr          1
     O                                           24 'Production phase/type ..'
     O                                           34 '..........'
     O                       hgppcd              40
     O                       hgptcd              50
      *
     O          e    93      hrhdr          1
     O                                           24 'Building/Room ..........'
     O                                           34 '..........'
     O                       hgblcd              40
     O                                           41 '/'
     O                       hgrmcd              46
     O               99                          60 'SHARED BIN'
      *
     O          e    93      hrhdr          1
     O               98                          24 'Date Opened / Disposed .'
     O               98                          34 '..........'
     O              n98                          24 'Date Opened / Disposed /'
     O              n98                          34 ' Closed ..'
     O                       hrmdyopdt           43 '  -  -  '
     O                                           45 '/'
     O                       hrmdydsdt           54 '  -  -  '
     O              n98                          56 '/'
     O              n98      hrmdycldt           65 '  -  -  '
      *
     O          e    93      hrhdr          1
     O                                           24 'Breed Stock ............'
     O                                           34 '..........'
     O                       hrbsds              55
      *
     O          e    93      hrhdr          1
     O                                           24 'Production Manager .....'
     O                                           34 '..........'
     O                       hrpmgnm             55
      *
     O          e    93      hrhdr          1
     O                                           24 'Cell Manager ...........'
     O                                           34 '..........'
     O                       hrcmgnm             55
      *
     O          e    93      hrhdr          1
     O                                           24 'Multisite Manager ......'
     O                                           34 '..........'
     O                       hrmmgnm             55
      *
     O          e    93      hrhdr          1
     O                                           24 'Sex ....................'
     O                                           34 '..........'
     O                       hrsxds              45
      *
     O          e    93      hrhdr          2
     O                                           24 'Origin BGF Farm Site ...'
     O                                           34 '..........'
     O                       hrobfs        z     40
     O                       hrobfsnm            70
      *
      *-------------------------------------------------------------
      * Headings when summary level is BUSINESS
      *-------------------------------------------------------------
      *
     O          e    96      hrhdr          1
     O                                           23 'Business Office .......'
     O                       ldfsbo              30
     O                       ldbods              64
      *
     O          e    96      hrhdr          1
     O              n98                          23 'From Closed Date ......'
     O               98                          23 'From Disposed Date ....'
     O                       ldfmdy              33 '  /  /  '
      *
     O          e    96      hrhdr          1
     O              n98                          23 'To Closed Date ........'
     O               98                          23 'To Disposed Date ......'
     O                       ldtmdy              33 '  /  /  '
      *
     O          e    96      hrhdr          1
     O                                           23 'Production Type .......'
     O                       ldptcd              30
     O                       ldptds              44
      *
     O          e    96      hrhdr          1
     O                                           23 'Production Phase ......'
     O                       ldppcd              30
     O                       ldppds              64
      *
     O          e    96      hrhdr          1
     O                                           23 'Cell ..................'
     O               87                          28 'All'
     O              n87      ldcell        z     28
      *
      *
     O          e    96      hrhdr          1
     O                                           23 'Company relationship ..'
     O                       ldcrcd              30
     O                       ldcrds              44
      *
      *
     O          e    96      hrhdr          1
     O                                           23 'Farm Site .............'
     O               86                          28 'All'
     O              n86      ldfscd        z     30
     O              n86      ldfsnm              59
      *
     O          e    96      hrhdr          1
     O                                           23 'Group Type ............'
     O                       hrgtcd              28
     O                       ldgtds              49
      *
      *
     O          e    96      hrhdr          2
     O                                           23 'Number of Groups ......'
     O                       whnbhg        k     31
      *
      *-------------------------------------------------------------
      * Headings when summary level is FARM
      *-------------------------------------------------------------
      *
     O          e    94      hrhdr          1
     O                                           16 'SUMMARY OPTIONS:'
     O                                           41 'From Closed Date ......'
     O                       ldfmdy              51 '  /  /  '
      *
     O          e    94      hrhdr          1
     O                                           41 'To Closed Date ........'
     O                       ldtmdy              51 '  /  /  '
      *
     O          e    94      hrhdr          1
     O                                           41 'Business Office .......'
     O                       ldfsbo              48
     O                       ldbods              83
      *
     O          e    94      hrhdr          1
     O                                           41 'Production Type .......'
     O                       ldptcd              48
     O                       ldptds              63
      *
     O          e    94      hrhdr          1
     O                                           41 'Production Phase ......'
     O                       ldppcd              48
     O                       ldppds              83
      *
     O          e    94      hrhdr          1
     O                                           41 'Company Relationship ..'
     O                       ldcrcd              48
     O                       ldcrds              63
      *
     O          e    94      hrhdr          1
     O                                           41 'Cell ..................'
     O               87                          46 'All'
     O              n87      ldcell        z     46
      *
     O          e    94      hrhdr          1
     O                                           41 'Farm Site .............'
     O               86                          46 'All'
     O              n86      ldfscd        z     48
     O              n86      ldfsnm              78
      *
     O          e    94      hrhdr          2
     O                                           41 'Group Type ............'
     O                       hrgtcd              46
     O                       ldgtds              68
      *
      *
     O          e    94      hrhdr          1
     O                                           23 'Farm site .............'
     O                       hrfscd        m     30
     O                       hrfsnm              60
      *
      *
     O          e    94      hrhdr          1
     O                                           23 'Company relationship ..'
     O                       hrcrcd              30
     O                       hrcrds              45
      *
     O          e    94      hrhdr          1
     O                                           23 'Cell ..................'
     O                       hrcell        z     29
      *
      *
     O          e    94      hrhdr          1
     O                                           23 'Cell manager ..........'
     O                       fscmgcd             30
     O                       hrcmgnm             55
      *
     O          e    94      hrhdr          1
     O                                           23 'Production manager ....'
     O                       fspmgcd             30
     O                       hrpmgnm             55
      *
     O          e    94      hrhdr          2
     O                                           23 'Number of groups ......'
     O                       whnbhg        k     31
      *
      *-------------------------------------------------------------
      * Headings when summary level is CELL
      *-------------------------------------------------------------
      *
     O          e    95      hrhdr          1
     O                                           16 'SUMMARY OPTIONS:'
     O                                           41 'From Closed Date ......'
     O                       ldfmdy              51 '  /  /  '
      *
     O          e    95      hrhdr          1
     O                                           41 'To Closed Date ........'
     O                       ldtmdy              51 '  /  /  '
      *
     O          e    95      hrhdr          1
     O                                           41 'Business Office .......'
     O                       ldfsbo              48
     O                       ldbods              83
     O          e    95      hrhdr          1
     O                                           41 'Production Type .......'
     O                       ldptcd              48
     O                       ldptds              63
      *
     O          e    95      hrhdr          1
     O                                           41 'Production Phase ......'
     O                       ldppcd              48
     O                       ldppds              83
      *
     O          e    95      hrhdr          1
     O                                           41 'Company Relationship ..'
     O                       ldcrcd              48
     O                       ldcrds              63
      *
     O          e    95      hrhdr          1
     O                                           41 'Cell ..................'
     O               87                          46 'All'
     O              n87      ldcell        z     46
      *
     O          e    95      hrhdr          1
     O                                           41 'Farm Site .............'
     O               86                          46 'All'
     O              n86      ldfscd        z     48
     O              n86      ldfsnm              78
      *
     O          e    95      hrhdr          2
     O                                           41 'Group Type ............'
     O                       hrgtcd              46
     O                       ldgtds              68
      *
     O          e    95      hrhdr          1
     O                                           19 'Cell ..............'
     O                       whlevel       z     26
      *
     O          e    95      hrhdr          2
     O                                           19 'Number of Groups ..'
     O                       whnbhg        k     27
      *-------------------------------------------------------------
      * MOVEMENTS
      *-------------------------------------------------------------
      *
      * Heading lines for movements section
      *
      *
     O          e            hmhdr          1
     O                                           71 '---RECEIVED WEIGHT---'
     O                                           77 '%'
      *
     O          e            hmhdr          2
     O                                           23 '****** MOVEMENTS ******'
     O                                           42 'HEAD'
     O                                           60 'LIVE LBS'
     O                                           69 'AVERAGE'
     O                                           80 'OF HEAD'
      *
      *
      *-------------------------------------------------------------
      * DETAIL MOVEMENTS LINE
      *-------------------------------------------------------------
      *
     O          e            dmdtl          1
     O                       dmdsc          b    23
     O               89                          26 '(Incl. In Above)'
     O               88                          27 '(Incl. In Above)'
     O                       dmhd          kb    43
     O                       dmlb          kb    61
     O                       dmalb         kb    70
     O                       dmpr          kb    80
      *
      *  Total Movements 'IN' line
      *
     O          e            tmtoti         1
     O                       dash                80
      *
     O          e            tmtoti         1
     O                                           10 'Total In'
     O                       tmihd         kb    43
     O                       tmilb         kb    61
     O                       tmialb        kb    70
      *
     O          e            tmtoti         2
     O                       dash                80
      *
      *  Total Movements 'OUT' line
      *
     O          e            tmtoto         1
     O                       dash                80
      *
     O          e            tmtoto         1
     O                                           11 'Total Out'
     O                       tmohd         kb    43
     O                       tmolb         kb    61
     O                       tmoalb        kb    70
      *
     O          e            tmtoto         2
     O                       dash                80
      *
      *-----------------------------------------------------------
      * PERFORMANCE
      *-----------------------------------------------------------
      *
      * Heading line for Performance Section
      *
     O          e            hphdr       2  2
     O                                           23 '***** PERFORMANCE *****'
     O                                           51 'POUNDS'
      *
      * Detail performance line
      *
     O          e            dpdtl          1
     O                       dpdsc          b    23
     O                       dp52          kb    36
     O                       dplb          kb    52
     O               97      dplb52        kb    52
      *
      *
      * Detail ration line for printing  KCAL and LYSINE info
      *
     O          e            drdtl1         1
     O                       drdsc          b    23
     O                       dr92          kb    36
      *
      *-------------------------------------------------------------
      * SALES
      *-------------------------------------------------------------
      *
      * Sales header
      *
     O          e            hshdr       2  2
     O                                           23 '******** SALES ********'
     O                                           31 'HEAD'
     O                                           46 'LIVE LBS'
     O                                           61 'DOLLARS'
     O                                           70 '$/HEAD'
     O                                           79 '$/CWT'
      * Sales detail
      *
     O          e            dsdtl          1
     O               82      dsdsc          b    23
     O              n82      dsrlds         b    21
     O                       dshd          kb    32
     O                       dslb          kb    47
     O                       dsam          kb    62
     O                       ds$hd         kb    71
     O                       ds$cw         kb    80
      *
      * Underscore lines for sales totals
      *
     O          e            dsund1         1
     O                                           31 '--------------'
     O                                           46 '--------------'
     O                                           61 '--------------'
     O                                           70 '------'
     O                                           79 '------'
      *
     O          e            dsund2         1
     O                                           61 '--------------'
     O                                           70 '------'
     O                                           79 '------'
      *
      *-------------------------------------------------------------
      *  COSTS
      *-------------------------------------------------------------
      *
      * Headings for cost section
      *
     O          e            hchdr       2  2
     O                                           23 '******** COSTS ********'
     O                                           61 'DOLLARS'
     O                                           70 '$/HEAD'
     O                                           79 '$/CWT'
      *
      * Cost detail lines
      *
     O          e            dcdtl          1
     O               82      dcdsc          b    23
     O              n82      dcrlds         b    21
     O                       dcam          kb    62
     O                       dc$hd         kb    71
     O                       dc$cw         kb    80
      *
      * NET PROFIT BEFORE TAXES (NOTE: THIS LINE IS DEFINED SEPARATELY
      * SIMPLY BECAUSE THE DESCRIPTION WAS TOO LONG FOR THE COMPILE
      * TIME TABLE.)
      *
     O          e            dcdtl2         1
     O                                           23 'Net Profit Before Taxes'
     O                                           32 '(Margin)'
     O                       dcam          kb    62
     O                       dc$hd         kb    71
     O                       dc$cw         kb    80
      *
      * Cost underscore line
      *
     O          e            dcund          1
     O                                           61 '--------------'
     O                                           70 '------'
     O                                           79 '------'
      *
      *-------------------------------------------------------------
      * Blank line
      *-------------------------------------------------------------
      *
     O          e            blank       1
      *
      *-------------------------------------------------------------
      * No Data Message Line
      *-------------------------------------------------------------
      *
     O          e            nodata         1
     O                                           16 'SUMMARY OPTIONS:'
     O              n98                          41 'From Closed Date ......'
     O               98                          41 'From Disposed Date ....'
     O                       ldfmdy              51 '  /  /  '
      *
     O          e            nodata         1
     O              n98                          41 'To Closed Date ........'
     O               98                          41 'To Disposed Date ......'
     O                       ldtmdy              51 '  /  /  '
      *
     O          e            nodata         1
     O                                           41 'Business Office .......'
     O                       ldfsbo              48
     O                       ldbods              83
      *
     O          e            nodata         1
     O                                           41 'Production Type .......'
     O                       ldptcd              48
     O                       ldptds              63
      *
     O          e            nodata         1
     O                                           41 'Production Phase ......'
     O                       ldppcd              48
     O                       ldppds              83
      *
     O          e            nodata         1
     O                                           41 'Cell ..................'
     O               87                          46 'All'
     O              n87      ldcell        z     46
      *
      *
     O          e            nodata         1
     O                                           41 'Company relationship ..'
     O                       ldcrcd              48
     O                       ldcrds              63
      *
     O          e            nodata         1
     O                                           41 'Farm Site .............'
     O               86                          46 'All'
     O              n86      ldfscd        z     48
     O              n86      ldfsnm              78
      *
     O          e            nodata         1
     O                                           41 'Hog group .............'
     O                       ldhgcd              50
      *
     O          e            nodata         2
     O                                           41 'Group Type ............'
     O                       hrgtcd              46
     O                       ldgtds              68
      *
     O          e            nodata      1  1
     O                                           19 'No Data Meets Your'
     O                                           38 'Selection Criteria'
      *-------------------------------------------------------------
      * COMPILE TABLES FOR DESCRIPTIONS
      *-------------------------------------------------------------
** DSC
Weight Gained
LBS Gained per Head Out
Dead
Adjustments--Mortality
Feed Consumption
Feed Conversion
Average Days Fed
Average Daily Gain
Avg KCAL per Pig Day
Lysine Grams / Pig Day
Phase Cost / LB of Gain
Feed Cost  / LB of Gain
Average Feed Cost / Ton
Carcass Yield
Backfat Inches
Loin Eye Depth
Lean Percent
Deduction/Add-ons
Butcher Gross
Total Gross
Total Net
 Butcher Sales
 Live Hogs
 Feeder Pig Sales
Cull Sales
 Feed
Total Operating Costs
Tran-In Cost Same Phase
Total Costs
 Cost of Transfers Out
 Cost of Sales
Avg Calories/LB of Feed
Tran-In Cost Diff Phase
DOA
