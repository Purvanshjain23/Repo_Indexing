// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDQJXFR
// ?Date: 14.08.2025 Time: 03:32:51
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(UPD WK Tots - Form Chg RT) TYPE(RTVOBJ) FILE(PDJKCPP)          AC1314575;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.USR_Total_Consumed_Items);
PARAMETER(PAR.USR_Muscle_Yield_Amt);
PARAMETER(PAR.Total_Credit_Dollars);
PARAMETER(PAR.Starting_Product_Price);
PARAMETER(PAR.Credit_Value);
PARAMETER(PAR.Muscle_Yield_Price);
{
 //?USER: Initialize routine

 // PAR.BOM Type = WRK.BOM Type
 PAR.BOM_Type = WRK.BOM_Type;

 // PAR.USR BOM Type = WRK.BOM Type
 PAR.USR_BOM_Type = WRK.BOM_Type;

 // PAR.USR Total Consumed Items = CON.*ZERO
 PAR.USR_Total_Consumed_Items = *ZERO;

 // PAR.USR Muscle Yield Amt = CON.*ZERO
 PAR.USR_Muscle_Yield_Amt = *ZERO;

 // PAR.Total Credit Dollars = CON.*ZERO
 PAR.Total_Credit_Dollars = *ZERO;

 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Price Method Componant is STRITM
 IF DB1.Price_Method_Componant = 'STRITM';

 // PAR.BOM Type = CND.Consumed - Meat
 PAR.BOM_Type = 'C';

 // PAR.Starting Product Price = PAR.Starting Product Price + DB1.Market Value
 PAR.Starting_Product_Price = PAR.Starting_Product_Price + DB1.Market_Value;

 // IF DB1.Price Method Componant is TCRDVY
 IF DB1.Price_Method_Componant = 'TCRDVY';

 // PAR.USR BOM Type = CND.Produced - Meat
 PAR.USR_BOM_Type = 'P';

 // PAR.Credit Value = PAR.Credit Value + DB1.Credit Value
 PAR.Credit_Value = PAR.Credit_Value + DB1.Credit_Value;

 // PAR.Muscle Yield Price = PAR.Muscle Yield Price + DB1.Sales Yield
 PAR.Muscle_Yield_Price = PAR.Muscle_Yield_Price + DB1.Sales_Yield;

 ENDIF;

 //?USER: Exit processing

 CASE;

 // IF PAR.BOM Type is Consumed - Meat
 IF PAR.BOM_Type = 'C';

 EXECUTE FUNCTION(CHG Detail WK from Frm CH) TYPE(CHGOBJ) FILE(PDIMCPP)          AC1314541;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Order_Sequence_Number);
 PARAMETER(PAR.Order_Secondary_Line_Seq);
 PARAMETER('STRITM');
 PARAMETER(PAR.Starting_Product_Price);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 // PAR.USR Total Consumed Items = PAR.Starting Product Price * CON.1 *Rounded
 PAR.USR_Total_Consumed_Items = PAR.Starting_Product_Price * 1 'H';

 ENDIF;

 CASE;

 // IF PAR.USR BOM Type is Produced - Meat
 IF PAR.USR_BOM_Type = 'P';

 EXECUTE FUNCTION(CHG Detail WK from Frm CH) TYPE(CHGOBJ) FILE(PDIMCPP)          AC1314541;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Order_Sequence_Number);
 PARAMETER(PAR.Order_Secondary_Line_Seq);
 PARAMETER('TLCRDV');
 PARAMETER(PAR.Credit_Value);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 EXECUTE FUNCTION(CHG Detail WK from Frm CH) TYPE(CHGOBJ) FILE(PDIMCPP)          AC1314541;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Order_Sequence_Number);
 PARAMETER(PAR.Order_Secondary_Line_Seq);
 PARAMETER('TLCRDY');
 PARAMETER(PAR.Muscle_Yield_Price);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 // PAR.Credit Value = PAR.Credit Value * CON.-1 *
 PAR.Credit_Value = PAR.Credit_Value * -1;

 // PAR.Muscle Yield Price = CON.100 - PAR.Muscle Yield Price
 PAR.Muscle_Yield_Price = 100 - PAR.Muscle_Yield_Price;

 EXECUTE FUNCTION(CHG Detail WK from Frm CH) TYPE(CHGOBJ) FILE(PDIMCPP)          AC1314541;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Order_Sequence_Number);
 PARAMETER(PAR.Order_Secondary_Line_Seq);
 PARAMETER('SUBCRD');
 PARAMETER(PAR.Credit_Value);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 EXECUTE FUNCTION(CHG Detail WK from Frm CH) TYPE(CHGOBJ) FILE(PDIMCPP)          AC1314541;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Order_Sequence_Number);
 PARAMETER(PAR.Order_Secondary_Line_Seq);
 PARAMETER('MSCYLD');
 PARAMETER(PAR.Muscle_Yield_Price);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 // PAR.USR Muscle Yield Amt = PAR.Muscle Yield Price * CON.1 *Rounded
 PAR.USR_Muscle_Yield_Amt = PAR.Muscle_Yield_Price * 1 'H';

 // PAR.Total Credit Dollars = PAR.Credit Value * CON.1 *Rounded
 PAR.Total_Credit_Dollars = PAR.Credit_Value * 1 'H';

 ENDIF;

}


