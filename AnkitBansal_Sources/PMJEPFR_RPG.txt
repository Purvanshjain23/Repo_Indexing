     H/TITLE PRT Broker Exhibits    PF Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 02/11/22  Time  : 16:14:25
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FPDKMREL1IF  E           K        DISK
      * RTV : Company Values            Retrieval index
      *
     FPOC5REL0IF  E           K        DISK
      * RTV : Broker                    Retrieval index
      *
     FCAAPREL2IF  E           K        DISK
      * RTV : Salesperson               Retrieval index       V
      *
     FOMHLREL1IF  E           K        DISK
      * RTV : Accrual Program           Retrieval index
      *
     FOMHOREL6IF  E           K        DISK
      * RSQ : Customer Accrual          Broker/Ship To
      *
     FCABBREL1IF  E           K        DISK
      * RTV : Customer                  Retrieval index       NV
      *
     FOMHPREL1IF  E           K        DISK
      * RTV : Customer Accrual Item     Retrieval index
      *
     FCABZREL7IF  E           K        DISK
      * RSQ : Company Item              RSQ by Item only      NV
      *
     FPOC8REL1IF  E           K        DISK
      * RTV : Customer Accrual Str      Retrieval index
      *
     FOME8REL0IF  E           K        DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FOME9REL0IF  E           K        DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOMFAREL1IF  E           K        DISK
      * RTV : Item Structure Class      Retrieval index
      *
     FPPAJREL1IF  E           K        DISK
      * RTV : Customer Accrual Range    Retrieval index
      *
     FPPAHREL1IF  E           K        DISK
      * RTV : Accrual Cust Pgm Item     Retrieval index
      *
     FPMA3REL1IF  E           K        DISK
      * RTV : Accrual Cust Pgm Item Str Retrieval index
      *
     FOMHOREL2IF  E           K        DISK
      * RSQ : Customer Accrual          RSQ Accrual
      *
     FPMJEPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: PRT Broker Exhibits    PF Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L7         7  1
      * Long constants
     E                    @CN#    1  04  6   @CN    25
     E                    YK01      100  9  A            ARY Acrl Stand
      *
     I@HORELO
      * Customer Accrual          RSQ Accrual
      * Renamed input format fields
     I              HOBKC7                          WBBKC7
     I              HOOJCD                          WBOJCD
     I              HOGUNY                          WBGUNY
     I              HOBFDT                          WBBFDT
     I              HOA2DT                          WBA2DT
     I              HOBKPR                          WBBKPR
     I              HOTTST                          WBTTST
     I              HOSHSX                          WBSHSX
     I              HOQDSX                          WBQDSX
     I              HOPJDT                          WBPJDT
     I              HOPKDT                          WBPKDT
     I              HOECVL                          WBECVL
     I              HOQESX                          WBQESX
     I              HOQFSX                          WBQFSX
     I              HOHHAA                          WBHHAA
     I              HOHQVL                          WBHQVL
     I              HOQGSX                          WBQGSX
     I              HOQHSX                          WBQHSX
     I              HOQISX                          WBQISX
     I              HOQJSX                          WBQJSX
     I              HOUVST                          WBUVST
     I              HOUWST                          WBUWST
     I              HOUXST                          WBUXST
     I              HOAATM                          WBAATM
     I              HOAYNA                          WBAYNA
     I              HOA0NA                          WBA0NA
     I              HOAXDT                          WBAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
     IYD01        DS
     I                                        1   1 YI0101
     I                                        2   4 YI0102
     I                                        5   90YI01
      *
     IYM01        DS                        100
     I                                        1   1 WAQFSX
     I                                        2   4 WAOJCD
      *
     IYW01        DS
     I                                        1   1 XAQFSX
     I                                        2   4 XAOJCD
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Broker
      * I :  Broker Code
     I                                        1   6 P1HHAA
      * I :  Payee Type
     I                                        7   8 P1PYSX
      * I :  Salesperson Code
     I                                        9  11 P1BCCD
      * I :  Record Status
     I                                       12  12 P1VSST
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Warehouse Code
     I                                        1   3 P2AJCD
      * N :  Company Number
     I                                    P   4   50P2AIC3
      * N :  Application Code
     I                                        6  11 P2DNCD
     IP3PARM      DS
      * FLD: Accrual Program
      * I :  Accrual Code
     I                                        1   3 P3OJCD
      * N :  All Products (Y/N)
     I                                        4   4 P3TTST
      * N :  Accrual Rate Type
     I                                        5   6 P3SHSX
      * N :  Accrual Detail Search
     I                                        7   7 P3QFSX
      * N :  Standard Schedule (Y/N)
     I                                        8   8 P3FDTX
     IP4PARM      DS
      * I :  Detail/Summary Report Usr
     I                                        1   1 P4ZTSX
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0001
      * Application Code
     I                                       11  16 ZA0002
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0003
      * Application Code
     I                                       11  16 ZA0004
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1HHAA    PARM           WP0001  6        Broker Code
     C           P1PYSX    PARM           WP0002  2        Payee Type
     C           P1BCCD    PARM           WP0003  3        Salesperson Cod
     C           P1VSST    PARM           WP0004  1        Record Status
     C           P3OJCD    PARM           WP0005  3        Accrual Code
     C           P4ZTSX    PARM           WP0006  1        Detail/Summary
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * PRT Broker Exhibits    PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$OENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * PRT Broker Exhibits    PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@C5RESJ                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
      * USER: Null report processing
      * CLC Set for Null Rpt   US - /UT User Source  * 
     C                     MOVEL'Y'       W0AP1P
     C                     MOVEL'Y'       W0NEWP
     C                     MOVEL'Y'       WUGGST           USR Display fie
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     MOVEL*BLANK    $CHHAA           Broker Code
     C                     MOVEL*BLANK    $CDET1           Broker Name DRV
     C                     MOVEL*BLANK    $CPYSX           Payee Type
     C                     MOVEL*BLANK    $CHLTX           Condition Desc.
     C                     MOVEL*BLANK    $CBCCD           Salesperson Cod
     C                     MOVEL*BLANK    $CKPT1           Salesperson Nam
     C                     MOVEL*BLANK    $COJCD           Accrual Code
     C                     MOVEL*BLANK    $CQZNA           Accrual Descrip
     C                     MOVEL*BLANK    $CVSST           Record Status
     C                     MOVEL*BLANK    $CAUNA           Description
     C                     MOVEL*BLANK    $CZTSX           Detail/Summary
     C                     MOVEL*BLANK    $CHQTX           Condition Desc.
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELC5HHAA    $DHHAA           Broker Code
     C                     MOVELC5C4T1    $DC4T1           Broker Name
     C                     MOVELC5QMNA    $DQMNA           Broker Address
     C                     MOVELC5C6T1    $DC6T1           Broker Office M
     C                     MOVELC5C7T1    $DC7T1           Broker Telephon
     C                     MOVELC5QNNA    $DQNNA           Broker Address
     C                     Z-ADDC5DAT1    $DDAT1           Broker G/L Vend
     C                     MOVEL*BLANK    $DF8U1           Text 10 Heading
     C                     Z-ADD*ZERO     $DH6NB           M3 or G/L Vendo
     C                     MOVELC5BCCD    $DBCCD           Salesperson Cod
     C                     MOVEL*BLANK    $DKPT1           Salesperson Nam
     C                     MOVELC5C8T1    $DC8T1           Broker Fax Numb
     C                     MOVELC5QONA    $DQONA           Broker City
     C                     MOVELC5QPNA    $DQPNA           Broker State
     C                     MOVELC5C5T1    $DC5T1           Broker Zip
     C                     MOVELC5PYSX    $DPYSX           Payee Type
     C                     MOVEL*BLANK    $DHLTX           Condition Desc.
     C                     MOVELC5PWSX    $DPWSX           Broker Fax/Emai
     C                     MOVELC5C9T1    $DC9T1           Broker Email Ad
     C                     MOVELC5VSST    $DVSST           Record Status
     C                     MOVELC5DBT1    $DDBT1           Broker unused t
     C                     MOVELC5DCT1    $DDCT1           Broker M3 Suppl
     C                     MOVELC5DDT1    $DDDT1           Broker EDI Trad
     C                     MOVELC5PXSX    $DPXSX           Broker Fax/Emai
     C                     MOVELC5PZSX    $DPZSX           Broker unused s
     C                     MOVELC5UVST    $DUVST           EDI Status 1
     C                     MOVELC5UWST    $DUWST           EDI Status 2
     C                     MOVELC5UXST    $DUXST           EDI Status 3
     C                     Z-ADDC5AATM    $DAATM           Job Time
     C                     MOVELC5AYNA    $DAYNA           User Id
     C                     MOVELC5A0NA    $DA0NA           Job Name
     C                     Z-ADDC5AXDT    $DAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * PRTOBJ calls after print of detail format
      * Embedded PRTOBJ : Prt Broker Custs      POx
     C                     EXSR UASUBR                     Embedded PRTOBJ
      * Embedded PRTOBJ : PRT ACDtl-BrkrExhbts   PO
     C                     EXSR UESUBR                     Embedded PRTOBJ
      * Embedded PRTOBJ : PRT ACD Str-BrkrExhbts PO
     C                     EXSR UFSUBR                     Embedded PRTOBJ
      * USER: Process after print of detail format
      * DLT Acr Stand Schd ExcpDL - *Arrays  * 
     C                     EXSR SRDLRC
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @C5RESJ                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * ** Select Broker Code if entered
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Broker Code NE DB1.Broker Code
      *   |- c2    : PAR.Broker Code is Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1HHAA    IFNE C5HHAA                     *IF
     C           P1HHAA    IFNE *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * ** Select Broker Type if entered
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * ** Select Broker Type if entered
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Payee Type NE DB1.Payee Type
      *   |- c2    : PAR.Payee Type is *ALL values
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1PYSX    IFNE C5PYSX                     *IF
     C           P1PYSX    IFEQ 'BG'                       *IF
     C           P1PYSX    OREQ 'BR'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * ** Select Salesperson Code if entered
      * CASE:
      *  - c2 AND c1
      *   |- c2    : PAR.Salesperson Code is entered
      *   |- c1    : PAR.Salesperson Code NE DB1.Salesperson Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BCCD    IFNE *BLANK                     *IF
     C           P1BCCD    IFNE C5BCCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * ** Select Accrual code if entered
      * CASE: PAR.Accrual Code is Entered
     C           P3OJCD    IFNE *BLANK                     *IF
      * Does Broker have an accrual with this code?
      * Val Accrual for brokr RT - Customer Accrual  * 
     C                     EXSR SSRVGN
      * CASE: WRK.Record Found USR is Record Found
     C           WUWXST    IFEQ 'Y'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * ** Select Record Status if entered
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * ** Select Record Status if entered
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Record Status NE DB1.Record Status
      *   |- c2    : PAR.Record Status is Valid Entries
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1VSST    IFNE C5VSST                     *IF
     C           P1VSST    IFEQ 'A'                        *IF
     C           P1VSST    OREQ 'D'
     C           P1VSST    OREQ 'I'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     ELSE
      * Next record - Detect level breaks
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         B0MAIN    BEGSR
      *================================================================
      * Prt Broker Custs      PO: Mainline
      *================================================================
      * Prt Broker Custs      PO: Initialise
     C                     EXSR ZBINIT
      * Declare restrictor key work fields
     C           *LIKE     DEFN HOHHAA    WQKB01           Broker Code
      * Define keylist
     C           KRSB      KLIST
     C                     KFLD           WQKB01           Broker Code
      * Setup key
     C                     MOVEL$DHHAA    WQKB01           Broker Code
      * Establish starting position
     C           KRSB      SETLL@HOREKB                    *
      * Read first record with user selection
     C                     EXSR B3READ
     C           W0EOFB    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0BL1P  1        First page
     C                     MOVEL'Y'       W0BL00  1        Broker Code
     C                     MOVEL'Y'       W0BL01  1        Ship To Custome
     C                     MOVEL'Y'       W0BL02  1        Accrual Code
     C                     MOVEL'Y'       W0BL03  1        CAH Sequence No
      * Set column headings flag
     C                     MOVE 'Y'       W0BCDT
      * Print report body
     C           W0EOFB    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR B1PHDR
      * Print report detail line
     C                     EXSR B2PDTL
      * Read next record with user selection
     C                     EXSR B3READ
      * Print totals
     C                     EXSR B4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         B0EXIT    ENDSR
      /EJECT
     CSR         B1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0BL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP1P  1
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Load key header format
     C                     MOVELHOHHAA    $EHHAA           Broker Code
     C                     MOVEL*BLANK    $EOTTX           Blank for 4
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP00  1
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Load related totals format
     C                     MOVEL*BLANK    $JOTTX           Blank for 4
     C                     Z-ADDHOBKC7    $JBKC7           Ship To Custome
     C                     MOVELHOHHAA    $JHHAA           Broker Code
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP01  1
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP02  1
     C                     END
      *
     C           W0BL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP03  1
     C                     END
      *
      *================================================================
     CSR         B1EXIT    ENDSR
      /EJECT
     CSR         B2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDHOBKC7    $FBKC7           Ship To Custome
     C                     MOVEL*BLANK    $FUWTX           Ship To Name
     C                     MOVELHOOJCD    $FOJCD           Accrual Code
     C                     MOVEL*BLANK    $FPFTX           Text 1 Length U
     C                     Z-ADDHOBFDT    $FBFDT           Period Beginnin
     C                     Z-ADDHOA2DT    $FA2DT           Period Ending D
     C                     MOVEL*BLANK    $FFDTX           Standard Schedu
     C                     MOVEL*BLANK    $FMLT1           Text 3 Length U
     C                     MOVELHOTTST    $FTTST           All Products (Y
     C                     MOVEL*BLANK    $FHNTX           Condition Desc.
     C                     MOVELHOQFSX    $FQFSX           Accrual Detail
     C                     MOVEL*BLANK    $FHOTX           Condition Desc.
     C                     Z-ADDHOBKPR    $FBKPR           Accrual Rate
     C                     MOVELHOSHSX    $FSHSX           Accrual Rate Ty
     C                     MOVEL*BLANK    $FHMTX           Condition Desc.
     C                     MOVEL*BLANK    $FHNNA           Ship To City
     C                     MOVEL*BLANK    $FDBCD           Ship To State C
     C                     Z-ADDHOGUNY    $FGUNY           CAH Sequence No
     C                     MOVELHOQDSX    $FQDSX           Comm Threshold
     C                     Z-ADDHOPJDT    $FPJDT           CAH Unused Date
     C                     Z-ADDHOPKDT    $FPKDT           CAH Unused Date
     C                     Z-ADDHOECVL    $FECVL           Comm Min Amt /P
     C                     MOVELHOQESX    $FQESX           Comm Retroactiv
     C                     MOVELHOHHAA    $FHHAA           Broker Code
     C                     Z-ADDHOHQVL    $FHQVL           Max Accrual Amo
     C                     MOVELHOQGSX    $FQGSX           Commission/Not
     C                     MOVELHOQHSX    $FQHSX           CAH Unused Sts
     C                     MOVELHOQISX    $FQISX           CAH Unused Sts
     C                     MOVELHOQJSX    $FQJSX           CAH Unused Sts
     C                     MOVELHOUVST    $FUVST           EDI Status 1
     C                     MOVELHOUWST    $FUWST           EDI Status 2
     C                     MOVELHOUXST    $FUXST           EDI Status 3
     C                     Z-ADDHOAATM    $FAATM           Job Time
     C                     MOVELHOAYNA    $FAYNA           User Id
     C                     MOVELHOA0NA    $FA0NA           Job Name
     C                     Z-ADDHOAXDT    $FAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * PRTOBJ calls after print of detail format
      * Embedded PRTOBJ : PRT CstAcrItm BrExhbts PO
     C                     EXSR UBSUBR                     Embedded PRTOBJ
      * Embedded PRTOBJ : PRT CstAcrStr BrkrExbt PO
     C                     EXSR UCSUBR                     Embedded PRTOBJ
      * Embedded PRTOBJ : Prt Rnge-BrkrExhibits  PO
     C                     EXSR UDSUBR                     Embedded PRTOBJ
      * USER: Process after print of detail format
     C                     MOVEL'N'       WUTAST           First Time Flag
      *
      *================================================================
     CSR         B2EXIT    ENDSR
      /EJECT
     CSR         B3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN HOHHAA    WZB001           Broker Code
     C                     MOVELHOHHAA    WZB001
     C           *LIKE     DEFN HOBKC7    WZB002           Ship To Custome
     C                     Z-ADDHOBKC7    WZB002
     C           *LIKE     DEFN HOOJCD    WZB003           Accrual Code
     C                     MOVELHOOJCD    WZB003
     C           *LIKE     DEFN HOGUNY    WZB004           CAH Sequence No
     C                     Z-ADDHOGUNY    WZB004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFB    OREQ '1'
     C           KRSB      READE@HOREKB                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFB  1
      * Quit if no record read
     C           W0EOFB    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.Accrual Code EQ PAR.accrual code usr
      *   |- c2    : PAR.accrual code usr is Not Entered
      *   '-
     C           HOOJCD    IFEQ P3OJCD                     *IF
     C           P3OJCD    OREQ *BLANK                     *OR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0BL00  1        Broker Code
     C                     MOVEL*BLANK    W0BL01  1        Ship To Custome
     C                     MOVEL*BLANK    W0BL02  1        Accrual Code
     C                     MOVEL*BLANK    W0BL03  1        CAH Sequence No
     C           W0EOFB    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0BL00  1        Broker Code
     C                     MOVEL'Y'       W0BL01  1        Ship To Custome
     C                     MOVEL'Y'       W0BL02  1        Accrual Code
     C                     MOVEL'Y'       W0BL03  1        CAH Sequence No
     C                     ELSE
      * Next record - Detect level breaks
     C           HOHHAA    IFNE WZB001                     Broker Code
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL00
     C                     END
     C           HOBKC7    IFNE WZB002                     Ship To Custome
     C           W0BL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL01
     C                     END
     C           HOOJCD    IFNE WZB003                     Accrual Code
     C           W0BL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL02
     C                     END
     C           HOGUNY    IFNE WZB004                     CAH Sequence No
     C           W0BL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL03
     C                     END
     C                     END
      *================================================================
     CSR         B3EXIT    ENDSR
      /EJECT
     CSR         B4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0BL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP03
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP02
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$JKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP01
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP00
     C                     END
      *
     C           W0EOFB    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         B4EXIT    ENDSR
      /EJECT
     CSR         C0MAIN    BEGSR
      *================================================================
      * PRT CstAcrItm BrExhbts PO: Mainline
      *================================================================
      * PRT CstAcrItm BrExhbts PO: Initialise
     C                     EXSR ZCINIT
      * Declare restrictor key work fields
     C           *LIKE     DEFN HPBKC7    WQKC01           Ship To Custome
     C           *LIKE     DEFN HPOJCD    WQKC02           Accrual Code
      * Define keylist
     C           KRSC      KLIST
     C                     KFLD           WQKC01           Ship To Custome
     C                     KFLD           WQKC02           Accrual Code
      * Setup key
     C                     Z-ADD$FBKC7    WQKC01           Ship To Custome
     C                     MOVEL$FOJCD    WQKC02           Accrual Code
      * Establish starting position
     C           KRSC      SETLL@HPRELD                    *
      * Read first record with user selection
     C                     EXSR C3READ
     C           W0EOFC    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0CL1P  1        First page
     C                     MOVEL'Y'       W0CL00  1        Ship To Custome
     C                     MOVEL'Y'       W0CL01  1        Accrual Code
     C                     MOVEL'Y'       W0CL02  1        CAH Sequence No
      * Set column headings flag
     C                     MOVE 'Y'       W0CCDT
      * Print report body
     C           W0EOFC    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR C1PHDR
      * Print report detail line
     C                     EXSR C2PDTL
      * Read next record with user selection
     C                     EXSR C3READ
      * Print totals
     C                     EXSR C4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         C0EXIT    ENDSR
      /EJECT
     CSR         C1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0CL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP1P  1
     C                     END
      *
     C           W0CL00    IFEQ 'Y'
      * USER: Process before print of Ship To Customer format
     C                     MOVEL'Y'       WUTIST           USR Display 1
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP00  1
     C                     END
      *
     C           W0CL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP01  1
     C                     END
      *
     C           W0CL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP02  1
     C                     END
      *
      *================================================================
     CSR         C1EXIT    ENDSR
      /EJECT
     CSR         C2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELHPOJCD    $GOJCD           Accrual Code
     C                     Z-ADDHPGUNY    $GGUNY           CAH Sequence No
     C                     MOVEL*BLANK    $GC4T1           Broker Name
     C                     MOVEL*BLANK    $GBRTX           Ship To Name
     C                     MOVEL*BLANK    $GI6TX           Description 14A
     C                     Z-ADDHPHGCD    $GHGCD           Item Code
     C                     MOVEL*BLANK    $GPVNA           Item Descriptio
     C                     Z-ADDHPBKC7    $GBKC7           Ship To Custome
     C                     Z-ADDHPBKPR    $GBKPR           Accrual Rate
     C                     MOVELHPSHSX    $GSHSX           Accrual Rate Ty
     C                     MOVEL*BLANK    $GHLTX           Condition Desc.
     C                     MOVELHPUVST    $GUVST           EDI Status 1
     C                     MOVELHPUWST    $GUWST           EDI Status 2
     C                     MOVELHPUXST    $GUXST           EDI Status 3
     C                     Z-ADDHPAATM    $GAATM           Job Time
     C                     MOVELHPAYNA    $GAYNA           User Id
     C                     MOVELHPA0NA    $GA0NA           Job Name
     C                     Z-ADDHPAXDT    $GAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         C2EXIT    ENDSR
      /EJECT
     CSR         C3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN HPBKC7    WZC001           Ship To Custome
     C                     Z-ADDHPBKC7    WZC001
     C           *LIKE     DEFN HPOJCD    WZC002           Accrual Code
     C                     MOVELHPOJCD    WZC002
     C           *LIKE     DEFN HPGUNY    WZC003           CAH Sequence No
     C                     Z-ADDHPGUNY    WZC003
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFC    OREQ '1'
     C           KRSC      READE@HPRELD                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFC  1
      * Quit if no record read
     C           W0EOFC    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0CL00  1        Ship To Custome
     C                     MOVEL*BLANK    W0CL01  1        Accrual Code
     C                     MOVEL*BLANK    W0CL02  1        CAH Sequence No
     C           W0EOFC    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0CL00  1        Ship To Custome
     C                     MOVEL'Y'       W0CL01  1        Accrual Code
     C                     MOVEL'Y'       W0CL02  1        CAH Sequence No
     C                     ELSE
      * Next record - Detect level breaks
     C           HPBKC7    IFNE WZC001                     Ship To Custome
      * Set on level break indicator
     C                     MOVEL'Y'       W0CL00
     C                     END
     C           HPOJCD    IFNE WZC002                     Accrual Code
     C           W0CL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0CL01
     C                     END
     C           HPGUNY    IFNE WZC003                     CAH Sequence No
     C           W0CL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0CL02
     C                     END
     C                     END
      *================================================================
     CSR         C3EXIT    ENDSR
      /EJECT
     CSR         C4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0CL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0CP02
     C                     END
      *
     C           W0CL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0CP01
     C                     END
      *
     C           W0CL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0CP00
     C                     END
      *
     C           W0EOFC    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         C4EXIT    ENDSR
      /EJECT
     CSR         D0MAIN    BEGSR
      *================================================================
      * PRT CstAcrStr BrkrExbt PO: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN C8BKC7    WQKD01           Ship To Custome
     C           *LIKE     DEFN C8OJCD    WQKD02           Accrual Code
      * Define keylist
     C           KRSD      KLIST
     C                     KFLD           WQKD01           Ship To Custome
     C                     KFLD           WQKD02           Accrual Code
      * Setup key
     C                     Z-ADD$FBKC7    WQKD01           Ship To Custome
     C                     MOVEL$FOJCD    WQKD02           Accrual Code
      * Establish starting position
     C           KRSD      SETLL@C8RES1                    *
      * Read first record with user selection
     C                     EXSR D3READ
     C           W0EOFD    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0DL1P  1        First page
     C                     MOVEL'Y'       W0DL00  1        Ship To Custome
     C                     MOVEL'Y'       W0DL01  1        Accrual Code
     C                     MOVEL'Y'       W0DL02  1        CAH Sequence No
     C                     MOVEL'Y'       W0DL03  1        Item Structure
     C                     MOVEL'Y'       W0DL04  1        Item Structure
      * Set column headings flag
     C                     MOVE 'Y'       W0DCDT
      * Print report body
     C           W0EOFD    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR D1PHDR
      * Print report detail line
     C                     EXSR D2PDTL
      * Read next record with user selection
     C                     EXSR D3READ
      * Print totals
     C                     EXSR D4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         D0EXIT    ENDSR
      /EJECT
     CSR         D1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0DL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP1P  1
     C                     END
      *
     C           W0DL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP00  1
     C                     END
      *
     C           W0DL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP01  1
     C                     END
      *
     C           W0DL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP02  1
     C                     END
      *
     C           W0DL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP03  1
     C                     END
      *
     C           W0DL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP04  1
     C                     END
      *
      *================================================================
     CSR         D1EXIT    ENDSR
      /EJECT
     CSR         D2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDC8BKC7    $HBKC7           Ship To Custome
     C                     MOVELC8OJCD    $HOJCD           Accrual Code
     C                     Z-ADDC8GUNY    $HGUNY           CAH Sequence No
     C                     Z-ADDC8RGNB    $HRGNB           Item Structure
     C                     MOVEL*BLANK    $HHLTX           Condition Desc.
     C                     Z-ADDC8RHNB    $HRHNB           Item Structure
     C                     MOVEL*BLANK    $HHMTX           Condition Desc.
     C                     Z-ADDC8RINB    $HRINB           Item Structure
     C                     MOVEL*BLANK    $HHNTX           Condition Desc.
     C                     Z-ADDC8BKPR    $HBKPR           Accrual Rate
     C                     MOVELC8SHSX    $HSHSX           Accrual Rate Ty
     C                     MOVEL*BLANK    $HHOTX           Condition Desc.
     C                     MOVELC8QTSX    $HQTSX           CAS Unused Sts
     C                     MOVELC8QUSX    $HQUSX           CAS Unused Sts
     C                     Z-ADDC8FKPR    $HFKPR           CAS Rate Unused
     C                     Z-ADDC8FLPR    $HFLPR           CAS Rate Unused
     C                     MOVELC8UVST    $HUVST           EDI Status 1
     C                     MOVELC8UWST    $HUWST           EDI Status 2
     C                     MOVELC8UXST    $HUXST           EDI Status 3
     C                     MOVELC8VSST    $HVSST           Record Status
     C                     Z-ADDC8AATM    $HAATM           Job Time
     C                     MOVELC8AYNA    $HAYNA           User Id
     C                     MOVELC8A0NA    $HA0NA           Job Name
     C                     Z-ADDC8AXDT    $HAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         D2EXIT    ENDSR
      /EJECT
     CSR         D3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN C8BKC7    WZD001           Ship To Custome
     C                     Z-ADDC8BKC7    WZD001
     C           *LIKE     DEFN C8OJCD    WZD002           Accrual Code
     C                     MOVELC8OJCD    WZD002
     C           *LIKE     DEFN C8GUNY    WZD003           CAH Sequence No
     C                     Z-ADDC8GUNY    WZD003
     C           *LIKE     DEFN C8RGNB    WZD004           Item Structure
     C                     Z-ADDC8RGNB    WZD004
     C           *LIKE     DEFN C8RHNB    WZD005           Item Structure
     C                     Z-ADDC8RHNB    WZD005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFD    OREQ '1'
     C           KRSD      READE@C8RES1                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFD  1
      * Quit if no record read
     C           W0EOFD    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0DL00  1        Ship To Custome
     C                     MOVEL*BLANK    W0DL01  1        Accrual Code
     C                     MOVEL*BLANK    W0DL02  1        CAH Sequence No
     C                     MOVEL*BLANK    W0DL03  1        Item Structure
     C                     MOVEL*BLANK    W0DL04  1        Item Structure
     C           W0EOFD    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0DL00  1        Ship To Custome
     C                     MOVEL'Y'       W0DL01  1        Accrual Code
     C                     MOVEL'Y'       W0DL02  1        CAH Sequence No
     C                     MOVEL'Y'       W0DL03  1        Item Structure
     C                     MOVEL'Y'       W0DL04  1        Item Structure
     C                     ELSE
      * Next record - Detect level breaks
     C           C8BKC7    IFNE WZD001                     Ship To Custome
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL00
     C                     END
     C           C8OJCD    IFNE WZD002                     Accrual Code
     C           W0DL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL01
     C                     END
     C           C8GUNY    IFNE WZD003                     CAH Sequence No
     C           W0DL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL02
     C                     END
     C           C8RGNB    IFNE WZD004                     Item Structure
     C           W0DL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL03
     C                     END
     C           C8RHNB    IFNE WZD005                     Item Structure
     C           W0DL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL04
     C                     END
     C                     END
      *================================================================
     CSR         D3EXIT    ENDSR
      /EJECT
     CSR         D4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0DL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP04
     C                     END
      *
     C           W0DL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP03
     C                     END
      *
     C           W0DL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP02
     C                     END
      *
     C           W0DL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP01
     C                     END
      *
     C           W0DL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP00
     C                     END
      *
     C           W0EOFD    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         D4EXIT    ENDSR
      /EJECT
     CSR         E0MAIN    BEGSR
      *================================================================
      * Prt Rnge-BrkrExhibits  PO: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN AJBKC7    WQKE01           Ship To Custome
     C           *LIKE     DEFN AJOJCD    WQKE02           Accrual Code
      * Define keylist
     C           KRSE      KLIST
     C                     KFLD           WQKE01           Ship To Custome
     C                     KFLD           WQKE02           Accrual Code
      * Setup key
     C                     Z-ADD$FBKC7    WQKE01           Ship To Custome
     C                     MOVEL$FOJCD    WQKE02           Accrual Code
      * Establish starting position
     C           KRSE      SETLL@AJREVL                    *
      * Read first record with user selection
     C                     EXSR E3READ
     C           W0EOFE    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0EL1P  1        First page
     C                     MOVEL'Y'       W0EL00  1        Ship To Custome
     C                     MOVEL'Y'       W0EL01  1        Accrual Code
     C                     MOVEL'Y'       W0EL02  1        CAH Sequence No
     C                     MOVEL'Y'       W0EL03  1        Minimum Number
      * Set column headings flag
     C                     MOVE 'Y'       W0ECDT
      * Print report body
     C           W0EOFE    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR E1PHDR
      * Print report detail line
     C                     EXSR E2PDTL
      * Read next record with user selection
     C                     EXSR E3READ
      * Print totals
     C                     EXSR E4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         E0EXIT    ENDSR
      /EJECT
     CSR         E1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0EL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0EP1P  1
     C                     END
      *
     C           W0EL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0EP00  1
     C                     END
      *
     C           W0EL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0EP01  1
     C                     END
      *
     C           W0EL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0EP02  1
     C                     END
      *
     C           W0EL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0EP03  1
     C                     END
      *
      *================================================================
     CSR         E1EXIT    ENDSR
      /EJECT
     CSR         E2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDAJBKC7    $IBKC7           Ship To Custome
     C                     MOVELAJOJCD    $IOJCD           Accrual Code
     C                     Z-ADDAJGUNY    $IGUNY           CAH Sequence No
     C                     Z-ADDAJFPPR    $IFPPR           Minimum Number
     C                     Z-ADDAJFQPR    $IFQPR           Maximum Number
     C                     Z-ADDAJBKPR    $IBKPR           Accrual Rate
     C                     MOVELAJUVST    $IUVST           EDI Status 1
     C                     MOVELAJUWST    $IUWST           EDI Status 2
     C                     MOVELAJUXST    $IUXST           EDI Status 3
     C                     MOVELAJVSST    $IVSST           Record Status
     C                     Z-ADDAJAATM    $IAATM           Job Time
     C                     MOVELAJAYNA    $IAYNA           User Id
     C                     MOVELAJA0NA    $IA0NA           Job Name
     C                     Z-ADDAJAXDT    $IAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0EPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         E2EXIT    ENDSR
      /EJECT
     CSR         E3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN AJBKC7    WZE001           Ship To Custome
     C                     Z-ADDAJBKC7    WZE001
     C           *LIKE     DEFN AJOJCD    WZE002           Accrual Code
     C                     MOVELAJOJCD    WZE002
     C           *LIKE     DEFN AJGUNY    WZE003           CAH Sequence No
     C                     Z-ADDAJGUNY    WZE003
     C           *LIKE     DEFN AJFPPR    WZE004           Minimum Number
     C                     Z-ADDAJFPPR    WZE004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFE    OREQ '1'
     C           KRSE      READE@AJREVL                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFE  1
      * Quit if no record read
     C           W0EOFE    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0EL00  1        Ship To Custome
     C                     MOVEL*BLANK    W0EL01  1        Accrual Code
     C                     MOVEL*BLANK    W0EL02  1        CAH Sequence No
     C                     MOVEL*BLANK    W0EL03  1        Minimum Number
     C           W0EOFE    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0EL00  1        Ship To Custome
     C                     MOVEL'Y'       W0EL01  1        Accrual Code
     C                     MOVEL'Y'       W0EL02  1        CAH Sequence No
     C                     MOVEL'Y'       W0EL03  1        Minimum Number
     C                     ELSE
      * Next record - Detect level breaks
     C           AJBKC7    IFNE WZE001                     Ship To Custome
      * Set on level break indicator
     C                     MOVEL'Y'       W0EL00
     C                     END
     C           AJOJCD    IFNE WZE002                     Accrual Code
     C           W0EL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0EL01
     C                     END
     C           AJGUNY    IFNE WZE003                     CAH Sequence No
     C           W0EL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0EL02
     C                     END
     C           AJFPPR    IFNE WZE004                     Minimum Number
     C           W0EL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0EL03
     C                     END
     C                     END
      *================================================================
     CSR         E3EXIT    ENDSR
      /EJECT
     CSR         E4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0EL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0EP03
     C                     END
      *
     C           W0EL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0EP02
     C                     END
      *
     C           W0EL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0EP01
     C                     END
      *
     C           W0EL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0EP00
     C                     END
      *
     C           W0EOFE    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         E4EXIT    ENDSR
      /EJECT
     CSR         F0MAIN    BEGSR
      *================================================================
      * PRT ACDtl-BrkrExhbts   PO: Mainline
      *================================================================
      * PRT ACDtl-BrkrExhbts   PO: Initialise
     C                     EXSR ZFINIT
      * Define keylist
     C           KPSF      KLIST
     C                     KFLD           AHOJCD           Accrual Code
      * Setup key
     C                     MOVEL*BLANK    AHOJCD           Accrual Code
      * Establish starting position
     C           KPSF      SETLL@AHREUR                    *
      * Read first record with user selection
     C                     EXSR F3READ
     C           W0EOFF    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0FL1P  1        First page
     C                     MOVEL'Y'       W0FL00  1        Accrual Code
      * Set column headings flag
     C                     MOVE 'Y'       W0FCDT
      * Print report body
     C           W0EOFF    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR F1PHDR
      * Print report detail line
     C                     EXSR F2PDTL
      * Read next record with user selection
     C                     EXSR F3READ
      * Print totals
     C                     EXSR F4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         F0EXIT    ENDSR
      /EJECT
     CSR         F1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0FL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0FP1P  1
     C                     END
      *
     C           W0FL00    IFEQ 'Y'
      * Load key header format
     C                     MOVELAHOJCD    $KOJCD           Accrual Code
     C                     MOVEL*BLANK    $KLENA           Accrual Descrip
     C                     MOVELAHSHSX    $KSHSX           Accrual Rate Ty
     C                     Z-ADDAHBKPR    $KBKPR           Accrual Rate
     C                     MOVEL*BLANK    $KIXTX           Condition Name
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0FP00  1
     C                     END
      *
      *================================================================
     CSR         F1EXIT    ENDSR
      /EJECT
     CSR         F2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELAHOJCD    $LOJCD           Accrual Code
     C                     Z-ADDAHHGCD    $LHGCD           Item Code
     C                     MOVEL*BLANK    $LPVNA           Item Descriptio
     C                     Z-ADDAHBKPR    $LBKPR           Accrual Rate
     C                     MOVELAHSHSX    $LSHSX           Accrual Rate Ty
     C                     MOVEL*BLANK    $LHLTX           Condition Desc.
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0FPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         F2EXIT    ENDSR
      /EJECT
     CSR         F3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN AHOJCD    WZF001           Accrual Code
     C                     MOVELAHOJCD    WZF001
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFF    OREQ '1'
     C                     READ @AHREUR                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFF  1
      * Quit if no record read
     C           W0EOFF    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * RTV Acr Stand Schd ExcpRT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0005    WL0046    P      Accrual Detail
     C                     MOVELAHOJCD    WL0047    P      Accrual Code
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0048    WUZZST    P      Record Selected
      * ** Skip if no item in the array matches the search field
      * CASE: WRK.Record Selected       USR is no
     C           WUZZST    IFEQ 'N'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE: DB1.Record Status is Active
     C           AHVSST    IFEQ 'A'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0FL00  1        Accrual Code
     C           W0EOFF    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0FL00  1        Accrual Code
     C                     ELSE
      * Next record - Detect level breaks
     C           AHOJCD    IFNE WZF001                     Accrual Code
      * Set on level break indicator
     C                     MOVEL'Y'       W0FL00
     C                     END
     C                     END
      *================================================================
     CSR         F3EXIT    ENDSR
      /EJECT
     CSR         F4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0FL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0FP00
     C                     END
      *
     C           W0EOFF    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         F4EXIT    ENDSR
      /EJECT
     CSR         G0MAIN    BEGSR
      *================================================================
      * PRT ACD Str-BrkrExhbts PO: Mainline
      *================================================================
      * PRT ACD Str-BrkrExhbts PO: Initialise
     C                     EXSR ZGINIT
      * Define keylist
     C           KPSG      KLIST
     C                     KFLD           A3OJCD           Accrual Code
      * Setup key
     C                     MOVEL*BLANK    A3OJCD           Accrual Code
      * Establish starting position
     C           KPSG      SETLL@A3REKA                    *
      * Read first record with user selection
     C                     EXSR G3READ
     C           W0EOFG    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0GL1P  1        First page
     C                     MOVEL'Y'       W0GL00  1        Accrual Code
     C                     MOVEL'Y'       W0GL01  1        Item Structure
     C                     MOVEL'Y'       W0GL02  1        Item Structure
      * Set column headings flag
     C                     MOVE 'Y'       W0GCDT
      * Print report body
     C           W0EOFG    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR G1PHDR
      * Print report detail line
     C                     EXSR G2PDTL
      * Read next record with user selection
     C                     EXSR G3READ
      * Print totals
     C                     EXSR G4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         G0EXIT    ENDSR
      /EJECT
     CSR         G1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0GL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0GP1P  1
     C                     END
      *
     C           W0GL00    IFEQ 'Y'
      * Load key header format
     C                     MOVELA3OJCD    $MOJCD           Accrual Code
     C                     MOVEL*BLANK    $MLENA           Accrual Descrip
     C                     Z-ADDA3BKPR    $MBKPR           Accrual Rate
     C                     MOVEL*BLANK    $MIXTX           Condition Name
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0GP00  1
     C                     END
      *
     C           W0GL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0GP01  1
     C                     END
      *
     C           W0GL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0GP02  1
     C                     END
      *
      *================================================================
     CSR         G1EXIT    ENDSR
      /EJECT
     CSR         G2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELA3OJCD    $NOJCD           Accrual Code
     C                     Z-ADDA3RGNB    $NRGNB           Item Structure
     C                     MOVEL*BLANK    $NHLTX           Condition Desc.
     C                     Z-ADDA3RHNB    $NRHNB           Item Structure
     C                     MOVEL*BLANK    $NHMTX           Condition Desc.
     C                     Z-ADDA3RINB    $NRINB           Item Structure
     C                     MOVEL*BLANK    $NHNTX           Condition Desc.
     C                     Z-ADDA3BKPR    $NBKPR           Accrual Rate
     C                     MOVELA3SHSX    $NSHSX           Accrual Rate Ty
     C                     MOVEL*BLANK    $NHOTX           Condition Desc.
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0GPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         G2EXIT    ENDSR
      /EJECT
     CSR         G3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN A3OJCD    WZG001           Accrual Code
     C                     MOVELA3OJCD    WZG001
     C           *LIKE     DEFN A3RGNB    WZG002           Item Structure
     C                     Z-ADDA3RGNB    WZG002
     C           *LIKE     DEFN A3RHNB    WZG003           Item Structure
     C                     Z-ADDA3RHNB    WZG003
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFG    OREQ '1'
     C                     READ @A3REKA                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFG  1
      * Quit if no record read
     C           W0EOFG    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * RTV Acr Stand Schd ExcpRT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0006    WL0046    P      Accrual Detail
     C                     MOVELA3OJCD    WL0047    P      Accrual Code
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0048    WUZZST    P      Record Selected
      * CASE: WRK.Record Selected       USR is no
     C           WUZZST    IFEQ 'N'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE: DB1.Record Status is Active
     C           A3VSST    IFEQ 'A'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0GL00  1        Accrual Code
     C                     MOVEL*BLANK    W0GL01  1        Item Structure
     C                     MOVEL*BLANK    W0GL02  1        Item Structure
     C           W0EOFG    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0GL00  1        Accrual Code
     C                     MOVEL'Y'       W0GL01  1        Item Structure
     C                     MOVEL'Y'       W0GL02  1        Item Structure
     C                     ELSE
      * Next record - Detect level breaks
     C           A3OJCD    IFNE WZG001                     Accrual Code
      * Set on level break indicator
     C                     MOVEL'Y'       W0GL00
     C                     END
     C           A3RGNB    IFNE WZG002                     Item Structure
     C           W0GL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0GL01
     C                     END
     C           A3RHNB    IFNE WZG003                     Item Structure
     C           W0GL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0GL02
     C                     END
     C                     END
      *================================================================
     CSR         G3EXIT    ENDSR
      /EJECT
     CSR         G4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0GL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0GP02
     C                     END
      *
     C           W0GL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0GP01
     C                     END
      *
     C           W0GL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0GP00
     C                     END
      *
     C           W0EOFG    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         G4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of PRT Broker Exhibits    PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of PRT Broker Exhibits    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
     C                     MOVELP1PYSX    $CPYSX           Payee Type
     C                     MOVELP3OJCD    $COJCD           Accrual Code
     C                     MOVELP1VSST    $CVSST           Record Status
     C                     MOVELP1HHAA    $CHHAA           Broker Code
     C                     MOVELP1BCCD    $CBCCD           Salesperson Cod
     C                     MOVELP4ZTSX    $CZTSX           Detail/Summary
      * 1PG.Condition Desc. 6  USR = Condition name of 1PG.Detail/Summary
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1456722   Y2LSNO  70       List number
     C                     PARM $CZTSX    W0INVL 25        Detail/Summary
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CHQTX    PARM           W0CNNM 25        Condition Desc.
      *
      * ** Print Broker Code and name on the 1st page
      * CASE: 1PG.Broker Code is Entered
     C           $CHHAA    IFNE *BLANK                     *IF
     C                     MOVEL*BLANK    $CDET1           Broker Name DRV
      * Broker Name DRV
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(PAR) $CHHAA' defaulted for 'Broker Code'.
      * Rtv Broker Info       RT - Broker  * 
     C                     EXSR SFRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CDET1           Broker Name DRV
     C                     MOVEL'All'     $CDET1           Broker Name DRV
     C                     END                             *FI
      * ** Print record status or *All
      * CASE: 1PG.Record Status is Valid Entries
     C           $CVSST    IFEQ 'A'                        *IF
     C           $CVSST    OREQ 'D'
     C           $CVSST    OREQ 'I'
      * 1PG.Description = Condition name of 1PG.Record Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1255478   Y2LSNO  70       List number
     C                     PARM $CVSST    W0INVL 25        Record Status
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CAUNA    PARM           W0CNNM 25        Description
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CAUNA           Description
     C                     MOVEL'All'     $CAUNA           Description
     C                     END                             *FI
      * ** Print Payee Type or *All
      * CASE: 1PG.Payee Type is *ALL values
     C           $CPYSX    IFEQ 'BG'                       *IF
     C           $CPYSX    OREQ 'BR'
      * 1PG.Condition Desc. 1  USR = Condition name of 1PG.Payee Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1823003   Y2LSNO  70       List number
     C                     PARM $CPYSX    W0INVL 25        Payee Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CHLTX           Condition Desc.
     C                     MOVEL'All'     $CHLTX           Condition Desc.
     C                     END                             *FI
      * salesperson name or all
      * CASE: 1PG.Salesperson Code is entered
     C           $CBCCD    IFNE *BLANK                     *IF
     C                     MOVEL*BLANK    $CKPT1           Salesperson Nam
      * Salesperson Name DRV
      * RTV Salesperson NmeOnlyRT - Salesperson  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$CBCCD    WL0010    P      Salesperson Cod
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0011    $CKPT1    P      Salesperson Nam
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CKPT1           Salesperson Nam
     C                     MOVEL'All'     $CKPT1           Salesperson Nam
     C                     END                             *FI
      * Accrual Desc
      * CASE: 1PG.Accrual Code is Entered
     C           $COJCD    IFNE *BLANK                     *IF
     C                     MOVEL*BLANK    $CQZNA           Accrual Descrip
      * Accrual Description DRV
      * RTV Accrual Descript   RT - Accrual Code Master  * 
     C                     EXSR SHRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CQZNA           Accrual Descrip
     C                     MOVEL'All'     $CQZNA           Accrual Descrip
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
     C                     MOVEL'0'       *IN79
     C           WUGGST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WUDLST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      * Print format
     C                     WRITE$C1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Detail line. of PRT Broker Exhibits    PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * CUR.Condition Desc. 1  USR = Condition name of CUR.Payee Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1823003   Y2LSNO  70       List number
     C                     PARM $DPYSX    W0INVL 25        Payee Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $DHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVEL*BLANK    $DKPT1           Salesperson Nam
      * Salesperson Name DRV
      * RTV Salesperson NmeOnlyRT - Salesperson  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$DBCCD    WL0010    P      Salesperson Cod
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0011    $DKPT1    P      Salesperson Nam
      * T8763 01/25/17 DN - Populate M3 or G/L Vendor #.
      * CASE: LCL.M3 GL Invoice PostLiveUSR is yes
     C           YL0003    IFEQ 'Y'                        *IF
     C                     MOVEL@CN,002   $DF8U1           Text 10 Heading
     C                     MOVEL$DDCT1    YL0004           Text 10A USR
     C                     MOVE YL0004    $DH6NB           M3 or G/L Vendo
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL@CN,003   $DF8U1           Text 10 Heading
     C                     Z-ADD$DDAT1    $DH6NB           M3 or G/L Vendo
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Print First Page Format of Prt Broker Custs      PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0BL1P
     C                     END                             FI
      * Print Broker Code of Prt Broker Custs      PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP00    ANDEQ'P'
     C                     MOVEL'0'       *IN79
     C           WUTAST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$EKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0BCDT
      *
      * Reset format print flag
     C                     MOVE 'P'       W0BP00
     C                     END                             FI
      * Print Ship To Customer of Prt Broker Custs      PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP01
     C                     END                             FI
      * Print Accrual Code of Prt Broker Custs      PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP02
     C                     END                             FI
      * Print CAH Sequence No of Prt Broker Custs      PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP03
     C                     END                             FI
      * Print Detail line. of Prt Broker Custs      PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0BCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BPDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * RTV Cust Name/Addr     RT - Customer  * 
     C                     EXSR SIRVGN
      * RTV Accrual Info-All   RT - Accrual Code Master  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$FOJCD    WL0012    P      Accrual Code
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0013    YL0005    P      Accrual Descrip
     C                     MOVELWL0014    YL0006    P      Automatic Accru
     C                     MOVELWL0015    YL0007    P      Print On Invoic
     C                     MOVELWL0016    YL0008    P      Rate Usage
     C                     MOVELWL0017    YL0009    P      Add-on/Allowanc
     C                     MOVELWL0018    YL0010    P      Accrual Type
     C                     MOVELWL0019    YL0011    P      Sub Ledger Code
     C                     MOVELWL0020    YL0012    P      Reverse Accrual
     C                     MOVELWL0021    YL0013    P      U/M - Primary D
     C                     MOVELWL0022    YL0014    P      G/L Code Dr
     C                     MOVELWL0023    YL0015    P      G/L Code Cr
     C                     MOVELWL0024    YL0016    P      G/L Sub Account
     C                     MOVELWL0025    YL0017    P      Sales History E
     C                     MOVELWL0026    YL0018    P      Post to G/L (Y/
     C                     MOVELWL0027    YL0019    P      All Products (Y
     C                     Z-ADDWL0028    YL0020           Accrual Rate
     C                     MOVELWL0029    YL0021    P      Accrual Rate Ty
     C                     MOVELWL0030    WUQFSX    P      Accrual Detail
     C                     MOVELWL0031    $FFDTX    P      Standard Schedu
     C                     MOVELWL0032    YL0022    P      Affect Sales Re
     C                     MOVELWL0033    YL0023    P      Affect Invoice
     C                     MOVELWL0034    YL0024    P      Invoice Print T
     C                     Z-ADDWL0035    YL0025           Max Accrual Amo
     C                     MOVELWL0036    YL0026    P      Max Accrual Amo
     C                     MOVELWL0037    YL0027    P      Record Status
      * CUR.Condition Desc. 2  USR = Condition name of CUR.Accrual Rate T
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1704721   Y2LSNO  70       List number
     C                     PARM $FSHSX    W0INVL 25        Accrual Rate Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $FHMTX    PARM           W0CNNM 25        Condition Desc.
      *
      * CUR.Condition Desc. 3  USR = Condition name of CUR.All Products (
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1222015   Y2LSNO  70       List number
     C                     PARM $FTTST    W0INVL 25        All Products (Y
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $FHNTX    PARM           W0CNNM 25        Condition Desc.
      *
      * CUR.Condition Desc. 4  USR = Condition name of CUR.Accrual Detail
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1675782   Y2LSNO  70       List number
     C                     PARM $FQFSX    W0INVL 25        Accrual Detail
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $FHOTX    PARM           W0CNNM 25        Condition Desc.
      *
      * CUR.Text 3 Length USR = Condition name of CUR.Standard Schedule (
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100273   Y2LSNO  70       List number
     C                     PARM $FFDTX    W0INVL 25        Standard Schedu
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $FMLT1    PARM           W0CNNM 25        Text 3 Length U
      *
      * ** Add Acrl Code to array if Std Sched=Y and All Prod = N or X
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CUR.Standard Schedule (Y/N) is yes
      *   |- c2    : CUR.All Products (Y/N) is Not Yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $FFDTX    IFEQ 'Y'                        *IF
     C           $FTTST    IFEQ 'N'                        *IF
     C           $FTTST    OREQ 'X'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Add Accrual Code to array if Report type is Detail only
      * CASE: PAR.Detail/Summary Report Usr is Detail
     C           P4ZTSX    IFEQ 'D'                        *IF
      * UPD Acr Stand Schd ExcpRT - *Arrays  * 
     C                     EXSR SKRVGN
     C                     END                             *FI
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Ship To Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $FBKC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$FBKC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VFBKC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFBKC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Period Beginning Date to display format
      * Convert date
     C           1000000   ADD  $FBFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VFBFDT
      * Convert Period Ending Date to display format
      * Convert date
     C           1000000   ADD  $FA2DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VFA2DT
      * Print column headings if required
     C           W0BCDT    IFEQ 'Y'
     C                     WRITE$FCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0BCDT
     C                     END                             FI
      * Print format
     C                     WRITE$FDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0BPDT
     C                     END                             FI
      * Print First Page Format of PRT CstAcrItm BrExhbts PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0CL1P
     C                     END                             FI
      * Print Ship To Customer of PRT CstAcrItm BrExhbts PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP00
     C                     END                             FI
      * Print Accrual Code of PRT CstAcrItm BrExhbts PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP01
     C                     END                             FI
      * Print CAH Sequence No of PRT CstAcrItm BrExhbts PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP02
     C                     END                             FI
      * Print Detail line. of PRT CstAcrItm BrExhbts PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0CCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CPDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * CASE: LCL.First time flag 2     USR is Yes
     C           YL0028    IFEQ 'Y'                        *IF
     C                     MOVEL@CN,004   $GI6TX           Description 14A
     C                     MOVEL'N'       YL0028           First time flag
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $GI6TX           Description 14A
     C                     END                             *FI
     C                     MOVEL*BLANK    $GPVNA           Item Descriptio
      * Item Description DRV
      * Rtv Item Description   RT - Company/Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$GHGCD    WL0038           Item Code
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0039    $GPVNA    P      Description Lin
      * CUR.Condition Desc. 1  USR = Condition name of CUR.Accrual Rate T
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1704721   Y2LSNO  70       List number
     C                     PARM $GSHSX    W0INVL 25        Accrual Rate Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $GHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $GHGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$GHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VGHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VGHGCD           CD7 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           W0NEWP    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print column headings if required
     C           W0CCDT    IFEQ 'Y'
     C                     WRITE$GCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0CCDT
     C                     END                             FI
      * Print format
     C                     WRITE$GDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0CPDT
     C                     END                             FI
      * Print First Page Format of PRT CstAcrStr BrkrExbt PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0DL1P
     C                     END                             FI
      * Print Ship To Customer of PRT CstAcrStr BrkrExbt PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP00
     C                     END                             FI
      * Print Accrual Code of PRT CstAcrStr BrkrExbt PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP01
     C                     END                             FI
      * Print CAH Sequence No of PRT CstAcrStr BrkrExbt PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP02
     C                     END                             FI
      * Print Item Structure Type Code of PRT CstAcrStr BrkrExbt PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP03
     C                     END                             FI
      * Print Item Structure Group Code of PRT CstAcrStr BrkrExbt PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP04
     C                     END                             FI
      * Print Detail line. of PRT CstAcrStr BrkrExbt PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0DCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DPDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * ** Retrieve descriptions for Item Structures & Accrual Code
      * Rtv Type Description   RT - Item Structure Type  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$HRGNB    WL0040           Item Structure
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0041    $HHLTX    P      Item Structure
      * Rtv Group Desc - Item Structure Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$HRHNB    WL0042           Item Structure
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0043    $HHMTX    P      Item Structure
      * Rtv Class Desc - Item Structure Class  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$HRINB    WL0044           Item Structure
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0045    $HHNTX    P      Item Structure
      * CUR.Condition Desc. 4  USR = Condition name of CUR.Accrual Rate T
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1704721   Y2LSNO  70       List number
     C                     PARM $HSHSX    W0INVL 25        Accrual Rate Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $HHOTX    PARM           W0CNNM 25        Condition Desc.
      *
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Print column headings if required
     C           W0DCDT    IFEQ 'Y'
     C                     WRITE$HCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0DCDT
     C                     END                             FI
      * Print format
     C                     WRITE$HDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0DPDT
     C                     END                             FI
      * Print First Page Format of Prt Rnge-BrkrExhibits  PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0EP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0EP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0EP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0EL1P
     C                     END                             FI
      * Print Ship To Customer of Prt Rnge-BrkrExhibits  PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0EP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0EP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0EP00
     C                     END                             FI
      * Print Accrual Code of Prt Rnge-BrkrExhibits  PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0EP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0EP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0EP01
     C                     END                             FI
      * Print CAH Sequence No of Prt Rnge-BrkrExhibits  PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0EP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0EP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0EP02
     C                     END                             FI
      * Print Minimum Number of Prt Rnge-BrkrExhibits  PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0EP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0EP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0EP03
     C                     END                             FI
      * Print Detail line. of Prt Rnge-BrkrExhibits  PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ECDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0EPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0EPDT    ANDEQ'P'
      * Print column headings if required
     C           W0ECDT    IFEQ 'Y'
     C                     WRITE$ICOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ECDT
     C                     END                             FI
      * Print format
     C                     WRITE$IDTLRCD
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0EPDT
     C                     END                             FI
      * Print First Page Format of PRT ACDtl-BrkrExhbts   PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0FP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0FP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0FP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0FL1P
     C                     END                             FI
      * Print Accrual Code of PRT ACDtl-BrkrExhbts   PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0FP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0FP00    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Accrual Code format
      * RTV Accrual Info-All   RT - Accrual Program  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$KOJCD    WL0012    P      Accrual Code
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0013    $KLENA    P      Accrual Descrip
     C                     MOVELWL0014    YN0016    P      Automatic Accru
     C                     MOVELWL0015    YN0017    P      Print On Invoic
     C                     MOVELWL0016    YN0018    P      Rate Usage
     C                     MOVELWL0017    YN0019    P      Add-on/Allowanc
     C                     MOVELWL0018    YN0020    P      Accrual Type
     C                     MOVELWL0019    YN0021    P      Sub Ledger Code
     C                     MOVELWL0020    YN0022    P      Reverse Accrual
     C                     MOVELWL0021    YN0023    P      U/M - Primary D
     C                     MOVELWL0022    YN0024    P      G/L Code Dr
     C                     MOVELWL0023    YN0025    P      G/L Code Cr
     C                     MOVELWL0024    YN0026    P      G/L Sub Account
     C                     MOVELWL0025    YN0027    P      Sales History E
     C                     MOVELWL0026    YN0028    P      Post to G/L (Y/
     C                     MOVELWL0027    YN0029    P      All Products (Y
     C                     Z-ADDWL0028    $KBKPR           Accrual Rate
     C                     MOVELWL0029    YL0029    P      Accrual Rate Ty
     C                     MOVELWL0030    WN0005    P      Accrual Detail
     C                     MOVELWL0031    YN0030    P      Standard Schedu
     C                     MOVELWL0032    YN0031    P      Affect Sales Re
     C                     MOVELWL0033    YN0032    P      Affect Invoice
     C                     MOVELWL0034    YN0033    P      Invoice Print T
     C                     Z-ADDWL0035    YN0034           Max Accrual Amo
     C                     MOVELWL0036    YN0035    P      Max Accrual Amo
     C                     MOVELWL0037    YN0036    P      Record Status
      * CUR.Condition Name 10 USR = Condition name of CUR.Accrual Rate Ty
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1704721   Y2LSNO  70       List number
     C                     PARM $KSHSX    W0INVL 25        Accrual Rate Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $KIXTX    PARM           W0CNNM 25        Condition Name
      *
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$KKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0FCDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0FP00
     C                     END                             FI
      * Print Detail line. of PRT ACDtl-BrkrExhbts   PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0FCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0FPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0FPDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
     C                     MOVELAHOJCD    $LOJCD           Accrual Code
     C                     Z-ADDAHHGCD    $LHGCD           Item Code
     C                     MOVEL*BLANK    $LPVNA           Item Descriptio
      * Item Description DRV
      * Rtv Item Description   RT - Company/Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$LHGCD    WL0038           Item Code
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0039    $LPVNA    P      Description Lin
     C                     Z-ADDAHBKPR    $LBKPR           Accrual Rate
     C                     MOVELAHSHSX    $LSHSX           Accrual Rate Ty
      * CUR.Condition Desc. 1  USR = Condition name of CUR.Accrual Rate T
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1704721   Y2LSNO  70       List number
     C                     PARM $LSHSX    W0INVL 25        Accrual Rate Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $LHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $LHGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$LHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VLHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VLHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print column headings if required
     C           W0FCDT    IFEQ 'Y'
     C                     WRITE$LCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0FCDT
     C                     END                             FI
      * Print format
     C                     WRITE$LDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0FPDT
     C                     END                             FI
      * Print First Page Format of PRT ACD Str-BrkrExhbts PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0GP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0GP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0GP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0GL1P
     C                     END                             FI
      * Print Accrual Code of PRT ACD Str-BrkrExhbts PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0GP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0GP00    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Accrual Code format
      * RTV Accrual Info-All   RT - Accrual Program  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$MOJCD    WL0012    P      Accrual Code
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0013    $MLENA    P      Accrual Descrip
     C                     MOVELWL0014    YN0037    P      Automatic Accru
     C                     MOVELWL0015    YN0038    P      Print On Invoic
     C                     MOVELWL0016    YN0039    P      Rate Usage
     C                     MOVELWL0017    YN0040    P      Add-on/Allowanc
     C                     MOVELWL0018    YN0041    P      Accrual Type
     C                     MOVELWL0019    YN0042    P      Sub Ledger Code
     C                     MOVELWL0020    YN0043    P      Reverse Accrual
     C                     MOVELWL0021    YN0044    P      U/M - Primary D
     C                     MOVELWL0022    YN0045    P      G/L Code Dr
     C                     MOVELWL0023    YN0046    P      G/L Code Cr
     C                     MOVELWL0024    YN0047    P      G/L Sub Account
     C                     MOVELWL0025    YN0048    P      Sales History E
     C                     MOVELWL0026    YN0049    P      Post to G/L (Y/
     C                     MOVELWL0027    YN0050    P      All Products (Y
     C                     Z-ADDWL0028    $MBKPR           Accrual Rate
     C                     MOVELWL0029    YL0030    P      Accrual Rate Ty
     C                     MOVELWL0030    YN0051    P      Accrual Detail
     C                     MOVELWL0031    YN0052    P      Standard Schedu
     C                     MOVELWL0032    YN0053    P      Affect Sales Re
     C                     MOVELWL0033    YN0054    P      Affect Invoice
     C                     MOVELWL0034    YN0055    P      Invoice Print T
     C                     Z-ADDWL0035    YN0056           Max Accrual Amo
     C                     MOVELWL0036    YN0057    P      Max Accrual Amo
     C                     MOVELWL0037    YN0058    P      Record Status
      * CUR.Condition Name 10 USR = Condition name of LCL.Accrual Rate Ty
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1704721   Y2LSNO  70       List number
     C                     PARM YL0030    W0INVL 25        Accrual Rate Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $MIXTX    PARM           W0CNNM 25        Condition Name
      *
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$MKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0GCDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0GP00
     C                     END                             FI
      * Print Item Structure Type Code of PRT ACD Str-BrkrExhbts PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0GP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0GP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0GP01
     C                     END                             FI
      * Print Item Structure Group Code of PRT ACD Str-BrkrExhbts PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0GP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0GP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0GP02
     C                     END                             FI
      * Print Detail line. of PRT ACD Str-BrkrExhbts PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0GCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0GPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0GPDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * 01/04/08 SZ commented out the move statements they were not print
      * the data on the report.
      * ** Retrieve the Item Structure & Accrual Code descriptions
      * Rtv Type Description   RT - Item Structure Type  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$NRGNB    WL0040           Item Structure
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0041    $NHLTX    P      Item Structure
      * Rtv Group Desc - Item Structure Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$NRHNB    WL0042           Item Structure
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0043    $NHMTX    P      Item Structure
      * Rtv Class Desc - Item Structure Class  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$NRINB    WL0044           Item Structure
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0045    $NHNTX    P      Item Structure
      * CUR.Condition Desc. 4  USR = Condition name of CUR.Accrual Rate T
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1704721   Y2LSNO  70       List number
     C                     PARM $NSHSX    W0INVL 25        Accrual Rate Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $NHOTX    PARM           W0CNNM 25        Condition Desc.
      *
     C           W0PFM     IFEQ 'Y'
      * Print column headings if required
     C           W0GCDT    IFEQ 'Y'
     C                     WRITE$NCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0GCDT
     C                     END                             FI
      * Print format
     C                     WRITE$NDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0GPDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0FP00    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of PRT Broker Exhibits    PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  10        W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT Broker Exhibits    PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD7         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt Broker Custs      PO
     C           W0BP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Broker Code of Prt Broker Custs      PO
     C           W0BP00    IFEQ 'Y'
     C                     ADD  6         W0FSUM
     C                     END                             FI
      *
      * * Ship To Customer of Prt Broker Custs      PO
     C           W0BP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Accrual Code of Prt Broker Custs      PO
     C           W0BP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * CAH Sequence No of Prt Broker Custs      PO
     C           W0BP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Broker Custs      PO
     C           W0BPDT    IFEQ 'Y'
     C                     Z-ADD3         W0DTLN
     C           W0BCDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of PRT CstAcrItm BrExhbts PO
     C           W0CP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Ship To Customer of PRT CstAcrItm BrExhbts PO
     C           W0CP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Accrual Code of PRT CstAcrItm BrExhbts PO
     C           W0CP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * CAH Sequence No of PRT CstAcrItm BrExhbts PO
     C           W0CP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT CstAcrItm BrExhbts PO
     C           W0CPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0CCDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of PRT CstAcrStr BrkrExbt PO
     C           W0DP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Ship To Customer of PRT CstAcrStr BrkrExbt PO
     C           W0DP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Accrual Code of PRT CstAcrStr BrkrExbt PO
     C           W0DP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * CAH Sequence No of PRT CstAcrStr BrkrExbt PO
     C           W0DP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Type Code of PRT CstAcrStr BrkrExbt PO
     C           W0DP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Group Code of PRT CstAcrStr BrkrExbt PO
     C           W0DP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT CstAcrStr BrkrExbt PO
     C           W0DPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0DCDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt Rnge-BrkrExhibits  PO
     C           W0EP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Ship To Customer of Prt Rnge-BrkrExhibits  PO
     C           W0EP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Accrual Code of Prt Rnge-BrkrExhibits  PO
     C           W0EP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * CAH Sequence No of Prt Rnge-BrkrExhibits  PO
     C           W0EP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Minimum Number of Prt Rnge-BrkrExhibits  PO
     C           W0EP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Rnge-BrkrExhibits  PO
     C           W0EPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ECDT    IFEQ 'Y'
     C                     Z-ADD2         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of PRT ACDtl-BrkrExhbts   PO
     C           W0FP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Accrual Code of PRT ACDtl-BrkrExhbts   PO
     C           W0FP00    IFEQ 'Y'
     C                     ADD  4         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT ACDtl-BrkrExhbts   PO
     C           W0FPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0FCDT    IFEQ 'Y'
     C                     Z-ADD4         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of PRT ACD Str-BrkrExhbts PO
     C           W0GP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Accrual Code of PRT ACD Str-BrkrExhbts PO
     C           W0GP00    IFEQ 'Y'
     C                     ADD  4         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Type Code of PRT ACD Str-BrkrExhbts PO
     C           W0GP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Group Code of PRT ACD Str-BrkrExhbts PO
     C           W0GP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT ACD Str-BrkrExhbts PO
     C           W0GPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0GCDT    IFEQ 'Y'
     C                     Z-ADD3         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVELWL0001    WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WL0002           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WL0002           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0001    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSC     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDRAIC3    YL0001           Company Number
     C                     MOVELDRBUVN    WN0002           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - User Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0003    DTAJVN           User Profile Na
     C                     MOVELWL0004    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSD     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0005           Company Number
     C                     MOVELDTAJCD    WL0006           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Alpha Value        RT - Company Values  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           KMAIC3           Company Number
     C                     KFLD           KMV8CD           Company Value C
      * Setup key
     C                     Z-ADDWL0007    KMAIC3           Company Number
     C                     MOVELWL0008    KMV8CD           Company Value C
      * Establish starting position
     C           KRSSE     CHAIN@KMREHC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2221' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELKMBXTX    WL0009           System Value Al
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Broker Info       RT - Broker  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           C5HHAA           Broker Code
      * Setup key
     C                     MOVEL$CHHAA    C5HHAA           Broker Code
      * Establish starting position
     C           KRSSF     CHAIN@C5RESJ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3288' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $CDET1           Broker Name
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELC5C4T1    $CDET1           Broker Name
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Salesperson NmeOnlyRT - Salesperson  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           APBCCD           Salesperson Cod
      * Setup key
     C                     MOVELWL0010    APBCCD           Salesperson Cod
      * Establish starting position
     C           KRSSG     CHAIN@APREBU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0039' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0011           Salesperson Nam
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAPALTX    WL0011           Salesperson Nam
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Accrual Descript   RT - Accrual Code Master  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           HLOJCD           Accrual Code
      * Setup key
     C                     MOVEL$COJCD    HLOJCD           Accrual Code
      * Establish starting position
     C           KRSSH     CHAIN@HLREK4              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1514' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $CQZNA           Accrual Descrip
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELHLLENA    $CQZNA           Accrual Descrip
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Cust Name/Addr     RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           BBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADD$FBKC7    BBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSI     CHAIN@BBREE9              90    *
      * Data record not found
     C   90                MOVEL'USR0170' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBBAYTX    $FUWTX           Customer Name
     C                     MOVELBBACNA    WUACNA           Address Line 1
     C                     MOVELBBADNA    WUADNA           Address Line 2
     C                     MOVELBBAENA    WUAENA           Address Line 3
     C                     MOVELBBAJNA    $FHNNA           City
     C                     MOVELBBBGCD    $FDBCD           State Code
     C                     MOVELBBBTTX    WUBTTX           Zip/Postal Code
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Accrual Info-All   RT - Accrual Code Master  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           HLOJCD           Accrual Code
      * Setup key
     C                     MOVELWL0012    HLOJCD           Accrual Code
      * Establish starting position
     C           KRSSJ     CHAIN@HLREK4              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1514' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0013           Accrual Descrip
     C                     MOVEL*BLANK    WL0014           Automatic Accru
     C                     MOVEL*BLANK    WL0015           Print On Invoic
     C                     MOVEL*BLANK    WL0016           Rate Usage
     C                     MOVEL*BLANK    WL0017           Add-on/Allowanc
     C                     MOVEL*BLANK    WL0018           Accrual Type
     C                     MOVEL*BLANK    WL0019           Sub Ledger Code
     C                     MOVEL*BLANK    WL0020           Reverse Accrual
     C                     MOVEL*BLANK    WL0021           U/M - Primary D
     C                     MOVEL*BLANK    WL0022           G/L Code Dr
     C                     MOVEL*BLANK    WL0023           G/L Code Cr
     C                     MOVEL*BLANK    WL0024           G/L Sub Account
     C                     MOVEL*BLANK    WL0025           Sales History E
     C                     MOVEL*BLANK    WL0026           Post to G/L (Y/
     C                     MOVEL*BLANK    WL0027           All Products (Y
     C                     Z-ADD*ZERO     WL0028           Accrual Rate
     C                     MOVEL*BLANK    WL0029           Accrual Rate Ty
     C                     MOVEL*BLANK    WL0030           Accrual Detail
     C                     MOVEL*BLANK    WL0031           Standard Schedu
     C                     MOVEL*BLANK    WL0032           Affect Sales Re
     C                     MOVEL*BLANK    WL0033           Affect Invoice
     C                     MOVEL*BLANK    WL0034           Invoice Print T
     C                     Z-ADD*ZERO     WL0035           Max Accrual Amo
     C                     MOVEL*BLANK    WL0036           Max Accrual Amo
     C                     MOVEL*BLANK    WL0037           Record Status
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELHLLENA    WL0013           Accrual Descrip
     C                     MOVELHLTOST    WL0014           Automatic Accru
     C                     MOVELHLTQST    WL0015           Print On Invoic
     C                     MOVELHLTRST    WL0016           Rate Usage
     C                     MOVELHLTSST    WL0017           Add-on/Allowanc
     C                     MOVELHLOKCD    WL0018           Accrual Type
     C                     MOVELHLTYST    WL0019           Sub Ledger Code
     C                     MOVELHLOQCD    WL0020           Reverse Accrual
     C                     MOVELHLHHCD    WL0021           U/M - Primary D
     C                     MOVELHLI2TX    WL0022           G/L Code Dr
     C                     MOVELHLJFTX    WL0023           G/L Code Cr
     C                     MOVELHLI3TX    WL0024           G/L Sub Account
     C                     MOVELHLJGTX    WL0025           Sales History E
     C                     MOVELHLLEDG    WL0026           Post to G/L (Y/
     C                     MOVELHLTTST    WL0027           All Products (Y
     C                     Z-ADDHLBKPR    WL0028           Accrual Rate
     C                     MOVELHLSHSX    WL0029           Accrual Rate Ty
     C                     MOVELHLQFSX    WL0030           Accrual Detail
     C                     MOVELHLFDTX    WL0031           Standard Schedu
     C                     MOVELHLFETX    WL0032           Affect Sales Re
     C                     MOVELHLFFTX    WL0033           Affect Invoice
     C                     MOVELHLFGTX    WL0034           Invoice Print T
     C                     Z-ADDHLHQVL    WL0035           Max Accrual Amo
     C                     MOVELHLFHTX    WL0036           Max Accrual Amo
     C                     MOVELHLVSST    WL0037           Record Status
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * UPD Acr Stand Schd ExcpRT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*LOVAL    YD01
      * Move key fields to ARY Acrl Stand Sched Excp
     C                     MOVELHOQFSX    YI0101           Accrual Detail
     C                     MOVELHOOJCD    YI0102           Accrual Code
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFGT YD01
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE HOQFSX
     C           YI0102    ORNE HOOJCD
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
      * USER: Processing if Data record not found
      * CRT Acr Stand Schd ExcpCR - *Arrays  * 
     C                     EXSR SLCRRC
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C           YI0101    ANDEQHOQFSX
     C           YI0102    ANDEQHOOJCD
      *
     C           YI01      OCUR YM01
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     ADD  1         YR01
     C           YR01      IFLE 100
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C                     ENDIF
     C                     ENDDO
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLCRRC    BEGSR
      *================================================================
      * CRT Acr Stand Schd ExcpCR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL01      IFEQ 100
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C                     MOVEL*BLANK    XAQFSX           Accrual Detail
     C                     MOVEL*BLANK    XAOJCD           Accrual Code
      * Move all fields to ARY Acrl Stand Sched Excp
     C                     MOVELHOQFSX    XAQFSX           Accrual Detail
     C                     MOVELHOOJCD    XAOJCD           Accrual Code
      *
      * Insert after last used element
     C           YL01      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK01,Y    IFNE *HIVAL
      * If so, reuse MODS index
     C                     MOVELYK01,Y    YD01
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI01
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to ARY Acrl Stand Sched Excp
     C                     MOVELXAQFSX    YI0101           Accrual Detail
     C                     MOVELXAOJCD    YI0102           Accrual Code
      *
     C                     MOVELYD01      YK01,Y
     C           YI01      OCUR YM01
      * Update MODS fields
     C                     MOVELXAQFSX    WAQFSX           Accrual Detail
     C                     MOVELXAOJCD    WAOJCD           Accrual Code
      * Only sort if element is out of position
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDGTYD01
     C                     ADD  1         YR01    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK01
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL01
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv Item Description   RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BZHGCD    WQSM01           Item Code
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           WQSM01           Item Code
      * Setup key
     C                     Z-ADDWL0038    WQSM01           Item Code
      * Establish starting position
     C           KRSSM     SETLL@BZRED0                    *
     C           KRSSM     READE@BZRED0                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0039           Description Lin
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WL0039           Description Lin
     C           KRSSM     READE@BZRED0                  90*
     C                     ENDDO
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Type Description   RT - Item Structure Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           E8RGNB           Item Structure
      * Setup key
     C                     Z-ADDWL0040    E8RGNB           Item Structure
      * Establish starting position
     C           KRSSN     CHAIN@E8REBB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1166' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0041           Item Structure
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELE8DCTX    WL0041           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * Rtv Group Desc - Item Structure Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           E9RHNB           Item Structure
      * Setup key
     C                     Z-ADDWL0042    E9RHNB           Item Structure
      * Establish starting position
     C           KRSSO     CHAIN@E9REA8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1168' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0043           Item Structure
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELE9DDTX    WL0043           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Rtv Class Desc - Item Structure Class  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           FARINB           Item Structure
      * Setup key
     C                     Z-ADDWL0044    FARINB           Item Structure
      * Establish starting position
     C           KRSSP     CHAIN@FAREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1170' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0045           Item Structure
     C                     GOTO SPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFADETX    WL0045           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * RTV Acr Stand Schd ExcpRT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*LOVAL    YD01
      * Move key fields to ARY Acrl Stand Sched Excp
     C                     MOVELWL0046    YI0101           Accrual Detail
     C                     MOVELWL0047    YI0102           Accrual Code
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFGT YD01
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0046
     C           YI0102    ORNE WL0047
      *
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       WL0048           Record Selected
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C           YI0101    ANDEQWL0046
     C           YI0102    ANDEQWL0047
      *
      *
     C           YI01      OCUR YM01
      * USER: Process Data record
     C                     MOVEL'Y'       WL0048           Record Selected
     C                     ADD  1         YR01
     C           YR01      IFLE 100
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C                     ENDIF
     C                     ENDDO
     C                     ENDIF
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRDLRC    BEGSR
      *================================================================
      * DLT Acr Stand Schd ExcpDL - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * Val Accrual for brokr RT - Customer Accrual  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'N'       WUWXST           Record Found US
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBOJCD    WQSS02           Accrual Code
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           WQSS02           Accrual Code
      * Setup key
     C                     MOVELP3OJCD    WQSS02           Accrual Code
      * Establish starting position
     C           KRSSS     SETLL@HORELO                    *
     C           KRSSS     READE@HORELO                  90*
      * Data record not found
     C   90                MOVEL'USR1520' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Broker Code EQ PAR.Broker Code
     C           WBHHAA    IFEQ C5HHAA                     *IF
     C                     MOVEL'Y'       WUWXST           Record Found US
     C                     GOTO SSEXIT                     *QUIT
     C                     END                             *FI
     C           KRSSS     READE@HORELO                  90*
     C                     ENDDO
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Broker Custs      POx
      *================================================================
      *
     C                     MOVEL*BLANK    WN0003  1        Accrual Detail
     C                     MOVEL*BLANK    WN0004  3        Accrual Code
      *
      * Prt Broker Custs      PO: Mainline
     C                     EXSR B0MAIN
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : PRT CstAcrItm BrExhbts PO
      *================================================================
      * CASE: CUR.Accrual Detail Search is Item
     C           $FQFSX    IFEQ 'I'                        *IF
      * CASE:
      *  - c1 OR (c2 AND c3) OR c4
      *   |- c1    : CUR.Standard Schedule (Y/N) is yes
      *   |- c2    : CUR.Standard Schedule (Y/N) is no
      *   |- c3    : CUR.All Products (Y/N) is Yes
      *   |- c4    : PAR.Detail/Summary Report Usr is Summary
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $FFDTX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           $FFDTX    IFEQ 'N'                        *IF
     C           $FTTST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           P4ZTSX    IFEQ 'S'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     GOTO UBEXIT                     *QUIT
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     GOTO UBEXIT                     *QUIT
     C                     END                             *FI
      * PRT CstAcrItm BrExhbts PO: Mainline
     C                     EXSR C0MAIN
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : PRT CstAcrStr BrkrExbt PO
      *================================================================
      * CASE: CUR.Accrual Detail Search is Item Structure
     C           $FQFSX    IFEQ 'S'                        *IF
      * CASE:
      *  - c1 OR (c2 AND c3) OR c4
      *   |- c1    : CUR.Standard Schedule (Y/N) is yes
      *   |- c2    : CUR.Standard Schedule (Y/N) is no
      *   |- c3    : CUR.All Products (Y/N) is Yes
      *   |- c4    : PAR.Detail/Summary Report Usr is Summary
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $FFDTX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           $FFDTX    IFEQ 'N'                        *IF
     C           $FTTST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           P4ZTSX    IFEQ 'S'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     GOTO UCEXIT                     *QUIT
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     GOTO UCEXIT                     *QUIT
     C                     END                             *FI
      * PRT CstAcrStr BrkrExbt PO: Mainline
     C                     EXSR D0MAIN
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Rnge-BrkrExhibits  PO
      *================================================================
      * E4057 JJH 05/06/15 - Ranges are no longer required for Accrual
      *   Rate Type.  Therefore, no need to print this Print Object
     C                     GOTO UDEXIT                     *QUIT
      * Prt Rnge-BrkrExhibits  PO: Mainline
     C                     EXSR E0MAIN
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : PRT ACDtl-BrkrExhbts   PO
      *================================================================
      *
     C                     MOVEL*BLANK    WN0005  1        Accrual Detail
      *
      * PRT ACDtl-BrkrExhbts   PO: Mainline
     C                     EXSR F0MAIN
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : PRT ACD Str-BrkrExhbts PO
      *================================================================
      *
     C                     MOVEL*BLANK    WN0006  1        Accrual Detail
      *
      * PRT ACD Str-BrkrExhbts PO: Mainline
     C                     EXSR G0MAIN
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZBINIT    BEGSR
      *================================================================
      * Prt Broker Custs      PO: Initialise
      *================================================================
      * USER: Initialize program
     C                     MOVEL'Y'       WUTAST           First Time Flag
      *================================================================
     CSR         ZBEXIT    ENDSR
      /EJECT
     CSR         ZCINIT    BEGSR
      *================================================================
      * PRT CstAcrItm BrExhbts PO: Initialise
      *================================================================
      * USER: Initialize program
     C                     MOVEL'N'       WUTIST           USR Display 1
     C                     MOVEL'Y'       YL0028           First time flag
      *================================================================
     CSR         ZCEXIT    ENDSR
      /EJECT
     CSR         ZFINIT    BEGSR
      *================================================================
      * PRT ACDtl-BrkrExhbts   PO: Initialise
      *================================================================
      * USER: Initialize program
      * Print active items only
      * ** Set the search parameter to "Item"
     C                     MOVEL'I'       WN0005           Accrual Detail
      *================================================================
     CSR         ZFEXIT    ENDSR
      /EJECT
     CSR         ZGINIT    BEGSR
      *================================================================
      * PRT ACD Str-BrkrExhbts PO: Initialise
      *================================================================
      * USER: Initialize program
      * ** Initialize the search parameter to "Structure"
     C                     MOVEL'S'       WN0006           Accrual Detail
      *================================================================
     CSR         ZGEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2AJCD           Warehouse Code
     C                     Z-ADD*ZERO     P2AIC3           Company Number
     C                     MOVEL*BLANK    P2DNCD           Application Cod
     C                     MOVEL*BLANK    P3TTST           All Products (Y
     C                     MOVEL*BLANK    P3SHSX           Accrual Rate Ty
     C                     MOVEL*BLANK    P3QFSX           Accrual Detail
     C                     MOVEL*BLANK    P3FDTX           Standard Schedu
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field USR Display field
     C                     MOVEL*BLANK    WUGGST  1
      * Define work field USR Overflow
     C                     MOVEL*BLANK    WUDLST  1
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    C5HHAA           Broker Code
      * Define work field First Time Flag
     C                     MOVEL*BLANK    WUTAST  1
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    HOHHAA           Broker Code
     C                     MOVEL*LOVAL    HOBKC7           Ship To Custome
     C                     MOVEL*LOVAL    HOOJCD           Accrual Code
     C                     MOVEL*LOVAL    HOGUNY           CAH Sequence No
      * Define work field Address Line 1
     C                     MOVEL*BLANK    WUACNA 30
      * Define work field Address Line 2
     C                     MOVEL*BLANK    WUADNA 30
      * Define work field Address Line 3
     C                     MOVEL*BLANK    WUAENA 30
      * Define work field Zip/Postal Code
     C                     MOVEL*BLANK    WUBTTX 11
      * Define work field Accrual Detail Search
     C                     MOVEL*BLANK    WUQFSX  1
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01    50
     C                     Z-ADD1         Y       50
     C                     ENDIF
      *
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field USR Display 1
     C                     MOVEL*BLANK    WUTIST  1
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    HPBKC7           Ship To Custome
     C                     MOVEL*LOVAL    HPOJCD           Accrual Code
     C                     MOVEL*LOVAL    HPGUNY           CAH Sequence No
     C                     MOVEL*LOVAL    HPHGCD           Item Code
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    C8BKC7           Ship To Custome
     C                     MOVEL*LOVAL    C8OJCD           Accrual Code
     C                     MOVEL*LOVAL    C8GUNY           CAH Sequence No
     C                     MOVEL*LOVAL    C8RGNB           Item Structure
     C                     MOVEL*LOVAL    C8RHNB           Item Structure
     C                     MOVEL*LOVAL    C8RINB           Item Structure
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    AJBKC7           Ship To Custome
     C                     MOVEL*LOVAL    AJOJCD           Accrual Code
     C                     MOVEL*LOVAL    AJGUNY           CAH Sequence No
     C                     MOVEL*LOVAL    AJFPPR           Minimum Number
     C                     MOVEL*LOVAL    AJFQPR           Maximum Number
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    AHOJCD           Accrual Code
     C                     MOVEL*LOVAL    AHHGCD           Item Code
      * Define work field Record Selected       USR
     C                     MOVEL*BLANK    WUZZST  1
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    A3OJCD           Accrual Code
     C                     MOVEL*LOVAL    A3RGNB           Item Structure
     C                     MOVEL*LOVAL    A3RHNB           Item Structure
     C                     MOVEL*LOVAL    A3RINB           Item Structure
      * Define work field Record Found USR
     C                     MOVEL*BLANK    WUWXST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WBGUNY           CAH Sequence No
     C                     Z-ADD*ZERO     WBBFDT           Period Beginnin
     C                     Z-ADD*ZERO     WBA2DT           Period Ending D
     C                     Z-ADD*ZERO     WBBKPR           Accrual Rate
     C                     Z-ADD*ZERO     WBPJDT           CAH Unused Date
     C                     Z-ADD*ZERO     WBPKDT           CAH Unused Date
     C                     Z-ADD*ZERO     WBECVL           Comm Min Amt /P
     C                     Z-ADD*ZERO     WBHQVL           Max Accrual Amo
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SARVGN.
     C                     MOVEL*BLANK    WL0001  6
     C                     MOVEL*BLANK    WL0002 30
      * Define local variables for subroutine SDRVGN.
     C                     MOVEL*BLANK    WL0003 10
     C                     MOVEL*BLANK    WL0004  6
     C                     Z-ADD*ZERO     WL0005  30
     C                     MOVEL*BLANK    WL0006  3
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0007  30
     C                     MOVEL*BLANK    WL0008 10
     C                     MOVEL*BLANK    WL0009 40
      * Define local variables for subroutine SGRVGN.
     C                     MOVEL*BLANK    WL0010  3
     C                     MOVEL*BLANK    WL0011 30
      * Define local variables for subroutine SJRVGN.
     C                     MOVEL*BLANK    WL0012  3
     C                     MOVEL*BLANK    WL0013 30
     C                     MOVEL*BLANK    WL0014  1
     C                     MOVEL*BLANK    WL0015  1
     C                     MOVEL*BLANK    WL0016  1
     C                     MOVEL*BLANK    WL0017  1
     C                     MOVEL*BLANK    WL0018  2
     C                     MOVEL*BLANK    WL0019  2
     C                     MOVEL*BLANK    WL0020  3
     C                     MOVEL*BLANK    WL0021  2
     C                     MOVEL*BLANK    WL0022  8
     C                     MOVEL*BLANK    WL0023  8
     C                     MOVEL*BLANK    WL0024  8
     C                     MOVEL*BLANK    WL0025  8
     C                     MOVEL*BLANK    WL0026  1
     C                     MOVEL*BLANK    WL0027  1
     C                     Z-ADD*ZERO     WL0028  96
     C                     MOVEL*BLANK    WL0029  2
     C                     MOVEL*BLANK    WL0030  1
     C                     MOVEL*BLANK    WL0031  1
     C                     MOVEL*BLANK    WL0032  1
     C                     MOVEL*BLANK    WL0033  1
     C                     MOVEL*BLANK    WL0034  2
     C                     Z-ADD*ZERO     WL0035 112
     C                     MOVEL*BLANK    WL0036  2
     C                     MOVEL*BLANK    WL0037  1
      * Define local variables for subroutine SMRVGN.
     C                     Z-ADD*ZERO     WL0038  70
     C                     MOVEL*BLANK    WL0039 30
      * Define local variables for subroutine SNRVGN.
     C                     Z-ADD*ZERO     WL0040  30
     C                     MOVEL*BLANK    WL0041 30
      * Define local variables for subroutine SORVGN.
     C                     Z-ADD*ZERO     WL0042  30
     C                     MOVEL*BLANK    WL0043 30
      * Define local variables for subroutine SPRVGN.
     C                     Z-ADD*ZERO     WL0044  30
     C                     MOVEL*BLANK    WL0045 30
      * Define local variables for subroutine SQRVGN.
     C                     MOVEL*BLANK    WL0046  1
     C                     MOVEL*BLANK    WL0047  3
     C                     MOVEL*BLANK    WL0048  1
      * Define null work field Warehouse Code
     C                     MOVEL*BLANK    YN0001  3
      * Define null work field Salesperson Code
     C                     MOVEL*BLANK    YN0002  3
      * Define null work field Allow Multi-Company
     C                     MOVEL*BLANK    YN0003  1
      * Define null work field Default Printer
     C                     MOVEL*BLANK    YN0004 10
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0001  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0002  3
      * Define local work field M3 GL Invoice PostLiveUSR
     C                     MOVEL*BLANK    YL0003  1
      * Define null work field Broker Address Line 1
     C                     MOVEL*BLANK    YN0005 30
      * Define null work field Broker Address Line 2
     C                     MOVEL*BLANK    YN0006 30
      * Define null work field Broker City
     C                     MOVEL*BLANK    YN0007 20
      * Define null work field Broker State
     C                     MOVEL*BLANK    YN0008  2
      * Define null work field Broker Zip
     C                     MOVEL*BLANK    YN0009 11
      * Define null work field Broker Office Manager
     C                     MOVEL*BLANK    YN0010 30
      * Define null work field Broker Telephone Number
     C                     MOVEL*BLANK    YN0011 25
      * Define null work field Broker Fax Number
     C                     MOVEL*BLANK    YN0012 25
      * Define null work field Broker Email Address
     C                     MOVEL*BLANK    YN0013 50
      * Define null work field Broker G/L Vendor Number
     C                     Z-ADD*ZERO     YN0014  80
      * Define null work field Salesperson Code
     C                     MOVEL*BLANK    YN0015  3
      * Define local work field Text 10A USR
     C                     MOVEL*BLANK    YL0004 10
      * Define local work field Accrual Description
     C                     MOVEL*BLANK    YL0005 30
      * Define local work field Automatic Accrual (Y/N)
     C                     MOVEL*BLANK    YL0006  1
      * Define local work field Print On Invoice (Y/N)
     C                     MOVEL*BLANK    YL0007  1
      * Define local work field Rate Usage
     C                     MOVEL*BLANK    YL0008  1
      * Define local work field Add-on/Allowance
     C                     MOVEL*BLANK    YL0009  1
      * Define local work field Accrual Type
     C                     MOVEL*BLANK    YL0010  2
      * Define local work field Sub Ledger Code
     C                     MOVEL*BLANK    YL0011  2
      * Define local work field Reverse Accrual Code
     C                     MOVEL*BLANK    YL0012  3
      * Define local work field U/M - Primary Dft
     C                     MOVEL*BLANK    YL0013  2
      * Define local work field G/L Code Dr
     C                     MOVEL*BLANK    YL0014  8
      * Define local work field G/L Code Cr
     C                     MOVEL*BLANK    YL0015  8
      * Define local work field G/L Sub Account Code
     C                     MOVEL*BLANK    YL0016  8
      * Define local work field Sales History Exp Bucket
     C                     MOVEL*BLANK    YL0017  8
      * Define local work field Post to G/L (Y/N)
     C                     MOVEL*BLANK    YL0018  1
      * Define local work field All Products (Y/N)
     C                     MOVEL*BLANK    YL0019  1
      * Define local work field Accrual Rate
     C                     Z-ADD*ZERO     YL0020  96
      * Define local work field Accrual Rate Type
     C                     MOVEL*BLANK    YL0021  2
      * Define local work field Affect Sales Realz Rpt
     C                     MOVEL*BLANK    YL0022  1
      * Define local work field Affect Invoice Price
     C                     MOVEL*BLANK    YL0023  1
      * Define local work field Invoice Print Type
     C                     MOVEL*BLANK    YL0024  2
      * Define local work field Max Accrual Amount
     C                     Z-ADD*ZERO     YL0025 112
      * Define local work field Max Accrual Amount Type
     C                     MOVEL*BLANK    YL0026  2
      * Define local work field Record Status
     C                     MOVEL*BLANK    YL0027  1
      * Define local work field First time flag 2     USR
     C                     MOVEL*BLANK    YL0028  1
      * Define null work field Automatic Accrual (Y/N)
     C                     MOVEL*BLANK    YN0016  1
      * Define null work field Print On Invoice (Y/N)
     C                     MOVEL*BLANK    YN0017  1
      * Define null work field Rate Usage
     C                     MOVEL*BLANK    YN0018  1
      * Define null work field Add-on/Allowance
     C                     MOVEL*BLANK    YN0019  1
      * Define null work field Accrual Type
     C                     MOVEL*BLANK    YN0020  2
      * Define null work field Sub Ledger Code
     C                     MOVEL*BLANK    YN0021  2
      * Define null work field Reverse Accrual Code
     C                     MOVEL*BLANK    YN0022  3
      * Define null work field U/M - Primary Dft
     C                     MOVEL*BLANK    YN0023  2
      * Define null work field G/L Code Dr
     C                     MOVEL*BLANK    YN0024  8
      * Define null work field G/L Code Cr
     C                     MOVEL*BLANK    YN0025  8
      * Define null work field G/L Sub Account Code
     C                     MOVEL*BLANK    YN0026  8
      * Define null work field Sales History Exp Bucket
     C                     MOVEL*BLANK    YN0027  8
      * Define null work field Post to G/L (Y/N)
     C                     MOVEL*BLANK    YN0028  1
      * Define null work field All Products (Y/N)
     C                     MOVEL*BLANK    YN0029  1
      * Define local work field Accrual Rate Type
     C                     MOVEL*BLANK    YL0029  2
      * Define null work field Standard Schedule (Y/N)
     C                     MOVEL*BLANK    YN0030  1
      * Define null work field Affect Sales Realz Rpt
     C                     MOVEL*BLANK    YN0031  1
      * Define null work field Affect Invoice Price
     C                     MOVEL*BLANK    YN0032  1
      * Define null work field Invoice Print Type
     C                     MOVEL*BLANK    YN0033  2
      * Define null work field Max Accrual Amount
     C                     Z-ADD*ZERO     YN0034 112
      * Define null work field Max Accrual Amount Type
     C                     MOVEL*BLANK    YN0035  2
      * Define null work field Record Status
     C                     MOVEL*BLANK    YN0036  1
      * Define null work field Automatic Accrual (Y/N)
     C                     MOVEL*BLANK    YN0037  1
      * Define null work field Print On Invoice (Y/N)
     C                     MOVEL*BLANK    YN0038  1
      * Define null work field Rate Usage
     C                     MOVEL*BLANK    YN0039  1
      * Define null work field Add-on/Allowance
     C                     MOVEL*BLANK    YN0040  1
      * Define null work field Accrual Type
     C                     MOVEL*BLANK    YN0041  2
      * Define null work field Sub Ledger Code
     C                     MOVEL*BLANK    YN0042  2
      * Define null work field Reverse Accrual Code
     C                     MOVEL*BLANK    YN0043  3
      * Define null work field U/M - Primary Dft
     C                     MOVEL*BLANK    YN0044  2
      * Define null work field G/L Code Dr
     C                     MOVEL*BLANK    YN0045  8
      * Define null work field G/L Code Cr
     C                     MOVEL*BLANK    YN0046  8
      * Define null work field G/L Sub Account Code
     C                     MOVEL*BLANK    YN0047  8
      * Define null work field Sales History Exp Bucket
     C                     MOVEL*BLANK    YN0048  8
      * Define null work field Post to G/L (Y/N)
     C                     MOVEL*BLANK    YN0049  1
      * Define null work field All Products (Y/N)
     C                     MOVEL*BLANK    YN0050  1
      * Define local work field Accrual Rate Type
     C                     MOVEL*BLANK    YL0030  2
      * Define null work field Accrual Detail Search
     C                     MOVEL*BLANK    YN0051  1
      * Define null work field Standard Schedule (Y/N)
     C                     MOVEL*BLANK    YN0052  1
      * Define null work field Affect Sales Realz Rpt
     C                     MOVEL*BLANK    YN0053  1
      * Define null work field Affect Invoice Price
     C                     MOVEL*BLANK    YN0054  1
      * Define null work field Invoice Print Type
     C                     MOVEL*BLANK    YN0055  2
      * Define null work field Max Accrual Amount
     C                     Z-ADD*ZERO     YN0056 112
      * Define null work field Max Accrual Amount Type
     C                     MOVEL*BLANK    YN0057  2
      * Define null work field Record Status
     C                     MOVEL*BLANK    YN0058  1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL'A/R'     WL0001    P      Application Cod
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    WUAUNA    P      Description
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     MOVEL'N'       WUGGST           USR Display fie
     C                     MOVEL'N'       WUDLST           USR Overflow
      * T8763 01/25/17 DN - Get M3 GL Invoice Post Live Flag.
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0001 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0001           User Profile Na
      *
     C                     MOVEL*BLANK    WN0002 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SCRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,001                    *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0001           User Profile Na
     C                     MOVEL'A/R'     ZA0002           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0002    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0001    WL0003    P      User Profile Na
     C                     MOVEL'A/R'     WL0004    P      Application Cod
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0005    P2AIC3           Company Number
     C                     MOVELWL0006    YL0002    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0002    WL0003    P      User Profile Na
     C                     MOVEL'A/R'     WL0004    P      Application Cod
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0005    P2AIC3           Company Number
     C                     MOVELWL0006    YL0002    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0002    YN0001           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0003           User Profile Na
     C                     MOVEL'A/R'     ZA0004           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0001    IFNE 0                          *IF
     C                     Z-ADDYL0001    P2AIC3           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0002    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C                     PARM *BLANK    WQ0001  3        Warehouse Code
     C                     PARM YL0001    WQ0002  30       Shipping Compan
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL'A/R'     WL0001    P      Application Cod
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    WUAUNA    P      Description
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
      * RMC change to use M3LIVE instead of M3GLMSC  2.11.22  SDN440
      * RTV Alpha Value        RT - Company Values  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP2AIC3    WL0007           Company Number
     C                     MOVEL'M3LIVE'  WL0008    P      Company Value C
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0009    YL0003    P      System Value Al
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Y2U0005
00002  M3 Vendor
00003 G/L Vendor
00004 Customer/Item
