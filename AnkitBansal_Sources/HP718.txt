      *****************  RPG PROGRAM HEADING  ***********************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP718
      * TITLE:       VIEW EXPENSE TICKET
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     05/10/94
      *
      * FUNCTION: THIS PROGRAM USES A SUBFILE TO VIEW RECORDS
      *           IN THE EXPENSE TICKET FILE FOR THE TICKET
      *           SELECTED BY THE USER.
      *
      *           THIS PROGRAM IS CALLED FROM HP418-WORK WITH
      *           EXPENSE TICKETS.
      *
      *           IT LOADS THE ENTIRE SUBFILE AT ONE TIME SO THAT THE
      *           TOTAL FIELDS IN THE CONTROL RECORD ARE ACCURATE.
      *
      *           IT DOES NOT HAVE SELECTORS OR POSITIONERS.
      *           IT DOES NOT HAVE F4-PROMPT LOGIC.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 99/99/99  NAME
      *
      * 09/12/94  LEANNE FEDOR
      *           RECOMPILE ONLY.
      *           REMOVED FOUR FIELDS FROM THE EXPENSE TICKET FILE:
      *                 PIG DAYS ALLOCATED OVER
      *                 ALLOCATED TIME
      *                 G/L POST TIME
      *                 EOP POST TIME
      *
      * 01/13/95  LEANNE FEDOR
      *           RECOMPILE ONLY. SEX ADDED TO HOG GROUP FILE.
      *
      * 01/19/95  LEANNE FEDOR
      *           RECOMPILE ONLY. FIELDS ADDED TO EXPENSE TICKET FILE.
      *
      * 03/13/95  LEANNE FEDOR
      *           RECOMPILE ONLY. ORIGIN BGF FARM SITE AND ORIGIN
      *           NURSERY FARM SITE ADDED TO HOG GROUP FILE.
      *
      * 04/24/95  LEANNE FEDOR
      *           CHANGED FARM SITE CODE FROM ALPHA TO NUMERIC.
      *
      * 11/01/95  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELD 'GROUP TYPE' ADDED TO
      *           HOG GROUP FILE.
      *
      * 06/03/97  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELDS 'PURGE FLAG' AND 'DATE OF
      *           FIRST PURGE' ADDED TO HOG GROUP FILE.
      *
      * 12/09/97  LEANNE FEDOR
      *           EXPENSE TICKET NUMBER FIELD RENAMED FROM 'XTNO' TO
      *           'XTSN'.
      *
      * 06/26/01  LeAnne Fedor
      *           Recompile only.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 07/18/01  LeAnne Fedor
      *           Recompile only.
      *           New field 'feed group' added to Hog Group file.
      *           Expense ticket amount expanded from 7,2 to 9,2.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD718    CF   E             WORKSTN SFILE(HP718S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
      *
     FHSL034D   IF   E           K DISK
      *  HOG GROUPS
      *
      *
     FHSP048    IF   E           K DISK
      *  EXPENSE TICKET
      *
      /EJECT
      ****************************************************************
      * Definition Specifications
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     D                 DS
     D  WKMDY                  1      6  0
     D  WKMM                   1      2  0
     D  WKDD                   3      4  0
     D  WKYY                   5      6  0
      *
      * DATE IN CCYYMMDD FORMAT
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      ****************************************************************
      * SUBROUTINES
      ****************************************************************
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      * VERIFY THAT THE EXPENSE TICKET THAT THE USER SELECTED STILL
      * EXISTS.
      *
     C     C1XTSN        CHAIN     HSP048                             90
     C     *IN90         IFEQ      *ON                                          IF NOT FOUND
     C                   MOVEL     YES           NOTFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00371'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     C1XTSN        XXXTSN
     C                   MOVEA     XXXTSN        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT FOUND
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      *  WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP718K1
     C                   WRITE     HP718EC
     C                   EXFMT     HP718C1
      *
      * SET THE 'RESET' FLAG TO NO.  THIS FLAG IS USED TO DETERMINE
      * WHETHER TO REPOSITION THE USER TO A PARTICULAR PLACE IN THE
      * SUBFILE (RESET=YES) OR TO PLACE THE USER AT THE BEGINNNING OF
      * THE SUBFILE (RESET=NO)
      *
     C                   MOVEL     NO            RESET
      *
      * RETRIEVE THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) AND MOVE IT TO A WORK FIELD.  THIS VALUE
      * WILL BE USED LATER TO CONTROL THE REPOSITIONING OF THE SUBFILE.
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      *
      * CLEAR ALL MESSAGES
      *
     C                   EXSR      $CLMSG
      *
      * INITIALIZE THE RETURN CODE
      *
     C                   MOVEL     '00'          RTNCD
      *
      * GET USER'S ENTRY AND RESET STANDARD RESPONSE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     YES           RESET
     C                   MOVEL     YES           FIRST
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * USER PRESSED 'ENTER'
      *
     C                   MOVEL     EXIT          ROUTNE
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1  - SUBROUTINE TO CLEAR THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   Z-ADD     0             C1XTAM
     C                   Z-ADD     0             C1XTQT
     C                   Z-ADD     0             C1XTLB
     C                   Z-ADD     0             C1XTHD
      *
     C                   CLEAR                   HP718S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP718C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      *  IF ANY OF THE RECORDS FOR THE USER'S SELECITONS HAVE BEEN
      *  DELETED OUT FROM UNDER THE USER, THEN SET *IN90 BACK ON TO
      *  CONTROL AVAILABLE FUNCTION KEYS AND INPUT FIELDS.
      *  (*IN90 WAS SET OFF ABOVE WHEN THE SUBFILE WAS CLEARED)
      *
     C     NOTFLG        IFEQ      YES                                          IF NOT FOUND
     C                   SETON                                        90
     C                   ENDIF                                                  IF NOT FOUND
      *
      * SET POSITION IN DATABASE FILE
      * ALWAYS LOAD THE ENTIRE SUBFILE.  DO NOT LOAD A PAGE AT A TIME.
      *
     C     C1XTSN        SETLL     HSP048
      *
     C     *IN82         DOUEQ     *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LOAD1 - SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
      *
     C     C1XTSN        READE     HSP048                                 82
     C     *IN82         IFEQ      *OFF                                          IF FOUND
      *
     C     FIRST         IFEQ      YES
      *
      * FLIP BEGIN DATE
      *
     C                   Z-ADD     XTXBDT        WKCYMD
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
     C                   Z-ADD     WKMDY         C1BMDY
      *
      * FLIP END DATE
      *
     C                   Z-ADD     XTXEDT        WKCYMD
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
     C                   Z-ADD     WKMDY         C1EMDY
      *
     C                   MOVEL     XTEXCD        C1EXCD
     C                   MOVEL     XTAMCD        C1AMCD
     C                   MOVEL     XTXSCD        C1XSCD
     C                   MOVEL     NO            FIRST
     C                   ENDIF
      *
     C                   MOVEL     XTALBO        DFALBO
     C                   Z-ADD     XTFSCD        DFFSCD
     C                   Z-ADD     XTXTAM        DFXTAM
     C                   Z-ADD     XTXTQT        DFXTQT
     C                   Z-ADD     XTXTLB        DFXTLB
     C                   Z-ADD     XTXTHD        DFXTHD
      *
      * ACCUMULATE TOTALS TO DISPLAY IN CONTROL RECORD
      *
     C                   ADD       XTXTAM        C1XTAM
     C                   ADD       XTXTQT        C1XTQT
     C                   ADD       XTXTLB        C1XTLB
     C                   ADD       XTXTHD        C1XTHD
      *
      * RETRIEVE THE ALPHA HOG GROUP CODE TO DISPLAY
      *
     C     XTHGSN        CHAIN     HSL034D                            94
     C     *IN94         IFEQ      *OFF
     C                   MOVEL     HGHGCD        DFHGCD
     C                   ELSE
     C                   MOVE      *BLANK        DFHGCD
     C                   ENDIF
      *
     C                   ADD       1             HDRRN1
     C                   WRITE     HP718S1
     C                   SETON                                        81
      *
     C                   ENDIF                                                  IF FOUND
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD ERROR MESSAGE OF NO DATA FOUND.
      *
     C     HDRRN1        IFEQ      0
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09002'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      * SET THE PAGE OF THE SUBFILE TO DISPLAY TO THE USER
      *
     C     RESET         IFEQ      YES
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   ELSE
     C                   Z-ADD     1             HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANKS       MGI
     C                   PARM      *BLANKS       MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    C1XTSN
     C                   PARM                    RTNCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVEL     *BLANK        PGM              10            USED IN MSG
     C                   MOVEL     *BLANK        MSGFL            10            USED IN MSG
     C                   MOVEL     *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            ERRFLG            1
     C                   MOVEL     NO            NOTFLG            1
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C     *LIKE         DEFINE    IDFLOW        WKFLOW                         SFL POSITION
      *
      * ALPHA FIELDS FOR USE AS PARMS
      *
     C                   MOVE      *BLANK        XXXTSN            7
      *
      * FLAG FIELDS
     C                   MOVEL     YES           FIRST             1
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     11            WKPLIN            2 0          SFLPAG(0011)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
