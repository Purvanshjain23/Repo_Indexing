      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:   HOG PRODUCTION
      * PROGRAM:  HP551
      * TITLE:    SELECT FARM SITE WITH FARM POSITIONER
      *           (OMIT BGF FARM SITES)
      * AUTHOR:   LEANNE  FEDOR
      * CREATED:  02/06/95
      *
      * FUNCTION: THIS IS A SELECT FUNCTION WINDOW DISPLAY OF
      *           GROW FINISH AND NURSERY FARM SITES.
      *
      *         POSITIONERS: FARM SITE
      *
      *         SELECTORS:   PRODUCTION PHASE
      *                      PRODUCTION TYPE
      *                      CELL
      *                      BUSINESS OFFICE
      *
      *         IT LOADS THE WINDOW SUBFILE A PAGE AT A TIME.
      *         IT DOES NOT USE THE STANDARD MESSAGE HANDLING PROGRAM.
      *         A RECORD IS SELECTED BY POSITIONING THE CURSOR
      *         ON THE LINE AND PRESSING ENTER.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE       PROGRAMMER
      *
      * 04/20/95  LEANNE FEDOR
      *           CHANGED FARM SITE CODE FROM ALPHA TO NUMERIC
      *
      * 05/10/95  LEANNE FEDOR
      *           ADDED A PRODUCTION TYPE SELECTOR.
      *
      * 08/21/95  LEANNE FEDOR
      *           MADE PRODUCTION TYPE AND PHASE EINTRY PARMS.
      *
      * 04/13/98  LeAnne Fedor
      *           Recompile only. New field 'state' added to farm site file.
      *
      * 05/21/01  LeAnne Fedor
      *           Added CELL in subfile and as a a selector in control record.
      *
      * 06/05/01  LeAnne Fedor
      *           Recompile only. New field 'multisite' added to Farm Site file.
      *
      * 06/26/01  LeAnne Fedor
      *           Recompile only.
      *           Three fields (manager/supervisor/multisite) renamed in Farm Site file.
      *
      * 09/04/01  LeAnne Fedor
      *           Recompile only. New 'square feet' fields added to Farm Site file.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /eJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
      * 25 ROLLUP
     FHPD551    CF   E             WORKSTN
     F                                     SFILE(HP551S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     Fhsp018    IF   E           K DISK
     F                                     INFDS(DBFEED)
      *    FARM SITE
      *
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
     D                 DS
     D  DUMMYD                 1      1
      *  THE PRECEDING DUMMY DATA STRUCTURE IS ONLY TO KEEP THE I-SPEC
      *  INFO FROM RUNNING OVER INTO THE 'CALC SPECS' ON THE COMPILE
      *  LISTING.  IT SERVES NO OTHER PURPOSE AND CAN BE DELETED
      *  AT ANY TIME!!!
      /EJECT
      ****************************************************************
      * 0AIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
     C                   WRITE     HP551K1
     C                   EXFMT     HP551C1
      *
      * SAVE THE VALUE FOR THE LOWEST SLF RRN ON THE SCREEN FOR
      * REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      * RESET ERROR FLAG
     C                   Z-ADD     0             ERROR
      *
      * GET USER'S ENTRY AND RESET STANDARD RESPONSE
      *
     C                   SELECT
     C     *IN12         WHENEQ    *ON                                          F12=PREVIOUS
     C                   MOVEL     EXIT          ROUTNE
      *
      * REPOSITION THE SUBFILE IF THE USER HAS CHANGED ANY OF THE
      * POSITIONERS OR SELECTORS IN THE CONTROL RECORD.
      *
     C     SVFSBO        WHENNE    C1FSBO                                       IF POSITION
     C     SVFSCD        ORNE      C1FSCD
     C     SVPPCD        ORNE      C1PPCD
     C     SVPTCD        ORNE      C1PTCD
     C     SVCELL        ORNE      C1CELL
     C                   MOVEL     NO            RESET
     C                   MOVEL     SET1          ROUTNE
     C                   MOVEL     C1FSBO        SVFSBO
     C                   Z-ADD     C1FSCD        SVFSCD
     C                   MOVEL     C1PPCD        SVPPCD
     C                   MOVEL     C1PTCD        SVPTCD
     C                   Z-ADD     C1CELL        SVCELL
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NORECS        IFEQ      YES                                          IF EMPTY SFL
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF EMPTY SFL
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * IF THERE ARE NO ERRORS,
      * READ AND PROCESS THE RECORD SELECTED BY THE USER.
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
      *
      * IF THE USER SELECTED A FARM SITE, THEN SET THE ROUTINE TO EXIT
      * THIS SELECTION PROGRAM.  IF NO FARM SITE WAS SELECTED, THEN
      * SET TO REBUILD THE RECORDS DISPLAYED FOR THE USER.
      *
     C     RSFSCD        IFNE      0
     C                   MOVEL     EXIT          ROUTNE
     C                   ELSE
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
      * ELSE THERE WERE ERRORS IN THE SUBFILE OPTIONS ENTERED, SO SET
      * TO REDISPLAY SCREEN AND ERRORS TO USER
      *
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1 - SUBROUTINE TO CLEAR THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   CLEAR                   HP551R1
     C                   WRITE     HP551R1
      *
     C                   CLEAR                   HP551S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP551C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET POSITION IN FILE
      *
     C     c1fscd        SETLL     hsp018
      *
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSTION TO.
      * RESET IS A FLAG FIELD TO INDICATE WHETHER YOU ARE ATTEMPTING
      * TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE SUBFILE.
      * IF RESET IS 'NO' DON'T REPOSITION THE USER--JUST START OVER.
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS.
      * THE NUMBER WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     HDRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      *
     C                   Z-ADD     0             COUNT             2 0
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
      * READ FARM SITE MASTER FILE
      *
     C                   READ      hsp018                                 82
     C     *IN82         IFEQ      *OFF                                          IF READ
     C     FSPPCD        ANDNE     'BGF  '
      *
      *   ONLY INCLUDE RECORDS THAT MATCH THE USER'S SELECTORS
      *
     C     C1PPCD        IFNE      *BLANK                                        IF PHASE
     C     FSPPCD        ANDNE     C1PPCD
     C                   ELSE
      *
     C     C1PTCD        IFNE      *BLANK                                        IF TYPE
     C     FSPTCD        ANDNE     C1PTCD
     C                   ELSE
      *
     C     C1CELL        IFNE      0                                             IF CELL
     C     FSCELL        ANDNE     C1CELL
     C                   ELSE
      *
     C     C1FSBO        IFNE      *BLANK                                        IF OFFICE
     C     FSFSBO        ANDNE     C1FSBO
     C                   ELSE
      *
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   MOVEL     FSFSBO        DFFSBO
     C                   Z-ADD     FSFSCD        DFFSCD
     C                   MOVEL     FSFSNM        DFFSNM
     C                   MOVEL     FSPPCD        DFPPCD
     C                   MOVEL     FSPTCD        DFPTCD
     C                   Z-ADD     FSCELL        DFCELL
     C                   WRITE     HP551S1
     C                   SETON                                        81
      *
      * FOR POSITIONING, PLACE THE SUBFILE RELATIVE RECORD NUMBER INTO
      * THE SFLRCDNBR FIELD (HDPAG1)
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDIF                                                  IF OFFICE
     C                   ENDIF                                                  IF CELL
     C                   ENDIF                                                  IF TYPE
     C                   ENDIF                                                  IF PHASE
     C                   ENDIF                                                  IF READ
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD MESSAGE 'NO DATA TO DISPLAY'.
      *
     C     HDRRN1        IFEQ      0
     C                   Z-ADD     1             ERROR
     C                   MOVE      YES           NORECS
     C                   ELSE
     C                   MOVE      NO            NORECS
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO READ SUBFILE RECORDS AND PROCESS
      *          USER SELECTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   Z-ADD     0             ERROR
      *
      * IF CURSOR LOCATION RETURNED IS THE RRN OF A RCD IN THE SUBFILE,
      * CHAIN THE SUBFILE FOR THAT RECORD AND LOAD THE DATA INTO THE
      * PARM TO RETURN TO THE CALLING PROGRAM.
      *
     C                   SETOFF                                       82
     C     HDRRN         IFNE      0
     C                   Z-ADD     HDRRN         HDRRN1
     C     HDRRN1        CHAIN     HP551S1                            82
     C                   Z-ADD     DFFSCD        RSFSCD
     C                   MOVEL     DFFSNM        RSFSNM
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C     C1FSBO        PARM                    RSFSBO
     C                   PARM                    RSFSCD
     C                   PARM                    RSFSNM
     C     C1PPCD        PARM                    RSPPCD
     C     C1PTCD        PARM                    RSPTCD
      *
     C                   MOVEL     C1FSBO        SVFSBO
     C                   MOVEL     C1PPCD        SVPPCD
     C                   MOVEL     C1PTCD        SVPTCD
      *
     C     *LIKE         DEFINE    FSFSBO        RSFSBO
     C     *LIKE         DEFINE    FSFSCD        RSFSCD
     C     *LIKE         DEFINE    FSFSNM        RSFSNM
     C     *LIKE         DEFINE    FSPPCD        RSPPCD
     C     *LIKE         DEFINE    FSPTCD        RSPTCD
      *
     C     *LIKE         DEFINE    FSFSBO        SVFSBO
     C     *LIKE         DEFINE    FSFSCD        SVFSCD
     C     *LIKE         DEFINE    FSCELL        SVCELL
     C     *LIKE         DEFINE    FSPPCD        SVPPCD
     C     *LIKE         DEFINE    FSPTCD        SVPTCD
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        MODE              6            PARM
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
     C                   Z-ADD     0             ERROR             3 0          ERRORS
      *
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     9             WKPLIN            2 0          SFLPAG(0009)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      *  DO ONE TIME ONLY:  MAKE SURE CALLING PROGRAM SCREEN IS NOT
      *  CLEARED AND WRITE THE WINDOW DEFINITION RCDFMT
      *
     C                   WRITE     HP551R2                                      DUMMY FMT
     C                   WRITE     HP551R1                                      REF WINDOW
      *
     C                   ENDSR
      /EJECT
