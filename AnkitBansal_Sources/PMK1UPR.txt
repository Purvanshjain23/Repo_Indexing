     H/TITLE EUP Bld Accural Detail    Execute user program
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Y* ADDLIBLE LIB(COMMON) POSITION(*LAST)
     Y* ADDLIBLE LIB(DLY029) POSITION(*LAST)
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     FBROKE1    if   e           k disk    prefix(b1)
      *  JRD Broker Factor by Item Master File
      *
     FBROKE2    if   e           k disk    prefix(b2)
      *  JRD Broker Factor by Broker/Item Master File
      *
     FITMCPKL1  if   e           k disk    RENAME(ITMCPK:ITMCPK1)
      *  Daily's CoPack Item/Seaboard Item Cross Ref
      *
     FOMBYREL1  if   e           k disk
      *  Item Default              Retrieval index
      *
     FPPAHREL1  if   e           k disk
      *  Accrual Code Detail       Retrieval index
      *
     FPPAHREL0  uf A e             disk
      *  Accrual Code Detail       Update index
      *
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      *
      * Standalone fields
     D broker          s              2  0
     D continue        s              1
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    p1ojcd            3            Accrual Code
     C                   PARM                    p2broker          5 0          Accrual Code
     C                   PARM                    process           2            Process
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Accrual Code Detail record creation differs slightly for each group
      * of Accrual Codes. But they are similar enough to use the same program.
      * Each group calls this program using a different process code to determine
      * which file the Accrual Code Detail records are based on.
      *
      * Process 01 - Create records from BROKE1
      * BS1 and BS2
      *
      * Process 02 - Create records from BROKE2
      * Non Standard Accrual Codes - B24, B25, B32, B37, B38, B42, and B59
      *
      * Process 03 - Create records from BROKE2, then check for Exceptions in BROKE1
      * Exceptions Accrual Codes - B10, B23, B29, B40, B53, and B55. Also B35 and B50
      *
      * Determine which file to process
     C     Process       caseq     '01'          $broke1                        Process BROKE1
     C     Process       caseq     '02'          $broke2                        Process BROKE2
     C     Process       caseq     '03'          $brokeexp                      Process BROKE2 & 1
     C                   endcs
      *
      *----------------------------------------------------------------
      * Exit program
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
      *
     C/EJECT
      *---------------------------------------------------------------
      * Intialize Accrual Detail Code record
      *---------------------------------------------------------------
      *
     C     $initrcd      begsr
      *
      * Initialize output fields
     C                   eval        ahojcd = *blanks                           Accrual Code
     C                   eval        ahhgcd = *zeros                            Item Code
     C                   eval        ahshsx = *blanks                           Accrual Rate Type
     C                   eval        ahbkpr = *zeros                            Accrual Rate
     C                   eval        ahvsst = *blanks                           Record Status
     C                   eval        ahmjdt = *zeros                            Create Date
     C                   eval        ahbetm = *zeros                            Create Time
     C                   eval        ahccvn = *blanks                           Create User
     C                   eval        ahcdvn = *blanks                           Create Program
     C                   eval        ahmkdt = *zeros                            Change Date
     C                   eval        ahbftm = *zeros                            Change Time
     C                   eval        ahcevn = *blanks                           Change User
     C                   eval        ahcfvn = *blanks                           Change Program
      *
     C                   endsr
     C/EJECT
      *---------------------------------------------------------------
      * Process BROKE1 - JRD Broker Factor by Item Master File
      *---------------------------------------------------------------
      *
     C     $broke1       begsr
      *
     C     *loval        setll     brok1
     C                   read      brok1                                  95
     C                   dow       *in95 = *off                                 do loop
      *
      * Intialize Accrual Detail Code record
     C                   exsr      $initrcd
      *
      * Get Item Code; Check in Daily's CoPack Item/Seaboard Item XREF
     C                   eval      dlyprd = b1item
     C                   exsr      $itmcpk
      *
      * Check Item Default file
     C                   exsr      $itmdft
      *
      * If item found in Item Default file, proceed with create
     C                   if        continue = 'Y'                               continue = 'Y'
      * Create record in Accrual Code Detail
     C                   eval      ahbkpr = b1bfactr                            Rate
     C                   exsr      $crtdtl
      *
     C                   endif                                                  continue = 'Y'
      *
      * Next record
     C                   read      brok1                                  95
     C                   enddo                                                  do loop
      *
     C                   endsr
     C/EJECT
      *---------------------------------------------------------------
      * Check for record in Daily's CoPack Item/Seaboard Item XREF
      *---------------------------------------------------------------
      *
     C     $itmcpk       begsr
      *
     C     dlyprd        chain     ITMCPK1                            91
      *
      * If record found, use sbdprd, else use item
     C                   if        *in91 = *off                                 91 = off
     C                   eval      ahhgcd = sbdprd
     C                   else
     C                   eval      ahhgcd = dlyprd
      *
     C                   endif                                                  91 = off
      *
     C                   endsr
     C/EJECT
      *---------------------------------------------------------------
      * Check Item Default file
      *---------------------------------------------------------------
      *
     C     $itmdft       begsr
      *
      * Initialize flag
     C                   eval      continue = 'N'
      *
     C                   eval      byhgcd = ahhgcd
     C     byhgcd        chain     @BYREA1                            91
      *
      * If record found, set to continue with record create
     C                   if        *in91 = *off                                 91 = off
     C                   eval      continue = 'Y'
      *
     C                   endif                                                  91 = off
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Process BROKE2 - JRD Broker Factor by Broker/Item Master File
      *---------------------------------------------------------------
      *
     C     $broke2       begsr
      *
     C                   eval      broker=p2broker
     C     broker        setll     brok2
     C     broker        reade     brok2                                  95
     C                   dow       *in95 = *off                                 do loop
      *
      * Intialize Accrual Detail Code record
     C                   exsr      $initrcd
      *
      * If BFACTR <> *ZERO, get item and create detail record
      * However, if using process '03 - BROKE2 Then BROKE1' use all records
     C                   if        b2bfactr <> 0 or process = '03'
      *
      * Get Item Code; Check in Daily's CoPack Item/Seaboard Item XREF
     C                   eval      dlyprd = b2item
     C                   exsr      $itmcpk
      * Check Item Default file
     C                   exsr      $itmdft
      *
      * If item found in Item Default file, proceed with create
     C                   if        continue = 'Y'                               continue = 'Y'
      *
      * Create record in Accrual Code Detail
     C                   eval      ahbkpr = b2bfactr                            Rate
     C                   exsr      $crtdtl
      *
     C                   endif                                                  continue = 'Y'
      *
     C                   endif
      * Next record
     C     broker        reade     brok2                                  95
     C                   enddo                                                  do loop
      *
     C                   endsr
     C/EJECT
      *---------------------------------------------------------------
      * Process BROKE2 then Exceptions in BROKE1
      *---------------------------------------------------------------
      *
     C     $brokeexp     begsr
      *
      * Process BROKE2 - JRD Broker Factor by Broker/Item Master File
     C                   exsr      $broke2
      *
     C     *loval        setll     brok1
     C                   read      brok1                                  95
     C                   dow       *in95 = *off                                 do loop
      *
      * Intialize Accrual Detail Code record
     C                   exsr      $initrcd
      *
      * Does Item exist for Broker in BROKE2?
     C     KEY01         chain     brok2                              99
      *
      * If not found, add to Accrual Code Detail from BROKE1
     C                   if        *in99 = *on                                  91 = on
      *
      * Get Item Code; Check in Daily's CoPack Item/Seaboard Item XREF
     C                   eval      dlyprd = b1item
     C                   exsr      $itmcpk
      *
      * Check Item Default file
     C                   exsr      $itmdft
      *
      * If item found in Item Default file, proceed with create
     C                   if        continue = 'Y'                               continue = 'Y'
      * Create record in Accrual Code Detail
     C                   eval      ahbkpr = b1bfactr                            Rate
     C                   exsr      $crtdtl
      *
     C                   endif                                                  sontinue = 'Y'
      *
     C                   endif                                                  91 = off
      * Next record
     C                   read      brok1                                  95
     C                   enddo                                                  do loop
      *
     C                   endsr
     C/EJECT
      *---------------------------------------------------------------
      * Create record in Accrual Code Detail
      *---------------------------------------------------------------
      *
     C     $crtdtl       begsr
      *
      * Move key fields
     C                   eval        ahojcd = p1ojcd
      *
      * Check for duplicate primary key
     C     KEY02         setll     @AHREUR                                90
      *
      * Record not found, proceed with create
     C                   if        *in90 = '0'
      *
      * Field ahhgcd set in $broke1
     C                   eval      ahshsx = 'W'
     C                   eval      ahvsst = 'A'
     C                   eval      ahmjdt = ##JDT
     C                   eval      ahbetm = ##JTM
     C                   eval      ahccvn = ##USR
     C                   eval      ahcdvn = ##PGM
      *
     C                   write     @AHREUQ
     C                   endif
      *
     C                   endsr
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      *
      * Move parameter to KLIST parameter field
     C                   eval      broker=p2broker
      * KLIST for BROKE2
     C     KEY01         klist
     C                   kfld                    broker
     C                   kfld                    b1item
      * KLIST for Accrual Code Detail       Retrieval index
     C     KEY02         klist
     C                   kfld                    ahojcd
     C                   kfld                    ahhgcd
      *================================================================
     CSR   ZZEXIT        ENDSR
