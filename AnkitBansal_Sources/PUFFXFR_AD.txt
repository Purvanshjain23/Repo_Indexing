// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUFFXFR
// ?Date: 14.08.2025 Time: 03:50:14
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Bld WhsStckTxf Diff    RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC2144373;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Ship_From_Warehouse);
PARAMETER(PAR.Ship_To_Warehouse);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Report_Type_USR);
PARAMETER(PAR.Qty_Rcvd_Qty_Ship_USR);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(Val Cmp/Order Exist   RT) TYPE(RTVOBJ) FILE(PUAOCPP)           AC2148837;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 //?EDI 944 Record Found?
 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 // LCL.Manifest Dtl Rcpt Exist = CND.Yes
 LCL.Manifest_Dtl_Rcpt_Exist = 'Y';

 //?EDI 944 Record Found?
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Manifest Dtl Rcpt Exist = CND.No
 LCL.Manifest_Dtl_Rcpt_Exist = 'N';

 ENDIF;

 //?USER: Process Data record

 EXECUTE FUNCTION(RTV Stops/BOL DtTm     RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1515809;
 PARAMETER(DB1.Load_ID);
 PARAMETER(NLL.Total_Stops);
 PARAMETER(LCL.BOL_Complete_Date);
 PARAMETER(LCL.BOL_Complete_Time);
 PARAMETER(NLL.Warehouse_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 CASE;

 // IF PAR.Item Code is Entered
 IF PAR.Item_Code <> *ZERO;

 EXECUTE FUNCTION(Rtv Desc Line 1&2      RT) TYPE(RTVOBJ) FILE(CABZREP)          AC2139542;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(LCL.Description_Line_One);
 PARAMETER(NLL.Description_Line_Two);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Bld WhsStckTxf Diff-ItmRT) TYPE(RTVOBJ) FILE(OMFNCPP)          AC2144381;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Ship_From_Warehouse);
 PARAMETER(PAR.Ship_To_Warehouse);
 PARAMETER(PAR.Report_Type_USR);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.BOL_Complete_Date);
 PARAMETER(LCL.BOL_Complete_Time);
 PARAMETER(LCL.Description_Line_One);
 PARAMETER(LCL.Manifest_Dtl_Rcpt_Exist);
 {
  //?USER: Initialize routine

  // LCL.First Time Flag = CND.Yes
  LCL.First_Time_Flag = 'Y';

  // LCL.Case Quantity = CON.*ZERO
  LCL.Case_Quantity = *ZERO;

  // LCL.Case Weight = CON.*ZERO
  LCL.Case_Weight = *ZERO;

  // LCL.Manifest Gross Weight = CON.*ZERO
  LCL.Manifest_Gross_Weight = *ZERO;

  //?USER: Process Data record

  //?Initialize.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Diff/Discrepancy Qty = CON.*ZERO
  LCL.Diff_Discrepancy_Qty = *ZERO;

  // LCL.In Transit Qty = CON.*ZERO
  LCL.In_Transit_Qty = *ZERO;

  ENDIF;

  //?Build for Detail Report Version by Item Code.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Save First Time Through Pallet #.
  CASE;

  // IF LCL.First Time Flag is Yes
  IF LCL.First_Time_Flag = 'Y';

  // LCL.First Time Flag = CND.NO
  LCL.First_Time_Flag = 'N';

  // LCL.Manifest Pallet Number = DB1.Manifest Pallet Number
  LCL.Manifest_Pallet_Number = DB1.Manifest_Pallet_Number;

  EXECUTE FUNCTION(Rtv Desc Line 1&2      RT) TYPE(RTVOBJ) FILE(CABZREP)          AC2139542;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(LCL.Item_Description_Line_1);
  PARAMETER(NLL.Description_Line_Two);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?To save for oldest Production Date.
  // LCL.Production Date = DB1.Production Date
  LCL.Production_Date = DB1.Production_Date;

  ENDIF;

  //?Sum Qty/Wgt each time Pallet # are the same.
  CASE;

  // IF DB1.Manifest Pallet Number EQ LCL.Manifest Pallet Number
  IF DB1.Manifest_Pallet_Number = LCL.Manifest_Pallet_Number;

  // LCL.Case Quantity = LCL.Case Quantity + DB1.Case Quantity
  LCL.Case_Quantity = LCL.Case_Quantity + DB1.Case_Quantity;

  // LCL.Case Weight = LCL.Case Weight + DB1.Case Weight
  LCL.Case_Weight = LCL.Case_Weight + DB1.Case_Weight;

  // LCL.Manifest Gross Weight = LCL.Manifest Gross Weight + DB1.Manifest Gross Weight
  LCL.Manifest_Gross_Weight = LCL.Manifest_Gross_Weight + DB1.Manifest_Gross_Weight;

  //?Save the Oldest Production Date.
  CASE;

  // IF DB1.Production Date LT LCL.Production Date
  IF DB1.Production_Date < LCL.Production_Date;

  // LCL.Production Date = DB1.Production Date
  LCL.Production_Date = DB1.Production_Date;

  ENDIF;

  //?Sum Qty/Wgt each time Pallet # are the same.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Create WF EDI Whs Stk Txfr Diff & Reset Total Qty/Wgt & LCL Fields.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Create WF EDI Whs Stk Txfr Diff Record.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?LCL Ctx = Previous Pallet #.
  EXECUTE FUNCTION(RTV Sum Qty Rcvd-PalletRT) TYPE(RTVOBJ) FILE(PUAOCPP)          AC2144462;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(LCL.Manifest_Pallet_Number);
  PARAMETER(LCL.Quantity_Received_Total);
  PARAMETER(LCL.Weight_received_total);
  PARAMETER(LCL.MDER_Receipt_Date);
  PARAMETER(LCL.MDER_Receipt_Time);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.Quantity Received Total = PAR.Quantity Received Total + DB1.Quantity Received
   PAR.Quantity_Received_Total = PAR.Quantity_Received_Total + DB1.Quantity_Received;

   // PAR.Weight received total = PAR.Weight received total + DB1.Weight Received
   PAR.Weight_received_total = PAR.Weight_received_total + DB1.Weight_Received;

   // PAR.MDER Receipt Date = DB1.MDER Receipt Date
   PAR.MDER_Receipt_Date = DB1.MDER_Receipt_Date;

   // PAR.MDER Receipt Time = DB1.MDER Receipt Time
   PAR.MDER_Receipt_Time = DB1.MDER_Receipt_Time;

  }

  //?Record Found?
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // LCL.Diff/Discrepancy Qty = LCL.Quantity Received Total - LCL.Case Quantity
  LCL.Diff_Discrepancy_Qty = LCL.Quantity_Received_Total - LCL.Case_Quantity;

  //?Record Found?
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?EDI 944 was Rcv by Co/Ord Therefore Set Diff/Discrep Qty Else In-Trans Qty
  CASE;

  // IF PAR.Manifest Dtl Rcpt Exist is Yes
  IF PAR.Manifest_Dtl_Rcpt_Exist = 'Y';

  // LCL.Diff/Discrepancy Qty = LCL.Quantity Received Total - LCL.Case Quantity
  LCL.Diff_Discrepancy_Qty = LCL.Quantity_Received_Total - LCL.Case_Quantity;

  //?EDI 944 was Rcv by Co/Ord Therefore Set Diff/Discrep Qty Else In-Trans Qty
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.In Transit Qty = LCL.Case Quantity
  LCL.In_Transit_Qty = LCL.Case_Quantity;

  ENDIF;

  ENDIF;

  EXECUTE FUNCTION(CRT WF Whs StckTxf Dif CR) TYPE(CRTOBJ) FILE(PUA1CPP)          AC2144368;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.Load_ID);
  PARAMETER(LCL.Manifest_Pallet_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Ship_From_Warehouse);
  PARAMETER(PAR.Ship_To_Warehouse);
  PARAMETER(PAR.Scheduled_Ship_Date);
  PARAMETER(PAR.BOL_Complete_Date);
  PARAMETER(PAR.BOL_Complete_Time);
  PARAMETER(LCL.MDER_Receipt_Date);
  PARAMETER(LCL.MDER_Receipt_Time);
  PARAMETER(LCL.Item_Description_Line_1);
  PARAMETER(LCL.Production_Date);
  PARAMETER(LCL.Case_Weight);
  PARAMETER(LCL.Manifest_Gross_Weight);
  PARAMETER(LCL.Case_Quantity);
  PARAMETER(LCL.Quantity_Received_Total);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(LCL.Diff_Discrepancy_Qty);
  PARAMETER(LCL.In_Transit_Qty);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  ENDIF;

  // LCL.Manifest Pallet Number = DB1.Manifest Pallet Number
  LCL.Manifest_Pallet_Number = DB1.Manifest_Pallet_Number;

  // LCL.Production Date = DB1.Production Date
  LCL.Production_Date = DB1.Production_Date;

  // LCL.Case Quantity = DB1.Case Quantity
  LCL.Case_Quantity = DB1.Case_Quantity;

  // LCL.Case Weight = DB1.Case Weight
  LCL.Case_Weight = DB1.Case_Weight;

  // LCL.Manifest Gross Weight = DB1.Manifest Gross Weight
  LCL.Manifest_Gross_Weight = DB1.Manifest_Gross_Weight;

  ENDIF;

  ENDIF;

  ENDIF;

  //?USER: Exit processing

  //?Last Record Processing. Create WF EDI Whs Stk Txfr Diff Record.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Use LCL Ctx for Last Record.
  EXECUTE FUNCTION(RTV Sum Qty Rcvd-PalletRT) TYPE(RTVOBJ) FILE(PUAOCPP)          AC2144462;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(LCL.Manifest_Pallet_Number);
  PARAMETER(LCL.Quantity_Received_Total);
  PARAMETER(LCL.Weight_received_total);
  PARAMETER(LCL.MDER_Receipt_Date);
  PARAMETER(LCL.MDER_Receipt_Time);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.Quantity Received Total = PAR.Quantity Received Total + DB1.Quantity Received
   PAR.Quantity_Received_Total = PAR.Quantity_Received_Total + DB1.Quantity_Received;

   // PAR.Weight received total = PAR.Weight received total + DB1.Weight Received
   PAR.Weight_received_total = PAR.Weight_received_total + DB1.Weight_Received;

   // PAR.MDER Receipt Date = DB1.MDER Receipt Date
   PAR.MDER_Receipt_Date = DB1.MDER_Receipt_Date;

   // PAR.MDER Receipt Time = DB1.MDER Receipt Time
   PAR.MDER_Receipt_Time = DB1.MDER_Receipt_Time;

  }

  //?Record Found?
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // LCL.Diff/Discrepancy Qty = LCL.Quantity Received Total - LCL.Case Quantity
  LCL.Diff_Discrepancy_Qty = LCL.Quantity_Received_Total - LCL.Case_Quantity;

  //?Record Found?
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?EDI 944 was Rcv by Co/Ord Therefore Set Diff/Discrep Qty Else In-Trans Qty
  CASE;

  // IF PAR.Manifest Dtl Rcpt Exist is Yes
  IF PAR.Manifest_Dtl_Rcpt_Exist = 'Y';

  // LCL.Diff/Discrepancy Qty = LCL.Quantity Received Total - LCL.Case Quantity
  LCL.Diff_Discrepancy_Qty = LCL.Quantity_Received_Total - LCL.Case_Quantity;

  //?EDI 944 was Rcv by Co/Ord Therefore Set Diff/Discrep Qty Else In-Trans Qty
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.In Transit Qty = LCL.Case Quantity
  LCL.In_Transit_Qty = LCL.Case_Quantity;

  ENDIF;

  ENDIF;

  EXECUTE FUNCTION(CRT WF Whs StckTxf Dif CR) TYPE(CRTOBJ) FILE(PUA1CPP)          AC2144368;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.Load_ID);
  PARAMETER(LCL.Manifest_Pallet_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Ship_From_Warehouse);
  PARAMETER(PAR.Ship_To_Warehouse);
  PARAMETER(PAR.Scheduled_Ship_Date);
  PARAMETER(PAR.BOL_Complete_Date);
  PARAMETER(PAR.BOL_Complete_Time);
  PARAMETER(LCL.MDER_Receipt_Date);
  PARAMETER(LCL.MDER_Receipt_Time);
  PARAMETER(LCL.Item_Description_Line_1);
  PARAMETER(LCL.Production_Date);
  PARAMETER(LCL.Case_Weight);
  PARAMETER(LCL.Manifest_Gross_Weight);
  PARAMETER(LCL.Case_Quantity);
  PARAMETER(LCL.Quantity_Received_Total);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(LCL.Diff_Discrepancy_Qty);
  PARAMETER(LCL.In_Transit_Qty);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  ENDIF;

 }

 //?Will now always call PUFRXFR in case Pallet # are different.
 // Call program Crt Rcvd But Not Ship XF.
 CALL PROGRAM(Crt Rcvd But Not Ship XF) ('PUFRXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Ship_From_Warehouse);
 PARAMETER(PAR.Ship_To_Warehouse);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.BOL_Complete_Date);
 PARAMETER(LCL.BOL_Complete_Time);
 PARAMETER(LCL.Description_Line_One);
 PARAMETER('N');

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Build Detail.
 CASE;

 // IF PAR.Report Type USR is Detail
 IF PAR.Report_Type_USR = 'D';

 EXECUTE FUNCTION(Bld WhsStckTxf Diff    RT) TYPE(RTVOBJ) FILE(OMFNCPP)          AC2144375;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Ship_From_Warehouse);
 PARAMETER(PAR.Ship_To_Warehouse);
 PARAMETER(PAR.Report_Type_USR);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.BOL_Complete_Date);
 PARAMETER(LCL.BOL_Complete_Time);
 PARAMETER(LCL.Manifest_Dtl_Rcpt_Exist);
 {
  //?USER: Initialize routine

  // LCL.First Time Flag = CND.Yes
  LCL.First_Time_Flag = 'Y';

  // LCL.Case Quantity = CON.*ZERO
  LCL.Case_Quantity = *ZERO;

  // LCL.Case Weight = CON.*ZERO
  LCL.Case_Weight = *ZERO;

  // LCL.Manifest Gross Weight = CON.*ZERO
  LCL.Manifest_Gross_Weight = *ZERO;

  //?USER: Process Data record

  //?Initialize.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Diff/Discrepancy Qty = CON.*ZERO
  LCL.Diff_Discrepancy_Qty = *ZERO;

  // LCL.In Transit Qty = CON.*ZERO
  LCL.In_Transit_Qty = *ZERO;

  ENDIF;

  //?Build for Detail Report Version.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Save First Time Through Pallet/Item Code.
  CASE;

  // IF LCL.First Time Flag is Yes
  IF LCL.First_Time_Flag = 'Y';

  // LCL.First Time Flag = CND.NO
  LCL.First_Time_Flag = 'N';

  // LCL.Manifest Pallet Number = DB1.Manifest Pallet Number
  LCL.Manifest_Pallet_Number = DB1.Manifest_Pallet_Number;

  // LCL.Item Code = DB1.Item Code
  LCL.Item_Code = DB1.Item_Code;

  //?To save for oldest Production Date.
  // LCL.Production Date = DB1.Production Date
  LCL.Production_Date = DB1.Production_Date;

  ENDIF;

  //?Sum Qty/Wgt each time Pallet/Item Code are the same.
  CASE;

  // IF DB1.Manifest Pallet Number EQ LCL.Manifest Pallet Number
  IF DB1.Manifest_Pallet_Number = LCL.Manifest_Pallet_Number;

  // AND DB1.Item Code EQ LCL.Item Code
  AND DB1.Item_Code = LCL.Item_Code;

  // LCL.Case Quantity = LCL.Case Quantity + DB1.Case Quantity
  LCL.Case_Quantity = LCL.Case_Quantity + DB1.Case_Quantity;

  // LCL.Case Weight = LCL.Case Weight + DB1.Case Weight
  LCL.Case_Weight = LCL.Case_Weight + DB1.Case_Weight;

  // LCL.Manifest Gross Weight = LCL.Manifest Gross Weight + DB1.Manifest Gross Weight
  LCL.Manifest_Gross_Weight = LCL.Manifest_Gross_Weight + DB1.Manifest_Gross_Weight;

  //?Save the Oldest Production Date.
  CASE;

  // IF DB1.Production Date LT LCL.Production Date
  IF DB1.Production_Date < LCL.Production_Date;

  // LCL.Production Date = DB1.Production Date
  LCL.Production_Date = DB1.Production_Date;

  ENDIF;

  //?Sum Qty/Wgt each time Pallet/Item Code are the same.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Create WF EDI Whs Stk Txfr Diff & Reset Total Qty/Wgt & LCL Fields.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Create WF EDI Whs Stk Txfr Diff Record.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?LCL Ctx = Previous Pallet/Item.
  EXECUTE FUNCTION(Rtv Desc Line 1&2      RT) TYPE(RTVOBJ) FILE(CABZREP)          AC2139542;
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Item_Code);
  PARAMETER(LCL.Item_Description_Line_1);
  PARAMETER(NLL.Description_Line_Two);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  EXECUTE FUNCTION(RTV Sum Qty Rcvd-PalletRT) TYPE(RTVOBJ) FILE(PUAOCPP)          AC2144462;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(LCL.Item_Code);
  PARAMETER(LCL.Manifest_Pallet_Number);
  PARAMETER(LCL.Quantity_Received_Total);
  PARAMETER(LCL.Weight_received_total);
  PARAMETER(LCL.MDER_Receipt_Date);
  PARAMETER(LCL.MDER_Receipt_Time);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.Quantity Received Total = PAR.Quantity Received Total + DB1.Quantity Received
   PAR.Quantity_Received_Total = PAR.Quantity_Received_Total + DB1.Quantity_Received;

   // PAR.Weight received total = PAR.Weight received total + DB1.Weight Received
   PAR.Weight_received_total = PAR.Weight_received_total + DB1.Weight_Received;

   // PAR.MDER Receipt Date = DB1.MDER Receipt Date
   PAR.MDER_Receipt_Date = DB1.MDER_Receipt_Date;

   // PAR.MDER Receipt Time = DB1.MDER Receipt Time
   PAR.MDER_Receipt_Time = DB1.MDER_Receipt_Time;

  }

  //?Record Found?
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // LCL.Diff/Discrepancy Qty = LCL.Quantity Received Total - LCL.Case Quantity
  LCL.Diff_Discrepancy_Qty = LCL.Quantity_Received_Total - LCL.Case_Quantity;

  //?Record Found?
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?EDI 944 was Rcv by Co/Ord Therefore Set Diff/Discrep Qty Else In-Trans Qty
  CASE;

  // IF PAR.Manifest Dtl Rcpt Exist is Yes
  IF PAR.Manifest_Dtl_Rcpt_Exist = 'Y';

  // LCL.Diff/Discrepancy Qty = LCL.Quantity Received Total - LCL.Case Quantity
  LCL.Diff_Discrepancy_Qty = LCL.Quantity_Received_Total - LCL.Case_Quantity;

  //?EDI 944 was Rcv by Co/Ord Therefore Set Diff/Discrep Qty Else In-Trans Qty
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.In Transit Qty = LCL.Case Quantity
  LCL.In_Transit_Qty = LCL.Case_Quantity;

  ENDIF;

  ENDIF;

  EXECUTE FUNCTION(CRT WF Whs StckTxf Dif CR) TYPE(CRTOBJ) FILE(PUA1CPP)          AC2144368;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.Load_ID);
  PARAMETER(LCL.Manifest_Pallet_Number);
  PARAMETER(LCL.Item_Code);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Ship_From_Warehouse);
  PARAMETER(PAR.Ship_To_Warehouse);
  PARAMETER(PAR.Scheduled_Ship_Date);
  PARAMETER(PAR.BOL_Complete_Date);
  PARAMETER(PAR.BOL_Complete_Time);
  PARAMETER(LCL.MDER_Receipt_Date);
  PARAMETER(LCL.MDER_Receipt_Time);
  PARAMETER(LCL.Item_Description_Line_1);
  PARAMETER(LCL.Production_Date);
  PARAMETER(LCL.Case_Weight);
  PARAMETER(LCL.Manifest_Gross_Weight);
  PARAMETER(LCL.Case_Quantity);
  PARAMETER(LCL.Quantity_Received_Total);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(LCL.Diff_Discrepancy_Qty);
  PARAMETER(LCL.In_Transit_Qty);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  ENDIF;

  // LCL.Manifest Pallet Number = DB1.Manifest Pallet Number
  LCL.Manifest_Pallet_Number = DB1.Manifest_Pallet_Number;

  // LCL.Item Code = DB1.Item Code
  LCL.Item_Code = DB1.Item_Code;

  // LCL.Production Date = DB1.Production Date
  LCL.Production_Date = DB1.Production_Date;

  // LCL.Case Quantity = DB1.Case Quantity
  LCL.Case_Quantity = DB1.Case_Quantity;

  // LCL.Case Weight = DB1.Case Weight
  LCL.Case_Weight = DB1.Case_Weight;

  // LCL.Manifest Gross Weight = DB1.Manifest Gross Weight
  LCL.Manifest_Gross_Weight = DB1.Manifest_Gross_Weight;

  ENDIF;

  ENDIF;

  ENDIF;

  //?USER: Exit processing

  //?Last Record Processing. Create WF EDI Whs Stk Txfr Diff Record.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Use LCL Ctx for Last Record.
  EXECUTE FUNCTION(Rtv Desc Line 1&2      RT) TYPE(RTVOBJ) FILE(CABZREP)          AC2139542;
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Item_Code);
  PARAMETER(LCL.Item_Description_Line_1);
  PARAMETER(NLL.Description_Line_Two);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  EXECUTE FUNCTION(RTV Sum Qty Rcvd-PalletRT) TYPE(RTVOBJ) FILE(PUAOCPP)          AC2144462;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(LCL.Item_Code);
  PARAMETER(LCL.Manifest_Pallet_Number);
  PARAMETER(LCL.Quantity_Received_Total);
  PARAMETER(LCL.Weight_received_total);
  PARAMETER(LCL.MDER_Receipt_Date);
  PARAMETER(LCL.MDER_Receipt_Time);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.Quantity Received Total = PAR.Quantity Received Total + DB1.Quantity Received
   PAR.Quantity_Received_Total = PAR.Quantity_Received_Total + DB1.Quantity_Received;

   // PAR.Weight received total = PAR.Weight received total + DB1.Weight Received
   PAR.Weight_received_total = PAR.Weight_received_total + DB1.Weight_Received;

   // PAR.MDER Receipt Date = DB1.MDER Receipt Date
   PAR.MDER_Receipt_Date = DB1.MDER_Receipt_Date;

   // PAR.MDER Receipt Time = DB1.MDER Receipt Time
   PAR.MDER_Receipt_Time = DB1.MDER_Receipt_Time;

  }

  //?Record Found?
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // LCL.Diff/Discrepancy Qty = LCL.Quantity Received Total - LCL.Case Quantity
  LCL.Diff_Discrepancy_Qty = LCL.Quantity_Received_Total - LCL.Case_Quantity;

  //?Record Found?
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?EDI 944 was Rcv by Co/Ord Therefore Set Diff/Discrep Qty Else In-Trans Qty
  CASE;

  // IF PAR.Manifest Dtl Rcpt Exist is Yes
  IF PAR.Manifest_Dtl_Rcpt_Exist = 'Y';

  // LCL.Diff/Discrepancy Qty = LCL.Quantity Received Total - LCL.Case Quantity
  LCL.Diff_Discrepancy_Qty = LCL.Quantity_Received_Total - LCL.Case_Quantity;

  //?EDI 944 was Rcv by Co/Ord Therefore Set Diff/Discrep Qty Else In-Trans Qty
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.In Transit Qty = LCL.Case Quantity
  LCL.In_Transit_Qty = LCL.Case_Quantity;

  ENDIF;

  ENDIF;

  EXECUTE FUNCTION(CRT WF Whs StckTxf Dif CR) TYPE(CRTOBJ) FILE(PUA1CPP)          AC2144368;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.Load_ID);
  PARAMETER(LCL.Manifest_Pallet_Number);
  PARAMETER(LCL.Item_Code);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Ship_From_Warehouse);
  PARAMETER(PAR.Ship_To_Warehouse);
  PARAMETER(PAR.Scheduled_Ship_Date);
  PARAMETER(PAR.BOL_Complete_Date);
  PARAMETER(PAR.BOL_Complete_Time);
  PARAMETER(LCL.MDER_Receipt_Date);
  PARAMETER(LCL.MDER_Receipt_Time);
  PARAMETER(LCL.Item_Description_Line_1);
  PARAMETER(LCL.Production_Date);
  PARAMETER(LCL.Case_Weight);
  PARAMETER(LCL.Manifest_Gross_Weight);
  PARAMETER(LCL.Case_Quantity);
  PARAMETER(LCL.Quantity_Received_Total);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(LCL.Diff_Discrepancy_Qty);
  PARAMETER(LCL.In_Transit_Qty);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  ENDIF;

 }

 // Call program Crt Rcvd But Not Ship XF.
 CALL PROGRAM(Crt Rcvd But Not Ship XF) ('PUFRXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Ship_From_Warehouse);
 PARAMETER(PAR.Ship_To_Warehouse);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.BOL_Complete_Date);
 PARAMETER(LCL.BOL_Complete_Time);
 PARAMETER(*BLANK);
 PARAMETER('N');

 ENDIF;

 //?Build Summary. Check Qty Rcvd > Qty Ship to Build WF Whs Stck Txf Dif.
 CASE;

 // IF PAR.Report Type USR is Summary
 IF PAR.Report_Type_USR = 'S';

 EXECUTE FUNCTION(Bld WhsStckTxf Diff    RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC2156767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Ship_From_Warehouse);
 PARAMETER(PAR.Ship_To_Warehouse);
 PARAMETER(PAR.Report_Type_USR);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.BOL_Complete_Date);
 PARAMETER(LCL.BOL_Complete_Time);
 PARAMETER(LCL.Manifest_Dtl_Rcpt_Exist);
 {
  //?USER: Initialize routine

  // LCL.First Time Flag = CND.Yes
  LCL.First_Time_Flag = 'Y';

  // LCL.Case Quantity = CON.*ZERO
  LCL.Case_Quantity = *ZERO;

  // LCL.Case Weight = CON.*ZERO
  LCL.Case_Weight = *ZERO;

  // LCL.Manifest Gross Weight = CON.*ZERO
  LCL.Manifest_Gross_Weight = *ZERO;

  //?USER: Process Data record

  //?Initialize.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Diff/Discrepancy Qty = CON.*ZERO
  LCL.Diff_Discrepancy_Qty = *ZERO;

  // LCL.In Transit Qty = CON.*ZERO
  LCL.In_Transit_Qty = *ZERO;

  ENDIF;

  //?Build for Summary Report Version.
  CASE;

  // IF DB1.Detail Line Status is Not cancelled
  IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

  //?Save First Time Through Item Code.
  CASE;

  // IF LCL.First Time Flag is Yes
  IF LCL.First_Time_Flag = 'Y';

  // LCL.First Time Flag = CND.NO
  LCL.First_Time_Flag = 'N';

  // LCL.Item Code = DB1.Item Code
  LCL.Item_Code = DB1.Item_Code;

  ENDIF;

  //?Sum Qty/Wgt each time Item Code are the same.
  CASE;

  // IF DB1.Item Code EQ LCL.Item Code
  IF DB1.Item_Code = LCL.Item_Code;

  // LCL.Case Quantity = LCL.Case Quantity + DB1.Quantity Shipped Total
  LCL.Case_Quantity = LCL.Case_Quantity + DB1.Quantity_Shipped_Total;

  // LCL.Case Weight = LCL.Case Weight + DB1.Weight Shipped Total
  LCL.Case_Weight = LCL.Case_Weight + DB1.Weight_Shipped_Total;

  //?Sum Qty/Wgt each time Item Code are the same.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Create WF EDI Whs Stk Txfr Diff & Reset Total Qty/Wgt & LCL Fields.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Create WF EDI Whs Stk Txfr Diff Record.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?LCL Ctx = Previous Item Code.
  EXECUTE FUNCTION(Rtv Desc Line 1&2      RT) TYPE(RTVOBJ) FILE(CABZREP)          AC2139542;
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Item_Code);
  PARAMETER(LCL.Item_Description_Line_1);
  PARAMETER(NLL.Description_Line_Two);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  EXECUTE FUNCTION(RTV Rcvd Date/Time/Qty2RT) TYPE(RTVOBJ) FILE(PUAOCPP)          AC2156768;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(LCL.Item_Code);
  PARAMETER(LCL.Quantity_Received);
  PARAMETER(LCL.MDER_Receipt_Date);
  PARAMETER(LCL.MDER_Receipt_Time);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.Quantity Received = PAR.Quantity Received + DB1.Quantity Received
   PAR.Quantity_Received = PAR.Quantity_Received + DB1.Quantity_Received;

   // PAR.MDER Receipt Date = DB1.MDER Receipt Date
   PAR.MDER_Receipt_Date = DB1.MDER_Receipt_Date;

   // PAR.MDER Receipt Time = DB1.MDER Receipt Time
   PAR.MDER_Receipt_Time = DB1.MDER_Receipt_Time;

  }

  //?Record Found?
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // LCL.Diff/Discrepancy Qty = LCL.Quantity Received - LCL.Case Quantity
  LCL.Diff_Discrepancy_Qty = LCL.Quantity_Received - LCL.Case_Quantity;

  //?Record Found?
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?EDI 944 was Rcv by Co/Ord Therefore Set Diff/Discrep Qty Else In-Trans Qty
  CASE;

  // IF PAR.Manifest Dtl Rcpt Exist is Yes
  IF PAR.Manifest_Dtl_Rcpt_Exist = 'Y';

  // LCL.Diff/Discrepancy Qty = LCL.Quantity Received - LCL.Case Quantity
  LCL.Diff_Discrepancy_Qty = LCL.Quantity_Received - LCL.Case_Quantity;

  //?EDI 944 was Rcv by Co/Ord Therefore Set Diff/Discrep Qty Else In-Trans Qty
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.In Transit Qty = LCL.Case Quantity
  LCL.In_Transit_Qty = LCL.Case_Quantity;

  ENDIF;

  ENDIF;

  EXECUTE FUNCTION(CRT WF Whs StckTxf Dif CR) TYPE(CRTOBJ) FILE(PUA1CPP)          AC2144368;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.Load_ID);
  PARAMETER(*ZERO);
  PARAMETER(LCL.Item_Code);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Ship_From_Warehouse);
  PARAMETER(PAR.Ship_To_Warehouse);
  PARAMETER(PAR.Scheduled_Ship_Date);
  PARAMETER(PAR.BOL_Complete_Date);
  PARAMETER(PAR.BOL_Complete_Time);
  PARAMETER(LCL.MDER_Receipt_Date);
  PARAMETER(LCL.MDER_Receipt_Time);
  PARAMETER(LCL.Item_Description_Line_1);
  PARAMETER(*ZERO);
  PARAMETER(LCL.Case_Weight);
  PARAMETER(*ZERO);
  PARAMETER(LCL.Case_Quantity);
  PARAMETER(LCL.Quantity_Received);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(LCL.Diff_Discrepancy_Qty);
  PARAMETER(LCL.In_Transit_Qty);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  ENDIF;

  // LCL.Item Code = DB1.Item Code
  LCL.Item_Code = DB1.Item_Code;

  // LCL.Case Quantity = DB1.Quantity Shipped Total
  LCL.Case_Quantity = DB1.Quantity_Shipped_Total;

  // LCL.Case Weight = DB1.Weight Shipped Total
  LCL.Case_Weight = DB1.Weight_Shipped_Total;

  ENDIF;

  ENDIF;

  ENDIF;

  //?USER: Exit processing

  //?Last Record Processing, Create WF EDI Whs Stk Txfr Diff Record.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?LCL Ctx = Previous Item Code.
  EXECUTE FUNCTION(Rtv Desc Line 1&2      RT) TYPE(RTVOBJ) FILE(CABZREP)          AC2139542;
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Item_Code);
  PARAMETER(LCL.Item_Description_Line_1);
  PARAMETER(NLL.Description_Line_Two);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  EXECUTE FUNCTION(RTV Rcvd Date/Time/Qty2RT) TYPE(RTVOBJ) FILE(PUAOCPP)          AC2156768;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(LCL.Item_Code);
  PARAMETER(LCL.Quantity_Received);
  PARAMETER(LCL.MDER_Receipt_Date);
  PARAMETER(LCL.MDER_Receipt_Time);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.Quantity Received = PAR.Quantity Received + DB1.Quantity Received
   PAR.Quantity_Received = PAR.Quantity_Received + DB1.Quantity_Received;

   // PAR.MDER Receipt Date = DB1.MDER Receipt Date
   PAR.MDER_Receipt_Date = DB1.MDER_Receipt_Date;

   // PAR.MDER Receipt Time = DB1.MDER Receipt Time
   PAR.MDER_Receipt_Time = DB1.MDER_Receipt_Time;

  }

  //?Record Found?
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // LCL.Diff/Discrepancy Qty = LCL.Quantity Received - LCL.Case Quantity
  LCL.Diff_Discrepancy_Qty = LCL.Quantity_Received - LCL.Case_Quantity;

  //?Record Found?
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?EDI 944 was Rcv by Co/Ord Therefore Set Diff/Discrep Qty Else In-Trans Qty
  CASE;

  // IF PAR.Manifest Dtl Rcpt Exist is Yes
  IF PAR.Manifest_Dtl_Rcpt_Exist = 'Y';

  // LCL.Diff/Discrepancy Qty = LCL.Quantity Received - LCL.Case Quantity
  LCL.Diff_Discrepancy_Qty = LCL.Quantity_Received - LCL.Case_Quantity;

  //?EDI 944 was Rcv by Co/Ord Therefore Set Diff/Discrep Qty Else In-Trans Qty
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.In Transit Qty = LCL.Case Quantity
  LCL.In_Transit_Qty = LCL.Case_Quantity;

  ENDIF;

  ENDIF;

  EXECUTE FUNCTION(CRT WF Whs StckTxf Dif CR) TYPE(CRTOBJ) FILE(PUA1CPP)          AC2144368;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.Load_ID);
  PARAMETER(*ZERO);
  PARAMETER(LCL.Item_Code);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Ship_From_Warehouse);
  PARAMETER(PAR.Ship_To_Warehouse);
  PARAMETER(PAR.Scheduled_Ship_Date);
  PARAMETER(PAR.BOL_Complete_Date);
  PARAMETER(PAR.BOL_Complete_Time);
  PARAMETER(LCL.MDER_Receipt_Date);
  PARAMETER(LCL.MDER_Receipt_Time);
  PARAMETER(LCL.Item_Description_Line_1);
  PARAMETER(*ZERO);
  PARAMETER(LCL.Case_Weight);
  PARAMETER(*ZERO);
  PARAMETER(LCL.Case_Quantity);
  PARAMETER(LCL.Quantity_Received);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(LCL.Diff_Discrepancy_Qty);
  PARAMETER(LCL.In_Transit_Qty);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  ENDIF;

 }

 ENDIF;

 ENDIF;

}


