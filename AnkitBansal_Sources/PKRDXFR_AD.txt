// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKRDXFR
// ?Date: 14.08.2025 Time: 02:52:34
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//?                      length from 5 to 7.
ENDDO;

EXECUTE FUNCTION(HPE085) TYPE(EXCINTFUN)                                        AB1189549;
{
 //?Execute internal function

 //?Hog Pop by farm site
}


EXECUTE FUNCTION(Del Prd Lean Dist     RT) TYPE(RTVOBJ) FILE(PKC0CPP)           AB1148227;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Voucher_Payment_Date);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Del CrcSum Prd Ln Dst DL) TYPE(DLTOBJ) FILE(PKC0CPP)           AB1146612;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PY_As_of_Kill_Date);
 PARAMETER(DB1.PLDY_Lean);
}


EXECUTE FUNCTION(Del Prd YTD           RT) TYPE(RTVOBJ) FILE(PKCZCPP)           AB1148228;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Voucher_Payment_Date);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Del Crc Sum Prd YTD   DL) TYPE(DLTOBJ) FILE(PKCZCPP)           AB1146609;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PY_As_of_Kill_Date);
}


EXECUTE FUNCTION(Cpy to Curr Kill Date RT) TYPE(RTVOBJ) FILE(PKC0CPP)           AB1147060;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Voucher_Payment_Date);
{
 //?USER: Initialize routine

 // WRK.First Time Flag Usr = CND.Yes
 WRK.First_Time_Flag_Usr = 'Y';

 //?USER: Process Data record

 CASE;

 // IF WRK.First Time Flag Usr is Yes
 IF WRK.First_Time_Flag_Usr = 'Y';

 // WRK.PY As of Kill Date = DB1.PY As of Kill Date
 WRK.PY_As_of_Kill_Date = DB1.PY_As_of_Kill_Date;

 // WRK.First Time Flag Usr = CND.No
 WRK.First_Time_Flag_Usr = 'N';

 ENDIF;

 //?Quit if Par and Wrk are same.
 CASE;

 // IF WRK.PY As of Kill Date EQ PAR.PY As of Kill Date
 IF WRK.PY_As_of_Kill_Date = PAR.PY_As_of_Kill_Date;

 QUIT;

 ENDIF;

 //?Quit if the date changes.
 CASE;

 // IF DB1.PY As of Kill Date NE WRK.PY As of Kill Date
 IF DB1.PY_As_of_Kill_Date <> WRK.PY_As_of_Kill_Date;

 QUIT;

 ENDIF;

 EXECUTE FUNCTION(Crt CrcSum Prd Ln Dst CR) TYPE(CRTOBJ) FILE(PKC0CPP)           AB1146610;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(PAR.PY_As_of_Kill_Date);
 PARAMETER(DB1.PLDY_Lean);
 PARAMETER(DB1.PLDY_Head_Killed);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

}


EXECUTE FUNCTION(Cpy to Curr Kill Date RT) TYPE(RTVOBJ) FILE(PKCZCPP)           AB1147063;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Voucher_Payment_Date);
{
 //?USER: Initialize routine

 // *MO.VE             1183529*Bu = ilt. in functions
 WRK.First_Time_Flag_Usr = 'Y';

 //?USER: Process Data record

 CASE;

 // IF WRK.First Time Flag Usr is Yes
 IF WRK.First_Time_Flag_Usr = 'Y';

 // *MO.VE             1183529*Bu = ilt. in functions
 WRK.PY_As_of_Kill_Date = DB1.PY_As_of_Kill_Date;

 // *MO.VE             1183529*Bu = ilt. in functions
 WRK.First_Time_Flag_Usr = 'N';

 ENDIF;

 //?Quit if WRK = PAR
 CASE;

 // IF WRK.PY As of Kill Date EQ PAR.PY As of Kill Date
 IF WRK.PY_As_of_Kill_Date = PAR.PY_As_of_Kill_Date;

 QUIT;

 ENDIF;

 //?Quit if date changes
 CASE;

 // IF WRK.PY As of Kill Date NE DB1.PY As of Kill Date
 IF WRK.PY_As_of_Kill_Date <> DB1.PY_As_of_Kill_Date;

 QUIT;

 ENDIF;

 EXECUTE FUNCTION(Crt Crc Sum Prd YTD   CR) TYPE(CRTOBJ) FILE(PKCZCPP)           AB1146607;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(PAR.PY_As_of_Kill_Date);
 PARAMETER(DB1.PY_Head_Received);
 PARAMETER(DB1.PY_Head_Killed);
 PARAMETER(DB1.PY_Live_Wgt);
 PARAMETER(DB1.PY_Hot_Wgt);
 PARAMETER(DB1.PY_Lean_Prem_Ded_Amt);
 PARAMETER(DB1.PY_Sort_Discount_Amt);
 PARAMETER(DB1.PY_Avg_Live_Wgt);
 PARAMETER(DB1.PY_Actual_Yield);
 PARAMETER(DB1.PY_Avg_Lean);
 PARAMETER(DB1.PY_Lean_Prem_Ded_Lv_CWT);
 PARAMETER(DB1.PY_Sort_Discount_Lv_CWT);
 PARAMETER(DB1.PY_Adj_Live_Weight);
 PARAMETER(DB1.PY_Adj_Avg_Live_Weight);
 PARAMETER(DB1.PY_Adj_Actual_Yield);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

}


EXECUTE FUNCTION(Del Tattoo Lean Dist  RT) TYPE(RTVOBJ) FILE(PKCYCPP)           AB1148226;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Voucher_Payment_Date);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Del CrcSum Tto Ln Dst DL) TYPE(DLTOBJ) FILE(PKCYCPP)           AB1146606;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.CTLD_Lean);
}


EXECUTE FUNCTION(Tst Tto/Prd Lean Dist RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1219026;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Voucher_Payment_Date);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(HPE085) TYPE(EXCINTFUN)                                        AB1189549;
 {
  //?Execute internal function

  //?Hog Pop by farm site
 }

 //? -- RTV farm site to send to PF and RTV to output to HogPopDist
 //?USER: Process Data record

 // WRK.Farm Site USR = CON.*ZERO
 WRK.Farm_Site_USR = *ZERO;

 //?For internal , get farm site from HPS
 CASE;

 // IF DB1.TH Source Type is Internal
 IF DB1.TH_Source_Type = 'I';

 //?* 01/27/03 PKD PK0495 Replaced HP255 with HP249.
 // Call program Z1v HPS Farm Info     UP.
 CALL PROGRAM(Z1v HPS Farm Info     UP) ('HP249');
 PARAMETER(PGM.*Return_code);
 PARAMETER(DB1.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.Farm_site_Name_f_HPS_USR);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(WRK.HPS_FS_Comp_Relation_USR);
 PARAMETER(WRK.State);

 ENDIF;

 CASE;

 // IF DB1.TH Payment Type is Carcass Merit
 IF DB1.TH_Payment_Type = 'C';

 // Call program Zzz Cr/Tto/Prd Ln Dist PF.
 CALL PROGRAM(Zzz Cr/Tto/Prd Ln Dist PF) ('PKREPFR');
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TH_Source_Type);
 PARAMETER(DB1.TH_Payment_Type);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.TH_Source_Code);
 PARAMETER(PAR.TH_Voucher_Payment_Date);
 PARAMETER(WRK.Farm_Site_USR);

 // Execute command - 'Del Spool File'
 EXECUTE COMMAND(PRK0450);
 PARAMETER('PKREPFR$');

 ENDIF;

}


