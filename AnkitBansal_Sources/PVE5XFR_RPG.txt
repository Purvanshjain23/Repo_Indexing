     H/TITLE Crt EDI 856 DTL & TARE DN Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 05/13/24  Time  : 14:50:01
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FOMBFCPM7  IF   E           K DISK
      * RSQ : Order Header TRG          Load/BTC#/Co/PO#/Order
      *
     FPNGQREL1  IF   E           K DISK
      * RTV : EDI Bill To Interchange   Retrieval index
      *
     FOPBGWKLA  IF   E           K DISK
      * RSQ : Order Detail              co/
      *
     FCAADREL1  IF   E           K DISK
      * RTV : Warehouse Codes           Retrieval index       NV
      *
     FPNG0REL1  IF   E           K DISK
      * RTV : EDI WHS Interchange       Retrieval index
      *
     FPMAMREL1  IF   E           K DISK
      * RTV : Order Header Extension    Retrieval index
      *
     FPBB8REL1  IF   E           K DISK
      * RTV : Trade Partner Control     Retrieval index
      *
     FECP004L8  IF   E           K DISK
      * RSQ : EDI Purchase Order Header Trade Partner/PO Number
      *
     FOMBYREL1  IF   E           K DISK
      * RTV : Item Default              Retrieval index
      *
     FOMFNCPLF  IF   E           K DISK
      * RSQ : Manifest Detail           Co/Ord/Pal/Itm/Sq/SSq/CS
      *
     FOPBGWKL1  IF   E           K DISK
      * RTV : Order Detail              Retrieval index
      *
     FPBBTREL1  IF   E           K DISK
      * RTV : Item Default Extension    Retrieval index
      *
     FOMFNCPL6  IF   E           K DISK
      * RSQ : Manifest Detail           Co/Ord/Item/Prod Date
      *
     FPUBQREL1  IF   E           K DISK
      * RTV : Customer Item Ref for EDI Retrieval index
      *
     FPOBIREL1  IF   E           K DISK
      * RTV : Customer Item Reference   Retrieval index
      *
     FPUBRREL2  IF   E           K DISK
      * RSQ : Item Shelf Life Upload    Item/ID
      *
     FCAABREL1  IF   E           K DISK
      * RTV : Company Name and Address  Retrieval index       V
      *
     FCABZREL1  IF   E           K DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FPDIOREL1  IF   E           K DISK
      * RTV : Item Bill Of Material     Retrieval index
      *
     FPDIORELB  IF   E           K DISK
      * RSQ : Item Bill Of Material     Co/Item/Component,Sel "S
      *
     FOPBGWKLD  IF   E           K DISK
      * RSQ : Order Detail              Co/Order#/Item/Whse Not
      *
     FECP140L3  IF   E           K DISK
      * RSQ : EDI Adv Ship Ntc Dtl V2   Sgt/Order/Seq/Item/Palle
      *
     FECP142L0  IF A E           K DISK
      * UPD : EDI Adv Ship Ntc Order V2 Update index
      *
     FECP140L0  UF A E           K DISK
      * UPD : EDI Adv Ship Ntc Dtl V2   Update index
      *
     FECP145L0  IF A E           K DISK
      * UPD : EDI Adv Ship Ntc Tare V2  Update index
      *
     FPMAMREL0  UF   E           K DISK
      * UPD : Order Header Extension    Update index
      *
      * Long constants
     D @CN#            S              6    DIM(02)CTDATA PERRCD(1)
     D @CN             S             25    DIM(02) ALT(@CN#)
     D YDOW            S              1     DIM(7)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * Outward parameters
     D PARC            DS            14
      * KEY : Order Header TRG          Load/BTC#/Co/Order
      * I :  Load ID
     D  PARMNB                 1      4P 0
      * I :  Bill to Customer
     D  PAB0C7                 5      8P 0
      *
     D QECP11        E DS                  EXTNAME(ECP142L0)
      * UPD : EDI Adv Ship Ntc Order V2 Update index
      * Renamed input format fields
     D  WJH9NY       E                     EXTFLD(BNH9NY)
     D  WJQ2NY       E                     EXTFLD(BNQ2NY)
     D  WJHPAA       E                     EXTFLD(BNHPAA)
     D  WJTFNA       E                     EXTFLD(BNTFNA)
     D  WJEUNZ       E                     EXTFLD(BNEUNZ)
     D  WJYTAA       E                     EXTFLD(BNYTAA)
     D  WJNVU1       E                     EXTFLD(BNNVU1)
     D  WJYIAA       E                     EXTFLD(BNYIAA)
     D  WJD9NZ       E                     EXTFLD(BND9NZ)
     D  WJFHNZ       E                     EXTFLD(BNFHNZ)
     D  WJFPNZ       E                     EXTFLD(BNFPNZ)
     D  WJFINZ       E                     EXTFLD(BNFINZ)
     D  WJENNZ       E                     EXTFLD(BNENNZ)
     D  WJEMNZ       E                     EXTFLD(BNEMNZ)
     D  WJEFNZ       E                     EXTFLD(BNEFNZ)
     D  WJEGNZ       E                     EXTFLD(BNEGNZ)
     D  WJXBDT       E                     EXTFLD(BNXBDT)
     D  WJEHNZ       E                     EXTFLD(BNEHNZ)
     D  WJP8U1       E                     EXTFLD(BNP8U1)
     D  WJFJNZ       E                     EXTFLD(BNFJNZ)
      *
      /EJECT
     D XDINT           DS
      * Internal date
     D  XDINDT                 1      7  0
     D  XDINYY                 1      3  0
     D  XDINMM                 4      5  0
     D  XDINDD                 6      7  0
      /EJECT
     D XD2T            DS
      * Internal date
     D  XDINT2                 1      7  0
     D  XDINY2                 1      3  0
     D  XDINM2                 4      5  0
     D  XDIND2                 6      7  0
     D QECP12        E DS                  EXTNAME(ECP140L0)
      * UPD : EDI Adv Ship Ntc Dtl V2   Update index
      * Renamed input format fields
     D  WVH9NY       E                     EXTFLD(BMH9NY)
     D  WVQ2NY       E                     EXTFLD(BMQ2NY)
     D  WVTFNA       E                     EXTFLD(BMTFNA)
     D  WVC4NB       E                     EXTFLD(BMC4NB)
     D  WVJJU1       E                     EXTFLD(BMJJU1)
     D  WVDPNB       E                     EXTFLD(BMDPNB)
     D  WVQ7NY       E                     EXTFLD(BMQ7NY)
     D  WVZEAA       E                     EXTFLD(BMZEAA)
     D  WVETNZ       E                     EXTFLD(BMETNZ)
     D  WVQ8NY       E                     EXTFLD(BMQ8NY)
     D  WVTCNY       E                     EXTFLD(BMTCNY)
     D  WVLET1       E                     EXTFLD(BMLET1)
     D  WVNEU1       E                     EXTFLD(BMNEU1)
     D  WVNFU1       E                     EXTFLD(BMNFU1)
     D  WVNGU1       E                     EXTFLD(BMNGU1)
     D  WVNHU1       E                     EXTFLD(BMNHU1)
     D  WVNWU1       E                     EXTFLD(BMNWU1)
     D  WVQBU1       E                     EXTFLD(BMQBU1)
     D  WVHVU1       E                     EXTFLD(BMHVU1)
     D  WVNCU1       E                     EXTFLD(BMNCU1)
     D  WVAGAB       E                     EXTFLD(BMAGAB)
     D  WVQCU1       E                     EXTFLD(BMQCU1)
     D  WVNDU1       E                     EXTFLD(BMNDU1)
     D  WVEINZ       E                     EXTFLD(BMEINZ)
     D  WVYWAA       E                     EXTFLD(BMYWAA)
     D  WVHZPR       E                     EXTFLD(BMHZPR)
     D  WVYZAA       E                     EXTFLD(BMYZAA)
     D  WVH0PR       E                     EXTFLD(BMH0PR)
     D  WVY0AA       E                     EXTFLD(BMY0AA)
     D  WVNIU1       E                     EXTFLD(BMNIU1)
     D  WVNJU1       E                     EXTFLD(BMNJU1)
     D  WVNKU1       E                     EXTFLD(BMNKU1)
     D  WVTDNY       E                     EXTFLD(BMTDNY)
     D  WVNLU1       E                     EXTFLD(BMNLU1)
     D  WVNMU1       E                     EXTFLD(BMNMU1)
     D  WVNNU1       E                     EXTFLD(BMNNU1)
     D  WVNPU1       E                     EXTFLD(BMNPU1)
     D  WVEJNZ       E                     EXTFLD(BMEJNZ)
     D  WVEKNZ       E                     EXTFLD(BMEKNZ)
     D  WVELNZ       E                     EXTFLD(BMELNZ)
      *
     D QECP13        E DS                  EXTNAME(ECP145L0)
      * UPD : EDI Adv Ship Ntc Tare V2  Update index
      * Renamed input format fields
     D  TCH9NY       E                     EXTFLD(BJH9NY)
     D  TCQ2NY       E                     EXTFLD(BJQ2NY)
     D  TCTFNA       E                     EXTFLD(BJTFNA)
     D  TCC4NB       E                     EXTFLD(BJC4NB)
     D  TCJJU1       E                     EXTFLD(BJJJU1)
     D  TCYLAA       E                     EXTFLD(BJYLAA)
     D  TCYIAA       E                     EXTFLD(BJYIAA)
     D  TCP9U1       E                     EXTFLD(BJP9U1)
     D  TCYMAA       E                     EXTFLD(BJYMAA)
     D  TCYNAA       E                     EXTFLD(BJYNAA)
     D  TCD9NZ       E                     EXTFLD(BJD9NZ)
     D  TCEBNZ       E                     EXTFLD(BJEBNZ)
     D  TCEMNZ       E                     EXTFLD(BJEMNZ)
     D  TCENNZ       E                     EXTFLD(BJENNZ)
     D  TCYPAA       E                     EXTFLD(BJYPAA)
     D  TCFKNZ       E                     EXTFLD(BJFKNZ)
     D  TCQAU1       E                     EXTFLD(BJQAU1)
      *
     D YARDCS          DS           766
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
     D QPMAM1        E DS                  EXTNAME(PMAMREL0)
      * UPD : Order Header Extension    Update index
      * Renamed input format fields
     D  TEAIC3       E                     EXTFLD(AMAIC3)
     D  TEC4NB       E                     EXTFLD(AMC4NB)
     D  TERMNB       E                     EXTFLD(AMRMNB)
     D  TERUNB       E                     EXTFLD(AMRUNB)
     D  TEXACD       E                     EXTFLD(AMXACD)
     D  TEOANA       E                     EXTFLD(AMOANA)
     D  TEHBAA       E                     EXTFLD(AMHBAA)
     D  TEJ0T1       E                     EXTFLD(AMJ0T1)
     D  TEGENY       E                     EXTFLD(AMGENY)
     D  TEJ1T1       E                     EXTFLD(AMJ1T1)
     D  TEHCAA       E                     EXTFLD(AMHCAA)
     D  TEQWDT       E                     EXTFLD(AMQWDT)
     D  TEQXDT       E                     EXTFLD(AMQXDT)
     D  TEQYDT       E                     EXTFLD(AMQYDT)
     D  TEHDAA       E                     EXTFLD(AMHDAA)
     D  TECCTX       E                     EXTFLD(AMCCTX)
     D  TEJ2T1       E                     EXTFLD(AMJ2T1)
     D  TERLNA       E                     EXTFLD(AMRLNA)
     D  TERMNA       E                     EXTFLD(AMRMNA)
     D  TEGINY       E                     EXTFLD(AMGINY)
     D  TEGFNY       E                     EXTFLD(AMGFNY)
     D  TEGGNY       E                     EXTFLD(AMGGNY)
     D  TEGHNY       E                     EXTFLD(AMGHNY)
     D  TEHEVL       E                     EXTFLD(AMHEVL)
     D  TEHFVL       E                     EXTFLD(AMHFVL)
     D  TEHGVL       E                     EXTFLD(AMHGVL)
     D  TEQZDT       E                     EXTFLD(AMQZDT)
     D  TEQ0DT       E                     EXTFLD(AMQ0DT)
     D  TEQ1DT       E                     EXTFLD(AMQ1DT)
     D  TEQ2DT       E                     EXTFLD(AMQ2DT)
     D  TEC2TX       E                     EXTFLD(AMC2TX)
     D  TEC3TX       E                     EXTFLD(AMC3TX)
     D  TEC6TX       E                     EXTFLD(AMC6TX)
     D  TECHTX       E                     EXTFLD(AMCHTX)
     D  TECITX       E                     EXTFLD(AMCITX)
     D  TECLTX       E                     EXTFLD(AMCLTX)
     D  TEB4TX       E                     EXTFLD(AMB4TX)
     D  TECUTX       E                     EXTFLD(AMCUTX)
     D  TECVTX       E                     EXTFLD(AMCVTX)
     D  TEB9TX       E                     EXTFLD(AMB9TX)
     D  TEJWSC       E                     EXTFLD(AMJWSC)
     D  TEITNY       E                     EXTFLD(AMITNY)
     D  TELMT1       E                     EXTFLD(AMLMT1)
     D  TELWAA       E                     EXTFLD(AMLWAA)
     D  TEFVST       E                     EXTFLD(AMFVST)
     D  TEF0ST       E                     EXTFLD(AMF0ST)
     D  TEF2ST       E                     EXTFLD(AMF2ST)
     D  TEF3ST       E                     EXTFLD(AMF3ST)
     D  TEJUSC       E                     EXTFLD(AMJUSC)
     D  TEJVSC       E                     EXTFLD(AMJVSC)
     D  TEV3T1       E                     EXTFLD(AMV3T1)
     D  TEV4T1       E                     EXTFLD(AMV4T1)
     D  TEV5T1       E                     EXTFLD(AMV5T1)
     D  TEV6T1       E                     EXTFLD(AMV6T1)
     D  TEV7T1       E                     EXTFLD(AMV7T1)
     D  TEV8T1       E                     EXTFLD(AMV8T1)
     D  TEV9T1       E                     EXTFLD(AMV9T1)
     D  TEWAT1       E                     EXTFLD(AMWAT1)
     D  TEWBT1       E                     EXTFLD(AMWBT1)
     D  TEWCT1       E                     EXTFLD(AMWCT1)
     D  TEWDT1       E                     EXTFLD(AMWDT1)
     D  TEQJNY       E                     EXTFLD(AMQJNY)
     D  TEQKNY       E                     EXTFLD(AMQKNY)
     D  TEQLNY       E                     EXTFLD(AMQLNY)
     D  TEP8NY       E                     EXTFLD(AMP8NY)
     D  TEP9NY       E                     EXTFLD(AMP9NY)
     D  TEQANY       E                     EXTFLD(AMQANY)
     D  TEQCNY       E                     EXTFLD(AMQCNY)
     D  TEQDNY       E                     EXTFLD(AMQDNY)
     D  TEQENY       E                     EXTFLD(AMQENY)
     D  TEQFNY       E                     EXTFLD(AMQFNY)
     D  TEQGNY       E                     EXTFLD(AMQGNY)
     D  TEQHNY       E                     EXTFLD(AMQHNY)
     D  TEQINY       E                     EXTFLD(AMQINY)
     D  TEQMNY       E                     EXTFLD(AMQMNY)
     D  TEMYU1       E                     EXTFLD(AMMYU1)
     D  TEJXSC       E                     EXTFLD(AMJXSC)
     D  TEJYSC       E                     EXTFLD(AMJYSC)
     D  TEJZSC       E                     EXTFLD(AMJZSC)
     D  TEJ0SC       E                     EXTFLD(AMJ0SC)
     D  TEMZU1       E                     EXTFLD(AMMZU1)
     D  TEM0U1       E                     EXTFLD(AMM0U1)
     D  TEM1U1       E                     EXTFLD(AMM1U1)
     D  TEM2U1       E                     EXTFLD(AMM2U1)
     D  TEM3U1       E                     EXTFLD(AMM3U1)
     D  TEW5DT       E                     EXTFLD(AMW5DT)
     D  TEW6DT       E                     EXTFLD(AMW6DT)
     D  TEUVST       E                     EXTFLD(AMUVST)
     D  TEUWST       E                     EXTFLD(AMUWST)
     D  TEUXST       E                     EXTFLD(AMUXST)
     D  TEVSST       E                     EXTFLD(AMVSST)
     D  TEAATM       E                     EXTFLD(AMAATM)
     D  TEAYNA       E                     EXTFLD(AMAYNA)
     D  TEA0NA       E                     EXTFLD(AMA0NA)
     D  TEAXDT       E                     EXTFLD(AMAXDT)
      *
     D YBRDCS          DS           894
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              9  0
     D  WP0002         S              1
     D  WP0003         S              6
     D  WP0004         S             11  2
     D  WP0005         S             11  2
     D  WP0006         S             11  2
     D  WP0007         S              7  0
     D  WP0008         S              7  0
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  WN0001         S              1
     D  WN0002         S             11  2
     D  WN0003         S             11  2
     D  WN0004         S             11  2
     D  WN0005         S              7  0
     D  WN0006         S              7  0
     D  WN0007         S             35
     D  WN0008         S              1
     D  YL0001         S              1
     D  YL0002         S              2
     D  WQSA01         S                   LIKE(WARMNB)
     D  WQSA02         S                   LIKE(WAB0C7)
     D  WQSA03         S                   LIKE(WAAIC3)
     D  YL0003         S              6
     D  YN0001         S              6
     D  YN0002         S              3
     D  YL0004         S              3
     D  WL0001         S              3  0
     D  WL0002         S              7  0
     D  WL0003         S              3  0
     D  WL0004         S              3  0
     D  WL0005         S              3
     D  WL0006         S              6
     D  WQSC01         S                   LIKE(WCAIC3)
     D  WQSC02         S                   LIKE(WCC4NB)
     D  YL0005         S              1
     D  YL0006         S              1
     D  YN0003         S              1
     D  WL0007         S              3
     D  WL0008         S              1
     D  WL0009         S              1
     D  WL0010         S              1
     D  Y0CX01         S              1
     D  YL0007         S              1
     D  YL0008         S              3
     D  YL0009         S              1
     D  WL0011         S              7  0
     D  WL0012         S              6
     D  WL0013         S              6
     D  WL0014         S              3
     D  WL0015         S              1
     D  YL0010         S              1
     D  WQ0001         S              3  0
     D  WQ0002         S              7  0
     D  WQ0003         S              6
     D  WQ0004         S              1
     D  W0CLPG         S             10
     D  YN0004         S              5
     D  YL0011         S              1
     D  YN0005         S              1
     D  YL0012         S              1
     D  YL0013         S              1
     D  WQ0005         S              1
     D  WQ0006         S              1
     D  WQ0007         S              1
     D  YL0014         S             15
     D  YL0015         S              7
     D  ZQ             S              5  0
     D  YL0016         S              5
     D  YL0017         S              8  0
     D  YL0018         S              8  0
     D  YL0019         S             15
     D  WL0016         S              3  0
     D  WL0017         S              7  0
     D  WL0018         S             15
     D  WL0019         S              6
     D  WL0020         S             22
     D  WL0021         S             30
     D  WQSJ01         S                   LIKE(WHJ5NX)
     D  WQSJ02         S                   LIKE(WHPONO)
     D  YL0020         S              7  0
     D  YL0021         S             11  2
     D  YL0022         S             11  2
     D  YL0023         S             11  2
     D  YL0024         S              7  0
     D  WL0022         S              3  0
     D  WL0023         S              7  0
     D  WL0024         S             11  2
     D  WL0025         S             11  2
     D  WL0026         S             11  2
     D  WL0027         S              7  0
     D  YL0025         S              1
     D  WQSK01         S                   LIKE(WCAIC3)
     D  WQSK02         S                   LIKE(WCC4NB)
     D  YL0026         S             11  2
     D  YL0027         S             11  2
     D  WQ0008         S              3  0
     D  WQ0009         S              7  0
     D  WQ0010         S              3  0
     D  WQ0011         S              3  0
     D  WQ0012         S             11  2
     D  WQ0013         S             11  2
     D  WQ0014         S              9  2
     D  YL0028         S              1
     D  YL0029         S              7  0
     D  YL0030         S              7  0
     D  WL0028         S              7  0
     D  WL0029         S              1
     D  WL0030         S              7  0
     D  WL0031         S              7  0
     D  YL0031         S              7  0
     D  WQ0015         S              3  0
     D  WQ0016         S              7  0
     D  WQ0017         S              7  0
     D  WL0032         S              9  0
     D  WL0033         S              7  0
     D  WL0034         S              6
     D  WL0035         S             15
     D  WL0036         S              8  0
     D  WL0037         S              2
     D  WL0038         S             35
     D  WL0039         S              5
     D  WL0040         S              7  0
     D  WL0041         S              7  0
     D  WL0042         S              7  0
     D  WL0043         S              7  0
     D  WL0044         S              9  1
     D  WL0045         S              9  1
     D  WL0046         S              8  0
     D  WL0047         S              8  0
     D  WL0048         S              8  0
     D  WL0049         S              8  0
     D  WL0050         S             15
     D  WL0051         S              7  0
     D  ZADFMF         S             10
     D  WQ0018         S              3  0
     D  WQ0019         S              7  0
     D  WQ0020         S              7  0
     D  WN0009         S             11  2
     D  WN0010         S             11  2
     D  WN0011         S             11  2
     D  WN0012         S             11  2
     D  WN0013         S              7  0
     D  WN0014         S              7  0
     D  WN0015         S             11  2
     D  WN0016         S             11  2
     D  WN0017         S             11  2
     D  WN0018         S             11  2
     D  YL0032         S              1
     D  YL0033         S              1
     D  YL0034         S              1
     D  YL0035         S              1
     D  YL0036         S              1
     D  WQSN01         S                   LIKE(WKAIC3)
     D  WQSN02         S                   LIKE(WKC4NB)
     D  YL0037         S              9  0
     D  YL0038         S              3  0
     D  YL0039         S              7  0
     D  YL0040         S              7  0
     D  YL0041         S              9
     D  YL0042         S              5  0
     D  YL0043         S             48
     D  YL0044         S              3
     D  YL0045         S              2
     D  YL0046         S              2
     D  YL0047         S             30
     D  YL0048         S             11  4
     D  WL0052         S              3  0
     D  WL0053         S              7  0
     D  WL0054         S              3  0
     D  WL0055         S              3
     D  WL0056         S              2
     D  WL0057         S              2
     D  WL0058         S             30
     D  WL0059         S             11  4
     D  WQSO01         S                   LIKE(WLAIC3)
     D  WQSO02         S                   LIKE(WLC4NB)
     D  WQSO03         S                   LIKE(WLDPNB)
     D  YL0049         S              2
     D  YL0050         S             14
     D  WL0060         S              7  0
     D  WL0061         S             14
     D  YL0051         S              1
     D  YL0052         S              7  0
     D  YL0053         S              7  0
     D  YL0054         S              8  0
     D  YL0055         S              7  0
     D  WL0062         S              3  0
     D  WL0063         S              7  0
     D  WL0064         S              7  0
     D  WL0065         S              7  0
     D  WQSQ01         S                   LIKE(WOAIC3)
     D  WQSQ02         S                   LIKE(WOC4NB)
     D  WQSQ03         S                   LIKE(WOHGCD)
     D  YL0056         S              8  0
     D  YL0057         S             48
     D  YL0058         S              6  0
     D  WN0019         S              6
     D  WN0020         S              7
     D  WN0021         S              2
     D  WN0022         S              2
     D  WN0023         S              2
     D  YL0059         S             30
     D  YL0060         S             48
     D  WL0066         S              6
     D  WL0067         S              7  0
     D  WL0068         S              2
     D  WL0069         S             14
     D  YL0061         S             14
     D  YL0062         S              2
     D  WL0070         S              7  0
     D  WL0071         S              7  0
     D  WL0072         S             14
     D  WL0073         S              2
     D  YL0063         S              2
     D  YL0064         S              2
     D  WL0074         S              3
     D  WL0075         S              2
     D  WL0076         S              2
     D  YL0065         S              7  0
     D  XDWK1          S              8  0
     D  XDAY1          S              6  0
     D  XDAY2          S              6  0
     D  XDURR          S              8  0
     D  XDSEL          S              1
     D  XDCDW          S              7
     D  XDWSL          S              1  0
     D  XDSTP          S              1  0
     D  XDWNB          S              6  0
     D  XDLSW          S              1  0
     D  YY             S              6  0
     D  XDWK3          S              7  1
     D  XDWK2          S              6  0
     D  YL0066         S              5  0
     D  WL0077         S              7  0
     D  WL0078         S              5  0
     D  WQSU01         S                   LIKE(WTHGCD)
     D  YL0067         S              8  0
     D  YL0068         S              8  0
     D  YL0069         S             48
     D  YL0070         S             48
     D  WL0079         S              9  0
     D  WL0080         S              7  0
     D  WL0081         S             15
     D  WL0082         S              7  0
     D  WL0083         S             48
     D  WL0084         S              3  0
     D  WL0085         S              5  0
     D  WL0086         S              2
     D  WL0087         S             11  2
     D  WL0088         S             11  2
     D  WL0089         S              6  0
     D  WL0090         S             30
     D  WL0091         S             48
     D  WL0092         S             48
     D  WL0093         S             48
     D  WL0094         S             48
     D  WL0095         S             20
     D  WL0096         S             48
     D  WL0097         S             12
     D  WL0098         S             48
     D  WL0099         S              2
     D  WL0100         S             48
     D  WL0101         S             20
     D  WL0102         S              5  0
     D  WL0103         S              2
     D  WL0104         S             11  4
     D  WL0105         S              6
     D  WL0106         S             11  4
     D  WL0107         S              6
     D  WL0108         S             48
     D  WL0109         S             48
     D  WL0110         S             48
     D  WL0111         S              8  0
     D  WL0112         S              8
     D  WL0113         S              8
     D  WL0114         S              8
     D  WL0115         S             30
     D  WL0116         S              8  0
     D  WL0117         S              8  0
     D  WL0118         S              8  0
     D  WL0119         S              3  0
     D  WL0120         S              9  0
     D  WL0121         S              1
     D  WL0122         S              2
     D  YL0071         S             20  0
     D  WN0024         S              3  0
     D  WN0025         S              3  0
     D  YL0072         S             20
     D  WL0123         S              3  0
     D  WL0124         S             20
     D  YL0073         S              7
     D  YL0074         S              8
     D  YL0075         S              1
     D  YL0076         S              1
     D  YL0077         S              1
     D  YL0078         S              1
     D  YL0079         S              1
     D  YL0080         S              1
     D  YL0081         S              1
     D  YL0082         S              1
     D  YL0083         S              1  0
     D  YL0084         S              1  0
     D  YL0085         S              1  0
     D  YL0086         S              1  0
     D  YL0087         S              1  0
     D  YL0088         S              1  0
     D  YL0089         S              1  0
     D  YL0090         S              1  0
     D  YL0091         S              9
     D  YL0092         S              1
     D  YL0093         S              1  0
     D  YL0094         S              1  0
     D  YL0095         S              1  0
     D  YL0096         S              1  0
     D  YL0097         S              1  0
     D  YL0098         S              1  0
     D  YL0099         S              1  0
     D  YL0100         S              1  0
     D  YL0101         S              1  0
     D  YL0102         S              3  0
     D  YL0103         S              1  0
     D  YL0104         S              1  0
     D  YL0105         S              1
     D  YL0106         S             20
     D  WN0026         S              6
     D  WN0027         S              7
     D  WN0028         S              2
     D  WN0029         S              2
     D  WN0030         S              2
     D  YN0006         S             30
     D  YL0107         S              5  2
     D  WL0125         S              3  0
     D  WL0126         S              7  0
     D  WL0127         S             30
     D  WL0128         S              5  2
     D  YL0108         S              5  2
     D  YN0007         S              5  0
     D  YN0008         S              5  2
     D  YN0009         S              7  0
     D  WL0129         S              3  0
     D  WL0130         S              7  0
     D  WL0131         S             11  2
     D  WL0132         S              5  0
     D  WL0133         S              5  2
     D  WL0134         S              7  0
     D  WN0031         S              3
     D  WN0032         S              1
     D  WN0033         S             11  2
     D  WQSY01         S                   LIKE(WYAIC3)
     D  WQSY02         S                   LIKE(WYHGCD)
     D  YL0109         S              8  2
     D  WN0034         S              6
     D  WN0035         S              7
     D  WN0036         S              2
     D  WN0037         S              2
     D  WN0038         S              2
     D  YL0110         S              7  0
     D  WL0135         S              3  0
     D  WL0136         S              7  0
     D  WL0137         S              7  0
     D  WQTA01         S                   LIKE(TAAIC3)
     D  WQTA02         S                   LIKE(TAHGCD)
     D  YL0111         S              3
     D  YL0112         S              3
     D  WL0138         S              7  0
     D  WL0139         S              3
     D  WL0140         S              3
     D  YL0113         S              2
     D  WL0141         S              3  0
     D  WL0142         S              7  0
     D  WL0143         S              7  0
     D  WL0144         S              2
     D  WQTC01         S                   LIKE(TBAIC3)
     D  WQTC02         S                   LIKE(TBC4NB)
     D  WQTC03         S                   LIKE(TBHGCD)
     D  YL0114         S              7
     D  WL0145         S              9  0
     D  WL0146         S              7  0
     D  WL0147         S             15
     D  WL0148         S              7  0
     D  WL0149         S             48
     D  WL0150         S              2
     D  WL0151         S              5
     D  WL0152         S              1
     D  WL0153         S              3
     D  WL0154         S              3
     D  WL0155         S              7  0
     D  WL0156         S              8  2
     D  WL0157         S              9  1
     D  WL0158         S              9  1
     D  WL0159         S              1
     D  WL0160         S              7  0
     D  WL0161         S              7
     D  WL0162         S              3  0
     D  WL0163         S              9  0
     D  WL0164         S              1
     D  WL0165         S              2
     D  YL0115         S             20  0
     D  WN0039         S              3  0
     D  WN0040         S              3  0
     D  WN0041         S              6
     D  WN0042         S              7
     D  WN0043         S              2
     D  WN0044         S              2
     D  WN0045         S              2
     D  WN0046         S              5  0
     D  WQTE01         S                   LIKE(WCAIC3)
     D  WQTE02         S                   LIKE(WCC4NB)
     D  YL0116         S             48
     D  WQTF01         S                   LIKE(TDH9NY)
     D  WQTF02         S                   LIKE(TDC4NB)
     D  WQTF03         S                   LIKE(TDDPNB)
     D  WQTF04         S                   LIKE(TDNFU1)
     D  YL0117         S              5  0
     D  WL0166         S              9  0
     D  WL0167         S              7  0
     D  WL0168         S             15
     D  WL0169         S              7  0
     D  WL0170         S             48
     D  WL0171         S              3  0
     D  WL0172         S              5  0
     D  WL0173         S              2
     D  WL0174         S             11  2
     D  WL0175         S             11  2
     D  WL0176         S              6  0
     D  WL0177         S             30
     D  WL0178         S             48
     D  WL0179         S             48
     D  WL0180         S             48
     D  WL0181         S             48
     D  WL0182         S             20
     D  WL0183         S             48
     D  WL0184         S             12
     D  WL0185         S             48
     D  WL0186         S              2
     D  WL0187         S             48
     D  WL0188         S             20
     D  WL0189         S              5  0
     D  WL0190         S              2
     D  WL0191         S             11  4
     D  WL0192         S              6
     D  WL0193         S             11  4
     D  WL0194         S              6
     D  WL0195         S             48
     D  WL0196         S             48
     D  WL0197         S             48
     D  WL0198         S              8  0
     D  WL0199         S              8
     D  WL0200         S              8
     D  WL0201         S              8
     D  WL0202         S             30
     D  WL0203         S              8  0
     D  WL0204         S              8  0
     D  WL0205         S              8  0
     D  YARDC          S              1
     D  YL0118         S              5  0
     D  WN0047         S              7  0
     D  WN0048         S              5  0
     D  WN0049         S              3
     D  WN0050         S             20
     D  WN0051         S             25
     D  WN0052         S             30
     D  WN0053         S             15
     D  WN0054         S             15
     D  WN0055         S             20
     D  WN0056         S              7  0
     D  WN0057         S              7  0
     D  WN0058         S              7  0
     D  WN0059         S              3
     D  WN0060         S              1
     D  WN0061         S             12
     D  WN0062         S             35
     D  WN0063         S             75
     D  WN0064         S             11  0
     D  WN0065         S             11  0
     D  WN0066         S             11  0
     D  WN0067         S             11  0
     D  WN0068         S             11  2
     D  WN0069         S             11  2
     D  WN0070         S             11  2
     D  WN0071         S              7  0
     D  WN0072         S              7  0
     D  WN0073         S              7  0
     D  WN0074         S              7  0
     D  WN0075         S              4
     D  WN0076         S              4
     D  WN0077         S              4
     D  WN0078         S              2
     D  WN0079         S              2
     D  WN0080         S              2
     D  WN0081         S              3
     D  WN0082         S              3
     D  WN0083         S              3
     D  WN0084         S              5
     D  WN0085         S              5  0
     D  WN0086         S             38
     D  WN0087         S              6
     D  WN0088         S              6
     D  WN0089         S              6
     D  WN0090         S              6
     D  WN0091         S              6
     D  WN0092         S              1
     D  WN0093         S             10
     D  WN0094         S             10
     D  WN0095         S             10
     D  WN0096         S             15
     D  WN0097         S             15
     D  WN0098         S             15
     D  WN0099         S             30
     D  WN0100         S             30
     D  WN0101         S             30
     D  WN0102         S             50
     D  WN0103         S             50
     D  WN0104         S              3  0
     D  WN0105         S              3  0
     D  WN0106         S              3  0
     D  WN0107         S              5  2
     D  WN0108         S              5  2
     D  WN0109         S              5  0
     D  WN0110         S              6  0
     D  WN0111         S              6  0
     D  WN0112         S              6  0
     D  WN0113         S              6  0
     D  WN0114         S              9  0
     D  WN0115         S              9  0
     D  WN0116         S              9  0
     D  WN0117         S              9  6
     D  WN0118         S             15
     D  WN0119         S              1
     D  WN0120         S              1
     D  WN0121         S              2
     D  WN0122         S              2
     D  WN0123         S              5
     D  WN0124         S              5
     D  WN0125         S             15
     D  WN0126         S             15
     D  WN0127         S             30
     D  WN0128         S              7  0
     D  WN0129         S              7  0
     D  WN0130         S              1
     D  WN0131         S              1
     D  WN0132         S              1
     D  WN0133         S              1
     D  WN0134         S              6  0
     D  WN0135         S             10
     D  WN0136         S             10
     D  WN0137         S              7  0
     D  YBRDC          S              1
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0WD02         S             17  7
     D  W0WD01         S             17  7
     D  W0WD00         S             17  7
     D  YRSW00         S              5  0
     D  YRSW01         S              5  0
     D  W0WD04         S             17  7
     D  W0WD03         S             17  7
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS            29
      * KEY: Order Header TRG          Load/BTC#/Co/PO#/Order
      * I :  Load ID
     D  P1RMNB                 1      4P 0
      * I :  Bill to Customer
     D  P1B0C7                 5      8P 0
      * I :  Company Number
     D  P1AIC3                 9     10P 0
     D P2PARM          DS
      * FLD: *Arrays
      * I :  EDI SURROGATE NUMBER
     D  P2H9NY                 1      5P 0
      * I :  Set EDI 856 Pallet ID=1 U
     D  P2KESC                 6      6
      * I :  EDI Trading Partner No
     D  P2J5NX                 7     12
      * B :  Total Quantity Ship  USR
     D  P2MEQT                13     18P 2
      * B :  Total Weight Ship    USR
     D  P2IFWG                19     24P 2
      * B :  Total Gross Weight USR
     D  P2QGWG                25     30P 2
      * B :  Total Pallet Count Hdr U
     D  P2FQNZ                31     34P 0
      * B :  Total Unit Count Hdr U
     D  P2FRNZ                35     38P 0
     D                 DS
     D  ZAMSDA                 1    132
     I@BFCPF7
      * Order Header TRG          Load/BTC#/Co/PO#/Order
      * Renamed input format fields
     I              BEAIC3                      WAAIC3
     I              BEC4NB                      WAC4NB
     I              BEJNCD                      WAJNCD
     I              BEANC7                      WAANC7
     I              BEBKC7                      WABKC7
     I              BEBRTX                      WABRTX
     I              BEHMNA                      WAHMNA
     I              BEHONA                      WAHONA
     I              BEHPNA                      WAHPNA
     I              BEHNNA                      WAHNNA
     I              BEDBCD                      WADBCD
     I              BECKTX                      WACKTX
     I              BEB0C7                      WAB0C7
     I              BEAETX                      WAAETX
     I              BEB1NA                      WAB1NA
     I              BEB3NA                      WAB3NA
     I              BEB4NA                      WAB4NA
     I              BEB2NA                      WAB2NA
     I              BEBHCD                      WABHCD
     I              BEC8TX                      WAC8TX
     I              BEBCNA                      WABCNA
     I              BEA0DT                      WAA0DT
     I              BEA5DT                      WAA5DT
     I              BEGNDT                      WAGNDT
     I              BEACDT                      WAACDT
     I              BEAQCD                      WAAQCD
     I              BEB6NA                      WAB6NA
     I              BEBYNA                      WABYNA
     I              BEBZNA                      WABZNA
     I              BEGTST                      WAGTST
     I              BEGVST                      WAGVST
     I              BEGUST                      WAGUST
     I              BEQFST                      WAQFST
     I              BECQCD                      WACQCD
     I              BEGJST                      WAGJST
     I              BEGWST                      WAGWST
     I              BEGXST                      WAGXST
     I              BEGYST                      WAGYST
     I              BEAODT                      WAAODT
     I              BEAIVN                      WAAIVN
     I              BECXDT                      WACXDT
     I              BEJZVA                      WAJZVA
     I              BEA1WG                      WAA1WG
     I              BEXIST                      WAXIST
     I              BEXJST                      WAXJST
     I              BEXKST                      WAXKST
     I              BEEIDT                      WAEIDT
     I              BEAFTM                      WAAFTM
     I              BEE8CD                      WAE8CD
     I              BEE9CD                      WAE9CD
     I              BERMNB                      WARMNB
     I              BETBNB                      WATBNB
     I              BER1NB                      WAR1NB
     I              BEPJST                      WAPJST
     I              BEU0ST                      WAU0ST
     I              BEU1ST                      WAU1ST
     I              BEQ2CD                      WAQ2CD
     I              BEU2ST                      WAU2ST
     I              BEVEST                      WAVEST
     I              BEVFST                      WAVFST
     I              BEVGST                      WAVGST
     I              BERPCD                      WARPCD
     I              BERNNB                      WARNNB
     I              BEVDST                      WAVDST
     I              BEATIN                      WAATIN
     I              BEU4ST                      WAU4ST
     I              BEU5ST                      WAU5ST
     I              BERSRN                      WARSRN
     I              BEMHNA                      WAMHNA
     I              BEMINA                      WAMINA
     I              BEWBST                      WAWBST
     I              BER4CD                      WAR4CD
     I              BEBFCD                      WABFCD
     I              BEQ4CD                      WAQ4CD
     I              BET3NB                      WAT3NB
     I              BESICD                      WASICD
     I              BECONB                      WACONB
     I              BECEST                      WACEST
     I              BEAWDT                      WAAWDT
     I              BEJPCD                      WAJPCD
     I              BEXUST                      WAXUST
     I              BEZ1ST                      WAZ1ST
     I              BEVRVA                      WAVRVA
     I              BEOBST                      WAOBST
     I              BEBCST                      WABCST
     I              BEBDST                      WABDST
     I              BEB7VL                      WAB7VL
     I              BEGASX                      WAGASX
     I              BEGBSX                      WAGBSX
     I              BEGCSX                      WAGCSX
     I              BEGDSX                      WAGDSX
     I              BEFNSX                      WAFNSX
     I              BEFOSX                      WAFOSX
     I              BEFPSX                      WAFPSX
     I              BEFQSX                      WAFQSX
     I              BEFRSX                      WAFRSX
     I              BEFSSX                      WAFSSX
     I              BEFTSX                      WAFTSX
     I              BEFUSX                      WAFUSX
     I              BEFVSX                      WAFVSX
     I              BEFWSX                      WAFWSX
     I              BEFXSX                      WAFXSX
     I              BEFYSX                      WAFYSX
     I              BENODT                      WANODT
     I              BENPDT                      WANPDT
     I              BENQDT                      WANQDT
     I              BENRDT                      WANRDT
     I              BENSDT                      WANSDT
     I              BEBPTM                      WABPTM
     I              BEBQTM                      WABQTM
     I              BEBRTM                      WABRTM
     I              BEBSTM                      WABSTM
     I              BEBTTM                      WABTTM
     I              BEH0NX                      WAH0NX
     I              BEH1NX                      WAH1NX
     I              BEH2NX                      WAH2NX
     I              BEH3NX                      WAH3NX
     I              BEH4NX                      WAH4NX
     I              BEC0C7                      WAC0C7
     I              BEUVST                      WAUVST
     I              BEUWST                      WAUWST
     I              BEUXST                      WAUXST
     I              BEAATM                      WAAATM
     I              BEAYNA                      WAAYNA
     I              BEA0NA                      WAA0NA
     I              BEAXDT                      WAAXDT
      *
     I@GQREH2
      * EDI Bill To Interchange   Retrieval index
      * Renamed input format fields
     I              GQB0C7                      WBB0C7
     I              GQM4AA                      WBM4AA
     I              GQM7AA                      WBM7AA
     I              GQJ5NX                      WBJ5NX
     I              GQA8U1                      WBA8U1
     I              GQA9U1                      WBA9U1
     I              GQBAU1                      WBBAU1
     I              GQBBU1                      WBBBU1
     I              GQY4NY                      WBY4NY
     I              GQY5NY                      WBY5NY
     I              GQBFU1                      WBBFU1
     I              GQBGU1                      WBBGU1
     I              GQBHU1                      WBBHU1
     I              GQBIU1                      WBBIU1
     I              GQSIAA                      WBSIAA
     I              GQSJAA                      WBSJAA
     I              GQVSST                      WBVSST
     I              GQMJDT                      WBMJDT
     I              GQBETM                      WBBETM
     I              GQCCVN                      WBCCVN
     I              GQCDVN                      WBCDVN
     I              GQMKDT                      WBMKDT
     I              GQBFTM                      WBBFTM
     I              GQCEVN                      WBCEVN
     I              GQCFVN                      WBCFVN
      *
     I@BGWKAE
      * Order Detail              co/
      * Renamed input format fields
     I              OMAIC3                      WCAIC3
     I              OMC4NB                      WCC4NB
     I              OMDPNB                      WCDPNB
     I              OMUENB                      WCUENB
     I              OMHGCD                      WCHGCD
     I              OMAJCD                      WCAJCD
     I              OMBKC7                      WCBKC7
     I              OMCFC7                      WCCFC7
     I              OMGMST                      WCGMST
     I              OMGNST                      WCGNST
     I              OMMAVA                      WCMAVA
     I              OMKDVA                      WCKDVA
     I              OML8VA                      WCL8VA
     I              OML9VA                      WCL9VA
     I              OMGTST                      WCGTST
     I              OMGVST                      WCGVST
     I              OMGUST                      WCGUST
     I              OMQFST                      WCQFST
     I              OMAYVA                      WCAYVA
     I              OMEXDT                      WCEXDT
     I              OMLQCD                      WCLQCD
     I              OMRDCD                      WCRDCD
     I              OMQ7CD                      WCQ7CD
     I              OMBZPR                      WCBZPR
     I              OML6NB                      WCL6NB
     I              OMU1ST                      WCU1ST
     I              OMGIDT                      WCGIDT
     I              OMCRCD                      WCCRCD
     I              OMAGCD                      WCAGCD
     I              OMRZST                      WCRZST
     I              OMR0ST                      WCR0ST
     I              OMR1ST                      WCR1ST
     I              OMG7NA                      WCG7NA
     I              OMG8NA                      WCG8NA
     I              OMRPCD                      WCRPCD
     I              OMVEST                      WCVEST
     I              OMVGST                      WCVGST
     I              OMAVST                      WCAVST
     I              OMU0ST                      WCU0ST
     I              OMRFCD                      WCRFCD
     I              OMFZST                      WCFZST
     I              OMR1NB                      WCR1NB
     I              OMAVQT                      WCAVQT
     I              OMD0WG                      WCD0WG
     I              OMCCQT                      WCCCQT
     I              OMAUWG                      WCAUWG
     I              OMCBQT                      WCCBQT
     I              OMATWG                      WCATWG
     I              OMAQCS                      WCAQCS
     I              OMAGCS                      WCAGCS
     I              OMAKPR                      WCAKPR
     I              OMALPR                      WCALPR
     I              OMAUPR                      WCAUPR
     I              OMAVWG                      WCAVWG
     I              OMA4WG                      WCA4WG
     I              OMA5DT                      WCA5DT
     I              OMAODT                      WCAODT
     I              OMGNDT                      WCGNDT
     I              OMAMST                      WCAMST
     I              OMANST                      WCANST
     I              OMVAST                      WCVAST
     I              OMRGNB                      WCRGNB
     I              OMRHNB                      WCRHNB
     I              OMRINB                      WCRINB
     I              OMRBCD                      WCRBCD
     I              OMHICD                      WCHICD
     I              OMRNCD                      WCRNCD
     I              OMROCD                      WCROCD
     I              OMCXDT                      WCCXDT
     I              OMAJVN                      WCAJVN
     I              OMKXCD                      WCKXCD
     I              OMJPCD                      WCJPCD
     I              OMCQCD                      WCCQCD
     I              OMR4CD                      WCR4CD
     I              OMZ1ST                      WCZ1ST
     I              OMZ3ST                      WCZ3ST
     I              OMZ4ST                      WCZ4ST
     I              OMDUPR                      WCDUPR
     I              OMB6VL                      WCB6VL
     I              OMA1AA                      WCA1AA
     I              OMFZSX                      WCFZSX
     I              OMF0SX                      WCF0SX
     I              OMF1SX                      WCF1SX
     I              OMF2SX                      WCF2SX
     I              OMF3SX                      WCF3SX
     I              OMF4SX                      WCF4SX
     I              OMF5SX                      WCF5SX
     I              OMF6SX                      WCF6SX
     I              OMF7SX                      WCF7SX
     I              OMNTDT                      WCNTDT
     I              OMNUDT                      WCNUDT
     I              OMNVDT                      WCNVDT
     I              OMNWDT                      WCNWDT
     I              OMNXDT                      WCNXDT
     I              OMBUTM                      WCBUTM
     I              OMBVTM                      WCBVTM
     I              OMBWTM                      WCBWTM
     I              OMBXTM                      WCBXTM
     I              OMBYTM                      WCBYTM
     I              OMH5NX                      WCH5NX
     I              OMH6NX                      WCH6NX
     I              OMH7NX                      WCH7NX
     I              OMH8NX                      WCH8NX
     I              OMH9NX                      WCH9NX
     I              OMDVPR                      WCDVPR
     I              OMDWPR                      WCDWPR
     I              OMDXPR                      WCDXPR
     I              OMDYPR                      WCDYPR
     I              OMDZPR                      WCDZPR
     I              OMGSPR                      WCGSPR
     I              OMGTPR                      WCGTPR
     I              OMGUPR                      WCGUPR
     I              OMHOST                      WCHOST
     I              OMHPST                      WCHPST
     I              OMIOST                      WCIOST
     I              OMPEWG                      WCPEWG
     I              OMRINY                      WCRINY
     I              OMTIDT                      WCTIDT
     I              OMTJDT                      WCTJDT
     I              OMH2ST                      WCH2ST
     I              OMH0ST                      WCH0ST
     I              OMH1ST                      WCH1ST
     I              OMTKDT                      WCTKDT
     I              OMTLDT                      WCTLDT
     I              OMTMDT                      WCTMDT
     I              OMUVST                      WCUVST
     I              OMUWST                      WCUWST
     I              OMUXST                      WCUXST
     I              OMAATM                      WCAATM
     I              OMAYNA                      WCAYNA
     I              OMA0NA                      WCA0NA
     I              OMAXDT                      WCAXDT
      *
     I@ADREAO
      * Warehouse Codes           Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                      WDAJCD
     I              ADF8NA                      WDF8NA
     I              ADACNA                      WDACNA
     I              ADADNA                      WDADNA
     I              ADAENA                      WDAENA
     I              ADAJNA                      WDAJNA
     I              ADBTTX                      WDBTTX
     I              ADAOCD                      WDAOCD
     I              ADBGCD                      WDBGCD
     I              ADVHST                      WDVHST
     I              ADMPNA                      WDMPNA
     I              ADWPST                      WDWPST
     I              ADXUST                      WDXUST
     I              ADT0ST                      WDT0ST
     I              ADT1ST                      WDT1ST
     I              ADDBNB                      WDDBNB
     I              ADT2ST                      WDT2ST
     I              ADT3ST                      WDT3ST
     I              ADT4ST                      WDT4ST
     I              ADT6ST                      WDT6ST
     I              ADBWC3                      WDBWC3
     I              ADBTC3                      WDBTC3
     I              ADBUC3                      WDBUC3
     I              ADBVC3                      WDBVC3
     I              ADFCAA                      WDFCAA
     I              ADRQSX                      WDRQSX
     I              ADRRSX                      WDRRSX
     I              ADRSSX                      WDRSSX
     I              ADRTSX                      WDRTSX
     I              ADT7ST                      WDT7ST
     I              ADT8ST                      WDT8ST
     I              ADRNSX                      WDRNSX
     I              ADROSX                      WDROSX
     I              ADRPSX                      WDRPSX
     I              ADUVST                      WDUVST
     I              ADUWST                      WDUWST
     I              ADUXST                      WDUXST
     I              ADVSST                      WDVSST
     I              ADAATM                      WDAATM
     I              ADAYNA                      WDAYNA
     I              ADA0NA                      WDA0NA
     I              ADAXDT                      WDAXDT
      *
     I@G0REJZ
      * EDI WHS Interchange       Retrieval index
      * Renamed input format fields
     I              G0AJCD                      WEAJCD
     I              G0M4AA                      WEM4AA
     I              G0M7AA                      WEM7AA
     I              G0J5NX                      WEJ5NX
     I              G0X2T1                      WEX2T1
     I              G0JBSC                      WEJBSC
     I              G0JCSC                      WEJCSC
     I              G0JDSC                      WEJDSC
     I              G0JESC                      WEJESC
     I              G0QGU1                      WEQGU1
     I              G0F5NZ                      WEF5NZ
     I              G0LSSC                      WELSSC
     I              G0LTSC                      WELTSC
     I              G0AHAB                      WEAHAB
     I              G0F6NZ                      WEF6NZ
     I              G0VSST                      WEVSST
     I              G0MJDT                      WEMJDT
     I              G0BETM                      WEBETM
     I              G0CCVN                      WECCVN
     I              G0CDVN                      WECDVN
     I              G0MKDT                      WEMKDT
     I              G0BFTM                      WEBFTM
     I              G0CEVN                      WECEVN
     I              G0CFVN                      WECFVN
      *
     I@AMREJF
      * Order Header Extension    Retrieval index
      * Renamed input format fields
     I              AMAIC3                      WFAIC3
     I              AMC4NB                      WFC4NB
     I              AMRMNB                      WFRMNB
     I              AMRUNB                      WFRUNB
     I              AMXACD                      WFXACD
     I              AMOANA                      WFOANA
     I              AMHBAA                      WFHBAA
     I              AMJ0T1                      WFJ0T1
     I              AMGENY                      WFGENY
     I              AMJ1T1                      WFJ1T1
     I              AMHCAA                      WFHCAA
     I              AMQWDT                      WFQWDT
     I              AMQXDT                      WFQXDT
     I              AMQYDT                      WFQYDT
     I              AMHDAA                      WFHDAA
     I              AMCCTX                      WFCCTX
     I              AMJ2T1                      WFJ2T1
     I              AMRLNA                      WFRLNA
     I              AMRMNA                      WFRMNA
     I              AMGINY                      WFGINY
     I              AMGFNY                      WFGFNY
     I              AMGGNY                      WFGGNY
     I              AMGHNY                      WFGHNY
     I              AMHEVL                      WFHEVL
     I              AMHFVL                      WFHFVL
     I              AMHGVL                      WFHGVL
     I              AMQZDT                      WFQZDT
     I              AMQ0DT                      WFQ0DT
     I              AMQ1DT                      WFQ1DT
     I              AMQ2DT                      WFQ2DT
     I              AMC2TX                      WFC2TX
     I              AMC3TX                      WFC3TX
     I              AMC6TX                      WFC6TX
     I              AMCHTX                      WFCHTX
     I              AMCITX                      WFCITX
     I              AMCLTX                      WFCLTX
     I              AMB4TX                      WFB4TX
     I              AMCUTX                      WFCUTX
     I              AMCVTX                      WFCVTX
     I              AMB9TX                      WFB9TX
     I              AMJWSC                      WFJWSC
     I              AMITNY                      WFITNY
     I              AMLMT1                      WFLMT1
     I              AMLWAA                      WFLWAA
     I              AMFVST                      WFFVST
     I              AMF0ST                      WFF0ST
     I              AMF2ST                      WFF2ST
     I              AMF3ST                      WFF3ST
     I              AMJUSC                      WFJUSC
     I              AMJVSC                      WFJVSC
     I              AMV3T1                      WFV3T1
     I              AMV4T1                      WFV4T1
     I              AMV5T1                      WFV5T1
     I              AMV6T1                      WFV6T1
     I              AMV7T1                      WFV7T1
     I              AMV8T1                      WFV8T1
     I              AMV9T1                      WFV9T1
     I              AMWAT1                      WFWAT1
     I              AMWBT1                      WFWBT1
     I              AMWCT1                      WFWCT1
     I              AMWDT1                      WFWDT1
     I              AMQJNY                      WFQJNY
     I              AMQKNY                      WFQKNY
     I              AMQLNY                      WFQLNY
     I              AMP8NY                      WFP8NY
     I              AMP9NY                      WFP9NY
     I              AMQANY                      WFQANY
     I              AMQCNY                      WFQCNY
     I              AMQDNY                      WFQDNY
     I              AMQENY                      WFQENY
     I              AMQFNY                      WFQFNY
     I              AMQGNY                      WFQGNY
     I              AMQHNY                      WFQHNY
     I              AMQINY                      WFQINY
     I              AMQMNY                      WFQMNY
     I              AMMYU1                      WFMYU1
     I              AMJXSC                      WFJXSC
     I              AMJYSC                      WFJYSC
     I              AMJZSC                      WFJZSC
     I              AMJ0SC                      WFJ0SC
     I              AMMZU1                      WFMZU1
     I              AMM0U1                      WFM0U1
     I              AMM1U1                      WFM1U1
     I              AMM2U1                      WFM2U1
     I              AMM3U1                      WFM3U1
     I              AMW5DT                      WFW5DT
     I              AMW6DT                      WFW6DT
     I              AMUVST                      WFUVST
     I              AMUWST                      WFUWST
     I              AMUXST                      WFUXST
     I              AMVSST                      WFVSST
     I              AMAATM                      WFAATM
     I              AMAYNA                      WFAYNA
     I              AMA0NA                      WFA0NA
     I              AMAXDT                      WFAXDT
      *
     I@B8REVF
      * Trade Partner Control     Retrieval index
      * Renamed input format fields
     I              B8J5NX                      WGJ5NX
     I              B8CBSC                      WGCBSC
     I              B8CCSC                      WGCCSC
     I              B8CDSC                      WGCDSC
     I              B8CESC                      WGCESC
     I              B8CFSC                      WGCFSC
     I              B8CGSC                      WGCGSC
     I              B8CHSC                      WGCHSC
     I              B8CISC                      WGCISC
     I              B8CJSC                      WGCJSC
     I              B8CKSC                      WGCKSC
     I              B8CLSC                      WGCLSC
     I              B8CMSC                      WGCMSC
     I              B8CNSC                      WGCNSC
     I              B8EHU1                      WGEHU1
     I              B8EIU1                      WGEIU1
     I              B8EJU1                      WGEJU1
     I              B8EKU1                      WGEKU1
     I              B8V1DT                      WGV1DT
     I              B8V2DT                      WGV2DT
     I              B8VSST                      WGVSST
     I              B8MJDT                      WGMJDT
     I              B8BETM                      WGBETM
     I              B8CCVN                      WGCCVN
     I              B8CDVN                      WGCDVN
     I              B8MKDT                      WGMKDT
     I              B8BFTM                      WGBFTM
     I              B8CEVN                      WGCEVN
     I              B8CFVN                      WGCFVN
      *
     I@P004SK
      * EDI Purchase Order Header Trade Partner/PO Number
      * Renamed input format fields
     I              BQTSCN                      WHTSCN
     I              BQL3SX                      WHL3SX
     I              BQOSDT                      WHOSDT
     I              BQPONO                      WHPONO
     I              BQDKAA                      WHDKAA
     I              BQNAME                      WHNAME
     I              BQCQLF                      WHCQLF
     I              BQCNUM                      WHCNUM
     I              BQINRF                      WHINRF
     I              BQGNTX                      WHGNTX
     I              BQHUAA                      WHHUAA
     I              BQHUVL                      WHHUVL
     I              BQHVAA                      WHHVAA
     I              BQX8T1                      WHX8T1
     I              BQJ2AA                      WHJ2AA
     I              BQT6DT                      WHT6DT
     I              BQQLFX                      WHQLFX
     I              BQDELV                      WHDELV
     I              BQSHMT                      WHSHMT
     I              BQMTTY                      WHMTTY
     I              BQPLEX                      WHPLEX
     I              BQLDOP                      WHLDOP
     I              BQROUT                      WHROUT
     I              BQFOBP                      WHFOBP
     I              BQD3VL                      WHD3VL
     I              BQUNIT                      WHUNIT
     I              BQD4VL                      WHD4VL
     I              BQAMTX                      WHAMTX
     I              BQDSTS                      WHDSTS
     I              BQSRAA                      WHSRAA
     I              BQBRU1                      WHBRU1
     I              BQSSAA                      WHSSAA
     I              BQBSU1                      WHBSU1
     I              BQSTAA                      WHSTAA
     I              BQBTU1                      WHBTU1
     I              BQSUAA                      WHSUAA
     I              BQBUU1                      WHBUU1
     I              BQSVAA                      WHSVAA
     I              BQBVU1                      WHBVU1
     I              BQSWAA                      WHSWAA
     I              BQBWU1                      WHBWU1
     I              BQSXAA                      WHSXAA
     I              BQBXU1                      WHBXU1
     I              BQYDT1                      WHYDT1
     I              BQNLST                      WHNLST
     I              BQUFDT                      WHUFDT
     I              BQOJAA                      WHOJAA
     I              BQJ5NX                      WHJ5NX
      *
     I@BYREA1
      * Item Default              Retrieval index
      * Renamed input format fields
     I              BYHGCD                      WIHGCD
     I              BYAVNA                      WIAVNA
     I              BYAWNA                      WIAWNA
     I              BYL7NA                      WIL7NA
     I              BYL8NA                      WIL8NA
     I              BYL6NA                      WIL6NA
     I              BYMFNA                      WIMFNA
     I              BYHHCD                      WIHHCD
     I              BYAWPC                      WIAWPC
     I              BYLXST                      WILXST
     I              BYLGCD                      WILGCD
     I              BYAXPC                      WIAXPC
     I              BYLYST                      WILYST
     I              BYLHCD                      WILHCD
     I              BYLICD                      WILICD
     I              BYAIWG                      WIAIWG
     I              BYHICD                      WIHICD
     I              BYRBCD                      WIRBCD
     I              BYFZST                      WIFZST
     I              BYAVST                      WIAVST
     I              BYCZWG                      WICZWG
     I              BYC0WG                      WIC0WG
     I              BYURTN                      WIURTN
     I              BYACC8                      WIACC8
     I              BYRINB                      WIRINB
     I              BYRHNB                      WIRHNB
     I              BYRGNB                      WIRGNB
     I              BYLNCD                      WILNCD
     I              BYTFNB                      WITFNB
     I              BYN0CD                      WIN0CD
     I              BYX4ST                      WIX4ST
     I              BYCHTM                      WICHTM
     I              BYQZCD                      WIQZCD
     I              BYXWST                      WIXWST
     I              BYXXST                      WIXXST
     I              BYVMST                      WIVMST
     I              BYSWGH                      WISWGH
     I              BYPPHE                      WIPPHE
     I              BYLRCD                      WILRCD
     I              BYSFNB                      WISFNB
     I              BYA3WG                      WIA3WG
     I              BYSJNB                      WISJNB
     I              BYLLCD                      WILLCD
     I              BYLMCD                      WILMCD
     I              BYP3ST                      WIP3ST
     I              BYSKNB                      WISKNB
     I              BYSLNB                      WISLNB
     I              BYSMNB                      WISMNB
     I              BYP4ST                      WIP4ST
     I              BYCFNB                      WICFNB
     I              BYCGNB                      WICGNB
     I              BYILNB                      WIILNB
     I              BYCHNB                      WICHNB
     I              BYCINB                      WICINB
     I              BYCJNB                      WICJNB
     I              BYCMNB                      WICMNB
     I              BYCNNB                      WICNNB
     I              BYCRNB                      WICRNB
     I              BYCSNB                      WICSNB
     I              BYCVNB                      WICVNB
     I              BYCWNB                      WICWNB
     I              BYCXNB                      WICXNB
     I              BYCZNB                      WICZNB
     I              BYC0NB                      WIC0NB
     I              BYN1CD                      WIN1CD
     I              BYB4NB                      WIB4NB
     I              BYX5ST                      WIX5ST
     I              BYX6ST                      WIX6ST
     I              BYX7ST                      WIX7ST
     I              BYTMVA                      WITMVA
     I              BYTNVA                      WITNVA
     I              BYBLPR                      WIBLPR
     I              BYBMPR                      WIBMPR
     I              BYU9ST                      WIU9ST
     I              BYCMCO                      WICMCO
     I              BYQ1CD                      WIQ1CD
     I              BYAIC3                      WIAIC3
     I              BYQ8CD                      WIQ8CD
     I              BYR3CD                      WIR3CD
     I              BYSDCD                      WISDCD
     I              BYICN1                      WIICN1
     I              BYSVCD                      WISVCD
     I              BYICN2                      WIICN2
     I              BYSWCD                      WISWCD
     I              BYV2NB                      WIV2NB
     I              BYSXCD                      WISXCD
     I              BYITCN                      WIITCN
     I              BYSYCD                      WISYCD
     I              BYITC5                      WIITC5
     I              BYSZCD                      WISZCD
     I              BYICN6                      WIICN6
     I              BYS0CD                      WIS0CD
     I              BYICN7                      WIICN7
     I              BYS1CD                      WIS1CD
     I              BYICN8                      WIICN8
     I              BYS2CD                      WIS2CD
     I              BYICN9                      WIICN9
     I              BYS3CD                      WIS3CD
     I              BYICN0                      WIICN0
     I              BYS4CD                      WIS4CD
     I              BYB5NB                      WIB5NB
     I              BYXRCD                      WIXRCD
     I              BYPCCT                      WIPCCT
     I              BYBDNB                      WIBDNB
     I              BYBJNB                      WIBJNB
     I              BYSUST                      WISUST
     I              BYSVST                      WISVST
     I              BYSYST                      WISYST
     I              BYSZST                      WISZST
     I              BYS1ST                      WIS1ST
     I              BYXTCD                      WIXTCD
     I              BYXUCD                      WIXUCD
     I              BYF5WG                      WIF5WG
     I              BYF6WG                      WIF6WG
     I              BYF7WG                      WIF7WG
     I              BYBLNB                      WIBLNB
     I              BYBNNB                      WIBNNB
     I              BYS2ST                      WIS2ST
     I              BYS4ST                      WIS4ST
     I              BYS5ST                      WIS5ST
     I              BYS6ST                      WIS6ST
     I              BYS8ST                      WIS8ST
     I              BYS9ST                      WIS9ST
     I              BYTCST                      WITCST
     I              BYTDST                      WITDST
     I              BYUVST                      WIUVST
     I              BYUWST                      WIUWST
     I              BYUXST                      WIUXST
     I              BYVSST                      WIVSST
     I              BYAHTM                      WIAHTM
     I              BYBEVN                      WIBEVN
     I              BYBFVN                      WIBFVN
     I              BYEKDT                      WIEKDT
      *
     I@BNCPFQ
      * EDI Adv Ship Ntc Order V2 Update index
      * Renamed input format fields
     I              BNH9NY                      WJH9NY
     I              BNQ2NY                      WJQ2NY
     I              BNHPAA                      WJHPAA
     I              BNTFNA                      WJTFNA
     I              BNEUNZ                      WJEUNZ
     I              BNYTAA                      WJYTAA
     I              BNNVU1                      WJNVU1
     I              BNYIAA                      WJYIAA
     I              BND9NZ                      WJD9NZ
     I              BNFHNZ                      WJFHNZ
     I              BNFPNZ                      WJFPNZ
     I              BNFINZ                      WJFINZ
     I              BNENNZ                      WJENNZ
     I              BNEMNZ                      WJEMNZ
     I              BNEFNZ                      WJEFNZ
     I              BNEGNZ                      WJEGNZ
     I              BNXBDT                      WJXBDT
     I              BNEHNZ                      WJEHNZ
     I              BNP8U1                      WJP8U1
     I              BNFJNZ                      WJFJNZ
      *
     I@FNCPF8
      * Manifest Detail           Co/Ord/Pal/Itm/Sq/SSq/CS
      * Renamed input format fields
     I              FNAIC3                      WKAIC3
     I              FNC4NB                      WKC4NB
     I              FNDPNB                      WKDPNB
     I              FNUENB                      WKUENB
     I              FNRZNB                      WKRZNB
     I              FNFOQT                      WKFOQT
     I              FNR0NB                      WKR0NB
     I              FNPMST                      WKPMST
     I              FNK7DT                      WKK7DT
     I              FNPFNX                      WKPFNX
     I              FNHGCD                      WKHGCD
     I              FNAJCD                      WKAJCD
     I              FNELDT                      WKELDT
     I              FNN5WG                      WKN5WG
     I              FNRZNA                      WKRZNA
     I              FNH5NY                      WKH5NY
     I              FNH6NY                      WKH6NY
     I              FNH7NY                      WKH7NY
     I              FNGBTX                      WKGBTX
     I              FNN6WG                      WKN6WG
     I              FNN7WG                      WKN7WG
     I              FNGCTX                      WKGCTX
     I              FNGDTX                      WKGDTX
     I              FNRBDT                      WKRBDT
     I              FNITNY                      WKITNY
     I              FNIVNY                      WKIVNY
     I              FNIUNY                      WKIUNY
     I              FNIWNY                      WKIWNY
     I              FNIXNY                      WKIXNY
     I              FNIYNY                      WKIYNY
     I              FNUVST                      WKUVST
     I              FNUWST                      WKUWST
     I              FNUXST                      WKUXST
     I              FNVSST                      WKVSST
     I              FNAATM                      WKAATM
     I              FNAYNA                      WKAYNA
     I              FNA0NA                      WKA0NA
     I              FNAXDT                      WKAXDT
      *
     I@BGWKL1
      * Order Detail              Retrieval index
      * Renamed input format fields
     I              OMAIC3                      WLAIC3
     I              OMC4NB                      WLC4NB
     I              OMDPNB                      WLDPNB
     I              OMUENB                      WLUENB
     I              OMHGCD                      WLHGCD
     I              OMAJCD                      WLAJCD
     I              OMBKC7                      WLBKC7
     I              OMCFC7                      WLCFC7
     I              OMGMST                      WLGMST
     I              OMGNST                      WLGNST
     I              OMMAVA                      WLMAVA
     I              OMKDVA                      WLKDVA
     I              OML8VA                      WLL8VA
     I              OML9VA                      WLL9VA
     I              OMGTST                      WLGTST
     I              OMGVST                      WLGVST
     I              OMGUST                      WLGUST
     I              OMQFST                      WLQFST
     I              OMAYVA                      WLAYVA
     I              OMEXDT                      WLEXDT
     I              OMLQCD                      WLLQCD
     I              OMRDCD                      WLRDCD
     I              OMQ7CD                      WLQ7CD
     I              OMBZPR                      WLBZPR
     I              OML6NB                      WLL6NB
     I              OMU1ST                      WLU1ST
     I              OMGIDT                      WLGIDT
     I              OMCRCD                      WLCRCD
     I              OMAGCD                      WLAGCD
     I              OMRZST                      WLRZST
     I              OMR0ST                      WLR0ST
     I              OMR1ST                      WLR1ST
     I              OMG7NA                      WLG7NA
     I              OMG8NA                      WLG8NA
     I              OMRPCD                      WLRPCD
     I              OMVEST                      WLVEST
     I              OMVGST                      WLVGST
     I              OMAVST                      WLAVST
     I              OMU0ST                      WLU0ST
     I              OMRFCD                      WLRFCD
     I              OMFZST                      WLFZST
     I              OMR1NB                      WLR1NB
     I              OMAVQT                      WLAVQT
     I              OMD0WG                      WLD0WG
     I              OMCCQT                      WLCCQT
     I              OMAUWG                      WLAUWG
     I              OMCBQT                      WLCBQT
     I              OMATWG                      WLATWG
     I              OMAQCS                      WLAQCS
     I              OMAGCS                      WLAGCS
     I              OMAKPR                      WLAKPR
     I              OMALPR                      WLALPR
     I              OMAUPR                      WLAUPR
     I              OMAVWG                      WLAVWG
     I              OMA4WG                      WLA4WG
     I              OMA5DT                      WLA5DT
     I              OMAODT                      WLAODT
     I              OMGNDT                      WLGNDT
     I              OMAMST                      WLAMST
     I              OMANST                      WLANST
     I              OMVAST                      WLVAST
     I              OMRGNB                      WLRGNB
     I              OMRHNB                      WLRHNB
     I              OMRINB                      WLRINB
     I              OMRBCD                      WLRBCD
     I              OMHICD                      WLHICD
     I              OMRNCD                      WLRNCD
     I              OMROCD                      WLROCD
     I              OMCXDT                      WLCXDT
     I              OMAJVN                      WLAJVN
     I              OMKXCD                      WLKXCD
     I              OMJPCD                      WLJPCD
     I              OMCQCD                      WLCQCD
     I              OMR4CD                      WLR4CD
     I              OMZ1ST                      WLZ1ST
     I              OMZ3ST                      WLZ3ST
     I              OMZ4ST                      WLZ4ST
     I              OMDUPR                      WLDUPR
     I              OMB6VL                      WLB6VL
     I              OMA1AA                      WLA1AA
     I              OMFZSX                      WLFZSX
     I              OMF0SX                      WLF0SX
     I              OMF1SX                      WLF1SX
     I              OMF2SX                      WLF2SX
     I              OMF3SX                      WLF3SX
     I              OMF4SX                      WLF4SX
     I              OMF5SX                      WLF5SX
     I              OMF6SX                      WLF6SX
     I              OMF7SX                      WLF7SX
     I              OMNTDT                      WLNTDT
     I              OMNUDT                      WLNUDT
     I              OMNVDT                      WLNVDT
     I              OMNWDT                      WLNWDT
     I              OMNXDT                      WLNXDT
     I              OMBUTM                      WLBUTM
     I              OMBVTM                      WLBVTM
     I              OMBWTM                      WLBWTM
     I              OMBXTM                      WLBXTM
     I              OMBYTM                      WLBYTM
     I              OMH5NX                      WLH5NX
     I              OMH6NX                      WLH6NX
     I              OMH7NX                      WLH7NX
     I              OMH8NX                      WLH8NX
     I              OMH9NX                      WLH9NX
     I              OMDVPR                      WLDVPR
     I              OMDWPR                      WLDWPR
     I              OMDXPR                      WLDXPR
     I              OMDYPR                      WLDYPR
     I              OMDZPR                      WLDZPR
     I              OMGSPR                      WLGSPR
     I              OMGTPR                      WLGTPR
     I              OMGUPR                      WLGUPR
     I              OMHOST                      WLHOST
     I              OMHPST                      WLHPST
     I              OMIOST                      WLIOST
     I              OMPEWG                      WLPEWG
     I              OMRINY                      WLRINY
     I              OMTIDT                      WLTIDT
     I              OMTJDT                      WLTJDT
     I              OMH2ST                      WLH2ST
     I              OMH0ST                      WLH0ST
     I              OMH1ST                      WLH1ST
     I              OMTKDT                      WLTKDT
     I              OMTLDT                      WLTLDT
     I              OMTMDT                      WLTMDT
     I              OMUVST                      WLUVST
     I              OMUWST                      WLUWST
     I              OMUXST                      WLUXST
     I              OMAATM                      WLAATM
     I              OMAYNA                      WLAYNA
     I              OMA0NA                      WLA0NA
     I              OMAXDT                      WLAXDT
      *
     I@BTRETK
      * Item Default Extension    Retrieval index
      * Renamed input format fields
     I              BTHGCD                      WMHGCD
     I              BTCUU1                      WMCUU1
     I              BTALSC                      WMALSC
     I              BTAMSC                      WMAMSC
     I              BTANSC                      WMANSC
     I              BTAOSC                      WMAOSC
     I              BTAPSC                      WMAPSC
     I              BTAQSC                      WMAQSC
     I              BTARSC                      WMARSC
     I              BTASSC                      WMASSC
     I              BTCVU1                      WMCVU1
     I              BTKXU1                      WMKXU1
     I              BTKYU1                      WMKYU1
     I              BTKZU1                      WMKZU1
     I              BTDXNZ                      WMDXNZ
     I              BTDYNZ                      WMDYNZ
     I              BTVSST                      WMVSST
     I              BTMJDT                      WMMJDT
     I              BTBETM                      WMBETM
     I              BTCCVN                      WMCCVN
     I              BTCDVN                      WMCDVN
     I              BTMKDT                      WMMKDT
     I              BTBFTM                      WMBFTM
     I              BTCEVN                      WMCEVN
     I              BTCFVN                      WMCFVN
      *
     I@FNCPXH
      * Manifest Detail           Co/Ord/Item/Prod Date
      * Renamed input format fields
     I              FNAIC3                      WOAIC3
     I              FNC4NB                      WOC4NB
     I              FNDPNB                      WODPNB
     I              FNUENB                      WOUENB
     I              FNRZNB                      WORZNB
     I              FNFOQT                      WOFOQT
     I              FNR0NB                      WOR0NB
     I              FNPMST                      WOPMST
     I              FNK7DT                      WOK7DT
     I              FNPFNX                      WOPFNX
     I              FNHGCD                      WOHGCD
     I              FNAJCD                      WOAJCD
     I              FNELDT                      WOELDT
     I              FNN5WG                      WON5WG
     I              FNRZNA                      WORZNA
     I              FNH5NY                      WOH5NY
     I              FNH6NY                      WOH6NY
     I              FNH7NY                      WOH7NY
     I              FNGBTX                      WOGBTX
     I              FNN6WG                      WON6WG
     I              FNN7WG                      WON7WG
     I              FNGCTX                      WOGCTX
     I              FNGDTX                      WOGDTX
     I              FNRBDT                      WORBDT
     I              FNITNY                      WOITNY
     I              FNIVNY                      WOIVNY
     I              FNIUNY                      WOIUNY
     I              FNIWNY                      WOIWNY
     I              FNIXNY                      WOIXNY
     I              FNIYNY                      WOIYNY
     I              FNUVST                      WOUVST
     I              FNUWST                      WOUWST
     I              FNUXST                      WOUXST
     I              FNVSST                      WOVSST
     I              FNAATM                      WOAATM
     I              FNAYNA                      WOAYNA
     I              FNA0NA                      WOA0NA
     I              FNAXDT                      WOAXDT
      *
     I@BQREF3
      * Customer Item Ref for EDI Retrieval index
      * Renamed input format fields
     I              BQJ5NX                      WRJ5NX
     I              BQHGCD                      WRHGCD
     I              BQLDSX                      WRLDSX
     I              BQCPAA                      WRCPAA
     I              BQCOAA                      WRCOAA
     I              BQVLNA                      WRVLNA
     I              BQPTNA                      WRPTNA
     I              BQPUNA                      WRPUNA
     I              BQLBSX                      WRLBSX
     I              BQLCSX                      WRLCSX
     I              BQLESX                      WRLESX
     I              BQLFSX                      WRLFSX
     I              BQVSST                      WRVSST
     I              BQMJDT                      WRMJDT
     I              BQBETM                      WRBETM
     I              BQCCVN                      WRCCVN
     I              BQCDVN                      WRCDVN
     I              BQMKDT                      WRMKDT
     I              BQBFTM                      WRBFTM
     I              BQCEVN                      WRCEVN
     I              BQCFVN                      WRCFVN
      *
     I@BIREKY
      * Customer Item Reference   Retrieval index
      * Renamed input format fields
     I              BIBKC7                      WSBKC7
     I              BIHGCD                      WSHGCD
     I              BICOAA                      WSCOAA
     I              BICPAA                      WSCPAA
     I              BIPSNA                      WSPSNA
     I              BIPTNA                      WSPTNA
     I              BIPUNA                      WSPUNA
     I              BILBSX                      WSLBSX
     I              BILCSX                      WSLCSX
     I              BILDSX                      WSLDSX
     I              BILESX                      WSLESX
     I              BILFSX                      WSLFSX
     I              BIVSST                      WSVSST
     I              BIMJDT                      WSMJDT
     I              BIBETM                      WSBETM
     I              BICCVN                      WSCCVN
     I              BICDVN                      WSCDVN
     I              BIMKDT                      WSMKDT
     I              BIBFTM                      WSBFTM
     I              BICEVN                      WSCEVN
     I              BICFVN                      WSCFVN
      *
     I@BRREGE
      * Item Shelf Life Upload    Item/ID
      * Renamed input format fields
     I              BREWNZ                      WTEWNZ
     I              BRHGCD                      WTHGCD
     I              BRAVNA                      WTAVNA
     I              BRNZU1                      WTNZU1
     I              BRN0U1                      WTN0U1
     I              BRN1U1                      WTN1U1
     I              BRN2U1                      WTN2U1
     I              BREXNZ                      WTEXNZ
     I              BREYNZ                      WTEYNZ
     I              BREZNZ                      WTEZNZ
     I              BRE0NZ                      WTE0NZ
     I              BRE1NZ                      WTE1NZ
     I              BRNVVL                      WTNVVL
     I              BRN3U1                      WTN3U1
     I              BRE2NZ                      WTE2NZ
     I              BRN4U1                      WTN4U1
     I              BRN5U1                      WTN5U1
     I              BRN6U1                      WTN6U1
     I              BRN7U1                      WTN7U1
     I              BRN8U1                      WTN8U1
     I              BRN9U1                      WTN9U1
     I              BROAU1                      WTOAU1
     I              BROBU1                      WTOBU1
     I              BROCU1                      WTOCU1
     I              BRODU1                      WTODU1
     I              BROEU1                      WTOEU1
      *
     I@BMCPFN
      * EDI Adv Ship Ntc Dtl V2   Update index
      * Renamed input format fields
     I              BMH9NY                      WVH9NY
     I              BMQ2NY                      WVQ2NY
     I              BMTFNA                      WVTFNA
     I              BMC4NB                      WVC4NB
     I              BMJJU1                      WVJJU1
     I              BMDPNB                      WVDPNB
     I              BMQ7NY                      WVQ7NY
     I              BMZEAA                      WVZEAA
     I              BMETNZ                      WVETNZ
     I              BMQ8NY                      WVQ8NY
     I              BMTCNY                      WVTCNY
     I              BMLET1                      WVLET1
     I              BMNEU1                      WVNEU1
     I              BMNFU1                      WVNFU1
     I              BMNGU1                      WVNGU1
     I              BMNHU1                      WVNHU1
     I              BMNWU1                      WVNWU1
     I              BMQBU1                      WVQBU1
     I              BMHVU1                      WVHVU1
     I              BMNCU1                      WVNCU1
     I              BMAGAB                      WVAGAB
     I              BMQCU1                      WVQCU1
     I              BMNDU1                      WVNDU1
     I              BMEINZ                      WVEINZ
     I              BMYWAA                      WVYWAA
     I              BMHZPR                      WVHZPR
     I              BMYZAA                      WVYZAA
     I              BMH0PR                      WVH0PR
     I              BMY0AA                      WVY0AA
     I              BMNIU1                      WVNIU1
     I              BMNJU1                      WVNJU1
     I              BMNKU1                      WVNKU1
     I              BMTDNY                      WVTDNY
     I              BMNLU1                      WVNLU1
     I              BMNMU1                      WVNMU1
     I              BMNNU1                      WVNNU1
     I              BMNPU1                      WVNPU1
     I              BMEJNZ                      WVEJNZ
     I              BMEKNZ                      WVEKNZ
     I              BMELNZ                      WVELNZ
      *
     I@ABREAK
      * Company Name and Address  Retrieval index       V
      * Renamed input format fields
     I              ABAIC3                      WWAIC3
     I              ABADTX                      WWADTX
     I              ABACNA                      WWACNA
     I              ABADNA                      WWADNA
     I              ABAENA                      WWAENA
     I              ABAJNA                      WWAJNA
     I              ABBTTX                      WWBTTX
     I              ABBVTX                      WWBVTX
     I              ABBWTX                      WWBWTX
     I              ABA2NA                      WWA2NA
     I              ABABTX                      WWABTX
     I              ABBGCD                      WWBGCD
     I              ABKXCD                      WWKXCD
     I              ABUVST                      WWUVST
     I              ABUWST                      WWUWST
     I              ABUXST                      WWUXST
     I              ABVSST                      WWVSST
     I              ABAATM                      WWAATM
     I              ABAYNA                      WWAYNA
     I              ABA0NA                      WWA0NA
     I              ABAXDT                      WWAXDT
      *
     I@BZREJU
      * Company Item              Retrieval index       NV
      * Renamed input format fields
     I              BZAIC3                      WXAIC3
     I              BZHGCD                      WXHGCD
     I              BZAVNA                      WXAVNA
     I              BZAWNA                      WXAWNA
     I              BZL7NA                      WXL7NA
     I              BZL8NA                      WXL8NA
     I              BZL6NA                      WXL6NA
     I              BZMFNA                      WXMFNA
     I              BZADCD                      WXADCD
     I              BZAWPC                      WXAWPC
     I              BZLXST                      WXLXST
     I              BZAECD                      WXAECD
     I              BZAXPC                      WXAXPC
     I              BZLYST                      WXLYST
     I              BZAFCD                      WXAFCD
     I              BZAICD                      WXAICD
     I              BZAIWG                      WXAIWG
     I              BZHICD                      WXHICD
     I              BZRBCD                      WXRBCD
     I              BZFZST                      WXFZST
     I              BZAVST                      WXAVST
     I              BZCZWG                      WXCZWG
     I              BZC0WG                      WXC0WG
     I              BZURTN                      WXURTN
     I              BZAJC8                      WXAJC8
     I              BZRINB                      WXRINB
     I              BZRHNB                      WXRHNB
     I              BZRGNB                      WXRGNB
     I              BZLNCD                      WXLNCD
     I              BZTFNB                      WXTFNB
     I              BZN0CD                      WXN0CD
     I              BZX4ST                      WXX4ST
     I              BZTMVA                      WXTMVA
     I              BZTNVA                      WXTNVA
     I              BZBLPR                      WXBLPR
     I              BZBMPR                      WXBMPR
     I              BZLRCD                      WXLRCD
     I              BZU9ST                      WXU9ST
     I              BZCMCO                      WXCMCO
     I              BZQ1CD                      WXQ1CD
     I              BZQ8CD                      WXQ8CD
     I              BZCHTM                      WXCHTM
     I              BZQZCD                      WXQZCD
     I              BZXWST                      WXXWST
     I              BZXXST                      WXXXST
     I              BZVMST                      WXVMST
     I              BZSWGH                      WXSWGH
     I              BZPPHE                      WXPPHE
     I              BZR3CD                      WXR3CD
     I              BZSDCD                      WXSDCD
     I              BZICN1                      WXICN1
     I              BZSVCD                      WXSVCD
     I              BZICN2                      WXICN2
     I              BZSWCD                      WXSWCD
     I              BZV2NB                      WXV2NB
     I              BZSXCD                      WXSXCD
     I              BZITCN                      WXITCN
     I              BZSYCD                      WXSYCD
     I              BZITC5                      WXITC5
     I              BZSZCD                      WXSZCD
     I              BZICN6                      WXICN6
     I              BZS0CD                      WXS0CD
     I              BZICN7                      WXICN7
     I              BZS1CD                      WXS1CD
     I              BZICN8                      WXICN8
     I              BZS2CD                      WXS2CD
     I              BZICN9                      WXICN9
     I              BZS3CD                      WXS3CD
     I              BZICN0                      WXICN0
     I              BZS4CD                      WXS4CD
     I              BZSFNB                      WXSFNB
     I              BZA3WG                      WXA3WG
     I              BZSJNB                      WXSJNB
     I              BZLLCD                      WXLLCD
     I              BZLMCD                      WXLMCD
     I              BZP3ST                      WXP3ST
     I              BZSKNB                      WXSKNB
     I              BZSLNB                      WXSLNB
     I              BZSMNB                      WXSMNB
     I              BZP4ST                      WXP4ST
     I              BZCFNB                      WXCFNB
     I              BZCGNB                      WXCGNB
     I              BZILNB                      WXILNB
     I              BZCHNB                      WXCHNB
     I              BZCINB                      WXCINB
     I              BZCJNB                      WXCJNB
     I              BZCMNB                      WXCMNB
     I              BZCNNB                      WXCNNB
     I              BZCRNB                      WXCRNB
     I              BZCSNB                      WXCSNB
     I              BZCVNB                      WXCVNB
     I              BZCWNB                      WXCWNB
     I              BZCXNB                      WXCXNB
     I              BZCZNB                      WXCZNB
     I              BZC0NB                      WXC0NB
     I              BZN1CD                      WXN1CD
     I              BZB4NB                      WXB4NB
     I              BZB5NB                      WXB5NB
     I              BZX5ST                      WXX5ST
     I              BZX6ST                      WXX6ST
     I              BZX7ST                      WXX7ST
     I              BZPCCT                      WXPCCT
     I              BZBDNB                      WXBDNB
     I              BZBJNB                      WXBJNB
     I              BZSUST                      WXSUST
     I              BZSVST                      WXSVST
     I              BZSYST                      WXSYST
     I              BZSZST                      WXSZST
     I              BZS1ST                      WXS1ST
     I              BZXRCD                      WXXRCD
     I              BZXTCD                      WXXTCD
     I              BZXUCD                      WXXUCD
     I              BZF5WG                      WXF5WG
     I              BZF6WG                      WXF6WG
     I              BZF7WG                      WXF7WG
     I              BZBLNB                      WXBLNB
     I              BZBNNB                      WXBNNB
     I              BZS2ST                      WXS2ST
     I              BZS4ST                      WXS4ST
     I              BZS5ST                      WXS5ST
     I              BZS6ST                      WXS6ST
     I              BZS8ST                      WXS8ST
     I              BZS9ST                      WXS9ST
     I              BZTCST                      WXTCST
     I              BZTDST                      WXTDST
     I              BZUVST                      WXUVST
     I              BZUWST                      WXUWST
     I              BZUXST                      WXUXST
     I              BZVSST                      WXVSST
     I              BZAATM                      WXAATM
     I              BZAYNA                      WXAYNA
     I              BZA0NA                      WXA0NA
     I              BZAXDT                      WXAXDT
      *
     I@IORETI
      * Item Bill Of Material     Retrieval index
      * Renamed input format fields
     I              IOAIC3                      WYAIC3
     I              IOHGCD                      WYHGCD
     I              IOC9NB                      WYC9NB
     I              IOV2ST                      WYV2ST
     I              IOBOPR                      WYBOPR
     I              IOBPPR                      WYBPPR
     I              IOHGQT                      WYHGQT
     I              IOHHCD                      WYHHCD
     I              IOYAST                      WYYAST
     I              IOCNSM                      WYCNSM
     I              IOBMY1                      WYBMY1
     I              IOBMY2                      WYBMY2
     I              IOIXQT                      WYIXQT
     I              IOIYQT                      WYIYQT
     I              IORSST                      WYRSST
     I              IORTST                      WYRTST
     I              IOUVST                      WYUVST
     I              IOUWST                      WYUWST
     I              IOUXST                      WYUXST
     I              IOVSST                      WYVSST
     I              IOAATM                      WYAATM
     I              IOAYNA                      WYAYNA
     I              IOA0NA                      WYA0NA
     I              IOAXDT                      WYAXDT
      *
     I@IOREIB
      * Item Bill Of Material     Co/Item/Component,Sel "S
      * Renamed input format fields
     I              IOAIC3                      TAAIC3
     I              IOHGCD                      TAHGCD
     I              IOC9NB                      TAC9NB
     I              IOV2ST                      TAV2ST
     I              IOBOPR                      TABOPR
     I              IOBPPR                      TABPPR
     I              IOHGQT                      TAHGQT
     I              IOHHCD                      TAHHCD
     I              IOYAST                      TAYAST
     I              IOCNSM                      TACNSM
     I              IOBMY1                      TABMY1
     I              IOBMY2                      TABMY2
     I              IOIXQT                      TAIXQT
     I              IOIYQT                      TAIYQT
     I              IORSST                      TARSST
     I              IORTST                      TARTST
     I              IOUVST                      TAUVST
     I              IOUWST                      TAUWST
     I              IOUXST                      TAUXST
     I              IOVSST                      TAVSST
     I              IOAATM                      TAAATM
     I              IOAYNA                      TAAYNA
     I              IOA0NA                      TAA0NA
     I              IOAXDT                      TAAXDT
      *
     I@BGWKFW
      * Order Detail              Co/Order#/Item/Whse Not
      * Renamed input format fields
     I              OMAIC3                      TBAIC3
     I              OMC4NB                      TBC4NB
     I              OMDPNB                      TBDPNB
     I              OMUENB                      TBUENB
     I              OMHGCD                      TBHGCD
     I              OMAJCD                      TBAJCD
     I              OMBKC7                      TBBKC7
     I              OMCFC7                      TBCFC7
     I              OMGMST                      TBGMST
     I              OMGNST                      TBGNST
     I              OMMAVA                      TBMAVA
     I              OMKDVA                      TBKDVA
     I              OML8VA                      TBL8VA
     I              OML9VA                      TBL9VA
     I              OMGTST                      TBGTST
     I              OMGVST                      TBGVST
     I              OMGUST                      TBGUST
     I              OMQFST                      TBQFST
     I              OMAYVA                      TBAYVA
     I              OMEXDT                      TBEXDT
     I              OMLQCD                      TBLQCD
     I              OMRDCD                      TBRDCD
     I              OMQ7CD                      TBQ7CD
     I              OMBZPR                      TBBZPR
     I              OML6NB                      TBL6NB
     I              OMU1ST                      TBU1ST
     I              OMGIDT                      TBGIDT
     I              OMCRCD                      TBCRCD
     I              OMAGCD                      TBAGCD
     I              OMRZST                      TBRZST
     I              OMR0ST                      TBR0ST
     I              OMR1ST                      TBR1ST
     I              OMG7NA                      TBG7NA
     I              OMG8NA                      TBG8NA
     I              OMRPCD                      TBRPCD
     I              OMVEST                      TBVEST
     I              OMVGST                      TBVGST
     I              OMAVST                      TBAVST
     I              OMU0ST                      TBU0ST
     I              OMRFCD                      TBRFCD
     I              OMFZST                      TBFZST
     I              OMR1NB                      TBR1NB
     I              OMAVQT                      TBAVQT
     I              OMD0WG                      TBD0WG
     I              OMCCQT                      TBCCQT
     I              OMAUWG                      TBAUWG
     I              OMCBQT                      TBCBQT
     I              OMATWG                      TBATWG
     I              OMAQCS                      TBAQCS
     I              OMAGCS                      TBAGCS
     I              OMAKPR                      TBAKPR
     I              OMALPR                      TBALPR
     I              OMAUPR                      TBAUPR
     I              OMAVWG                      TBAVWG
     I              OMA4WG                      TBA4WG
     I              OMA5DT                      TBA5DT
     I              OMAODT                      TBAODT
     I              OMGNDT                      TBGNDT
     I              OMAMST                      TBAMST
     I              OMANST                      TBANST
     I              OMVAST                      TBVAST
     I              OMRGNB                      TBRGNB
     I              OMRHNB                      TBRHNB
     I              OMRINB                      TBRINB
     I              OMRBCD                      TBRBCD
     I              OMHICD                      TBHICD
     I              OMRNCD                      TBRNCD
     I              OMROCD                      TBROCD
     I              OMCXDT                      TBCXDT
     I              OMAJVN                      TBAJVN
     I              OMKXCD                      TBKXCD
     I              OMJPCD                      TBJPCD
     I              OMCQCD                      TBCQCD
     I              OMR4CD                      TBR4CD
     I              OMZ1ST                      TBZ1ST
     I              OMZ3ST                      TBZ3ST
     I              OMZ4ST                      TBZ4ST
     I              OMDUPR                      TBDUPR
     I              OMB6VL                      TBB6VL
     I              OMA1AA                      TBA1AA
     I              OMFZSX                      TBFZSX
     I              OMF0SX                      TBF0SX
     I              OMF1SX                      TBF1SX
     I              OMF2SX                      TBF2SX
     I              OMF3SX                      TBF3SX
     I              OMF4SX                      TBF4SX
     I              OMF5SX                      TBF5SX
     I              OMF6SX                      TBF6SX
     I              OMF7SX                      TBF7SX
     I              OMNTDT                      TBNTDT
     I              OMNUDT                      TBNUDT
     I              OMNVDT                      TBNVDT
     I              OMNWDT                      TBNWDT
     I              OMNXDT                      TBNXDT
     I              OMBUTM                      TBBUTM
     I              OMBVTM                      TBBVTM
     I              OMBWTM                      TBBWTM
     I              OMBXTM                      TBBXTM
     I              OMBYTM                      TBBYTM
     I              OMH5NX                      TBH5NX
     I              OMH6NX                      TBH6NX
     I              OMH7NX                      TBH7NX
     I              OMH8NX                      TBH8NX
     I              OMH9NX                      TBH9NX
     I              OMDVPR                      TBDVPR
     I              OMDWPR                      TBDWPR
     I              OMDXPR                      TBDXPR
     I              OMDYPR                      TBDYPR
     I              OMDZPR                      TBDZPR
     I              OMGSPR                      TBGSPR
     I              OMGTPR                      TBGTPR
     I              OMGUPR                      TBGUPR
     I              OMHOST                      TBHOST
     I              OMHPST                      TBHPST
     I              OMIOST                      TBIOST
     I              OMPEWG                      TBPEWG
     I              OMRINY                      TBRINY
     I              OMTIDT                      TBTIDT
     I              OMTJDT                      TBTJDT
     I              OMH2ST                      TBH2ST
     I              OMH0ST                      TBH0ST
     I              OMH1ST                      TBH1ST
     I              OMTKDT                      TBTKDT
     I              OMTLDT                      TBTLDT
     I              OMTMDT                      TBTMDT
     I              OMUVST                      TBUVST
     I              OMUWST                      TBUWST
     I              OMUXST                      TBUXST
     I              OMAATM                      TBAATM
     I              OMAYNA                      TBAYNA
     I              OMA0NA                      TBA0NA
     I              OMAXDT                      TBAXDT
      *
     I@BJCPFD
      * EDI Adv Ship Ntc Tare V2  Update index
      * Renamed input format fields
     I              BJH9NY                      TCH9NY
     I              BJQ2NY                      TCQ2NY
     I              BJTFNA                      TCTFNA
     I              BJC4NB                      TCC4NB
     I              BJJJU1                      TCJJU1
     I              BJYLAA                      TCYLAA
     I              BJYIAA                      TCYIAA
     I              BJP9U1                      TCP9U1
     I              BJYMAA                      TCYMAA
     I              BJYNAA                      TCYNAA
     I              BJD9NZ                      TCD9NZ
     I              BJEBNZ                      TCEBNZ
     I              BJEMNZ                      TCEMNZ
     I              BJENNZ                      TCENNZ
     I              BJYPAA                      TCYPAA
     I              BJFKNZ                      TCFKNZ
     I              BJQAU1                      TCQAU1
      *
     I@P140GG
      * EDI Adv Ship Ntc Dtl V2   Sgt/Order/Seq/Item/Palle
      * Renamed input format fields
     I              BMH9NY                      TDH9NY
     I              BMQ2NY                      TDQ2NY
     I              BMTFNA                      TDTFNA
     I              BMC4NB                      TDC4NB
     I              BMJJU1                      TDJJU1
     I              BMDPNB                      TDDPNB
     I              BMQ7NY                      TDQ7NY
     I              BMZEAA                      TDZEAA
     I              BMETNZ                      TDETNZ
     I              BMQ8NY                      TDQ8NY
     I              BMTCNY                      TDTCNY
     I              BMLET1                      TDLET1
     I              BMNEU1                      TDNEU1
     I              BMNFU1                      TDNFU1
     I              BMNGU1                      TDNGU1
     I              BMNHU1                      TDNHU1
     I              BMNWU1                      TDNWU1
     I              BMQBU1                      TDQBU1
     I              BMHVU1                      TDHVU1
     I              BMNCU1                      TDNCU1
     I              BMAGAB                      TDAGAB
     I              BMQCU1                      TDQCU1
     I              BMNDU1                      TDNDU1
     I              BMEINZ                      TDEINZ
     I              BMYWAA                      TDYWAA
     I              BMHZPR                      TDHZPR
     I              BMYZAA                      TDYZAA
     I              BMH0PR                      TDH0PR
     I              BMY0AA                      TDY0AA
     I              BMNIU1                      TDNIU1
     I              BMNJU1                      TDNJU1
     I              BMNKU1                      TDNKU1
     I              BMTDNY                      TDTDNY
     I              BMNLU1                      TDNLU1
     I              BMNMU1                      TDNMU1
     I              BMNNU1                      TDNNU1
     I              BMNPU1                      TDNPU1
     I              BMEJNZ                      TDEJNZ
     I              BMEKNZ                      TDEKNZ
     I              BMELNZ                      TDELNZ
      *
     I@AMREJE
      * Order Header Extension    Update index
      * Renamed input format fields
     I              AMAIC3                      TEAIC3
     I              AMC4NB                      TEC4NB
     I              AMRMNB                      TERMNB
     I              AMRUNB                      TERUNB
     I              AMXACD                      TEXACD
     I              AMOANA                      TEOANA
     I              AMHBAA                      TEHBAA
     I              AMJ0T1                      TEJ0T1
     I              AMGENY                      TEGENY
     I              AMJ1T1                      TEJ1T1
     I              AMHCAA                      TEHCAA
     I              AMQWDT                      TEQWDT
     I              AMQXDT                      TEQXDT
     I              AMQYDT                      TEQYDT
     I              AMHDAA                      TEHDAA
     I              AMCCTX                      TECCTX
     I              AMJ2T1                      TEJ2T1
     I              AMRLNA                      TERLNA
     I              AMRMNA                      TERMNA
     I              AMGINY                      TEGINY
     I              AMGFNY                      TEGFNY
     I              AMGGNY                      TEGGNY
     I              AMGHNY                      TEGHNY
     I              AMHEVL                      TEHEVL
     I              AMHFVL                      TEHFVL
     I              AMHGVL                      TEHGVL
     I              AMQZDT                      TEQZDT
     I              AMQ0DT                      TEQ0DT
     I              AMQ1DT                      TEQ1DT
     I              AMQ2DT                      TEQ2DT
     I              AMC2TX                      TEC2TX
     I              AMC3TX                      TEC3TX
     I              AMC6TX                      TEC6TX
     I              AMCHTX                      TECHTX
     I              AMCITX                      TECITX
     I              AMCLTX                      TECLTX
     I              AMB4TX                      TEB4TX
     I              AMCUTX                      TECUTX
     I              AMCVTX                      TECVTX
     I              AMB9TX                      TEB9TX
     I              AMJWSC                      TEJWSC
     I              AMITNY                      TEITNY
     I              AMLMT1                      TELMT1
     I              AMLWAA                      TELWAA
     I              AMFVST                      TEFVST
     I              AMF0ST                      TEF0ST
     I              AMF2ST                      TEF2ST
     I              AMF3ST                      TEF3ST
     I              AMJUSC                      TEJUSC
     I              AMJVSC                      TEJVSC
     I              AMV3T1                      TEV3T1
     I              AMV4T1                      TEV4T1
     I              AMV5T1                      TEV5T1
     I              AMV6T1                      TEV6T1
     I              AMV7T1                      TEV7T1
     I              AMV8T1                      TEV8T1
     I              AMV9T1                      TEV9T1
     I              AMWAT1                      TEWAT1
     I              AMWBT1                      TEWBT1
     I              AMWCT1                      TEWCT1
     I              AMWDT1                      TEWDT1
     I              AMQJNY                      TEQJNY
     I              AMQKNY                      TEQKNY
     I              AMQLNY                      TEQLNY
     I              AMP8NY                      TEP8NY
     I              AMP9NY                      TEP9NY
     I              AMQANY                      TEQANY
     I              AMQCNY                      TEQCNY
     I              AMQDNY                      TEQDNY
     I              AMQENY                      TEQENY
     I              AMQFNY                      TEQFNY
     I              AMQGNY                      TEQGNY
     I              AMQHNY                      TEQHNY
     I              AMQINY                      TEQINY
     I              AMQMNY                      TEQMNY
     I              AMMYU1                      TEMYU1
     I              AMJXSC                      TEJXSC
     I              AMJYSC                      TEJYSC
     I              AMJZSC                      TEJZSC
     I              AMJ0SC                      TEJ0SC
     I              AMMZU1                      TEMZU1
     I              AMM0U1                      TEM0U1
     I              AMM1U1                      TEM1U1
     I              AMM2U1                      TEM2U1
     I              AMM3U1                      TEM3U1
     I              AMW5DT                      TEW5DT
     I              AMW6DT                      TEW6DT
     I              AMUVST                      TEUVST
     I              AMUWST                      TEUWST
     I              AMUXST                      TEUXST
     I              AMVSST                      TEVSST
     I              AMAATM                      TEAATM
     I              AMAYNA                      TEAYNA
     I              AMA0NA                      TEA0NA
     I              AMAXDT                      TEAXDT
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         KEY: Order Head
     C     P2H9NY        PARM                    WP0001                         EDI SURROGATE N
     C     P2KESC        PARM                    WP0002                         Set EDI 856 Pal
     C     P2J5NX        PARM                    WP0003                         EDI Trading Par
     C     P2MEQT        PARM      P2MEQT        WP0004                         Total Quantity
     C     P2IFWG        PARM      P2IFWG        WP0005                         Total Weight Sh
     C     P2QGWG        PARM      P2QGWG        WP0006                         Total Gross Wei
     C     P2FQNZ        PARM      P2FQNZ        WP0007                         Total Pallet Co
     C     P2FRNZ        PARM      P2FRNZ        WP0008                         Total Unit Coun
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Crt EDI 856 DTL & TARE DN
      * S17064 DN 05/06/21-Added 'EDI Trading Partner No.' as Input Parm.
      * Crt EDI 856 DTL & TARE RT - Order Header TRG  * By Load/BTC/Co
     C                   EXSR      SARVGN
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Crt EDI 856 DTL & TARE RT - Order Header TRG  * By Load/BTC/Co
      *================================================================
      *
     C                   EVAL      WN0001 = ' '                                 Create EDI ASN
     C                   Z-ADD     *ZERO         WN0002                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0003                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0004                         Total Gross Wgt
     C                   Z-ADD     *ZERO         WN0005                         Total Pallet Co
     C                   Z-ADD     *ZERO         WN0006                         Total Unit Coun
     C                   EVAL      WN0007 = ' '                                 Orders on PO -
     C                   EVAL      WN0008 = ' '                                 First Time Flag
      *
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WN0001 = ' '                                 Create EDI ASN
     C                   Z-ADD     *ZERO         P2MEQT                         Total Quantity
     C                   Z-ADD     *ZERO         P2IFWG                         Total Weight Sh
     C                   Z-ADD     *ZERO         P2QGWG                         Total Gross Wei
     C                   Z-ADD     *ZERO         P2FQNZ                         Total Pallet Co
     C                   Z-ADD     *ZERO         P2FRNZ                         Total Unit Coun
     C                   Z-ADD     *ZERO         WN0002                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0003                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0004                         Total Gross Wgt
     C                   Z-ADD     *ZERO         WN0005                         Total Pallet Co
     C                   Z-ADD     *ZERO         WN0006                         Total Unit Coun
     C                   EVAL      WN0007 = ' '                                 Orders on PO -
     C                   EVAL      WN0008 = ' '                                 First Time Flag
     C                   MOVEL     'Y'           WN0008                         First Time Flag
     C                   EVAL      YL0001 = ' '                                 USR Update Flag
      * R17040 DN 05/14/21-Get EDI Tare Level f/856 Flag.
      * CASE: *OTHERWISE
      * RTV EDI Tare Level 856RT - EDI Bill To Interchange  * 
     C                   EXSR      SBRVGN
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    WQSA01                         Load ID
     C                   KFLD                    WQSA02                         Bill to Custome
     C                   KFLD                    WQSA03                         Company Number
      * Setup key
     C                   Z-ADD     P1RMNB        WQSA01                         Load ID
     C                   Z-ADD     P1B0C7        WQSA02                         Bill to Custome
     C                   Z-ADD     P1AIC3        WQSA03                         Company Number
      * Establish starting position
     C     KRSSA         SETLL     @BFCPF7                                      *
     C     KRSSA         READE     @BFCPF7                                90    *
      * Data record not found
     C   90              MOVEL     'USR0176'     W0RTN
      * USER: Process Data record
      * INITIALIZATION:
      * CASE: *OTHERWISE
     C                   DOW       NOT *IN90
     C                   MOVEL     'N'           WN0001                         Create EDI ASN
      * VALIDATIONS:
      * CASE: *OTHERWISE
      * Val Cust Setup 4/856 V2DN
      * VALIDATIONS: Is Bill To Customer Setup for EDI 856 ASN V2?
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           WN0001                         Create EDI ASN
      * DN-4/13/24-Copy/Move this function here to get what type of Whse.
      * Check Internal or External Warehouse Qualifies for 856 ASN.
      * CASE: *OTHERWISE
      * RTV 1st Whse/Country   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0001                         Company Number
     C                   Z-ADD     WAC4NB        WL0002                         Order Number
     C                   Z-ADD     1             WL0003                         Order Sequence
     C                   Z-ADD     1             WL0004                         Order Secondary
     C                   EXSR      SCRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0005        YL0004                         Warehouse Code
     C                   MOVEL(P)  WL0006        YN0001                         Country Code
      * Rtv Liv w/Carl,Locatn RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0004        WL0007                         Warehouse Code
     C                   EXSR      SDRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0008        YL0005                         Warehouse Locat
     C                   MOVEL(P)  WL0009        YL0006                         WHS Live with C
     C                   MOVEL(P)  WL0010        YN0003                         WHS PFS Interfa
      * Internal Warehouse Must Be Live with Carlisle.
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.Warehouse Location is Internal (Plant)
      *   |- c2    : LCL.WHS Live w/Carlisle is Yes
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0005 = 'I'
     C                   IF        YL0006 = 'Y'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'Y'           WN0001                         Create EDI ASN
     C                   MOVEL     YL0004        YN0002                         Warehouse Code
     C                   ELSE
      * CASE: *OTHERWISE
      * DN-4/13/24-Allow External 3PL Warehouses to Receive EDI 856 ASN.
      * CASE: LCL.Warehouse Location is External
      * DN 5/13/24-We will NOT use EDI WHS Interchange table to
      *   whether 3pl external warehouse is allow to create 856 or not.
      *   We will alter table Warehouse Codes (CAADREP) table to add
      *   new field 'Crt 856 ASN for 3PL Whse'. If value is 'Y' then we
      *   will allow to create the 856 ASN.
      * Rtv Allow 856 f/3PL WhsRT - EDI WHS Interchange  * 
     C                   IF        YL0005 = 'E'
     C                   EXSR      SERVGN
      * OK to Receive 856 ASN?
      * CASE: LCL.OK to Process USR is Yes
     C                   IF        YL0007 = 'Y'
     C                   MOVEL     'Y'           WN0001                         Create EDI ASN
     C                   MOVEL     YL0004        YN0002                         Warehouse Code
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * DN-4/13/24-Comment Out & Move downstream.
      * DN-4/13/24-Remove check of Program Name USR = 'PDN2XFR'.
      * Do Not Check Customer & Warehouse if Coming From PDN2XFR Program.
      * CASE: PAR.Create EDI ASN 856 V2 USR is Yes
      * RTV EDI ASN 856 Info  RT - EDI Bill To Interchange  * 
      * Move input parameters to subroutine local variables.
     C                   IF        WN0001 = 'Y'
     C                   Z-ADD     P1B0C7        WL0011                         Bill to Custome
     C                   MOVEL(P)  'ADVSN'       WL0012                         Interchange Cod
     C                   EXSR      SFRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0013        YL0003                         EDI Trading Par
     C                   MOVEL(P)  WL0014        YL0008                         EDI Detailed AS
     C                   MOVEL(P)  WL0015        YL0009                         Record Status
      * Bill To Customer Must Be Active & Setup for EDI 856.
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.EDI Detailed ASN 856 Rqd is Yes
      *   |- c2    : LCL.Record Status is Active
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0008 = 'Y'
     C                   IF        YL0009 = 'A'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'Y'           WN0001                         Create EDI ASN
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           WN0001                         Create EDI ASN
     C                   END                                                    *FI
      * DN-4/13/24-Commented out & moved to beginning of code.
      * DN-4/13/24-Wrap logic PUTBXFR inside PAR.Create EDI ASN 856 V2 US
      * CASE: PAR.Create EDI ASN 856 V2 USR is Yes
      * Rtv EDI Manual PO Sts XF - EDI Bill To Interchange  * ADVSN
     C                   IF        WN0001 = 'Y'
     C                   CALL      'PUTBXFR'                            90      Rtv EDI Manual
     C                   PARM      *BLANK        W0RTN
     C                   PARM      P1AIC3        WQ0001                         Company Number
     C                   PARM      WAC4NB        WQ0002                         Order Number
     C                   PARM      'ADVSN'       WQ0003                         Interchange Cod
     C     YL0010        PARM      *BLANK        WQ0004                         Send EDI Docume
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUTBXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * If Send EDI Documents = N, set Create EDI ASN 856 V2 USR = N
      * CASE: LCL.Send EDI Document Y/N is No
     C                   IF        YL0010 = 'N'
     C                   MOVEL     'N'           WN0001                         Create EDI ASN
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * R17040 DN 03/05/21-Additional Validations.
      * CASE: *OTHERWISE
      * Do Not Reprocess EDI 856 Transactions Already Been Sent.
      * CASE: PAR.Create EDI ASN 856 V2 USR is Yes
      * This scenario will handle Loads with different Bill To Customers
      * that may have a Load(s) that may have already been 'Sent'.
      * RTV EDI 856/824 Sts    RT - Order Header Extension  * 
     C                   IF        WN0001 = 'Y'
     C                   EXSR      SGRVGN
      * CASE: LCL.OHE EDI 856 Action is Sent
     C                   IF        YL0011 = 'S'
     C                   MOVEL     'N'           WN0001                         Create EDI ASN
     C                   END                                                    *FI
     C                   END                                                    *FI
      * If Trade Partner Control is Setup, Check for Held EDI 856.
      * CASE: PAR.Create EDI ASN 856 V2 USR is Yes
      * RTV EDI 856 Cntrl Flag RT - Trade Partner Control  * 
     C                   IF        WN0001 = 'Y'
     C                   EXSR      SHRVGN
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.Hold 856 f/Cust Asgn App# is Yes
      *   |- c2    : LCL.Hold 856 f/Carr PRO is Yes
      *   '-
      * Val Upd Held 856 f/TP XF - Order Header TRG  * 
     C                   IF        YL0012 = 'Y' OR
     C                             YL0013 = 'Y'
     C                   CLEAR                   PARC
     C                   Z-ADD     P1RMNB        PARMNB                         Load ID
     C                   Z-ADD     WAB0C7        PAB0C7                         Bill to Custome
      *
     C                   CALL      'PUSWXFR'                            90      Val Upd Held 85
     C                   PARM      *BLANK        W0RTN
     C                   PARM                    PARC                           KEY: Order Head
     C                   PARM      YL0012        WQ0005                         Hold 856 f/Cust
     C                   PARM      YL0013        WQ0006                         Hold 856 f/Carr
     C     WN0001        PARM      WN0001        WQ0007                         Create EDI ASN
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUSWXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
     C                   END                                                    *FI
      * PROCESS: Create 856 ORD (ECP142), DTL (ECP140) & TARE (ECP145) Da
      * CASE: PAR.Create EDI ASN 856 V2 USR is Yes
      * First Time Processing.
      * CASE: PAR.First Time Flag is Yes
     C                   IF        WN0001 = 'Y'
     C                   IF        WN0008 = 'Y'
     C                   MOVEL     'N'           WN0008                         First Time Flag
     C                   MOVEL     'Y'           YL0001                         USR Update Flag
     C                   MOVEL     WABCNA        YL0014                         Customer Purcha
     C                   END                                                    *FI
      * Break by PO# and Create EDI Adv Ship Ntc Order V2 (ECP142).
      * CASE: DB1.Customer Purchase Order # EQ LCL.Customer Purchase Orde
      * Set Required Info.
      * CASE: *OTHERWISE
     C                   IF        WABCNA = YL0014
     C                   EVAL      YL0015 = ' '                                 Order Number Al
     C                   MOVEL     WAC4NB        YL0015                         Order Number Al
     C                   Z-ADD     0             ZQ
     C     WN0007        CAT(P)    YL0015:ZQ     WN0007                         Orders on PO -
      * Set Packaging Code.
      * CASE: DB1.Palletize is yes
     C                   IF        WAVEST = 'Y'
     C                   EVAL      YL0016 = ' '                                 TD101-Packaging
     C                   MOVEL     'PLT'         YL0016                         TD101-Packaging
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0016 = ' '                                 TD101-Packaging
     C                   MOVEL     'CAS'         YL0016                         TD101-Packaging
     C                   END                                                    *FI
      * LCL.Order Date USR = DB1.Order Date
     C                   IF        WAA0DT = *ZERO
     C                   Z-ADD     *ZERO         YL0017
     C                   ELSE
     C     WAA0DT        ADD       19000000      YL0017                         Order Date USR
     C                   END
      * LCL.Requested Delivery DteUSR = DB1.Requested Delivery Date
     C                   IF        WAEIDT = *ZERO
     C                   Z-ADD     *ZERO         YL0018
     C                   ELSE
     C     WAEIDT        ADD       19000000      YL0018                         Requested Deliv
     C                   END
      * R17040 DN 03/08/21-Get Customer Vendor f/PO & Save Invoice Number
      * RTV Cust Vendor f/PO  RT - Order Header Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WAAIC3        WL0016                         Company Number
     C                   Z-ADD     WAC4NB        WL0017                         Order Number
     C                   EXSR      SIRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0018        YL0019                         OHE Customer Ve
      * S17064 DN 05/06/21-If Customer Vendor is Blank, Get From ECP004.
      * CASE: LCL.OHE Customer Vendor f/PO is *Blank
      * Rtv Vendor Number     RT - EDI Purchase Order Header  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0019 = ' '
     C                   MOVEL(P)  P2J5NX        WL0019                         EDI Trading Par
     C                   MOVEL(P)  YL0014        WL0020                         G5003-PURCHASE
     C                   EXSR      SJRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0021        YL0019                         Customer Ref ID
     C                   END                                                    *FI
     C                   Z-ADD     WACONB        YL0020                         Invoice Number
      * Accumulate SUM Qty/Wgt for All Orders.
      * CASE: *OTHERWISE
      * R17040 DN 03/08/21-Added Calculation for Total Unit Count.
      * Rtv Sum Qty/Wgt 4/856  RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0022                         Company Number
     C                   Z-ADD     WAC4NB        WL0023                         Order Number
     C                   Z-ADD     YL0021        WL0024                         Total Quantity
     C                   Z-ADD     YL0022        WL0025                         Total Weight Sh
     C                   Z-ADD     YL0024        WL0027                         Total Unit Coun
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0024        YL0021                         Total Quantity
     C                   Z-ADD     WL0025        YL0022                         Total Weight Sh
     C                   Z-ADD     WL0026        YL0023                         Total Gross Wei
     C                   Z-ADD     WL0027        YL0024                         Total Unit Coun
      * R17040 DN 03/09/21-Get Total Pallet Count.
      * Exc Total Pallet Count XF - Manifest Detail  * 
     C                   CALL      'PUSXXFR'                            90      Exc Total Palle
     C                   PARM      *BLANK        W0RTN
     C                   PARM      P1AIC3        WQ0015                         Company Number
     C                   PARM      WAC4NB        WQ0016                         Order Number
     C     YL0031        PARM      YL0031        WQ0017                         Total Pallet Co
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUSXXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * Accumulate Totals for All Orders by PO# to Create ECP142 ORD Reco
     C                   ADD       YL0021        WN0002                         Total Qty Ship
     C                   ADD       YL0022        WN0003                         Total Wgt Ship
     C                   ADD       YL0023        WN0004                         Total Gross Wgt
      * R17040 DN 03/09/21-ACCUM Total Unit Count ORD & Total Pallet Coun
      * CASE: *OTHERWISE
     C                   ADD       YL0024        WN0006                         Total Unit Coun
     C                   ADD       YL0031        WN0005                         Total Pallet Co
      * Accumulate Totals for All Orders to Create ECP139 HDR Record.
     C                   ADD       YL0021        P2MEQT                         Total Quantity
     C                   ADD       YL0022        P2IFWG                         Total Weight Sh
     C                   ADD       YL0023        P2QGWG                         Total Gross Wei
      * R17040 DN 03/08/21-ACCUM Total Unit Count Hdr & Total Pallet Coun
      * CASE: *OTHERWISE
     C                   ADD       YL0024        P2FRNZ                         Total Unit Coun
     C                   ADD       YL0031        P2FQNZ                         Total Pallet Co
     C                   ELSE
      * CASE: *OTHERWISE
      * Create ECP142 record for each PO# Break.
      * R17040 DN 03/08/21-Populate New Fields: Pallet Count, Unit Count,
      *        Slip Sheet Count, Vendor Nbr & Invoice Nbr.
      * Crt EDI ASN Order V2  CR - EDI Adv Ship Ntc Order V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0032                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0033                         REF02-Ref ID-Lo
     C                   MOVEL(P)  YL0003        WL0034                         TRADE PARTNER C
     C                   MOVEL(P)  YL0014        WL0035                         PRF01-Customer
     C                   Z-ADD     YL0017        WL0036                         PRF04-Cust PO D
     C                   MOVEL(P)  'SO'          WL0037                         PRF07 PO Type C
     C                   MOVEL(P)  WN0007        WL0038                         Orders on PO -
     C                   MOVEL(P)  YL0016        WL0039                         TD101-Packaging
     C                   Z-ADD     WN0002        WL0040                         TD102 Case Quan
     C                   Z-ADD     WN0005        WL0041                         TD102 Pallet Co
     C                   Z-ADD     WN0006        WL0042                         Unit Count
     C                   Z-ADD     1             WL0043                         Slip Sheet Coun
     C                   Z-ADD     WN0004        WL0044                         TD107 Weight-Gr
     C                   Z-ADD     WN0003        WL0045                         TD107 Weight-Ne
     C                   Z-ADD     YL0018        WL0046                         DTM02-Req Deliv
     C                   Z-ADD     YL0018        WL0047                         DTM02-Req PU Da
     C                   Z-ADD     *ZERO         WL0048                         DTM02-Unused Da
     C                   Z-ADD     *ZERO         WL0049                         DTM02-Unused Da
     C                   MOVEL(P)  YL0019        WL0050                         REF02/IA Vendor
     C                   Z-ADD     YL0020        WL0051                         REF02 Invoice N
     C                   EXSR      SMCRRC
      * Reinitialize for Next Purchase Order #.
      * CASE: *OTHERWISE
     C                   MOVEL     WABCNA        YL0014                         Customer Purcha
     C                   EVAL      WN0007 = ' '                                 Orders on PO -
     C                   EVAL      YL0015 = ' '                                 Order Number Al
     C                   MOVEL     WAC4NB        YL0015                         Order Number Al
     C                   EVAL      WN0007 = ' '                                 Orders on PO -
     C                   MOVEL     YL0015        WN0007                         Orders on PO -
      * Set Packaging Code.
      * CASE: DB1.Palletize is yes
     C                   IF        WAVEST = 'Y'
     C                   EVAL      YL0016 = ' '                                 TD101-Packaging
     C                   MOVEL     'PLT'         YL0016                         TD101-Packaging
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0016 = ' '                                 TD101-Packaging
     C                   MOVEL     'CAS'         YL0016                         TD101-Packaging
     C                   END                                                    *FI
      * LCL.Order Date USR = DB1.Order Date
     C                   IF        WAA0DT = *ZERO
     C                   Z-ADD     *ZERO         YL0017
     C                   ELSE
     C     WAA0DT        ADD       19000000      YL0017                         Order Date USR
     C                   END
      * LCL.Requested Delivery DteUSR = DB1.Requested Delivery Date
     C                   IF        WAEIDT = *ZERO
     C                   Z-ADD     *ZERO         YL0018
     C                   ELSE
     C     WAEIDT        ADD       19000000      YL0018                         Requested Deliv
     C                   END
      * R17040 DN 03/08/21-Get Customer Vendor f/PO & Save Invoice Number
      * RTV Cust Vendor f/PO  RT - Order Header Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0016                         Company Number
     C                   Z-ADD     WAC4NB        WL0017                         Order Number
     C                   EXSR      SIRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0018        YL0019                         OHE Customer Ve
      * S17064 DN 05/06/21-If Customer Vendor is Blank, Get From ECP004.
      * CASE: LCL.OHE Customer Vendor f/PO is *Blank
      * Rtv Vendor Number     RT - EDI Purchase Order Header  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0019 = ' '
     C                   MOVEL(P)  P2J5NX        WL0019                         EDI Trading Par
     C                   MOVEL(P)  YL0014        WL0020                         G5003-PURCHASE
     C                   EXSR      SJRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0021        YL0019                         Customer Ref ID
     C                   END                                                    *FI
     C                   Z-ADD     WACONB        YL0020                         Invoice Number
      * Accumulate SUM Qty/Wgt for All Orders.
      * CASE: *OTHERWISE
      * R17040 DN 03/08/21-Added Calculation for Total Unit Count.
      * Rtv Sum Qty/Wgt 4/856  RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0022                         Company Number
     C                   Z-ADD     WAC4NB        WL0023                         Order Number
     C                   Z-ADD     YL0021        WL0024                         Total Quantity
     C                   Z-ADD     YL0022        WL0025                         Total Weight Sh
     C                   Z-ADD     YL0024        WL0027                         Total Unit Coun
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0024        YL0021                         Total Quantity
     C                   Z-ADD     WL0025        YL0022                         Total Weight Sh
     C                   Z-ADD     WL0026        YL0023                         Total Gross Wei
     C                   Z-ADD     WL0027        YL0024                         Total Unit Coun
      * R17040 DN 03/09/21-Get Total Pallet Count.
      * Exc Total Pallet Count XF - Manifest Detail  * 
     C                   CALL      'PUSXXFR'                            90      Exc Total Palle
     C                   PARM      *BLANK        W0RTN
     C                   PARM      P1AIC3        WQ0018                         Company Number
     C                   PARM      WAC4NB        WQ0019                         Order Number
     C     YL0031        PARM      YL0031        WQ0020                         Total Pallet Co
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUSXXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * PO Break, Reset Totals to Create ECP142 ORD Record.
     C                   Z-ADD     YL0021        WN0002                         Total Qty Ship
     C                   Z-ADD     YL0022        WN0003                         Total Wgt Ship
     C                   Z-ADD     YL0023        WN0004                         Total Gross Wgt
      * R17040 DN 03/09/21-Reset Total Unit Count ORD & Total Pallet Coun
      * CASE: *OTHERWISE
     C                   Z-ADD     YL0024        WN0006                         Total Unit Coun
     C                   Z-ADD     YL0031        WN0005                         Total Pallet Co
      * Accumulate Totals for All Orders to Create ECP139 HDR Record.
     C                   ADD       YL0021        P2MEQT                         Total Quantity
     C                   ADD       YL0022        P2IFWG                         Total Weight Sh
     C                   ADD       YL0023        P2QGWG                         Total Gross Wei
      * R17040 DN 03/08/21-ACCUM Total Unit Count Hdr & Total Pallet Coun
      * CASE: *OTHERWISE
     C                   ADD       YL0024        P2FRNZ                         Total Unit Coun
     C                   ADD       YL0031        P2FQNZ                         Total Pallet Co
     C                   END                                                    *FI
      * Create ECP140 DTL & ECP145 TARE for Each Order.
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * Crt EDI 856 DTL & TARE RT - Manifest Detail  * 
     C                   EXSR      SNRVGN
      * Update EDI 856 Info in OHE.
      * Upd OHE EDI 856 Error  RT - Order Header Extension  * 
     C                   EXSR      THRVGN
     C                   END                                                    *FI
     C     KRSSA         READE     @BFCPF7                                90    *
     C                   ENDDO
      * USER: Exit processing
      * Last Record Processing.
      * CASE: LCL.USR Update Flag is Yes
      * R17040 DN 03/08/21-Populate New Fields: Pallet Count, Unit Count,
      *        Slip Sheet Count, Vendor Nbr & Invoice Nbr.
      * Crt EDI ASN Order V2  CR - EDI Adv Ship Ntc Order V2  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0001 = 'Y'
     C                   Z-ADD     P2H9NY        WL0032                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0033                         REF02-Ref ID-Lo
     C                   MOVEL(P)  YL0003        WL0034                         TRADE PARTNER C
     C                   MOVEL(P)  YL0014        WL0035                         PRF01-Customer
     C                   Z-ADD     YL0017        WL0036                         PRF04-Cust PO D
     C                   MOVEL(P)  'SO'          WL0037                         PRF07 PO Type C
     C                   MOVEL(P)  WN0007        WL0038                         Orders on PO -
     C                   MOVEL(P)  YL0016        WL0039                         TD101-Packaging
     C                   Z-ADD     WN0002        WL0040                         TD102 Case Quan
     C                   Z-ADD     WN0005        WL0041                         TD102 Pallet Co
     C                   Z-ADD     WN0006        WL0042                         Unit Count
     C                   Z-ADD     1             WL0043                         Slip Sheet Coun
     C                   Z-ADD     WN0004        WL0044                         TD107 Weight-Gr
     C                   Z-ADD     WN0003        WL0045                         TD107 Weight-Ne
     C                   Z-ADD     YL0018        WL0046                         DTM02-Req Deliv
     C                   Z-ADD     YL0018        WL0047                         DTM02-Req PU Da
     C                   Z-ADD     *ZERO         WL0048                         DTM02-Unused Da
     C                   Z-ADD     *ZERO         WL0049                         DTM02-Unused Da
     C                   MOVEL(P)  YL0019        WL0050                         REF02/IA Vendor
     C                   Z-ADD     YL0020        WL0051                         REF02 Invoice N
     C                   EXSR      SMCRRC
     C                   END                                                    *FI
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * RTV EDI Tare Level 856RT - EDI Bill To Interchange  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0002 = ' '                                 EDI Tare Level
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WBB0C7                         Bill to Custome
     C                   KFLD                    WBM4AA                         Interchange Cod
      * Setup key
     C                   Z-ADD     P1B0C7        WBB0C7                         Bill to Custome
     C                   EVALR     WBM4AA = ' '                                 Interchange Cod
     C                   MOVEL     'ADVSN'       WBM4AA                         Interchange Cod
      * Establish starting position
     C     KRSSB         CHAIN     @GQREH2                            90        *
      * Data record not found
     C   90              MOVEL     'USR4373'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WBSIAA        YL0002                         EDI Tare Level
     C                   ENDIF
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * RTV 1st Whse/Country   RT - Order Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KPSSC         KLIST
     C                   KFLD                    WQSC01                         Company Number
     C                   KFLD                    WQSC02                         Order Number
     C                   KFLD                    WCDPNB                         Order Sequence
     C                   KFLD                    WCUENB                         Order Secondary
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    WQSC01                         Company Number
     C                   KFLD                    WQSC02                         Order Number
      * Setup key
     C                   Z-ADD     WL0001        WQSC01                         Company Number
     C                   Z-ADD     WL0002        WQSC02                         Order Number
     C                   Z-ADD     WL0003        WCDPNB                         Order Sequence
     C                   Z-ADD     WL0004        WCUENB                         Order Secondary
      * Establish starting position
     C     KPSSC         SETLL     @BGWKAE                                      *
     C     KRSSC         READE     @BGWKAE                                90    *
      * Data record not found
     C   90              MOVEL     'USR1309'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     WCAJCD        WL0005                         Warehouse Code
     C                   MOVEL     WCKXCD        WL0006                         Country Code
     C                   GOTO      SCEXIT                                       *QUIT
     C     KRSSC         READE     @BGWKAE                                90    *
     C                   ENDDO
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * Rtv Liv w/Carl,Locatn RT - Warehouse  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    WDAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     WL0007        WDAJCD                         Warehouse Code
      * Establish starting position
     C     KRSSD         CHAIN     @ADREAO                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0007'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WL0008 = ' '                                 Warehouse Locat
     C                   EVAL      WL0009 = ' '                                 WHS Live with C
     C                   EVAL      WL0010 = ' '                                 WHS PFS Interfa
     C                   GOTO      SDEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WDT0ST        WL0008                         Warehouse Locat
     C                   MOVEL     WDRRSX        WL0009                         WHS Live with C
     C                   MOVEL     WDRSSX        WL0010                         WHS PFS Interfa
     C                   ENDIF
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SERVGN        BEGSR
      *================================================================
      * Rtv Allow 856 f/3PL WhsRT - EDI WHS Interchange  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   MOVEL     'N'           YL0007                         OK to Process U
      * Define keylist
     C     KRSSE         KLIST
     C                   KFLD                    WEAJCD                         Warehouse Code
     C                   KFLD                    WEM4AA                         Interchange Cod
      * Setup key
     C                   MOVEL     YL0004        WEAJCD                         Warehouse Code
     C                   EVALR     WEM4AA = ' '                                 Interchange Cod
     C                   MOVEL     'ADVSN'       WEM4AA                         Interchange Cod
      * Establish starting position
     C     KRSSE         CHAIN     @G0REJZ                            90        *
      * Data record not found
     C   90              MOVEL     'USR4409'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Record Status is Active
     C                   IF        NOT *IN90
     C                   IF        WEVSST = 'A'
     C                   MOVEL     'Y'           YL0007                         OK to Process U
     C                   END                                                    *FI
     C                   ENDIF
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFRVGN        BEGSR
      *================================================================
      * RTV EDI ASN 856 Info  RT - EDI Bill To Interchange  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0013 = ' '                                 EDI Trading Par
     C                   EVAL      WL0014 = ' '                                 EDI Detailed AS
     C                   EVAL      WL0015 = ' '                                 Record Status
      * Define keylist
     C     KRSSF         KLIST
     C                   KFLD                    WBB0C7                         Bill to Custome
     C                   KFLD                    WBM4AA                         Interchange Cod
      * Setup key
     C                   Z-ADD     WL0011        WBB0C7                         Bill to Custome
     C                   MOVEL     WL0012        WBM4AA                         Interchange Cod
      * Establish starting position
     C     KRSSF         CHAIN     @GQREH2                            90        *
      * Data record not found
     C   90              MOVEL     'USR4373'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WBJ5NX        WL0013                         EDI Trading Par
     C                   MOVEL     WBBIU1        WL0014                         EDI Detailed AS
     C                   MOVEL     WBVSST        WL0015                         Record Status
     C                   ENDIF
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * RTV EDI 856/824 Sts    RT - Order Header Extension  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0011 = ' '                                 OHE EDI 856 Act
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    WFAIC3                         Company Number
     C                   KFLD                    WFC4NB                         Order Number
      * Setup key
     C                   Z-ADD     WAAIC3        WFAIC3                         Company Number
     C                   Z-ADD     WAC4NB        WFC4NB                         Order Number
      * Establish starting position
     C     KRSSG         CHAIN     @AMREJF                            90        *
      * Data record not found
     C   90              MOVEL     'USR3697'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WFJUSC        YL0011                         OHE EDI 856 Act
     C                   ENDIF
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   SHRVGN        BEGSR
      *================================================================
      * RTV EDI 856 Cntrl Flag RT - Trade Partner Control  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0012 = ' '                                 Hold 856 f/Cust
     C                   EVAL      YL0013 = ' '                                 Hold 856 f/Carr
      * Define keylist
     C     KRSSH         KLIST
     C                   KFLD                    WGJ5NX                         EDI Trading Par
      * Setup key
     C                   MOVEL     YL0003        WGJ5NX                         EDI Trading Par
      * Establish starting position
     C     KRSSH         CHAIN     @B8REVF                            90        *
      * Data record not found
     C   90              MOVEL     'USR4842'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WGCFSC        YL0012                         Hold 856 f/Cust
     C                   MOVEL     WGCGSC        YL0013                         Hold 856 f/Carr
     C                   ENDIF
      *================================================================
     CSR   SHEXIT        ENDSR
      /EJECT
     CSR   SIRVGN        BEGSR
      *================================================================
      * RTV Cust Vendor f/PO  RT - Order Header Extension  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0018 = ' '                                 OHE Customer Ve
      * Define keylist
     C     KRSSI         KLIST
     C                   KFLD                    WFAIC3                         Company Number
     C                   KFLD                    WFC4NB                         Order Number
      * Setup key
     C                   Z-ADD     WL0016        WFAIC3                         Company Number
     C                   Z-ADD     WL0017        WFC4NB                         Order Number
      * Establish starting position
     C     KRSSI         CHAIN     @AMREJF                            90        *
      * Data record not found
     C   90              MOVEL     'USR3697'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WFM1U1        WL0018                         OHE Customer Ve
     C                   ENDIF
      *================================================================
     CSR   SIEXIT        ENDSR
      /EJECT
     CSR   SJRVGN        BEGSR
      *================================================================
      * Rtv Vendor Number     RT - EDI Purchase Order Header  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   EVAL      WL0021 = ' '                                 Customer Ref ID
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSJ         KLIST
     C                   KFLD                    WQSJ01                         EDI Trading Par
     C                   KFLD                    WQSJ02                         G5003-PURCHASE
      * Setup key
     C                   MOVEL     WL0019        WQSJ01                         EDI Trading Par
     C                   MOVEL     WL0020        WQSJ02                         G5003-PURCHASE
      * Establish starting position
     C     KRSSJ         SETLL     @P004SK                                      *
     C     KRSSJ         READE     @P004SK                                90    *
      * Data record not found
     C   90              MOVEL     'USR3103'     W0RTN
      * USER: Process Data record
      * Use Last Non-Blank Vendor Number.
      * CASE: DB1.Customer Ref ID is Entered
     C                   DOW       NOT *IN90
     C                   IF        WHBRU1 <> ' '
     C                   MOVEL     WHBRU1        WL0021                         Customer Ref ID
     C                   END                                                    *FI
     C     KRSSJ         READE     @P004SK                                90    *
     C                   ENDDO
      *================================================================
     CSR   SJEXIT        ENDSR
      /EJECT
     CSR   SKRVGN        BEGSR
      *================================================================
      * Rtv Sum Qty/Wgt 4/856  RT - Order Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0024                         Total Quantity
     C                   Z-ADD     *ZERO         WL0025                         Total Weight Sh
     C                   Z-ADD     *ZERO         WL0026                         Total Gross Wei
     C                   Z-ADD     *ZERO         WL0027                         Total Unit Coun
     C                   MOVEL     'Y'           YL0025                         First Time Flag
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSK         KLIST
     C                   KFLD                    WQSK01                         Company Number
     C                   KFLD                    WQSK02                         Order Number
      * Setup key
     C                   Z-ADD     WL0022        WQSK01                         Company Number
     C                   Z-ADD     WL0023        WQSK02                         Order Number
      * Establish starting position
     C     KRSSK         SETLL     @BGWKAE                                      *
     C     KRSSK         READE     @BGWKAE                                90    *
      * Data record not found
     C   90              MOVEL     'USR1309'     W0RTN
      * USER: Process Data record
      * Total Quantity Shipped.
     C                   DOW       NOT *IN90
     C                   ADD       WCCBQT        WL0024                         Total Quantity
      * Total Net Weight.
     C                   ADD       WCATWG        WL0025                         Total Weight Sh
      * Total Gross Weight.
      * CASE: LCL.First Time Flag is Yes
     C                   IF        YL0025 = 'Y'
     C                   MOVEL     'N'           YL0025                         First Time Flag
     C                   Z-ADD     *ZERO         YL0026                         USR Weight Accu
     C                   Z-ADD     *ZERO         YL0027                         Order Quantity
      * RTV Gross Wgt/Qty     XF - Order Detail  * 
     C                   CALL      'PQPQXFR'                            90      RTV Gross Wgt/Q
     C                   PARM      *BLANK        W0RTN
     C                   PARM      WCAIC3        WQ0008                         Company Number
     C                   PARM      WCC4NB        WQ0009                         Order Number
     C                   PARM      WCDPNB        WQ0010                         Order Sequence
     C                   PARM      WCUENB        WQ0011                         Order Secondary
     C     YL0026        PARM      YL0026        WQ0012                         USR Weight Accu
     C     YL0027        PARM      YL0027        WQ0013                         Order Quantity
     C                   PARM      *ZERO         WQ0014                         Avg Pallet Tare
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PQPQXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   Z-ADD     YL0026        WL0026                         Total Gross Wei
     C                   END                                                    *FI
      * R17040 DN 03/08/21-Get Item Dflt Info & Calc/Accum Total Unit Cou
      * CASE: *OTHERWISE
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WCHGCD        WL0028                         Item Code
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0029        YL0028                         Piece Count Ite
     C                   Z-ADD     WL0030        YL0029                         Pieces Per Bag
     C                   Z-ADD     WL0031        YL0030                         Bags Per Unit
      * Calculate & Accumulate Total Unit Count Hdr.
      * CASE: LCL.Piece Count Item is yes
      * Compute: Tot Unit Cnt Hdr
      * PAR.Total Unit Count Hdr U =
      *    *COMPUTE ((x1 * x2 * x3) + x4)
      * x1    : LCL.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Bags Per Unit
      * *     : PGM.*Synon (17,7) work field *
      * x3    : DB1.Quantity Shipped Total
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Unit Count Hdr U
     C                   IF        YL0028 = 'Y'
     C     YL0029        MULT      YL0030        W0WD02                         *Synon (17,7) w
     C     W0WD02        MULT      WCCBQT        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WL0027        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WL0027                         Total Unit Coun
     C                   ELSE
      * CASE: *OTHERWISE
     C                   ADD       WCCBQT        WL0027                         Total Unit Coun
     C                   END                                                    *FI
     C     KRSSK         READE     @BGWKAE                                90    *
     C                   ENDDO
      *================================================================
     CSR   SKEXIT        ENDSR
      /EJECT
     CSR   SLRVGN        BEGSR
      *================================================================
      * Rtv Piece Count Itm InfRT - Item Default  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0029 = ' '                                 Piece Count Ite
     C                   Z-ADD     *ZERO         WL0030                         Pieces Per Bag
     C                   Z-ADD     *ZERO         WL0031                         Bags Per Unit
      * Define keylist
     C     KRSSL         KLIST
     C                   KFLD                    WIHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WL0028        WIHGCD                         Item Code
      * Establish starting position
     C     KRSSL         CHAIN     @BYREA1                            90        *
      * Data record not found
     C   90              MOVEL     'USR1160'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WIPCCT        WL0029                         Piece Count Ite
     C                   Z-ADD     WIBDNB        WL0030                         Pieces Per Bag
     C                   Z-ADD     WIBJNB        WL0031                         Bags Per Unit
     C                   ENDIF
      *================================================================
     CSR   SLEXIT        ENDSR
      /EJECT
     CSR   SMCRRC        BEGSR
      *================================================================
      * Crt EDI ASN Order V2  CR - EDI Adv Ship Ntc Order V2  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @BNCPFQ
     C                   Z-ADD     WL0032        WJH9NY                         EDI SURROGATE N
     C                   Z-ADD     WL0033        WJQ2NY                         REF02-Ref ID-Lo
     C                   MOVEL     WL0034        WJHPAA                         TRADE PARTNER C
     C                   MOVEL     WL0035        WJTFNA                         PRF01-Customer
     C                   Z-ADD     WL0036        WJEUNZ                         PRF04-Cust PO D
     C                   MOVEL     WL0037        WJYTAA                         PRF07 PO Type C
     C                   MOVEL     WL0038        WJNVU1                         Orders on PO -
     C                   MOVEL     WL0039        WJYIAA                         TD101-Packaging
     C                   Z-ADD     WL0040        WJD9NZ                         TD102 Case Quan
     C                   Z-ADD     WL0041        WJFHNZ                         TD102 Pallet Co
     C                   Z-ADD     WL0042        WJFPNZ                         Unit Count
     C                   Z-ADD     WL0043        WJFINZ                         Slip Sheet Coun
     C                   Z-ADD     WL0044        WJENNZ                         TD107 Weight-Gr
     C                   Z-ADD     WL0045        WJEMNZ                         TD107 Weight-Ne
     C                   Z-ADD     WL0046        WJEFNZ                         DTM02-Req Deliv
     C                   Z-ADD     WL0047        WJEGNZ                         DTM02-Req PU Da
     C                   Z-ADD     WL0048        WJXBDT                         DTM02-Unused Da
     C                   Z-ADD     WL0049        WJEHNZ                         DTM02-Unused Da
     C                   MOVEL     WL0050        WJP8U1                         REF02/IA Vendor
     C                   Z-ADD     WL0051        WJFJNZ                         REF02 Invoice N
      *
     C     KLCRSM        KLIST
     C                   KFLD                    WJH9NY                         EDI SURROGATE N
     C                   KFLD                    WJQ2NY                         REF02-Ref ID-Lo
     C                   KFLD                    WJHPAA                         TRADE PARTNER C
     C                   KFLD                    WJTFNA                         PRF01-Customer
      * Check for duplicate primary key
     C     KLCRSM        SETLL     @BNCPFQ                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5142'     W0RTN
      * Send message 'EDI Adv Ship Ntc Order EX'
     C                   MOVEL     'USR5142'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SMEXIT
     C                   ENDIF
      *
     C                   WRITE     @BNCPFQ                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SMEXIT        ENDSR
      /EJECT
     CSR   SNRVGN        BEGSR
      *================================================================
      * Crt EDI 856 DTL & TARE RT - Manifest Detail  * 
      *================================================================
      *
     C                   Z-ADD     *ZERO         WN0009                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0010                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0011                         Total Gross Wgt
     C                   Z-ADD     *ZERO         WN0012                         Total Unit Wgt
     C                   Z-ADD     *ZERO         WN0013                         Total Case Qty
     C                   Z-ADD     *ZERO         WN0014                         Total Unit Coun
     C                   Z-ADD     *ZERO         WN0015                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0016                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0017                         Total Gross Wgt
     C                   Z-ADD     *ZERO         WN0018                         Quantity Ordere
      *
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   MOVEL     'Y'           YL0032                         First Time Flag
     C                   MOVEL     'Y'           YL0033                         First Time Thro
     C                   MOVEL     'N'           YL0034                         Record Processe
     C                   MOVEL     'N'           YL0035                         Pallet ID = 0 E
      * R17040 DN 03/12/21-Initialize Single Item Pallet Flag.
     C                   MOVEL     'Y'           YL0036                         Single Item Pal
      * Declare restrictor key work fields
      * Define keylist
     C     KPSSN         KLIST
     C                   KFLD                    WQSN01                         Company Number
     C                   KFLD                    WQSN02                         Order Number
     C                   KFLD                    WKH7NY                         Manifest Pallet
      * Define keylist
     C     KRSSN         KLIST
     C                   KFLD                    WQSN01                         Company Number
     C                   KFLD                    WQSN02                         Order Number
      * Setup key
     C                   Z-ADD     P1AIC3        WQSN01                         Company Number
     C                   Z-ADD     WAC4NB        WQSN02                         Order Number
     C                   Z-ADD     *ZERO         WKH7NY                         Manifest Pallet
      * Establish starting position
     C     KPSSN         SETLL     @FNCPF8                                      *
     C     KRSSN         READE     @FNCPF8                                90    *
      * Data record not found
     C   90              MOVEL     'USR1196'     W0RTN
      * USER: Process Data record
      * First Time Processing.
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.First Time Flag is Yes
      *   |- c2    : DB1.Case Quantity is GT *ZERO
      *   '-
     C                   DOW       NOT *IN90
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0032 = 'Y'
     C                   IF        WKFOQT > 0
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'N'           YL0032                         First Time Flag
     C                   Z-ADD     WKH7NY        YL0037                         Manifest Pallet
     C                   Z-ADD     WKDPNB        YL0038                         Order Sequence
     C                   Z-ADD     WKHGCD        YL0039                         Item Code
      * R17040 DN 03/12/21-Save 1st Item Code for Each Unique Pallet #.
     C                   Z-ADD     WKHGCD        YL0040                         1st Item Code f
      * R17040 DN 03/15/21-Commented Out. No longer needed.
     C                   END                                                    *FI
      * Break & SUM Qty/Wgt by Pallet ID.
      * CASE: DB1.Case Quantity is GT *ZERO
     C                   IF        WKFOQT > 0
     C                   MOVEL     'Y'           YL0034                         Record Processe
      * CASE: DB1.Manifest Pallet Number EQ LCL.Manifest Pallet Number
      * Pallet=0, Break on Item to Clear Accum Totals for Qty/Wgt.
      * CASE: LCL.Manifest Pallet Number is Not Entered
     C                   IF        WKH7NY = YL0037
      * NOTE: This routine will handle all transactions w/ Pallet ID = 0.
     C                   IF        YL0037 = 0
     C                   MOVEL     'Y'           YL0035                         Pallet ID = 0 E
      * Item Code Break Then Create DTL Record and Reset Accum Qty/Wgt To
      * CASE: DB1.Item Code EQ LCL.Item Code
     C                   IF        WKHGCD = YL0039
     C                   ELSE
      * CASE: *OTHERWISE
      * Create EDI ASN DTL V2 (ECP140) for Item Break.
      * CASE: *OTHERWISE
     C                   MOVEL     YL0037        YL0041                         Manifest Pallet
      * R17040 DN 03/12/21-Set Single Item Pallet Flag to No.
     C                   MOVEL     'N'           YL0036                         Single Item Pal
      * Get/Set Info for EDI Adv Ship Ntc Dtl V2 (ECP140).
      * CASE: *OTHERWISE
      * Item Break, Set O.D. Qty Ordered with M.D. Shipped Qty.
      * CASE: *OTHERWISE
      * NOTE: We will handle the Total Qty Ordered vs Total Qty Shipped
      *       differences, if any, in the Last Record processing.
     C                   Z-ADD     WN0015        YL0042                         SN105 Quantity
     C                   EVAL      YL0043 = ' '                                 Product ID Manu
     C                   MOVEL     YL0039        YL0043                         Product ID Manu
      * Rtv for EDI 856 ASN   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0052                         Company Number
     C                   Z-ADD     WAC4NB        WL0053                         Order Number
     C                   Z-ADD     YL0038        WL0054                         Order Sequence
     C                   EXSR      SORVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0055        YL0044                         Warehouse Code
     C                   MOVEL(P)  WL0056        YL0045                         U_M_Base Price
     C                   MOVEL(P)  WL0057        YL0046                         U_M_Ordered
     C                   MOVEL(P)  WL0058        YL0047                         Order Desc_Line
     C                   Z-ADD     WL0059        YL0048                         Unit Price
      * Conversion to Set Shipped & Ordered UOM.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is EQ Boxes
      *   |- c2    : LCL.U/M - Ordered is Cases
      *   '-
     C                   IF        YL0046 = 'BX' OR
     C                             YL0046 = 'CS'
     C                   MOVEL     'CA'          YL0049                         SN103 Shipped U
     C                   ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is Each
      *   |- c2    : LCL.U/M - Ordered is Combos
      *   '-
     C                   IF        YL0046 = 'EA' OR
     C                             YL0046 = 'CB'
     C                   MOVEL     'EA'          YL0049                         SN103 Shipped U
     C                   ELSE
      * CASE: *OTHERWISE
      * All Others Convert to Each.
     C                   MOVEL     'EA'          YL0049                         SN103 Shipped U
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Rtv GTIN              RT - Item Default Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0060                         Item Code
     C                   EXSR      SPRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0061        YL0050                         IDE GTIN
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0028                         Item Code
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0029        YL0051                         Piece Count Ite
     C                   Z-ADD     WL0030        YL0052                         Pieces Per Bag
     C                   Z-ADD     WL0031        YL0053                         Bags Per Unit
      * Set PO402-Pack Size.
      * CASE: LCL.Piece Count Item is yes
     C                   IF        YL0051 = 'Y'
     C     YL0052        MULT      YL0053        YL0054                         PO402-Pack Size
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     1             YL0054                         PO402-Pack Size
     C                   END                                                    *FI
      * Set Production Date.
      * CASE: *OTHERWISE
      * RTV Oldest Prod Date   RT - Manifest Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0062                         Company Number
     C                   Z-ADD     WAC4NB        WL0063                         Order Number
     C                   Z-ADD     YL0039        WL0064                         Item Code
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0065        YL0055                         Production Date
      * LCL.Production Date USR D8# = LCL.Production Date
     C                   IF        YL0055 = *ZERO
     C                   Z-ADD     *ZERO         YL0056
     C                   ELSE
     C     YL0055        ADD       19000000      YL0056                         Production Date
     C                   END
     C                   EVAL      YL0057 = ' '                                 SLN12 Prod ID L
     C                   MOVEL     YL0056        YL0057                         SLN12 Prod ID L
      *
     C                   EVAL      WN0019 = ' '                                 Date (Char-6) U
     C                   EVAL      WN0020 = ' '                                 Date (Alpha) US
     C                   EVAL      WN0021 = ' '                                 Year  (Char) US
     C                   EVAL      WN0022 = ' '                                 Month (Char) US
     C                   EVAL      WN0023 = ' '                                 Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                   EVAL      WN0020 = ' '                                 Date (Alpha) US
     C                   MOVEL     YL0055        WN0020                         Date (Alpha) US
      * extract month, day, and year.
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0020:ZQ     WN0021                 90      Year  (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0020:ZQ     WN0022                 90      Month (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0020:ZQ     WN0023                 90      Day   (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * reconstruct date in mmddyy format.
     C                   Z-ADD     *ZERO         ZQ
     C     WN0022        CAT(P)    WN0023:ZQ     WN0019                         Date (Char-6) U
     C                   Z-ADD     *ZERO         ZQ
     C     WN0019        CAT(P)    WN0021:ZQ     WN0019                         Date (Char-6) U
      * convert character date to numeric date.
     C                   MOVE      WN0019        YL0058                         Date Out (6,0)
     C                   EVAL      YL0059 = ' '                                 REF02-Batch Lot
     C                   MOVEL     YL0058        YL0059                         REF02-Batch Lot
      * Set Product ID UPC.
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UK'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'UK'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0060                         CIR Resource No
      * Record Exist?
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UA'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'UA'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0060                         CIR Resource No
     C                   END                                                    *FI
      * Set Product ID - Purchs Item.
      * CASE: *OTHERWISE
      * Rtv Resource No & Type RT - Customer Item Reference  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WABKC7        WL0070                         Ship To Custome
     C                   Z-ADD     YL0039        WL0071                         Item Code
     C                   EXSR      SSRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0072        YL0061                         CIR Resource No
     C                   MOVEL(P)  WL0073        YL0062                         CIR Resource No
      * If Purchaser Item 'PI' Not Found Try Customer Item Ref for EDI Fi
      * CASE: LCL.CIR Resource No Type is Purchaser Item Code
     C                   IF        YL0062 = 'PI'
     C                   ELSE
      * CASE: *OTHERWISE
      * Note: Trading Partner derived from BTC# & not STC#.
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'PI'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'PI'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0061                         CIR Resource No
      * Try with CB                                  W107438 DN 09/02/22
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'CB'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0061 = ' '
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'CB'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0061                         CIR Resource No
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Set Shelf Life Date.
      * CASE: *OTHERWISE
      * R17040 DN 03/09/21-Changed to Get Also Whse State Code.
      * RTV for EDI 856 ASN   RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0044        WL0074                         Warehouse Code
     C                   EXSR      STRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0075        YL0063                         State Code
     C                   MOVEL(P)  WL0076        YL0064                         Warehouse Type
      * Fresh or Frozen?
      * CASE: LCL.Warehouse Type is Fresh
      * Hard coding 7 days here.
      * LCL.Shelf Life Date USR = LCL.Production Date + CON.7 *DAYS
     C                   IF        YL0064 = 'FR'
     C     YL0055        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     7             XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0065
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0065
     C                   END
     C                   ELSE
      * CASE: *OTHERWISE
      * Must be Frozen.
      * Rtv First Notice Val   RT - Item Shelf Life Upload  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0077                         Item Code
     C                   EXSR      SURVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0078        YL0066                         ISLU First Noti
      * Item Found Else Use 120 Days.
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Hard coding 120 days here.
     C                   Z-ADD     120           YL0066                         ISLU First Noti
     C                   END                                                    *FI
      * LCL.Shelf Life Date USR = LCL.Production Date + LCL.ISLU First No
     C     YL0055        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     YL0066        XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0065
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0065
     C                   END
     C                   END                                                    *FI
      * LCL.Shelf Life Date D8# USR = LCL.Shelf Life Date USR
     C                   IF        YL0065 = *ZERO
     C                   Z-ADD     *ZERO         YL0067
     C                   ELSE
     C     YL0065        ADD       19000000      YL0067                         Shelf Life Date
     C                   END
      * LCL.DTM02-Shelf Life Date = LCL.Shelf Life Date D8# USR
     C                   Z-ADD     YL0067        YL0068                         DTM02-Shelf Lif
      * Set LIN/UP UPC Consumer Pckge & GTin 12 Lin02. R17040 DN 3/25/21
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UP'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'UP'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0069                         CIR Resource No
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'EN'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'EN'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0070                         CIR Resource No
      * Get/Set Info for EDI Adv Ship Ntc Tare V2 (ECP145). R17040 DN 03/
      * CASE: *OTHERWISE
      * Update ECP145 TARE only at Pallet Number Break.
      * Calc/Accum Total Unit Count TARE for Item Code Break.
      * CASE: *OTHERWISE
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0028                         Item Code
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0029        YL0051                         Piece Count Ite
     C                   Z-ADD     WL0030        YL0052                         Pieces Per Bag
     C                   Z-ADD     WL0031        YL0053                         Bags Per Unit
      * Calculate & Accumulate Total Unit Count TARE.
      * CASE: LCL.Piece Count Item is yes
      * Compute: Tot Unt Cnt TARE
      * PAR.Total Unit Count TARE U =
      *    *COMPUTE ((x1 * x2 * x3) + x4)
      * x1    : LCL.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Bags Per Unit
      * *     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Total Case Qty TARE USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Unit Count TARE U
     C                   IF        YL0051 = 'Y'
     C     YL0052        MULT      YL0053        W0WD02                         *Synon (17,7) w
     C     W0WD02        MULT      WN0013        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WN0014        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0014                         Total Unit Coun
     C                   ELSE
      * CASE: *OTHERWISE
     C                   ADD       WN0013        WN0014                         Total Unit Coun
     C                   END                                                    *FI
      * Clear Accum.
     C                   Z-ADD     *ZERO         WN0013                         Total Case Qty
      * R17040 DN 03/09/21-Populate New Fields.
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * Crt EDI ASN Dtl V2    CR - EDI Adv Ship Ntc Dtl V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0079                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0080                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0081                         PRF01-Customer
     C                   Z-ADD     WKC4NB        WL0082                         Order Number
     C                   MOVEL(P)  YL0041        WL0083                         MAN02 Pallet Nb
     C                   Z-ADD     YL0038        WL0084                         Order Sequence
     C                   Z-ADD     WN0015        WL0085                         SN102 Quantity
     C                   MOVEL(P)  YL0049        WL0086                         SN103 Shipped U
     C                   Z-ADD     WN0016        WL0087                         PO406 Net WT Pe
     C                   Z-ADD     WN0017        WL0088                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WL0089                         PO401-Pack
     C                   MOVEL(P)  YL0047        WL0090                         PID05-ITEM DESC
     C                   MOVEL(P)  YL0050        WL0091                         Product ID GTIN
     C                   MOVEL(P)  YL0043        WL0092                         Product ID Manu
     C                   MOVEL(P)  YL0060        WL0093                         Product ID UPC
     C                   EVAL      WL0094 = ' '                                 Product ID UCC-
     C                   MOVEL(P)  YL0061        WL0095                         Product ID - Pu
     C                   MOVEL(P)  YL0069        WL0096                         LIN/UP UPC Cons
     C                   EVAL      WL0097 = ' '                                 W1904 UPC CASE
     C                   MOVEL(P)  'US'          WL0098                         LIN13 Prod ID C
     C                   MOVEL(P)  YL0063        WL0099                         LIN Sub Country
     C                   MOVEL(P)  YL0070        WL0100                         GTin 12 Lin02
     C                   EVAL      WL0101 = ' '                                 SN101 Assigned
     C                   Z-ADD     YL0042        WL0102                         SN105 Quantity
     C                   MOVEL(P)  YL0049        WL0103                         SN106 Ordered U
     C                   Z-ADD     YL0048        WL0104                         SLN06 Unit Pric
     C                   MOVEL(P)  YL0045        WL0105                         SLN07 Unit Pric
     C                   Z-ADD     *ZERO         WL0106                         SLN06 Unit Pric
     C                   EVAL      WL0107 = ' '                                 SLN07 Unit Pric
     C                   MOVEL(P)  @CN(001)      WL0108                         SLN10 Prod ID D
     C                   MOVEL(P)  YL0057        WL0109                         SLN12 Prod ID L
     C                   EVAL      WL0110 = ' '                                 SLN14 Prod ID U
     C                   Z-ADD     YL0054        WL0111                         PO402-Pack Size
     C                   EVAL      WL0112 = ' '                                 PO410-Length
     C                   EVAL      WL0113 = ' '                                 PO411-Width
     C                   EVAL      WL0114 = ' '                                 PO412-Heights
     C                   MOVEL(P)  YL0059        WL0115                         REF02-Batch Lot
     C                   Z-ADD     *ZERO         WL0116                         DTM02-Expiratio
     C                   Z-ADD     YL0068        WL0117                         DTM02-Shelf Lif
     C                   Z-ADD     YL0056        WL0118                         DTM02-Manuf Dat
     C                   Z-ADD     WKAIC3        WL0119                         Company Number
     C                   Z-ADD     YL0037        WL0120                         Manifest Pallet
     C                   MOVEL(P)  P2KESC        WL0121                         Set EDI 856 Pal
     C                   MOVEL(P)  YL0002        WL0122                         EDI Tare Level
     C                   EXSR      SVCRRC
      * Reinitialize for Next Pallet Number.
      * CASE: *OTHERWISE
     C                   Z-ADD     WKH7NY        YL0037                         Manifest Pallet
     C                   Z-ADD     WKDPNB        YL0038                         Order Sequence
     C                   Z-ADD     WKHGCD        YL0039                         Item Code
      * Clear DTL Accum Totals.
     C                   Z-ADD     *ZERO         WN0015                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0016                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0017                         Total Gross Wgt
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Pallet<>0 Break on Item to Clear Total Case Qty TARE - R17040 DN
      * CASE: LCL.Manifest Pallet Number is Entered
      * NOTE: This routine will handle all transactions w/ Pallet ID <> 0
      * Item Code Break, Reset Accum Total Case Qty.
      * CASE: DB1.Item Code EQ LCL.Item Code
     C                   IF        YL0037 <> 0
     C                   IF        WKHGCD = YL0039
     C                   ELSE
      * CASE: *OTHERWISE
      * Create EDI ASN DTL V2 (ECP140) for Item Break. R17040 DN 5/7/21
      * CASE: *OTHERWISE
     C                   MOVEL     YL0037        YL0041                         Manifest Pallet
     C                   MOVEL     'N'           YL0036                         Single Item Pal
      * Get/Set Info for EDI Adv Ship Ntc Dtl V2 (ECP140).
      * CASE: *OTHERWISE
      * Item Break, Set O.D. Qty Ordered with M.D. Shipped Qty.
      * CASE: *OTHERWISE
      * NOTE: We will handle the Total Qty Ordered vs Total Qty Shipped
      *       differences, if any, in the Last Record processing.
     C                   Z-ADD     WN0015        YL0042                         SN105 Quantity
     C                   EVAL      YL0043 = ' '                                 Product ID Manu
     C                   MOVEL     YL0039        YL0043                         Product ID Manu
      * Rtv for EDI 856 ASN   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0052                         Company Number
     C                   Z-ADD     WAC4NB        WL0053                         Order Number
     C                   Z-ADD     YL0038        WL0054                         Order Sequence
     C                   EXSR      SORVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0055        YL0044                         Warehouse Code
     C                   MOVEL(P)  WL0056        YL0045                         U_M_Base Price
     C                   MOVEL(P)  WL0057        YL0046                         U_M_Ordered
     C                   MOVEL(P)  WL0058        YL0047                         Order Desc_Line
     C                   Z-ADD     WL0059        YL0048                         Unit Price
      * Conversion to Set Shipped & Ordered UOM.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is EQ Boxes
      *   |- c2    : LCL.U/M - Ordered is Cases
      *   '-
     C                   IF        YL0046 = 'BX' OR
     C                             YL0046 = 'CS'
     C                   MOVEL     'CA'          YL0049                         SN103 Shipped U
     C                   ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is Each
      *   |- c2    : LCL.U/M - Ordered is Combos
      *   '-
     C                   IF        YL0046 = 'EA' OR
     C                             YL0046 = 'CB'
     C                   MOVEL     'EA'          YL0049                         SN103 Shipped U
     C                   ELSE
      * CASE: *OTHERWISE
      * All Others Convert to Each.
     C                   MOVEL     'EA'          YL0049                         SN103 Shipped U
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Rtv GTIN              RT - Item Default Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0060                         Item Code
     C                   EXSR      SPRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0061        YL0050                         IDE GTIN
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0028                         Item Code
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0029        YL0051                         Piece Count Ite
     C                   Z-ADD     WL0030        YL0052                         Pieces Per Bag
     C                   Z-ADD     WL0031        YL0053                         Bags Per Unit
      * Set PO402-Pack Size.
      * CASE: LCL.Piece Count Item is yes
     C                   IF        YL0051 = 'Y'
     C     YL0052        MULT      YL0053        YL0054                         PO402-Pack Size
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     1             YL0054                         PO402-Pack Size
     C                   END                                                    *FI
      * Set Production Date.
      * CASE: *OTHERWISE
      * RTV Oldest Prod Date   RT - Manifest Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0062                         Company Number
     C                   Z-ADD     WAC4NB        WL0063                         Order Number
     C                   Z-ADD     YL0039        WL0064                         Item Code
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0065        YL0055                         Production Date
      * LCL.Production Date USR D8# = LCL.Production Date
     C                   IF        YL0055 = *ZERO
     C                   Z-ADD     *ZERO         YL0056
     C                   ELSE
     C     YL0055        ADD       19000000      YL0056                         Production Date
     C                   END
     C                   EVAL      YL0057 = ' '                                 SLN12 Prod ID L
     C                   MOVEL     YL0056        YL0057                         SLN12 Prod ID L
      *
     C                   EVAL      WN0026 = ' '                                 Date (Char-6) U
     C                   EVAL      WN0027 = ' '                                 Date (Alpha) US
     C                   EVAL      WN0028 = ' '                                 Year  (Char) US
     C                   EVAL      WN0029 = ' '                                 Month (Char) US
     C                   EVAL      WN0030 = ' '                                 Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                   EVAL      WN0027 = ' '                                 Date (Alpha) US
     C                   MOVEL     YL0055        WN0027                         Date (Alpha) US
      * extract month, day, and year.
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0027:ZQ     WN0028                 90      Year  (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0027:ZQ     WN0029                 90      Month (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0027:ZQ     WN0030                 90      Day   (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * reconstruct date in mmddyy format.
     C                   Z-ADD     *ZERO         ZQ
     C     WN0029        CAT(P)    WN0030:ZQ     WN0026                         Date (Char-6) U
     C                   Z-ADD     *ZERO         ZQ
     C     WN0026        CAT(P)    WN0028:ZQ     WN0026                         Date (Char-6) U
      * convert character date to numeric date.
     C                   MOVE      WN0026        YL0058                         Date Out (6,0)
     C                   EVAL      YL0059 = ' '                                 REF02-Batch Lot
     C                   MOVEL     YL0058        YL0059                         REF02-Batch Lot
      * Set Product ID UPC.
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UK'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'UK'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0060                         CIR Resource No
      * Record Exist?
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UA'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'UA'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0060                         CIR Resource No
     C                   END                                                    *FI
      * Set Product ID - Purchs Item.
      * CASE: *OTHERWISE
      * Rtv Resource No & Type RT - Customer Item Reference  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WABKC7        WL0070                         Ship To Custome
     C                   Z-ADD     YL0039        WL0071                         Item Code
     C                   EXSR      SSRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0072        YL0061                         CIR Resource No
     C                   MOVEL(P)  WL0073        YL0062                         CIR Resource No
      * If Purchaser Item 'PI' Not Found Try Customer Item Ref for EDI Fi
      * CASE: LCL.CIR Resource No Type is Purchaser Item Code
     C                   IF        YL0062 = 'PI'
     C                   ELSE
      * CASE: *OTHERWISE
      * Note: Trading Partner derived from BTC# & not STC#.
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'PI'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'PI'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0061                         CIR Resource No
      * Try with CB                                  W107438 DN 09/02/22
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'CB'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0061 = ' '
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'CB'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0061                         CIR Resource No
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Set Shelf Life Date.
      * CASE: *OTHERWISE
      * R17040 DN 03/09/21-Changed to Get Also Whse State Code.
      * RTV for EDI 856 ASN   RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0044        WL0074                         Warehouse Code
     C                   EXSR      STRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0075        YL0063                         State Code
     C                   MOVEL(P)  WL0076        YL0064                         Warehouse Type
      * Fresh or Frozen?
      * CASE: LCL.Warehouse Type is Fresh
      * Hard coding 7 days here.
      * LCL.Shelf Life Date USR = LCL.Production Date + CON.7 *DAYS
     C                   IF        YL0064 = 'FR'
     C     YL0055        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     7             XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0065
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0065
     C                   END
     C                   ELSE
      * CASE: *OTHERWISE
      * Must be Frozen.
      * Rtv First Notice Val   RT - Item Shelf Life Upload  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0077                         Item Code
     C                   EXSR      SURVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0078        YL0066                         ISLU First Noti
      * Item Found Else Use 120 Days.
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Hard coding 120 days here.
     C                   Z-ADD     120           YL0066                         ISLU First Noti
     C                   END                                                    *FI
      * LCL.Shelf Life Date USR = LCL.Production Date + LCL.ISLU First No
     C     YL0055        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     YL0066        XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0065
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0065
     C                   END
     C                   END                                                    *FI
      * LCL.Shelf Life Date D8# USR = LCL.Shelf Life Date USR
     C                   IF        YL0065 = *ZERO
     C                   Z-ADD     *ZERO         YL0067
     C                   ELSE
     C     YL0065        ADD       19000000      YL0067                         Shelf Life Date
     C                   END
      * LCL.DTM02-Shelf Life Date = LCL.Shelf Life Date D8# USR
     C                   Z-ADD     YL0067        YL0068                         DTM02-Shelf Lif
      * Set LIN/UP UPC Consumer Pckge & GTin 12 Lin02. R17040 DN 3/25/21
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UP'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'UP'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0069                         CIR Resource No
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'EN'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'EN'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0070                         CIR Resource No
      * Get/Set Info for EDI Adv Ship Ntc Tare V2 (ECP145). R17040 DN 03/
      * CASE: *OTHERWISE
      * Update ECP145 TARE only at Pallet Number Break.
      * Calc/Accum Total Unit Count TARE for Item Code Break.
      * CASE: *OTHERWISE
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0028                         Item Code
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0029        YL0051                         Piece Count Ite
     C                   Z-ADD     WL0030        YL0052                         Pieces Per Bag
     C                   Z-ADD     WL0031        YL0053                         Bags Per Unit
      * Calculate & Accumulate Total Unit Count TARE.
      * CASE: LCL.Piece Count Item is yes
      * Compute: Tot Unt Cnt TARE
      * PAR.Total Unit Count TARE U =
      *    *COMPUTE ((x1 * x2 * x3) + x4)
      * x1    : LCL.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Bags Per Unit
      * *     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Total Case Qty TARE USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Unit Count TARE U
     C                   IF        YL0051 = 'Y'
     C     YL0052        MULT      YL0053        W0WD02                         *Synon (17,7) w
     C     W0WD02        MULT      WN0013        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WN0014        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0014                         Total Unit Coun
     C                   ELSE
      * CASE: *OTHERWISE
     C                   ADD       WN0013        WN0014                         Total Unit Coun
     C                   END                                                    *FI
      * Clear Accum.
     C                   Z-ADD     *ZERO         WN0013                         Total Case Qty
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * Crt EDI ASN Dtl V2    CR - EDI Adv Ship Ntc Dtl V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0079                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0080                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0081                         PRF01-Customer
     C                   Z-ADD     WKC4NB        WL0082                         Order Number
     C                   MOVEL(P)  YL0041        WL0083                         MAN02 Pallet Nb
     C                   Z-ADD     YL0038        WL0084                         Order Sequence
     C                   Z-ADD     WN0015        WL0085                         SN102 Quantity
     C                   MOVEL(P)  YL0049        WL0086                         SN103 Shipped U
     C                   Z-ADD     WN0016        WL0087                         PO406 Net WT Pe
     C                   Z-ADD     WN0017        WL0088                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WL0089                         PO401-Pack
     C                   MOVEL(P)  YL0047        WL0090                         PID05-ITEM DESC
     C                   MOVEL(P)  YL0050        WL0091                         Product ID GTIN
     C                   MOVEL(P)  YL0043        WL0092                         Product ID Manu
     C                   MOVEL(P)  YL0060        WL0093                         Product ID UPC
     C                   EVAL      WL0094 = ' '                                 Product ID UCC-
     C                   MOVEL(P)  YL0061        WL0095                         Product ID - Pu
     C                   MOVEL(P)  YL0069        WL0096                         LIN/UP UPC Cons
     C                   EVAL      WL0097 = ' '                                 W1904 UPC CASE
     C                   MOVEL(P)  'US'          WL0098                         LIN13 Prod ID C
     C                   MOVEL(P)  YL0063        WL0099                         LIN Sub Country
     C                   MOVEL(P)  YL0070        WL0100                         GTin 12 Lin02
     C                   EVAL      WL0101 = ' '                                 SN101 Assigned
     C                   Z-ADD     YL0042        WL0102                         SN105 Quantity
     C                   MOVEL(P)  YL0049        WL0103                         SN106 Ordered U
     C                   Z-ADD     YL0048        WL0104                         SLN06 Unit Pric
     C                   MOVEL(P)  YL0045        WL0105                         SLN07 Unit Pric
     C                   Z-ADD     *ZERO         WL0106                         SLN06 Unit Pric
     C                   EVAL      WL0107 = ' '                                 SLN07 Unit Pric
     C                   MOVEL(P)  @CN(001)      WL0108                         SLN10 Prod ID D
     C                   MOVEL(P)  YL0057        WL0109                         SLN12 Prod ID L
     C                   EVAL      WL0110 = ' '                                 SLN14 Prod ID U
     C                   Z-ADD     YL0054        WL0111                         PO402-Pack Size
     C                   EVAL      WL0112 = ' '                                 PO410-Length
     C                   EVAL      WL0113 = ' '                                 PO411-Width
     C                   EVAL      WL0114 = ' '                                 PO412-Heights
     C                   MOVEL(P)  YL0059        WL0115                         REF02-Batch Lot
     C                   Z-ADD     *ZERO         WL0116                         DTM02-Expiratio
     C                   Z-ADD     YL0068        WL0117                         DTM02-Shelf Lif
     C                   Z-ADD     YL0056        WL0118                         DTM02-Manuf Dat
     C                   Z-ADD     WKAIC3        WL0119                         Company Number
     C                   Z-ADD     YL0037        WL0120                         Manifest Pallet
     C                   MOVEL(P)  P2KESC        WL0121                         Set EDI 856 Pal
     C                   MOVEL(P)  YL0002        WL0122                         EDI Tare Level
     C                   EXSR      SVCRRC
      * Reinitialize for Next Item Code.
      * CASE: *OTHERWISE
     C                   Z-ADD     WKDPNB        YL0038                         Order Sequence
     C                   Z-ADD     WKHGCD        YL0039                         Item Code
      * Clear DTL Accum Totals.
     C                   Z-ADD     *ZERO         WN0015                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0016                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0017                         Total Gross Wgt
     C                   END                                                    *FI
     C                   END                                                    *FI
      * SUM Quantity & Weights.
      * CASE: *OTHERWISE
      * For DTL Record.
     C                   ADD       WKFOQT        WN0015                         Total Qty Ship
     C                   ADD       WKR0NB        WN0016                         Total Wgt Ship
     C                   ADD       WKN5WG        WN0017                         Total Gross Wgt
      * For TARE Record.
     C                   ADD       WKFOQT        WN0009                         Total Qty Ship
     C                   ADD       WKR0NB        WN0010                         Total Wgt Ship
     C                   ADD       WKN5WG        WN0011                         Total Gross Wgt
      * Sum Total Case Quantity TARE per Item Seq. R17040 DN 03/15/21
      * CASE: *OTHERWISE
     C                   ADD       WKFOQT        WN0013                         Total Case Qty
      * Calculate/Sum Unit Weight.
      * Rtv Tare Weight        RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WKAIC3        WL0125                         Company Number
     C                   Z-ADD     YL0039        WL0126                         Item Code
     C                   EXSR      SXRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0127        YN0006                         Description Lin
     C                   Z-ADD     WL0128        YL0107                         Misc Tare Weigh
      * RTV Itm BxID & Tares  RT - Item Bill Of Material  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WKAIC3        WL0129                         Company Number
     C                   Z-ADD     YL0039        WL0130                         Item Code
     C                   EXSR      SYRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0131        YL0108                         Unit Weight
     C                   Z-ADD     WL0132        YN0007                         Number Cases On
     C                   Z-ADD     WL0133        YN0008                         Pallet Tare Wei
     C                   Z-ADD     WL0134        YN0009                         Box iD
     C     YL0108        ADD       YL0107        YL0109                         PAL05 Unit Weig
     C                   ADD       YL0109        WN0012                         Total Unit Wgt
     C                   ELSE
      * CASE: *OTHERWISE
      * Create EDI ASN DTL V2 (ECP140) & EDI ASN TARE V2 (ECP145).
      * CASE: *OTHERWISE
      * NOTE: Any changes in here, must change in 'Exit Processing' also.
     C                   MOVEL     YL0037        YL0041                         Manifest Pallet
      * Get/Set Info for EDI Adv Ship Ntc Dtl V2 (ECP140).
      * CASE: *OTHERWISE
      * Pallet Break, Set O.D. Qty Ordered with M.D. Shipped Qty.
      * CASE: *OTHERWISE
      * NOTE: We will handle the Total Qty Ordered vs Total Qty Shipped
      *       differences, if any, in the Last Record processing.
     C                   Z-ADD     WN0015        YL0042                         SN105 Quantity
     C                   EVAL      YL0043 = ' '                                 Product ID Manu
     C                   MOVEL     YL0039        YL0043                         Product ID Manu
      * Rtv for EDI 856 ASN   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0052                         Company Number
     C                   Z-ADD     WAC4NB        WL0053                         Order Number
     C                   Z-ADD     YL0038        WL0054                         Order Sequence
     C                   EXSR      SORVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0055        YL0044                         Warehouse Code
     C                   MOVEL(P)  WL0056        YL0045                         U_M_Base Price
     C                   MOVEL(P)  WL0057        YL0046                         U_M_Ordered
     C                   MOVEL(P)  WL0058        YL0047                         Order Desc_Line
     C                   Z-ADD     WL0059        YL0048                         Unit Price
      * Conversion to Set Shipped & Ordered UOM.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is EQ Boxes
      *   |- c2    : LCL.U/M - Ordered is Cases
      *   '-
     C                   IF        YL0046 = 'BX' OR
     C                             YL0046 = 'CS'
     C                   MOVEL     'CA'          YL0049                         SN103 Shipped U
     C                   ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is Each
      *   |- c2    : LCL.U/M - Ordered is Combos
      *   '-
     C                   IF        YL0046 = 'EA' OR
     C                             YL0046 = 'CB'
     C                   MOVEL     'EA'          YL0049                         SN103 Shipped U
     C                   ELSE
      * CASE: *OTHERWISE
      * All Others Convert to Each.
     C                   MOVEL     'EA'          YL0049                         SN103 Shipped U
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Rtv GTIN              RT - Item Default Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0060                         Item Code
     C                   EXSR      SPRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0061        YL0050                         IDE GTIN
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0028                         Item Code
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0029        YL0051                         Piece Count Ite
     C                   Z-ADD     WL0030        YL0052                         Pieces Per Bag
     C                   Z-ADD     WL0031        YL0053                         Bags Per Unit
      * Set PO402-Pack Size.
      * CASE: LCL.Piece Count Item is yes
     C                   IF        YL0051 = 'Y'
     C     YL0052        MULT      YL0053        YL0054                         PO402-Pack Size
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     1             YL0054                         PO402-Pack Size
     C                   END                                                    *FI
      * Set Production Date.
      * CASE: *OTHERWISE
      * RTV Oldest Prod Date   RT - Manifest Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0062                         Company Number
     C                   Z-ADD     WAC4NB        WL0063                         Order Number
     C                   Z-ADD     YL0039        WL0064                         Item Code
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0065        YL0055                         Production Date
      * LCL.Production Date USR D8# = LCL.Production Date
     C                   IF        YL0055 = *ZERO
     C                   Z-ADD     *ZERO         YL0056
     C                   ELSE
     C     YL0055        ADD       19000000      YL0056                         Production Date
     C                   END
     C                   EVAL      YL0057 = ' '                                 SLN12 Prod ID L
     C                   MOVEL     YL0056        YL0057                         SLN12 Prod ID L
      *
     C                   EVAL      WN0034 = ' '                                 Date (Char-6) U
     C                   EVAL      WN0035 = ' '                                 Date (Alpha) US
     C                   EVAL      WN0036 = ' '                                 Year  (Char) US
     C                   EVAL      WN0037 = ' '                                 Month (Char) US
     C                   EVAL      WN0038 = ' '                                 Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                   EVAL      WN0035 = ' '                                 Date (Alpha) US
     C                   MOVEL     YL0055        WN0035                         Date (Alpha) US
      * extract month, day, and year.
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0035:ZQ     WN0036                 90      Year  (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0035:ZQ     WN0037                 90      Month (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0035:ZQ     WN0038                 90      Day   (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * reconstruct date in mmddyy format.
     C                   Z-ADD     *ZERO         ZQ
     C     WN0037        CAT(P)    WN0038:ZQ     WN0034                         Date (Char-6) U
     C                   Z-ADD     *ZERO         ZQ
     C     WN0034        CAT(P)    WN0036:ZQ     WN0034                         Date (Char-6) U
      * convert character date to numeric date.
     C                   MOVE      WN0034        YL0058                         Date Out (6,0)
     C                   EVAL      YL0059 = ' '                                 REF02-Batch Lot
     C                   MOVEL     YL0058        YL0059                         REF02-Batch Lot
      * Set Product ID UPC.
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UK'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'UK'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0060                         CIR Resource No
      * Record Exist?
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UA'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'UA'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0060                         CIR Resource No
     C                   END                                                    *FI
      * Set Product ID - Purchs Item.  add SK to the mix
      * CASE: *OTHERWISE
      * Rtv Resource No & Type RT - Customer Item Reference  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WABKC7        WL0070                         Ship To Custome
     C                   Z-ADD     YL0039        WL0071                         Item Code
     C                   EXSR      SSRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0072        YL0061                         CIR Resource No
     C                   MOVEL(P)  WL0073        YL0062                         CIR Resource No
      * If Purchaser Item 'PI' Not Found Try Customer Item Ref for EDI Fi
      * CASE: LCL.CIR Resource No Type is Purchaser Item Code
     C                   IF        YL0062 = 'PI'
     C                   ELSE
      * CASE: *OTHERWISE
      * Note: Trading Partner derived from BTC# & not STC#.
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'PI'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'PI'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0061                         CIR Resource No
      * Try with SKU                   2/1/2021
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'SK'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0061 = ' '
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'SK'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0061                         CIR Resource No
     C                   END                                                    *FI
      * Try with IN                    2/1/2021
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'IN'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0061 = ' '
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'IN'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0061                         CIR Resource No
     C                   END                                                    *FI
      * Try with CB                                  W107438 DN 09/02/22
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'CB'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0061 = ' '
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'CB'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0061                         CIR Resource No
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Set Shelf Life Date.
      * CASE: *OTHERWISE
      * R17040 DN 03/09/21-Changed to Get Also Whse State Code.
      * RTV for EDI 856 ASN   RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0044        WL0074                         Warehouse Code
     C                   EXSR      STRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0075        YL0063                         State Code
     C                   MOVEL(P)  WL0076        YL0064                         Warehouse Type
      * Fresh or Frozen?
      * CASE: LCL.Warehouse Type is Fresh
      * Hard coding 7 days here.
      * LCL.Shelf Life Date USR = LCL.Production Date + CON.7 *DAYS
     C                   IF        YL0064 = 'FR'
     C     YL0055        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     7             XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0065
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0065
     C                   END
     C                   ELSE
      * CASE: *OTHERWISE
      * Must be Frozen.
      * Rtv First Notice Val   RT - Item Shelf Life Upload  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0077                         Item Code
     C                   EXSR      SURVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0078        YL0066                         ISLU First Noti
      * Item Found Else Use 120 Days.
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Hard coding 120 days here.
     C                   Z-ADD     120           YL0066                         ISLU First Noti
     C                   END                                                    *FI
      * LCL.Shelf Life Date USR = LCL.Production Date + LCL.ISLU First No
     C     YL0055        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     YL0066        XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0065
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0065
     C                   END
     C                   END                                                    *FI
      * LCL.Shelf Life Date D8# USR = LCL.Shelf Life Date USR
     C                   IF        YL0065 = *ZERO
     C                   Z-ADD     *ZERO         YL0067
     C                   ELSE
     C     YL0065        ADD       19000000      YL0067                         Shelf Life Date
     C                   END
      * LCL.DTM02-Shelf Life Date = LCL.Shelf Life Date D8# USR
     C                   Z-ADD     YL0067        YL0068                         DTM02-Shelf Lif
      * Set LIN/UP UPC Consumer Pckge & GTin 12 Lin02. R17040 DN 3/25/21
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UP'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'UP'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0069                         CIR Resource No
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'EN'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'EN'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0070                         CIR Resource No
      * Get/Set Info for EDI Adv Ship Ntc Tare V2 (ECP145). R17040 DN 03/
      * CASE: *OTHERWISE
      * Get Pallet Tiers & Pallet Blocks if Single Pallet Flag=Y.
      * CASE: LCL.Single Item Pallet Flag is Yes
      * Use 1st Save Item Code for Each Unique Pallet Number.
      * Rtv Component Item Cde RT - Item Bill Of Material  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0036 = 'Y'
     C                   Z-ADD     P1AIC3        WL0135                         Company Number
     C                   Z-ADD     YL0040        WL0136                         Item Code
     C                   EXSR      TARVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0137        YL0110                         Component Item
      * Rtv Pallet Tier/Block RT - Item Default Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0110        WL0138                         Item Code
     C                   EXSR      TBRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0139        YL0111                         IDE Pallet Tier
     C                   MOVEL(P)  WL0140        YL0112                         IDE Pallet Bloc
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0111 = ' '                                 IDE Pallet Tier
     C                   EVAL      YL0112 = ' '                                 IDE Pallet Bloc
     C                   END                                                    *FI
      * Set Packaging Desc Code Based on 1st Item Code for Pallet Number.
      * CASE: *OTHERWISE
      * Rtv Pallet Type 2     RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0141                         Company Number
     C                   Z-ADD     WAC4NB        WL0142                         Order Number
     C                   Z-ADD     YL0040        WL0143                         Item Code
     C                   EXSR      TCRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0144        YL0113                         OD Pallet Type
      * CASE: LCL.OD Pallet Type is CHEP Pallet
      * As of 3/12/21, we don't have a Pallet Type of 'CH' but once we
      * do we may have to revisit this logic, per Rose.
     C                   IF        YL0113 = 'CH'
     C                   EVAL      YL0114 = ' '                                 PKG04 Packaging
     C                   MOVEL     '37'          YL0114                         PKG04 Packaging
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0114 = ' '                                 PKG04 Packaging
     C                   MOVEL     '52'          YL0114                         PKG04 Packaging
     C                   END                                                    *FI
      * Calc/Accum Total Unit Count TARE for Pallet Number Break.
      * CASE: *OTHERWISE
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0028                         Item Code
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0029        YL0051                         Piece Count Ite
     C                   Z-ADD     WL0030        YL0052                         Pieces Per Bag
     C                   Z-ADD     WL0031        YL0053                         Bags Per Unit
      * Calculate & Accumulate Total Unit Count TARE.
      * CASE: LCL.Piece Count Item is yes
      * Compute: Tot Unt Cnt TARE
      * PAR.Total Unit Count TARE U =
      *    *COMPUTE ((x1 * x2 * x3) + x4)
      * x1    : LCL.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Bags Per Unit
      * *     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Total Case Qty TARE USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Unit Count TARE U
     C                   IF        YL0051 = 'Y'
     C     YL0052        MULT      YL0053        W0WD02                         *Synon (17,7) w
     C     W0WD02        MULT      WN0013        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WN0014        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0014                         Total Unit Coun
     C                   ELSE
      * CASE: *OTHERWISE
     C                   ADD       WN0013        WN0014                         Total Unit Coun
     C                   END                                                    *FI
      * R17040 DN 03/09/21-Populate New Fields.
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * Crt EDI ASN Dtl V2    CR - EDI Adv Ship Ntc Dtl V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0079                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0080                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0081                         PRF01-Customer
     C                   Z-ADD     WKC4NB        WL0082                         Order Number
     C                   MOVEL(P)  YL0041        WL0083                         MAN02 Pallet Nb
     C                   Z-ADD     YL0038        WL0084                         Order Sequence
     C                   Z-ADD     WN0015        WL0085                         SN102 Quantity
     C                   MOVEL(P)  YL0049        WL0086                         SN103 Shipped U
     C                   Z-ADD     WN0016        WL0087                         PO406 Net WT Pe
     C                   Z-ADD     WN0017        WL0088                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WL0089                         PO401-Pack
     C                   MOVEL(P)  YL0047        WL0090                         PID05-ITEM DESC
     C                   MOVEL(P)  YL0050        WL0091                         Product ID GTIN
     C                   MOVEL(P)  YL0043        WL0092                         Product ID Manu
     C                   MOVEL(P)  YL0060        WL0093                         Product ID UPC
     C                   EVAL      WL0094 = ' '                                 Product ID UCC-
     C                   MOVEL(P)  YL0061        WL0095                         Product ID - Pu
     C                   MOVEL(P)  YL0069        WL0096                         LIN/UP UPC Cons
     C                   EVAL      WL0097 = ' '                                 W1904 UPC CASE
     C                   MOVEL(P)  'US'          WL0098                         LIN13 Prod ID C
     C                   MOVEL(P)  YL0063        WL0099                         LIN Sub Country
     C                   MOVEL(P)  YL0070        WL0100                         GTin 12 Lin02
     C                   EVAL      WL0101 = ' '                                 SN101 Assigned
     C                   Z-ADD     YL0042        WL0102                         SN105 Quantity
     C                   MOVEL(P)  YL0049        WL0103                         SN106 Ordered U
     C                   Z-ADD     YL0048        WL0104                         SLN06 Unit Pric
     C                   MOVEL(P)  YL0045        WL0105                         SLN07 Unit Pric
     C                   Z-ADD     *ZERO         WL0106                         SLN06 Unit Pric
     C                   EVAL      WL0107 = ' '                                 SLN07 Unit Pric
     C                   MOVEL(P)  @CN(001)      WL0108                         SLN10 Prod ID D
     C                   MOVEL(P)  YL0057        WL0109                         SLN12 Prod ID L
     C                   EVAL      WL0110 = ' '                                 SLN14 Prod ID U
     C                   Z-ADD     YL0054        WL0111                         PO402-Pack Size
     C                   EVAL      WL0112 = ' '                                 PO410-Length
     C                   EVAL      WL0113 = ' '                                 PO411-Width
     C                   EVAL      WL0114 = ' '                                 PO412-Heights
     C                   MOVEL(P)  YL0059        WL0115                         REF02-Batch Lot
     C                   Z-ADD     *ZERO         WL0116                         DTM02-Expiratio
     C                   Z-ADD     YL0068        WL0117                         DTM02-Shelf Lif
     C                   Z-ADD     YL0056        WL0118                         DTM02-Manuf Dat
     C                   Z-ADD     WKAIC3        WL0119                         Company Number
     C                   Z-ADD     YL0037        WL0120                         Manifest Pallet
     C                   MOVEL(P)  P2KESC        WL0121                         Set EDI 856 Pal
     C                   MOVEL(P)  YL0002        WL0122                         EDI Tare Level
     C                   EXSR      SVCRRC
      * R17040 DN 03/15/21-Populate New Fields.
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * Crt EDI ASN Tare V2   CR - EDI Adv Ship Ntc Tare V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0145                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0146                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0147                         PRF01-Customer
     C                   Z-ADD     WKC4NB        WL0148                         Order Number
     C                   MOVEL(P)  YL0041        WL0149                         MAN02 Pallet Nb
     C                   MOVEL(P)  '4'           WL0150                         PAL01 Pallet Ty
     C                   MOVEL(P)  YL0016        WL0151                         TD101-Packaging
     C                   MOVEL(P)  YL0036        WL0152                         Single Item Pal
     C                   MOVEL(P)  YL0111        WL0153                         PAL02 Pallet Ti
     C                   MOVEL(P)  YL0112        WL0154                         PAL03 Pallet Bl
     C                   Z-ADD     WN0009        WL0155                         TD102 Case Quan
     C                   Z-ADD     WN0012        WL0156                         PAL05 Unit Weig
     C                   Z-ADD     WN0010        WL0157                         TD107 Weight-Ne
     C                   Z-ADD     WN0011        WL0158                         TD107 Weight-Gr
     C                   EVAL      WL0159 = ' '                                 PAL15 Pallet Ex
     C                   Z-ADD     WN0014        WL0160                         Unit Count Tare
     C                   MOVEL(P)  YL0114        WL0161                         PKG04 Packaging
     C                   Z-ADD     WKAIC3        WL0162                         Company Number
     C                   Z-ADD     YL0037        WL0163                         Manifest Pallet
     C                   MOVEL(P)  P2KESC        WL0164                         Set EDI 856 Pal
     C                   MOVEL(P)  YL0002        WL0165                         EDI Tare Level
     C                   EXSR      TDCRRC
      * Reinitialize for Next Pallet Number.
      * CASE: *OTHERWISE
     C                   Z-ADD     WKH7NY        YL0037                         Manifest Pallet
     C                   Z-ADD     WKDPNB        YL0038                         Order Sequence
     C                   Z-ADD     WKHGCD        YL0039                         Item Code
      * R17040 DN 03/12/21-Save 1st Item Code for Each Unique Pallet #.
     C                   Z-ADD     WKHGCD        YL0040                         1st Item Code f
      * R17040 DN 03/12/21-Reset Single Item Pallet Flag to Yes.
     C                   MOVEL     'Y'           YL0036                         Single Item Pal
     C                   Z-ADD     *ZERO         WN0015                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0016                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0017                         Total Gross Wgt
     C                   Z-ADD     *ZERO         WN0009                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0010                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0011                         Total Gross Wgt
     C                   Z-ADD     *ZERO         WN0012                         Total Unit Wgt
      * R17040 DN 03/16/21-Reset Both Accum Total Case Qty TARE & Unit Co
     C                   Z-ADD     *ZERO         WN0013                         Total Case Qty
     C                   Z-ADD     *ZERO         WN0014                         Total Unit Coun
      * SUM Quantity & Weights.
      * CASE: *OTHERWISE
     C                   ADD       WKFOQT        WN0015                         Total Qty Ship
     C                   ADD       WKR0NB        WN0016                         Total Wgt Ship
     C                   ADD       WKN5WG        WN0017                         Total Gross Wgt
     C                   ADD       WKFOQT        WN0009                         Total Qty Ship
     C                   ADD       WKR0NB        WN0010                         Total Wgt Ship
     C                   ADD       WKN5WG        WN0011                         Total Gross Wgt
      * Sum Total Case Quantity TARE per Item Seq. R17040 DN 03/15/21
      * CASE: *OTHERWISE
     C                   ADD       WKFOQT        WN0013                         Total Case Qty
      * Calculate/Sum Unit Weight.
      * Rtv Tare Weight        RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WKAIC3        WL0125                         Company Number
     C                   Z-ADD     WKHGCD        WL0126                         Item Code
     C                   EXSR      SXRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0127        YN0006                         Description Lin
     C                   Z-ADD     WL0128        YL0107                         Misc Tare Weigh
      * RTV Itm BxID & Tares  RT - Item Bill Of Material  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WKAIC3        WL0129                         Company Number
     C                   Z-ADD     WKHGCD        WL0130                         Item Code
     C                   EXSR      SYRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0131        YL0108                         Unit Weight
     C                   Z-ADD     WL0132        YN0007                         Number Cases On
     C                   Z-ADD     WL0133        YN0008                         Pallet Tare Wei
     C                   Z-ADD     WL0134        YN0009                         Box iD
     C     YL0108        ADD       YL0107        YL0109                         PAL05 Unit Weig
     C                   ADD       YL0109        WN0012                         Total Unit Wgt
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSN         READE     @FNCPF8                                90    *
     C                   ENDDO
      * USER: Exit processing
      * Last Record Processing.
      * CASE: LCL.Record Processed Usr is Yes
      * Create EDI ASN DTL V2 (ECP140) & EDI ASN TARE V2 (ECP145).
      * CASE: *OTHERWISE
     C                   IF        YL0034 = 'Y'
     C                   MOVEL     YL0037        YL0041                         Manifest Pallet
      * Get/Set Info for EDI Adv Ship Ntc Dtl V2 (ECP140).
      * CASE: *OTHERWISE
      * Pallet Break, Set O.D. Qty Ordered with M.D. Shipped Qty.
      * CASE: *OTHERWISE
      * NOTE: We will handle the Total Qty Ordered vs Total Qty Shipped
      *       differences, if any, in the Last Record processing.
     C                   Z-ADD     WN0015        YL0042                         SN105 Quantity
     C                   EVAL      YL0043 = ' '                                 Product ID Manu
     C                   MOVEL     YL0039        YL0043                         Product ID Manu
      * Rtv for EDI 856 ASN   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0052                         Company Number
     C                   Z-ADD     WAC4NB        WL0053                         Order Number
     C                   Z-ADD     YL0038        WL0054                         Order Sequence
     C                   EXSR      SORVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0055        YL0044                         Warehouse Code
     C                   MOVEL(P)  WL0056        YL0045                         U_M_Base Price
     C                   MOVEL(P)  WL0057        YL0046                         U_M_Ordered
     C                   MOVEL(P)  WL0058        YL0047                         Order Desc_Line
     C                   Z-ADD     WL0059        YL0048                         Unit Price
      * Conversion to Set Shipped & Ordered UOM.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is EQ Boxes
      *   |- c2    : LCL.U/M - Ordered is Cases
      *   '-
     C                   IF        YL0046 = 'BX' OR
     C                             YL0046 = 'CS'
     C                   MOVEL     'CA'          YL0049                         SN103 Shipped U
     C                   ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is Each
      *   |- c2    : LCL.U/M - Ordered is Combos
      *   '-
     C                   IF        YL0046 = 'EA' OR
     C                             YL0046 = 'CB'
     C                   MOVEL     'EA'          YL0049                         SN103 Shipped U
     C                   ELSE
      * CASE: *OTHERWISE
      * All Others Convert to Each.
     C                   MOVEL     'EA'          YL0049                         SN103 Shipped U
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Rtv GTIN              RT - Item Default Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0060                         Item Code
     C                   EXSR      SPRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0061        YL0050                         IDE GTIN
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0028                         Item Code
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0029        YL0051                         Piece Count Ite
     C                   Z-ADD     WL0030        YL0052                         Pieces Per Bag
     C                   Z-ADD     WL0031        YL0053                         Bags Per Unit
      * Set PO402-Pack Size.
      * CASE: LCL.Piece Count Item is yes
     C                   IF        YL0051 = 'Y'
     C     YL0052        MULT      YL0053        YL0054                         PO402-Pack Size
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     1             YL0054                         PO402-Pack Size
     C                   END                                                    *FI
      * Set Production Date.
      * CASE: *OTHERWISE
      * RTV Oldest Prod Date   RT - Manifest Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0062                         Company Number
     C                   Z-ADD     WAC4NB        WL0063                         Order Number
     C                   Z-ADD     YL0039        WL0064                         Item Code
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0065        YL0055                         Production Date
      * LCL.Production Date USR D8# = LCL.Production Date
     C                   IF        YL0055 = *ZERO
     C                   Z-ADD     *ZERO         YL0056
     C                   ELSE
     C     YL0055        ADD       19000000      YL0056                         Production Date
     C                   END
     C                   EVAL      YL0057 = ' '                                 SLN12 Prod ID L
     C                   MOVEL     YL0056        YL0057                         SLN12 Prod ID L
      *
     C                   EVAL      WN0041 = ' '                                 Date (Char-6) U
     C                   EVAL      WN0042 = ' '                                 Date (Alpha) US
     C                   EVAL      WN0043 = ' '                                 Year  (Char) US
     C                   EVAL      WN0044 = ' '                                 Month (Char) US
     C                   EVAL      WN0045 = ' '                                 Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                   EVAL      WN0042 = ' '                                 Date (Alpha) US
     C                   MOVEL     YL0055        WN0042                         Date (Alpha) US
      * extract month, day, and year.
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0042:ZQ     WN0043                 90      Year  (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0042:ZQ     WN0044                 90      Month (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0042:ZQ     WN0045                 90      Day   (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * reconstruct date in mmddyy format.
     C                   Z-ADD     *ZERO         ZQ
     C     WN0044        CAT(P)    WN0045:ZQ     WN0041                         Date (Char-6) U
     C                   Z-ADD     *ZERO         ZQ
     C     WN0041        CAT(P)    WN0043:ZQ     WN0041                         Date (Char-6) U
      * convert character date to numeric date.
     C                   MOVE      WN0041        YL0058                         Date Out (6,0)
     C                   EVAL      YL0059 = ' '                                 REF02-Batch Lot
     C                   MOVEL     YL0058        YL0059                         REF02-Batch Lot
      * Set Product ID UPC.
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UK'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'UK'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0060                         CIR Resource No
      * Record Exist?
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UA'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'UA'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0060                         CIR Resource No
     C                   END                                                    *FI
      * Set Product ID - Purchs Item.  add SK to the mix
      * CASE: *OTHERWISE
      * Rtv Resource No & Type RT - Customer Item Reference  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WABKC7        WL0070                         Ship To Custome
     C                   Z-ADD     YL0039        WL0071                         Item Code
     C                   EXSR      SSRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0072        YL0061                         CIR Resource No
     C                   MOVEL(P)  WL0073        YL0062                         CIR Resource No
      * If Purchaser Item 'PI' Not Found Try Customer Item Ref for EDI Fi
      * CASE: LCL.CIR Resource No Type is Purchaser Item Code
     C                   IF        YL0062 = 'PI'
     C                   ELSE
      * CASE: *OTHERWISE
      * Note: Trading Partner derived from BTC# & not STC#.
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'PI'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'PI'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0061                         CIR Resource No
      * Try with SKU                   2/1/2021
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'SK'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0061 = ' '
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'SK'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0061                         CIR Resource No
     C                   END                                                    *FI
      * Try with IN                    2/1/2021
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'IN'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0061 = ' '
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'IN'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0061                         CIR Resource No
     C                   END                                                    *FI
      * Try with CB                                  W107438 DN 09/02/22
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'CB'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0061 = ' '
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'CB'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0061                         CIR Resource No
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Set Shelf Life Date.
      * CASE: *OTHERWISE
      * R17040 DN 03/09/21-Changed to Get Also Whse State Code.
      * RTV for EDI 856 ASN   RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0044        WL0074                         Warehouse Code
     C                   EXSR      STRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0075        YL0063                         State Code
     C                   MOVEL(P)  WL0076        YL0064                         Warehouse Type
      * Fresh or Frozen?
      * CASE: LCL.Warehouse Type is Fresh
      * Hard coding 7 days here.
      * LCL.Shelf Life Date USR = LCL.Production Date + CON.7 *DAYS
     C                   IF        YL0064 = 'FR'
     C     YL0055        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     7             XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0065
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0065
     C                   END
     C                   ELSE
      * CASE: *OTHERWISE
      * Must be Frozen.
      * Rtv First Notice Val   RT - Item Shelf Life Upload  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0077                         Item Code
     C                   EXSR      SURVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0078        YL0066                         ISLU First Noti
      * Item Found Else Use 120 Days.
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Hard coding 120 days here.
     C                   Z-ADD     120           YL0066                         ISLU First Noti
     C                   END                                                    *FI
      * LCL.Shelf Life Date USR = LCL.Production Date + LCL.ISLU First No
     C     YL0055        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     YL0066        XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0065
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0065
     C                   END
     C                   END                                                    *FI
      * LCL.Shelf Life Date D8# USR = LCL.Shelf Life Date USR
     C                   IF        YL0065 = *ZERO
     C                   Z-ADD     *ZERO         YL0067
     C                   ELSE
     C     YL0065        ADD       19000000      YL0067                         Shelf Life Date
     C                   END
      * LCL.DTM02-Shelf Life Date = LCL.Shelf Life Date D8# USR
     C                   Z-ADD     YL0067        YL0068                         DTM02-Shelf Lif
      * Set LIN/UP UPC Consumer Pckge & GTin 12 Lin02. R17040 DN 3/25/21
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UP'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'UP'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0069                         CIR Resource No
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'EN'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0066                         EDI Trading Par
     C                   Z-ADD     YL0039        WL0067                         Item Code
     C                   MOVEL(P)  'EN'          WL0068                         CIR Resource No
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0069        YL0070                         CIR Resource No
      * Get/Set Info for EDI Adv Ship Ntc Tare V2 (ECP145). R17040 DN 03/
      * CASE: *OTHERWISE
      * Get Pallet Tiers & Pallet Blocks if Single Pallet Flag=Y.
      * CASE: LCL.Single Item Pallet Flag is Yes
      * Use 1st Save Item Code for Each Unique Pallet Number.
      * Rtv Component Item Cde RT - Item Bill Of Material  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0036 = 'Y'
     C                   Z-ADD     P1AIC3        WL0135                         Company Number
     C                   Z-ADD     YL0040        WL0136                         Item Code
     C                   EXSR      TARVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0137        YL0110                         Component Item
      * Rtv Pallet Tier/Block RT - Item Default Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0110        WL0138                         Item Code
     C                   EXSR      TBRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0139        YL0111                         IDE Pallet Tier
     C                   MOVEL(P)  WL0140        YL0112                         IDE Pallet Bloc
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0111 = ' '                                 IDE Pallet Tier
     C                   EVAL      YL0112 = ' '                                 IDE Pallet Bloc
     C                   END                                                    *FI
      * Set Packaging Desc Code Based on 1st Item Code for Pallet Number.
      * CASE: *OTHERWISE
      * Rtv Pallet Type 2     RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0141                         Company Number
     C                   Z-ADD     WAC4NB        WL0142                         Order Number
     C                   Z-ADD     YL0040        WL0143                         Item Code
     C                   EXSR      TCRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0144        YL0113                         OD Pallet Type
      * CASE: LCL.OD Pallet Type is CHEP Pallet
      * As of 3/12/21, we don't have a Pallet Type of 'CH' but once we
      * do we may have to revisit this logic, per Rose.
     C                   IF        YL0113 = 'CH'
     C                   EVAL      YL0114 = ' '                                 PKG04 Packaging
     C                   MOVEL     '37'          YL0114                         PKG04 Packaging
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0114 = ' '                                 PKG04 Packaging
     C                   MOVEL     '52'          YL0114                         PKG04 Packaging
     C                   END                                                    *FI
      * Calc Total Unit Count TARE for Pallet Number Break.
      * CASE: *OTHERWISE
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0039        WL0028                         Item Code
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0029        YL0051                         Piece Count Ite
     C                   Z-ADD     WL0030        YL0052                         Pieces Per Bag
     C                   Z-ADD     WL0031        YL0053                         Bags Per Unit
      * Calculate & Accumulate Total Unit Count TARE.
      * CASE: LCL.Piece Count Item is yes
      * Compute: Tot Unt Cnt TARE
      * PAR.Total Unit Count TARE U =
      *    *COMPUTE ((x1 * x2 * x3) + x4)
      * x1    : LCL.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Bags Per Unit
      * *     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Total Case Qty TARE USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Unit Count TARE U
     C                   IF        YL0051 = 'Y'
     C     YL0052        MULT      YL0053        W0WD02                         *Synon (17,7) w
     C     W0WD02        MULT      WN0013        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WN0014        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0014                         Total Unit Coun
     C                   ELSE
      * CASE: *OTHERWISE
     C                   ADD       WN0013        WN0014                         Total Unit Coun
     C                   END                                                    *FI
      * R17040 DN 03/09/21-Populate New Fields.
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * Crt EDI ASN Dtl V2    CR - EDI Adv Ship Ntc Dtl V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0079                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0080                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0081                         PRF01-Customer
     C                   Z-ADD     WKC4NB        WL0082                         Order Number
     C                   MOVEL(P)  YL0041        WL0083                         MAN02 Pallet Nb
     C                   Z-ADD     YL0038        WL0084                         Order Sequence
     C                   Z-ADD     WN0015        WL0085                         SN102 Quantity
     C                   MOVEL(P)  YL0049        WL0086                         SN103 Shipped U
     C                   Z-ADD     WN0016        WL0087                         PO406 Net WT Pe
     C                   Z-ADD     WN0017        WL0088                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WL0089                         PO401-Pack
     C                   MOVEL(P)  YL0047        WL0090                         PID05-ITEM DESC
     C                   MOVEL(P)  YL0050        WL0091                         Product ID GTIN
     C                   MOVEL(P)  YL0043        WL0092                         Product ID Manu
     C                   MOVEL(P)  YL0060        WL0093                         Product ID UPC
     C                   EVAL      WL0094 = ' '                                 Product ID UCC-
     C                   MOVEL(P)  YL0061        WL0095                         Product ID - Pu
     C                   MOVEL(P)  YL0069        WL0096                         LIN/UP UPC Cons
     C                   EVAL      WL0097 = ' '                                 W1904 UPC CASE
     C                   MOVEL(P)  'US'          WL0098                         LIN13 Prod ID C
     C                   MOVEL(P)  YL0063        WL0099                         LIN Sub Country
     C                   MOVEL(P)  YL0070        WL0100                         GTin 12 Lin02
     C                   EVAL      WL0101 = ' '                                 SN101 Assigned
     C                   Z-ADD     YL0042        WL0102                         SN105 Quantity
     C                   MOVEL(P)  YL0049        WL0103                         SN106 Ordered U
     C                   Z-ADD     YL0048        WL0104                         SLN06 Unit Pric
     C                   MOVEL(P)  YL0045        WL0105                         SLN07 Unit Pric
     C                   Z-ADD     *ZERO         WL0106                         SLN06 Unit Pric
     C                   EVAL      WL0107 = ' '                                 SLN07 Unit Pric
     C                   MOVEL(P)  @CN(001)      WL0108                         SLN10 Prod ID D
     C                   MOVEL(P)  YL0057        WL0109                         SLN12 Prod ID L
     C                   EVAL      WL0110 = ' '                                 SLN14 Prod ID U
     C                   Z-ADD     YL0054        WL0111                         PO402-Pack Size
     C                   EVAL      WL0112 = ' '                                 PO410-Length
     C                   EVAL      WL0113 = ' '                                 PO411-Width
     C                   EVAL      WL0114 = ' '                                 PO412-Heights
     C                   MOVEL(P)  YL0059        WL0115                         REF02-Batch Lot
     C                   Z-ADD     *ZERO         WL0116                         DTM02-Expiratio
     C                   Z-ADD     YL0068        WL0117                         DTM02-Shelf Lif
     C                   Z-ADD     YL0056        WL0118                         DTM02-Manuf Dat
     C                   Z-ADD     WKAIC3        WL0119                         Company Number
     C                   Z-ADD     YL0037        WL0120                         Manifest Pallet
     C                   MOVEL(P)  P2KESC        WL0121                         Set EDI 856 Pal
     C                   MOVEL(P)  YL0002        WL0122                         EDI Tare Level
     C                   EXSR      SVCRRC
      * R17040 DN 03/15/21-Populate New Fields.
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * Crt EDI ASN Tare V2   CR - EDI Adv Ship Ntc Tare V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0145                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0146                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0147                         PRF01-Customer
     C                   Z-ADD     WKC4NB        WL0148                         Order Number
     C                   MOVEL(P)  YL0041        WL0149                         MAN02 Pallet Nb
     C                   MOVEL(P)  '4'           WL0150                         PAL01 Pallet Ty
     C                   MOVEL(P)  YL0016        WL0151                         TD101-Packaging
     C                   MOVEL(P)  YL0036        WL0152                         Single Item Pal
     C                   MOVEL(P)  YL0111        WL0153                         PAL02 Pallet Ti
     C                   MOVEL(P)  YL0112        WL0154                         PAL03 Pallet Bl
     C                   Z-ADD     WN0009        WL0155                         TD102 Case Quan
     C                   Z-ADD     WN0012        WL0156                         PAL05 Unit Weig
     C                   Z-ADD     WN0010        WL0157                         TD107 Weight-Ne
     C                   Z-ADD     WN0011        WL0158                         TD107 Weight-Gr
     C                   EVAL      WL0159 = ' '                                 PAL15 Pallet Ex
     C                   Z-ADD     WN0014        WL0160                         Unit Count Tare
     C                   MOVEL(P)  YL0114        WL0161                         PKG04 Packaging
     C                   Z-ADD     WKAIC3        WL0162                         Company Number
     C                   Z-ADD     YL0037        WL0163                         Manifest Pallet
     C                   MOVEL(P)  P2KESC        WL0164                         Set EDI 856 Pal
     C                   MOVEL(P)  YL0002        WL0165                         EDI Tare Level
     C                   EXSR      TDCRRC
      * Adjust QTY Ordered If Needed.
      * CASE: *OTHERWISE
      * Process will ensure ECP140 Qty Ordered matches Order Detail
      * Qty Ordered.
      * UPD EDI 856 ASN ECP140 RT - Order Detail  * 
     C                   EXSR      TERVGN
     C                   END                                                    *FI
      *================================================================
     CSR   SNEXIT        ENDSR
      /EJECT
     CSR   SORVGN        BEGSR
      *================================================================
      * Rtv for EDI 856 ASN   RT - Order Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0055 = ' '                                 Warehouse Code
     C                   EVAL      WL0056 = ' '                                 U_M_Base Price
     C                   EVAL      WL0057 = ' '                                 U_M_Ordered
     C                   EVAL      WL0058 = ' '                                 Order Desc_Line
     C                   Z-ADD     *ZERO         WL0059                         Unit Price
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSO         KLIST
     C                   KFLD                    WQSO01                         Company Number
     C                   KFLD                    WQSO02                         Order Number
     C                   KFLD                    WQSO03                         Order Sequence
      * Setup key
     C                   Z-ADD     WL0052        WQSO01                         Company Number
     C                   Z-ADD     WL0053        WQSO02                         Order Number
     C                   Z-ADD     WL0054        WQSO03                         Order Sequence
      * Establish starting position
     C     KRSSO         SETLL     @BGWKL1                                      *
     C     KRSSO         READE     @BGWKL1                                90    *
      * Data record not found
     C   90              MOVEL     'USR1309'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     WLAJCD        WL0055                         Warehouse Code
     C                   MOVEL     WLCRCD        WL0056                         U_M_Base Price
     C                   MOVEL     WLAGCD        WL0057                         U_M_Ordered
     C                   MOVEL     WLG7NA        WL0058                         Order Desc_Line
     C                   Z-ADD     WLAKPR        WL0059                         Unit Price
     C     KRSSO         READE     @BGWKL1                                90    *
     C                   ENDDO
      *================================================================
     CSR   SOEXIT        ENDSR
      /EJECT
     CSR   SPRVGN        BEGSR
      *================================================================
      * Rtv GTIN              RT - Item Default Extension  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSP         KLIST
     C                   KFLD                    WMHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WL0060        WMHGCD                         Item Code
      * Establish starting position
     C     KRSSP         CHAIN     @BTRETK                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR4745'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WL0061 = ' '                                 IDE GTIN
     C                   GOTO      SPEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WMCUU1        WL0061                         IDE GTIN
     C                   ENDIF
      *================================================================
     CSR   SPEXIT        ENDSR
      /EJECT
     CSR   SQRVGN        BEGSR
      *================================================================
      * RTV Oldest Prod Date   RT - Manifest Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSQ         KLIST
     C                   KFLD                    WQSQ01                         Company Number
     C                   KFLD                    WQSQ02                         Order Number
     C                   KFLD                    WQSQ03                         Item Code
      * Setup key
     C                   Z-ADD     WL0062        WQSQ01                         Company Number
     C                   Z-ADD     WL0063        WQSQ02                         Order Number
     C                   Z-ADD     WL0064        WQSQ03                         Item Code
      * Establish starting position
     C     KRSSQ         SETLL     @FNCPXH                                      *
     C     KRSSQ         READE     @FNCPXH                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR1196'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0065                         Production Date
     C                   GOTO      SQEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * CASE: DB1.Case Quantity is GT *ZERO
     C                   DOW       NOT *IN90
      * PAR = DB1 By name
     C                   IF        WOFOQT > 0
     C                   Z-ADD     WOELDT        WL0065                         Production Date
     C                   GOTO      SQEXIT                                       *QUIT
     C                   END                                                    *FI
     C     KRSSQ         READE     @FNCPXH                                90    *
     C                   ENDDO
      *================================================================
     CSR   SQEXIT        ENDSR
      /EJECT
     CSR   SRRVGN        BEGSR
      *================================================================
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UK'
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0069 = ' '                                 CIR Resource No
      * Define keylist
     C     KRSSR         KLIST
     C                   KFLD                    WRJ5NX                         EDI Trading Par
     C                   KFLD                    WRHGCD                         Item Code
     C                   KFLD                    WRLDSX                         CIR Resource No
      * Setup key
     C                   MOVEL     WL0066        WRJ5NX                         EDI Trading Par
     C                   Z-ADD     WL0067        WRHGCD                         Item Code
     C                   MOVEL     WL0068        WRLDSX                         CIR Resource No
      * Establish starting position
     C     KRSSR         CHAIN     @BQREF3                            90        *
      * Data record not found
     C   90              MOVEL     'USR5150'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WRCOAA        WL0069                         CIR Resource No
     C                   ENDIF
      *================================================================
     CSR   SREXIT        ENDSR
      /EJECT
     CSR   SSRVGN        BEGSR
      *================================================================
      * Rtv Resource No & Type RT - Customer Item Reference  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0072 = ' '                                 CIR Resource No
     C                   EVAL      WL0073 = ' '                                 CIR Resource No
      * Define keylist
     C     KRSSS         KLIST
     C                   KFLD                    WSBKC7                         Ship To Custome
     C                   KFLD                    WSHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WL0070        WSBKC7                         Ship To Custome
     C                   Z-ADD     WL0071        WSHGCD                         Item Code
      * Establish starting position
     C     KRSSS         CHAIN     @BIREKY                            90        *
      * Data record not found
     C   90              MOVEL     'USR3081'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WSCOAA        WL0072                         CIR Resource No
     C                   MOVEL     WSLDSX        WL0073                         CIR Resource No
     C                   ENDIF
      *================================================================
     CSR   SSEXIT        ENDSR
      /EJECT
     CSR   STRVGN        BEGSR
      *================================================================
      * RTV for EDI 856 ASN   RT - Warehouse  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0075 = ' '                                 State Code
     C                   EVAL      WL0076 = ' '                                 Warehouse Type
      * Define keylist
     C     KRSST         KLIST
     C                   KFLD                    WDAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     WL0074        WDAJCD                         Warehouse Code
      * Establish starting position
     C     KRSST         CHAIN     @ADREAO                            90        *
      * Data record not found
     C   90              MOVEL     'USR0007'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WDBGCD        WL0075                         State Code
     C                   MOVEL     WDWPST        WL0076                         Warehouse Type
     C                   ENDIF
      *================================================================
     CSR   STEXIT        ENDSR
      /EJECT
     CSR   SURVGN        BEGSR
      *================================================================
      * Rtv First Notice Val   RT - Item Shelf Life Upload  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0078                         ISLU First Noti
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSU         KLIST
     C                   KFLD                    WQSU01                         Item Code
      * Setup key
     C                   Z-ADD     WL0077        WQSU01                         Item Code
      * Establish starting position
     C     KRSSU         SETLL     @BRREGE                                      *
     C     KRSSU         READE     @BRREGE                                90    *
      * Data record not found
     C   90              MOVEL     'USR5155'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   Z-ADD     WTEXNZ        WL0078                         ISLU First Noti
     C                   GOTO      SUEXIT                                       *QUIT
     C     KRSSU         READE     @BRREGE                                90    *
     C                   ENDDO
      *================================================================
     CSR   SUEXIT        ENDSR
      /EJECT
     CSR   SVCRRC        BEGSR
      *================================================================
      * Crt EDI ASN Dtl V2    CR - EDI Adv Ship Ntc Dtl V2  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @BMCPFN
     C                   Z-ADD     WL0079        WVH9NY                         EDI SURROGATE N
     C                   Z-ADD     WL0080        WVQ2NY                         REF02-Ref ID-Lo
     C                   MOVEL     WL0081        WVTFNA                         PRF01-Customer
     C                   Z-ADD     WL0082        WVC4NB                         Order Number
     C                   MOVEL     WL0083        WVJJU1                         MAN02 Pallet Nb
     C                   Z-ADD     WL0084        WVDPNB                         Order Sequence
     C                   Z-ADD     WL0085        WVQ7NY                         SN102 Quantity
     C                   MOVEL     WL0086        WVZEAA                         SN103 Shipped U
     C                   Z-ADD     WL0087        WVETNZ                         PO406 Net WT Pe
     C                   Z-ADD     WL0088        WVQ8NY                         PO406 Gross WT
     C                   Z-ADD     WL0089        WVTCNY                         PO401-Pack
     C                   MOVEL     WL0090        WVLET1                         PID05-ITEM DESC
     C                   MOVEL     WL0091        WVNEU1                         Product ID GTIN
     C                   MOVEL     WL0092        WVNFU1                         Product ID Manu
     C                   MOVEL     WL0093        WVNGU1                         Product ID UPC
     C                   MOVEL     WL0094        WVNHU1                         Product ID UCC-
     C                   MOVEL     WL0095        WVNWU1                         Product ID - Pu
     C                   MOVEL     WL0096        WVQBU1                         LIN/UP UPC Cons
     C                   MOVEL     WL0097        WVHVU1                         W1904 UPC CASE
     C                   MOVEL     WL0098        WVNCU1                         LIN13 Prod ID C
     C                   MOVEL     WL0099        WVAGAB                         LIN Sub Country
     C                   MOVEL     WL0100        WVQCU1                         GTin 12 Lin02
     C                   MOVEL     WL0101        WVNDU1                         SN101 Assigned
     C                   Z-ADD     WL0102        WVEINZ                         SN105 Quantity
     C                   MOVEL     WL0103        WVYWAA                         SN106 Ordered U
     C                   Z-ADD     WL0104        WVHZPR                         SLN06 Unit Pric
     C                   MOVEL     WL0105        WVYZAA                         SLN07 Unit Pric
     C                   Z-ADD     WL0106        WVH0PR                         SLN06 Unit Pric
     C                   MOVEL     WL0107        WVY0AA                         SLN07 Unit Pric
     C                   MOVEL     WL0108        WVNIU1                         SLN10 Prod ID D
     C                   MOVEL     WL0109        WVNJU1                         SLN12 Prod ID L
     C                   MOVEL     WL0110        WVNKU1                         SLN14 Prod ID U
     C                   Z-ADD     WL0111        WVTDNY                         PO402-Pack Size
     C                   MOVEL     WL0112        WVNLU1                         PO410-Length
     C                   MOVEL     WL0113        WVNMU1                         PO411-Width
     C                   MOVEL     WL0114        WVNNU1                         PO412-Heights
     C                   MOVEL     WL0115        WVNPU1                         REF02-Batch Lot
     C                   Z-ADD     WL0116        WVEJNZ                         DTM02-Expiratio
     C                   Z-ADD     WL0117        WVEKNZ                         DTM02-Shelf Lif
     C                   Z-ADD     WL0118        WVELNZ                         DTM02-Manuf Dat
      *
      * USER: Processing before Data update
      * Set All Pallet ID=1 If Flag=Yes Else Use Check Digit.
      * CASE: PAR.Set EDI 856 Pallet ID=1 U is Yes
     C                   IF        WL0121 = 'Y'
     C                   EVAL      WVJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     '1'           WVJJU1                         MAN02 Pallet Nb
     C                   ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Manifest Pallet Number is Not Entered
      * R17040 DN 05/17/21-Commented Out & Moved Below.
      * R17040 DN 05/17/21-Set MAN02 Pallet Nb/Container based on EDI Tar
      * CASE: PAR.EDI Tare Level Req f/856 is Yes
     C                   IF        WL0120 = 0
     C                   IF        WL0122 = 'Y'
     C                   EVAL      WVJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     @CN(002)      WVJJU1                         MAN02 Pallet Nb
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      WVJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     '1'           WVJJU1                         MAN02 Pallet Nb
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * Calculate Check Digit Logic to Set Pallet ID #.
      *
     C                   Z-ADD     *ZERO         WN0024                         SUM Val for Odd
     C                   Z-ADD     *ZERO         WN0025                         SUM Val for Eve
      *
      * Get Calc Check Digit  IF
     C                   Z-ADD     *ZERO         YL0071                         W0407 Pallet Nu
      * SUM Up Odd & Even # Positions for Federal Tax ID.
      * CASE: *OTHERWISE
      * Substring Out Each Digit From Federal Tax ID.
      * CASE: *OTHERWISE
      * RTV Federal Tax ID    RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WL0119        WL0123                         Company Number
     C                   EXSR      SWRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0124        YL0072                         Federal Tax Id
     C                   Z-ADD     7             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00020 OR
     C                             ZQ > 00020
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0072:ZQ     YL0073                 90      Text 7 Alpha Us
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     *ZERO         ZQ
     C     '1'           CAT(P)    YL0073:ZQ     YL0074                         Federal Tax ID
      * Position 1 will always be 1.
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0075                 90      Position 1 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0076                 90      Position 2 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     3             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0077                 90      Position 3 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0078                 90      Position 4 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     5             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0079                 90      Position 5 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0080                 90      Position 6 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     7             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0081                 90      Position 7 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     8             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0082                 90      Position 8 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   MOVE      YL0075        YL0083                         Federal Tax ID-
     C                   MOVE      YL0076        YL0084                         Federal Tax ID-
     C                   MOVE      YL0077        YL0085                         Federal Tax ID-
     C                   MOVE      YL0078        YL0086                         Federal Tax ID-
     C                   MOVE      YL0079        YL0087                         Federal Tax ID-
     C                   MOVE      YL0080        YL0088                         Federal Tax ID-
     C                   MOVE      YL0081        YL0089                         Federal Tax ID-
     C                   MOVE      YL0082        YL0090                         Federal Tax ID-
      * SUM Val for Odd # Pos
      * PAR.SUM Val for Odd # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4)
      * x1    : LCL.Federal Tax ID-Pos1 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Federal Tax ID-Pos3 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Federal Tax ID-Pos5 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Federal Tax ID-Pos7 Nbr
     C     YL0083        ADD       YL0085        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0087        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0089        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0024                         SUM Val for Odd
      * SUM Val for Even # Pos
      * PAR.SUM Val for Even # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4)
      * x1    : LCL.Federal Tax ID-Pos2 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Federal Tax ID-Pos4 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Federal Tax ID-Pos6 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Federal Tax ID-Pos8 Nbr
     C     YL0084        ADD       YL0086        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0088        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0090        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0025                         SUM Val for Eve
      * SUM Up Odd & Even # Positions for Pallet Number.
      * CASE: *OTHERWISE
      * Substring Out Each Digit From Pallet Number.
      * CASE: *OTHERWISE
     C                   MOVEL     WL0120        YL0091                         Manifest Pallet
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0075                 90      Position 1 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0076                 90      Position 2 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     3             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0077                 90      Position 3 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0078                 90      Position 4 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     5             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0079                 90      Position 5 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0080                 90      Position 6 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     7             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0081                 90      Position 7 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     8             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0082                 90      Position 8 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     9             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0092                 90      Position 9 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   MOVE      YL0075        YL0093                         Manifest Pallet
     C                   MOVE      YL0076        YL0094                         Manifest Pallet
     C                   MOVE      YL0077        YL0095                         Manifest Pallet
     C                   MOVE      YL0078        YL0096                         Manifest Pallet
     C                   MOVE      YL0079        YL0097                         Manifest Pallet
     C                   MOVE      YL0080        YL0098                         Manifest Pallet
     C                   MOVE      YL0081        YL0099                         Manifest Pallet
     C                   MOVE      YL0082        YL0100                         Manifest Pallet
     C                   MOVE      YL0092        YL0101                         Manifest Pallet
      * SUM Val for Odd # Pos
      * PAR.SUM Val for Odd # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6)
      * x1    : PAR.SUM Val for Odd # Pos
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Manifest Pallet#-Pos1 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Manifest Pallet#-Pos3 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Manifest Pallet#-Pos5 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x5    : LCL.Manifest Pallet#-Pos7 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x6    : LCL.Manifest Pallet#-Pos9 Nbr
     C     WN0024        ADD       YL0093        W0WD04                         *Synon (17,7) w
     C     W0WD04        ADD       YL0095        W0WD03                         *Synon (17,7) w
     C     W0WD03        ADD       YL0097        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0099        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0101        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0024                         SUM Val for Odd
      * SUM Val for Even # Pos
      * PAR.SUM Val for Even # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5)
      * x1    : PAR.SUM Val for Even # Pos
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Manifest Pallet#-Pos2 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Manifest Pallet#-Pos4 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Manifest Pallet#-Pos6 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x5    : LCL.Manifest Pallet#-Pos8 Nbr
     C     WN0025        ADD       YL0094        W0WD03                         *Synon (17,7) w
     C     W0WD03        ADD       YL0096        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0098        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0100        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0025                         SUM Val for Eve
      * Calculated Check Digit Number.
      * CASE: *OTHERWISE
      * Calculated Value
      * LCL.Calc Value USR =
      *    *COMPUTE ((x1 * x2) + x3)
      * x1    : PAR.SUM Val for Odd # Pos
      * *     : PGM.*Synon (17,7) work field *
      * x2    : CON.3
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.SUM Val for Even # Pos
     C     WN0024        MULT      3             W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WN0025        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        YL0102                         Calc Value USR
     C                   Z-ADD     YL0102        YL0103                         Calc Value Last
     C     10            SUB       YL0103        YL0104                         Calc Check Digi
      * Format W0407 Pallet Number for Output.
      * CASE: *OTHERWISE
     C                   MOVEL     YL0104        YL0105                         Calc Check Digi
     C                   Z-ADD     *ZERO         ZQ
     C     '00'          CAT(P)    YL0074:ZQ     YL0106                         W0407 Pallet Nu
     C                   Z-ADD     *ZERO         ZQ
     C     YL0106        CAT(P)    YL0091:ZQ     YL0106                         W0407 Pallet Nu
     C                   Z-ADD     *ZERO         ZQ
     C     YL0106        CAT(P)    YL0105:ZQ     YL0106                         W0407 Pallet Nu
     C                   MOVE      YL0106        YL0071                         W0407 Pallet Nu
     C                   EVAL      WVJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     YL0071        WVJJU1                         MAN02 Pallet Nb
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KLCRSV        KLIST
     C                   KFLD                    WVH9NY                         EDI SURROGATE N
     C                   KFLD                    WVQ2NY                         REF02-Ref ID-Lo
     C                   KFLD                    WVTFNA                         PRF01-Customer
     C                   KFLD                    WVC4NB                         Order Number
     C                   KFLD                    WVJJU1                         MAN02 Pallet Nb
     C                   KFLD                    WVDPNB                         Order Sequence
      * Check for duplicate primary key
     C     KLCRSV        SETLL     @BMCPFN                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5140'     W0RTN
      * Send message 'EDI Adv Ship Ntc Dtl V EX'
     C                   MOVEL     'USR5140'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SVEXIT
     C                   ENDIF
      *
     C                   WRITE     @BMCPFN                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SVEXIT        ENDSR
      /EJECT
     CSR   SWRVGN        BEGSR
      *================================================================
      * RTV Federal Tax ID    RT - Company Name and Address  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0124 = ' '                                 Federal Tax Id
      * Define keylist
     C     KRSSW         KLIST
     C                   KFLD                    WWAIC3                         Company Number
      * Setup key
     C                   Z-ADD     WL0123        WWAIC3                         Company Number
      * Establish starting position
     C     KRSSW         CHAIN     @ABREAK                            90        *
      * Data record not found
     C   90              MOVEL     'USR0003'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WWA2NA        WL0124                         Federal Tax Id
     C                   ENDIF
      *================================================================
     CSR   SWEXIT        ENDSR
      /EJECT
     CSR   SXRVGN        BEGSR
      *================================================================
      * Rtv Tare Weight        RT - Company Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSX         KLIST
     C                   KFLD                    WXAIC3                         Company Number
     C                   KFLD                    WXHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WL0125        WXAIC3                         Company Number
     C                   Z-ADD     WL0126        WXHGCD                         Item Code
      * Establish starting position
     C     KRSSX         CHAIN     @BZREJU                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0326'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SXEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WXAVNA        WL0127                         Description Lin
     C                   Z-ADD     WXA3WG        WL0128                         Misc Tare Weigh
     C                   EVAL      W0RTN = ' '                                  *Return code
     C                   ENDIF
      *================================================================
     CSR   SXEXIT        ENDSR
      /EJECT
     CSR   SYRVGN        BEGSR
      *================================================================
      * RTV Itm BxID & Tares  RT - Item Bill Of Material  * 
      *================================================================
      *
     C                   EVAL      WN0031 = ' '                                 Item Type Code
     C                   EVAL      WN0032 = ' '                                 Package Type Co
     C                   Z-ADD     *ZERO         WN0033                         Unit Weight USR
      *
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   Z-ADD     *ZERO         WL0131                         Unit Weight
     C                   Z-ADD     *ZERO         WL0133                         Pallet Tare Wei
     C                   Z-ADD     *ZERO         WL0132                         Number Cases On
     C                   Z-ADD     *ZERO         WL0134                         Box iD
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSY         KLIST
     C                   KFLD                    WQSY01                         Company Number
     C                   KFLD                    WQSY02                         Item Code
      * Setup key
     C                   Z-ADD     WL0129        WQSY01                         Company Number
     C                   Z-ADD     WL0130        WQSY02                         Item Code
      * Establish starting position
     C     KRSSY         SETLL     @IORETI                                      *
     C     KRSSY         READE     @IORETI                                90    *
      * Data record not found
     C   90              MOVEL     'USR1679'     W0RTN
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   Z-ADD     *ZERO         WL0131                         Unit Weight
      * RTV Typ/Pk/UntWgt/Plt RT - Company Item  * 
     C                   EXSR      SZRVGN
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Item Type Code is Packaging and Supplies
      *   |- c2    : PAR.Package Type Code is Box
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WN0031 = 'PS'
     C                   IF        WN0032 = 'B'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   Z-ADD     WYC9NB        WL0134                         Box iD
     C                   GOTO      SYEXIT                                       *QUIT
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     *ZERO         WL0131                         Unit Weight
     C                   END                                                    *FI
     C     KRSSY         READE     @IORETI                                90    *
     C                   ENDDO
      *================================================================
     CSR   SYEXIT        ENDSR
      /EJECT
     CSR   SZRVGN        BEGSR
      *================================================================
      * RTV Typ/Pk/UntWgt/Plt RT - Company Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSZ         KLIST
     C                   KFLD                    WXAIC3                         Company Number
     C                   KFLD                    WXHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WYAIC3        WXAIC3                         Company Number
     C                   Z-ADD     WYC9NB        WXHGCD                         Item Code
      * Establish starting position
     C     KRSSZ         CHAIN     @BZREJU                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0326'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SZEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     WXAIWG        WL0131                         Unit Weight
     C                   Z-ADD     WXURTN        WL0132                         Number Cases On
     C                   MOVEL     WXN0CD        WN0031                         Item Type Code
     C                   MOVEL     WXX4ST        WN0032                         Package Type Co
     C                   Z-ADD     WXSFNB        WL0133                         Pallet Tare Wei
     C                   EVAL      W0RTN = ' '                                  *Return code
     C                   ENDIF
      *================================================================
     CSR   SZEXIT        ENDSR
      /EJECT
     CSR   TARVGN        BEGSR
      *================================================================
      * Rtv Component Item Cde RT - Item Bill Of Material  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0137                         Component Item
      * Declare restrictor key work fields
      * Define keylist
     C     KRSTA         KLIST
     C                   KFLD                    WQTA01                         Company Number
     C                   KFLD                    WQTA02                         Item Code
      * Setup key
     C                   Z-ADD     WL0135        WQTA01                         Company Number
     C                   Z-ADD     WL0136        WQTA02                         Item Code
      * Establish starting position
     C     KRSTA         SETLL     @IOREIB                                      *
     C     KRSTA         READE     @IOREIB                                90    *
      * Data record not found
     C   90              MOVEL     'USR1679'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   Z-ADD     TAC9NB        WL0137                         Component Item
     C                   GOTO      TAEXIT                                       *QUIT
     C     KRSTA         READE     @IOREIB                                90    *
     C                   ENDDO
      *================================================================
     CSR   TAEXIT        ENDSR
      /EJECT
     CSR   TBRVGN        BEGSR
      *================================================================
      * Rtv Pallet Tier/Block RT - Item Default Extension  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0139 = ' '                                 IDE Pallet Tier
     C                   EVAL      WL0140 = ' '                                 IDE Pallet Bloc
      * Define keylist
     C     KRSTB         KLIST
     C                   KFLD                    WMHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WL0138        WMHGCD                         Item Code
      * Establish starting position
     C     KRSTB         CHAIN     @BTRETK                            90        *
      * Data record not found
     C   90              MOVEL     'USR4745'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WMARSC        WL0139                         IDE Pallet Tier
     C                   MOVEL     WMASSC        WL0140                         IDE Pallet Bloc
     C                   ENDIF
      *================================================================
     CSR   TBEXIT        ENDSR
      /EJECT
     CSR   TCRVGN        BEGSR
      *================================================================
      * Rtv Pallet Type 2     RT - Order Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0144 = ' '                                 OD Pallet Type
      * Declare restrictor key work fields
      * Define keylist
     C     KRSTC         KLIST
     C                   KFLD                    WQTC01                         Company Number
     C                   KFLD                    WQTC02                         Order Number
     C                   KFLD                    WQTC03                         Item Code
      * Setup key
     C                   Z-ADD     WL0141        WQTC01                         Company Number
     C                   Z-ADD     WL0142        WQTC02                         Order Number
     C                   Z-ADD     WL0143        WQTC03                         Item Code
      * Establish starting position
     C     KRSTC         SETLL     @BGWKFW                                      *
     C     KRSTC         READE     @BGWKFW                                90    *
      * Data record not found
     C   90              MOVEL     'USR1309'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     TBF5SX        WL0144                         OD Pallet Type
     C                   GOTO      TCEXIT                                       *QUIT
     C     KRSTC         READE     @BGWKFW                                90    *
     C                   ENDDO
      *================================================================
     CSR   TCEXIT        ENDSR
      /EJECT
     CSR   TDCRRC        BEGSR
      *================================================================
      * Crt EDI ASN Tare V2   CR - EDI Adv Ship Ntc Tare V2  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @BJCPFD
     C                   Z-ADD     WL0145        TCH9NY                         EDI SURROGATE N
     C                   Z-ADD     WL0146        TCQ2NY                         REF02-Ref ID-Lo
     C                   MOVEL     WL0147        TCTFNA                         PRF01-Customer
     C                   Z-ADD     WL0148        TCC4NB                         Order Number
     C                   MOVEL     WL0149        TCJJU1                         MAN02 Pallet Nb
     C                   MOVEL     WL0150        TCYLAA                         PAL01 Pallet Ty
     C                   MOVEL     WL0151        TCYIAA                         TD101-Packaging
     C                   MOVEL     WL0152        TCP9U1                         Single Item Pal
     C                   MOVEL     WL0153        TCYMAA                         PAL02 Pallet Ti
     C                   MOVEL     WL0154        TCYNAA                         PAL03 Pallet Bl
     C                   Z-ADD     WL0155        TCD9NZ                         TD102 Case Quan
     C                   Z-ADD     WL0156        TCEBNZ                         PAL05 Unit Weig
     C                   Z-ADD     WL0157        TCEMNZ                         TD107 Weight-Ne
     C                   Z-ADD     WL0158        TCENNZ                         TD107 Weight-Gr
     C                   MOVEL     WL0159        TCYPAA                         PAL15 Pallet Ex
     C                   Z-ADD     WL0160        TCFKNZ                         Unit Count Tare
     C                   MOVEL     WL0161        TCQAU1                         PKG04 Packaging
      *
      * USER: Processing before Data update
      * Set All Pallet ID=1 If Flag=Yes Else Use Check Digit.
      * CASE: PAR.Set EDI 856 Pallet ID=1 U is Yes
     C                   IF        WL0164 = 'Y'
     C                   EVAL      TCJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     '1'           TCJJU1                         MAN02 Pallet Nb
     C                   ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Manifest Pallet Number is Not Entered
      * R17040 DN 05/17/21-Commented Out & Moved Below.
      * R17040 DN 05/17/21-Set MAN02 Pallet Nb/Container based on EDI Tar
      * CASE: PAR.EDI Tare Level Req f/856 is Yes
     C                   IF        WL0163 = 0
     C                   IF        WL0165 = 'Y'
     C                   EVAL      TCJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     @CN(002)      TCJJU1                         MAN02 Pallet Nb
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      TCJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     '1'           TCJJU1                         MAN02 Pallet Nb
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * Calculate Check Digit Logic to Set Pallet ID #.
      *
     C                   Z-ADD     *ZERO         WN0039                         SUM Val for Odd
     C                   Z-ADD     *ZERO         WN0040                         SUM Val for Eve
      *
      * Get Calc Check Digit  IF
     C                   Z-ADD     *ZERO         YL0115                         W0407 Pallet Nu
      * SUM Up Odd & Even # Positions for Federal Tax ID.
      * CASE: *OTHERWISE
      * Substring Out Each Digit From Federal Tax ID.
      * CASE: *OTHERWISE
      * RTV Federal Tax ID    RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WL0162        WL0123                         Company Number
     C                   EXSR      SWRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0124        YL0072                         Federal Tax Id
     C                   Z-ADD     7             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00020 OR
     C                             ZQ > 00020
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0072:ZQ     YL0073                 90      Text 7 Alpha Us
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     *ZERO         ZQ
     C     '1'           CAT(P)    YL0073:ZQ     YL0074                         Federal Tax ID
      * Position 1 will always be 1.
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0075                 90      Position 1 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0076                 90      Position 2 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     3             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0077                 90      Position 3 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0078                 90      Position 4 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     5             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0079                 90      Position 5 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0080                 90      Position 6 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     7             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0081                 90      Position 7 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     8             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0082                 90      Position 8 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   MOVE      YL0075        YL0083                         Federal Tax ID-
     C                   MOVE      YL0076        YL0084                         Federal Tax ID-
     C                   MOVE      YL0077        YL0085                         Federal Tax ID-
     C                   MOVE      YL0078        YL0086                         Federal Tax ID-
     C                   MOVE      YL0079        YL0087                         Federal Tax ID-
     C                   MOVE      YL0080        YL0088                         Federal Tax ID-
     C                   MOVE      YL0081        YL0089                         Federal Tax ID-
     C                   MOVE      YL0082        YL0090                         Federal Tax ID-
      * SUM Val for Odd # Pos
      * PAR.SUM Val for Odd # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4)
      * x1    : LCL.Federal Tax ID-Pos1 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Federal Tax ID-Pos3 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Federal Tax ID-Pos5 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Federal Tax ID-Pos7 Nbr
     C     YL0083        ADD       YL0085        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0087        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0089        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0039                         SUM Val for Odd
      * SUM Val for Even # Pos
      * PAR.SUM Val for Even # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4)
      * x1    : LCL.Federal Tax ID-Pos2 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Federal Tax ID-Pos4 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Federal Tax ID-Pos6 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Federal Tax ID-Pos8 Nbr
     C     YL0084        ADD       YL0086        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0088        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0090        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0040                         SUM Val for Eve
      * SUM Up Odd & Even # Positions for Pallet Number.
      * CASE: *OTHERWISE
      * Substring Out Each Digit From Pallet Number.
      * CASE: *OTHERWISE
     C                   MOVEL     WL0163        YL0091                         Manifest Pallet
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0075                 90      Position 1 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0076                 90      Position 2 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     3             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0077                 90      Position 3 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0078                 90      Position 4 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     5             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0079                 90      Position 5 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0080                 90      Position 6 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     7             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0081                 90      Position 7 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     8             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0082                 90      Position 8 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     9             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0091:ZQ     YL0092                 90      Position 9 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   MOVE      YL0075        YL0093                         Manifest Pallet
     C                   MOVE      YL0076        YL0094                         Manifest Pallet
     C                   MOVE      YL0077        YL0095                         Manifest Pallet
     C                   MOVE      YL0078        YL0096                         Manifest Pallet
     C                   MOVE      YL0079        YL0097                         Manifest Pallet
     C                   MOVE      YL0080        YL0098                         Manifest Pallet
     C                   MOVE      YL0081        YL0099                         Manifest Pallet
     C                   MOVE      YL0082        YL0100                         Manifest Pallet
     C                   MOVE      YL0092        YL0101                         Manifest Pallet
      * SUM Val for Odd # Pos
      * PAR.SUM Val for Odd # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6)
      * x1    : PAR.SUM Val for Odd # Pos
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Manifest Pallet#-Pos1 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Manifest Pallet#-Pos3 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Manifest Pallet#-Pos5 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x5    : LCL.Manifest Pallet#-Pos7 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x6    : LCL.Manifest Pallet#-Pos9 Nbr
     C     WN0039        ADD       YL0093        W0WD04                         *Synon (17,7) w
     C     W0WD04        ADD       YL0095        W0WD03                         *Synon (17,7) w
     C     W0WD03        ADD       YL0097        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0099        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0101        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0039                         SUM Val for Odd
      * SUM Val for Even # Pos
      * PAR.SUM Val for Even # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5)
      * x1    : PAR.SUM Val for Even # Pos
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Manifest Pallet#-Pos2 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Manifest Pallet#-Pos4 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Manifest Pallet#-Pos6 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x5    : LCL.Manifest Pallet#-Pos8 Nbr
     C     WN0040        ADD       YL0094        W0WD03                         *Synon (17,7) w
     C     W0WD03        ADD       YL0096        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0098        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0100        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0040                         SUM Val for Eve
      * Calculated Check Digit Number.
      * CASE: *OTHERWISE
      * Calculated Value
      * LCL.Calc Value USR =
      *    *COMPUTE ((x1 * x2) + x3)
      * x1    : PAR.SUM Val for Odd # Pos
      * *     : PGM.*Synon (17,7) work field *
      * x2    : CON.3
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.SUM Val for Even # Pos
     C     WN0039        MULT      3             W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WN0040        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        YL0102                         Calc Value USR
     C                   Z-ADD     YL0102        YL0103                         Calc Value Last
     C     10            SUB       YL0103        YL0104                         Calc Check Digi
      * Format W0407 Pallet Number for Output.
      * CASE: *OTHERWISE
     C                   MOVEL     YL0104        YL0105                         Calc Check Digi
     C                   Z-ADD     *ZERO         ZQ
     C     '00'          CAT(P)    YL0074:ZQ     YL0106                         W0407 Pallet Nu
     C                   Z-ADD     *ZERO         ZQ
     C     YL0106        CAT(P)    YL0091:ZQ     YL0106                         W0407 Pallet Nu
     C                   Z-ADD     *ZERO         ZQ
     C     YL0106        CAT(P)    YL0105:ZQ     YL0106                         W0407 Pallet Nu
     C                   MOVE      YL0106        YL0115                         W0407 Pallet Nu
     C                   EVAL      TCJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     YL0115        TCJJU1                         MAN02 Pallet Nb
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KLCRTD        KLIST
     C                   KFLD                    TCH9NY                         EDI SURROGATE N
     C                   KFLD                    TCQ2NY                         REF02-Ref ID-Lo
     C                   KFLD                    TCTFNA                         PRF01-Customer
     C                   KFLD                    TCC4NB                         Order Number
     C                   KFLD                    TCJJU1                         MAN02 Pallet Nb
      * Check for duplicate primary key
     C     KLCRTD        SETLL     @BJCPFD                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5134'     W0RTN
      * Send message 'EDI Adv Ship Ntc Tare  EX'
     C                   MOVEL     'USR5134'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      TDEXIT
     C                   ENDIF
      *
     C                   WRITE     @BJCPFD                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   TDEXIT        ENDSR
      /EJECT
     CSR   TERVGN        BEGSR
      *================================================================
      * UPD EDI 856 ASN ECP140 RT - Order Detail  * 
      *================================================================
      *
     C                   Z-ADD     *ZERO         WN0046                         Qty Difference
      *
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSTE         KLIST
     C                   KFLD                    WQTE01                         Company Number
     C                   KFLD                    WQTE02                         Order Number
      * Setup key
     C                   Z-ADD     P1AIC3        WQTE01                         Company Number
     C                   Z-ADD     WAC4NB        WQTE02                         Order Number
      * Establish starting position
     C     KRSTE         SETLL     @BGWKAE                                      *
     C     KRSTE         READE     @BGWKAE                                90    *
      * Data record not found
     C   90              MOVEL     'USR1309'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Quantity Ordered NE DB1.Quantity Shipped Total
     C                   DOW       NOT *IN90
     C                   IF        WCAVQT <> WCCBQT
     C     WCAVQT        SUB       WCCBQT        WN0046                         Qty Difference
     C                   EVAL      YL0116 = ' '                                 Product ID Manu
     C                   MOVEL     WCHGCD        YL0116                         Product ID Manu
      * UPD EDI 856 ASN ECP140 RT - EDI Adv Ship Ntc Dtl V2  * 
     C                   EXSR      TFRVGN
     C                   END                                                    *FI
     C     KRSTE         READE     @BGWKAE                                90    *
     C                   ENDDO
      *================================================================
     CSR   TEEXIT        ENDSR
      /EJECT
     CSR   TFRVGN        BEGSR
      *================================================================
      * UPD EDI 856 ASN ECP140 RT - EDI Adv Ship Ntc Dtl V2  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSTF         KLIST
     C                   KFLD                    WQTF01                         EDI SURROGATE N
     C                   KFLD                    WQTF02                         Order Number
     C                   KFLD                    WQTF03                         Order Sequence
     C                   KFLD                    WQTF04                         Product ID Manu
      * Setup key
     C                   Z-ADD     P2H9NY        WQTF01                         EDI SURROGATE N
     C                   Z-ADD     WCC4NB        WQTF02                         Order Number
     C                   Z-ADD     WCDPNB        WQTF03                         Order Sequence
     C                   MOVEL     YL0116        WQTF04                         Product ID Manu
      * Establish starting position
     C     KRSTF         SETLL     @P140GG                                      *
     C     KRSTF         READE     @P140GG                                90    *
      * Data record not found
     C   90              MOVEL     'USR5139'     W0RTN
      * USER: Process Data record
      * CASE: PAR.Qty Difference USR is NE Zero
     C                   DOW       NOT *IN90
      * CASE: PAR.Qty Difference USR is GT Zero
     C                   IF        WN0046 <> 0
     C                   IF        WN0046 > 0
     C     TDEINZ        ADD       WN0046        YL0117                         SN105 Quantity
     C                   Z-ADD     *ZERO         WN0046                         Qty Difference
      * Chg EDI ASN Dtl V2    CH - EDI Adv Ship Ntc Dtl V2  * Upd Qty Ord
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     TDH9NY        WL0166                         EDI SURROGATE N
     C                   Z-ADD     TDQ2NY        WL0167                         REF02-Ref ID-Lo
     C                   MOVEL(P)  TDTFNA        WL0168                         PRF01-Customer
     C                   Z-ADD     TDC4NB        WL0169                         Order Number
     C                   MOVEL(P)  TDJJU1        WL0170                         MAN02 Pallet Nb
     C                   Z-ADD     TDDPNB        WL0171                         Order Sequence
     C                   Z-ADD     TDQ7NY        WL0172                         SN102 Quantity
     C                   MOVEL(P)  TDZEAA        WL0173                         SN103 Shipped U
     C                   Z-ADD     TDETNZ        WL0174                         PO406 Net WT Pe
     C                   Z-ADD     TDQ8NY        WL0175                         PO406 Gross WT
     C                   Z-ADD     TDTCNY        WL0176                         PO401-Pack
     C                   MOVEL(P)  TDLET1        WL0177                         PID05-ITEM DESC
     C                   MOVEL(P)  TDNEU1        WL0178                         Product ID GTIN
     C                   MOVEL(P)  TDNFU1        WL0179                         Product ID Manu
     C                   MOVEL(P)  TDNGU1        WL0180                         Product ID UPC
     C                   MOVEL(P)  TDNHU1        WL0181                         Product ID UCC-
     C                   MOVEL(P)  TDNWU1        WL0182                         Product ID - Pu
     C                   MOVEL(P)  TDQBU1        WL0183                         LIN/UP UPC Cons
     C                   MOVEL(P)  TDHVU1        WL0184                         W1904 UPC CASE
     C                   MOVEL(P)  TDNCU1        WL0185                         LIN13 Prod ID C
     C                   MOVEL(P)  TDAGAB        WL0186                         LIN Sub Country
     C                   MOVEL(P)  TDQCU1        WL0187                         GTin 12 Lin02
     C                   MOVEL(P)  TDNDU1        WL0188                         SN101 Assigned
     C                   Z-ADD     YL0117        WL0189                         SN105 Quantity
     C                   MOVEL(P)  TDYWAA        WL0190                         SN106 Ordered U
     C                   Z-ADD     TDHZPR        WL0191                         SLN06 Unit Pric
     C                   MOVEL(P)  TDYZAA        WL0192                         SLN07 Unit Pric
     C                   Z-ADD     TDH0PR        WL0193                         SLN06 Unit Pric
     C                   MOVEL(P)  TDY0AA        WL0194                         SLN07 Unit Pric
     C                   MOVEL(P)  TDNIU1        WL0195                         SLN10 Prod ID D
     C                   MOVEL(P)  TDNJU1        WL0196                         SLN12 Prod ID L
     C                   MOVEL(P)  TDNKU1        WL0197                         SLN14 Prod ID U
     C                   Z-ADD     TDTDNY        WL0198                         PO402-Pack Size
     C                   MOVEL(P)  TDNLU1        WL0199                         PO410-Length
     C                   MOVEL(P)  TDNMU1        WL0200                         PO411-Width
     C                   MOVEL(P)  TDNNU1        WL0201                         PO412-Heights
     C                   MOVEL(P)  TDNPU1        WL0202                         REF02-Batch Lot
     C                   Z-ADD     TDEJNZ        WL0203                         DTM02-Expiratio
     C                   Z-ADD     TDEKNZ        WL0204                         DTM02-Shelf Lif
     C                   Z-ADD     TDELNZ        WL0205                         DTM02-Manuf Dat
     C                   EXSR      TGCHRC
     C                   ELSE
      * CASE: *OTHERWISE
      * Convert to Absolute Value.
     C     WN0046        MULT      -1            YL0118                         Qty Difference
      * CASE: DB1.SN105 Quantity Ordered GE LCL.Qty Difference USR
     C                   IF        TDEINZ >= YL0118
     C     TDEINZ        ADD       WN0046        YL0117                         SN105 Quantity
     C                   Z-ADD     *ZERO         WN0046                         Qty Difference
     C                   ELSE
      * CASE: *OTHERWISE
     C                   ADD       TDEINZ        WN0046                         Qty Difference
     C                   Z-ADD     *ZERO         YL0117                         SN105 Quantity
     C                   END                                                    *FI
      * Chg EDI ASN Dtl V2    CH - EDI Adv Ship Ntc Dtl V2  * Upd Qty Ord
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     TDH9NY        WL0166                         EDI SURROGATE N
     C                   Z-ADD     TDQ2NY        WL0167                         REF02-Ref ID-Lo
     C                   MOVEL(P)  TDTFNA        WL0168                         PRF01-Customer
     C                   Z-ADD     TDC4NB        WL0169                         Order Number
     C                   MOVEL(P)  TDJJU1        WL0170                         MAN02 Pallet Nb
     C                   Z-ADD     TDDPNB        WL0171                         Order Sequence
     C                   Z-ADD     TDQ7NY        WL0172                         SN102 Quantity
     C                   MOVEL(P)  TDZEAA        WL0173                         SN103 Shipped U
     C                   Z-ADD     TDETNZ        WL0174                         PO406 Net WT Pe
     C                   Z-ADD     TDQ8NY        WL0175                         PO406 Gross WT
     C                   Z-ADD     TDTCNY        WL0176                         PO401-Pack
     C                   MOVEL(P)  TDLET1        WL0177                         PID05-ITEM DESC
     C                   MOVEL(P)  TDNEU1        WL0178                         Product ID GTIN
     C                   MOVEL(P)  TDNFU1        WL0179                         Product ID Manu
     C                   MOVEL(P)  TDNGU1        WL0180                         Product ID UPC
     C                   MOVEL(P)  TDNHU1        WL0181                         Product ID UCC-
     C                   MOVEL(P)  TDNWU1        WL0182                         Product ID - Pu
     C                   MOVEL(P)  TDQBU1        WL0183                         LIN/UP UPC Cons
     C                   MOVEL(P)  TDHVU1        WL0184                         W1904 UPC CASE
     C                   MOVEL(P)  TDNCU1        WL0185                         LIN13 Prod ID C
     C                   MOVEL(P)  TDAGAB        WL0186                         LIN Sub Country
     C                   MOVEL(P)  TDQCU1        WL0187                         GTin 12 Lin02
     C                   MOVEL(P)  TDNDU1        WL0188                         SN101 Assigned
     C                   Z-ADD     YL0117        WL0189                         SN105 Quantity
     C                   MOVEL(P)  TDYWAA        WL0190                         SN106 Ordered U
     C                   Z-ADD     TDHZPR        WL0191                         SLN06 Unit Pric
     C                   MOVEL(P)  TDYZAA        WL0192                         SLN07 Unit Pric
     C                   Z-ADD     TDH0PR        WL0193                         SLN06 Unit Pric
     C                   MOVEL(P)  TDY0AA        WL0194                         SLN07 Unit Pric
     C                   MOVEL(P)  TDNIU1        WL0195                         SLN10 Prod ID D
     C                   MOVEL(P)  TDNJU1        WL0196                         SLN12 Prod ID L
     C                   MOVEL(P)  TDNKU1        WL0197                         SLN14 Prod ID U
     C                   Z-ADD     TDTDNY        WL0198                         PO402-Pack Size
     C                   MOVEL(P)  TDNLU1        WL0199                         PO410-Length
     C                   MOVEL(P)  TDNMU1        WL0200                         PO411-Width
     C                   MOVEL(P)  TDNNU1        WL0201                         PO412-Heights
     C                   MOVEL(P)  TDNPU1        WL0202                         REF02-Batch Lot
     C                   Z-ADD     TDEJNZ        WL0203                         DTM02-Expiratio
     C                   Z-ADD     TDEKNZ        WL0204                         DTM02-Shelf Lif
     C                   Z-ADD     TDELNZ        WL0205                         DTM02-Manuf Dat
     C                   EXSR      TGCHRC
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSTF         READE     @P140GG                                90    *
     C                   ENDDO
      *================================================================
     CSR   TFEXIT        ENDSR
      /EJECT
     CSR   TGCHRC        BEGSR
      *================================================================
      * Chg EDI ASN Dtl V2    CH - EDI Adv Ship Ntc Dtl V2  * Upd Qty Or
      *================================================================
      * This is a shared subroutine
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @BMCPFN
     C                   Z-ADD     WL0166        WVH9NY                         EDI SURROGATE N
     C                   Z-ADD     WL0167        WVQ2NY                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WL0168        WVTFNA                         PRF01-Customer
     C                   Z-ADD     WL0169        WVC4NB                         Order Number
     C                   MOVEL(P)  WL0170        WVJJU1                         MAN02 Pallet Nb
     C                   Z-ADD     WL0171        WVDPNB                         Order Sequence
      *
     C     KLCHTG        KLIST
     C                   KFLD                    WVH9NY                         EDI SURROGATE N
     C                   KFLD                    WVQ2NY                         REF02-Ref ID-Lo
     C                   KFLD                    WVTFNA                         PRF01-Customer
     C                   KFLD                    WVC4NB                         Order Number
     C                   KFLD                    WVJJU1                         MAN02 Pallet Nb
     C                   KFLD                    WVDPNB                         Order Sequence
     C     KLCHTG        CHAIN     @BMCPFN                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'ECP140L0'    MDACP
     C                   MOVEL     '@BMCPFN'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      TGEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      TGEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QECP12        YARDCS
      * Move non-key fields to @BMCPFN
     C                   Z-ADD     WL0172        WVQ7NY                         SN102 Quantity
     C                   MOVEL(P)  WL0173        WVZEAA                         SN103 Shipped U
     C                   Z-ADD     WL0174        WVETNZ                         PO406 Net WT Pe
     C                   Z-ADD     WL0175        WVQ8NY                         PO406 Gross WT
     C                   Z-ADD     WL0176        WVTCNY                         PO401-Pack
     C                   MOVEL(P)  WL0177        WVLET1                         PID05-ITEM DESC
     C                   MOVEL(P)  WL0178        WVNEU1                         Product ID GTIN
     C                   MOVEL(P)  WL0179        WVNFU1                         Product ID Manu
     C                   MOVEL(P)  WL0180        WVNGU1                         Product ID UPC
     C                   MOVEL(P)  WL0181        WVNHU1                         Product ID UCC-
     C                   MOVEL(P)  WL0182        WVNWU1                         Product ID - Pu
     C                   MOVEL(P)  WL0183        WVQBU1                         LIN/UP UPC Cons
     C                   MOVEL(P)  WL0184        WVHVU1                         W1904 UPC CASE
     C                   MOVEL(P)  WL0185        WVNCU1                         LIN13 Prod ID C
     C                   MOVEL(P)  WL0186        WVAGAB                         LIN Sub Country
     C                   MOVEL(P)  WL0187        WVQCU1                         GTin 12 Lin02
     C                   MOVEL(P)  WL0188        WVNDU1                         SN101 Assigned
     C                   Z-ADD     WL0189        WVEINZ                         SN105 Quantity
     C                   MOVEL(P)  WL0190        WVYWAA                         SN106 Ordered U
     C                   Z-ADD     WL0191        WVHZPR                         SLN06 Unit Pric
     C                   MOVEL(P)  WL0192        WVYZAA                         SLN07 Unit Pric
     C                   Z-ADD     WL0193        WVH0PR                         SLN06 Unit Pric
     C                   MOVEL(P)  WL0194        WVY0AA                         SLN07 Unit Pric
     C                   MOVEL(P)  WL0195        WVNIU1                         SLN10 Prod ID D
     C                   MOVEL(P)  WL0196        WVNJU1                         SLN12 Prod ID L
     C                   MOVEL(P)  WL0197        WVNKU1                         SLN14 Prod ID U
     C                   Z-ADD     WL0198        WVTDNY                         PO402-Pack Size
     C                   MOVEL(P)  WL0199        WVNLU1                         PO410-Length
     C                   MOVEL(P)  WL0200        WVNMU1                         PO411-Width
     C                   MOVEL(P)  WL0201        WVNNU1                         PO412-Heights
     C                   MOVEL(P)  WL0202        WVNPU1                         REF02-Batch Lot
     C                   Z-ADD     WL0203        WVEJNZ                         DTM02-Expiratio
     C                   Z-ADD     WL0204        WVEKNZ                         DTM02-Shelf Lif
     C                   Z-ADD     WL0205        WVELNZ                         DTM02-Manuf Dat
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QECP12 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @BMCPFN                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    ECP140L0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   TGEXIT        ENDSR
      /EJECT
     CSR   THRVGN        BEGSR
      *================================================================
      * Upd OHE EDI 856 Error  RT - Order Header Extension  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSTH         KLIST
     C                   KFLD                    WFAIC3                         Company Number
     C                   KFLD                    WFC4NB                         Order Number
      * Setup key
     C                   Z-ADD     P1AIC3        WFAIC3                         Company Number
     C                   Z-ADD     WAC4NB        WFC4NB                         Order Number
      * Establish starting position
     C     KRSTH         CHAIN     @AMREJF                            90        *
      * Data record not found
     C   90              MOVEL     'USR3697'     W0RTN
      * USER: Process Data record
      * CHG OHE EDI 856 Error  CH - Order Header Extension  * 
     C                   IF        NOT *IN90
     C                   EXSR      TICHRC
     C                   ENDIF
      *================================================================
     CSR   THEXIT        ENDSR
      /EJECT
     CSR   TICHRC        BEGSR
      *================================================================
      * CHG OHE EDI 856 Error  CH - Order Header Extension  * 
      *================================================================
      *
     C                   Z-ADD     *ZERO         WN0047                         Load ID
     C                   Z-ADD     *ZERO         WN0048                         Stop_Drop Seque
     C                   EVAL      WN0049 = ' '                                 Shipping Line
     C                   EVAL      WN0050 = ' '                                 Port Delv Termi
     C                   EVAL      WN0051 = ' '                                 OHE City
     C                   EVAL      WN0052 = ' '                                 OHE Vessel_Airl
     C                   EVAL      WN0053 = ' '                                 OHE Voyage_Flig
     C                   EVAL      WN0054 = ' '                                 OHE Booking Num
     C                   EVAL      WN0055 = ' '                                 OHE Discharge P
     C                   Z-ADD     *ZERO         WN0056                         OHE Sail_Flight
     C                   Z-ADD     *ZERO         WN0057                         OHE Port Cut Da
     C                   Z-ADD     *ZERO         WN0058                         OHE Arrival Dat
     C                   EVAL      WN0059 = ' '                                 OHE Late Delive
     C                   EVAL      WN0060 = ' '                                 OHE Ship Status
     C                   EVAL      WN0061 = ' '                                 OHE Container N
     C                   EVAL      WN0062 = ' '                                 OHE Comment 1
     C                   EVAL      WN0063 = ' '                                 OHE Comment 2
     C                   Z-ADD     *ZERO         WN0064                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WN0065                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WN0066                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WN0067                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WN0068                         OHE HPB RIN Equ
     C                   Z-ADD     *ZERO         WN0069                         OHE HPB RIN Pri
     C                   Z-ADD     *ZERO         WN0070                         Transload Termi
     C                   Z-ADD     *ZERO         WN0071                         OHE Est Arrv at
     C                   Z-ADD     *ZERO         WN0072                         OHE Backhaul ET
     C                   Z-ADD     *ZERO         WN0073                         OHE Port_Pier P
     C                   Z-ADD     *ZERO         WN0074                         OHE Actual Ship
     C                   EVAL      WN0075 = ' '                                 OHE Carrier SCA
     C                   EVAL      WN0076 = ' '                                 OHE Spot Buy
     C                   EVAL      WN0077 = ' '                                 OHE PO ACK Flag
     C                   EVAL      WN0078 = ' '                                 OHE Override Ty
     C                   EVAL      WN0079 = ' '                                 OHE Backhaul St
     C                   EVAL      WN0080 = ' '                                 OHE Backhaul ET
     C                   EVAL      WN0081 = ' '                                 OHE Load Haul T
     C                   EVAL      WN0082 = ' '                                 OHE Backhaul Ca
     C                   EVAL      WN0083 = ' '                                 OHE Bookings Co
     C                   EVAL      WN0084 = ' '                                 OHE EDI Error R
     C                   Z-ADD     *ZERO         WN0085                         HPB COA Batch N
     C                   EVAL      WN0086 = ' '                                 Delivery P_O  N
     C                   EVAL      WN0087 = ' '                                 OHE Intended fo
     C                   EVAL      WN0088 = ' '                                 OHE EDI 943 Act
     C                   EVAL      WN0089 = ' '                                 OHE EDI 944 Act
     C                   EVAL      WN0090 = ' '                                 OHE EDI 940 Act
     C                   EVAL      WN0091 = ' '                                 OHE EDI 945 Act
     C                   EVAL      WN0092 = ' '                                 OHE EDI 824 Act
     C                   EVAL      WN0093 = ' '                                 OHE Transload S
     C                   EVAL      WN0094 = ' '                                 OHE Abs Rate Ov
     C                   EVAL      WN0095 = ' '                                 OHE Appt Confir
     C                   EVAL      WN0096 = ' '                                 OHE Backhaul Co
     C                   EVAL      WN0097 = ' '                                 OHE Backhaul Ch
     C                   EVAL      WN0098 = ' '                                 OHE Transload C
     C                   EVAL      WN0099 = ' '                                 OHE Pier Pass I
     C                   EVAL      WN0100 = ' '                                 OHE Carrier Nm
     C                   EVAL      WN0101 = ' '                                 OHE Appt Confir
     C                   EVAL      WN0102 = ' '                                 OHE Backhaul Co
     C                   EVAL      WN0103 = ' '                                 Letter of Credi
     C                   Z-ADD     *ZERO         WN0104                         OHE Backhaul Re
     C                   Z-ADD     *ZERO         WN0105                         LD Stop_Drop
     C                   Z-ADD     *ZERO         WN0106                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WN0107                         OHE Pier Pass F
     C                   Z-ADD     *ZERO         WN0108                         OHE Port Check
     C                   Z-ADD     *ZERO         WN0109                         OHE Port Cut Ti
     C                   Z-ADD     *ZERO         WN0110                         OHE Backhaul Tr
     C                   Z-ADD     *ZERO         WN0111                         OHE Load Sched
     C                   Z-ADD     *ZERO         WN0112                         Original Appoin
     C                   Z-ADD     *ZERO         WN0113                         Original Appoin
     C                   Z-ADD     *ZERO         WN0114                         OHE PowerPro Lo
     C                   Z-ADD     *ZERO         WN0115                         OHE PowerPro Lo
     C                   Z-ADD     *ZERO         WN0116                         OHE Unused Nume
     C                   Z-ADD     *ZERO         WN0117                         OHE Orig ABS Fr
     C                   EVAL      WN0118 = ' '                                 OHE Genset Numb
     C                   EVAL      WN0119 = ' '                                 OHE Email BOL_S
     C                   EVAL      WN0120 = ' '                                 OHE EDI Order A
     C                   EVAL      WN0121 = ' '                                 OHE EDI 601 Act
     C                   EVAL      WN0122 = ' '                                 OHE Unused Stat
     C                   EVAL      WN0123 = ' '                                 OHE Unused Text
     C                   EVAL      WN0124 = ' '                                 OHE Unused Text
     C                   EVAL      WN0125 = ' '                                 OHE Customer Ve
     C                   EVAL      WN0126 = ' '                                 OHE EDI 824 AES
     C                   EVAL      WN0127 = ' '                                 OHE Unused Text
     C                   Z-ADD     *ZERO         WN0128                         OHE Unused Date
     C                   Z-ADD     *ZERO         WN0129                         OHE Unused Date
     C                   EVAL      WN0130 = ' '                                 EDI Status 1
     C                   EVAL      WN0131 = ' '                                 EDI Status 2
     C                   EVAL      WN0132 = ' '                                 EDI Status 3
     C                   EVAL      WN0133 = ' '                                 Record Status
     C                   Z-ADD     *ZERO         WN0134                         Job Time
     C                   EVAL      WN0135 = ' '                                 User Id
     C                   EVAL      WN0136 = ' '                                 Job Name
     C                   Z-ADD     *ZERO         WN0137                         Job Date
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YBRDC = ' '
      *
      * Move key fields to @AMREJE
     C                   Z-ADD     WFAIC3        TEAIC3                         Company Number
     C                   Z-ADD     WFC4NB        TEC4NB                         Order Number
      *
     C     KLCHTI        KLIST
     C                   KFLD                    TEAIC3                         Company Number
     C                   KFLD                    TEC4NB                         Order Number
     C     KLCHTI        CHAIN     @AMREJE                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PMAMREL0'    MDACP
     C                   MOVEL     '@AMREJE'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL002.
     C                   MOVEL     'LBL002'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      TIEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      TIEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QPMAM1        YBRDCS
      * Move non-key fields to @AMREJE
     C                   EVAL      TEJWSC = ' '                                 OHE EDI Error R
     C                   MOVEL(P)  'S'           TEJUSC                         OHE EDI 856 Act
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QPMAM1 <> YBRDCS AND
     C                             YBRDC <> 'N'
     C                   MOVE      'Y'           YBRDC
     C                   ENDIF
      * USER: Processing before Data update
     C                   Z-ADD     ##JTM         TEAATM                         Job Time
     C                   Z-ADD     ##JDT         TEAXDT                         Job Date
     C                   MOVEL     ##PGM         TEA0NA                         Job Name
     C                   MOVEL     ##USR         TEAYNA                         User Id
      * Set PGM.*Record Data Changed flag
     C                   IF        QPMAM1 <> YBRDCS AND
     C                             YBRDC <> 'N'
     C                   MOVE      'Y'           YBRDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YBRDC = 'Y'
     C                   UPDATE    @AMREJE                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PMAMREL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   TIEXIT        ENDSR
      /EJECT
     CSR   XCVFA         BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C                   IF        XDAY1 > 109267
     C                   ADD       2             XDAY1
     C                   ELSE
     C                   IF        XDAY1 > 36218
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      * Full years (up to the date)
     C     XDAY1         DIV       365.25        XDWK1
     C                   MVR                     XDWK3
     C                   Z-ADD     XDWK1         XDINYY
      * The date is the end of a year
     C                   IF        XDWK3 = 0
     C                   Z-ADD     12            XDINMM
     C                   Z-ADD     31            XDINDD
     C                   ELSE
      * Year days up to the date
     C     XDWK1         MULT      365.25        XDWK2
     C                   SUB       XDWK2         XDAY1
     C                   ADD       1             XDINYY
      * Leap year ?
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
      * March 1 (relative day of the year)
     C                   IF        XDWK1 = 0
     C                   Z-ADD     60            XDWK1
     C                   ELSE
     C                   Z-ADD     59            XDWK1
     C                   END
      * Define date base month and offset day -
      *  - January (thru February)
     C                   IF        XDAY1 <= XDWK1
     C                   Z-ADD     1             XDINMM
     C                   ELSE
     C                   SUB       XDWK1         XDAY1
      *  - March (thru July)
     C                   IF        XDAY1 <= 153
     C                   Z-ADD     3             XDINMM
     C                   ELSE
      *  - August (thru December)
     C                   Z-ADD     8             XDINMM
     C                   SUB       153           XDAY1
     C                   END
      * Calculate 2 month base and offset day
     C     XDAY1         SUB       1             XDWK1
     C                   DIV       61            XDWK1
     C                   MVR                     XDAY1
     C                   ADD       1             XDAY1
     C                   MULT      2             XDWK1
     C                   ADD       XDWK1         XDINMM
     C                   END
      * Calculate date increment,
     C                   IF        XDAY1 > 31
     C                   ADD       1             XDINMM
     C                   SUB       31            XDAY1
     C                   END
     C                   Z-ADD     XDAY1         XDINDD
     C                   END
      *================================================================
     CSR   XCVFAE        ENDSR
      /EJECT
     CSR   XCVTA         BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C     XDINYY        SUB       1             XDWK1
     C     XDWK1         MULT      365.25        XDAY1
     C                   IF        XDWK1 >= 300
     C                   SUB       2             XDAY1
     C                   ELSE
     C                   IF        XDWK1 >= 100
     C                   SUB       1             XDAY1
     C                   END
     C                   END
      * (from the beginning of the year to the beginning of the month:)
     C     XDINMM        SUB       1             XDWK1
      *     ...+31*(MM-1) (for January-February) ...
     C                   IF        XDINMM < 3
     C                   MULT      31            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                   MULT      30            XDWK1
     C                   ADD       XDWK1         XDAY1
      *         ...-2 (for preceding February) ...
     C                   SUB       2             XDAY1
      *         ...+1 (for preceding February, if leap year) ...
     C                   IF        XDINYY <> 100 AND
     C                             XDINYY <> 300
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
     C                   IF        XDWK1 = 0
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C                   IF        XDINMM < 8
     C     XDINMM        MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C     XDINMM        ADD       1             XDWK1
     C                   MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   END
     C                   END
      * ...+DD (days in the month up to the ending date)
     C                   ADD       XDINDD        XDAY1
      *================================================================
     CSR   XCVTAE        ENDSR
      /EJECT
     CSR   XDADY         BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
      * None days of week selected
     C                   IF        XDURR = 0 OR
     C                             XDWSL = 0
     C                   Z-ADD     XDAY2         XDAY1
      * Return Code: Unable to increment date.
     C                   IF        XDURR <> *ZERO
     C                   MOVEL     'Y2U0059'     W0RTN
     C                   ENDIF
     C                   GOTO      XDADYE
     C                   ENDIF
      * All days of week selected
     C                   IF        XDWSL = 7
     C     XDAY2         ADD       XDURR         XDAY1
     C                   GOTO      XDADYM
     C                   ENDIF
      * Some days of week selected
     C                   IF        XDURR >= 0
     C                   Z-ADD     1             XDSTP
     C                   ELSE
     C                   Z-ADD     -1            XDSTP
     C                   ENDIF
      * Get number of full weeks in the duration
     C     XDURR         DIV       XDWSL         XDWNB
      * Isolate the last week
     C                   MVR                     XDLSW
     C                   IF        XDLSW = 0
     C     XDWSL         MULT      XDSTP         XDLSW
     C                   SUB       XDSTP         XDWNB
     C                   ENDIF
      * Increment the date by the full weeks
     C     XDWNB         MULT      7             XDWK1
     C     XDAY2         ADD       XDWK1         XDAY1
      * Determine day of week of the beginning date
     C     XDAY2         ADD       3             YY
     C                   DIV       7             YY
     C                   MVR                     YY
     C                   IF        YY = 0
     C                   Z-ADD     7             YY
     C                   ENDIF
      * Loop: Increment the date by the last week
      * Increment the date
     C                   DOW       XDLSW <> 0
     C                   ADD       XDSTP         XDAY1
      * Increment the day of week
     C                   ADD       XDSTP         YY
      * Put day of week into the range 1-7
     C                   IF        YY = 0
     C                   Z-ADD     7             YY
     C                   ELSE
     C                   IF        YY = 8
     C                   Z-ADD     1             YY
     C                   ELSE
     C                   IF        YY = -1
     C                   Z-ADD     6             YY
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      * Selected day of the last week has been processed
     C                   IF        YDOW(YY) = XDSEL
     C                   SUB       XDSTP         XDLSW
     C                   ENDIF
      * End of loop
     C                   ENDDO
     C     XDADYM        TAG
     C                   IF        XDINDD < 1
     C                   Z-ADD     1             XDINDD
     C                   MOVEL     'Y2U0006'     W0RTN
     C                   ENDIF
      *================================================================
     CSR   XDADYE        ENDSR
      /EJECT
     CSR   XDOWS         BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                   MOVEA     XDCDW         YDOW
     C                   Z-ADD     0             XDWSL
     C                   Z-ADD     1             YY
     C                   DOW       YY <= 7
     C                   IF        YDOW(YY) = XDSEL
     C                   ADD       1             XDWSL
     C                   END
     C                   ADD       1             YY
     C                   END
      *================================================================
     CSR   XDOWSE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAAIC3                         Company Number
     C                   Z-ADD     *ZERO         WAC4NB                         Order Number
     C                   Z-ADD     *ZERO         WAANC7                         AR Customer Num
     C                   Z-ADD     *ZERO         WABKC7                         Ship To Custome
     C                   Z-ADD     *ZERO         WAB0C7                         Bill to Custome
     C                   Z-ADD     *ZERO         WAA0DT                         Order Date
     C                   Z-ADD     *ZERO         WAA5DT                         Requested Ship
     C                   Z-ADD     *ZERO         WAGNDT                         Actual Shipped
     C                   Z-ADD     *ZERO         WAACDT                         Cancel Date
     C                   Z-ADD     *ZERO         WAAODT                         Scheduled Ship
     C                   Z-ADD     *ZERO         WACXDT                         Date of Origina
     C                   Z-ADD     *ZERO         WAJZVA                         Order Value Tot
     C                   Z-ADD     *ZERO         WAA1WG                         Order Weight To
     C                   Z-ADD     *ZERO         WAEIDT                         Requested Deliv
     C                   Z-ADD     *ZERO         WAAFTM                         Requested Deliv
     C                   Z-ADD     *ZERO         WARMNB                         Load ID
     C                   Z-ADD     *ZERO         WATBNB                         Absorbed Freigh
     C                   Z-ADD     *ZERO         WAR1NB                         Rated Freight
     C                   Z-ADD     *ZERO         WARNNB                         Reefer Temperat
     C                   Z-ADD     *ZERO         WAATIN                         Attach to Invoi
     C                   Z-ADD     *ZERO         WARSRN                         Resell Referenc
     C                   Z-ADD     *ZERO         WAT3NB                         Attach to Order
     C                   Z-ADD     *ZERO         WACONB                         Invoice Number
     C                   Z-ADD     *ZERO         WAAWDT                         Invoice Date
     C                   Z-ADD     *ZERO         WAVRVA                         A_R order Value
     C                   Z-ADD     *ZERO         WAB7VL                         Invoice Order V
     C                   Z-ADD     *ZERO         WANODT                         OH Appt Confirm
     C                   Z-ADD     *ZERO         WANPDT                         JPN Invoice Iss
     C                   Z-ADD     *ZERO         WANQDT                         Load Actual Shi
     C                   Z-ADD     *ZERO         WANRDT                         Load BOL Comple
     C                   Z-ADD     *ZERO         WANSDT                         Load Truck Depa
     C                   Z-ADD     *ZERO         WABPTM                         Maximum Gross W
     C                   Z-ADD     *ZERO         WABQTM                         Time of Origina
     C                   Z-ADD     *ZERO         WABRTM                         OH Appt Confirm
     C                   Z-ADD     *ZERO         WABSTM                         Load BOL Comple
     C                   Z-ADD     *ZERO         WABTTM                         Load Truck Depa
     C                   Z-ADD     *ZERO         WAH0NX                         Act Frt Referen
     C                   Z-ADD     *ZERO         WAH1NX                         Act Non_Ref Frt
     C                   Z-ADD     *ZERO         WAH2NX                         OH Fuel Surchar
     C                   Z-ADD     *ZERO         WAH3NX                         OH Total Non_Re
     C                   Z-ADD     *ZERO         WAH4NX                         OH Total Ref Fr
     C                   Z-ADD     *ZERO         WAC0C7                         Claim Number
     C                   Z-ADD     *ZERO         WAAATM                         Job Time
     C                   Z-ADD     *ZERO         WAAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WBB0C7                         Bill to Custome
     C                   Z-ADD     *ZERO         WBY4NY                         EDI Alt ST Cust
     C                   Z-ADD     *ZERO         WBY5NY                         EDI unused nbr
     C                   Z-ADD     *ZERO         WBMJDT                         Create Date
     C                   Z-ADD     *ZERO         WBBETM                         Create Time
     C                   Z-ADD     *ZERO         WBMKDT                         Change Date
     C                   Z-ADD     *ZERO         WBBFTM                         Change Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WCAIC3                         Company Number
     C                   Z-ADD     *ZERO         WCC4NB                         Order Number
     C                   Z-ADD     *ZERO         WCDPNB                         Order Sequence
     C                   Z-ADD     *ZERO         WCUENB                         Order Secondary
     C                   Z-ADD     *ZERO         WCHGCD                         Item Code
     C                   Z-ADD     *ZERO         WCBKC7                         Ship To Custome
     C                   Z-ADD     *ZERO         WCCFC7                         Order Group Cod
     C                   Z-ADD     *ZERO         WCMAVA                         Billing Detail
     C                   Z-ADD     *ZERO         WCKDVA                         Billing Detail
     C                   Z-ADD     *ZERO         WCL8VA                         Billing Detail
     C                   Z-ADD     *ZERO         WCL9VA                         Quantity to Sub
     C                   Z-ADD     *ZERO         WCAYVA                         Extended Amount
     C                   Z-ADD     *ZERO         WCEXDT                         Market Pricing
     C                   Z-ADD     *ZERO         WCBZPR                         Price Overage O
     C                   Z-ADD     *ZERO         WCL6NB                         Contract Number
     C                   Z-ADD     *ZERO         WCGIDT                         Pricing Date Us
     C                   Z-ADD     *ZERO         WCR1NB                         Rated Freight
     C                   Z-ADD     *ZERO         WCAVQT                         Quantity Ordere
     C                   Z-ADD     *ZERO         WCD0WG                         Weight Ordered
     C                   Z-ADD     *ZERO         WCCCQT                         Quantity Schedu
     C                   Z-ADD     *ZERO         WCAUWG                         Weight Schedule
     C                   Z-ADD     *ZERO         WCCBQT                         Quantity Shippe
     C                   Z-ADD     *ZERO         WCATWG                         Weight Shipped
     C                   Z-ADD     *ZERO         WCAQCS                         Unit Cost Prici
     C                   Z-ADD     *ZERO         WCAGCS                         Unit Cost Per P
     C                   Z-ADD     *ZERO         WCAKPR                         Unit Price
     C                   Z-ADD     *ZERO         WCALPR                         Unit Price_Cred
     C                   Z-ADD     *ZERO         WCAUPR                         Unit Price Orde
     C                   Z-ADD     *ZERO         WCAVWG                         Unit Weight Ord
     C                   Z-ADD     *ZERO         WCA4WG                         Tare Weight Tot
     C                   Z-ADD     *ZERO         WCA5DT                         Requested Ship
     C                   Z-ADD     *ZERO         WCAODT                         Scheduled Ship
     C                   Z-ADD     *ZERO         WCGNDT                         Actual Shipped
     C                   Z-ADD     *ZERO         WCRGNB                         Item Structure
     C                   Z-ADD     *ZERO         WCRHNB                         Item Structure
     C                   Z-ADD     *ZERO         WCRINB                         Item Structure
     C                   Z-ADD     *ZERO         WCCXDT                         Date of Origina
     C                   Z-ADD     *ZERO         WCDUPR                         Invoice Unit Pr
     C                   Z-ADD     *ZERO         WCB6VL                         Invoice Extende
     C                   Z-ADD     *ZERO         WCA1AA                         Ham Group Numbe
     C                   Z-ADD     *ZERO         WCNTDT                         Warehouse Palle
     C                   Z-ADD     *ZERO         WCNUDT                         Consumed Item C
     C                   Z-ADD     *ZERO         WCNVDT                         Deadline Depart
     C                   Z-ADD     *ZERO         WCNWDT                         OD Price Type R
     C                   Z-ADD     *ZERO         WCNXDT                         OD Firm Date
     C                   Z-ADD     *ZERO         WCBUTM                         Deadline Depart
     C                   Z-ADD     *ZERO         WCBVTM                         Price Code
     C                   Z-ADD     *ZERO         WCBWTM                         Maximum Net Wei
     C                   Z-ADD     *ZERO         WCBXTM                         Substitution Li
     C                   Z-ADD     *ZERO         WCBYTM                         Max Qty to sche
     C                   Z-ADD     *ZERO         WCH5NX                         Warehouse Palle
     C                   Z-ADD     *ZERO         WCH6NX                         Warehouse Avg P
     C                   Z-ADD     *ZERO         WCH7NX                         OD Item Target
     C                   Z-ADD     *ZERO         WCH8NX                         OD Estimated Gr
     C                   Z-ADD     *ZERO         WCH9NX                         OD Maximum Unit
     C                   Z-ADD     *ZERO         WCDVPR                         Order Gate_Fina
     C                   Z-ADD     *ZERO         WCDWPR                         OD Ceiling Pric
     C                   Z-ADD     *ZERO         WCDXPR                         OD Gate_Final P
     C                   Z-ADD     *ZERO         WCDYPR                         OD Weighted Avg
     C                   Z-ADD     *ZERO         WCDZPR                         OD Original Ord
     C                   Z-ADD     *ZERO         WCGSPR                         OD Cancel Date
     C                   Z-ADD     *ZERO         WCGTPR                         OD Unused Prc 7
     C                   Z-ADD     *ZERO         WCGUPR                         OD Unused Prc 8
     C                   Z-ADD     *ZERO         WCPEWG                         Weight Amount E
     C                   Z-ADD     *ZERO         WCRINY                         Item Age Days
     C                   Z-ADD     *ZERO         WCTIDT                         Production Ovr
     C                   Z-ADD     *ZERO         WCTJDT                         Production Ovr
     C                   Z-ADD     *ZERO         WCTKDT                         OD Market Begin
     C                   Z-ADD     *ZERO         WCTLDT                         OD Market Endin
     C                   Z-ADD     *ZERO         WCTMDT                         OD Atch to Ord
     C                   Z-ADD     *ZERO         WCAATM                         Job Time
     C                   Z-ADD     *ZERO         WCAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WDDBNB                         Warehouse Chill
     C                   Z-ADD     *ZERO         WDBWC3                         Shipping Compan
     C                   Z-ADD     *ZERO         WDBTC3                         Accounting Comp
     C                   Z-ADD     *ZERO         WDBUC3                         WHS Sched Prod
     C                   Z-ADD     *ZERO         WDBVC3                         WHS Inventory C
     C                   Z-ADD     *ZERO         WDAATM                         Job Time
     C                   Z-ADD     *ZERO         WDAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WEF5NZ                         EDI Company # 9
     C                   Z-ADD     *ZERO         WEF6NZ                         Hold til ship w
     C                   Z-ADD     *ZERO         WEMJDT                         Create Date
     C                   Z-ADD     *ZERO         WEBETM                         Create Time
     C                   Z-ADD     *ZERO         WEMKDT                         Change Date
     C                   Z-ADD     *ZERO         WEBFTM                         Change Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WFAIC3                         Company Number
     C                   Z-ADD     *ZERO         WFC4NB                         Order Number
     C                   Z-ADD     *ZERO         WFRMNB                         Load ID
     C                   Z-ADD     *ZERO         WFRUNB                         Stop_Drop Seque
     C                   Z-ADD     *ZERO         WFQWDT                         OHE Sail_Flight
     C                   Z-ADD     *ZERO         WFQXDT                         OHE Port Cut Da
     C                   Z-ADD     *ZERO         WFQYDT                         OHE Arrival Dat
     C                   Z-ADD     *ZERO         WFGINY                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WFGFNY                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WFGGNY                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WFGHNY                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WFHEVL                         OHE HPB RIN Equ
     C                   Z-ADD     *ZERO         WFHFVL                         OHE HPB RIN Pri
     C                   Z-ADD     *ZERO         WFHGVL                         Transload Termi
     C                   Z-ADD     *ZERO         WFQZDT                         OHE Est Arrv at
     C                   Z-ADD     *ZERO         WFQ0DT                         OHE Backhaul ET
     C                   Z-ADD     *ZERO         WFQ1DT                         OHE Port_Pier P
     C                   Z-ADD     *ZERO         WFQ2DT                         OHE Actual Ship
     C                   Z-ADD     *ZERO         WFITNY                         HPB COA Batch N
     C                   Z-ADD     *ZERO         WFQJNY                         OHE Backhaul Re
     C                   Z-ADD     *ZERO         WFQKNY                         LD Stop_Drop
     C                   Z-ADD     *ZERO         WFQLNY                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WFP8NY                         OHE Pier Pass F
     C                   Z-ADD     *ZERO         WFP9NY                         OHE Port Check
     C                   Z-ADD     *ZERO         WFQANY                         OHE Port Cut Ti
     C                   Z-ADD     *ZERO         WFQCNY                         OHE Backhaul Tr
     C                   Z-ADD     *ZERO         WFQDNY                         OHE Load Sched
     C                   Z-ADD     *ZERO         WFQENY                         Original Appoin
     C                   Z-ADD     *ZERO         WFQFNY                         Original Appoin
     C                   Z-ADD     *ZERO         WFQGNY                         OHE PowerPro Lo
     C                   Z-ADD     *ZERO         WFQHNY                         OHE PowerPro Lo
     C                   Z-ADD     *ZERO         WFQINY                         OHE Unused Nume
     C                   Z-ADD     *ZERO         WFQMNY                         OHE Orig ABS Fr
     C                   Z-ADD     *ZERO         WFW5DT                         OHE Unused Date
     C                   Z-ADD     *ZERO         WFW6DT                         OHE Unused Date
     C                   Z-ADD     *ZERO         WFAATM                         Job Time
     C                   Z-ADD     *ZERO         WFAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WGV1DT                         TPC Unused Date
     C                   Z-ADD     *ZERO         WGV2DT                         TPC Unused date
     C                   Z-ADD     *ZERO         WGMJDT                         Create Date
     C                   Z-ADD     *ZERO         WGBETM                         Create Time
     C                   Z-ADD     *ZERO         WGMKDT                         Change Date
     C                   Z-ADD     *ZERO         WGBFTM                         Change Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WHTSCN                         ST02-TRANS SET
     C                   Z-ADD     *ZERO         WHOSDT                         G5002-ORDER DAT
     C                   Z-ADD     *ZERO         WHHUVL                         SAC05-$$ AMT OF
     C                   Z-ADD     *ZERO         WHT6DT                         G6202 Ship Date
     C                   Z-ADD     *ZERO         WHDELV                         G6202-DELIVERY
     C                   Z-ADD     *ZERO         WHD3VL                         G7601-QUANTITY
     C                   Z-ADD     *ZERO         WHD4VL                         G7603-WEIGHT OR
     C                   Z-ADD     *ZERO         WHAMTX                         G7608-ORDER AMO
     C                   Z-ADD     *ZERO         WHUFDT                         POH Date Stamp
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WIHGCD                         Item Code
     C                   Z-ADD     *ZERO         WIAWPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WIAXPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WIAIWG                         Unit Weight
     C                   Z-ADD     *ZERO         WICZWG                         Minimum Weight
     C                   Z-ADD     *ZERO         WIC0WG                         Maximum Weight
     C                   Z-ADD     *ZERO         WIURTN                         Number Cases On
     C                   Z-ADD     *ZERO         WIACC8                         Vendor item Def
     C                   Z-ADD     *ZERO         WIRINB                         Item Structure
     C                   Z-ADD     *ZERO         WIRHNB                         Item Structure
     C                   Z-ADD     *ZERO         WIRGNB                         Item Structure
     C                   Z-ADD     *ZERO         WITFNB                         Transportation
     C                   Z-ADD     *ZERO         WICHTM                         Fresh Chilling
     C                   Z-ADD     *ZERO         WISWGH                         Std Weight_Head
     C                   Z-ADD     *ZERO         WIPPHE                         Pieces Per Head
     C                   Z-ADD     *ZERO         WISFNB                         Pallet Tare Wei
     C                   Z-ADD     *ZERO         WIA3WG                         Misc Tare Weigh
     C                   Z-ADD     *ZERO         WISJNB                         Production Lead
     C                   Z-ADD     *ZERO         WISKNB                         Agrimetrics gro
     C                   Z-ADD     *ZERO         WISLNB                         Agrimetrics pac
     C                   Z-ADD     *ZERO         WISMNB                         Agrimetrics gra
     C                   Z-ADD     *ZERO         WICFNB                         PM Pounds per H
     C                   Z-ADD     *ZERO         WICGNB                         Item Frt Overag
     C                   Z-ADD     *ZERO         WIILNB                         Packages per ca
     C                   Z-ADD     *ZERO         WICHNB                         Use_Freeze_Sell
     C                   Z-ADD     *ZERO         WICINB                         PM Batch Size
     C                   Z-ADD     *ZERO         WICJNB                         Package Level s
     C                   Z-ADD     *ZERO         WICMNB                         Partial Item Co
     C                   Z-ADD     *ZERO         WICNNB                         WIP Item Code
     C                   Z-ADD     *ZERO         WICRNB                         WIP Reject Code
     C                   Z-ADD     *ZERO         WICSNB                         Std Costing Uni
     C                   Z-ADD     *ZERO         WICVNB                         FP Std Green We
     C                   Z-ADD     *ZERO         WICWNB                         PM Std LBS Man
     C                   Z-ADD     *ZERO         WICXNB                         PM Raw Meat LBS
     C                   Z-ADD     *ZERO         WICZNB                         PM Formula LBS
     C                   Z-ADD     *ZERO         WIC0NB                         PM Finished LBS
     C                   Z-ADD     *ZERO         WIB4NB                         PM Raw Material
     C                   Z-ADD     *ZERO         WITMVA                         Maximum Audit V
     C                   Z-ADD     *ZERO         WITNVA                         Minimum Audit V
     C                   Z-ADD     *ZERO         WIBLPR                         Market Overage
     C                   Z-ADD     *ZERO         WIBMPR                         Standard Overag
     C                   Z-ADD     *ZERO         WICMCO                         Item Pricing Co
     C                   Z-ADD     *ZERO         WIAIC3                         Company Number
     C                   Z-ADD     *ZERO         WIICN1                         Item Category N
     C                   Z-ADD     *ZERO         WIICN2                         Item Category N
     C                   Z-ADD     *ZERO         WIV2NB                         Item Category N
     C                   Z-ADD     *ZERO         WIITCN                         Item Category N
     C                   Z-ADD     *ZERO         WIITC5                         Item Category N
     C                   Z-ADD     *ZERO         WIICN6                         Item Category N
     C                   Z-ADD     *ZERO         WIICN7                         Item Category N
     C                   Z-ADD     *ZERO         WIICN8                         Item Category N
     C                   Z-ADD     *ZERO         WIICN9                         Item Category N
     C                   Z-ADD     *ZERO         WIICN0                         Item Category N
     C                   Z-ADD     *ZERO         WIB5NB                         PM Line Number
     C                   Z-ADD     *ZERO         WIBDNB                         Pieces Per Bag
     C                   Z-ADD     *ZERO         WIBJNB                         Bags Per Unit
     C                   Z-ADD     *ZERO         WIF5WG                         Item Target Pri
     C                   Z-ADD     *ZERO         WIF6WG                         Minimum Piece W
     C                   Z-ADD     *ZERO         WIF7WG                         Maximum Piece W
     C                   Z-ADD     *ZERO         WIBLNB                         Seaboard Equiva
     C                   Z-ADD     *ZERO         WIBNNB                         Production Qty
     C                   Z-ADD     *ZERO         WIAHTM                         Job Time 1
     C                   Z-ADD     *ZERO         WIEKDT                         Job Date 1
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WJH9NY                         EDI SURROGATE N
     C                   Z-ADD     *ZERO         WJQ2NY                         REF02-Ref ID-Lo
     C                   Z-ADD     *ZERO         WJEUNZ                         PRF04-Cust PO D
     C                   Z-ADD     *ZERO         WJD9NZ                         TD102 Case Quan
     C                   Z-ADD     *ZERO         WJFHNZ                         TD102 Pallet Co
     C                   Z-ADD     *ZERO         WJFPNZ                         Unit Count
     C                   Z-ADD     *ZERO         WJFINZ                         Slip Sheet Coun
     C                   Z-ADD     *ZERO         WJENNZ                         TD107 Weight-Gr
     C                   Z-ADD     *ZERO         WJEMNZ                         TD107 Weight-Ne
     C                   Z-ADD     *ZERO         WJEFNZ                         DTM02-Req Deliv
     C                   Z-ADD     *ZERO         WJEGNZ                         DTM02-Req PU Da
     C                   Z-ADD     *ZERO         WJXBDT                         DTM02-Unused Da
     C                   Z-ADD     *ZERO         WJEHNZ                         DTM02-Unused Da
     C                   Z-ADD     *ZERO         WJFJNZ                         REF02 Invoice N
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WKAIC3                         Company Number
     C                   Z-ADD     *ZERO         WKC4NB                         Order Number
     C                   Z-ADD     *ZERO         WKDPNB                         Order Sequence
     C                   Z-ADD     *ZERO         WKUENB                         Order Secondary
     C                   Z-ADD     *ZERO         WKRZNB                         Case Sequence N
     C                   Z-ADD     *ZERO         WKFOQT                         Case Quantity
     C                   Z-ADD     *ZERO         WKR0NB                         Case Weight
     C                   Z-ADD     *ZERO         WKK7DT                         Label Date
     C                   Z-ADD     *ZERO         WKPFNX                         PT Serial Numbe
     C                   Z-ADD     *ZERO         WKHGCD                         Item Code
     C                   Z-ADD     *ZERO         WKELDT                         Production Date
     C                   Z-ADD     *ZERO         WKN5WG                         Manifest Gross
     C                   Z-ADD     *ZERO         WKH5NY                         Manifest Total
     C                   Z-ADD     *ZERO         WKH6NY                         Manifest Co_Par
     C                   Z-ADD     *ZERO         WKH7NY                         Manifest Pallet
     C                   Z-ADD     *ZERO         WKN6WG                         HPB Meter Net G
     C                   Z-ADD     *ZERO         WKN7WG                         Manifest Net We
     C                   Z-ADD     *ZERO         WKRBDT                         Manifest Unused
     C                   Z-ADD     *ZERO         WKITNY                         HPB COA Batch N
     C                   Z-ADD     *ZERO         WKIVNY                         HPB Meter Start
     C                   Z-ADD     *ZERO         WKIUNY                         HPB Meter Endin
     C                   Z-ADD     *ZERO         WKIWNY                         HPB Meter Total
     C                   Z-ADD     *ZERO         WKIXNY                         HPB Meter Net W
     C                   Z-ADD     *ZERO         WKIYNY                         HPB Density Ref
     C                   Z-ADD     *ZERO         WKAATM                         Job Time
     C                   Z-ADD     *ZERO         WKAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WMHGCD                         Item Code
     C                   Z-ADD     *ZERO         WMDXNZ                         IDE Unused Nbr
     C                   Z-ADD     *ZERO         WMDYNZ                         IDE Manufacture
     C                   Z-ADD     *ZERO         WMMJDT                         Create Date
     C                   Z-ADD     *ZERO         WMBETM                         Create Time
     C                   Z-ADD     *ZERO         WMMKDT                         Change Date
     C                   Z-ADD     *ZERO         WMBFTM                         Change Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WSBKC7                         Ship To Custome
     C                   Z-ADD     *ZERO         WSHGCD                         Item Code
     C                   Z-ADD     *ZERO         WSMJDT                         Create Date
     C                   Z-ADD     *ZERO         WSBETM                         Create Time
     C                   Z-ADD     *ZERO         WSMKDT                         Change Date
     C                   Z-ADD     *ZERO         WSBFTM                         Change Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WTEWNZ                         ISLU ID Nbr
     C                   Z-ADD     *ZERO         WTHGCD                         Item Code
     C                   Z-ADD     *ZERO         WTEXNZ                         ISLU First Noti
     C                   Z-ADD     *ZERO         WTEYNZ                         ISLU Critical N
     C                   Z-ADD     *ZERO         WTEZNZ                         ISLU Goto DST W
     C                   Z-ADD     *ZERO         WTE0NZ                         ISLU Shelf Life
     C                   Z-ADD     *ZERO         WTE1NZ                         ISLU To Be Tank
     C                   Z-ADD     *ZERO         WTNVVL                         ISLU Last Year
     C                   Z-ADD     *ZERO         WTN3U1                         ISLU Fresh Code
     C                   Z-ADD     *ZERO         WTE2NZ                         ISLU Fresh Code
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WVH9NY                         EDI SURROGATE N
     C                   Z-ADD     *ZERO         WVQ2NY                         REF02-Ref ID-Lo
     C                   Z-ADD     *ZERO         WVC4NB                         Order Number
     C                   Z-ADD     *ZERO         WVDPNB                         Order Sequence
     C                   Z-ADD     *ZERO         WVQ7NY                         SN102 Quantity
     C                   Z-ADD     *ZERO         WVETNZ                         PO406 Net WT Pe
     C                   Z-ADD     *ZERO         WVQ8NY                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WVTCNY                         PO401-Pack
     C                   Z-ADD     *ZERO         WVEINZ                         SN105 Quantity
     C                   Z-ADD     *ZERO         WVHZPR                         SLN06 Unit Pric
     C                   Z-ADD     *ZERO         WVH0PR                         SLN06 Unit Pric
     C                   Z-ADD     *ZERO         WVTDNY                         PO402-Pack Size
     C                   Z-ADD     *ZERO         WVEJNZ                         DTM02-Expiratio
     C                   Z-ADD     *ZERO         WVEKNZ                         DTM02-Shelf Lif
     C                   Z-ADD     *ZERO         WVELNZ                         DTM02-Manuf Dat
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WWAIC3                         Company Number
     C                   Z-ADD     *ZERO         WWAATM                         Job Time
     C                   Z-ADD     *ZERO         WWAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WXAIC3                         Company Number
     C                   Z-ADD     *ZERO         WXHGCD                         Item Code
     C                   Z-ADD     *ZERO         WXAWPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WXAXPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WXAIWG                         Unit Weight
     C                   Z-ADD     *ZERO         WXCZWG                         Minimum Weight
     C                   Z-ADD     *ZERO         WXC0WG                         Maximum Weight
     C                   Z-ADD     *ZERO         WXURTN                         Number Cases On
     C                   Z-ADD     *ZERO         WXAJC8                         Vendor Item Def
     C                   Z-ADD     *ZERO         WXRINB                         Item Structure
     C                   Z-ADD     *ZERO         WXRHNB                         Item Structure
     C                   Z-ADD     *ZERO         WXRGNB                         Item Structure
     C                   Z-ADD     *ZERO         WXTFNB                         Transportation
     C                   Z-ADD     *ZERO         WXTMVA                         Maximum Audit V
     C                   Z-ADD     *ZERO         WXTNVA                         Minimum Audit V
     C                   Z-ADD     *ZERO         WXBLPR                         Market Overage
     C                   Z-ADD     *ZERO         WXBMPR                         Standard Overag
     C                   Z-ADD     *ZERO         WXCMCO                         Item Pricing Co
     C                   Z-ADD     *ZERO         WXCHTM                         Fresh Chilling
     C                   Z-ADD     *ZERO         WXSWGH                         Std Weight_Head
     C                   Z-ADD     *ZERO         WXPPHE                         Pieces Per Head
     C                   Z-ADD     *ZERO         WXICN1                         Item Category N
     C                   Z-ADD     *ZERO         WXICN2                         Item Category N
     C                   Z-ADD     *ZERO         WXV2NB                         Item Category N
     C                   Z-ADD     *ZERO         WXITCN                         Item Category N
     C                   Z-ADD     *ZERO         WXITC5                         Item Category N
     C                   Z-ADD     *ZERO         WXICN6                         Item Category N
     C                   Z-ADD     *ZERO         WXICN7                         Item Category N
     C                   Z-ADD     *ZERO         WXICN8                         Item Category N
     C                   Z-ADD     *ZERO         WXICN9                         Item Category N
     C                   Z-ADD     *ZERO         WXICN0                         Item Category N
     C                   Z-ADD     *ZERO         WXSFNB                         Pallet Tare Wei
     C                   Z-ADD     *ZERO         WXA3WG                         Misc Tare Weigh
     C                   Z-ADD     *ZERO         WXSJNB                         Production Lead
     C                   Z-ADD     *ZERO         WXSKNB                         Agrimetrics gro
     C                   Z-ADD     *ZERO         WXSLNB                         Agrimetrics pac
     C                   Z-ADD     *ZERO         WXSMNB                         Agrimetrics gra
     C                   Z-ADD     *ZERO         WXCFNB                         PM Pounds per H
     C                   Z-ADD     *ZERO         WXCGNB                         Item Frt Overag
     C                   Z-ADD     *ZERO         WXILNB                         Packages per ca
     C                   Z-ADD     *ZERO         WXCHNB                         Use_Freeze_Sell
     C                   Z-ADD     *ZERO         WXCINB                         PM Batch Size
     C                   Z-ADD     *ZERO         WXCJNB                         Package Level s
     C                   Z-ADD     *ZERO         WXCMNB                         Partial Item Co
     C                   Z-ADD     *ZERO         WXCNNB                         WIP Item Code
     C                   Z-ADD     *ZERO         WXCRNB                         WIP Reject Code
     C                   Z-ADD     *ZERO         WXCSNB                         Std Costing Uni
     C                   Z-ADD     *ZERO         WXCVNB                         FP Std Green We
     C                   Z-ADD     *ZERO         WXCWNB                         PM Std LBS Man
     C                   Z-ADD     *ZERO         WXCXNB                         PM Raw Meat LBS
     C                   Z-ADD     *ZERO         WXCZNB                         PM Formula LBS
     C                   Z-ADD     *ZERO         WXC0NB                         PM Finished LBS
     C                   Z-ADD     *ZERO         WXB4NB                         PM Raw Material
     C                   Z-ADD     *ZERO         WXB5NB                         PM Line Number
     C                   Z-ADD     *ZERO         WXBDNB                         Pieces Per Bag
     C                   Z-ADD     *ZERO         WXBJNB                         Bags Per Unit
     C                   Z-ADD     *ZERO         WXF5WG                         Item Target Pri
     C                   Z-ADD     *ZERO         WXF6WG                         Minimum Piece W
     C                   Z-ADD     *ZERO         WXF7WG                         Maximum Piece W
     C                   Z-ADD     *ZERO         WXBLNB                         Seaboard Equiva
     C                   Z-ADD     *ZERO         WXBNNB                         Production Qty
     C                   Z-ADD     *ZERO         WXAATM                         Job Time
     C                   Z-ADD     *ZERO         WXAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WYAIC3                         Company Number
     C                   Z-ADD     *ZERO         WYHGCD                         Item Code
     C                   Z-ADD     *ZERO         WYC9NB                         Component Item
     C                   Z-ADD     *ZERO         WYBOPR                         Sales Yield
     C                   Z-ADD     *ZERO         WYBPPR                         Production Yiel
     C                   Z-ADD     *ZERO         WYHGQT                         Packaging Quant
     C                   Z-ADD     *ZERO         WYCNSM                         Consume Priorit
     C                   Z-ADD     *ZERO         WYBMY1                         Consume Priorit
     C                   Z-ADD     *ZERO         WYBMY2                         BOM Pumped Perc
     C                   Z-ADD     *ZERO         WYIXQT                         BOM Meat Cost C
     C                   Z-ADD     *ZERO         WYIYQT                         BOM Off Line Yi
     C                   Z-ADD     *ZERO         WYAATM                         Job Time
     C                   Z-ADD     *ZERO         WYAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         TCH9NY                         EDI SURROGATE N
     C                   Z-ADD     *ZERO         TCQ2NY                         REF02-Ref ID-Lo
     C                   Z-ADD     *ZERO         TCC4NB                         Order Number
     C                   Z-ADD     *ZERO         TCD9NZ                         TD102 Case Quan
     C                   Z-ADD     *ZERO         TCEBNZ                         PAL05 Unit Weig
     C                   Z-ADD     *ZERO         TCEMNZ                         TD107 Weight-Ne
     C                   Z-ADD     *ZERO         TCENNZ                         TD107 Weight-Gr
     C                   Z-ADD     *ZERO         TCFKNZ                         Unit Count Tare
      * Define *Synon program work fields
     C                   Z-ADD     *ZEROS        W0WD02                         *Synon (17,7) w
     C                   Z-ADD     *ZEROS        W0WD01                         *Synon (17,7) w
     C                   Z-ADD     *ZEROS        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     *ZEROS        YRSW00                         *Synon (5,0) wo
     C                   Z-ADD     *ZEROS        YRSW01                         *Synon (5,0) wo
     C                   Z-ADD     *ZEROS        W0WD04                         *Synon (17,7) w
     C                   Z-ADD     *ZEROS        W0WD03                         *Synon (17,7) w
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     @CN(1)        @CN(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SCRVGN.
     C                   Z-ADD     *ZERO         WL0001
     C                   Z-ADD     *ZERO         WL0002
     C                   Z-ADD     *ZERO         WL0003
     C                   Z-ADD     *ZERO         WL0004
     C                   EVAL      WL0005 = ' '
     C                   EVAL      WL0006 = ' '
      * Define local variables for subroutine SDRVGN.
     C                   EVAL      WL0007 = ' '
     C                   EVAL      WL0008 = ' '
     C                   EVAL      WL0009 = ' '
     C                   EVAL      WL0010 = ' '
      * Define local variables for subroutine SFRVGN.
     C                   Z-ADD     *ZERO         WL0011
     C                   EVAL      WL0012 = ' '
     C                   EVAL      WL0013 = ' '
     C                   EVAL      WL0014 = ' '
     C                   EVAL      WL0015 = ' '
      * Define local variables for subroutine SIRVGN.
     C                   Z-ADD     *ZERO         WL0016
     C                   Z-ADD     *ZERO         WL0017
     C                   EVAL      WL0018 = ' '
      * Define local variables for subroutine SJRVGN.
     C                   EVAL      WL0019 = ' '
     C                   EVAL      WL0020 = ' '
     C                   EVAL      WL0021 = ' '
      * Define local variables for subroutine SKRVGN.
     C                   Z-ADD     *ZERO         WL0022
     C                   Z-ADD     *ZERO         WL0023
     C                   Z-ADD     *ZERO         WL0024
     C                   Z-ADD     *ZERO         WL0025
     C                   Z-ADD     *ZERO         WL0026
     C                   Z-ADD     *ZERO         WL0027
      * Define local variables for subroutine SLRVGN.
     C                   Z-ADD     *ZERO         WL0028
     C                   EVAL      WL0029 = ' '
     C                   Z-ADD     *ZERO         WL0030
     C                   Z-ADD     *ZERO         WL0031
      * Define local variables for subroutine SMCRRC.
     C                   Z-ADD     *ZERO         WL0032
     C                   Z-ADD     *ZERO         WL0033
     C                   EVAL      WL0034 = ' '
     C                   EVAL      WL0035 = ' '
     C                   Z-ADD     *ZERO         WL0036
     C                   EVAL      WL0037 = ' '
     C                   EVAL      WL0038 = ' '
     C                   EVAL      WL0039 = ' '
     C                   Z-ADD     *ZERO         WL0040
     C                   Z-ADD     *ZERO         WL0041
     C                   Z-ADD     *ZERO         WL0042
     C                   Z-ADD     *ZERO         WL0043
     C                   Z-ADD     *ZERO         WL0044
     C                   Z-ADD     *ZERO         WL0045
     C                   Z-ADD     *ZERO         WL0046
     C                   Z-ADD     *ZERO         WL0047
     C                   Z-ADD     *ZERO         WL0048
     C                   Z-ADD     *ZERO         WL0049
     C                   EVAL      WL0050 = ' '
     C                   Z-ADD     *ZERO         WL0051
      * Define local variables for subroutine SORVGN.
     C                   Z-ADD     *ZERO         WL0052
     C                   Z-ADD     *ZERO         WL0053
     C                   Z-ADD     *ZERO         WL0054
     C                   EVAL      WL0055 = ' '
     C                   EVAL      WL0056 = ' '
     C                   EVAL      WL0057 = ' '
     C                   EVAL      WL0058 = ' '
     C                   Z-ADD     *ZERO         WL0059
      * Define local variables for subroutine SPRVGN.
     C                   Z-ADD     *ZERO         WL0060
     C                   EVAL      WL0061 = ' '
      * Define local variables for subroutine SQRVGN.
     C                   Z-ADD     *ZERO         WL0062
     C                   Z-ADD     *ZERO         WL0063
     C                   Z-ADD     *ZERO         WL0064
     C                   Z-ADD     *ZERO         WL0065
      * Define local variables for subroutine SRRVGN.
     C                   EVAL      WL0066 = ' '
     C                   Z-ADD     *ZERO         WL0067
     C                   EVAL      WL0068 = ' '
     C                   EVAL      WL0069 = ' '
      * Define local variables for subroutine SSRVGN.
     C                   Z-ADD     *ZERO         WL0070
     C                   Z-ADD     *ZERO         WL0071
     C                   EVAL      WL0072 = ' '
     C                   EVAL      WL0073 = ' '
      * Define local variables for subroutine STRVGN.
     C                   EVAL      WL0074 = ' '
     C                   EVAL      WL0075 = ' '
     C                   EVAL      WL0076 = ' '
      * Define local variables for subroutine SURVGN.
     C                   Z-ADD     *ZERO         WL0077
     C                   Z-ADD     *ZERO         WL0078
      * Define local variables for subroutine SVCRRC.
     C                   Z-ADD     *ZERO         WL0079
     C                   Z-ADD     *ZERO         WL0080
     C                   EVAL      WL0081 = ' '
     C                   Z-ADD     *ZERO         WL0082
     C                   EVAL      WL0083 = ' '
     C                   Z-ADD     *ZERO         WL0084
     C                   Z-ADD     *ZERO         WL0085
     C                   EVAL      WL0086 = ' '
     C                   Z-ADD     *ZERO         WL0087
     C                   Z-ADD     *ZERO         WL0088
     C                   Z-ADD     *ZERO         WL0089
     C                   EVAL      WL0090 = ' '
     C                   EVAL      WL0091 = ' '
     C                   EVAL      WL0092 = ' '
     C                   EVAL      WL0093 = ' '
     C                   EVAL      WL0094 = ' '
     C                   EVAL      WL0095 = ' '
     C                   EVAL      WL0096 = ' '
     C                   EVAL      WL0097 = ' '
     C                   EVAL      WL0098 = ' '
     C                   EVAL      WL0099 = ' '
     C                   EVAL      WL0100 = ' '
     C                   EVAL      WL0101 = ' '
     C                   Z-ADD     *ZERO         WL0102
     C                   EVAL      WL0103 = ' '
     C                   Z-ADD     *ZERO         WL0104
     C                   EVAL      WL0105 = ' '
     C                   Z-ADD     *ZERO         WL0106
     C                   EVAL      WL0107 = ' '
     C                   EVAL      WL0108 = ' '
     C                   EVAL      WL0109 = ' '
     C                   EVAL      WL0110 = ' '
     C                   Z-ADD     *ZERO         WL0111
     C                   EVAL      WL0112 = ' '
     C                   EVAL      WL0113 = ' '
     C                   EVAL      WL0114 = ' '
     C                   EVAL      WL0115 = ' '
     C                   Z-ADD     *ZERO         WL0116
     C                   Z-ADD     *ZERO         WL0117
     C                   Z-ADD     *ZERO         WL0118
     C                   Z-ADD     *ZERO         WL0119
     C                   Z-ADD     *ZERO         WL0120
     C                   EVAL      WL0121 = ' '
     C                   EVAL      WL0122 = ' '
      * Define local variables for subroutine SWRVGN.
     C                   Z-ADD     *ZERO         WL0123
     C                   EVAL      WL0124 = ' '
      * Define local variables for subroutine SXRVGN.
     C                   Z-ADD     *ZERO         WL0125
     C                   Z-ADD     *ZERO         WL0126
     C                   EVAL      WL0127 = ' '
     C                   Z-ADD     *ZERO         WL0128
      * Define local variables for subroutine SYRVGN.
     C                   Z-ADD     *ZERO         WL0129
     C                   Z-ADD     *ZERO         WL0130
     C                   Z-ADD     *ZERO         WL0131
     C                   Z-ADD     *ZERO         WL0132
     C                   Z-ADD     *ZERO         WL0133
     C                   Z-ADD     *ZERO         WL0134
      * Define local variables for subroutine TARVGN.
     C                   Z-ADD     *ZERO         WL0135
     C                   Z-ADD     *ZERO         WL0136
     C                   Z-ADD     *ZERO         WL0137
      * Define local variables for subroutine TBRVGN.
     C                   Z-ADD     *ZERO         WL0138
     C                   EVAL      WL0139 = ' '
     C                   EVAL      WL0140 = ' '
      * Define local variables for subroutine TCRVGN.
     C                   Z-ADD     *ZERO         WL0141
     C                   Z-ADD     *ZERO         WL0142
     C                   Z-ADD     *ZERO         WL0143
     C                   EVAL      WL0144 = ' '
      * Define local variables for subroutine TDCRRC.
     C                   Z-ADD     *ZERO         WL0145
     C                   Z-ADD     *ZERO         WL0146
     C                   EVAL      WL0147 = ' '
     C                   Z-ADD     *ZERO         WL0148
     C                   EVAL      WL0149 = ' '
     C                   EVAL      WL0150 = ' '
     C                   EVAL      WL0151 = ' '
     C                   EVAL      WL0152 = ' '
     C                   EVAL      WL0153 = ' '
     C                   EVAL      WL0154 = ' '
     C                   Z-ADD     *ZERO         WL0155
     C                   Z-ADD     *ZERO         WL0156
     C                   Z-ADD     *ZERO         WL0157
     C                   Z-ADD     *ZERO         WL0158
     C                   EVAL      WL0159 = ' '
     C                   Z-ADD     *ZERO         WL0160
     C                   EVAL      WL0161 = ' '
     C                   Z-ADD     *ZERO         WL0162
     C                   Z-ADD     *ZERO         WL0163
     C                   EVAL      WL0164 = ' '
     C                   EVAL      WL0165 = ' '
      * Define local variables for subroutine TGCHRC.
     C                   Z-ADD     *ZERO         WL0166
     C                   Z-ADD     *ZERO         WL0167
     C                   EVAL      WL0168 = ' '
     C                   Z-ADD     *ZERO         WL0169
     C                   EVAL      WL0170 = ' '
     C                   Z-ADD     *ZERO         WL0171
     C                   Z-ADD     *ZERO         WL0172
     C                   EVAL      WL0173 = ' '
     C                   Z-ADD     *ZERO         WL0174
     C                   Z-ADD     *ZERO         WL0175
     C                   Z-ADD     *ZERO         WL0176
     C                   EVAL      WL0177 = ' '
     C                   EVAL      WL0178 = ' '
     C                   EVAL      WL0179 = ' '
     C                   EVAL      WL0180 = ' '
     C                   EVAL      WL0181 = ' '
     C                   EVAL      WL0182 = ' '
     C                   EVAL      WL0183 = ' '
     C                   EVAL      WL0184 = ' '
     C                   EVAL      WL0185 = ' '
     C                   EVAL      WL0186 = ' '
     C                   EVAL      WL0187 = ' '
     C                   EVAL      WL0188 = ' '
     C                   Z-ADD     *ZERO         WL0189
     C                   EVAL      WL0190 = ' '
     C                   Z-ADD     *ZERO         WL0191
     C                   EVAL      WL0192 = ' '
     C                   Z-ADD     *ZERO         WL0193
     C                   EVAL      WL0194 = ' '
     C                   EVAL      WL0195 = ' '
     C                   EVAL      WL0196 = ' '
     C                   EVAL      WL0197 = ' '
     C                   Z-ADD     *ZERO         WL0198
     C                   EVAL      WL0199 = ' '
     C                   EVAL      WL0200 = ' '
     C                   EVAL      WL0201 = ' '
     C                   EVAL      WL0202 = ' '
     C                   Z-ADD     *ZERO         WL0203
     C                   Z-ADD     *ZERO         WL0204
     C                   Z-ADD     *ZERO         WL0205
      * Define local work field USR Update Flag
     C                   EVAL      YL0001 = ' '
      * Define local work field EDI Tare Level Req f/856
     C                   EVAL      YL0002 = ' '
      * Define local work field EDI Trading Partner No
     C                   EVAL      YL0003 = ' '
      * Define null work field Country Code
     C                   EVAL      YN0001 = ' '
      * Define null work field Warehouse Code
     C                   EVAL      YN0002 = ' '
      * Define local work field Warehouse Code
     C                   EVAL      YL0004 = ' '
      * Define local work field Warehouse Location
     C                   EVAL      YL0005 = ' '
      * Define local work field WHS Live with Carlisle
     C                   EVAL      YL0006 = ' '
      * Define null work field WHS PFS Interface
     C                   EVAL      YN0003 = ' '
      * Define local work field OK to Process USR
     C                   EVAL      YL0007 = ' '
      * Define local work field EDI Detailed ASN 856 Rqd
     C                   EVAL      YL0008 = ' '
      * Define local work field Record Status
     C                   EVAL      YL0009 = ' '
      * Define local work field Send EDI Document Y/N
     C                   EVAL      YL0010 = ' '
      * Define null work field OHE EDI Error Reasons 2
     C                   EVAL      YN0004 = ' '
      * Define local work field OHE EDI 856 Action
     C                   EVAL      YL0011 = ' '
      * Define null work field OHE EDI 824 Action
     C                   EVAL      YN0005 = ' '
      * Define local work field Hold 856 f/Cust Asgn App#
     C                   EVAL      YL0012 = ' '
      * Define local work field Hold 856 f/Carr PRO
     C                   EVAL      YL0013 = ' '
      * Define local work field Customer Purchase Order #
     C                   EVAL      YL0014 = ' '
      * Define local work field Order Number Alpha
     C                   EVAL      YL0015 = ' '
      * Define local work field TD101-Packaging Code
     C                   EVAL      YL0016 = ' '
      * Define local work field Order Date USR
     C                   Z-ADD     *ZERO         YL0017
      * Define local work field Requested Delivery DteUSR
     C                   Z-ADD     *ZERO         YL0018
      * Define local work field OHE Customer Vendor f_PO
     C                   EVAL      YL0019 = ' '
      * Define local work field Invoice Number
     C                   Z-ADD     *ZERO         YL0020
      * Define local work field Total Quantity Ship  USR
     C                   Z-ADD     *ZERO         YL0021
      * Define local work field Total Weight Ship    USR
     C                   Z-ADD     *ZERO         YL0022
      * Define local work field Total Gross Weight USR
     C                   Z-ADD     *ZERO         YL0023
      * Define local work field Total Unit Count Hdr U
     C                   Z-ADD     *ZERO         YL0024
      * Define local work field First Time Flag
     C                   EVAL      YL0025 = ' '
      * Define local work field USR Weight Accumulated
     C                   Z-ADD     *ZERO         YL0026
      * Define local work field Order Quantity
     C                   Z-ADD     *ZERO         YL0027
      * Define local work field Piece Count Item
     C                   EVAL      YL0028 = ' '
      * Define local work field Pieces Per Bag
     C                   Z-ADD     *ZERO         YL0029
      * Define local work field Bags Per Unit
     C                   Z-ADD     *ZERO         YL0030
      * Define local work field Total Pallet Count Hdr U
     C                   Z-ADD     *ZERO         YL0031
      * Define local work field First Time Flag
     C                   EVAL      YL0032 = ' '
      * Define local work field First Time Through USR
     C                   EVAL      YL0033 = ' '
      * Define local work field Record Processed Usr
     C                   EVAL      YL0034 = ' '
      * Define local work field Pallet ID = 0 Exist USR
     C                   EVAL      YL0035 = ' '
      * Define local work field Single Item Pallet Flag
     C                   EVAL      YL0036 = ' '
      * Define local work field Manifest Pallet Number
     C                   Z-ADD     *ZERO         YL0037
      * Define local work field Order Sequence Number
     C                   Z-ADD     *ZERO         YL0038
      * Define local work field Item Code
     C                   Z-ADD     *ZERO         YL0039
      * Define local work field 1st Item Code f/Pallet U
     C                   Z-ADD     *ZERO         YL0040
      * Define local work field Manifest Pallet# Txt
     C                   EVAL      YL0041 = ' '
      * Define local work field SN105 Quantity Ordered
     C                   Z-ADD     *ZERO         YL0042
      * Define local work field Product ID Manuf Item
     C                   EVAL      YL0043 = ' '
      * Define local work field Warehouse Code
     C                   EVAL      YL0044 = ' '
      * Define local work field U_M_Base Price
     C                   EVAL      YL0045 = ' '
      * Define local work field U_M_Ordered
     C                   EVAL      YL0046 = ' '
      * Define local work field Order Desc_Line One
     C                   EVAL      YL0047 = ' '
      * Define local work field Unit Price
     C                   Z-ADD     *ZERO         YL0048
      * Define local work field SN103 Shipped UOM
     C                   EVAL      YL0049 = ' '
      * Define local work field IDE GTIN
     C                   EVAL      YL0050 = ' '
      * Define local work field Piece Count Item
     C                   EVAL      YL0051 = ' '
      * Define local work field Pieces Per Bag
     C                   Z-ADD     *ZERO         YL0052
      * Define local work field Bags Per Unit
     C                   Z-ADD     *ZERO         YL0053
      * Define local work field PO402-Pack Size
     C                   Z-ADD     *ZERO         YL0054
      * Define local work field Production Date
     C                   Z-ADD     *ZERO         YL0055
      * Define local work field Production Date USR D8#
     C                   Z-ADD     *ZERO         YL0056
      * Define local work field SLN12 Prod ID LT
     C                   EVAL      YL0057 = ' '
      * Define local work field Date Out (6,0) USR
     C                   Z-ADD     *ZERO         YL0058
      * Define local work field REF02-Batch Lot
     C                   EVAL      YL0059 = ' '
      * Define local work field Product ID UPC
     C                   EVAL      YL0060 = ' '
      * Define local work field CIR Resource No
     C                   EVAL      YL0061 = ' '
      * Define local work field CIR Resource No Type
     C                   EVAL      YL0062 = ' '
      * Define local work field State Code
     C                   EVAL      YL0063 = ' '
      * Define local work field Warehouse Type
     C                   EVAL      YL0064 = ' '
      * Define local work field Shelf Life Date USR
     C                   Z-ADD     *ZERO         YL0065
      * Define local work field ISLU First Notice
     C                   Z-ADD     *ZERO         YL0066
      * Define local work field Shelf Life Date D8# USR
     C                   Z-ADD     *ZERO         YL0067
      * Define local work field DTM02-Shelf Life Date
     C                   Z-ADD     *ZERO         YL0068
      * Define local work field LIN/UP UPC Consumer Pckge
     C                   EVAL      YL0069 = ' '
      * Define local work field GTin 12 Lin02
     C                   EVAL      YL0070 = ' '
      * Define local work field W0407 Pallet Number
     C                   Z-ADD     *ZERO         YL0071
      * Define local work field Federal Tax Id
     C                   EVAL      YL0072 = ' '
      * Define local work field Text 7 Alpha Usr
     C                   EVAL      YL0073 = ' '
      * Define local work field Federal Tax ID 8 Byte
     C                   EVAL      YL0074 = ' '
      * Define local work field Position 1 Text USR
     C                   EVAL      YL0075 = ' '
      * Define local work field Position 2 Text USR
     C                   EVAL      YL0076 = ' '
      * Define local work field Position 3 Text USR
     C                   EVAL      YL0077 = ' '
      * Define local work field Position 4 Text USR
     C                   EVAL      YL0078 = ' '
      * Define local work field Position 5 Text USR
     C                   EVAL      YL0079 = ' '
      * Define local work field Position 6 Text USR
     C                   EVAL      YL0080 = ' '
      * Define local work field Position 7 Text USR
     C                   EVAL      YL0081 = ' '
      * Define local work field Position 8 Text USR
     C                   EVAL      YL0082 = ' '
      * Define local work field Federal Tax ID-Pos1 Nbr
     C                   Z-ADD     *ZERO         YL0083
      * Define local work field Federal Tax ID-Pos2 Nbr
     C                   Z-ADD     *ZERO         YL0084
      * Define local work field Federal Tax ID-Pos3 Nbr
     C                   Z-ADD     *ZERO         YL0085
      * Define local work field Federal Tax ID-Pos4 Nbr
     C                   Z-ADD     *ZERO         YL0086
      * Define local work field Federal Tax ID-Pos5 Nbr
     C                   Z-ADD     *ZERO         YL0087
      * Define local work field Federal Tax ID-Pos6 Nbr
     C                   Z-ADD     *ZERO         YL0088
      * Define local work field Federal Tax ID-Pos7 Nbr
     C                   Z-ADD     *ZERO         YL0089
      * Define local work field Federal Tax ID-Pos8 Nbr
     C                   Z-ADD     *ZERO         YL0090
      * Define local work field Manifest Pallet# Txt
     C                   EVAL      YL0091 = ' '
      * Define local work field Position 9 Text USR
     C                   EVAL      YL0092 = ' '
      * Define local work field Manifest Pallet#-Pos1 Nbr
     C                   Z-ADD     *ZERO         YL0093
      * Define local work field Manifest Pallet#-Pos2 Nbr
     C                   Z-ADD     *ZERO         YL0094
      * Define local work field Manifest Pallet#-Pos3 Nbr
     C                   Z-ADD     *ZERO         YL0095
      * Define local work field Manifest Pallet#-Pos4 Nbr
     C                   Z-ADD     *ZERO         YL0096
      * Define local work field Manifest Pallet#-Pos5 Nbr
     C                   Z-ADD     *ZERO         YL0097
      * Define local work field Manifest Pallet#-Pos6 Nbr
     C                   Z-ADD     *ZERO         YL0098
      * Define local work field Manifest Pallet#-Pos7 Nbr
     C                   Z-ADD     *ZERO         YL0099
      * Define local work field Manifest Pallet#-Pos8 Nbr
     C                   Z-ADD     *ZERO         YL0100
      * Define local work field Manifest Pallet#-Pos9 Nbr
     C                   Z-ADD     *ZERO         YL0101
      * Define local work field Calc Value USR
     C                   Z-ADD     *ZERO         YL0102
      * Define local work field Calc Value Last Digit USR
     C                   Z-ADD     *ZERO         YL0103
      * Define local work field Calc Check Digit# USR
     C                   Z-ADD     *ZERO         YL0104
      * Define local work field Calc Check Digit# Txt USR
     C                   EVAL      YL0105 = ' '
      * Define local work field W0407 Pallet Number Txt U
     C                   EVAL      YL0106 = ' '
      * Define null work field Description Line One
     C                   EVAL      YN0006 = ' '
      * Define local work field Misc Tare Weight
     C                   Z-ADD     *ZERO         YL0107
      * Define local work field Box Weight
     C                   Z-ADD     *ZERO         YL0108
      * Define null work field Number Cases On A Pallet
     C                   Z-ADD     *ZERO         YN0007
      * Define null work field Pallet Tare Weight
     C                   Z-ADD     *ZERO         YN0008
      * Define null work field Box iD
     C                   Z-ADD     *ZERO         YN0009
      * Define local work field PAL05 Unit Weight
     C                   Z-ADD     *ZERO         YL0109
      * Define local work field Component Item Code
     C                   Z-ADD     *ZERO         YL0110
      * Define local work field IDE Pallet Tiers
     C                   EVAL      YL0111 = ' '
      * Define local work field IDE Pallet Blocks
     C                   EVAL      YL0112 = ' '
      * Define local work field OD Pallet Type
     C                   EVAL      YL0113 = ' '
      * Define local work field PKG04 Packaging Desc Code
     C                   EVAL      YL0114 = ' '
      * Define local work field W0407 Pallet Number
     C                   Z-ADD     *ZERO         YL0115
      * Define local work field Product ID Manuf Item
     C                   EVAL      YL0116 = ' '
      * Define local work field SN105 Quantity Ordered
     C                   Z-ADD     *ZERO         YL0117
      * Define local work field Qty Difference USR
     C                   Z-ADD     *ZERO         YL0118
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0736490
00002 99000000000000000001
