/***************************************************************** */
/*                                                                 */
/*  SYSTEM:          TRIUMPH FOODS                                 */
/*  PROGRAM NUMBER:  TF440CL                                       */
/*  PROGRAM NAME:    WEEKLY BASE MARKETING CLOSE                   */
/*  PROGRAMMER:      LEANNE FEDOR                                  */
/*  CREATE DATE:     03/24/05                                      */
/*                                                                 */
/*  FUNCTION:        WEEKLY BASE MARKETING CLOSE                   */
/*                                                                 */
/*******************************************************************/
/* MODIFIED:                                                       */
/*                                                                 */
/* 05/21/07  LEANNE RAMSEY                                         */
/*           ADDED A NEW DATA AREA (DATSTPRD) TO CONTROL E-MAILS.  */
/*                                                                 */
/* 05/06/09  LeAnne Ramsey                                         */
/*           Changed print logic to match Meat Costing.            */
/*                                                                 */
/*  3/05/21  Brad Baden  H16853 - Increase Buy Order Number to 7.0 */
/*           When user group profile is 'SBDPGMR', place library   */
/*           TPMTESTF at the top of the library list.  Otherwise,  */
/*           place library PRKFTFP at the top of the library list. */
/*******************************************************************/

             PGM

             DCL        VAR(&QDATA) TYPE(*CHAR) LEN(65)

             DCL        VAR(&ERROR) TYPE(*CHAR) LEN(1)
             DCL        VAR(&EMAIL) TYPE(*CHAR) LEN(38)

             DCL        VAR(&OUTQ) TYPE(*CHAR) LEN(10)
             DCL        VAR(&HOLD) TYPE(*CHAR) LEN(4)
             DCL        VAR(&SAVE) TYPE(*CHAR) LEN(4)
             DCL        VAR(&COPY) TYPE(*DEC)  LEN(1)

             DCL        VAR(&LDPFCD)     TYPE(*CHAR) LEN(1)
             DCL        VAR(&LDWEDT)     TYPE(*DEC) LEN(8)
             DCL        VAR(&LDSYNWBDT)  TYPE(*DEC) LEN(7)
             DCL        VAR(&LDSYNWEDT)  TYPE(*DEC) LEN(7)
             DCL        VAR(&TSTPRDFL) TYPE(*CHAR) LEN(1)
             DCL        VAR(&GRPPRFL)    TYPE(*CHAR) LEN(10)

             CHGVAR     VAR(&ERROR)     VALUE('N')
             CHGVAR     VAR(&LDWEDT)    VALUE(%SST(*LDA 22 8))
             CHGVAR     VAR(&LDSYNWBDT) VALUE(%SST(*LDA 15 7))
             CHGVAR     VAR(&LDSYNWEDT) VALUE(%SST(*LDA 30 7))
             CHGVAR     VAR(&LDPFCD)    VALUE(%SST(*LDA 37 1))

/*----------------------------------------------------------------*/
/* For sending Emails:                                            */
/* Retrieve Data Area that lets us know whether we are in Test    */
/* or Production (Always default to the "TEST" Distribution List.)*/
/*----------------------------------------------------------------*/

             CHGVAR     VAR(&EMAIL) VALUE('TF Test')
             RTVDTAARA  DTAARA(DATSTPRD (1 1)) RTNVAR(&TSTPRDFL)

/*----------------------------------------------------------------*/
/* SET PARAMETERS FROM LDA FOR LISTINGS                           */
/*----------------------------------------------------------------*/

 OUTQ:       CHGVAR     VAR(&OUTQ) VALUE(%SST(*LDA 401 10))
             IF         COND(&OUTQ = '          ') THEN(CHGVAR +
                          VAR(&OUTQ) VALUE(*JOB))

 HOLD:       CHGVAR     VAR(&HOLD) VALUE(%SST(*LDA 411 4))
             IF         COND(&HOLD *NE '*YES' *AND &HOLD *NE '*NO ') +
                          THEN(CHGVAR VAR(&HOLD) VALUE(*NO))

 SAVE:       CHGVAR     VAR(&SAVE) VALUE(%SST(*LDA 415 4))
             IF         COND(&SAVE *NE '*YES' *AND &SAVE *NE '*NO ') +
                          THEN(CHGVAR VAR(&SAVE) VALUE(*NO))

 COPY:       CHGVAR     VAR(&COPY) VALUE(%SST(*LDA 419 1))
             IF         COND(&COPY = 0) THEN(CHGVAR VAR(&COPY) +
                          VALUE(1))


/*----------------------------------------------------------------*/
/* ALWAYS DELETE ANY/ALL EXISTING WEEKLY RECORDS FOR THE WEEK     */
/*----------------------------------------------------------------*/

             CALL       PGM(TF240)

/*----------------------------------------------------------------------*/
/* RUN THE EDIT PROGRAM WITH ERROR LISTING OVER THE TATTOO HEADER FILE  */
/*----------------------------------------------------------------------*/

             PSHLIBL35

/* Retrieve the user's group profile to determine if test or production */
             RTVUSRPRF  GRPPRF(&GRPPRFL)

/* WE WANT TO USE THE TF TATTOO HEADER FROM THE TF PRODUCTION LIBRARY.  */
/* SO, PUT THE TF PRODUCTION LIBRARY AT THE TOP OF THE LIBRARY LIST.    */
/* However, if user's group profile is 'SBDPGMR', then place the test   */
/* TF Tattoo Header file at the top of the library list.                */

             IF         COND(&GRPPRFL = 'SBDPGMR ') THEN(DO)
             ADDLIBLE   LIB(PRKFTSTTFP)
             MONMSG     MSGID(CPF0000)
             ENDDO

             ELSE       CMD(DO)
             ADDLIBLE   LIB(PRKFTFP)
             MONMSG     MSGID(CPF0000)
             ENDDO

/* Kill Date */
             CHGVAR     VAR(&QDATA) VALUE(' ')
             CHGVAR     VAR(%SST(&QDATA 1 10)) VALUE('A1B0DT *GE')
             CHGVAR     VAR(%SST(&QDATA 12 7)) VALUE(&LDSYNWBDT)
             CHGVAR     VAR(%SST(&QDATA 20 15)) VALUE('*AND A1B0DT +
                          *LE')
             CHGVAR     VAR(%SST(&QDATA 36 7)) VALUE(&LDSYNWEDT)

/* Company   */
             CHGVAR     VAR(%SST(&QDATA 44 19)) VALUE('*AND A1HMNB +
                          *EQ 960')

             OVRDBF     FILE(PKA1CPLA) SHARE(*YES)
             OPNQRYF    FILE((PKA1CPLA)) QRYSLT(&QDATA) KEYFLD(*FILE)  +
                          SEQONLY(*YES)

             OVRPRTF    FILE(PRINT80) OUTQ(&OUTQ) COPIES(&COPY) +
                          HOLD(&HOLD) SAVE(&SAVE)

             CALL       PGM(TF236) PARM(&ERROR &LDPFCD)
             DLTOVR     FILE(PRINT80)

/*--------------------------------------------------------------------------*/
/* IF THERE ARE NO ERRORS:                                                  */
/*       BUILD BASE MARKETING FEES TRANSACTION FILE                         */
/*       PRINT A LISTING OVER THE TRANSACTION FILE                          */
/*    IF IT IS A FINAL:                                                    */
/*       BUILD THE INVOICE CHARGES FILE                                     */
/*--------------------------------------------------------------------------*/

             IF         COND(&ERROR *EQ 'N') THEN(DO)        /* No Error Do */

/* Build Weekly Transaction                                                 */

             CALL       PGM(TF237)
             CLOF       OPNID(PKA1CPLA)


/* Print Listing of the Weekly Transactions                                 */

             OVRPRTF    FILE(PRINT132) OUTQ(&OUTQ) COPIES(&COPY) +
                          HOLD(&HOLD) SAVE(&SAVE)

             CHGVAR     VAR(&QDATA) VALUE(' ')
             CHGVAR     VAR(%SST(&QDATA 1 10)) VALUE('BTWEDT *EQ')
             CHGVAR     VAR(%SST(&QDATA 12 8)) VALUE(&LDWEDT)

             OVRDBF     FILE(TFL016A) SHARE(*YES)
             OPNQRYF    FILE((TFL016A)) QRYSLT(&QDATA) KEYFLD(*FILE)  +
                          SEQONLY(*YES)

             CALL       PGM(TF641)
             CLOF       OPNID(TFL016A)

/* If Final, e-mail the report                                              */

             IF         COND(&LDPFCD *EQ 'F') THEN(DO)            /* If Final */

             IF         COND(&TSTPRDFL *EQ 'P') THEN(CHGVAR +
                          VAR(&EMAIL) VALUE('TF Base Marketing Fee'))

             ESNDMAIL   RECIPIENT(&EMAIL) SUBJECT('Weekly Base +
                          Marketing Report') MSG('Distribution +
                          List: TF Base Marketing Fee') ATTLIST((* +
                          *PDF *N PRINT132 *))
             MONMSG     MSGID(CPF0000)
             ENDDO                                                /* If Final */

             DLTOVR     FILE(*ALL)


/* If Final, create Invoice Charge records                                  */

             IF         COND(&LDPFCD *EQ 'F') THEN(DO)
             CALL       PGM(TF238)
             ENDDO

             ENDDO                                           /* No Error Do */


/* REMOVE THE TF PRODUCTION LIBRARY.                                    */

/*           RMVLIBLE   LIB(PRKFTFP)                                 */
             POPLIBL35
             MONMSG     MSGID(CPF0000)

/*-------------------------------------------------------------------*/
/* ALWAYS UPDATE THE FUNCTION CONTROL FILE                           */
/*-------------------------------------------------------------------*/

             CALL       PGM(TF239) PARM(&ERROR &LDPFCD)

             DLTOVR     FILE(*ALL)

             ENDPGM

