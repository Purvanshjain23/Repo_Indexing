// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLGMETR
// ?Date: 14.08.2025 Time: 02:54:13
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?R10369 08/28/17 JJH - Producer Site Mileage Sync 960 with 440
//?- Change logic to always update the Producer Site Mileage
//?R10369 JJH 07/07/17 - Producer Site Mileage Sync 960 with 440
//?- Corrected program to allow it to add Producer Site Mileage
//?R10369 JJH 07/07/17 - Producer Site Mileage Sync 960 with 440
//?- Modify program to only copy Producer Site Mileage from TF to STF
//?  if PSM Company = 961
//?- In ST, set Company to 440
//?R10369 JJH 07/04/17 - Producer Site Mileage Sync 960 with 440
//?- Crt Producer Site MileIF - Producer Site
//?- Chg Producer Site N/mlIF - Producer Site
//?  - Same logic added to the CRTOBJ and CHGOBJ of Producer Site
//?    Mileage
//?  - The Producer From field in the Producer Location From/To file
//?    is a Producer in the PRKFTFP library that has a Source of
//?    TO = Triumph Foods Only.
//?  - Any create or change for a Producer in the Producer From
//?    field in the Producer Location From/To file will CPYF/Replace
//?    the same record in the PRKFSTF library.
//?  - If Producer is in the Producer From field in the Producer
//?    From/To file get the Company Values for 960/PRDSTFMLIB and
//?    960/PRDSTTOLIB
//?R10369 JJH 05/22/17 - Producer Site Sync 960 with 440
//?- Crt Producer Site     IF - Producer Site
//?- Chg Producer Site N/mlIF - Producer Site
//?  - Same logic added to the CRTOBJ and CHGOBJ of Producer Site
//?  - The Producer From field in the Producer Location From/To file
//?    is a Producer in the PRKFTFP library that has a Source of
//?    TO = Triumph Foods Only.
//?  - Any create or change for a Producer in the Producer From
//?    field in the Producer Location From/To file will CPYF/Replace
//?    the same record in the PRKFSTF library.
//?  - If Producer is in the Producer From field in the Producer
//?    From/To file get the Company Values for 960/PRDSTFMLIB and
//?    960/PRDSTTOLIB
//?R7522 JJH 02/17/17 - Producer Site Mileage
//?- Set the Producer Site Mileage Record Status to the same value
//?  as the Producer Site Record Status.
//?E5389 JJH 03/07/16 - PS Premises ID.
//?- Upon entry or modification of Premises ID, convert all letters
//?  to uppercase.
//?E3814 JJH 10/05/15 - PS Premises ID.
//?- New optional field, to maintain the Premises Identification
//?  Number. 7-Character.
ENDDO;

// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


//?USER: Initialize screen for new transaction

// CTL.RS Record Status = CND.Active
CTL.RS_Record_Status = 'A';

//?USER: Validate header key fields

//?E5389 JJH 03/07/16 - PS Premises ID converted to all uppercase.
// Call program CVT to Upper w/SpclChrXF.
CALL PROGRAM(CVT to Upper w/SpclChrXF) ('PLYOXFR');
PARAMETER(CTL.PS_Premises_ID);
PARAMETER(LCL.PS_Premises_ID);

// CTL.PS Premises ID = LCL.PS Premises ID
CTL.PS_Premises_ID = LCL.PS_Premises_ID;

//?USER: Load existing header

// CTL.Record Status Desc Usr = Condition name of CTL.RS Record Status
CTL.Record_Status_Desc_Usr = RTVCND(CTL.RS_Record_Status);

//?USER: Validate header non-key fields

// Call program Rtv State Description UP.
CALL PROGRAM(Rtv State Description UP) ('STATERET');
PARAMETER(LCL.Return_Code_USR);
PARAMETER(CTL.PS_State);
PARAMETER(LCL.State_Desc_30_USR);

CASE;

// IF LCL.Return Code USR is *Normal
IF LCL.Return_Code_USR = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'State Code is Invalid'
ERROR(PRK0308);
MSGPARM(CTL.PS_State);

ENDIF;

//?USER: Validate header non-key relations

//?E5389 JJH 03/07/16 - PS Premises ID converted to all uppercase.
// Call program CVT to Upper w/SpclChrXF.
CALL PROGRAM(CVT to Upper w/SpclChrXF) ('PLYOXFR');
PARAMETER(CTL.PS_Premises_ID);
PARAMETER(LCL.PS_Premises_ID);

// CTL.PS Premises ID = LCL.PS Premises ID
CTL.PS_Premises_ID = LCL.PS_Premises_ID;

//?USER: Validate subfile record relations

// Call program Val Company Number    XF.
CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
PARAMETER(RCD.PSM_Company_Number);
PARAMETER(LCL.Oms_Name);
PARAMETER(LCL.Invalid_Y_N_USR);

CASE;

// IF LCL.Invalid Y/N USR is Yes
IF LCL.Invalid_Y_N_USR = 'Y';

// Send error message - 'Invalid Company Number'
ERROR(PRK0299);
MSGPARM(RCD.PSM_Company_Number);

ENDIF;

//?CALC: Header function fields

EXECUTE FUNCTION(Producer Name         DRV) TYPE(DRVFLD)                        AB1100361;
PARAMETER(CTL.Producer_Name_DRV);
PARAMETER(CTL.PD_Producer_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Producer Name     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1101542;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.Producer_Name_DRV);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Create header DBF record

EXECUTE FUNCTION(Crt Producer Site     IF) TYPE(EXCINTFUN) FILE(PLATREP)        AB1273122;
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PS_Site_ID);
PARAMETER(CTL.PS_Site_Name);
PARAMETER(CTL.PS_Manager);
PARAMETER(CTL.PS_Address);
PARAMETER(CTL.PS_City);
PARAMETER(CTL.PS_State);
PARAMETER(CTL.PS_Zip_Code);
PARAMETER(CTL.PS_Latitude);
PARAMETER(CTL.PS_Longitude);
PARAMETER(CTL.PS_User_Mileage_1);
PARAMETER(CTL.PS_User_Mileage_2);
PARAMETER(CTL.PS_Facility_Type_County);
PARAMETER(CTL.PS_Status_1);
PARAMETER(CTL.PS_Status_2);
PARAMETER(CTL.PS_Status_3);
PARAMETER(CTL.PS_Trace_Sequence_#);
PARAMETER(CTL.PS_Veterinarian);
PARAMETER(CTL.PS_Nutritionist);
PARAMETER(CTL.PS_Premises_ID);
PARAMETER('C');
{
 //?Execute internal function

 //?R10369 JJH 05/22/17 - Producer Site Sync 960 with 440
 EXECUTE FUNCTION(Rtv Producer To-1stRcdRT) TYPE(RTVOBJ) FILE(PWADCPP)           AB1334739;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(LCL.Producer_To);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 CASE;

 // IF LCL.Producer To is Blank
 IF LCL.Producer_To = *BLANK;

 //?Producer is not in the Producer Location From/To file.
 // LCL.Copy Producer Site to STP = CND.No
 LCL.Copy_Producer_Site_to_STP = 'N';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(960);
 PARAMETER('PRDSTFMLIB');
 PARAMETER(LCL.Producer_Site_From_Lib);

 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(960);
 PARAMETER('PRDSTTOLIB');
 PARAMETER(LCL.Producer_Site_To_Lib);

 CASE;

 // IF LCL.Producer Site From Lib is Blank
 IF LCL.Producer_Site_From_Lib = *BLANK;

 // OR LCL.Producer Site To Lib is Blank
 OR LCL.Producer_Site_To_Lib = *BLANK;

 // Send error message - 'Contact IT, Producer Site From/To libraries are not set up.'
 ERROR(PRK1435);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Copy Producer Site to STP = CND.Yes
 LCL.Copy_Producer_Site_to_STP = 'Y';

 ENDIF;

 ENDIF;

 // LCL.PS Trace Sequence # = CON.999999
 LCL.PS_Trace_Sequence_# = 999999;

 EXECUTE FUNCTION(Rtv Last Seq#         RT) TYPE(RTVOBJ) FILE(PLATREP)           AB1273118;
 PARAMETER(LCL.PS_Trace_Sequence_#);
 {
  //?USER: Processing if Data record not found

  //?The trace sequence number will start at 900000
  // PAR.PS Trace Sequence # = CON.900000
  PAR.PS_Trace_Sequence_# = 900000;

  //?USER: Process Data record

  // PAR.PS Trace Sequence # = DB1.PS Trace Sequence # + CON.1
  PAR.PS_Trace_Sequence_# = DB1.PS_Trace_Sequence_# + 1;

  QUIT;

 }

 //?E3814 JJH 10/05/15 - Add PS Premises ID
 EXECUTE FUNCTION(Crt Producer Site     CR) TYPE(CRTOBJ) FILE(PLATREP)           AB1267655;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PS_Site_ID);
 PARAMETER(PAR.PS_Site_Name);
 PARAMETER(PAR.PS_Manager);
 PARAMETER(PAR.PS_Address);
 PARAMETER(PAR.PS_City);
 PARAMETER(PAR.PS_State);
 PARAMETER(PAR.PS_Zip_Code);
 PARAMETER(PAR.PS_Latitude);
 PARAMETER(PAR.PS_Longitude);
 PARAMETER(PAR.PS_User_Mileage_1);
 PARAMETER(PAR.PS_User_Mileage_2);
 PARAMETER(PAR.PS_Facility_Type_County);
 PARAMETER(PAR.PS_Status_1);
 PARAMETER(PAR.PS_Status_2);
 PARAMETER(PAR.PS_Status_3);
 PARAMETER(LCL.PS_Trace_Sequence_#);
 PARAMETER(PAR.PS_Veterinarian);
 PARAMETER(PAR.PS_Nutritionist);
 PARAMETER(PAR.PS_Premises_ID);
 PARAMETER('A');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // Call program Rtv System Date & Tim UP.
   CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
   PARAMETER(PAR.RS_Date_Added);
   PARAMETER(PAR.RS_Time_Added);

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 //?R10369 JJH 05/22/17 - Producer Site Sync 960 with 440
 CASE;

 // IF LCL.Copy Producer Site to STP is Yes
 IF LCL.Copy_Producer_Site_to_STP = 'Y';

 // Call program Cpy PrdcrSite FmToLib CL.
 CALL PROGRAM(Cpy PrdcrSite FmToLib CL) ('PWB9UPC');
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PS_Site_ID);
 PARAMETER(LCL.Producer_Site_From_Lib);
 PARAMETER(LCL.Producer_Site_To_Lib);

 CASE;

 // IF NOT PAR.Action Type is Copy
 IF ! PAR.Action_Type = 'Y';

 // Send completion message - 'Producer Site &1 updated into Company 440 (Sioux City, IA).'
 MESSAGE(PRK1436 *COMPLETION);
 MSGPARM(PAR.PS_Site_ID);

 ENDIF;

 ENDIF;

}


//?USER: Change header DBF record

EXECUTE FUNCTION(Chg Producer Site N/mlIF) TYPE(EXCINTFUN) FILE(PLATREP)        AB1334857;
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PS_Site_ID);
PARAMETER(CTL.PS_Site_Name);
PARAMETER(CTL.PS_Manager);
PARAMETER(CTL.PS_Address);
PARAMETER(CTL.PS_City);
PARAMETER(CTL.PS_State);
PARAMETER(CTL.PS_Zip_Code);
PARAMETER(CTL.PS_Latitude);
PARAMETER(CTL.PS_Longitude);
PARAMETER(CTL.PS_User_Mileage_1);
PARAMETER(CTL.PS_User_Mileage_2);
PARAMETER(CTL.PS_Facility_Type_County);
PARAMETER(CTL.PS_Status_1);
PARAMETER(CTL.PS_Status_2);
PARAMETER(CTL.PS_Status_3);
PARAMETER(CTL.PS_Trace_Sequence_#);
PARAMETER(CTL.PS_Veterinarian);
PARAMETER(CTL.PS_Nutritionist);
PARAMETER(CTL.PS_Premises_ID);
PARAMETER(CTL.RS_Record_Status);
{
 //?Execute internal function

 //?R10369 JJH 05/22/17 - Producer Site Sync 960 with 440
 EXECUTE FUNCTION(Rtv Producer To-1stRcdRT) TYPE(RTVOBJ) FILE(PWADCPP)           AB1334739;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(LCL.Producer_To);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 CASE;

 // IF LCL.Producer To is Blank
 IF LCL.Producer_To = *BLANK;

 //?Producer is not in the Producer Location From/To file.
 // LCL.Copy Producer Site to STP = CND.No
 LCL.Copy_Producer_Site_to_STP = 'N';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(960);
 PARAMETER('PRDSTFMLIB');
 PARAMETER(LCL.Producer_Site_From_Lib);

 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(960);
 PARAMETER('PRDSTTOLIB');
 PARAMETER(LCL.Producer_Site_To_Lib);

 CASE;

 // IF LCL.Producer Site From Lib is Blank
 IF LCL.Producer_Site_From_Lib = *BLANK;

 // OR LCL.Producer Site To Lib is Blank
 OR LCL.Producer_Site_To_Lib = *BLANK;

 // Send error message - 'Contact IT, Producer Site From/To libraries are not set up.'
 ERROR(PRK1435);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Copy Producer Site to STP = CND.Yes
 LCL.Copy_Producer_Site_to_STP = 'Y';

 ENDIF;

 ENDIF;

 EXECUTE FUNCTION(Chg Producer Site N/mlCH) TYPE(CHGOBJ) FILE(PLATREP)           AB1331626;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PS_Site_ID);
 PARAMETER(PAR.PS_Site_Name);
 PARAMETER(PAR.PS_Manager);
 PARAMETER(PAR.PS_Address);
 PARAMETER(PAR.PS_City);
 PARAMETER(PAR.PS_State);
 PARAMETER(PAR.PS_Zip_Code);
 PARAMETER(PAR.PS_Latitude);
 PARAMETER(PAR.PS_Longitude);
 PARAMETER(PAR.PS_User_Mileage_1);
 PARAMETER(PAR.PS_User_Mileage_2);
 PARAMETER(PAR.PS_Facility_Type_County);
 PARAMETER(PAR.PS_Status_1);
 PARAMETER(PAR.PS_Status_2);
 PARAMETER(PAR.PS_Status_3);
 PARAMETER(PAR.PS_Trace_Sequence_#);
 PARAMETER(PAR.PS_Veterinarian);
 PARAMETER(PAR.PS_Nutritionist);
 PARAMETER(PAR.PS_Premises_ID);
 PARAMETER(PAR.RS_Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // Call program Rtv System Date & Tim UP.
   CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
   PARAMETER(PAR.RS_Date_Changed);
   PARAMETER(PAR.RS_Time_Changed);

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?R10369 JJH 05/22/17 - Producer Site Sync 960 with 440
 CASE;

 // IF LCL.Copy Producer Site to STP is Yes
 IF LCL.Copy_Producer_Site_to_STP = 'Y';

 // Call program Cpy PrdcrSite FmToLib CL.
 CALL PROGRAM(Cpy PrdcrSite FmToLib CL) ('PWB9UPC');
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PS_Site_ID);
 PARAMETER(LCL.Producer_Site_From_Lib);
 PARAMETER(LCL.Producer_Site_To_Lib);

 // Send completion message - 'Producer Site &1 updated into Company 440 (Sioux City, IA).'
 MESSAGE(PRK1436 *COMPLETION);
 MSGPARM(PAR.PS_Site_ID);

 ENDIF;

}


//?USER: Change detail DBF record

EXECUTE FUNCTION(Chg Producer Site MileIF) TYPE(EXCINTFUN) FILE(PLASREP)        AB1337931;
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PS_Site_ID);
PARAMETER(RCD.PSM_Company_Number);
PARAMETER(RCD.PSM_Miles_to_Company);
PARAMETER(RCD.PSM_User_Status_1);
PARAMETER(RCD.PSM_User_Status_2);
PARAMETER(RCD.PSM_User_Status_3);
PARAMETER(CTL.RS_Record_Status);
{
 //?Execute internal function

 EXECUTE FUNCTION(Chg Prod Loc Dlv Co   CO) TYPE(CHGOBJ) FILE(PLASREP)           AB1263910;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PS_Site_ID);
 PARAMETER(PAR.PSM_Company_Number);
 PARAMETER(PAR.PSM_Miles_to_Company);
 PARAMETER(PAR.RS_Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?R10369 JJH 07/04/17 - Producer Site Mileage Sync 961 with 440
 EXECUTE FUNCTION(Rtv Producer To-1stRcdRT) TYPE(RTVOBJ) FILE(PWADCPP)           AB1334739;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(LCL.Producer_To);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 CASE;

 // IF LCL.Producer To is Blank
 IF LCL.Producer_To = *BLANK;

 //?Producer is not in the Producer Location From/To file.
 // LCL.Copy Producer Site to STP = CND.No
 LCL.Copy_Producer_Site_to_STP = 'N';

 QUIT;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(960);
 PARAMETER('PRDSTFMLIB');
 PARAMETER(LCL.Producer_Site_From_Lib);

 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(960);
 PARAMETER('PRDSTTOLIB');
 PARAMETER(LCL.Producer_Site_To_Lib);

 CASE;

 // IF LCL.Producer Site From Lib is Blank
 IF LCL.Producer_Site_From_Lib = *BLANK;

 // OR LCL.Producer Site To Lib is Blank
 OR LCL.Producer_Site_To_Lib = *BLANK;

 // Send error message - 'Contact IT, Producer Site From/To libraries are not set up.'
 ERROR(PRK1435);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Copy Producer Site to STP = CND.Yes
 LCL.Copy_Producer_Site_to_STP = 'Y';

 ENDIF;

 ENDIF;

 //?R10369 JJH 07/07/17 - Producer Site Mileage Sync 960 with 440
 CASE;

 // IF LCL.Copy Producer Site to STP is Yes
 IF LCL.Copy_Producer_Site_to_STP = 'Y';

 // AND PAR.PSM Company Number is Triumph Foods-2
 AND PAR.PSM_Company_Number = 961;

 // LCL.PSM Company Alpha = CVTVAR(PAR.PSM Company Number)
 LCL.PSM_Company_Alpha = CVTVAR(PAR.PSM_Company_Number);

 // LCL.Miles to Company Alpha = CVTVAR(PAR.PSM Miles to Company)
 LCL.Miles_to_Company_Alpha = CVTVAR(PAR.PSM_Miles_to_Company);

 // Call program Cpy PrdcrSiteMFmToLib CL.
 CALL PROGRAM(Cpy PrdcrSiteMFmToLib CL) ('PWDRUPC');
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PS_Site_ID);
 PARAMETER(LCL.PSM_Company_Alpha);
 PARAMETER(LCL.Miles_to_Company_Alpha);
 PARAMETER(LCL.Producer_Site_From_Lib);
 PARAMETER(LCL.Producer_Site_To_Lib);

 // Send completion message - 'Producer Site Mileage &1 &2 updated into Company 440 (Sioux City, IA)
 MESSAGE(PRK1451 *COMPLETION);
 MSGPARM(PAR.PS_Site_ID);
 MSGPARM(PAR.PSM_Company_Number);

 QUIT;

 ENDIF;

}


//?USER: Create detail DBF record

EXECUTE FUNCTION(Crt Producer Site MileIF) TYPE(EXCINTFUN) FILE(PLASREP)        AB1337900;
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PS_Site_ID);
PARAMETER(RCD.PSM_Company_Number);
PARAMETER(RCD.PSM_Miles_to_Company);
PARAMETER(RCD.PSM_User_Status_1);
PARAMETER(RCD.PSM_User_Status_2);
PARAMETER(RCD.PSM_User_Status_3);
{
 //?Execute internal function

 EXECUTE FUNCTION(Crt Prod Loc Dlv Co   CR) TYPE(CRTOBJ) FILE(PLASREP)           AB1263909;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PS_Site_ID);
 PARAMETER(PAR.PSM_Company_Number);
 PARAMETER(PAR.PSM_Miles_to_Company);
 PARAMETER(PAR.PSM_User_Status_1);
 PARAMETER(PAR.PSM_User_Status_2);
 PARAMETER(PAR.PSM_User_Status_3);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 //?R10369 JJH 07/04/17 - Producer Site Mileage Sync 960 with 440
 EXECUTE FUNCTION(Rtv Producer To-1stRcdRT) TYPE(RTVOBJ) FILE(PWADCPP)           AB1334739;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(LCL.Producer_To);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 CASE;

 // IF LCL.Producer To is Blank
 IF LCL.Producer_To = *BLANK;

 //?Producer is not in the Producer Location From/To file.
 // LCL.Copy Producer Site to STP = CND.No
 LCL.Copy_Producer_Site_to_STP = 'N';

 QUIT;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(960);
 PARAMETER('PRDSTFMLIB');
 PARAMETER(LCL.Producer_Site_From_Lib);

 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(960);
 PARAMETER('PRDSTTOLIB');
 PARAMETER(LCL.Producer_Site_To_Lib);

 CASE;

 // IF LCL.Producer Site From Lib is Blank
 IF LCL.Producer_Site_From_Lib = *BLANK;

 // OR LCL.Producer Site To Lib is Blank
 OR LCL.Producer_Site_To_Lib = *BLANK;

 // Send error message - 'Contact IT, Producer Site From/To libraries are not set up.'
 ERROR(PRK1435);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Copy Producer Site to STP = CND.Yes
 LCL.Copy_Producer_Site_to_STP = 'Y';

 ENDIF;

 ENDIF;

 //?R10369 JJH 07/07/17 - Producer Site Mileage Sync 960 with 440
 CASE;

 // IF LCL.Copy Producer Site to STP is Yes
 IF LCL.Copy_Producer_Site_to_STP = 'Y';

 // AND PAR.PSM Company Number is Triumph Foods-2
 AND PAR.PSM_Company_Number = 961;

 // LCL.PSM Company Alpha = CVTVAR(PAR.PSM Company Number)
 LCL.PSM_Company_Alpha = CVTVAR(PAR.PSM_Company_Number);

 // LCL.Miles to Company Alpha = CVTVAR(PAR.PSM Miles to Company)
 LCL.Miles_to_Company_Alpha = CVTVAR(PAR.PSM_Miles_to_Company);

 // Call program Cpy PrdcrSiteMFmToLib CL.
 CALL PROGRAM(Cpy PrdcrSiteMFmToLib CL) ('PWDRUPC');
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PS_Site_ID);
 PARAMETER(LCL.PSM_Company_Alpha);
 PARAMETER(LCL.Miles_to_Company_Alpha);
 PARAMETER(LCL.Producer_Site_From_Lib);
 PARAMETER(LCL.Producer_Site_To_Lib);

 // Send completion message - 'Producer Site Mileage &1 &2 updated into Company 440 (Sioux City, IA)
 MESSAGE(PRK1451 *COMPLETION);
 MSGPARM(PAR.PS_Site_ID);
 MSGPARM(PAR.PSM_Company_Number);

 ENDIF;

}


//?USER: Exit program processing

//?If F3 pressed, set return code,
CASE;

// IF CTL.*CMD key is *Exit
IF CTL.*CMD_key = '03';

PGM.*Return_code = 'Y2U9999';

RETURN;

ENDIF;

