// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDBZPFR
// ?Date: 14.08.2025 Time: 12:03:38
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// PAR.USR Display 1 = CND.No
PAR.USR_Display_1 = 'N';

//?USER: Record selection processing

//?Company selected
CASE;

// IF PAR.Company Number is not equal to zero
IF PAR.Company_Number <> *ZERO;

// AND PAR.Company Number NE DB1.Company Number
AND PAR.Company_Number <> DB1.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Item code selected
CASE;

// IF PAR.Item Code NE WRK.ZERO
IF PAR.Item_Code <> WRK.ZERO;

// AND PAR.Item Code NE DB1.Item Code
AND PAR.Item_Code <> DB1.Item_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Item type code selected
CASE;

// IF PAR.Item Type Code NE WRK.BLANK
IF PAR.Item_Type_Code <> WRK.BLANK;

// AND PAR.Item Type Code NE DB1.Item Type Code
AND PAR.Item_Type_Code <> DB1.Item_Type_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Item structure class selected
CASE;

// IF PAR.Item Structure Class Code NE WRK.ZERO
IF PAR.Item_Structure_Class_Code <> WRK.ZERO;

// AND PAR.Item Structure Class Code NE DB1.Item Structure Class Code
AND PAR.Item_Structure_Class_Code <> DB1.Item_Structure_Class_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Item structure group selected
CASE;

// IF PAR.Item Structure Group Code NE WRK.ZERO
IF PAR.Item_Structure_Group_Code <> WRK.ZERO;

// AND PAR.Item Structure Group Code NE DB1.Item Structure Group Code
AND PAR.Item_Structure_Group_Code <> DB1.Item_Structure_Group_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Item structure type selected
CASE;

// IF PAR.Item Structure Type Code NE WRK.ZERO
IF PAR.Item_Structure_Type_Code <> WRK.ZERO;

// AND PAR.Item Structure Type Code NE DB1.Item Structure Type Code
AND PAR.Item_Structure_Type_Code <> DB1.Item_Structure_Type_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Record status selected
CASE;

// IF PAR.Record Status NE WRK.BLANK
IF PAR.Record_Status <> WRK.BLANK;

// AND PAR.Record Status NE DB1.Record Status
AND PAR.Record_Status <> DB1.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: On print of first page format

// 1PG.Company Number = PAR.Company Number
X1PG_Company_Number = PAR.Company_Number;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Selected Company
CASE;

// IF 1PG.Company Number is Equal to zero
IF X1PG_Company_Number = *ZERO;

// 1PG.Company Name = CON.ALL
X1PG_Company_Name = 'ALL';

ENDIF;

//?Selected Item Code
CASE;

// IF PAR.Item Code is Not Entered
IF PAR.Item_Code = *ZERO;

// 1PG.Item Description = CON.ALL
X1PG_Item_Description = 'ALL';

//?Selected Item Code
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Item Code = PAR.Item Code
X1PG_Item_Code = PAR.Item_Code;

EXECUTE FUNCTION(Rtv Item Description   RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1325690;
PARAMETER(X1PG_Item_Code);
PARAMETER(X1PG_Item_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Selected Item Type
CASE;

// IF PAR.Item Type Code is Blank
IF PAR.Item_Type_Code = *BLANK;

// 1PG.Condition Desc. 2  USR = CON.ALL
X1PG_Condition_Desc_2_USR = 'ALL';

//?Selected Item Type
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Item Type Code = PAR.Item Type Code
X1PG_Item_Type_Code = PAR.Item_Type_Code;

// 1PG.Condition Desc. 2  USR = Condition name of 1PG.Item Type Code
X1PG_Condition_Desc_2_USR = RTVCND(X1PG_Item_Type_Code);

ENDIF;

//?Selected Item Structure Class
CASE;

// IF PAR.Item Structure Class Code is Equal Zero
IF PAR.Item_Structure_Class_Code = *ZERO;

// 1PG.Item Structure Class Desc = CON.ALL
X1PG_Item_Structure_Class_Desc = 'ALL';

//?Selected Item Structure Class
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Item Structure Class Code = PAR.Item Structure Class Code
X1PG_Item_Structure_Class_Code = PAR.Item_Structure_Class_Code;

EXECUTE FUNCTION(Rtv Item Class Desc    RT) TYPE(RTVOBJ) FILE(OMFAREP)          AC1205440;
PARAMETER(X1PG_Item_Structure_Class_Code);
PARAMETER(X1PG_Item_Structure_Class_Desc);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Selected Item Structure Group
CASE;

// IF PAR.Item Structure Group Code is Not Entered
IF PAR.Item_Structure_Group_Code = *ZERO;

// 1PG.Item Structure Group Desc = CON.ALL
X1PG_Item_Structure_Group_Desc = 'ALL';

//?Selected Item Structure Group
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Item Structure Group Code = PAR.Item Structure Group Code
X1PG_Item_Structure_Group_Code = PAR.Item_Structure_Group_Code;

EXECUTE FUNCTION(Rtv Group Description  RT) TYPE(RTVOBJ) FILE(OME9REP)          AC1202656;
PARAMETER(X1PG_Item_Structure_Group_Code);
PARAMETER(WRK.Item_Structure_Type_Code);
PARAMETER(X1PG_Item_Structure_Group_Desc);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Selected Item Structure Type
CASE;

// IF PAR.Item Structure Type Code is *Select Requested
IF PAR.Item_Structure_Type_Code = *ZERO;

// 1PG.Item Structure Type Desc = CON.ALL
X1PG_Item_Structure_Type_Desc = 'ALL';

//?Selected Item Structure Type
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Item Structure Type Code = PAR.Item Structure Type Code
X1PG_Item_Structure_Type_Code = PAR.Item_Structure_Type_Code;

EXECUTE FUNCTION(RTV  Description       RT) TYPE(RTVOBJ) FILE(OME8REP)          AC1219219;
PARAMETER(X1PG_Item_Structure_Type_Code);
PARAMETER(X1PG_Item_Structure_Type_Desc);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Selected Record Status
CASE;

// IF PAR.Record Status is *blank
IF PAR.Record_Status = *BLANK;

// 1PG.Condition Desc. 1  USR = CON.ALL
X1PG_Condition_Desc_1_USR = 'ALL';

//?Selected Record Status
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Record Status = PAR.Record Status
X1PG_Record_Status = PAR.Record_Status;

// 1PG.Condition Desc. 1  USR = Condition name of 1PG.Record Status
X1PG_Condition_Desc_1_USR = RTVCND(X1PG_Record_Status);

ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// PAR.USR Display 1 = CND.Yes
PAR.USR_Display_1 = 'Y';

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
// Print Company Number header format
PRINT Company Number header format;

ENDIF;

//?USER: On print of detail format

//?Load Nominal Weight Field
CASE;

// IF CUR.Catch Weight Status is no
IF CUR.Catch_Weight_Status = 'N';

// CUR.Nominal Weight = CUR.Unit Weight
CUR.Nominal_Weight = CUR.Unit_Weight;

//?Load Nominal Weight Field
// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Nominal Weight = CON.*ZERO
CUR.Nominal_Weight = *ZERO;

ENDIF;

EXECUTE FUNCTION(RTV BOX ID FOR ITEM    RT) TYPE(RTVOBJ) FILE(PDIOREP)          AC1396535;
PARAMETER(NXT.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Box_iD);
PARAMETER(CUR.Unit_Weight_USR);
PARAMETER(WRK.Box_Description);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // WRK.Unit Weight = CON.*ZERO
 WRK.Unit_Weight = *ZERO;

 EXECUTE FUNCTION(RTV Item Type & PckCD  RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1396536;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Component_Item_Code);
 PARAMETER(WRK.Description_Line_One);
 PARAMETER(WRK.Unit_Weight);
 PARAMETER(WRK.Item_Type_Code);
 PARAMETER(PAR.Package_Type_Code);
 PARAMETER(WRK.Pallet_Tare_Weight);
 PARAMETER(WRK.Misc_Tare_Weight);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF PAR.Package Type Code is Box
 IF PAR.Package_Type_Code = 'B';

 // PAR.Box Description = WRK.Description Line One
 PAR.Box_Description = WRK.Description_Line_One;

 // PAR.Unit Weight = WRK.Unit Weight
 PAR.Unit_Weight = WRK.Unit_Weight;

 // PAR.Box iD = DB1.Component Item Code * CON.1 *
 PAR.Box_iD = DB1.Component_Item_Code * 1;

 QUIT;

 ENDIF;

}


// CUR.Box Weight = CUR.Unit Weight USR
CUR.Box_Weight = CUR.Unit_Weight_USR;

//?USER: Print required level totals

CASE;

IF NEW Company_Number;
// SUPPRESSED PRINT Company Number totals format

ENDIF;

