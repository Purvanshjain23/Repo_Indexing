// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for CAXZPVR
// ?Date: 14.08.2025 Time: 03:26:40
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('C/A');
PARAMETER(PAR.Company_Number);
PARAMETER(WRK.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(WRK.Default_Printer);
PARAMETER(WRK.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Load screen

// DTL.Company Number = PAR.Accounting Company Number
DTL.Company_Number_CDE = PAR.Company_Number;

EXECUTE FUNCTION(RTV and Fill Ent Name  RT) TYPE(EXCINTFUN)                     AC1142721;
PARAMETER(DTL.USR_Enterprise_Code_Txt_1);
PARAMETER(DTL.USR_Enterprise_Code_Txt_2);
PARAMETER('I');
PARAMETER(DTL.Record_Status);
{
 //?Execute internal function

 EXECUTE FUNCTION(RTV Text Value         RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1142687;
 PARAMETER('ENTCDE1');
 PARAMETER(WRK.System_Value_Alpha);
 {
  //?USER: Process Data record

  // PAR.System Value Alpha = DB1.System Value Alpha
  PAR.System_Value_Alpha = DB1.System_Value_Alpha;

 }

 // PAR.USR Enterprise Code Txt 1 = WRK.System Value Alpha
 PAR.USR_Enterprise_Code_Txt_1 = WRK.System_Value_Alpha;

 EXECUTE FUNCTION(RTV Text Value         RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1142687;
 PARAMETER('ENTCDE2');
 PARAMETER(WRK.System_Value_Alpha);
 {
  //?USER: Process Data record

  // PAR.System Value Alpha = DB1.System Value Alpha
  PAR.System_Value_Alpha = DB1.System_Value_Alpha;

 }

 // PAR.USR Enterprise Code Txt 2 = WRK.System Value Alpha
 PAR.USR_Enterprise_Code_Txt_2 = WRK.System_Value_Alpha;

 // Execute function EDT Ent Code Field 1   US.
 EXECUTE FUNCTION(EDT Ent Code Field 1   US) TYPE(EXCUSRSRC) ('USXVUFR');
 PARAMETER(PAR.USR_Enterprise_Code_Usage);
 PARAMETER(PAR.USR_Enterprise_Code_Txt_1);
 {
  E                    UB0        12  1
  C                     MOVE *BLANKS   UB0
  C                     MOVEA#BB0TX    UB0
  C           #IJEST    IFEQ 'O'
  C                     MOVE ':'       UB0,12
  C                     ELSE
  C                     MOVE '.'       UB0,12
  C                     END
  C                     Z-ADD11        U0      20
  C                     SETOF                     75
  C                     DO   11
  C           UB0,U0    IFNE ' '
  C                     SETON                     75
  C                     ELSE
  C           *IN75     IFEQ '0'
  C           U0        IFEQ 2
  C           U0        OREQ 4
  C           U0        OREQ 6
  C           U0        OREQ 8
  C           U0        OREQ 10
  C                     MOVE '.'       UB0,U0
  C                     END
  C                     END
  C                     END
  C                     SUB  1         U0
  C                     END
  C                     MOVEAUB0       #BB0TX
 }

 // Execute function EDT Ent Code Field 2   US.
 EXECUTE FUNCTION(EDT Ent Code Field 2   US) TYPE(EXCUSRSRC) ('USXWUFR');
 PARAMETER(PAR.USR_Enterprise_Code_Usage);
 PARAMETER(PAR.USR_Enterprise_Code_Txt_2);
 {
  E                    UB1        12  1
  C                     MOVE *BLANKS   UB1
  C                     MOVEA#BB1TX    UB1
  C           #IJEST    IFEQ 'O'
  C                     MOVE ':'       UB1,12
  C                     ELSE
  C                     MOVE '.'       UB1,12
  C                     END
  C                     Z-ADD11        U1      20
  C                     SETOF                     75
  C                     DO   11
  C           UB1,U1    IFNE ' '
  C                     SETON                     75
  C                     ELSE
  C           *IN75     IFEQ '0'
  C           U1        IFEQ 2
  C           U1        OREQ 4
  C           U1        OREQ 6
  C           U1        OREQ 8
  C           U1        OREQ 10
  C                     MOVE '.'       UB1,U1
  C                     END
  C                     END
  C                     END
  C                     SUB  1         U1
  C                     END
  C                     MOVEAUB1       #BB1TX
 }

 // Execute function EDT Ent Cd Field Join  US.
 EXECUTE FUNCTION(EDT Ent Cd Field Join  US) TYPE(EXCUSRSRC) ('USXXUFR');
 PARAMETER(PAR.USR_Enterprise_Code_Usage);
 PARAMETER(PAR.USR_Enterprise_Cde_Txt_Jn);
 {
  E                    UB2        20  1
  C                     MOVE *BLANKS   UB2
  C                     MOVEA#BB2TX    UB2
  C           #IJEST    IFEQ 'O'
  C                     MOVE ':'       UB2,20
  C                     ELSE
  C                     MOVE '.'       UB2,20
  C                     END
  C                     Z-ADD19        U2      20
  C                     SETOF                     75
  C                     DO   19
  C           UB2,U2    IFNE ' '
  C                     SETON                     75
  C                     ELSE
  C           *IN75     IFEQ '0'
  C           U2        IFEQ 2
  C           U2        OREQ 4
  C           U2        OREQ 6
  C           U2        OREQ 8
  C           U2        OREQ 10
  C           U2        OREQ 12
  C           U2        OREQ 14
  C           U2        OREQ 16
  C           U2        OREQ 18
  C                     MOVE '.'       UB2,U2
  C                     END
  C                     END
  C                     END
  C                     SUB  1         U2
  C                     END
  C                     MOVEAUB2       #BB2TX
 }

}


EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Process command keys

CASE;

// IF DTL.*CMD key is CF04
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.Company Number
IF PGM.*Cursor_field = DTL.Company_Number_CDE;

// Call program SEL Co By Number       SR.
CALL PROGRAM(SEL Co By Number       SR) ('PDMESRR');
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Name);

ENDIF;

ENDIF;

//?USER: Validate relations

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Enterprise         RT) TYPE(RTVOBJ) FILE(CADSREP)          AC1210428;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Enterprise_Code_1);
PARAMETER(DTL.Enterprise_Code_2);

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Send error message - 'Enterprise Master already exists.'
ERROR(USR0766);

ENDIF;

//?USER: User defined action

// DTL.Record Status = CND.Active
DTL.Record_Status = 'A';

EXECUTE FUNCTION(CRT Enterprise Master  CR) TYPE(CRTOBJ) FILE(CADSREP)          AC1142672;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Enterprise_Code_1);
PARAMETER(DTL.Enterprise_Code_2);
PARAMETER(DTL.Enterprise_Name);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


