     H/TITLE WW Warehouse Prices   DF  Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Display file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 02/21/18  Time  : 11:26:41
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPPOPDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: WW Warehouse Prices   DF  Display file
      *
     FPPBSCPL2IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RSQ : Inventory Stock Closing   Grp/WEDt/WhsCo/Whs/I S F
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPDKMREL1IF  E           K        DISK
      * RTV : Company Values            Retrieval index
      *
     FOMBYREL1IF  E           K        DISK
      * RTV : Item Default              Retrieval index
      *
     FPPBSCPL1IF  E           K        DISK
      * RTV : Inventory Stock Closing   Retrieval index
      *
     FPPBTCPL1IF  E           K        DISK
      * RTV : Inventory Value File      Retrieval index
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPPBSCPL5IF  E           K        DISK
      * RSQ : Inventory Stock Closing   Grp/WEDt(D)/WhsCo/Whs/It
      *
     FPPBSCPL0UF  E           K        DISK
      * UPD : Inventory Stock Closing   Update index
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
     E                    J3          3  1
     E                    K3          3  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    J7          7  1
     E                    K7          7  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    #L3         3  1
     E                    #L7         7  1
     E                    UCT        40  1               CENTER TABLE
      * Screen: Field position and name array
     E                    W0BEG   7 021  5 0A
     E                    W0END   7 021  5 0A
     E                    W0NAM   7 021 10
      * Long constants
     E                    @CN#    1  05  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@BSCPA6
      * Inventory Stock Closing   Retrieval index
      * Renamed input format fields
     I              BSAIDX                          WAAIDX
     I              BSB2C3                          WAB2C3
     I              BSGRAA                          WAGRAA
     I              BSEJC7                          WAEJC7
     I              BSV8SX                          WAV8SX
     I              BSGPAA                          WAGPAA
     I              BSGQAA                          WAGQAA
     I              BSW1SX                          WAW1SX
     I              BSF3PR                          WAF3PR
     I              BSBSNY                          WABSNY
     I              BSBTNY                          WABTNY
     I              BSBUNY                          WABUNY
     I              BSGSAA                          WAGSAA
     I              BSGTAA                          WAGTAA
     I              BSOEQT                          WAOEQT
     I              BSMQWG                          WAMQWG
     I              BSOFQT                          WAOFQT
     I              BSMRWG                          WAMRWG
     I              BSOGQT                          WAOGQT
     I              BSMXWG                          WAMXWG
     I              BSOHQT                          WAOHQT
     I              BSMSWG                          WAMSWG
     I              BSOWQT                          WAOWQT
     I              BSNAWG                          WANAWG
     I              BSOIQT                          WAOIQT
     I              BSMTWG                          WAMTWG
     I              BSOJQT                          WAOJQT
     I              BSMUWG                          WAMUWG
     I              BSOKQT                          WAOKQT
     I              BSMVWG                          WAMVWG
     I              BSOLQT                          WAOLQT
     I              BSMWWG                          WAMWWG
     I              BSFQVL                          WAFQVL
     I              BSOMQT                          WAOMQT
     I              BSMYWG                          WAMYWG
     I              BSONQT                          WAONQT
     I              BSMZWG                          WAMZWG
     I              BSOOQT                          WAOOQT
     I              BSM0WG                          WAM0WG
     I              BSDGVN                          WADGVN
     I              BSP9DT                          WAP9DT
     I              BSCTTM                          WACTTM
     I              BSOPQT                          WAOPQT
     I              BSM1WG                          WAM1WG
     I              BSOQQT                          WAOQQT
     I              BSM2WG                          WAM2WG
     I              BSORQT                          WAORQT
     I              BSM3WG                          WAM3WG
     I              BSOSQT                          WAOSQT
     I              BSM4WG                          WAM4WG
     I              BSRCNA                          WARCNA
     I              BSDFVN                          WADFVN
     I              BSP8DT                          WAP8DT
     I              BSCSTM                          WACSTM
     I              BSOTQT                          WAOTQT
     I              BSM5WG                          WAM5WG
     I              BSF4PR                          WAF4PR
     I              BSWBSX                          WAWBSX
     I              BSWNSX                          WAWNSX
     I              BSWOSX                          WAWOSX
     I              BSOUQT                          WAOUQT
     I              BSM6WG                          WAM6WG
     I              BSOVQT                          WAOVQT
     I              BSM7WG                          WAM7WG
     I              BSWCSX                          WAWCSX
     I              BSQADT                          WAQADT
     I              BSWDSX                          WAWDSX
     I              BSVSST                          WAVSST
     I              BSMJDT                          WAMJDT
     I              BSBETM                          WABETM
     I              BSCCVN                          WACCVN
     I              BSCDVN                          WACDVN
     I              BSMKDT                          WAMKDT
     I              BSBFTM                          WABFTM
     I              BSCEVN                          WACEVN
     I              BSCFVN                          WACFVN
      *
     I@BSCPA5
      * Inventory Stock Closing   Update index
      * Renamed input format fields
     I              BSAIDX                          WBAIDX
     I              BSB2C3                          WBB2C3
     I              BSGRAA                          WBGRAA
     I              BSEJC7                          WBEJC7
     I              BSV8SX                          WBV8SX
     I              BSGPAA                          WBGPAA
     I              BSGQAA                          WBGQAA
     I              BSW1SX                          WBW1SX
     I              BSF3PR                          WBF3PR
     I              BSBSNY                          WBBSNY
     I              BSBTNY                          WBBTNY
     I              BSBUNY                          WBBUNY
     I              BSGSAA                          WBGSAA
     I              BSGTAA                          WBGTAA
     I              BSOEQT                          WBOEQT
     I              BSMQWG                          WBMQWG
     I              BSOFQT                          WBOFQT
     I              BSMRWG                          WBMRWG
     I              BSOGQT                          WBOGQT
     I              BSMXWG                          WBMXWG
     I              BSOHQT                          WBOHQT
     I              BSMSWG                          WBMSWG
     I              BSOWQT                          WBOWQT
     I              BSNAWG                          WBNAWG
     I              BSOIQT                          WBOIQT
     I              BSMTWG                          WBMTWG
     I              BSOJQT                          WBOJQT
     I              BSMUWG                          WBMUWG
     I              BSOKQT                          WBOKQT
     I              BSMVWG                          WBMVWG
     I              BSOLQT                          WBOLQT
     I              BSMWWG                          WBMWWG
     I              BSFQVL                          WBFQVL
     I              BSOMQT                          WBOMQT
     I              BSMYWG                          WBMYWG
     I              BSONQT                          WBONQT
     I              BSMZWG                          WBMZWG
     I              BSOOQT                          WBOOQT
     I              BSM0WG                          WBM0WG
     I              BSDGVN                          WBDGVN
     I              BSP9DT                          WBP9DT
     I              BSCTTM                          WBCTTM
     I              BSOPQT                          WBOPQT
     I              BSM1WG                          WBM1WG
     I              BSOQQT                          WBOQQT
     I              BSM2WG                          WBM2WG
     I              BSORQT                          WBORQT
     I              BSM3WG                          WBM3WG
     I              BSOSQT                          WBOSQT
     I              BSM4WG                          WBM4WG
     I              BSRCNA                          WBRCNA
     I              BSDFVN                          WBDFVN
     I              BSP8DT                          WBP8DT
     I              BSCSTM                          WBCSTM
     I              BSOTQT                          WBOTQT
     I              BSM5WG                          WBM5WG
     I              BSF4PR                          WBF4PR
     I              BSWBSX                          WBWBSX
     I              BSWNSX                          WBWNSX
     I              BSWOSX                          WBWOSX
     I              BSOUQT                          WBOUQT
     I              BSM6WG                          WBM6WG
     I              BSOVQT                          WBOVQT
     I              BSM7WG                          WBM7WG
     I              BSWCSX                          WBWCSX
     I              BSQADT                          WBQADT
     I              BSWDSX                          WBWDSX
     I              BSVSST                          WBVSST
     I              BSMJDT                          WBMJDT
     I              BSBETM                          WBBETM
     I              BSCCVN                          WBCCVN
     I              BSCDVN                          WBCDVN
     I              BSMKDT                          WBMKDT
     I              BSBFTM                          WBBFTM
     I              BSCEVN                          WBCEVN
     I              BSCFVN                          WBCFVN
      *
     I@BSCPCL
      * Inventory Stock Closing   Grp/WEDt(D)/WhsCo/Whs/It
      * Renamed input format fields
     I              BSAIDX                          WCAIDX
     I              BSB2C3                          WCB2C3
     I              BSGRAA                          WCGRAA
     I              BSEJC7                          WCEJC7
     I              BSV8SX                          WCV8SX
     I              BSGPAA                          WCGPAA
     I              BSGQAA                          WCGQAA
     I              BSW1SX                          WCW1SX
     I              BSF3PR                          WCF3PR
     I              BSBSNY                          WCBSNY
     I              BSBTNY                          WCBTNY
     I              BSBUNY                          WCBUNY
     I              BSGSAA                          WCGSAA
     I              BSGTAA                          WCGTAA
     I              BSOEQT                          WCOEQT
     I              BSMQWG                          WCMQWG
     I              BSOFQT                          WCOFQT
     I              BSMRWG                          WCMRWG
     I              BSOGQT                          WCOGQT
     I              BSMXWG                          WCMXWG
     I              BSOHQT                          WCOHQT
     I              BSMSWG                          WCMSWG
     I              BSOWQT                          WCOWQT
     I              BSNAWG                          WCNAWG
     I              BSOIQT                          WCOIQT
     I              BSMTWG                          WCMTWG
     I              BSOJQT                          WCOJQT
     I              BSMUWG                          WCMUWG
     I              BSOKQT                          WCOKQT
     I              BSMVWG                          WCMVWG
     I              BSOLQT                          WCOLQT
     I              BSMWWG                          WCMWWG
     I              BSFQVL                          WCFQVL
     I              BSOMQT                          WCOMQT
     I              BSMYWG                          WCMYWG
     I              BSONQT                          WCONQT
     I              BSMZWG                          WCMZWG
     I              BSOOQT                          WCOOQT
     I              BSM0WG                          WCM0WG
     I              BSDGVN                          WCDGVN
     I              BSP9DT                          WCP9DT
     I              BSCTTM                          WCCTTM
     I              BSOPQT                          WCOPQT
     I              BSM1WG                          WCM1WG
     I              BSOQQT                          WCOQQT
     I              BSM2WG                          WCM2WG
     I              BSORQT                          WCORQT
     I              BSM3WG                          WCM3WG
     I              BSOSQT                          WCOSQT
     I              BSM4WG                          WCM4WG
     I              BSRCNA                          WCRCNA
     I              BSDFVN                          WCDFVN
     I              BSP8DT                          WCP8DT
     I              BSCSTM                          WCCSTM
     I              BSOTQT                          WCOTQT
     I              BSM5WG                          WCM5WG
     I              BSF4PR                          WCF4PR
     I              BSWBSX                          WCWBSX
     I              BSWNSX                          WCWNSX
     I              BSWOSX                          WCWOSX
     I              BSOUQT                          WCOUQT
     I              BSM6WG                          WCM6WG
     I              BSOVQT                          WCOVQT
     I              BSM7WG                          WCM7WG
     I              BSWCSX                          WCWCSX
     I              BSQADT                          WCQADT
     I              BSWDSX                          WCWDSX
     I              BSVSST                          WCVSST
     I              BSMJDT                          WCMJDT
     I              BSBETM                          WCBETM
     I              BSCCVN                          WCCCVN
     I              BSCDVN                          WCCDVN
     I              BSMKDT                          WCMKDT
     I              BSBFTM                          WCBFTM
     I              BSCEVN                          WCCEVN
     I              BSCFVN                          WCCFVN
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDI8T       DS
      * Internal date
     I                                        1   80XDI8DT
     I                                        1   40XDI8CY
     I                                        1   10XDI8CC
     I                                        2   40XDI8YY
     I                                        5   60XDI8MM
     I                                        7   80XDI8DD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
     IQPPBS1    E DSPPBSCPL0
      * UPD : Inventory Stock Closing   Update index
      * Renamed input format fields
     I              BSAIDX                          WBAIDX
     I              BSB2C3                          WBB2C3
     I              BSGRAA                          WBGRAA
     I              BSEJC7                          WBEJC7
     I              BSV8SX                          WBV8SX
     I              BSGPAA                          WBGPAA
     I              BSGQAA                          WBGQAA
     I              BSW1SX                          WBW1SX
     I              BSF3PR                          WBF3PR
     I              BSBSNY                          WBBSNY
     I              BSBTNY                          WBBTNY
     I              BSBUNY                          WBBUNY
     I              BSGSAA                          WBGSAA
     I              BSGTAA                          WBGTAA
     I              BSOEQT                          WBOEQT
     I              BSMQWG                          WBMQWG
     I              BSOFQT                          WBOFQT
     I              BSMRWG                          WBMRWG
     I              BSOGQT                          WBOGQT
     I              BSMXWG                          WBMXWG
     I              BSOHQT                          WBOHQT
     I              BSMSWG                          WBMSWG
     I              BSOWQT                          WBOWQT
     I              BSNAWG                          WBNAWG
     I              BSOIQT                          WBOIQT
     I              BSMTWG                          WBMTWG
     I              BSOJQT                          WBOJQT
     I              BSMUWG                          WBMUWG
     I              BSOKQT                          WBOKQT
     I              BSMVWG                          WBMVWG
     I              BSOLQT                          WBOLQT
     I              BSMWWG                          WBMWWG
     I              BSFQVL                          WBFQVL
     I              BSOMQT                          WBOMQT
     I              BSMYWG                          WBMYWG
     I              BSONQT                          WBONQT
     I              BSMZWG                          WBMZWG
     I              BSOOQT                          WBOOQT
     I              BSM0WG                          WBM0WG
     I              BSDGVN                          WBDGVN
     I              BSP9DT                          WBP9DT
     I              BSCTTM                          WBCTTM
     I              BSOPQT                          WBOPQT
     I              BSM1WG                          WBM1WG
     I              BSOQQT                          WBOQQT
     I              BSM2WG                          WBM2WG
     I              BSORQT                          WBORQT
     I              BSM3WG                          WBM3WG
     I              BSOSQT                          WBOSQT
     I              BSM4WG                          WBM4WG
     I              BSRCNA                          WBRCNA
     I              BSDFVN                          WBDFVN
     I              BSP8DT                          WBP8DT
     I              BSCSTM                          WBCSTM
     I              BSOTQT                          WBOTQT
     I              BSM5WG                          WBM5WG
     I              BSF4PR                          WBF4PR
     I              BSWBSX                          WBWBSX
     I              BSWNSX                          WBWNSX
     I              BSWOSX                          WBWOSX
     I              BSOUQT                          WBOUQT
     I              BSM6WG                          WBM6WG
     I              BSOVQT                          WBOVQT
     I              BSM7WG                          WBM7WG
     I              BSWCSX                          WBWCSX
     I              BSQADT                          WBQADT
     I              BSWDSX                          WBWDSX
     I              BSVSST                          WBVSST
     I              BSMJDT                          WBMJDT
     I              BSBETM                          WBBETM
     I              BSCCVN                          WBCCVN
     I              BSCDVN                          WBCDVN
     I              BSMKDT                          WBMKDT
     I              BSBFTM                          WBBFTM
     I              BSCEVN                          WBCEVN
     I              BSCFVN                          WBCFVN
      *
     IYARDCS      DS                            448
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Inventory Stock Closing
      * N :  ISC Week Ending Date
     I                                    P   1   50P1AIDX
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Warehouse Code
     I                                        1   3 P2AJCD
      * N :  Company Number
     I                                    P   4   50P2AIC3
      * N :  Application Code
     I                                        6  11 P2DNCD
      * N :  Enterprise Code 1
     I                                       12  15 P2DQCD
      * N :  Enterprise Code 2
     I                                       16  27 P2DRCD
      * N :  Salesperson Code
     I                                       28  30 P2BCCD
      * N :  System Date Format
     I                                       31  33 P2B8NA
      * N :  User Profile Name
     I                                       34  43 P2AJVN
      * N :  Allow Multi-Company
     I                                       44  44 P2I6ST
      * N :  Allow Multi Warehouse
     I                                       45  45 P2I8ST
      * N :  Default Printer
     I                                       46  55 P2MPNA
      * N :  First Time Flag
     I                                       56  56 P2TAST
      * N :  Name
     I                                       57  86 P2ADTX
      * N :  System Value Alpha
     I                                       87 126 P2BXTX
      * N :  Access Denied (Y/N)
     I                                      127 127 P2WVST
      * N :  Requested Delivery Date
     I                                    P 128 1310P2EIDT
      * N :  *Initial call
     I                                      132 132 P2ICL
     IP3PARM      DS
      * FLD: Print Options
      * N :  PRT Description
     I                                        1  25 P3G3TX
      * N :  PRT Printer Device
     I                                       26  35 P3WRST
      * N :  PRT Hold Output Sts
     I                                       36  39 P3WSST
      * N :  PRT Save Output Sts
     I                                       40  43 P3WTST
      * N :  PRT Number of Copies
     I                                       44  450P3DYNB
      * N :  PRT Night Queue Run Sts
     I                                       46  46 P3WUST
      * N :  PRT Night Queue
     I                                       47  56 P3BVVN
     IP4PARM      DS
      * N :  Post Flag USR
     I                                        1   1 P4HKSX
     IP5PARM      DS
      * N :  Week End Date
     I                                    P   1   40P5N6DT
     IP6PARM      DS
      * FLD: *Arrays
      * N :  Company Number Pass   USR
     I                                    P   1   85P6AJAA
      * N :  System Value Numeric
     I                                    P   9  165P6M8NB
      * N :  Warehouse Code PASS   USR
     I                                       17  19 P6T3CD
      * N :  Item Code PASS        USR
     I                                    P  20  275P6B8C7
     IP7PARM      DS
      * N :  First time flag 2     USR
     I                                        1   1 P7FTFG
      * Submit job processing data structures.
     I#SRQS       DS                           3000
     I                                        1   1 #SDMY1
     I#SSTR       DS                           3000
     I                                        1   1 #SDMY2
     I#SWRK       DS                           3000
     I                                        1   1 #SDMY3
     I#SMRG       DS                            256
     I                                        1   1 #SDMY4
     I            DS
     I I            'CMD(CALL PGM('           1  13 #SCLL
     I I            'PARM('                  14  18 #SPRM
     I I            ')'                      19  19 #SPRN
     I I            '          '             20  29 #SPRG
      * Submit job command strings.
     I            DS
     I I            'SBMJOB     JOB(PRT_W-    1 256 #S0001
     I              'HSPRC) JOBD(*USRPRF)'
     I            DS
     I I            'SBMJOB     JOB(PRT_W-    1 256 #S0002
     I              'HSPRC) JOBD(*USRPRF)'
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'CD3 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'Warehouse/Acct co mismatc'
      * Warehouse Code
     I                                        1   3 ZA0001
      * Company Number
     I                                        4   6 ZA0002
      * Message data for 'Inv Opt- Inv Value posted'
      * *SFLSEL
     I                                        1   1 ZA0003
      * ISC Valuation Grouping
     I                                        2   2 ZA0004
      * Message data for 'Post warehouse prices sbm'
      * ISC Valuation Grouping
     I                                        1   1 ZA0005
      * Message data for 'Enter Curr Wk Price for A'
      * Price 1 USR  9.4
     I                                    P   1   54ZA0006
      * Message data for 'Curr Wk Price not valid'
      * Price 1 USR  9.4
     I                                    P   1   54ZA0007
      * Message data for 'Company Number Req'
      * Company Number
     I                                        1   3 ZA0008
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0009
      * Application Code
     I                                       11  16 ZA0010
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0011
      * Application Code
     I                                       11  16 ZA0012
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * CASE: CTL.ISC Week Ending Date is Not Entered
     C           #2AIDX    IFEQ *ZERO                      *IF
     C                     Z-ADDP1AIDX    #2AIDX           ISC Week Ending
     C                     Z-ADDP1AIDX    WUAIDX           ISC Week Ending
     C                     END                             *FI
      * *Set Cursor: CTL.ISC Item Code  (*Override=*YES)
     C                     Z-ADD*ZERO     W0RR0
     C                     Z-ADD011       W0ROW0
     C                     Z-ADD004       W0COL0
     C                     MOVEL'1'       W0OVR0           *YES
      * CASE: PAR.First time flag 2     USR is Yes
     C           P7FTFG    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       P7FTFG           First time flag
     C                     Z-ADDP2AIC3    #2B2C3           ISC Warehouse C
     C                     Z-ADDP2AIC3    WUB2C3           ISC Warehouse C
     C                     END                             *FI
      * R9083 02/07/17 DN-Set Inventory Valuation Grouping.
     C                     Z-ADD#2B2C3    YL0001           ISC Warehouse C
      * Default Grouping with User Company Default if Blanks.
      * CASE: LCL.ISC Warehouse Company is Equal to zero
     C           YL0001    IFEQ *ZERO                      *IF
      * CASE: CTL.ISC Warehouse Code is Blanks
     C           #2GRAA    IFEQ *BLANK                     *IF
     C                     Z-ADDP2AIC3    YL0001           ISC Warehouse C
     C                     ELSE
      * CASE: *OTHERWISE
      * RMC S12531  get warehouses shipping company -- to get its groupin
      * RTV Shipping Co        RT - Warehouse  * 
     C                     EXSR SARVGN
     C                     Z-ADDYL0002    YL0001           ISC Warehouse C
     C                     END                             *FI
     C                     END                             *FI
      * RTV Desc & Val Alpha  RT - Company Values  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0001    WL0001           Company Number
     C                     MOVEL'IVFGROUP'WL0002    P      Company Value C
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    #CGBU1    P      Description
     C                     MOVELWL0004    #2WCSX    P      System Value Al
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           BSWCSX           ISC Valuation G
     C                     KFLD           BSAIDX           ISC Week Ending
     C                     KFLD           BSB2C3           ISC Warehouse C
     C                     KFLD           BSGRAA           ISC Warehouse C
     C                     KFLD           BSEJC7           ISC Item Code
      * Setup key
     C                     MOVEL#2WCSX    BSWCSX
     C                     Z-ADD#2AIDX    BSAIDX
     C                     Z-ADD#2B2C3    BSB2C3
     C                     MOVEL#2GRAA    BSGRAA
     C                     Z-ADD#2EJC7    BSEJC7
     C           KPOS      SETLL@BSCPBC
     C                     READ @BSCPBC                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2OOQT    WZOOQT
     C                     MOVEL#2OOQT    WZOOQT           ISC Ending Inve
     C           *LIKE     DEFN #2M0WG    WZM0WG
     C                     MOVEL#2M0WG    WZM0WG           ISC Ending Inve
     C           *LIKE     DEFN #2AIDX    WZAIDX
     C                     MOVEL#2AIDX    WZAIDX           ISC Week Ending
     C           *LIKE     DEFN #2V8SX    WZV8SX
     C                     MOVEL#2V8SX    WZV8SX           ISC Warehouse T
     C           *LIKE     DEFN #2WOSX    WZWOSX
     C                     MOVEL#2WOSX    WZWOSX           ISC Post Wareho
     C           *LIKE     DEFN #2B2C3    WZB2C3
     C                     MOVEL#2B2C3    WZB2C3           ISC Warehouse C
     C           *LIKE     DEFN #2WCSX    WZWCSX
     C                     MOVEL#2WCSX    WZWCSX           ISC Valuation G
     C           *LIKE     DEFN #2EJC7    WZEJC7
     C                     MOVEL#2EJC7    WZEJC7           ISC Item Code
     C           *LIKE     DEFN #2GRAA    WZGRAA
     C                     MOVEL#2GRAA    WZGRAA           ISC Warehouse C
     C           *LIKE     DEFN #2M5WG    WZM5WG
     C                     MOVEL#2M5WG    WZM5WG           ISC End Inv Fin
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@BSCPBC                  90*
     C  N82                READ @BSCPBC                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  3
     C                     MOVEAWKIND0    *IN,37
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2OOQT    IFNE *ZERO                      ISC Ending Inve
     C           BSOOQT    CABLT#2OOQT    BB020            ISC Ending Inve
     C                     END
     C           #2M0WG    IFNE *ZERO                      ISC Ending Inve
     C           BSM0WG    CABLT#2M0WG    BB020            ISC Ending Inve
     C                     END
     C           #2WCSX    IFEQ *BLANK                     ISC Valuation G
     C           #2AIDX    IFNE *ZERO                      ISC Week Ending
     C           BSAIDX    CABNE#2AIDX    BB020            ISC Week Ending
     C                     END
     C                     END
     C           #2V8SX    IFNE *BLANK                     ISC Warehouse T
     C           BSV8SX    CABNE#2V8SX    BB020            ISC Warehouse T
     C                     END
     C           #2WCSX    IFEQ *BLANK                     ISC Valuation G
     C           #2AIDX    OREQ *ZERO                      ISC Week Ending
     C           #2B2C3    IFNE *ZERO                      ISC Warehouse C
     C           BSB2C3    CABNE#2B2C3    BB020            ISC Warehouse C
     C                     END
     C                     END
     C           #2WCSX    IFEQ *BLANK                     ISC Valuation G
     C           #2AIDX    OREQ *ZERO                      ISC Week Ending
     C           #2B2C3    OREQ *ZERO                      ISC Warehouse C
     C           #2GRAA    OREQ *BLANK                     ISC Warehouse C
     C           #2EJC7    IFNE *ZERO                      ISC Item Code
     C           BSEJC7    CABNE#2EJC7    BB020            ISC Item Code
     C                     END
     C                     END
     C           #2WCSX    IFEQ *BLANK                     ISC Valuation G
     C           #2AIDX    OREQ *ZERO                      ISC Week Ending
     C           #2B2C3    OREQ *ZERO                      ISC Warehouse C
     C           #2GRAA    IFNE *BLANK                     ISC Warehouse C
     C           BSGRAA    CABNE#2GRAA    BB020            ISC Warehouse C
     C                     END
     C                     END
     C           #2M5WG    IFNE *ZERO                      ISC End Inv Fin
     C           BSM5WG    CABLT#2M5WG    BB020            ISC End Inv Fin
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * CASE:
      *  - c1ANDc2
      *   |- c1    : CTL.ISC Warehouse Company NE DB1.ISC Warehouse Compa
      *   |- c2    : CTL.ISC Warehouse Company is not equal to zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #2B2C3    IFNE BSB2C3                     *IF
     C           #2B2C3    IFNE *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE: CTL.ISC Week Ending Date NE DB1.ISC Week Ending Date
     C           #2AIDX    IFNE BSAIDX                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * Sel Whse
      * CASE: CTL.ISC Warehouse Code is Warehouse Code not Blank
     C           #2GRAA    IFNE *BLANK                     *IF
      * CASE: CTL.ISC Warehouse Code NE DB1.ISC Warehouse Code
     C           #2GRAA    IFNE BSGRAA                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * 1ST TIME .. GET POST STS
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * CASE: CTL.ISC Post Warehouse Sts is *ALL values
     C           #2WOSX    IFEQ 'P'                        *IF
     C           #2WOSX    OREQ 'O'
     C           #2WOSX    OREQ 'R'
     C                     ELSE
      * CASE: *OTHERWISE
      * CTL.Condition Desc. 1  USR = Condition name of RCD.ISC Post Wareh
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1663276   Y2LSNO  70       List number
     C                     PARM #1WOSX    W0INVL 25        ISC Post Wareho
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #CHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVEL#1WOSX    #2WOSX           ISC Post Wareho
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Item Descriptions  RT - Item Default  * 
     C                     EXSR SCRVGN
      * LCL.ISC Week Ending Date = CTL.ISC Week Ending Date + CON.-7 *DAY
     C           #2AIDX    SUB  18000000  XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-7        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    ADD  18000000  YL0003
     C                     END
      * Rtv Prior Week Whs PrcRt - Inventory Stock Closing  * 
     C                     EXSR SDRVGN
     C                     Z-ADDYL0004    #RHPPR           Price 3 USR  9.
      * R9083 02/04/17 DN-Added RST by IVF Valuation Grouping.
      * Rtv Inv Value Method  RT - Inventory Value File  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#1WCSX    WL0005    P      IVF Valuation G
     C                     Z-ADDYL0003    WL0006           IVF Week Ending
     C                     Z-ADD#1EJC7    WL0007           IVF Item Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0008    #RWISX    P      IVF Inventory V
     C                     Z-ADDWL0009    YL0005           IVF Cur Wk Inv
     C                     Z-ADDYL0005    #RHQPR           Price 2 USR  9.
      * Inv Value Method  (formula/market/sales)
      * CASE: RCD.IVF Inventory Value Mthd is *ALL values
     C           #RWISX    IFEQ 'S'                        *IF
     C           #RWISX    OREQ 'M'
     C           #RWISX    OREQ 'F'
     C                     ELSE
      * CASE: *OTHERWISE
      * Previous week's value method if this week's isnt entered yet.
      * R9083 02/04/17 DN-Added RST by IVF Valuation Grouping.
      * Rtv Inv Value Method  RT - Inventory Value File  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#1WCSX    WL0005    P      IVF Valuation G
     C                     Z-ADDYL0003    WL0006           IVF Week Ending
     C                     Z-ADD#1EJC7    WL0007           IVF Item Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0008    #RWISX    P      IVF Inventory V
     C                     Z-ADDWL0009    WUFZVL           IVF Cur Wk Inv
     C                     Z-ADDWUFZVL    #RHQPR           Price 2 USR  9.
     C                     END                             *FI
      * Whse price override flag default
      * CASE: RCD.ISC Warehouse Price Ovrrd is *ALL values
     C           #1WBSX    IFEQ 'P'                        *IF
     C           #1WBSX    OREQ 'A'
     C           #1WBSX    OREQ 'D'
     C                     MOVEL#1WBSX    #RWMSX           USR Warehouse P
      * CASE:
      *  - c1ANDc2
      *   |- c1    : RCD.USR Warehouse Price Ovrrd is Previous Week Value
      *   |- c2    : RCD.ISC Warehouse Price /UOM is Equal to Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #RWMSX    IFEQ 'P'                        *IF
     C           #1F4PR    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * move in last week's warehouse price
     C                     Z-ADD#RHPPR    #RHRPR           Price 1 USR  9.
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD#1F4PR    #RHRPR           Price 1 USR  9.
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Default to "P"revious week price
     C                     MOVEL'P'       #RWMSX           USR Warehouse P
     C                     Z-ADD#RHPPR    #RHRPR           Price 1 USR  9.
     C                     END                             *FI
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @BSCPBC                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate ISC Week Ending Date
      * External date
     C                     Z-ADDV2AIDX    XDEXDT
      * Check date
     C                     EXSR XDC82
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     Z-ADDXDI8DT    #2AIDX
      * Validate ISC Warehouse Type
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#2V8SX'  IFEQ YPMTFD
      * ISC Warehouse Type
     C                     MOVEL#2V8SX    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFV8SX
     C                     SELEC
     C           W0INVL    WHEQ 'FR'                       FR
     C                     Z-ADD1         ZFV8SX
     C           W0INVL    WHEQ 'FZ'                       FZ
     C                     Z-ADD2         ZFV8SX
     C                     ENDSL
     C                     EXFMTZEV8SX
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFV8SX    WHEQ 1
     C                     MOVEL'FR'      W0INVL           FR
     C           ZFV8SX    WHEQ 2
     C                     MOVEL'FZ'      W0INVL           FZ
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #2V8SX
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate ISC Warehouse Company and convert to internal.
      * CD3 Ext/Int
     C                     MOVELV2B2C3    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2B2C3    WUDMCD           CD3 Ext Numeric
      * CD3 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC3  3
     C                     MOVEA*BLANKS   K3
     C                     Z-ADD3         C       30
     C                     Z-ADD3         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUDMCD    J3
     C                     MOVE *BLANKS   W0RTN
     C                     DO   3
     C           J3,C      IFNE ' '
     C                     MOVEAJ3,C      K3,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK3        JUSTC3
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC3    TESTC   1
     C           TESTC     IFGT '?'
     C           TESTC     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC3     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC3    WUDMCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ @CN,001                    *IF
      * Setup message data for message
      * Send message 'CD3 Non numeric data'
     C                     MOVEL'USR0752' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD0         #2B2C3           CD3 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUDMCD    #2B2C3           CD3 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * Validate ISC Item Code and convert to internal.
      * CD7 Ext/Int
     C                     MOVELV2EJC7    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2EJC7    WUEOCD           CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC7  7
     C                     MOVEA*BLANKS   K7
     C                     Z-ADD7         C       30
     C                     Z-ADD7         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUEOCD    J7
     C                     MOVE *BLANKS   W0RTN
     C                     DO   7
     C           J7,C      IFNE ' '
     C                     MOVEAJ7,C      K7,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK7        JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC7    TEST7   1
     C           TEST7     IFGT '?'
     C           TEST7     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC7     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC7    WUEOCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ @CN,001                    *IF
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                     MOVEL'USR0802' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD0         #2EJC7           CD7 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUEOCD    #2EJC7           CD7 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZAIDX    CASNE#2AIDX    FBRQRL
     C           WZV8SX    CASNE#2V8SX    FBRQRL
     C           WZB2C3    CASNE#2B2C3    FBRQRL
     C           WZEJC7    CASNE#2EJC7    FBRQRL
     C           WZGRAA    CASNE#2GRAA    FBRQRL
     C           WZM5WG    CASNE#2M5WG    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * CASE: CTL.*CMD key is *Prompt
     C           *IN04     IFEQ '1'                        *IF
      * Select Warehouse Acctng co
      * CASE: PGM.*Cursor field <IS> CTL.ISC Warehouse Company
     C           W0CFL     IFEQ 'V2B2C3'                   *IF
      * SEL Company - plants   SR - Company Name and Address  * 
     C                     CALL 'PPF2SRR'              90  SEL Company - p
     C                     PARM *BLANK    W0RTN   7
     C           #2B2C3    PARM #2B2C3    WQ0001  30       Company Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPF2SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9933  *
     C                     END
     C                     END                             *FI
      * Select Whse
      * CASE: PGM.*Cursor field <IS> CTL.ISC Warehouse Code
     C           W0CFL     IFEQ '#2GRAA'                   *IF
      * CASE: CTL.ISC Warehouse Company is greater than zero
     C           #2B2C3    IFGT *ZERO                      *IF
      * PK0040 RMC 12/7/6 Use Accounting Co Select for ISC file
      * SEL AcctCo/Warehouse   SR - Warehouse  * 
     C                     CALL 'PMCQSRR'              90  SEL AcctCo/Ware
     C                     PARM *BLANK    W0RTN   7
     C           #2GRAA    PARM #2GRAA    WQ0002  3        Warehouse Code
     C                     PARM #2B2C3    WQ0003  30       Accounting Comp
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMCQSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993533*
     C                     END
     C                     ELSE
      * CASE: CTL.ISC Warehouse Type is *ALL values
     C           #2V8SX    IFEQ 'FR'                       *IF
     C           #2V8SX    OREQ 'FZ'
      * SEL Warehouse by Type  SR - Warehouse  * 
     C                     CALL 'PDZNSRR'              90  SEL Warehouse b
     C                     PARM *BLANK    W0RTN   7
     C           #2GRAA    PARM *BLANK    WQ0004  3        Warehouse Code
     C                     PARM #2V8SX    WQ0005  2        Warehouse Type
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDZNSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993532*
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * SEL Warehouse          SR - Warehouse  * 
     C                     CALL 'CAANSRR'              90  SEL Warehouse
     C                     PARM *BLANK    W0RTN   7
     C           #2GRAA    PARM #2GRAA    WQ0006  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAANSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9935  *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * PK0040 RMC 12/7/06  Validate Whse & Acctng Co combo
      * CASE:
      *  - c1ANDc2
      *   |- c1    : CTL.ISC Warehouse Company is greater than zero
      *   |- c2    : CTL.ISC Warehouse Code is Warehouse Code not Blank
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #2B2C3    IFGT *ZERO                      *IF
     C           #2GRAA    IFNE *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Acct Co          RT - Warehouse  * 
     C                     EXSR SFRVGN
      * CASE: LCL.Accounting Company NE CTL.ISC Warehouse Company
     C           YL0006    IFNE #2B2C3                     *IF
      * Setup message data for message
     C                     MOVEL#2GRAA    ZA0001           ISC Warehouse C
      * Convert ISC Warehouse Company to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2B2C3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2B2C3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0002           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0002           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Warehouse/Acct co mismatc'
     C                     MOVEL'USR3675' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993533*
      *
     C                     END                             *FI
     C                     END                             *FI
      * CASE: CTL.ISC Week Ending Date NE WRK.ISC Week Ending Date
     C           #2AIDX    IFNE WUAIDX                     *IF
     C                     Z-ADD#2AIDX    WUAIDX           ISC Week Ending
     C                     MOVELWUOTTX    #2WOSX           ISC Post Wareho
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * CASE: CTL.ISC Warehouse Code NE WRK.ISC Warehouse Code
     C           #2GRAA    IFNE WUGRAA                     *IF
     C                     MOVEL#2GRAA    WUGRAA           ISC Warehouse C
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * R9083 02/27/17 DN-Reload Subfile When Acctng Company Change.
      * CASE: CTL.ISC Warehouse Company NE WRK.ISC Warehouse Company
     C           #2B2C3    IFNE WUB2C3                     *IF
     C                     Z-ADD#2B2C3    WUB2C3           ISC Warehouse C
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * F20=Post
      * CASE: CTL.*CMD key is CF20
     C           *IN20     IFEQ '1'                        *IF
      * If posted, make sure inventory value file not posted yet
      * CASE: CTL.ISC Post Warehouse Sts is Posted
     C           #2WOSX    IFEQ 'P'                        *IF
      * RMC Allow repost 05/30/07
     C                     MOVEL'O'       WUWPSX           IVF Post Invent
      * R9083 02/04/17 DN-Added RST by IVF Valuation Grouping.
      * Rtv Post Inv Sts-1st  RT - Inventory Value File  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#2WCSX    WL0010    P      IVF Valuation G
     C                     Z-ADD#2AIDX    WL0011           IVF Week Ending
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0012    WUWPSX    P      IVF Post Invent
      * CASE: WRK.IVF Post Inventory Sts is Posted or Reposted
     C           WUWPSX    IFEQ 'P'                        *IF
     C           WUWPSX    OREQ 'R'
      * R9083 02/21/17 DN-Modified to Add Grouping to Message.
      * Setup message data for message
     C                     MOVELWUSEL     ZA0003           *SFLSEL
     C                     MOVEL#2WCSX    ZA0004           ISC Valuation G
      * Send message 'Inv Opt- Inv Value posted'
     C                     MOVEL'USR3614' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * R9083 06/14/17 DN-Update date conversion due to Synon version dif
      * PAR.Week End Date = CTL.ISC Week Ending Date
     C           #2AIDX    IFEQ *ZERO
     C                     Z-ADD*ZERO     P5N6DT
     C                     ELSE
     C           #2AIDX    SUB  19000000  P5N6DT           Week End Date
     C                     END
      * R9083 02/04/17 DN-Added ISC Valuation Grouping as parm to PPVTPVR
      * Pmt Post Whse Prices  PV - Inventory Stock Closing  * 
     C                     CALL 'PPVTPVR'              90  Pmt Post Whse P
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2AIDX    WQ0007  80       ISC Week Ending
     C                     PARM #2WCSX    WQ0008  1        ISC Valuation G
     C                     PARM 'N'       WQ0009  1        Status - Y or N
     C           P4HKSX    PARM P4HKSX    WQ0010  1        Post Flag USR
     C                     PARM P5N6DT    WQ0011  70       Week End Date
     C                     PARM #CGBU1    WQ0012 30        Inv Valuation G
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPVTPVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
      * CASE: PAR.Post Flag USR is Yes
     C           P4HKSX    IFEQ 'Y'                        *IF
     C                     MOVELWUOTTX    #2WOSX           ISC Post Wareho
     C                     MOVEL'Y'       W0RSF            *Reload subfile
      * R9083 02/23/17 DN-Modified to Add Grouping to Message.
      * Setup message data for message
     C                     MOVEL#2WCSX    ZA0005           ISC Valuation G
      * Send message 'Post warehouse prices sbm'
     C                     MOVEL'USR3536' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     END                             *FI
     C                     END                             *FI
      * F21=Print List
      * CASE: CTL.*CMD key is *Print List
     C           *IN21     IFEQ '1'                        *IF
      * PMT Prt Opt w/PSz SHR  PV - Print Options  * 
     C                     CALL 'PDV8PVR'              90  PMT Prt Opt w/P
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,002   WQ0013 25        PRT Description
     C           P3WRST    PARM P3WRST    WQ0014 10        PRT Printer Dev
     C           P3WSST    PARM P3WSST    WQ0015  4        PRT Hold Output
     C           P3WTST    PARM P3WTST    WQ0016  4        PRT Save Output
     C           P3DYNB    PARM P3DYNB    WQ0017  20       PRT Number of C
     C           P3WUST    PARM P3WUST    WQ0018  1        PRT Night Queue
     C           P3BVVN    PARM P3BVVN    WQ0019 10        PRT Night Queue
     C                     PARM P2DNCD    WQ0020  6        Application Cod
     C                     PARM '1'       WQ0021  1        Paper Type USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDV8PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is *User QUIT requested
     C           W0RTN     IFEQ @CN,003                    *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP3DYNB    P6M8NB           System Value Nu
     C                     Z-ADD#2B2C3    P6AJAA           Company Number
     C                     Z-ADDP3DYNB    P6M8NB           System Value Nu
      * R9083 06/26/17 DN-Update date conversion due to Synon version dif
     C                     Z-ADD#2AIDX    YL0007           Date Out (8,0)
     C                     MOVELYL0007    WUGWT1           Date (Char-8) U
     C                     Z-ADD#2M5WG    WUMTNX           APR
      * R9083 02/13/17 DN-Added ISC Valuation Grouping & Desc as Input Pa
      * SBMJOB: Prt Warehouse Prices  UP - Inventory Stock Closing  * 
      *
     C                     MOVEL*BLANK    W0RTN
      * Build call string for processing in batch.
     C                     MOVEL#S0001    #SRQS     P
     C           #SRQS     CAT  #SCLL:1   #SRQS            Call command
     C                     MOVEL'PPP3UPC '#SPRG     P      Load pgm name
     C           #SRQS     CAT  #SPRG:0   #SRQS            Add pgm name
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
      * Build parameters string.
     C           #SRQS     CAT  #SPRM:1   #SRQS            Parameters
      *
     C                     MOVELWUH3TX    #SSTR     P      Return Code Usr
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 7         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP3WRST    #SSTR     P      PRT Printer Dev
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 10        #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP3WSST    #SSTR     P      PRT Hold Output
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 4         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP3WTST    #SSTR     P      PRT Save Output
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 4         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     Z-ADDP6AJAA    #SPAK  309       Company Number
     C                     MOVEL#SPAK     #SSTR     P
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'P'       #STYP   1
     C                     PARM 15        #SLEN   50
     C                     PARM 5         #SDEC   10
     C                     PARM           #SRQS
      *
     C                     Z-ADDP6M8NB    #SPAK  309       System Value Nu
     C                     MOVEL#SPAK     #SSTR     P
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'P'       #STYP   1
     C                     PARM 15        #SLEN   50
     C                     PARM 5         #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVEL#2GRAA    #SSTR     P      Warehouse Code
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 3         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELWUGWT1    #SSTR     P      Date (Char-8) U
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 8         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVEL'N'       #SSTR     P      Status Flag 1
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 1         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     Z-ADDWUMTNX    #SPAK  309       APR
     C                     MOVEL#SPAK     #SSTR     P
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'P'       #STYP   1
     C                     PARM 15        #SLEN   50
     C                     PARM 5         #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELWUUGTX    #SSTR     P      Email Address
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 50        #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVEL#2WCSX    #SSTR     P      ISC Valuation G
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 1         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVEL#CGBU1    #SSTR     P      Inv Valuation G
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 30        #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *
     C           W0RTN     IFNE *BLANK
      * Build of submit job string ended in error.
     C                     MOVEL'Y2U0065' W0RTN
     C                     MOVEL'PPP3UPC 'W0CLPG 10 P
      * Send message '*Error occured on SBMJOB'
     C                     MOVEL'Y2U0065' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     ELSE
      *
     C           W0SJO     IFNE *BLANK
      * Merge variable submit job overrides.
     C                     CALL 'Y2MGRQR'              90  *
     C                     PARM #SRQS     #SWRK
     C                     PARM W0SJO     #SMRG
     C  N90                MOVEL#SWRK     #SRQS     P
     C                     MOVE *BLANK    W0SJO
     C                     END
      * Submit request.
     C                     CALL 'Y2CMEXC'              90  *
     C                     PARM           #SRQS
     C                     PARM 3000      #SRQL  155
     C                     PARM           W0JVN  10
     C                     PARM           W0JUN  10
     C                     PARM           W0JNB   6
     C                     END
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPP3UPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,37
     C                     SETOF                     98    *
      * Validate USR Warehouse Price Ovrrd
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#RWMSX'  IFEQ YPMTFD
     C           ##RR      ANDEQYPMRRN
      * USR Warehouse Price Ovrrd
     C                     MOVEL#RWMSX    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHWMSX
     C                     SELEC
     C           W0INVL    WHEQ 'P'                        P
     C                     Z-ADD1         ZHWMSX
     C           W0INVL    WHEQ 'A'                        A
     C                     Z-ADD2         ZHWMSX
     C           W0INVL    WHEQ 'D'                        D
     C                     Z-ADD3         ZHWMSX
     C                     ENDSL
      * Window width
     C                     Z-ADD24        YWWDWD
      * Window depth
     C                     Z-ADD3         YWWDDP
      * Window reference corner
     C                     MOVEL'*TL  '   YWWDCR
      * Window start row
     C                     Z-ADD12        YWWDRW
     C                     ADD  YZSFDL    YWWDRW
      * Window start column
     C                     Z-ADD75        YWWDCL
      * Retrieve window location
     C                     EXSR ZURTLC
      * Window start row
     C                     Z-ADDYWWDRW    ZG01RW
      * Window start column
     C                     Z-ADDYWWDCL    ZG01CL
     C                     EXFMTZGWMSX
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHWMSX    WHEQ 1
     C                     MOVEL'P'       W0INVL           P
     C           ZHWMSX    WHEQ 2
     C                     MOVEL'A'       W0INVL           A
     C           ZHWMSX    WHEQ 3
     C                     MOVEL'D'       W0INVL           D
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #RWMSX
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * USR Warehouse Price Ovrrd required
     C           #RWMSX    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9838  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * CASE:
      *  - c1ANDc2
      *   |- c1    : RCD.USR Warehouse Price Ovrrd is Add new value
      *   |- c2    : RCD.Price 1 USR  9.4 is Equal to Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #RWMSX    IFEQ 'A'                        *IF
     C           #RHRPR    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Setup message data for message
     C                     Z-ADD#RHRPR    ZA0006           Price 1 USR  9.
      * Send message 'Enter Curr Wk Price for A'
     C                     MOVEL'USR3553' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : RCD.USR Warehouse Price Ovrrd is Delete the value
      *   |- c2    : RCD.Price 1 USR  9.4 is Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #RWMSX    IFEQ 'D'                        *IF
     C           #RHRPR    IFNE *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Setup message data for message
     C                     Z-ADD#RHRPR    ZA0007           Price 1 USR  9.
      * Send message 'Curr Wk Price not valid'
     C                     MOVEL'USR3554' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Change the File Manually
     C                     MOVEL#RWMSX    #1WBSX           ISC Warehouse P
     C                     Z-ADD#RHRPR    #1F4PR           ISC Warehouse P
      * Chg Inventory Stock   CH - Inventory Stock Closing  * 
     C                     EXSR SHCHRC
      * *Set Cursor: CTL.ISC Item Code  (*Override=*YES)
     C                     Z-ADD*ZERO     W0RR0
     C                     Z-ADD011       W0ROW0
     C                     Z-ADD004       W0COL0
     C                     MOVEL'1'       W0OVR0           *YES
     C                     END                             *FI
     C                     END                             *FI
      * 5=Display
      * CASE: RCD.*SFLSEL is *Display
     C           #1SEL     IFEQ '5'                        *IF
     C           #1SEL     OREQ ' 5'
     C                     Z-ADD#1EJC7    #2EJC7           ISC Item Code
      * Dsp Stock Closing  2  DR - Inventory Stock Closing  * 
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CTL) #CGBU1' defaulted for 'Inv Valuation Group Desc'.
     C                     CALL 'PPPAD2R'              90  Dsp Stock Closi
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIDX    WQ0022  80       ISC Week Ending
     C                     PARM #1B2C3    WQ0023  30       ISC Warehouse C
     C                     PARM #1GRAA    WQ0024  3        ISC Warehouse C
     C                     PARM #1EJC7    WQ0025  70       ISC Item Code
     C                     PARM #CGBU1    WQ0026 30        Inv Valuation G
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPPAD2R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * 6=Print
      * CASE: RCD.*SFLSEL is *Print
     C           #1SEL     IFEQ '6'                        *IF
     C           #1SEL     OREQ ' 6'
      * R9083 02/13/17 DN-Added Company Require If Opt 6=Print is Selecte
      * CASE: CTL.ISC Warehouse Company is Equal to zero
     C           #2B2C3    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Convert ISC Warehouse Company to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2B2C3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2B2C3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0008           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0008           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Company Number Req'
     C                     MOVEL'USR2183' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9833  *
      *
     C                     GOTO DCEXIT                     *QUIT
     C                     END                             *FI
     C                     Z-ADD#1EJC7    #2EJC7           ISC Item Code
      * PMT Prt Opt w/PSz SHR  PV - Print Options  * 
     C                     CALL 'PDV8PVR'              90  PMT Prt Opt w/P
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,004   WQ0027 25        PRT Description
     C           P3WRST    PARM P3WRST    WQ0028 10        PRT Printer Dev
     C           P3WSST    PARM P3WSST    WQ0029  4        PRT Hold Output
     C           P3WTST    PARM P3WTST    WQ0030  4        PRT Save Output
     C           P3DYNB    PARM P3DYNB    WQ0031  20       PRT Number of C
     C           P3WUST    PARM P3WUST    WQ0032  1        PRT Night Queue
     C           P3BVVN    PARM P3BVVN    WQ0033 10        PRT Night Queue
     C                     PARM P2DNCD    WQ0034  6        Application Cod
     C                     PARM '1'       WQ0035  1        Paper Type USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDV8PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is *User QUIT requested
     C           W0RTN     IFEQ @CN,003                    *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP3DYNB    P6M8NB           System Value Nu
     C                     Z-ADD#1B2C3    P6AJAA           Company Number
     C                     Z-ADD#1EJC7    P6B8C7           Item Code PASS
     C                     Z-ADDP3DYNB    P6M8NB           System Value Nu
      * R9083 06/26/17 DN-Update date conversion due to Synon version dif
     C                     Z-ADD#2AIDX    YL0007           Date Out (8,0)
     C                     MOVELYL0007    WUGWT1           Date (Char-8) U
      * SBMJOB: Prt Warehouse Prc-1 ItUP - Inventory Stock Closing  * 
      *
     C                     MOVEL*BLANK    W0RTN
      * Build call string for processing in batch.
     C                     MOVEL#S0002    #SRQS     P
     C           #SRQS     CAT  #SCLL:1   #SRQS            Call command
     C                     MOVEL'PPP8UPC '#SPRG     P      Load pgm name
     C           #SRQS     CAT  #SPRG:0   #SRQS            Add pgm name
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
      * Build parameters string.
     C           #SRQS     CAT  #SPRM:1   #SRQS            Parameters
      *
     C                     MOVELWUH3TX    #SSTR     P      Return Code Usr
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 7         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP3WRST    #SSTR     P      PRT Printer Dev
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 10        #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP3WSST    #SSTR     P      PRT Hold Output
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 4         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP3WTST    #SSTR     P      PRT Save Output
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 4         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     Z-ADDP6AJAA    #SPAK  309       Company Number
     C                     MOVEL#SPAK     #SSTR     P
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'P'       #STYP   1
     C                     PARM 15        #SLEN   50
     C                     PARM 5         #SDEC   10
     C                     PARM           #SRQS
      *
     C                     Z-ADDP6M8NB    #SPAK  309       System Value Nu
     C                     MOVEL#SPAK     #SSTR     P
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'P'       #STYP   1
     C                     PARM 15        #SLEN   50
     C                     PARM 5         #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVEL#1GRAA    #SSTR     P      Warehouse Code
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 3         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     Z-ADDP6B8C7    #SPAK  309       Item Code PASS
     C                     MOVEL#SPAK     #SSTR     P
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'P'       #STYP   1
     C                     PARM 15        #SLEN   50
     C                     PARM 5         #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELWUGWT1    #SSTR     P      Date (Char-8) U
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 8         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *
     C           W0RTN     IFNE *BLANK
      * Build of submit job string ended in error.
     C                     MOVEL'Y2U0065' W0RTN
     C                     MOVEL'PPP8UPC 'W0CLPG 10 P
      * Send message '*Error occured on SBMJOB'
     C                     MOVEL'Y2U0065' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     ELSE
      *
     C           W0SJO     IFNE *BLANK
      * Merge variable submit job overrides.
     C                     CALL 'Y2MGRQR'              90  *
     C                     PARM #SRQS     #SWRK
     C                     PARM W0SJO     #SMRG
     C  N90                MOVEL#SWRK     #SRQS     P
     C                     MOVE *BLANK    W0SJO
     C                     END
      * Submit request.
     C                     CALL 'Y2CMEXC'              90  *
     C                     PARM           #SRQS
     C                     PARM 3000      #SRQL  155
     C                     PARM           W0JVN  10
     C                     PARM           W0JUN  10
     C                     PARM           W0JNB   6
     C                     END
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPP8UPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C                     MOVEL'0'       *IN79
     C           #2WOSX    IFEQ 'P'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @BSCPBC fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDBSAIDX    #1AIDX           ISC Week Ending
     C                     Z-ADDBSB2C3    #1B2C3           ISC Warehouse C
     C                     MOVELBSV8SX    #1V8SX           ISC Warehouse T
     C                     MOVELBSGPAA    #1GPAA           ISC Item Cmdty
     C                     MOVELBSGQAA    #1GQAA           ISC Item Dft Cm
     C                     MOVELBSW1SX    #1W1SX           ISC Item Type
     C                     Z-ADDBSF3PR    #1F3PR           ISC Item Market
     C                     Z-ADDBSBSNY    #1BSNY           ISC Item Struct
     C                     Z-ADDBSBTNY    #1BTNY           ISC Item Struct
     C                     Z-ADDBSBUNY    #1BUNY           ISC Item Struct
     C                     MOVELBSGSAA    #1GSAA           ISC Item G/L Su
     C                     MOVELBSGTAA    #1GTAA           ISC Item U/M -
     C                     Z-ADDBSOEQT    #1OEQT           ISC Beg Inv Fin
     C                     Z-ADDBSMQWG    #1MQWG           ISC Beg Inv Fin
     C                     Z-ADDBSOFQT    #1OFQT           ISC Beg Inv Adj
     C                     Z-ADDBSMRWG    #1MRWG           ISC Beg Inv Adj
     C                     Z-ADDBSOGQT    #1OGQT           ISC Beg Inv Qty
     C                     Z-ADDBSMXWG    #1MXWG           ISC Beg Inv Lbs
     C                     Z-ADDBSOHQT    #1OHQT           ISC Floor Produ
     C                     Z-ADDBSMSWG    #1MSWG           ISC Floor Produ
     C                     Z-ADDBSOWQT    #1OWQT           ISC Floor Prod
     C                     Z-ADDBSNAWG    #1NAWG           ISC Floor Prod
     C                     Z-ADDBSOIQT    #1OIQT           ISC Sales Produ
     C                     Z-ADDBSMTWG    #1MTWG           ISC Sales Produ
     C                     Z-ADDBSOJQT    #1OJQT           ISC Inventory S
     C                     Z-ADDBSMUWG    #1MUWG           ISC Inventory S
     C                     Z-ADDBSOKQT    #1OKQT           ISC Ord Dtl Shi
     C                     Z-ADDBSMVWG    #1MVWG           ISC Ord Dtl Shi
     C                     Z-ADDBSOLQT    #1OLQT           ISC Shipment Fi
     C                     Z-ADDBSMWWG    #1MWWG           ISC Shipment Fi
     C                     Z-ADDBSFQVL    #1FQVL           ISC FOB Gross A
     C                     Z-ADDBSOMQT    #1OMQT           ISC Inventory T
     C                     Z-ADDBSMYWG    #1MYWG           ISC Inventory T
     C                     Z-ADDBSONQT    #1ONQT           ISC Misc Invntr
     C                     Z-ADDBSMZWG    #1MZWG           ISC Misc Invntr
     C                     Z-ADDBSOOQT    #1OOQT           ISC Ending Inve
     C                     Z-ADDBSM0WG    #1M0WG           ISC Ending Inve
     C                     MOVELBSDGVN    #1DGVN           ISC End Inv Use
     C                     Z-ADDBSP9DT    #1P9DT           ISC End Inv Dat
     C                     Z-ADDBSCTTM    #1CTTM           ISC End Inv Tim
     C                     Z-ADDBSOPQT    #1OPQT           ISC Sun Shp Inv
     C                     Z-ADDBSM1WG    #1M1WG           ISC Sun Shp Inv
     C                     Z-ADDBSOQQT    #1OQQT           ISC Unsh/Ship I
     C                     Z-ADDBSM2WG    #1M2WG           ISC Unsh/Ship I
     C                     Z-ADDBSORQT    #1ORQT           ISC End Inv Par
     C                     Z-ADDBSM3WG    #1M3WG           ISC End Inv Par
     C                     Z-ADDBSOSQT    #1OSQT           ISC End Inv Adj
     C                     Z-ADDBSM4WG    #1M4WG           ISC End Inv Adj
     C                     MOVELBSRCNA    #1RCNA           ISC End Inv Adj
     C                     MOVELBSDFVN    #1DFVN           ISC Ending Inv
     C                     Z-ADDBSP8DT    #1P8DT           ISC Ending Inv
     C                     Z-ADDBSCSTM    #1CSTM           ISC Ending Inv
     C                     Z-ADDBSOTQT    #1OTQT           ISC End Inv Fin
     C                     Z-ADDBSF4PR    #1F4PR           ISC Warehouse P
     C                     MOVELBSWBSX    #1WBSX           ISC Warehouse P
     C                     MOVELBSWNSX    #1WNSX           ISC Post Balanc
     C                     MOVELBSWOSX    #1WOSX           ISC Post Wareho
     C                     Z-ADDBSOUQT    #1OUQT           ISC Commission
     C                     Z-ADDBSM6WG    #1M6WG           ISC Unused Lbs
     C                     Z-ADDBSOVQT    #1OVQT           ISC TF Exempt N
     C                     Z-ADDBSM7WG    #1M7WG           ISC TF Exempt L
     C                     MOVELBSWCSX    #1WCSX           ISC Valuation G
     C                     Z-ADDBSQADT    #1QADT           ISC Unused Date
     C                     MOVELBSWDSX    #1WDSX           ISC Unused Sts
     C                     MOVELBSVSST    #1VSST           Record Status
     C                     Z-ADDBSMJDT    #1MJDT           Create Date
     C                     Z-ADDBSBETM    #1BETM           Create Time
     C                     MOVELBSCCVN    #1CCVN           Create User
     C                     MOVELBSCDVN    #1CDVN           Create Program
     C                     Z-ADDBSMKDT    #1MKDT           Change Date
     C                     Z-ADDBSBFTM    #1BFTM           Change Time
     C                     MOVELBSCEVN    #1CEVN           Change User
     C                     MOVELBSCFVN    #1CFVN           Change Program
     C                     Z-ADDBSEJC7    #1EJC7           ISC Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V1EJC7
     C                     MOVELBSGRAA    #1GRAA           ISC Warehouse C
     C                     Z-ADDBSM5WG    #1M5WG           ISC End Inv Fin
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     MOVEL*BLANK    #RAVNA           Description Lin
     C                     Z-ADD*ZERO     #RHPPR           Price 3 USR  9.
     C                     MOVEL*BLANK    #RWMSX           USR Warehouse P
     C                     Z-ADD*ZERO     #RHRPR           Price 1 USR  9.
     C                     Z-ADD*ZERO     #RHQPR           Price 2 USR  9.
     C                     MOVEL*BLANK    #RWISX           IVF Inventory V
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADD*ZERO     #2OOQT           ISC Ending Inve
     C                     Z-ADD*ZERO     #2M0WG           ISC Ending Inve
     C                     Z-ADD*ZERO     #2AIDX           ISC Week Ending
      * Clear external version also
     C                     Z-ADD*ZERO     V2AIDX
     C                     MOVEL*BLANK    #2V8SX           ISC Warehouse T
     C                     MOVEL*BLANK    #2WOSX           ISC Post Wareho
     C                     MOVEL*BLANK    #CHLTX           Condition Desc.
     C                     Z-ADD*ZERO     #2B2C3           ISC Warehouse C
      * Clear external version also
     C                     MOVEL*BLANK    V2B2C3
     C                     MOVEL*BLANK    #2WCSX           ISC Valuation G
     C                     MOVEL*BLANK    #CGBU1           Inv Valuation G
     C                     Z-ADD*ZERO     #2EJC7           ISC Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V2EJC7
     C                     MOVEL*BLANK    #2GRAA           ISC Warehouse C
     C                     Z-ADD*ZERO     #2M5WG           ISC End Inv Fin
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert ISC Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1EJC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1EJC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1EJC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1EJC7           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert ISC Week Ending Date to display format
      * Convert date
     C                     Z-ADD#2AIDX    XDI8DT
     C                     EXSR XDV82T
     C                     Z-ADDXDEXDT    V2AIDX
      * Convert ISC Warehouse Company to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2B2C3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2B2C3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2B2C3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2B2C3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert ISC Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2EJC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2EJC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2EJC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2EJC7           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Shipping Co        RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#2GRAA    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSA     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0002           Shipping Compan
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDADBWC3    YL0002           Shipping Compan
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Desc & Val Alpha  RT - Company Values  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0003           Description
     C                     MOVEL*BLANK    WL0004           System Value Al
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           KMAIC3           Company Number
     C                     KFLD           KMV8CD           Company Value C
      * Setup key
     C                     Z-ADDWL0001    KMAIC3           Company Number
     C                     MOVELWL0002    KMV8CD           Company Value C
      * Establish starting position
     C           KRSSB     CHAIN@KMREHC              90    *
      * Data record not found
     C   90                MOVEL'USR2221' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELKMAUNA    WL0003           Description
     C                     MOVELKMBXTX    WL0004           System Value Al
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Item Descriptions  RT - Item Default  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           BYHGCD           Item Code
      * Setup key
     C                     Z-ADD#1EJC7    BYHGCD           Item Code
      * Establish starting position
     C           KRSSC     CHAIN@BYREA1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1160' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #RAVNA           Description Lin
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBYAVNA    #RAVNA           Description Lin
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Prior Week Whs PrcRt - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WAAIDX           ISC Week Ending
     C                     KFLD           WAB2C3           ISC Warehouse C
     C                     KFLD           WAGRAA           ISC Warehouse C
     C                     KFLD           WAEJC7           ISC Item Code
      * Setup key
     C                     Z-ADDYL0003    WAAIDX           ISC Week Ending
     C                     Z-ADD#1B2C3    WAB2C3           ISC Warehouse C
     C                     MOVEL#1GRAA    WAGRAA           ISC Warehouse C
     C                     Z-ADD#1EJC7    WAEJC7           ISC Item Code
      * Establish starting position
     C           KRSSD     CHAIN@BSCPA6              90    *
      * Data record not found
     C   90                MOVEL'USR3529' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWAF4PR    YL0004           ISC Warehouse P
     C                     GOTO SDEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Inv Value Method  RT - Inventory Value File  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           BTWQSX           IVF Valuation G
     C                     KFLD           BTAJDX           IVF Week Ending
     C                     KFLD           BTEKC7           IVF Item Code
      * Setup key
     C                     MOVELWL0005    BTWQSX           IVF Valuation G
     C                     Z-ADDWL0006    BTAJDX           IVF Week Ending
     C                     Z-ADDWL0007    BTEKC7           IVF Item Code
      * Establish starting position
     C           KRSSE     CHAIN@BTCPA9              90    *
      * Data record not found
     C   90                MOVEL'USR3531' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBTWISX    WL0008           IVF Inventory V
     C                     Z-ADDBTFZVL    WL0009           IVF Cur Wk Inv
     C                     GOTO SEEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Acct Co          RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#2GRAA    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSF     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0006           Accounting Comp
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDADBTC3    YL0006           Accounting Comp
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Post Inv Sts-1st  RT - Inventory Value File  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BTWQSX    WQSG01           IVF Valuation G
     C           *LIKE     DEFN BTAJDX    WQSG02           IVF Week Ending
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           IVF Valuation G
     C                     KFLD           WQSG02           IVF Week Ending
      * Setup key
     C                     MOVELWL0010    WQSG01           IVF Valuation G
     C                     Z-ADDWL0011    WQSG02           IVF Week Ending
      * Establish starting position
     C           KRSSG     SETLL@BTCPA9                    *
     C           KRSSG     READE@BTCPA9                  90*
      * Data record not found
     C   90                MOVEL'USR3531' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBTWPSX    WL0012           IVF Post Invent
     C                     GOTO SGEXIT                     *QUIT
     C           KRSSG     READE@BTCPA9                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHCHRC    BEGSR
      *================================================================
      * Chg Inventory Stock   CH - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @BSCPA5
     C                     Z-ADD#1AIDX    WBAIDX           ISC Week Ending
     C                     Z-ADD#1B2C3    WBB2C3           ISC Warehouse C
     C                     MOVEL#1GRAA    WBGRAA    P      ISC Warehouse C
     C                     Z-ADD#1EJC7    WBEJC7           ISC Item Code
      *
     C           KLCHSH    KLIST
     C                     KFLD           WBAIDX           ISC Week Ending
     C                     KFLD           WBB2C3           ISC Warehouse C
     C                     KFLD           WBGRAA           ISC Warehouse C
     C                     KFLD           WBEJC7           ISC Item Code
     C           KLCHSH    CHAIN@BSCPA5              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PPBSCPL0'MDACP
     C                     MOVEL'@BSCPA5' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SHEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPPBS1    YARDCS
      * Move non-key fields to @BSCPA5
     C                     MOVEL#1V8SX    WBV8SX    P      ISC Warehouse T
     C                     MOVEL#1GPAA    WBGPAA    P      ISC Item Cmdty
     C                     MOVEL#1GQAA    WBGQAA    P      ISC Item Dft Cm
     C                     MOVEL#1W1SX    WBW1SX    P      ISC Item Type
     C                     Z-ADD#1F3PR    WBF3PR           ISC Item Market
     C                     Z-ADD#1BSNY    WBBSNY           ISC Item Struct
     C                     Z-ADD#1BTNY    WBBTNY           ISC Item Struct
     C                     Z-ADD#1BUNY    WBBUNY           ISC Item Struct
     C                     MOVEL#1GSAA    WBGSAA    P      ISC Item G/L Su
     C                     MOVEL#1GTAA    WBGTAA    P      ISC Item U/M -
     C                     Z-ADD#1OEQT    WBOEQT           ISC Beg Inv Fin
     C                     Z-ADD#1MQWG    WBMQWG           ISC Beg Inv Fin
     C                     Z-ADD#1OFQT    WBOFQT           ISC Beg Inv Adj
     C                     Z-ADD#1MRWG    WBMRWG           ISC Beg Inv Adj
     C                     Z-ADD#1OGQT    WBOGQT           ISC Beg Inv Qty
     C                     Z-ADD#1MXWG    WBMXWG           ISC Beg Inv Lbs
     C                     Z-ADD#1OHQT    WBOHQT           ISC Floor Produ
     C                     Z-ADD#1MSWG    WBMSWG           ISC Floor Produ
     C                     Z-ADD#1OWQT    WBOWQT           ISC Floor Prod
     C                     Z-ADD#1NAWG    WBNAWG           ISC Floor Prod
     C                     Z-ADD#1OIQT    WBOIQT           ISC Sales Produ
     C                     Z-ADD#1MTWG    WBMTWG           ISC Sales Produ
     C                     Z-ADD#1OJQT    WBOJQT           ISC Inventory S
     C                     Z-ADD#1MUWG    WBMUWG           ISC Inventory S
     C                     Z-ADD#1OKQT    WBOKQT           ISC Ord Dtl Shi
     C                     Z-ADD#1MVWG    WBMVWG           ISC Ord Dtl Shi
     C                     Z-ADD#1OLQT    WBOLQT           ISC Shipment Fi
     C                     Z-ADD#1MWWG    WBMWWG           ISC Shipment Fi
     C                     Z-ADD#1FQVL    WBFQVL           ISC FOB Gross A
     C                     Z-ADD#1OMQT    WBOMQT           ISC Inventory T
     C                     Z-ADD#1MYWG    WBMYWG           ISC Inventory T
     C                     Z-ADD#1ONQT    WBONQT           ISC Misc Invntr
     C                     Z-ADD#1MZWG    WBMZWG           ISC Misc Invntr
     C                     Z-ADD#1OOQT    WBOOQT           ISC Ending Inve
     C                     Z-ADD#1M0WG    WBM0WG           ISC Ending Inve
     C                     MOVEL#1DGVN    WBDGVN    P      ISC End Inv Use
     C                     Z-ADD#1P9DT    WBP9DT           ISC End Inv Dat
     C                     Z-ADD#1CTTM    WBCTTM           ISC End Inv Tim
     C                     Z-ADD#1OPQT    WBOPQT           ISC Sun Shp Inv
     C                     Z-ADD#1M1WG    WBM1WG           ISC Sun Shp Inv
     C                     Z-ADD#1OQQT    WBOQQT           ISC Unsh/Ship I
     C                     Z-ADD#1M2WG    WBM2WG           ISC Unsh/Ship I
     C                     Z-ADD#1ORQT    WBORQT           ISC End Inv Par
     C                     Z-ADD#1M3WG    WBM3WG           ISC End Inv Par
     C                     Z-ADD#1OSQT    WBOSQT           ISC End Inv Adj
     C                     Z-ADD#1M4WG    WBM4WG           ISC End Inv Adj
     C                     MOVEL#1RCNA    WBRCNA    P      ISC End Inv Adj
     C                     MOVEL#1DFVN    WBDFVN    P      ISC Ending Inv
     C                     Z-ADD#1P8DT    WBP8DT           ISC Ending Inv
     C                     Z-ADD#1CSTM    WBCSTM           ISC Ending Inv
     C                     Z-ADD#1OTQT    WBOTQT           ISC End Inv Fin
     C                     Z-ADD#1M5WG    WBM5WG           ISC End Inv Fin
     C                     Z-ADD#1F4PR    WBF4PR           ISC Warehouse P
     C                     MOVEL#1WBSX    WBWBSX    P      ISC Warehouse P
     C                     MOVEL#1WNSX    WBWNSX    P      ISC Post Balanc
     C                     MOVEL#1WOSX    WBWOSX    P      ISC Post Wareho
     C                     Z-ADD#1OUQT    WBOUQT           ISC Commission
     C                     Z-ADD#1M6WG    WBM6WG           ISC Unused Lbs
     C                     Z-ADD#1OVQT    WBOVQT           ISC TF Exempt N
     C                     Z-ADD#1M7WG    WBM7WG           ISC TF Exempt L
     C                     MOVEL#1WCSX    WBWCSX    P      ISC Valuation G
     C                     Z-ADD#1QADT    WBQADT           ISC Unused Date
     C                     MOVEL#1WDSX    WBWDSX    P      ISC Unused Sts
     C                     MOVEL#1VSST    WBVSST    P      Record Status
     C                     Z-ADD#1MJDT    WBMJDT           Create Date
     C                     Z-ADD#1BETM    WBBETM           Create Time
     C                     MOVEL#1CCVN    WBCCVN    P      Create User
     C                     MOVEL#1CDVN    WBCDVN    P      Create Program
     C                     Z-ADD#1MKDT    WBMKDT           Change Date
     C                     Z-ADD#1BFTM    WBBFTM           Change Time
     C                     MOVEL#1CEVN    WBCEVN    P      Change User
     C                     MOVEL#1CFVN    WBCFVN    P      Change Program
      *
      * Set PGM.*Record Data Changed flag
     C           QPPBS1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Chg Date/Time      IF
     C                     Z-ADD##JDT     WBMKDT           Change Date
     C                     Z-ADD##JTM     WBBFTM           Change Time
     C                     MOVEL##USR     WBCEVN           Change User
     C                     MOVEL##PGM     WBCFVN           Change Program
      * Compute:Ending Inv Fin Qt
      * DB1.ISC End Inv Final Qty =
      *    *COMPUTE (x1 + x2 + x3 +x4 + x5)
      * x1    : DB1.ISC Ending Inventory Qty
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC End Inv Adj Qty
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.ISC Sun Shp Inv Adj Qty
      * +     : PGM.*Synon (15,2) work field
      * x4    : DB1.ISC Unsh/Ship Inv Adj Qty
      * +     : PGM.*Synon (15,2) work field
      * x5    : DB1.ISC End Inv Partial Qty
     C           WBOOQT    ADD  WBOSQT    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WBOPQT    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WBOQQT    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WBORQT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WBOTQT           ISC End Inv Fin
      * Compute:Ending Inv Fin Lb
      * DB1.ISC End Inv Final Lbs =
      *    *COMPUTE (x1 + x2 + x3 +x4 + x5)
      * x1    : DB1.ISC Ending Inventory Lbs
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC End Inv Adj Lbs
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.ISC Sun Shp Inv Adj Lbs
      * +     : PGM.*Synon (15,2) work field
      * x4    : DB1.ISC Unsh/Ship Inv Adj Lbs
      * +     : PGM.*Synon (15,2) work field
      * x5    : DB1.ISC End Inv Partial Lbs
     C           WBM0WG    ADD  WBM4WG    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WBM1WG    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WBM2WG    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WBM3WG    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WBM5WG           ISC End Inv Fin
      * Comp: sales prod qty
      * DB1.ISC Sales Production Qty =
      *    *COMPUTE (x2 + x1 - x3)
      * x2    : DB1.ISC End Inv Final Qty
      * +     : PGM.*Synon (15,2) work field
      * x1    : DB1.ISC Shipment Final Qty
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.ISC Beg Inv Final Qty
     C           WBOTQT    ADD  WBOLQT    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WBOEQT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WBOIQT           ISC Sales Produ
      * Comp: sales prod lbs
      * DB1.ISC Sales Production Lbs =
      *    *COMPUTE (x2 + x1 - x3)
      * x2    : DB1.ISC End Inv Final Lbs
      * +     : PGM.*Synon (15,2) work field
      * x1    : DB1.ISC Shipment Final Lbs
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.ISC Beg Inv Final Lbs
     C           WBM5WG    ADD  WBMWWG    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WBMQWG    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WBMTWG           ISC Sales Produ
      * Set PGM.*Record Data Changed flag
     C           QPPBS1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@BSCPA5                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPPBSCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0001    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSI     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    P2I6ST           Allow Multi-Com
     C                     MOVELDRMPNA    P2MPNA           Default Printer
     C                     MOVELDRBCCD    P2BCCD           Salesperson Cod
     C                     Z-ADDDRAIC3    YL0008           Company Number
     C                     MOVELDRBUVN    WN0002           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - User Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0013    DTAJVN           User Profile Na
     C                     MOVELWL0014    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSJ     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0015           Company Number
     C                     MOVELDTAJCD    WL0016           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSK01           Application Cod
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Application Cod
      * Setup key
     C                     MOVELP2DNCD    WQSK01           Application Cod
      * Establish starting position
     C           KRSSK     SETLL@DNRESF                    *
     C           KRSSK     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SLRVGN
     C                     END                             *FI
     C           KRSSK     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSL01           Application Cod
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WQSL01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSL01           Application Cod
      * Establish starting position
     C           KRSSL     SETLL@DNRESF                    *
     C           KRSSL     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSL     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv Last Week in file RT - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCWCSX    WQSM01           ISC Valuation G
      * Define keylist
     C           KPSSM     KLIST
     C                     KFLD           WQSM01           ISC Valuation G
     C                     KFLD           WCAIDX           ISC Week Ending
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           WQSM01           ISC Valuation G
      * Setup key
     C                     MOVELWL0017    WQSM01           ISC Valuation G
     C                     Z-ADDWL0018    WCAIDX           ISC Week Ending
      * Establish starting position
     C           KPSSM     SETLL@BSCPCL                    *
     C           KRSSM     READE@BSCPCL                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3529' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0018           ISC Week Ending
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Get the latest week ending date in the file
     C                     Z-ADDWCAIDX    WL0018           ISC Week Ending
     C                     GOTO SMEXIT                     *QUIT
     C           KRSSM     READE@BSCPCL                  90*
     C                     ENDDO
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDC82     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDI8DT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDC82E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDI8DD           DD
     C                     Z-ADDXDEX03    XDI8MM           MM
     C                     Z-ADDXDEX04    XDI8YY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDI8MM           MM
     C                     Z-ADDXDEX03    XDI8DD           DD
     C                     Z-ADDXDEX04    XDI8YY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDI8YY           YY
     C                     Z-ADDXDEX03    XDI8MM           MM
     C                     Z-ADDXDEX04    XDI8DD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDI8YY    IFLT XOFFYY
     C                     Z-ADD2         XDI8CC           C
     C                     ELSE
     C                     Z-ADD1         XDI8CC           C
     C                     ADD  900       XDI8YY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDC82E
      *................................................................
      * Check months in range 1 to 12
     C           XDI8MM    CABLT1         XDC82M
     C           XDI8MM    CABGT12        XDC82M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDI8DD    CABLT1         XDC82M
     C           XDI8DD    CABGT@XD,XDI8MMXDC82M
      *................................................................
      * Special case: leap year
     C           XDI8MM    IFEQ 2
     C           XDI8YY    IFNE 900
     C           XDI8YY    ANDNE100
     C           XDI8YY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDI8DD    CABGT28        XDC82M
     C                     END
     C                     END
     C                     GOTO XDC82E
      *................................................................
      * Send error message
     C           XDC82M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDC82E    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDV82T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDI8DD    XDEX02           DD
     C                     Z-ADDXDI8MM    XDEX03           MM
     C                     Z-ADDXDI8YY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDI8MM    XDEX02           MM
     C                     Z-ADDXDI8DD    XDEX03           DD
     C                     Z-ADDXDI8YY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDI8YY    XDEX02           YY
     C                     Z-ADDXDI8MM    XDEX03           MM
     C                     Z-ADDXDI8DD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDV82E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
     C           *IN25     IFEQ '0'
      * Bypass when help done
     C                     SETOF                     94    *
     C           W0OVR0    IFEQ '1'
     C           W0OVR0    OREQ '0'
     C           *IN99     ANDEQ'0'
      * If override or no error
     C                     SETON                     94    *
     C           W0RR0     IFNE *ZERO
     C           W0RR0     IFGT ##RRMX
     C                     Z-ADD##RRMX    ##SFRC
     C                     ELSE
     C                     Z-ADDW0RR0     ##SFRC
     C                     END
     C                     END
     C                     Z-ADDW0ROW0    ZZCSRW
     C                     Z-ADDW0COL0    ZZCSCL
     C                     END
     C                     END
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C           ZINPOS    IFGE 03072
     C           ZINPOS    ANDLE06144
      * Cursor in the subfile record area
      * Reset cursor position to the basic (first) record for lookup
     C           W0CRW     SUB  12        W0CSRR  50
     C           03072     ADD  W0CCL     ZINPOS
      * Calculate rrn of the cursor position
     C                     ADD  ##SFRC    W0CSRR
     C                     ENDIF
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
     C           W0CFL     IFEQ *BLANK
     C                     Z-ADD0         W0CSRR
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
     C                     SETOF                     94    *
     C                     Z-ADD0         W0RR0   40
     C                     Z-ADD0         W0ROW0  30
     C                     Z-ADD0         W0COL0  30
     C                     MOVE '2'       W0OVR0  1
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD12        ZHSTRW  40
     C                     Z-ADD23        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           ZHCSRW    IFEQ 004
     C           ZHCSCL    ANDGE062
     C           ZHCSCL    ANDLE063
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#2V8SX'  YPMTFD           ISC Warehouse T
     C                     END
      *
     C           ZHF4RW    IFEQ 012
     C           ZHCSCL    ANDEQ075
     C           *IN79     ANDEQ'0'
     C                     MOVEL'#RWMSX'  YPMTFD           USR Warehouse P
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              9292  *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZURTLC    BEGSR
      *================================================================
      * Retrieve window location
      *================================================================
      *
      * Set up parameters to API
      *
      * Return code
     C                     MOVEL*BLANKS   W0RTN
      * Retrieval Function
     C                     MOVEL*BLANKS   YWRTFN
     C                     MOVEL'*WDWLOC' YWRTFN
      *
     C                     SETOF                       90  *
      *
     C                     CALL 'YWRTLCI'              90  *
     C                     PARM           YWRTFN 10        Retrieval Funct
     C                     PARM           YWWDWD  30       Window width
     C                     PARM           YWWDDP  30       Window depth
     C                     PARM           YWWDCR  5        Window referenc
     C                     PARM           YWWDRW  30       *Window start r
     C                     PARM           YWWDCL  30       *Window start c
     C                     PARM           W0RTN            Return code
      * If error on call to API - default window location to top left cor
     C           *IN90     IFEQ '1'
     C           W0RTN     ORNE *BLANKS
     C                     Z-ADD2         YWWDRW           *Window start r
     C                     Z-ADD2         YWWDCL           *Window start c
     C                     END
      *
      *================================================================
     CSR         ZUEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P1AIDX           ISC Week Ending
     C                     MOVEL*BLANK    P2AJCD           Warehouse Code
     C                     Z-ADD*ZERO     P2AIC3           Company Number
     C                     MOVEL*BLANK    P2DNCD           Application Cod
     C                     MOVEL*BLANK    P2DQCD           Enterprise Code
     C                     MOVEL*BLANK    P2DRCD           Enterprise Code
     C                     MOVEL*BLANK    P2BCCD           Salesperson Cod
     C                     MOVEL*BLANK    P2B8NA           System Date For
     C                     MOVEL*BLANK    P2AJVN           User Profile Na
     C                     MOVEL*BLANK    P2I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P2I8ST           Allow Multi War
     C                     MOVEL*BLANK    P2MPNA           Default Printer
     C                     MOVEL*BLANK    P2TAST           First Time Flag
     C                     MOVEL*BLANK    P2ADTX           Name
     C                     MOVEL*BLANK    P2BXTX           System Value Al
     C                     MOVEL*BLANK    P2WVST           Access Denied (
     C                     Z-ADD*ZERO     P2EIDT           Requested Deliv
     C                     MOVEL*BLANK    P2ICL            *Initial call
     C                     MOVEL*BLANK    P3G3TX           PRT Description
     C                     MOVEL*BLANK    P3WRST           PRT Printer Dev
     C                     MOVEL*BLANK    P3WSST           PRT Hold Output
     C                     MOVEL*BLANK    P3WTST           PRT Save Output
     C                     Z-ADD*ZERO     P3DYNB           PRT Number of C
     C                     MOVEL*BLANK    P3WUST           PRT Night Queue
     C                     MOVEL*BLANK    P3BVVN           PRT Night Queue
     C                     MOVEL*BLANK    P4HKSX           Post Flag USR
     C                     Z-ADD*ZERO     P5N6DT           Week End Date
     C                     Z-ADD*ZERO     P6AJAA           Company Number
     C                     Z-ADD*ZERO     P6M8NB           System Value Nu
     C                     MOVEL*BLANK    P6T3CD           Warehouse Code
     C                     Z-ADD*ZERO     P6B8C7           Item Code PASS
     C                     MOVEL*BLANK    P7FTFG           First time flag
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field ISC Week Ending Date
     C                     Z-ADD*ZERO     WUAIDX  80
      * Define work field ISC Warehouse Company
     C                     Z-ADD*ZERO     WUB2C3  30
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIDX           ISC Week Ending
     C                     Z-ADD*ZERO     WAB2C3           ISC Warehouse C
     C                     Z-ADD*ZERO     WAEJC7           ISC Item Code
     C                     Z-ADD*ZERO     WAF3PR           ISC Item Market
     C                     Z-ADD*ZERO     WABSNY           ISC Item Struct
     C                     Z-ADD*ZERO     WABTNY           ISC Item Struct
     C                     Z-ADD*ZERO     WABUNY           ISC Item Struct
     C                     Z-ADD*ZERO     WAOEQT           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WAMQWG           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WAOFQT           ISC Beg Inv Adj
     C                     Z-ADD*ZERO     WAMRWG           ISC Beg Inv Adj
     C                     Z-ADD*ZERO     WAOGQT           ISC Beg Inv Qty
     C                     Z-ADD*ZERO     WAMXWG           ISC Beg Inv Lbs
     C                     Z-ADD*ZERO     WAOHQT           ISC Floor Produ
     C                     Z-ADD*ZERO     WAMSWG           ISC Floor Produ
     C                     Z-ADD*ZERO     WAOWQT           ISC Floor Prod
     C                     Z-ADD*ZERO     WANAWG           ISC Floor Prod
     C                     Z-ADD*ZERO     WAOIQT           ISC Sales Produ
     C                     Z-ADD*ZERO     WAMTWG           ISC Sales Produ
     C                     Z-ADD*ZERO     WAOJQT           ISC Inventory S
     C                     Z-ADD*ZERO     WAMUWG           ISC Inventory S
     C                     Z-ADD*ZERO     WAOKQT           ISC Ord Dtl Shi
     C                     Z-ADD*ZERO     WAMVWG           ISC Ord Dtl Shi
     C                     Z-ADD*ZERO     WAOLQT           ISC Shipment Fi
     C                     Z-ADD*ZERO     WAMWWG           ISC Shipment Fi
     C                     Z-ADD*ZERO     WAFQVL           ISC FOB Gross A
     C                     Z-ADD*ZERO     WAOMQT           ISC Inventory T
     C                     Z-ADD*ZERO     WAMYWG           ISC Inventory T
     C                     Z-ADD*ZERO     WAONQT           ISC Misc Invntr
     C                     Z-ADD*ZERO     WAMZWG           ISC Misc Invntr
     C                     Z-ADD*ZERO     WAOOQT           ISC Ending Inve
     C                     Z-ADD*ZERO     WAM0WG           ISC Ending Inve
     C                     Z-ADD*ZERO     WAP9DT           ISC End Inv Dat
     C                     Z-ADD*ZERO     WACTTM           ISC End Inv Tim
     C                     Z-ADD*ZERO     WAOPQT           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WAM1WG           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WAOQQT           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WAM2WG           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WAORQT           ISC End Inv Par
     C                     Z-ADD*ZERO     WAM3WG           ISC End Inv Par
     C                     Z-ADD*ZERO     WAOSQT           ISC End Inv Adj
     C                     Z-ADD*ZERO     WAM4WG           ISC End Inv Adj
     C                     Z-ADD*ZERO     WAP8DT           ISC Ending Inv
     C                     Z-ADD*ZERO     WACSTM           ISC Ending Inv
     C                     Z-ADD*ZERO     WAOTQT           ISC End Inv Fin
     C                     Z-ADD*ZERO     WAM5WG           ISC End Inv Fin
     C                     Z-ADD*ZERO     WAF4PR           ISC Warehouse P
     C                     Z-ADD*ZERO     WAOUQT           ISC Commission
     C                     Z-ADD*ZERO     WAM6WG           ISC Unused Lbs
     C                     Z-ADD*ZERO     WAOVQT           ISC TF Exempt N
     C                     Z-ADD*ZERO     WAM7WG           ISC TF Exempt L
     C                     Z-ADD*ZERO     WAQADT           ISC Unused Date
     C                     Z-ADD*ZERO     WAMJDT           Create Date
     C                     Z-ADD*ZERO     WABETM           Create Time
     C                     Z-ADD*ZERO     WAMKDT           Change Date
     C                     Z-ADD*ZERO     WABFTM           Change Time
      * Define work field IVF Cur Wk Inv Val Prc/CW
     C                     Z-ADD*ZERO     WUFZVL  94
      * Define work field USR First Position
     C                     MOVEL*BLANK    WUI3ST  1
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Blank for 4           USR
     C                     MOVEL*BLANK    WUOTTX  4
      * Define work field ISC Warehouse Code
     C                     MOVEL*BLANK    WUGRAA  3
      * Define work field IVF Post Inventory Sts
     C                     MOVEL*BLANK    WUWPSX  1
      * Define work field *SFLSEL
     C                     MOVEL*BLANK    WUSEL   1
      * Define work field Date (Char-8) USR
     C                     MOVEL*BLANK    WUGWT1  8
      * Define work field APR             PASS  USR
     C                     Z-ADD*ZERO     WUMTNX 155
      * Define work field Return Code Usr
     C                     MOVEL*BLANK    WUH3TX  7
      * Define work field Email Address
     C                     MOVEL*BLANK    WUUGTX 50
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize *SET CURSOR data
     C                     MOVE 'Y'       YSETCS  1
     C                     EXSR Y9CLR
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0WA03 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      *
     C                     MOVEL*BLANK    W0SJO 132        *Sbmjob overrid
      * Define local variables for subroutine SBRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002 10
     C                     MOVEL*BLANK    WL0003 30
     C                     MOVEL*BLANK    WL0004 40
      * Define local variables for subroutine SERVGN.
     C                     MOVEL*BLANK    WL0005  1
     C                     Z-ADD*ZERO     WL0006  80
     C                     Z-ADD*ZERO     WL0007  70
     C                     MOVEL*BLANK    WL0008  1
     C                     Z-ADD*ZERO     WL0009  94
      * Define local variables for subroutine SGRVGN.
     C                     MOVEL*BLANK    WL0010  1
     C                     Z-ADD*ZERO     WL0011  80
     C                     MOVEL*BLANK    WL0012  1
      * Define local variables for subroutine SJRVGN.
     C                     MOVEL*BLANK    WL0013 10
     C                     MOVEL*BLANK    WL0014  6
     C                     Z-ADD*ZERO     WL0015  30
     C                     MOVEL*BLANK    WL0016  3
      * Define local variables for subroutine SMRVGN.
     C                     MOVEL*BLANK    WL0017  1
     C                     Z-ADD*ZERO     WL0018  80
      * Define local work field ISC Warehouse Company
     C                     Z-ADD*ZERO     YL0001  30
      * Define local work field Shipping Company
     C                     Z-ADD*ZERO     YL0002  30
      * Define null work field Description Line Two
     C                     MOVEL*BLANK    YN0001 30
      * Define local work field ISC Week Ending Date
     C                     Z-ADD*ZERO     YL0003  80
      * Define local work field ISC Warehouse Price /UOM
     C                     Z-ADD*ZERO     YL0004  94
      * Define local work field IVF Cur Wk Inv Val Prc/CW
     C                     Z-ADD*ZERO     YL0005  94
      * Define local work field Accounting Company
     C                     Z-ADD*ZERO     YL0006  30
      * Define local work field Date Out (8,0) USR
     C                     Z-ADD*ZERO     YL0007  80
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0008  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0009  3
      * Define null work field Description
     C                     MOVEL*BLANK    YN0002 30
      * Define local work field ISC Valuation Grouping
     C                     MOVEL*BLANK    YL0010  1
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD12        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
     C                     MOVEL*BLANK    P2DNCD           Application Cod
     C                     MOVEL'I/C'     P2DNCD           Application Cod
      *
     C                     MOVEL*BLANK    WN0001 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0001           User Profile Na
      *
     C                     MOVEL*BLANK    WN0002 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SIRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,005                    *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0009           User Profile Na
     C                     MOVELP2DNCD    ZA0010           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0002    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0001    WL0013    P      User Profile Na
     C                     MOVELP2DNCD    WL0014    P      Application Cod
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0015    P2AIC3           Company Number
     C                     MOVELWL0016    YL0009    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0002    WL0013    P      User Profile Na
     C                     MOVELP2DNCD    WL0014    P      Application Cod
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0015    P2AIC3           Company Number
     C                     MOVELWL0016    YL0009    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0009    P2AJCD           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0011           User Profile Na
     C                     MOVELP2DNCD    ZA0012           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0008    IFNE 0                          *IF
     C                     Z-ADDYL0008    P2AIC3           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0009    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C           P2AJCD    PARM *BLANK    WQ0036  3        Warehouse Code
     C                     PARM YL0008    WQ0037  30       Shipping Compan
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SKRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL'Y'       P2TAST           First Time Flag
     C                     MOVEL'N'       P3WUST           PRT Night Queue
     C                     Z-ADD9999999   W0SLM            *Scan limit
     C                     Z-ADD20991231  P1AIDX           ISC Week Ending
      * R9083 02/07/17 DN-Get Default Inventory Valuation Grouping.
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       P7FTFG           First time flag
      * RTV Desc & Val Alpha  RT - Company Values  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP2AIC3    WL0001           Company Number
     C                     MOVEL'IVFGROUP'WL0002    P      Company Value C
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YN0002    P      Description
     C                     MOVELWL0004    YL0010    P      System Value Al
      * R9083 02/09/17 DN-Added RST by ISC Valuation Grouping.
      * Rtv Last Week in file RT - Inventory Stock Closing  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELYL0010    WL0017    P      ISC Valuation G
     C                     Z-ADDP1AIDX    WL0018           ISC Week Ending
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0018    P1AIDX           ISC Week Ending
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** W0BEG
01051010860111801121013070133401336
01794028200286002864030740307603085
03116031200313403147031500316203173
** W0END
01056010870111801130013090133401360
01923028260286202876030740308203114
03118031320314303147031590317103173
** W0NAM
V2AIDX    #2V8SX    #2WOSX    #CHLTX    V2B2C3    #2WCSX    #CGBU1
#2ST1     V2EJC7    #2GRAA    #2M5WG    #1SEL     V1EJC7    #RAVNA
#1GRAA    #1M5WG    #RHPPR    #RWMSX    #RHRPR    #RHQPR    #RWISX
** @CN
00001 USR0752
00002 Warehouse Prices
00003 Y2U9999
00004 Inv Warehouse Price
00005 Y2U0005
