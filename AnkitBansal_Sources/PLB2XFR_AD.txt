// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLB2XFR
// ?Date: 14.08.2025 Time: 02:53:41
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Calculate duration between points
EXECUTE FUNCTION(Clc Time Durations    IF) TYPE(EXCINTFUN)                      AB1247954;
PARAMETER(PAR.Date_Beg_USR);
PARAMETER(PAR.Time_Beg_4_0_USR);
PARAMETER(PAR.Date_End_USR);
PARAMETER(PAR.Time_End_4_0_USR);
PARAMETER(PAR.Wait_Time_4_0_USR);
{
 //?Execute internal function

 // PAR.Wait Time 4.0 USR = CON.*ZERO
 PAR.Wait_Time_4_0_USR = *ZERO;

 CASE;

 // IF PAR.Date Beg USR is Entered
 IF PAR.Date_Beg_USR <> *ZERO;

 // AND PAR.Date End USR is Entered
 AND PAR.Date_End_USR <> 0;

 // AND PAR.Time Beg 4.0 USR is Entered
 AND PAR.Time_Beg_4_0_USR <> *ZERO;

 // AND PAR.Time End 4.0 USR is Entered
 AND PAR.Time_End_4_0_USR <> *ZERO;

 // LCL.Time Beg USR = PAR.Time Beg 4.0 USR * CON.100 *
 LCL.Time_Beg_USR = PAR.Time_Beg_4_0_USR * 100;

 // LCL.Time End USR = PAR.Time End 4.0 USR * CON.100 *
 LCL.Time_End_USR = PAR.Time_End_4_0_USR * 100;

 CASE;

 // IF PAR.Date Beg USR LT PAR.Date End USR
 IF PAR.Date_Beg_USR < PAR.Date_End_USR;

 // LCL.Number 1 USR = PAR.Date End USR - PAR.Date Beg USR *DAYS
 LCL.Number_1_USR = DURATION(PAR.Date_End_USR PAR.Date_Beg_USR 'DY' 1111111 'NONE' 'N' 1);

 // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
 LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

 // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
 LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Number 1 USR = PAR.Date Beg USR - PAR.Date End USR *DAYS
 LCL.Number_1_USR = DURATION(PAR.Date_Beg_USR PAR.Date_End_USR 'DY' 1111111 'NONE' 'N' 1);

 // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
 LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

 // LCL.Time Beg USR = LCL.Time Beg USR + LCL.Usr Elapsed hours
 LCL.Time_Beg_USR = LCL.Time_Beg_USR + LCL.Usr_Elapsed_hours;

 ENDIF;

 // LCL.Time Diff Usr = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
 LCL.Time_Diff_Usr = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

 // LCL.Hours USR = LCL.Time Diff Usr *HOURS
 LCL.Hours_USR = TIMEDTLS(LCL.Time_Diff_Usr 'HR');

 // LCL.Minutes USR = LCL.Time Diff Usr *MINUTES
 LCL.Minutes_USR = TIMEDTLS(LCL.Time_Diff_Usr 'MN');

 // LCL.Wait Time 4.0 USR = LCL.Hours USR * CON.60 *
 LCL.Wait_Time_4_0_USR = LCL.Hours_USR * 60;

 // PAR.Wait Time 4.0 USR = LCL.Wait Time 4.0 USR + LCL.Minutes USR
 PAR.Wait_Time_4_0_USR = LCL.Wait_Time_4_0_USR + LCL.Minutes_USR;

 CASE;

 // IF LCL.Time Diff Usr is lt 0
 IF LCL.Time_Diff_Usr < *ZERO;

 // PAR.Wait Time 4.0 USR = CON.*ZERO - PAR.Wait Time 4.0 USR
 PAR.Wait_Time_4_0_USR = *ZERO - PAR.Wait_Time_4_0_USR;

 ENDIF;

 ENDIF;

}


