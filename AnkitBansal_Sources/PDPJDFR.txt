// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDPJDFR
// ?Date: 14.08.2025 Time: 03:29:16
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('I/C');

//?For the revaluation date, find the from and to date for the week
EXECUTE FUNCTION(RTV Period & Week      RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1293012;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Revaluation_Eff_Date);
PARAMETER(WRK.Accounting_Year_Code);
PARAMETER(WRK.Accounting_Period_Code);
PARAMETER(WRK.OM_Week);

EXECUTE FUNCTION(Rtv From Week/To Week  RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1235754;
PARAMETER(PAR.Company_Number);
PARAMETER(WRK.Accounting_Year_Code);
PARAMETER(WRK.Accounting_Period_Code);
PARAMETER(WRK.OM_Week);
PARAMETER(PAR.USR_From_Date);
PARAMETER(PAR.USR_To_Date);

//?USER: Initialize subfile control

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Name);

EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(CTL.Warehouse_Code);
PARAMETER(CTL.Warehouse_Description);

//?USER: Initialize subfile record from DBF record

//?Determine price according to units of measure
EXECUTE FUNCTION(RTV Desc,U/Ms,CWT,PrcM RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1315777;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Item_Description);
PARAMETER(WRK.Description_Line_Two);
PARAMETER(PAR.UOM_Primary);
PARAMETER(PAR.Conversion_Factor_1);
PARAMETER(PAR.Operation_Factor_1);
PARAMETER(PAR.UOM_Second);
PARAMETER(PAR.Conversion_Factor_2);
PARAMETER(PAR.Operation_Factor_2);
PARAMETER(PAR.UOM_Third);
PARAMETER(PAR.UOM_Pricing);
PARAMETER(PAR.Unit_Weight);
PARAMETER(PAR.Production_Date_Control);
PARAMETER(PAR.Catch_Weight_Status);
PARAMETER(PAR.Default_Commod_Mark_basis);
PARAMETER(PAR.Price_Method_Default);

// RCD.Unit Cost Per Pound = DB1.Unit Cost Per Pound * CON.100 *Rounded
RCD.Unit_Cost_Per_Pound = DB1.Unit_Cost_Per_Pound * 100 'H';

//?SALES PRICE FIELDS
//?Determine sales price and weight for the week of the revalue date
EXECUTE FUNCTION(Rtv Dol/Pnds for Dates RT) TYPE(RTVOBJ) FILE(OMHSTPP)          AC1315796;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.USR_Weight_Billed);
PARAMETER(RCD.Item_Code);
PARAMETER(WRK.FOB_Gross_Amount);
PARAMETER(PAR.USR_From_Date);
PARAMETER(PAR.USR_To_Date);

//?If weight is not zero then compute sales price
CASE;

// IF RCD.USR Weight Billed is Not Zeros
IF RCD.USR_Weight_Billed <> *ZERO;

//?get sales price per pound based on sales for week
// RCD.Unit Cost S = WRK.FOB Gross Amount / RCD.USR Weight Billed *Rounded
RCD.Unit_Cost_S = WRK.FOB_Gross_Amount / RCD.USR_Weight_Billed 'H';

// Compute sales price
RCD.Sales_Price_USR = ( WRK.FOB_Gross_Amount / RCD.USR_Weight_Billed 'H' ) * 100 'H';

//?If sales price by pound is less than zero then make positive
CASE;

// IF RCD.Unit Cost S LT WRK.ZERO
IF RCD.Unit_Cost_S < WRK.ZERO;

// RCD.Unit Cost S = CON.*ZERO - RCD.Unit Cost S
RCD.Unit_Cost_S = *ZERO - RCD.Unit_Cost_S;

ENDIF;

//?If sales price by CW is less than zero then make positive
CASE;

// IF RCD.Sales Price USR is Less than zero
IF RCD.Sales_Price_USR < *ZERO;

// RCD.Sales Price USR = CON.*ZERO - RCD.Sales Price USR
RCD.Sales_Price_USR = *ZERO - RCD.Sales_Price_USR;

ENDIF;

//?If weight is not zero then compute sales price
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Unit Cost S = CON.*ZERO
RCD.Unit_Cost_S = *ZERO;

// RCD.Sales Price USR = CON.*ZERO
RCD.Sales_Price_USR = *ZERO;

ENDIF;

//?Calculate sales price revaluation amount
CASE;

// IF RCD.Unit Cost S NE WRK.ZERO
IF RCD.Unit_Cost_S <> WRK.ZERO;

// WRK.Sales Dollar Margin = RCD.Unit Cost S * DB1.On Hand Weight Summary *Rounded
WRK.Sales_Dollar_Margin = RCD.Unit_Cost_S * DB1.On_Hand_Weight_Summary 'H';

// RCD.Revaluation Amount 2 USR = WRK.Sales Dollar Margin - DB1.Value of On Hand In
RCD.Revaluation_Amount_2_USR = WRK.Sales_Dollar_Margin - DB1.Value_of_On_Hand_Inventor;

ENDIF;

//?MARKET PRICE FIELDS
// WRK.Market Price USR = CON.*ZERO
WRK.Market_Price_USR = *ZERO;

// RCD.Pricing Date Used = CTL.Revaluation Eff. Date
RCD.Pricing_Date_Used = CTL.Revaluation_Eff_Date;

//?Determine market price for revaluation date
// PAR.Price Method Default = CON.MKC
PAR.Price_Method_Default = 'MKC';

// Call program CLC Price Item         XF.
CALL PROGRAM(CLC Price Item         XF) ('PDG9XFR');
PARAMETER(CTL.Company_Number);
PARAMETER(PAR.Price_Method_Default);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(99);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(WRK.Error_Return);
PARAMETER('I');

//?Set highlight of mkt reval amount/info msg
CASE;

// IF RCD.Pricing Date Used NE CTL.Revaluation Eff. Date
IF RCD.Pricing_Date_Used <> CTL.Revaluation_Eff_Date;

// AND RCD.Pricing Date Used NE WRK.ZERO
AND RCD.Pricing_Date_Used <> WRK.ZERO;

// RCD.USR Display field = CND.yes
RCD.USR_Display_field = 'Y';

//?Convert pricing date to text field with "/" delimiters
DO;

// WRK.USR Year = RCD.Pricing Date Used *YEAR
WRK.USR_Year = DATEDTLS(RCD.Pricing_Date_Used 'YR' 1111111 'NONE' 'N' 1);

// WRK.USR Current Month = RCD.Pricing Date Used *MONTH
WRK.USR_Current_Month = DATEDTLS(RCD.Pricing_Date_Used 'MO' 1111111 'NONE' 'N' 1);

// WRK.USR Period = RCD.Pricing Date Used *DAY OF MONTH
WRK.USR_Period = DATEDTLS(RCD.Pricing_Date_Used 'DM' 1111111 'NONE' 'N' 1);

// WRK.USR Accounting Year Alpha = CVTVAR(WRK.USR Year)
WRK.USR_Accounting_Year_Alpha = CVTVAR(WRK.USR_Year);

// WRK.Month USR = CVTVAR(WRK.USR Current Month)
WRK.Month_USR = CVTVAR(WRK.USR_Current_Month);

// WRK.Day USR = CVTVAR(WRK.USR Period)
WRK.Day_USR = CVTVAR(WRK.USR_Period);

// WRK.Condition Name 10 USR = CONCAT(WRK.Month USR,CON./,CON.*ZERO)
WRK.Condition_Name_10_USR = WRK.Month_USR + '/' (*ZERO);

// WRK.Condition Name 10 USR = CONCAT(WRK.Condition Name 10 USR,WRK.Day USR,CON.*ZE
WRK.Condition_Name_10_USR = WRK.Condition_Name_10_USR + WRK.Day_USR (*ZERO);

// WRK.Condition Name 10 USR = CONCAT(WRK.Condition Name 10 USR,CON./,CON.*ZERO)
WRK.Condition_Name_10_USR = WRK.Condition_Name_10_USR + '/' (*ZERO);

// WRK.Condition Name 10 USR = CONCAT(WRK.Condition Name 10 USR,WRK.USR Accounting
WRK.Condition_Name_10_USR = WRK.Condition_Name_10_USR + WRK.USR_Accounting_Year_Alpha (*ZERO);

ENDDO;

// Send information message - 'Used Pricing Date of &2 to calculate market price.'
MESSAGE(USR2352 *INFO);
MSGPARM(RCD.Market_Price_USR);
MSGPARM(WRK.Condition_Name_10_USR);

//?Set highlight of mkt reval amount/info msg
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.USR Display field = CND.no
RCD.USR_Display_field = 'N';

ENDIF;

//?Convert market price from pricing U/M to the Three Other UOM's
EXECUTE FUNCTION(Clc Convert Cost       IF) TYPE(EXCINTFUN)                     AC1122884;
PARAMETER(PAR.UOM_Primary);
PARAMETER(PAR.Conversion_Factor_1);
PARAMETER(PAR.Operation_Factor_1);
PARAMETER(PAR.UOM_Second);
PARAMETER(PAR.Conversion_Factor_2);
PARAMETER(PAR.Operation_Factor_2);
PARAMETER(PAR.UOM_Third);
PARAMETER(PAR.Unit_Price);
PARAMETER(PAR.UOM_Pricing);
PARAMETER(PAR.Cost_based_on_U_M1_S);
PARAMETER(PAR.Cost_based_on_U_M2_S);
PARAMETER(PAR.Cost_based_on_U_M3_S);

//?Convert Market Price to Pounds
CASE;

// IF PAR.Unit Weight is Greater than zero
IF PAR.Unit_Weight > *ZERO;

// Compute Mark Cost by LB
RCD.Market_Value = PAR.Cost_based_on_U_M1_S / PAR.Unit_Weight 'H';

//?Convert Market Price to Pounds
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Market Value = CON.*ZERO
RCD.Market_Value = *ZERO;

ENDIF;

//?Convert Market Price to Hundred-weight
CASE;

// IF PAR.Unit Weight is Greater than zero
IF PAR.Unit_Weight > *ZERO;

// Compute Mark Cost by CW
RCD.Market_Price_USR = ( PAR.Cost_based_on_U_M1_S / PAR.Unit_Weight 'H' ) * 100 'H';

//?Convert Market Price to Hundred-weight
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Market Price USR = CON.*ZERO
RCD.Market_Price_USR = *ZERO;

ENDIF;

//?Calculate revaluation amount
CASE;

// IF RCD.Market Value NE WRK.ZERO
IF RCD.Market_Value <> WRK.ZERO;

// WRK.Sales Dollar Margin = RCD.Market Value * RCD.On Hand Weight Summary *Rounded
WRK.Sales_Dollar_Margin = RCD.Market_Value * RCD.On_Hand_Weight_Summary 'H';

// RCD.Revaluation Amount 1 USR = WRK.Sales Dollar Margin - DB1.Value of On Hand In
RCD.Revaluation_Amount_1_USR = WRK.Sales_Dollar_Margin - DB1.Value_of_On_Hand_Inventor;

// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Revaluation Amount 1 USR = CON.*ZERO
RCD.Revaluation_Amount_1_USR = *ZERO;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

//?Process F13
CASE;

// IF CTL.*CMD key is CF13
IF CTL.*CMD_key = '13';

// Call program Zzz Revalue Inventory  UP.
CALL PROGRAM(Zzz Revalue Inventory  UP) ('PDRVLCLP');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Warehouse_Code);
PARAMETER(CTL.Revaluation_Eff_Date);
PARAMETER('M');

// Send information message - 'Revalue Inventory with market price has been submitted.'
MESSAGE(USR1973 *INFO);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?Process F14
CASE;

// IF CTL.*CMD key is CF14
IF CTL.*CMD_key = '14';

// Call program Zzz Revalue Inventory  UP.
CALL PROGRAM(Zzz Revalue Inventory  UP) ('PDRVLCLP');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Warehouse_Code);
PARAMETER(CTL.Revaluation_Eff_Date);
PARAMETER('S');

// Send information message - 'Revalue Inventory with sales price has been submitted.'
MESSAGE(USR2241 *INFO);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?USER: Process subfile record (Post-confirm)

//?Setup cost according to market,sales or override
CASE;

// IF RCD.*SFLSEL is Market Price
IF RCD.*SFLSEL = 'M';

// PAR.Unit Cost Per Pound = RCD.Market Value
PAR.Unit_Cost_Per_Pound = RCD.Market_Value;

// RCD.Revaluation Cost Type = CND.Market
RCD.Revaluation_Cost_Type = 'M';

// WRK.Pricing Date Used = RCD.Pricing Date Used
WRK.Pricing_Date_Used = RCD.Pricing_Date_Used;

//?Setup cost according to market,sales or override
// IF RCD.*SFLSEL is *Substitution
IF RCD.*SFLSEL = 'S';

// PAR.Unit Cost Per Pound = RCD.Unit Cost S
PAR.Unit_Cost_Per_Pound = RCD.Unit_Cost_S;

// RCD.Revaluation Cost Type = CND.Sales
RCD.Revaluation_Cost_Type = 'S';

// WRK.Pricing Date Used = CON.*ZERO
WRK.Pricing_Date_Used = *ZERO;

//?Setup cost according to market,sales or override
// IF RCD.Override Price USR is Entered
IF RCD.Override_Price_USR <> *ZERO;

// PGM.*Synon (17,7) work field = RCD.Override Price USR / CON.100 *Rounded
PGM.*Synon_177_work_field = RCD.Override_Price_USR / 100 'H';

// PAR.Unit Cost Per Pound = PGM.*Synon (17,7) work field
PAR.Unit_Cost_Per_Pound = PGM.*Synon_177_work_field;

// RCD.Revaluation Cost Type = CND.Override
RCD.Revaluation_Cost_Type = 'O';

// WRK.Pricing Date Used = CON.*ZERO
WRK.Pricing_Date_Used = *ZERO;

ENDIF;

//?If revaluation is selected and price selected NE 0, update price
CASE;

// IF RCD.Revaluation Cost Type is *ALL values
IF RCD.Revaluation_Cost_Type = 'O'/'S'/'M'/*BLANK;

// AND PAR.Unit Cost is Not equal to zero
AND PAR.Unit_Cost_Per_Pound <> *ZERO;

EXECUTE FUNCTION(RTV Desc,U/Ms,CWT,PrcM RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1315777;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Item_Description);
PARAMETER(WRK.Description_Line_Two);
PARAMETER(PAR.UOM_Primary);
PARAMETER(PAR.Conversion_Factor_1);
PARAMETER(PAR.Operation_Factor_1);
PARAMETER(PAR.UOM_Second);
PARAMETER(PAR.Conversion_Factor_2);
PARAMETER(PAR.Operation_Factor_2);
PARAMETER(PAR.UOM_Third);
PARAMETER(PAR.UOM_Pricing);
PARAMETER(PAR.Unit_Weight);
PARAMETER(PAR.Production_Date_Control);
PARAMETER(PAR.Catch_Weight_Status);
PARAMETER(PAR.Default_Commod_Mark_basis);
PARAMETER(PAR.Price_Method_Default);

// PAR.U/M - Transaction = PAR.U/M - Primary
PAR.UOM_Transaction = PAR.UOM_Primary;

EXECUTE FUNCTION(Upd Cost From Revalue  CH) TYPE(CHGOBJ) FILE(CAB0REP)          AC1316457;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER('A');
PARAMETER('RV');
PARAMETER(JOB.*Job_date);
PARAMETER(PAR.UOM_Transaction);
PARAMETER(PAR.Unit_Cost_Per_Pound);
PARAMETER('LB');
PARAMETER(PAR.Catch_Weight_Status);
PARAMETER(CTL.Revaluation_Eff_Date);
PARAMETER(RCD.Revaluation_Cost_Type);
PARAMETER(WRK.Pricing_Date_Used);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

