     H*OPTION(*SRCSTMT : *NODEBUGIO)
     H DFTACTGRP(*NO)
     H BNDDIR('RDB2000')
       //----------------------------------------------------------------------
       // Program To Get F0101 Records from E1 and Insert into EZ0101 Wordld
       // Programmer  :RST SoLution
       // Date : 6/18/20
       //----------------------------------------------------------------------
      //*******************************************************************************
     FEZ0101L0  UF A E           K DISK
     FEZ0401L0  UF A E           K DISK
     FEZ0116L0  UF A E           K DISK
     FEZ0111L0  UF A E           K DISK
     FEZ0115L0  UF A E           K DISK
     FEZ01151A  UF A E           K DISK
     FF55PICK4  IF A E             DISK
     FF55CONFIG1IF   E           K DISK
      // RDB Example program
      //
      // This program provides and example of the use of the RDB APIs
      //*******************************************************************************
      /COPY RDB50/RDBSRC,RDBPROTO
     D Id              S             10I 0
     D rc              S             10I 0
     D @ErrId          S              7A
     D @ErrText        S            100A
     D vBatch          S              8  0 inz
     D $$DOC           S             10  0 inz
     D vBatch1         S             15A
     D X_A7            S             30A   inz
     D X_A8            S             30A   inz
     d sFileSchema     s             30a   inz
     C     A4KY01        KLIST
     C                   KFLD                    A4AN8
     C                   KFLD                    A4ACTS
     C     A8KY01        KLIST
     C                   KFLD                    A8AN8
     C                   KFLD                    A8EFTB
     C                   KFLD                    A8ACTS
     C     A7KY01        KLIST
     C                   KFLD                    A7AN8
     C                   KFLD                    A7IDLN
     C                   KFLD                    A7ACTS
     C     A5KY01        KLIST
     C                   KFLD                    A5AN8
     C                   KFLD                    A5IDLN
     C                   KFLD                    A5RCK7
     C                   KFLD                    A5ACTS
     C     BEKY01        KLIST
     C                   KFLD                    BEAN8
     C                   KFLD                    BEIDLN
     C                   KFLD                    BERCK7
     C                   KFLD                    BEACTS
     C     A9KY01        KLIST
     C                   KFLD                    A9AN8
     C                   KFLD                    A9ACTS
      //
      //     Connect to the remote system using created in the RDB
      //     configuration screen (RDBCFG)
      /FREE
           setll *start F55CONFIG1;
           READ F55CONFIG1;
           Dow Not %EOF(F55CONFIG1);
           X_A7=%TRIML(%TRIMR(S2DL01));
           X_A8=%TRIML(%TRIMR(S2DL02));
           READ F55CONFIG1;
           EndDo;
           A4ACTS=%TIMESTAMP();                                                 //|Get a number
           A8ACTS=%TIMESTAMP();                                                 //|Get a number
           A9ACTS=%TIMESTAMP();                                                 //|Get a number
           A7ACTS=%TIMESTAMP();                                                 //|Get a number
           A5ACTS=%TIMESTAMP();                                                 //|Get a number
           BEACTS=%TIMESTAMP();                                                 //|Get a number
       Id = RdbConnect(X_A7);
       If Id >= 0;
         sFileSchema = '[' + %trimr(X_A8) + '].[F580911F]';
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where FFEV01 = ?' +
             ' and FFPID = ?');
         rc = RdbSetStr(Id: 1: '1');
         rc = RdbSetStr(Id: 2: 'R580101');
         rc = RdbPrepExec(Id);
         //     Fetch the first record of the result set that was generated with the
         //     previously executed statement.
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           SSUKID= RdbGetNum(Id:1);                                             //|Get a number
           WRITE I55PICK;                                                       //|Get a number
           rc = RdbFetchNxt(Id);
         enddo;
       EndIf;
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
           sFileSchema = '[' + %trimr(X_A8) + '].[F580101]';
           setll *start F55PICK4;
           READ F55PICK4;
           Dow Not %EOF(F55PICK4);
           vBatch=SSUKID;
           vBatch1=%CHAR(SSUKID);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where ABUKID = ?');
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 1: SSUKID);
         rc = RdbPrepExec(Id);
         //
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           A4AN8= RdbGetNum(Id:2);                                              //|Get a number
           A4TNAC= RdbGetStr(Id:3);                                             //|Get a String
           A4ALKY= RdbGetStr(Id:4);                                             //|Get a String
           A4TAX = RdbGetStr(Id:5);
           A4ALPH= RdbGetStr(Id:6);                                             //|Get a Timestamp
           A4DC   = RdbGetStr(Id:7);
           A4MCU  = RdbGetStr(Id:8);
           A4SIC  = RdbGetStr(Id:9);
           A4LNGP = RdbGetStr(Id:10);
           A4AT1 = RdbGetStr(Id:11);
           A4CM  = RdbGetStr(Id:12);
           A4TAXC= RdbGetStr(Id:13);
           A4AT2 = RdbGetStr(Id:14);
           A4AT3 = RdbGetStr(Id:15);
           A4AT4 = RdbGetStr(Id:16);
           A4AT5  = RdbGetStr(Id:17);
           A4ATP = RdbGetStr(Id:18);
           A4ATR1 = RdbGetStr(Id:19);
           A4ATPR = RdbGetStr(Id:20);
           A4AB3  = RdbGetStr(Id:21);
           A4ATE = RdbGetStr(Id:22);
           A4SBLI=RdbGetStr(Id:23);
           A4EFTB=RdbGetNum(Id:24);
           A4AN81=RdbGetNUM(Id:25);
           A4AN82 = RdbGetNum(Id:26);
           A4AN83 = RdbGetNum(Id:27);
           A4AN84 = RdbGetNum(Id:28);
           A4AN86 = RdbGetNum(Id:29);
           A4AN85 = RdbGetNum(Id:30);
           A4AC01= RdbGetStr(Id:31);
           A4AC02= RdbGetStr(Id:32);
           A4AC03= RdbGetStr(Id:33);
           A4AC04= RdbGetStr(Id:34);
           A4AC05= RdbGetStr(Id:35);
           A4AC06= RdbGetStr(Id:36);
           A4AC07= RdbGetStr(Id:37);
           A4AC08= RdbGetStr(Id:38);
           A4AC09= RdbGetStr(Id:39);
           A4AC10= RdbGetStr(Id:40);
           A4AC11= RdbGetStr(Id:41);
           A4AC12= RdbGetStr(Id:42);
           A4AC13= RdbGetStr(Id:43);
           A4AC14= RdbGetStr(Id:44);
           A4AC15= RdbGetStr(Id:45);
           A4AC16= RdbGetStr(Id:46);
           A4AC17= RdbGetStr(Id:47);
           A4AC18= RdbGetStr(Id:48);
           A4AC19= RdbGetStr(Id:49);
           A4AC20= RdbGetStr(Id:50);
           A4AC21= RdbGetStr(Id:51);
           A4AC22= RdbGetStr(Id:52);
           A4AC23= RdbGetStr(Id:53);
           A4AC24= RdbGetStr(Id:54);
           A4AC25= RdbGetStr(Id:55);
           A4AC26= RdbGetStr(Id:56);
           A4AC27= RdbGetStr(Id:57);
           A4AC28= RdbGetStr(Id:58);
           A4AC29= RdbGetStr(Id:59);
           A4AC30= RdbGetStr(Id:60);
           A4GLBA= RdbGetStr(Id:61);
           A4PTI = RdbGetNum(Id:62);
           A4PDI = RdbGetNum(Id:63);
           A4MSGA= RdbGetStr(Id:64);
           A4RMK = RdbGetStr(Id:65);
           A4TXCT = RdbGetStr(Id:66);
           A4TX2  = RdbGetStr(Id:67);
           A4ALP1 = RdbGetStr(Id:68);
           A4URCD = RdbGetStr(Id:69);
           A4URDT = RdbGetNum(Id:70);
           A4URAT = RdbGetNum(Id:71);
           A4URAB = RdbGetNum(Id:72);
           A4URRF = RdbGetStr(Id:73);
           A4USER = RdbGetStr(Id:74);
           A4PID  = RdbGetStr(Id:75);
           A4UPMJ = RdbGetNum(Id:76);
           A4JOBN = RdbGetStr(Id:77);
           A4UPMT = RdbGetNum(Id:78);
           A4PRGF= RdbGetStr(Id:79);
           A4SCCT=RdbGetStr(Id:80);
           A4TICK= RdbGetStr(Id:81);
           A4EXCG= RdbGetStr(Id:82);
           A4DUNS= RdbGetStr(Id:83);
           A4CLS1= RdbGetStr(Id:84);
           A4CLS2= RdbGetStr(Id:85);
           A4CLS3= RdbGetStr(Id:86);
           A4CLS4= RdbGetStr(Id:87);
           A4CLS5= RdbGetStr(Id:88);
           A4NOE =RdbGetNum(Id:89);
           A4GROW= RdbGetNum(Id:90);
           A4YRST=RdbGetStr(Id:91);
           A4EMPG=RdbGetStr(Id:92);
           A4ACTI= RdbGetStr(Id:93);
           A4REVR=RdbGetStr(Id:94);
           A4SYNC=RdbGetNum(Id:95);
           A4PERR=RdbGetNum(Id:96);
           A4CAAD=RdbGetNum(Id:97);
           chain A4KY01 EZ0101L0;
           if not %found(EZ0101L0);
           WRITE @A4CPEE;
           else;
           UPDATE @A4CPEE;
           endIf;
           rc = RdbFetchNxt(Id);
         enddo;
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK4;
           EndDo;
         //
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
         //
           sFileSchema = '[' + %trimr(X_A8) + '].[F580116]';
           setll *start F55PICK4;
           READ F55PICK4;
           Dow Not %EOF(F55PICK4);
           vBatch=SSUKID;
           vBatch1=%CHAR(SSUKID);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where ALUKID = ?');
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 1: SSUKID);
         rc = RdbPrepExec(Id);
         //
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           A8AN8= RdbGetNum(Id:3);                                              //|Get a number
           A8TNAC= RdbGetStr(Id:2);                                             //|Get a String
           A8EFTB= RdbGetNum(Id:4);                                             //|Get a String
           A8EFTF= RdbGetStr(Id:5);
           A8ADD1= RdbGetStr(Id:6);                                             //|Get a Timestamp
           A8ADD2 = RdbGetStr(Id:7);
           A8ADD3 = RdbGetStr(Id:8);
           A8ADD4 = RdbGetStr(Id:9);
           A8ADDZ = RdbGetStr(Id:10);
           A8CTY1= RdbGetStr(Id:11);
           A8COUN= RdbGetStr(Id:12);
           A8ADDS= RdbGetStr(Id:13);
           A8CRTE= RdbGetStr(Id:14);
           A8BKML= RdbGetStr(Id:15);
           A8CTR = RdbGetStr(Id:16);
           A8USER = RdbGetStr(Id:17);
           A8PID  = RdbGetStr(Id:18);
           A8UPMJ = RdbGetNum(Id:19);
           A8JOBN = RdbGetStr(Id:20);
           A8UPMT= RdbGetNum(Id:21);
           A8SYNC=RdbGetNum(Id:22);
           A8CAAD=RdbGetNum(Id:23);
           chain A8KY01 EZ0116L0;
           if not %found(EZ0116L0);
           WRITE @A8CPEN;
           else;
           UPDATE @A8CPEN;
           endIf;
           rc = RdbFetchNxt(Id);
         enddo;
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK4;
           EndDo;
         //
         //
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
         //
         //
           sFileSchema = '[' + %trimr(X_A8) + '].[F580111]';
           setll *start F55PICK4;
           READ F55PICK4;
           Dow Not %EOF(F55PICK4);
           vBatch=SSUKID;
           vBatch1=%CHAR(SSUKID);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where WWUKID = ?');
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 1: SSUKID);
         rc = RdbPrepExec(Id);
         //
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           A7AN8= RdbGetNum(Id:3);                                              //|Get a number
           A7TNAC= RdbGetStr(Id:2);                                             //|Get a String
           A7IDLN= RdbGetNum(Id:4);                                             //|Get a String
           A7DSSS= RdbGetNum(Id:5);
           A7MLNM = RdbGetStr(Id:6);
           A7ATTL = RdbGetStr(Id:7);
           A7REM1 = RdbGetStr(Id:8);
           A7SLNM = RdbGetStr(Id:9);
           A7ALPH= RdbGetStr(Id:10);
           A7DC  = RdbGetStr(Id:11);
           A7GNNM= RdbGetStr(Id:12);
           A7MDNM= RdbGetStr(Id:13);
           A7SRNM= RdbGetStr(Id:14);
           A7TYC = RdbGetStr(Id:15);
           A7W001 = RdbGetStr(Id:16);
           A7W002 = RdbGetStr(Id:17);
           A7W003 = RdbGetStr(Id:18);
           A7W004 = RdbGetStr(Id:19);
           A7W005 = RdbGetStr(Id:20);
           A7W006 = RdbGetStr(Id:21);
           A7W007 = RdbGetStr(Id:22);
           A7W008 = RdbGetStr(Id:23);
           A7W009 = RdbGetStr(Id:24);
           A7W010 = RdbGetStr(Id:25);
           A7MLN1 = RdbGetStr(Id:26);
           A7ALP1 = RdbGetStr(Id:27);
           A7USER = RdbGetStr(Id:28);
           A7PID  = RdbGetStr(Id:29);
           A7UPMJ = RdbGetNum(Id:30);
           A7JOBN = RdbGetStr(Id:31);
           A7UPMT= RdbGetNum(Id:32);
           A7NTYP = RdbGetStr(Id:33);
           A7NICK = RdbGetStr(Id:34);
           A7GEND = RdbGetStr(Id:35);
           A7DDAT=RdbGetNum(Id:36);
           A7DMON=RdbGetNum(Id:37);
           A7DYR =RdbGetNum(Id:38);
           A7WN01 = RdbGetStr(Id:39);
           A7WN02 = RdbGetStr(Id:40);
           A7WN03 = RdbGetStr(Id:41);
           A7WN04 = RdbGetStr(Id:42);
           A7WN05 = RdbGetStr(Id:43);
           A7WN06 = RdbGetStr(Id:44);
           A7WN07 = RdbGetStr(Id:45);
           A7WN08 = RdbGetStr(Id:46);
           A7WN09 = RdbGetStr(Id:47);
           A7WN10 = RdbGetStr(Id:48);
           A7FUCO = RdbGetStr(Id:49);
           A7PCM  = RdbGetStr(Id:50);
           A7PCF  = RdbGetStr(Id:51);
           A7ACTI = RdbGetStr(Id:52);
           A7UID  = RdbGetStr(Id:53);
           A7SYNC=RdbGetNum(Id:54);
           A7CAAD=RdbGetNum(Id:55);
           chain A7KY01 EZ0111L0;
           if not %found(EZ0111L0);
           WRITE @A7CPEK;
           else;
           UPDATE @A7CPEK;
           endIf;
           rc = RdbFetchNxt(Id);
         enddo;
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK4;
           EndDo;
         //
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
         //
           sFileSchema = '[' + %trimr(X_A8) + '].[F580115]';
           setll *start F55PICK4;
           READ F55PICK4;
           Dow Not %EOF(F55PICK4);
           vBatch=SSUKID;
           vBatch1=%CHAR(SSUKID);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where WPUKID = ?');
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 1: SSUKID);
         rc = RdbPrepExec(Id);
         //
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           A5AN8= RdbGetNum(Id:3);                                              //|Get a number
           A5IDLN= RdbGetNum(Id:4);                                             //|Get a String
           A5RCK7= RdbGetNum(Id:5);
           A5CNLN= RdbGetNum(Id:6);                                             //|Get a Timestamp
           A5PHTP = RdbGetStr(Id:7);
           A5AR1  = RdbGetStr(Id:8);
           A5PH1  = RdbGetStr(Id:9);
           A5USER = RdbGetStr(Id:10);
           A5PID  = RdbGetStr(Id:11);
           A5UPMJ = RdbGetNum(Id:12);
           A5JOBN = RdbGetStr(Id:13);
           A5UPMT= RdbGetNum(Id:14);
           A5CFNO= RdbGetNum(Id:15);
           A5GEN1 = RdbGetStr(Id:16);
           A5FALG = RdbGetStr(Id:17);
           A8SYNC=RdbGetNum(Id:18);
           A8CAAD=RdbGetNum(Id:19);
           chain A5KY01 EZ0115L0;
           if not %found(EZ0115L0);
           WRITE @A5CPEH;
           else;
           UPDATE @A5CPEH;
           endIf;
           rc = RdbFetchNxt(Id);
         enddo;
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK4;
           EndDo;
         //
         //
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
         //
           sFileSchema = '[' + %trimr(X_A8) + '].[F5801151]';
           setll *start F55PICK4;
           READ F55PICK4;
           Dow Not %EOF(F55PICK4);
           vBatch=SSUKID;
           vBatch1=%CHAR(SSUKID);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where EAUKID = ?');
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 1: SSUKID);
         rc = RdbPrepExec(Id);
         //
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           BEAN8= RdbGetNum(Id:2);                                              //|Get a number
           BEIDLN= RdbGetNum(Id:3);                                             //|Get a String
           BERCK7= RdbGetNum(Id:4);
           BETNAC= RdbGetStr(Id:5);                                             //|Get a Timestamp
           BEETP  = RdbGetStr(Id:6);
           BEEMAL = RdbGetStr(Id:7);
           BEUSER = RdbGetStr(Id:8);
           BEPID  = RdbGetStr(Id:9);
           BEUPMJ = RdbGetNum(Id:10);
           BEJOBN = RdbGetStr(Id:11);
           BEUPMT= RdbGetNum(Id:12);
           BEHIER= RdbGetNum(Id:13);
           BEEFOR = RdbGetStr(Id:14);
           BEEACG = RdbGetStr(Id:15);
           BECFNO= RdbGetNum(Id:16);
           BEGEN1 = RdbGetStr(Id:17);
           BEFALG = RdbGetStr(Id:18);
           BESYNC=RdbGetNum(Id:19);
           BECAAD=RdbGetNum(Id:20);
           chain BEKY01 EZ01151A;
           if not %found(EZ01151A);
           WRITE @BECPE5;
           else;
           UPDATE @BECPE5;
           endIf;
           rc = RdbFetchNxt(Id);
         enddo;
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK4;
           EndDo;
         //
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
           sFileSchema = '[' + %trimr(X_A8) + '].[F580401]';
           setll *start F55PICK4;
           READ F55PICK4;
           Dow Not %EOF(F55PICK4);
           vBatch=SSUKID;
           vBatch1=%CHAR(SSUKID);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where A6UKID = ?');
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 1: SSUKID);
         rc = RdbPrepExec(Id);
         //
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           A9AN8= RdbGetNum(Id:3);                                              //|Get a number
           A9TNAC= RdbGetStr(Id:2);                                             //|Get a String
           A9APC = RdbGetStr(Id:4);                                             //|Get a String
           A9MCUP= RdbGetStr(Id:5);
           A9OBAP= RdbGetStr(Id:6);                                             //|Get a Timestamp
           A9AIDP = RdbGetStr(Id:7);
           A9KCOP = RdbGetStr(Id:8);
           A9DCAP = RdbGetNum(Id:9);
           A9DTAP = RdbGetStr(Id:10);
           A9CRRP= RdbGetStr(Id:11);
           A9TXA2= RdbGetStr(Id:12);
           A9EXR2= RdbGetStr(Id:13);
           A9HDPY= RdbGetStr(Id:14);
           A9TXA3= RdbGetStr(Id:15);
           A9EXR3= RdbGetStr(Id:16);
           A9TAWH = RdbGetNum(Id:17);
           A9PCWH = RdbGetNum(Id:18);
           A9TRAP = RdbGetStr(Id:19);
           A9SCK  = RdbGetStr(Id:20);
           A9PYIN= RdbGetStr(Id:21);
           A9KFNB=RdbGetNum(Id:22);
           A9AB1 =RdbGetStr(Id:23);
           A9FLDP=RdbGetnUM(Id:24);
           A9SQNL = RdbGetStr(Id:25);
           A9CRCA = RdbGetStr(Id:26);
           A9AYPD = RdbGetNum(Id:27);
           A9APPD = RdbGetNum(Id:28);
           A9ABAM = RdbGetNum(Id:29);
           A9ABA1= RdbGetNum(Id:30);
           A9APRC= RdbGetNum(Id:31);
           A9MINO= RdbGetNum(Id:32);
           A9MAXO= RdbGetNum(Id:33);
           A9AN8R= RdbGetNum(Id:34);
           A9BADT= RdbGetStr(Id:35);
           A9CPGP= RdbGetStr(Id:36);
           A9ORTP= RdbGetStr(Id:37);
           A9INMG= RdbGetStr(Id:38);
           A9HOLD= RdbGetStr(Id:39);
           A9ROUT= RdbGetStr(Id:40);
           A9STOP= RdbGetStr(Id:41);
           A9ZON = RdbGetStr(Id:42);
           A9ANCR= RdbGetNum(Id:43);
           A9CARS= RdbGetNum(Id:44);
           A9DEL1= RdbGetStr(Id:45);
           A9DEL2= RdbGetStr(Id:46);
           A9LTDT= RdbGetNum(Id:47);
           A9FRTH= RdbGetStr(Id:48);
           A9INVC= RdbGetNum(Id:49);
           A9PLST= RdbGetStr(Id:50);
           A9WUMD= RdbGetStr(Id:51);
           A9VUMD= RdbGetStr(Id:52);
           A9PRP5= RdbGetStr(Id:53);
           A9EDPM= RdbGetStr(Id:54);
           A9EDCI= RdbGetStr(Id:55);
           A9EDII= RdbGetStr(Id:56);
           A9EDQD= RdbGetNum(Id:57);
           A9EDAD= RdbGetNum(Id:58);
           A9EDF1= RdbGetStr(Id:59);
           A9EDF2= RdbGetStr(Id:60);
           A9VI01= RdbGetStr(Id:61);
           A9VI02= RdbGetStr(Id:62);
           A9VI03= RdbGetStr(Id:63);
           A9VI04= RdbGetStr(Id:64);
           A9VI05 = RdbGetStr(Id:65);
           A9MNSC = RdbGetStr(Id:66);
           A9ATO  = RdbGetStr(Id:67);
           A9RVNT = RdbGetStr(Id:68);
           A9URCD = RdbGetStr(Id:69);
           A9URDT = RdbGetNum(Id:70);
           A9URAT = RdbGetNum(Id:71);
           A9URAB = RdbGetNum(Id:72);
           A9URAB = RdbGetNum(Id:73);
           A9USER = RdbGetStr(Id:74);
           A9PID  = RdbGetStr(Id:75);
           A9JOBN = RdbGetStr(Id:76);
           A9UPMJ = RdbGetNum(Id:77);
           A9UPMT = RdbGetNum(Id:78);
           A9ASN = RdbGetStr(Id:79);
           A9CRMD=RdbGetStr(Id:80);
           A9AVCH= RdbGetStr(Id:81);
           A9ATRL= RdbGetStr(Id:82);
           chain A9KY01 EZ0401L0;
           if not %found(EZ0401L0);
           WRITE @A9CPEQ;
           else;
           UPDATE @A9CPEQ;
           endIf;
           rc = RdbFetchNxt(Id);
         enddo;
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK4;
           EndDo;
         //
         //
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
         //
         sFileSchema = '[' + %trimr(X_A8) + '].[F580911F]';
           setll *start F55PICK4;
           READ F55PICK4;
           Dow Not %EOF(F55PICK4);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Update '+ %trimr(sFileSchema) +
             ' set FFEV01 = ? where FFUKID = ?');
         //
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 2: SSUKID);
         rc = RdbSetStr(Id: 1: '2');
         rc = RdbPrepExec(Id);
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK4;
           EndDo;
         //
         //     Close the connection to the remote system.
         RdbClose(Id);
       //
       *Inlr = *On;
      /END-FREE
