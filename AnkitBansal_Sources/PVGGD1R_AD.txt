// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PVGGD1R
// ?Date: 14.08.2025 Time: 03:52:10
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Load detail screen from DBF record

// DTL.Authorization Command Ln1 = SUBSTRING(DB1.SPA Authorization Command,CON.1,CON.50)
DTL.Authorization_Command_Ln1 = SUBSTRING(DB1.SPA_Authorization_Command:1:50);

// DTL.Authorization Command Ln2 = SUBSTRING(DB1.SPA Authorization Command,CON.51,CON.50)
DTL.Authorization_Command_Ln2 = SUBSTRING(DB1.SPA_Authorization_Command:51:50);

// DTL.Authorization Command Ln3 = SUBSTRING(DB1.SPA Authorization Command,CON.101,CON.50)
DTL.Authorization_Command_Ln3 = SUBSTRING(DB1.SPA_Authorization_Command:101:50);

// DTL.Authorization Command Ln4 = SUBSTRING(DB1.SPA Authorization Command,CON.151,CON.50)
DTL.Authorization_Command_Ln4 = SUBSTRING(DB1.SPA_Authorization_Command:151:50);

// DTL.Authorization Command Ln5 = SUBSTRING(DB1.SPA Authorization Command,CON.201,CON.50)
DTL.Authorization_Command_Ln5 = SUBSTRING(DB1.SPA_Authorization_Command:201:50);

// DTL.Authorization Command Ln6 = SUBSTRING(DB1.SPA Authorization Command,CON.251,CON.50)
DTL.Authorization_Command_Ln6 = SUBSTRING(DB1.SPA_Authorization_Command:251:50);

EXECUTE FUNCTION(RTV All Secu Encr/Decr RT) TYPE(RTVOBJ) FILE(PVCGREP)          AC2229132;
PARAMETER(DB1.SPA_Authorization_Process);
PARAMETER(DB1.SPA_Process_Environment);
PARAMETER(DTL.SPA_Encr_Decr_key);
PARAMETER(NLL.Record_Status);
PARAMETER(NLL.Create_Date_Timestamp);
PARAMETER(NLL.Create_User_ID);
PARAMETER(NLL.Create_Program_Name);
PARAMETER(NLL.Update_Date_Timestamp);
PARAMETER(NLL.Update_User_Id);
PARAMETER(NLL.Update_Program_Name);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF DTL.SPA Password is Entered
IF DTL.SPA_Password <> *BLANK;

// LCL.SPA Password = DTL.SPA Password
LCL.SPA_Password = DTL.SPA_Password;

// Call program Paswrd Encrypt/Decrypt UP.
CALL PROGRAM(Paswrd Encrypt/Decrypt UP) ('PVGIUPR');
PARAMETER('D');
PARAMETER(LCL.SPA_Password);
PARAMETER(DTL.SPA_Encr_Decr_key);
PARAMETER(DTL.SPA_Password);

ENDIF;

