// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for ICR6DFR
// ?Date: 14.08.2025 Time: 03:26:33
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('I/C');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize subfile record from DBF record

//?SEL:  Quantity
CASE;

// IF CTL.Transaction Quantity is not equal zero
IF CTL.Transaction_Quantity <> *ZERO;

CASE;

// IF RCD.Transaction Quantity is Less than zero
IF RCD.Transaction_Quantity < *ZERO;

// LCL.Transaction Quantity = RCD.Transaction Quantity * CON.-1 *
LCL.Transaction_Quantity = RCD.Transaction_Quantity * -1;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Transaction Quantity = RCD.Transaction Quantity
LCL.Transaction_Quantity = RCD.Transaction_Quantity;

ENDIF;

CASE;

// IF CTL.Transaction Quantity NE LCL.Transaction Quantity
IF CTL.Transaction_Quantity <> LCL.Transaction_Quantity;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL:  Weight
CASE;

// IF CTL.Transaction Weight is Not equal zero
IF CTL.Transaction_Weight <> *ZERO;

CASE;

// IF RCD.Transaction Weight is Less than zero
IF RCD.Transaction_Weight < *ZERO;

// LCL.Transaction Weight = RCD.Transaction Weight * CON.-1 *
LCL.Transaction_Weight = RCD.Transaction_Weight * -1;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Transaction Weight = RCD.Transaction Weight
LCL.Transaction_Weight = RCD.Transaction_Weight;

ENDIF;

CASE;

// IF CTL.Transaction Weight NE LCL.Transaction Weight
IF CTL.Transaction_Weight <> LCL.Transaction_Weight;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?If Transaction is Physical Entered or Physical Clear then omit
CASE;

// IF DB1.Inventory Trans. Type is Physical types
IF DB1.Inventory_Trans_Type = 'PC'/'P';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Exit program processing

CASE;

// IF CTL.*CMD key is *Exit
IF CTL.*CMD_key = '03';

PGM.*Return_code = 'Y2U9999';

RETURN;

ENDIF;

