// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLAFXFR
// ?Date: 14.08.2025 Time: 03:42:27
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// PAR.Unused Mile Rate 1 = CND.Equal zero
PAR.Unused_Mile_Rate_1 = *ZERO;

// PAR.Status Flag 1  Y/N = CND.No
PAR.Status_Flag_1_Y_N = 'N';

//?** Retrieve Export info from Order Header Extension   FP1101 07/10/2007
// Call program RTV ExpOrd Info for LD XF.
CALL PROGRAM(RTV ExpOrd Info for LD XF) ('PMJMXFR');
PARAMETER(LCL.Order_Number);
PARAMETER(LCL.Ship_To_Customer);
PARAMETER(LCL.Ship_To_Name);
PARAMETER(LCL.Ship_To_Address_Line_1);
PARAMETER(LCL.Ship_To_Address_Line_2);
PARAMETER(LCL.Ship_To_Address_Line_3);
PARAMETER(LCL.Ship_To_City);
PARAMETER(LCL.Ship_To_State_Code);
PARAMETER(LCL.Ship_To_Zip_Postal_Code);
PARAMETER(LCL.Carrier_Code);
PARAMETER(PAR.Load_ID);
PARAMETER(LCL.Export_Status);
PARAMETER(LCL.Export_Docs_Go_w_Driver);
PARAMETER(LCL.Air_Freight_Order);
PARAMETER(LCL.Export_USDA_Approved);
PARAMETER(LCL.Company_Number);
PARAMETER(LCL.Stop_Drop_Sequence_Number);
PARAMETER(LCL.Shipping_Line);
PARAMETER(LCL.Port_Delv_Terminal);
PARAMETER(LCL.OHE_City);
PARAMETER(LCL.OHE_Vessel_Airline);
PARAMETER(LCL.OHE_Voyage_Flight);
PARAMETER(LCL.OHE_Booking_Number);
PARAMETER(LCL.OHE_Discharge_Port_Airprt);
PARAMETER(LCL.OHE_Sail_Flight_Date);
PARAMETER(LCL.OHE_Port_Cut_Date);
PARAMETER(LCL.OHE_Arrival_Date);
PARAMETER(LCL.OHE_Late_Delivery_Code);
PARAMETER(LCL.OHE_Ship_Status);
PARAMETER(LCL.OHE_Container_Number);
PARAMETER(LCL.OHE_Comment_1);
PARAMETER(LCL.OHE_Comment_2);
PARAMETER(LCL.Port_City);
PARAMETER(LCL.Port_Address_Line_1);
PARAMETER(LCL.Port_Address_Line_2);
PARAMETER(LCL.Sail_Port_State);
PARAMETER(LCL.Port_Zip_Postal_Code);
PARAMETER(LCL.Port_Phone_Number);
PARAMETER(LCL.Port_Fax_Number);

//?** If State code is "." replace it with Sail Port state
CASE;

// IF LCL.Ship To State Code is International Accounts
IF LCL.Ship_To_State_Code = '.';

// LCL.Ship To State Code = LCL.Sail Port State
LCL.Ship_To_State_Code = LCL.Sail_Port_State;

//?** If State code is "." replace it with Sail Port state
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Last Stop Info    RT) TYPE(RTVOBJ) FILE(OMFLCPP)           AC1604222;
PARAMETER(PAR.Load_ID);
PARAMETER(NLL.Ship_To_Customer);
PARAMETER(NLL.Ship_To_Name);
PARAMETER(NLL.Ship_To_Address_Line_1);
PARAMETER(NLL.Ship_To_Address_Line_2);
PARAMETER(NLL.Ship_To_Address_Line_3);
PARAMETER(LCL.Destination_City);
PARAMETER(LCL.Ship_To_State_Code);
PARAMETER(NLL.Ship_To_Zip_Postal_Code);
PARAMETER(NLL.Salesperson_Name);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(RTV Last Stop Info     RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1604224;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Ship_To_Name);
 PARAMETER(PAR.Ship_To_Address_Line_1);
 PARAMETER(PAR.Ship_To_Address_Line_2);
 PARAMETER(PAR.Ship_To_Address_Line_3);
 PARAMETER(PAR.Ship_To_City);
 PARAMETER(PAR.Ship_To_State_Code);
 PARAMETER(PAR.Ship_To_Zip_Postal_Code);
 PARAMETER(WRK.TXT_field_not_needed);
 PARAMETER(WRK.TXT_field_not_needed);
 PARAMETER(WRK.TXT_field_not_needed);
 PARAMETER(WRK.Numeric_Field_Not_Needed);
 PARAMETER(WRK.Numeric_Field_Not_Needed);
 PARAMETER(LCL.Sales_Route_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Salesman Code      RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1284971;
 PARAMETER(LCL.Sales_Route_Code);
 PARAMETER(LCL.Salesperson_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Salesperson Name   RT) TYPE(RTVOBJ) FILE(CAAPREP)          AC1111501;
 PARAMETER(LCL.Salesperson_Code);
 PARAMETER(PAR.Salesperson_Name);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 QUIT;

}


CASE;

// IF LCL.Ship To State Code is *Blanks
IF LCL.Ship_To_State_Code = *BLANK;

// LCL.Ship To State Code = PAR.Ship To State Code
LCL.Ship_To_State_Code = PAR.Ship_To_State_Code;

ENDIF;

ENDIF;

// Execute function CVT Str to Upper Alpha US.
EXECUTE FUNCTION(CVT Str to Upper Alpha US) TYPE(EXCUSRSRC) ('PDWEUFR');
PARAMETER(LCL.Destination_City);
PARAMETER(LCL.Destination_City);
{
 PDWEUFR:  PGM PARM(&STRIN &STROUT)

 CHGVAR VAR(&FLDOUT) VALUE('%XLATE(UPTEXT &STRIN)')
}


EXECUTE FUNCTION(Rtv Destination Rates RT) TYPE(RTVOBJ) FILE(PDLECPP)           AC1634972;
PARAMETER(PAR.Carrier_Code);
PARAMETER(PAR.Ship_From_Warehouse);
PARAMETER(LCL.Destination_City);
PARAMETER(LCL.Ship_To_State_Code);
PARAMETER(LCL.Flat_Rate);
PARAMETER(LCL.CDR_Unit_of_Measure);
PARAMETER(LCL.Bulk_Rate);
PARAMETER(WRK.Export_Fresh_Flat_Amt);
PARAMETER(WRK.Export_Frozen_Flat_Amt);
PARAMETER(WRK.Double_Fuel_Surcharge_Sts);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Flat Rate is GT Zero
IF LCL.Flat_Rate > *ZERO;

//?RMC Set Status to yes if rated can be calc'd  01/23/07 TRF015
// PAR.Status Flag 1  Y/N = CND.Yes
PAR.Status_Flag_1_Y_N = 'Y';

//?RMC added chk for Unit of Meas = FL              01/23/07 TRF015
CASE;

// IF LCL.CDR Unit of Measure is Flat
IF LCL.CDR_Unit_of_Measure = 'FL';

// PAR.Unused Mile Rate 1 = LCL.Flat Rate
PAR.Unused_Mile_Rate_1 = LCL.Flat_Rate;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

//?RMC TRF015 10/31/06
//?Is there a rate for the whole state? Set city = to state, and rtv again
// LCL.Destination City = LCL.Ship To State Code
LCL.Destination_City = LCL.Ship_To_State_Code;

EXECUTE FUNCTION(Rtv Destination Rates RT) TYPE(RTVOBJ) FILE(PDLECPP)           AC1634972;
PARAMETER(PAR.Carrier_Code);
PARAMETER(PAR.Ship_From_Warehouse);
PARAMETER(LCL.Destination_City);
PARAMETER(LCL.Ship_To_State_Code);
PARAMETER(LCL.Flat_Rate);
PARAMETER(LCL.CDR_Unit_of_Measure);
PARAMETER(LCL.Bulk_Rate);
PARAMETER(WRK.Export_Fresh_Flat_Amt);
PARAMETER(WRK.Export_Frozen_Flat_Amt);
PARAMETER(WRK.Double_Fuel_Surcharge_Sts);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Flat Rate is GT Zero
IF LCL.Flat_Rate > *ZERO;

//?RMC Set Status to yes if rated can be calc'd  01/23/07 TRF015
// PAR.Status Flag 1  Y/N = CND.Yes
PAR.Status_Flag_1_Y_N = 'Y';

//?RMC added chk for Unit of Meas = FL              01/23/07 TRF015
CASE;

// IF LCL.CDR Unit of Measure is Flat
IF LCL.CDR_Unit_of_Measure = 'FL';

// PAR.Unused Mile Rate 1 = LCL.Flat Rate
PAR.Unused_Mile_Rate_1 = LCL.Flat_Rate;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Shipping Co        RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1695057;
PARAMETER(PAR.Ship_From_Warehouse);
PARAMETER(LCL.Shipping_Company);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?** 08/12/2008 LJB E00207 Use Override Total Load Miles, if enterd
//?** Replace total load miles with override miles if entered    E00207
CASE;

// IF PAR.Override Total Load Miles is Entered
IF PAR.Override_Total_Load_Miles <> *ZERO;

// WRK.Total Load Miles = PAR.Override Total Load Miles
WRK.Total_Load_Miles = PAR.Override_Total_Load_Miles;

//?** Replace total load miles with override miles if entered    E00207
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Total Load Miles = PAR.Total Load Miles
WRK.Total_Load_Miles = PAR.Total_Load_Miles;

ENDIF;

// Call program CLC Mile Rate          XF.
CALL PROGRAM(CLC Mile Rate          XF) ('PDELXFR');
PARAMETER(LCL.Shipping_Company);
PARAMETER(PAR.Ship_From_Warehouse);
PARAMETER(PAR.Carrier_Broker);
PARAMETER(WRK.Total_Load_Miles);
PARAMETER(PAR.Unused_Mile_Rate_1);
PARAMETER(LCL.Ship_To_State_Code);

CASE;

// IF PAR.Unused Mile Rate 1 is Not Zeros
IF PAR.Unused_Mile_Rate_1 <> *ZERO;

//?RMC Set Status to yes if rated can be calc'd  01/23/07 TRF015
// PAR.Status Flag 1  Y/N = CND.Yes
PAR.Status_Flag_1_Y_N = 'Y';

ENDIF;

ENDIF;

ENDIF;

