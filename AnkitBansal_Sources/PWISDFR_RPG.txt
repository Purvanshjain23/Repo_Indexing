     H/TITLE Dsp GL Interface Ln   DF  Display file
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Display file
     H* Object type   : *PGM
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISRCENT
     H* Date          : 04/13/20  Time  : 10:26:46
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPWISDFR#  CF   E             WORKSTN
     F                                     SFILE(#SFLRCD:##RR)
     F                                     INFDS(INFDS#)
      * DSP: Dsp GL Interface Ln   DF  Display file
      *
     FPLCACPL1  IF   E           K DISK
     F                                     INFDS(INFDS1)
      * RTV : M3 GL Interface Line      Retrieval index
      *
     FPLB9CPL1  IF   E           K DISK
      * RTV : M3 GL Interface Head      Retrieval index
      *
     FPLB9CPL0  UF   E           K DISK
      * UPD : M3 GL Interface Head      Update index
      *
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D INFDS1        E DS                  EXTNAME(Y2I1DSP)
      * File information data structure
      *
      * Outward parameters
     D PARC            DS            20
      * KEY : M3 GL Interface Head      Retrieval index
      * I : RST MGL Company
     D  PAWJA1                 1      2P 0
      * I : RST MGL Division
     D  PAQXCD                 3      5
      * I : RST MGL Key Value
     D  PAAIT1                 6     20
      *
     D QPLB91        E DS                  EXTNAME(PLB9CPL0)
      * UPD : M3 GL Interface Head      Update index
      * Renamed input format fields
     D  WAWJA1       E                     EXTFLD(B9WJA1)
     D  WAQXCD       E                     EXTFLD(B9QXCD)
     D  WAAIT1       E                     EXTFLD(B9AIT1)
     D  WAAJT1       E                     EXTFLD(B9AJT1)
     D  WAWGA1       E                     EXTFLD(B9WGA1)
     D  WAAKT1       E                     EXTFLD(B9AKT1)
     D  WAWIA1       E                     EXTFLD(B9WIA1)
     D  WAWHA1       E                     EXTFLD(B9WHA1)
     D  WAADDX       E                     EXTFLD(B9ADDX)
     D  WAAEDX       E                     EXTFLD(B9AEDX)
     D  WAG5SS       E                     EXTFLD(B9G5SS)
     D  WAAPDX       E                     EXTFLD(B9APDX)
     D  WAB1TM       E                     EXTFLD(B9B1TM)
     D  WAAAVN       E                     EXTFLD(B9AAVN)
     D  WAAADT       E                     EXTFLD(B9AADT)
     D  WAAMTM       E                     EXTFLD(B9AMTM)
     D  WAAJST       E                     EXTFLD(B9AJST)
     D  WAAHVN       E                     EXTFLD(B9AHVN)
     D  WAAGVN       E                     EXTFLD(B9AGVN)
     D  WAABVN       E                     EXTFLD(B9ABVN)
     D  WAABDT       E                     EXTFLD(B9ABDT)
     D  WAABTM       E                     EXTFLD(B9ABTM)
      *
     D YARDCS          DS           163
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
      /EJECT
     D XDINT           DS
      * Internal date
     D  XDINDT                 1      7  0
     D  XDINYY                 1      3  0
     D  XDINMM                 4      5  0
     D  XDINDD                 6      7  0
      /EJECT
     D XDEX            DS
      * External date
     D  XDEXDT                 1      8  0
     D  XDEY01                 1      4  0
     D  XDEX01                 1      2  0
     D  XDEX02                 3      4  0
     D  XDEY02                 5      8  0
     D  XDEX03                 5      6  0
     D  XDEX04                 7      8  0
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  ##RRMX         S              5  0
     D  WZWKA1         S                   LIKE(#2WKA1)
     D  WZWJA1         S                   LIKE(#2WJA1)
     D  WZQXCD         S                   LIKE(#2QXCD)
     D  WZAIT1         S                   LIKE(#2AIT1)
     D  ##RROK         S              5  0
     D  WKIND0         S              1
     D  ##RR           S              5  0
     D  ##RRRD         S              9  0
     D  ##SPG          S              3  0
     D  ##SLIN         S              3  0
     D  ##SFLN         S              9  0
     D  WUDCT1         S              3
     D  YL0001         S            200
     D  YL0002         S             80
     D  ZQ             S              5  0
     D  YL0003         S              1
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  CAIN81         S              1
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0DCF          S              1
     D  YL0004         S             10
     D  W0CLPG         S             10
     D  YL0005         S             50
     D  WQ0001         S             50
     D  YL0006         S              3
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZADFMF         S             10
     D  YARDC          S              1
     D  XDDTFM         S              3
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  Y#SFRC         S              4  0
     D  ZHSTRW         S              4  0
     D  ZHNDRW         S              4  0
     D  ZHRLEN         S              4  0
     D  ZHF4RW         S              4  0
     D  ZHWK1#         S              4  0
     D  YZSFDL         S              4  0
     D  ##SFPG         S              3  0
     D  W0SLM          S              9  0
     D  W0SPG          S              3  0
     D  W0RR0          S              4  0
     D  W0GRP          S              1
     D  WUJ8NB         S              3
     D  WUHONB         S              3  0
     D  WUC8CD         S              3
     D  WUG8ST         S              1
     D  WUG9ST         S             10
     D  WUEUTX         S             30
     D  WUEVTX         S             40
     D  WUHAST         S              1
     D  WQ0002         S              3
     D  WQ0003         S              3  0
     D  WQ0004         S              6
     D  WQ0005         S              3
     D  WQ0006         S              1
     D  WQ0007         S             10
     D  WQ0008         S             30
     D  WQ0009         S             40
     D  WQ0010         S              1
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  YRSW00         S              5  0
     D  YRSW01         S              5  0
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     d string_data     S            200a
     d scan_data       S             10a
     d pos             S             10i 0
     D                 DS
     D  ZAMSDA                 1    132
      * Message data for 'Exec Sequel M3 GL Interfc'
      * Company Number Alpha Usr
     D  ZA0001                 1      3
      * MGL Division
     D  ZA0002                 4      6
      * MGL Key Value
     D  ZA0003                 7     21
      * EMail Address
     D  ZA0004                22     71
     I@B9CPUK
      * M3 GL Interface Head      Update index
      * Renamed input format fields
     I              B9WJA1                      WAWJA1
     I              B9QXCD                      WAQXCD
     I              B9AIT1                      WAAIT1
     I              B9AJT1                      WAAJT1
     I              B9WGA1                      WAWGA1
     I              B9AKT1                      WAAKT1
     I              B9WIA1                      WAWIA1
     I              B9WHA1                      WAWHA1
     I              B9ADDX                      WAADDX
     I              B9AEDX                      WAAEDX
     I              B9G5SS                      WAG5SS
     I              B9APDX                      WAAPDX
     I              B9B1TM                      WAB1TM
     I              B9AAVN                      WAAAVN
     I              B9AADT                      WAAADT
     I              B9AMTM                      WAAMTM
     I              B9AJST                      WAAJST
     I              B9AHVN                      WAAHVN
     I              B9AGVN                      WAAGVN
     I              B9ABVN                      WAABVN
     I              B9ABDT                      WAABDT
     I              B9ABTM                      WAABTM
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
     C                   DO        *HIVAL
      * Initialise & load subfile page
     C                   EXSR      BAIZSF
     C                   MOVEL     'N'           W0RSF
      * Display screen until reload requested
      * Display screen
     C                   DOW       W0RSF = 'N'
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * HOME: Request subfile reload
     C   30              CAS                     FBRQRL
      * Display next SFL page
     C   27              CAS                     BBLDSF
      * Process screen input
     C                   CAS                     DAPR##
     C                   END
      *
     C                   END                                                    OD W0RSF
     C                   END                                                    OD *HIVAL
      *****************************************************************
      /EJECT
     CSR   BAIZSF        BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                   SETON                                        80
     C                   WRITE     #SFLCTL
     C                   SETOFF                                       80
      * Reset no of records in subfile
     C                   Z-ADD     *ZERO         ##RRMX               81         SETOF 81
      * Position DBF file
     C     KPOS          KLIST
     C                   KFLD                    CAWJA1                         MGL Company
     C                   KFLD                    CAQXCD                         MGL Division
     C                   KFLD                    CAAIT1                         MGL Key Value
     C                   KFLD                    CAWKA1                         MGL Line Number
      * Setup key
     C                   Z-ADD     #2WJA1        CAWJA1
     C                   MOVEL     #2QXCD        CAQXCD
     C                   MOVEL     #2AIT1        CAAIT1
     C                   Z-ADD     #2WKA1        CAWKA1
     C     KPOS          SETLL     @CACPUS
     C                   READ      @CACPUS                              8782    *82=EOF
      * Save previous selector values
     C                   MOVEL     #2WKA1        WZWKA1                         MGL Line Number
     C                   MOVEL     #2WJA1        WZWJA1                         MGL Company
     C                   MOVEL     #2QXCD        WZQXCD                         MGL Division
     C                   MOVEL     #2AIT1        WZAIT1                         MGL Key Value
      * Load subfile page
     C                   Z-ADD     0             ##RROK
     C                   EXSR      BBLDSF
      *================================================================
     CSR   BAEXIT        ENDSR
      /EJECT
     CSR   BBLDSF        BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27              DO
     C  N82              READP     @CACPUS                                90    *
     C  N82              READ      @CACPUS                                90    *
     C                   END
      *
      * Setof record error indicators
     C                   MOVEL     *ALL'0'       WKIND0
     C                   MOVEA     WKIND0        *IN(35)
      * Start at previous highest record in SFL
     C                   Z-ADD     ##RRMX        ##RR
      * Reset count of DBF records read
     C                   Z-ADD     0             ##RRRD
      * Set required pages based on *Set Cursor or *Subfile Pages
     C                   IF        W0RR0 > 0
     C     W0RR0         DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C                   ADD       1             ##SPG
     C                   END
     C                   IF        W0SPG > ##SPG
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
     C                   ELSE
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
      * Compute lines required based on pages
     C     ##SPG         MULT      ##SFPG        ##SFLN
     C                   IF        ##SFLN > 999
     C                   Z-ADD     999           ##SFLN
     C                   END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
      * Check selection fields - if fail, read next record
     C                   DOW       NOT *IN82 AND
     C                             ##RROK < ##SFLN AND
     C                             ##RRRD < W0SLM
     C                   IF        #2WJA1 = *ZERO OR
     C                             #2QXCD = ' ' OR
     C                             #2AIT1 = ' '
     C                   IF        #2WKA1 <> *ZERO
     C     CAWKA1        CABNE     #2WKA1        BB020                          MGL Line Number
     C                   END
     C                   END
     C                   IF        #2WJA1 = *ZERO
     C                   IF        #2QXCD <> ' '
     C     CAQXCD        CABNE     #2QXCD        BB020                          MGL Division
     C                   END
     C                   END
     C                   IF        #2WJA1 = *ZERO OR
     C                             #2QXCD = ' '
     C                   IF        #2AIT1 <> ' '
     C     CAAIT1        CABLT     #2AIT1        BB020                          MGL Key Value
     C                   END
     C                   END
      * Load SFL fields
     C                   EXSR      MBFL#1
     C                   MOVEL     'Y'           W0RSL
      * Allow for possible *Set Cursor processing
     C                   ADD       1             ##RR
      * USER: Initialize subfile record from DBF record
      * CASE:
      *  - c1ORc2
      *   |- c1    : CTL.MGL Company is *ZERO
      *   |- c2    : CTL.MGL Company EQ RCD.MGL Company
      *   '-
     C                   IF        #2WJA1 = 0 OR
     C                             #2WJA1 = #1WJA1
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           W0RSL                          *Record selecte
     C                   END                                                    *FI
      * CASE:
      *  - c1ORc2
      *   |- c1    : CTL.MGL Division EQ WRK.Blank Usr 3 char
      *   |- c2    : CTL.MGL Division EQ RCD.MGL Division
      *   '-
     C                   IF        #2QXCD = WUDCT1 OR
     C                             #2QXCD = #1QXCD
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           W0RSL                          *Record selecte
     C                   END                                                    *FI
      * CASE: PGM.*Record selected is *YES
      * CASE:
      *  - c1ORc2
      *   |- c1    : CTL.MGL Key Value EQ WRK.Blank Usr 3 char
      *   |- c2    : RCD.MGL Key Value GE CTL.MGL Key Value
      *   '-
     C                   IF        W0RSL = 'Y'
     C                   IF        #2AIT1 = WUDCT1 OR
     C                             #1AIT1 >= #2AIT1
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           W0RSL                          *Record selecte
     C                   END                                                    *FI
     C                   END                                                    *FI
      * CASE: PGM.*Record selected is *YES
      * CASE: CTL.Text 10 1 USR NE WRK.Blank Usr 3 char
     C                   IF        W0RSL = 'Y'
     C                   IF        #CJPTX <> WUDCT1
     C                   MOVEL     #1PLT1        YL0001                         MGL Parameter V
     C                   Z-ADD     80            YRSW00
     C                   Z-ADD     95            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00200 OR
     C                             ZQ > 00200
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0001:ZQ     YL0002                 90      #Txt USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * Eus Search for String  US - M3 GL Interface Line  * 
      * Search if Text 10 String Exist.
      *
     c                   eval      string_data = YL0002
     c                   eval      scan_data = %trim(#CJPTX)
     c                   eval      YL0003 = 'N'
     c                   eval      pos = %scan(%trim(scan_data):string_data)
     c                   if        pos > 0
     c                   eval      YL0003 = 'Y'                                 String Found
     c                   endif
      *
      * CASE: LCL.Record Found USR is Record Found
     C                   IF        YL0003 = 'Y'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           W0RSL                          *Record selecte
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   SUB       1             ##RR
      * DBF record not selected
     C     W0RSL         CABNE     'Y'           BB020
      * Convert fields to external form
     C                   EXSR      MNCV#1
      * Output to subfile
     C                   ADD       1             ##RR
     C                   ADD       1             ##RROK               81        *
      * If SFLRCD invalid, note that errors present
     C   98
     CANN99              SETON                                        99        *
     C                   WRITE     #SFLRCD
     C     BB020         TAG
      * Increment scan check count
     C                   ADD       1             ##RRRD
     C                   READ      @CACPUS                                82    *82=EOF
     C                   END                                                    OD 1 - ##SFPG
      *................................................................
     C     BB900         TAG
      *................................................................
      * If no DBF records found, display error message
      * Send message '*No data to display'
     C                   IF        ##RR = *ZERO AND
     C                             *IN82
     C                   MOVEL     'Y2U0008'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
      * Calculate top line
     C                   IF        ##RR > ##RRMX
     C     ##RROK        DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C     ##RR          SUB       ##SLIN        ##SFRC
     C                   ELSE
     C     ##RR          SUB       ##SFPG        ##SFRC
     C                   END
     C                   ADD       1             ##SFRC
     C                   Z-ADD     ##RR          ##RRMX
     C                   END
      * If scan limit reached, display error message
      * Send message '*Scan limit reached'
     C                   IF        ##RRRD >= W0SLM
     C                   MOVEL     'Y2U0017'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   ELSE
     C                   Z-ADD     0             ##RROK
     C                   END
      *================================================================
     CSR   BBEXIT        ENDSR
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen
      *================================================================
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
      * Update screen time
     C                   TIME                    ##TME
      * PUTOVR unless conditioned fields change
     C                   SETON                                        86
     C                   IF        *IN81 <> CAIN81
     C                   SETOFF                                       86
     C                   END
     C                   MOVE      *IN81         CAIN81
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #SFLCTL
      * Maintain subfile position where possible
     C                   IF        @#SFRC > *ZERO
     C                   Z-ADD     @#SFRC        ##SFRC
     C                   END
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   SETOFF                                         8392    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPR##        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
     C                   IF        YPMTFD <> ' ' AND
     C                             YPMRRN = *ZERO
     C                   GOTO      DAEXIT
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DATAG1
      * Change of position specified
     C     WZWJA1        CASNE     #2WJA1        FBRQRL
     C     WZQXCD        CASNE     #2QXCD        FBRQRL
     C     WZAIT1        CASNE     #2AIT1        FBRQRL
     C                   END
     C     DATAG1        TAG
      * USER: Process subfile control (Pre-confirm)
      * CASE: CTL.Text 10 1 USR NE LCL.Text 10 1 USR
     C                   IF        YPMTFD = ' '
     C                   IF        #CJPTX <> YL0004
     C                   MOVEL     #CJPTX        YL0004                         Text 10 1 USR
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   END                                                    *FI
     C                   END
      * Reload subfile requested
     C                   IF        YPMTFD = ' '
     C     W0RSF         CABEQ     'Y'           DAEXIT
     C                   END
      * Process subfile records
     C                   IF        *IN81
     C                   EXSR      DBPRSF
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DAEXIT
      * If error, quit processing
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   DBPRSF        BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C                   IF        YAFSCH <> *ZERO
     C     YAFSCH        CHAIN     #SFLRCD                            92        *
     C                   ELSE
     C                   READC     #SFLRCD                                92    *
     C                   END
      * Process subfile record
     C                   DOW       NOT *IN92
     C                   EXSR      DCPRSR
      * Convert fields to external form
     C                   EXSR      MNCV#1
     C                   UPDATE    #SFLRCD
     C                   READC     #SFLRCD                                92    *
     C                   END
      *================================================================
     CSR   DBEXIT        ENDSR
      /EJECT
     CSR   DCPRSR        BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                   MOVEA     WKIND0        *IN(35)
     C                   SETOFF                                       98        *
     C     YPMTFD        CABNE     *BLANKS       DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * 5=Dsp Hdr
      * CASE: RCD.*SFLSEL is *Option 5 request
      * Dsp GL Interface Hdr  DR - M3 GL Interface Head  * 
     C                   IF        #1SEL = '5' OR
     C                             #1SEL = ' 5'
     C                   CLEAR                   PARC
     C                   Z-ADD     #1WJA1        PAWJA1                         MGL Company
     C                   MOVEL(P)  #1QXCD        PAQXCD                         MGL Division
     C                   MOVEL(P)  #1AIT1        PAAIT1                         MGL Key Value
      *
     C                   CALL      'PWIXD1R'                            90      Dsp GL Interfac
     C                   PARM      *BLANK        W0RTN
     C                   PARM                    PARC                           KEY: M3 GL Inte
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PWIXD1R'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   END                                                    *FI
      * 8=Email it
      * CASE: RCD.*SFLSEL is *Option 8 request
      * PMT Enter Email       PV - STR Prompt  * 
     C                   IF        #1SEL = '8' OR
     C                             #1SEL = ' 8'
     C                   CALL      'PLLSPVR'                            90      PMT Enter Email
     C                   PARM      *BLANK        W0RTN
     C     YL0005        PARM      YL0005        WQ0001                         EMail Address
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PLLSPVR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
      * CASE: LCL.EMail Address is Entered
     C                   IF        YL0005 <> ' '
     C                   MOVEL     #1WJA1        YL0006                         Company Number
      * Setup message data for message
     C                   MOVEL     YL0006        ZA0001                         Company Number
     C                   MOVEL     #1QXCD        ZA0002                         MGL Division
     C                   MOVEL     #1AIT1        ZA0003                         MGL Key Value
     C                   MOVEL     YL0005        ZA0004                         EMail Address
      *
      * Execute message
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   CALL      'Y2EXMCC'                            90      *
     C                   PARM      *BLANK        W0RTN                          Return code
     C                   PARM      'PRK1537'     ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSGF = ' '
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   END
      *
      * Error detected during execution
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
      * R=Reprocess it
      * CASE: RCD.*SFLSEL is Payment
      * Rtv Chg Headr to Reprs RT - M3 GL Interface Head  * 
     C                   IF        #1SEL = 'P'
     C                   EXSR      SARVGN
     C                   END                                                    *FI
      * SFLRCD invalid
     C                   IF        *IN98
     C  N99              Z-ADD     ##RR          ##SFRC               99        *
      * SFLNXTCHG
     C                   SETON                                        84
     C                   ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                   SETOFF                                       84
     C                   EVAL      #1SEL = ' '
     C                   END                                                    FI *IN98
      *================================================================
     CSR   DCEXIT        ENDSR
      /EJECT
     CSR   FBRQRL        BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                   MOVEL     'Y'           W0RSF
      *================================================================
     CSR   FBEXIT        ENDSR
      /EJECT
     CSR   MBFL#1        BEGSR
      *================================================================
      * Move @CACPUS fields to subfile
      *================================================================
     C                   EVAL      #1SEL = ' '
     C                   Z-ADD     CAWGA1        #1WGA1                         MGL Status
     C                   Z-ADD     CAWHA1        #1WHA1                         MGL Text Identi
     C                   Z-ADD     CAWIA1        #1WIA1                         MGL Change Numb
     C                   Z-ADD     CAADDX        #1ADDX                         MGL Change Date
     C                   Z-ADD     CAAEDX        #1AEDX                         MGL Entry Date
     C                   MOVEL     CAAAVN        #1AAVN                         RS User Changed
     C                   Z-ADD     CAAADT        #1AADT                         RS Date Changed
     C                   Z-ADD     CAAMTM        #1AMTM                         RS Time Changed
     C                   MOVEL     CAAJST        #1AJST                         RS Record Statu
     C                   MOVEL     CAAHVN        #1AHVN                         RS Job
     C                   Z-ADD     CAWJA1        #1WJA1                         MGL Company
     C                   MOVEL     CAQXCD        #1QXCD                         MGL Division
     C                   MOVEL     CAAIT1        #1AIT1                         MGL Key Value
     C                   Z-ADD     CAWKA1        #1WKA1                         MGL Line Number
     C                   MOVEL     CAAGVN        #1AGVN                         RS Program
     C                   MOVEL     CAABVN        #1ABVN                         RS User Added
     C                   Z-ADD     CAABDT        #1ABDT                         RS Date Added
      * Clear external version also
     C                   Z-ADD     *ZERO         V1ABDT
     C                   Z-ADD     CAABTM        #1ABTM                         RS Time Added
     C                   MOVEL     CAPLT1        #1PLT1                         MGL Parameter V
     C                   EVAL      #1SEL = ' '                                  *SFLSEL
      *================================================================
     CSR   MBEXIT        ENDSR
      /EJECT
     CSR   MEIZ#2        BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                   Z-ADD     *ZERO         #2WKA1                         MGL Line Number
     C                   Z-ADD     *ZERO         #2WJA1                         MGL Company
     C                   EVAL      #2QXCD = ' '                                 MGL Division
     C                   EVAL      #2AIT1 = ' '                                 MGL Key Value
     C                   EVAL      #CJPTX = ' '                                 Text 10 1 USR
      *================================================================
     CSR   MEEXIT        ENDSR
      /EJECT
     CSR   MNCV#1        BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert RS Date Added to display format
      * Convert date
     C     1000000       ADD       #1ABDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V1ABDT
      *================================================================
     CSR   MNEXIT        ENDSR
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Rtv Chg Headr to Reprs RT - M3 GL Interface Head  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    B9WJA1                         MGL Company
     C                   KFLD                    B9QXCD                         MGL Division
     C                   KFLD                    B9AIT1                         MGL Key Value
      * Setup key
     C                   Z-ADD     #1WJA1        B9WJA1                         MGL Company
     C                   MOVEL     #1QXCD        B9QXCD                         MGL Division
     C                   MOVEL     #1AIT1        B9AIT1                         MGL Key Value
      * Establish starting position
     C     KRSSA         CHAIN     @B9CPUL                            90        *
      * Data record not found
     C   90              MOVEL     'PRK1361'     W0RTN
      * USER: Process Data record
      * Chg M3 GL Interface Hd CH - M3 GL Interface Head  * 
     C                   IF        NOT *IN90
     C                   EXSR      SBCHRC
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBCHRC        BEGSR
      *================================================================
      * Chg M3 GL Interface Hd CH - M3 GL Interface Head  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @B9CPUK
     C                   Z-ADD     B9WJA1        WAWJA1                         MGL Company
     C                   MOVEL(P)  B9QXCD        WAQXCD                         MGL Division
     C                   MOVEL(P)  B9AIT1        WAAIT1                         MGL Key Value
      *
     C     KLCHSB        KLIST
     C                   KFLD                    WAWJA1                         MGL Company
     C                   KFLD                    WAQXCD                         MGL Division
     C                   KFLD                    WAAIT1                         MGL Key Value
     C     KLCHSB        CHAIN     @B9CPUK                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PLB9CPL0'    MDACP
     C                   MOVEL     '@B9CPUK'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QPLB91        YARDCS
      * Move non-key fields to @B9CPUK
     C                   MOVEL(P)  B9AJT1        WAAJT1                         MGL Interface
     C                   Z-ADD     B9WGA1        WAWGA1                         MGL Status
     C                   MOVEL(P)  B9AKT1        WAAKT1                         MGL Description
     C                   Z-ADD     B9WIA1        WAWIA1                         MGL Change Numb
     C                   Z-ADD     B9WHA1        WAWHA1                         MGL Text Identi
     C                   Z-ADD     B9ADDX        WAADDX                         MGL Change Date
     C                   Z-ADD     B9AEDX        WAAEDX                         MGL Entry Date
     C                   MOVEL(P)  '0'           WAG5SS                         MGL ERP Process
     C                   Z-ADD     0             WAAPDX                         MGL ERP Process
     C                   Z-ADD     0             WAB1TM                         MGL ERP Process
     C                   MOVEL(P)  B9AAVN        WAAAVN                         RS User Changed
     C                   Z-ADD     B9AADT        WAAADT                         RS Date Changed
     C                   Z-ADD     B9AMTM        WAAMTM                         RS Time Changed
     C                   MOVEL(P)  B9AJST        WAAJST                         RS Record Statu
     C                   MOVEL(P)  B9AHVN        WAAHVN                         RS Job
     C                   MOVEL(P)  B9AGVN        WAAGVN                         RS Program
     C                   MOVEL(P)  B9ABVN        WAABVN                         RS User Added
     C                   Z-ADD     B9ABDT        WAABDT                         RS Date Added
     C                   Z-ADD     B9ABTM        WAABTM                         RS Time Added
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QPLB91 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * USER: Processing before Data update
      * Rtv Change Stamp      IF
     C                   MOVEL     ##USR         WAAAVN                         RS User Changed
     C                   Z-ADD     ##JDT         WAAADT                         RS Date Changed
     C                   Z-ADD     ##JTM         WAAMTM                         RS Time Changed
     C                   MOVEL     ##JOB         WAAHVN                         RS Job
     C                   MOVEL     ##PGM         WAAGVN                         RS Program
      * Set PGM.*Record Data Changed flag
     C                   IF        QPLB91 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @B9CPUK                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PLB9CPL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   XDVC2T        BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                   Z-ADD     0             XDEX01                         CC
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDINDD        XDEX02                         DD
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDINMM        XDEX02                         MM
     C                   Z-ADD     XDINDD        XDEX03                         DD
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
      * YMD format
     C                   Z-ADD     XDINYY        XDEX02                         YY
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINDD        XDEX04                         DD
     C                   END
     C                   END
      *================================================================
     CSR   XDVC2E        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      * Save sfl rrn at top of page
     C                   Z-ADD     @#SFRC        Y#SFRC
      *
      * Initialise sfl workfields
     C                   Z-ADD     8             ZHSTRW
     C                   Z-ADD     23            ZHNDRW
     C                   Z-ADD     2             ZHRLEN
     C                   Z-ADD     *ZERO         ZHF4RW
     C                   Z-ADD     *ZERO         ZHWK1#
      *
      * Resolve prompt row number on sfl
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C                   Z-ADD     ZHWK1#        YZSFDL
     C     ZHWK1#        MULT      ZHRLEN        ZHWK1#
     C     ZHCSRW        SUB       ZHWK1#        ZHF4RW
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
      * Save first changed  rrn
      *
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW AND
     C                             YPMTFD <> '*NONE'
     C                   IF        ##RR <> *ZERO
     C                   READC     #SFLRCD                                92    *
     C                   IF        NOT *IN92
     C                   Z-ADD     ##RR          YAFSCH
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   END
     C                   END
      *
      * Calculate rrn for prompt slf record
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C     ZHWK1#        ADD       Y#SFRC        YPMRRN
      *
      * Chain to sfl record
     C     YPMRRN        CHAIN     #SFLRCD                            9292      *
     C                   IF        NOT *IN92
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   ELSE
     C                   Z-ADD     *ZERO         YPMRRN
     C                   END
      *
      * Test first changed rrn/prompt rrn
     C                   IF        YAFSCH = *ZERO
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
      * If prompt rrn < first changed rrn
     C                   IF        YPMRRN <> *ZERO AND
     C                             YPMRRN < YAFSCH
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      *ZERO         YYLGCT                         # of grps
     C                   PARM      *BLANK        YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                   CALL      'Y2CPMSC'
     C                   PARM                    ##PGM
     C                   PARM      'Y'           YILE
      *
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Define work field Blank Usr 3 char
     C                   EVAL      WUDCT1 = ' '
      * Obtain default message file
     C     *DTAARA       DEFINE    PKMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAWJA1                         MGL Company
     C                   Z-ADD     *ZERO         WAWGA1                         MGL Status
     C                   Z-ADD     *ZERO         WAWIA1                         MGL Change Numb
     C                   Z-ADD     *ZERO         WAWHA1                         MGL Text Identi
     C                   Z-ADD     *ZERO         WAADDX                         MGL Change Date
     C                   Z-ADD     *ZERO         WAAEDX                         MGL Entry Date
     C                   Z-ADD     *ZERO         WAAPDX                         MGL ERP Process
     C                   Z-ADD     *ZERO         WAB1TM                         MGL ERP Process
     C                   Z-ADD     *ZERO         WAAADT                         RS Date Changed
     C                   Z-ADD     *ZERO         WAAMTM                         RS Time Changed
     C                   Z-ADD     *ZERO         WAABDT                         RS Date Added
     C                   Z-ADD     *ZERO         WAABTM                         RS Time Added
      * Define work field Oms Warehouse Code
     C                   EVAL      WUJ8NB = ' '
      * Define work field CC Company Number
     C                   Z-ADD     *ZERO         WUHONB
      * Define work field Oms SalesPerson Code
     C                   EVAL      WUC8CD = ' '
      * Define work field Oms Allow Multi-Company
     C                   EVAL      WUG8ST = ' '
      * Define work field Oms Default Printer
     C                   EVAL      WUG9ST = ' '
      * Define work field Oms Name
     C                   EVAL      WUEUTX = ' '
      * Define work field Oms System Value Alpha
     C                   EVAL      WUEVTX = ' '
      * Define work field Oms Access Denied (Y/N)
     C                   EVAL      WUHAST = ' '
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   Z-ADD     *ZEROS        YRSW00                         *Synon (5,0) wo
     C                   Z-ADD     *ZEROS        YRSW01                         *Synon (5,0) wo
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
     C                   MOVEL     'N'           W0PMT
      * Define local work field MGL Parameter Value
     C                   EVAL      YL0001 = ' '
      * Define local work field #Txt USR
     C                   EVAL      YL0002 = ' '
      * Define local work field Record Found USR
     C                   EVAL      YL0003 = ' '
      * Define local work field Text 10 1 USR
     C                   EVAL      YL0004 = ' '
      * Define local work field EMail Address
     C                   EVAL      YL0005 = ' '
      * Define local work field Company Number Alpha Usr
     C                   EVAL      YL0006 = ' '
      * Obtain system date format
     C     *DTAARA       DEFINE    Y2DTFMA       XDDTFM
     C                   IN        XDDTFM
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
     C                   Z-ADD     08            ##SFPG                         SFLPAG
     C                   Z-ADD     1             ##SFRC
      * Maximum record number
     C                   Z-ADD     *ZERO         ##RRMX
      * Scan limit
     C                   Z-ADD     000000500     W0SLM
      * Subfile pages
     C                   Z-ADD     1             W0SPG
      * Processed Subfile record
     C                   Z-ADD     0             W0RR0
      *................................................................
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
      * RMC 4/13/20 added reprocess select "P"
      * Val Application/UserRP4IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                   CALL      'PDGXXFR'                            90      Val Application
     C                   PARM      *BLANK        W0RTN
     C     WUJ8NB        PARM      *BLANK        WQ0002                         Oms Warehouse C
     C     WUHONB        PARM      *ZERO         WQ0003                         CC Company Numb
     C                   PARM      'C/S'         WQ0004                         Oms Application
     C     WUC8CD        PARM      *BLANK        WQ0005                         Oms SalesPerson
     C     WUG8ST        PARM      *BLANK        WQ0006                         Oms Allow Multi
     C     WUG9ST        PARM      *BLANK        WQ0007                         Oms Default Pri
     C     WUEUTX        PARM      *BLANK        WQ0008                         Oms Name
     C     WUEVTX        PARM      *BLANK        WQ0009                         Oms System Valu
     C     WUHAST        PARM      *BLANK        WQ0010                         Oms Access Deni
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDGXXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
      * Send message 'Access Denied for User'
     C                   IF        WUHAST = 'Y'
     C                   MOVEL     'PRK0298'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   ELSE
      * CASE: *OTHERWISE
      * Mov ApplN to CompanyRP4US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                   movel     WUEVTX        ##CMP
     C                   END                                                    *FI
     C                   Z-ADD     999999        W0SLM                          *Scan limit
      * Initialise subfile control
     C                   EXSR      MEIZ#2
      *================================================================
     CSR   ZZEXIT        ENDSR
