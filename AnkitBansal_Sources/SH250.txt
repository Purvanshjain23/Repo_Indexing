      *****************  RPG PROGRAM HEADING  ************************
     h option(*SRCSTMT:*NODEBUGIO)
      *****************  RPG PROGRAM HEADING  ************************
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      TMS---Datamart
      * PROGRAM:     SH250 - Datamart Transportation Management
      * PROGRAMMER:  Barb Gutierrez
      * CREATED:     12/09/04
      *
      * FUNCTION: This program consolidates a number of files
      *           in the OMS-Order Management System into a Transportation
      *           Management file for the Datamart.
      *
      *           This file in the Datamart will be added and or updated with
      *           each load of the Datamart.
      *
      *           This program reads a file that selects ONLY the
      *           records that have a load status of invoiced and
      *           has a job date greater than or equal to the last run of this job.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * Note:  PMAMREP Order Header Extension file is no longer just for exports.
      *        It is now one-to-one with the order header file. Every order
      *        has an Order Header Extension record.
      ****************************************************************
      * Date      Programmer
      *
      * 5/18/2005 Barb Gutierrez
      *         1.Ocean freight it not being populated in the load header but it is
      *           in the charges file.  Will retrieve it from here instead.
      *         2.Added charges of STIFUE, STATE, and REEFER to the fuel surcharge.
      *         3.Added charge WASHRE to the Shag and Wash amount.
      *         4.Added charge AIRFRT to other charges.
      *
      * 9/78/2005 Barb Gutierrez
      *           Recompile due to change of pdlyrel1 for project oms039.
      *
      * 09/08/05  Alice Brownfield
      *           Added the qty/lbs Overage and Shortage fields for Logistics KPI project
      *           TFS013.
      *
      * 09/12/05  Barb Gutierrez
      *           Fixed problem with the container type not getting updated correctly.
      *
      * 10/24/05  Barb Gutierrez
      *           Per task a051024a.  The logistics team decided they only wanted to see CB
      *           or BX loads.  We do NOT want to have any "MX" (mixed) loads.
      *           This is determined by the number of boxes.  We changed it to
      *           < 200 boxed would be a Combo load.  >= 200 boxes would be a Box load.
      *
      * 10/25/05  Barb Gutierrez
      *           There are some loads in production that are bein picked up that aren't valid
      *           loads.  It causes the program to bomb becuase the actual ship date is zero.
      *           To determine if the load is valid or not, we are putting a check in,
      *           if the scheduled ship date is zero, don't process.
      *
      * 11/15/05  LeAnne Fedor
      *           Per AMB, we will now exclude records where the Actual Ship Date is zero.
      *           Also, added logic to test for a valid date before populating any 'date
      *           format' field. If the date is not valid, we will populate the field
      *           with the "null" date----since fields defined as 'date format' cannot be
      *           zero.
      *
      * 11/15/05  Alice Brownfield
      *           Added logic to populate the new fields for Air Freight and Other Carrier Code
      *
      * 12/01/05  Alice Brownfield
      *           Added logic to populate the new fields for Shipping Region
      *                 and Dead Head amount
      *                 and Load Header Destination State Code
      *                 and fix problem with getting wrong city/state
      *
      * 12/06/05  Alice Brownfield
      *           Added logic to populate the new field for Load Flat Rate Flag
      *             ++ change all "Y" = yes, and "N" = no
      *
      * 07/20/06  Barb Gutierrez
      *           Removed the hard coding of the load container type and the on-time codes.  The
      *           OT Codes are now stored in a file.  The container type is now stored in the
      *           LH record, there is no need for the logic to determine wkboxcnt.
      *
      * 08/15/06  Alice Brownfield    ----   $charges
      *           changed logic that combines multiple charge codes into 1 code
      *             for Cognos to look for "special charge types" on some
      *             codes instead of hard-coding the actual charge code.
      *                            Air Freight and Ocean Freight charges
      *
      * 12/05/06  LeAnne Ramsey
      *           A new customer (Gordon Food Service) is demanding that all product be
      *           shipped to them from the Triumph (St. Joe) location. This has required
      *           the Synon Systems to have both an Accounting Company and a Shipping
      *           Company. So, we have:
      *           1) Changed the Sales History retrieval logic to retrieve by Load/Order
      *              instead of Company/Load/Order.
      *           2) Changed the retrieval of Export Doc Order Header records to use
      *              Company from the Order Header file instead of from the Sales History
      *              file.
      *
      * 06/27/07  Barb Gutierrez
      *           Certain information on export loads are now written to an order header
      *           extension file (PMAMREP).  Changed logic to retrieve this information
      *           on export orders.  This extension file does not contain any dollars (measures)
      *           with it.  So, since there could be multiple orders on the load we will
      *           default in the information from the first order to keep cognos from breaking.
      *           If there are multiple orders, we will default a 'Y' into the new multi export
      *           information flag.  This will at least tell the user, there could be multiple
      *           shipping lines, etc. on this load.
      *
      * 08/22/07  LeAnne Ramsey
      *           A new field "Company Organization" was added to the Datamart file.
      *           It will hold the value S=Seaboard of D=Daily's.
      *           Also added this new field as an incoming parm; the calling program will
      *           pass in either 'S' or 'D'.
      *
      * 08/30/07  LeAnne Ramsey
      *           Added additional individual Charge fields for:
      *           Payment Adjustment, Bunker Charge, Insurance Surcharge, Inland
      *           Freight Charge, Handling, Delivery Charge, Layover at Customer,
      *           Inland Freight Recharge, Rebates-Ocean Freight, Terminal Charges,
      *           Railroad Charges.
      *
      * 09/04/07  LeAnne Ramsey
      *           Recompiled in Production.
      *
      * 09/06/07  LeAnne Ramsey
      *           Replaced the outdated 'date' conversion logic with newer
      *           RPGLE date logic.
      *
      * 09/24/07  LeAnne Ramsey
      *           Since we are not yet processing "dailys", I had to tweak
      *           the logic to update the data area. We should "untweak" this
      *           when we start processing Dailys.
      *
      * 12/14/07  Barb Gutierrez
      *           When a change is made to the warehouse, the order extension file
      *           for export loads is not being updated with the changed information.
      *           The decision was made to remove the warehouse in the extension file
      *           since no one ever used it except for cognos.  We will go back to
      *           retreiving the warehouse from the load header regardless of export or
      *           domestic loads.   Scan:  bg071214
      *
      * 08/12/08  LeAnne Ramsey
      *           In the Traffic System, users can now override the Total Load Miles
      *           on a load. So, we changed our code to populate the Datamart Total Load
      *           Miles field with either:
      *             1) FJTLMI-Total Load Miles
      *             2) FJK2DT-Override Total Load Miles
      *
      * 10/21/08  LeAnne Ramsey
      *           Added more "freight charge" fields to SHP250.
      *
      * 10/31/08  LeAnne Ramsey
      *           Changed "freight charge" logic to be header/detail.
      *
      * 12/22/08  LeAnne Ramsey
      *           Recompile only. File PMDJREP-Freight Charge Reference was changed.
      *
      * 03/04/09  LeAnne Ramsey
      *           We will now populate TMLDCNTCD-Load Container Type with the value from the
      *           Load Header. We will count the "boxes" and "combos" on each load and populate
      *           new fields we added to SHP250. Steph Allen will use these new fields to do any
      *           "special" combo logic that Brad Hamilton wants in COGNOS.
      *
      * 03/26/09  LeAnne Ramsey
      *           Recompile only. File POBCCPP-Load Freight Charge was changed.
      *
      * 09/03/09  LeAnne Ramsey
      *           Recompile only. File PMAMREP-Order Header Extension was changed.
      *
      * 03/02/10  LeAnne Ramsey
      *           Recompile only. The Synon folks changed file OPBGWKP-Order Detail for
      *           Phase 1 of the Age Code project.
      *
      * 05/12/10  LeAnne Ramsey  (E742: Excess freight)
      *           Added many Load Date/Time fields.
      *           Added 2 Yes/No Flags: Pallet Load and Slip Sheet Load
      *           Removed TMLDRTCD-Load Return Code. It was never populated and no one remembers
      *                   what this was going to be!
      *           Replaced TMHOFL-Holdover Flag with TMHORSCD-Hold Over Reason Code..and new logic
      *                   to populate it.
      *           Added 2 fields/logic to SHP252-Load Freight Charges:
      *                 1) Responsible Company Number
      *                 2) Responsible Company Flag
      *
      * 05/25/10  LeAnne Ramsey
      *           Added a *USA Date Format field for all date fields.
      *
      * 06/01/10  LeAnne Ramsey
      *           Add code to populate new fields:
      *              Last Combo Production Date
      *              Last Combo Production Time
      *
      * 06/08/10  LeAnne Ramsey
      *           1)The 4A field BCCFAA-Carrier Code in POBCCPl1-Load Freight Charge is
      *             being moved into the Datamart 3A field LCCFCD-Carrier Code in
      *             SHP252-Load Freight Charges. The 'move' is truncating the value; so, we
      *             will switch the code to 'movel'.
      *           2) Changed existing "Time" fields from 6,0 to Time Format.
      *           3) Added many more date/time fields.
      *           4) Removed Actual Departure Date/Time.
      *
      * 10/11/11  LeAnne Ramsey (C1765)
      *           Paul Soggard created C1765....I think it should have been E1765.
      *           These changes are required to address changes by Lara Buser and
      *           the users.
      *            A) TMPRTDELT-Port Delivery Terminal
      *               Remove the logic in $directmap that populates this field
      *               with FJOANA from OMFJCPMA-Load Header; initialize to blank.
      *               TMPRTDELT is only valid for Export loads..so, we will only
      *               keep the existing logic in $loadext.
      *            B) TMOCNCRCD/TMOCNCNM-Ocean Carrier Code/Name
      *               These will now be blank for non-export loads...instead of
      *               N/A and Unknown.
      *            C) TMTRTYPCD/TMTRTYPDS-Trailer Type/Description
      *               Bo has asked Laura Buser to add logic to clear PDLYREP-Trailer
      *               so that it always holds only the trailers that are currently
      *               intransit. We were using this file in Cognos to retrieve
      *               R=Reefer and T=Tanker. But, both Bo and Steph Allen say that no one
      *               is using Reefer/Tanker for anything/anywhere. Steph asked me to
      *               comment out this code......just in case they want it back.
      *            D) TMOTCRCD-Other Carrier Code
      *               In $loadext, we populate this field with the first 4 characters
      *               of FJCNTN-Container Number from OMFJCPMA-Load Header. At one time,
      *               the users were putting the land carrier used on overseas export
      *               loads in this field. Apparently, per Bo, the users no longer
      *               put the "carrier" in these 1st four positions; they put the
      *               "container alpha code prefix" in these positions since the users
      *               now have both "land" and "ocean" carrier fields.
      *               Steph Allen has asked me to leave the code in this program; she
      *               will "remove" the Other Carrier Code from the dimension in the cube.
      *
      * 03/21/12  LeAnne Ramsey (E1981)
      *           Added additional individual Charge Amount fields for:
      *             DETCO -Dentention@Cust-Warehouse Chrg (TMDETWHSAM)
      *             DETCON-Detention-Container, Co Shared (TMDETCONAM) (This one was new.)
      *             DETSLS-Detention@Cust-Company Shared  (TMDETSLSAM)
      *             DMILE -Detour Mile                    (TMDMILEAM)
      *             PASHR -Company Shared Charge          (TMPASHRAM)
      *             PIER  -Pier Pass                      (TMPIERAM)
      *             PORTCK-Port Check                     (TMPORTCKAM)
      *           I did not add one for POOLED since it was created on 3/8/11 but
      *           no loads have ever had it.
      *
      * 11/12/12  LeAnne Ramsey (E2322)
      *           Added a new file: SHP253-Load/Stops for Doug/John to handle a request from
      *           Bret Getzel for New Weight by Stop.
      *
      * 02/07/13  LeAnne Ramsey (E2437)
      *           Added Requested Delivery Date to SHP250-Load Information.
      *
      * 02/20/13  LeAnne Ramsey (E2470)
      *           Added to SHP253-Load Detail:
      *             Actual Arrival Date, Time, TimeStamp
      *             Appointment Date, Time, Timestamp
      *
      * 02/26/13  LeAnne Ramsey (E2470)
      *           Added to SHP253-Load Detail:
      *             Carrier Appointment Date, Time, Timestamp
      *
      * 03/28/13  LeAnne Ramsey (E2526)
      *           While working with Janelle Gulotta on a new Cognos Analysis, we
      *           realized that the changes made on 12/14/07 for the Warehouse
      *           inadvertantly left in the Fresh/Frozen logic based on the
      *           Warehouse in the Order Header Extension file.
      *           I removed that Fresh/Frozen logic.
      *
      * 03/29/13  LeAnne Ramsey (E2526)
      *           To be able to extract the Export loads that Janelle needed, we
      *           had to add a new field to SHP250:
      *                  TMEXBOOKFL-Export Seaboard Bookings Flag
      *           It will be Yes when/if any Stop on the Load (SHP253) is for
      *           a Customer that has a Customer Type (SHP203) of EX=Export
      *           Seaboard Bookings.
      *
      * 04/25/13  LeAnne Ramsey (E2526)
      *           Janelle Gulotta is having us add another field to SHP250:
      *                  TMDISCPRT-Discharge Port/Airport
      *           If/when a Load had multiple Stops, we will use the value from the
      *           first stop record:
      *                   File PMAMREL2-Order Header Extension
      *                   Subroutine $loadext
      *
      * 05/16/13  LeAnne Ramsey (E2597)
      *           Adam Gross wants From/To Warehouses for Transfer Orders in SHP253.
      *           The fields will be blank for Sales Orders.
      *           Up until this point, I was not writing Transfer Orders to SHP253;
      *           now, I will.
      *
      * 04/09/14  LeAnne Ramsey (E3073)
      *           Added Port City and Port State to SHP250-Load for the
      *           Transportation folkds.
      *
      * 04/16/14  LeAnne Ramsey (E3084)
      *           Added 3 new fields to SHP253-Load Stops:
      *             LSLDOTFL   Load Detail On Time Flag
      *             LSOTADRS   On Time Additional Reason
      *             LSOTADRSDS On Time Additional Reason Description
      *
      * 05/21/14  LeAnne Ramsey (E3121)
      *           Added 2 new fields to SHP250-Load Information:
      *             TMTOFRAM   Total Freight Amount
      *             TMINTOFRAM Include in Total Freight Amount
      *
      * 07/28/14  LeAnne Ramsey (E3217)
      *           Added 1 new field to SHP250-Load Information:
      *             TMSCSEQNO  Schedule Sequence Number
      *
      * 08/04/14  LeAnne Ramsey (E3280)
      *           Added 1 new field to SHP250-Load Information:
      *             TMPARLDFL  Partial Load Flag
      *
      * 08/13/14  LeAnne Ramsey (E3317)
      *           Changed logic to always delete/rebuild loads for the
      *           previous 30 days....instead of 1 day.
      *           (see entry parm XXLSTPRDT)
      *
      * 08/25/14  LeAnne Ramsey (E3355)
      *           Added 2 new fields to SHP250-Load Information:
      *             TMTRCARCD  Transload Carrier Code
      *             TMTRCARNM  Transload Carrier Name
      *
      * 07/23/15  Lara Buser  (E004044)
      *           Recompile Only. Field added to SHP203-Datamart: Customer
      *               Field vs. In-House Managed Flag (CUMANAGED)
      *
      * 12/07/16  Rose Centonze
      *           set lsldotfl to Y if the omflcpp on time flag is Y/Blank, else it will be no.
      *
      * 03/07/17  Lara Buser    (E009492)
      *           Added to SHP253-Load Detail:
      *             Original Appointment Date, Time, Timestamp
      *             Populated from PMAMREP Order Header Extension. This will contain the
      *             Original Appointment Date when the carrier makes an appointment with
      *             a customer at a stop. It will not be changed after it is entered.
      *             Comes from Mercury Gate.
      *
      * 08/07/19  Danny Nguyen (R15161) - Export Load AS400 Updates - WI 318
      *           DBF Change on Order Header Extsn (PMAMREP) file. Changed:
      *           OHE Voyage/Flight from 5.0 to 15A.
      *           OHE Booking Number from 12A to 15A.
      *           Added: OHE Genset Number 15A.
      *           No logic change. Recompile only.
      *
      * 08/07/19  Brad Baden  E15352 - Datamart Load Information change
      *           DBF change on Datamart: Load Information file SHP250.
      *           Adding code to populate the new fields in file SHP250
      *           with Load Plan Start Dates and Load Plan Start Time
      *           from the Load Header file OMFJCPMA.
      *
      * 11/19/19  Brad Baden  E15814 - Transportation Extract - Source from Warehouse
      *           Show if load has origins of "External", "Internal",
      *           or "Mixed".
      *
      * 10/09/20  Danny Nguyen (R16637) - AS400 Consignee Block - WI 423
      *           DBF Change on Export Doc Order Hdr (PDMRREP) file. Recompile only.
      *
      *  7/14/21  Brad Baden (HD80179)  - [ME] Add Requested Delivery Date/Time
      *           - Add Requested Delivery Date/Time fields to file SHP250 and
      *             and SHP253. Modify program SH250 to retrieve the values
      *             from the Order Header file.
      *           - Populate Load Plan Time based upon Seq# for company 960
      *           - Populate Parent Customer Name in Datamart: Customer file SHP203.
      *
      * 10/07/21  Danny Nguyen (W82752) - DBFC on SHP253. Added 2 fields:
      *             LSSRCD - Sales Route Code
      *             LSSLSRTNM - Sales Route Name
      *           Added Sales Route (PDJEREP) file to get Sales Route Name &
      *           populate LSSLSRTNM. Populate LSSRCD from Order Header TRG file.
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fcavllsl0  if   e           k disk
      *  Synon values list
      *
      *
     Fcaadrel1  if   e           k disk
      *   Warehouse Master
      *
      *
     Fcaeorel1  if   e           k disk
      *   Company/customer
      *
      *
     Fomfjcpma  if   e           k disk
      *  OMS Load header
      *  (logical contains only Invoiced records)
      *
      *
     Fomffrel0  if   e           k disk
      *   Carrier Master
      *
      *
     Fomflcpl2  if   e           k disk
      *   OMS Load Detail
      *
      *
     Fomhstpn8  if   e           k disk
      *   OMS Sales History
      *
      *
     Fopbfcpl1  if   e           k disk
      *   OMS Order header
      *
      *
     Fopbgwkl1  if   e           k disk
      *   OMS Order detail
      *
      *
82752Fpdjerel1  if   e           k disk
82752 *   Sales Route
      *
      *
     Fpdkgrel2  if   e           k disk
      *    Shipping Region/State
      *
      *
     Fpdlcrel0  if   e           k disk
      *    Shipping Line/Port
      *
      *
     Fpdmrrel1  if   e           k disk
      *    Export Document
      *
      *
     Fpmamrel2  if   e           k disk
      *    Order Header Extension
      *
      *
     Fpmdjrel1  if   e           k disk
      *    Freight Charge Reference
      *
      *
     Fpmdkcpl1  if   e           k disk
      *  Load freight charge reference
      *
      *
     Fpoa9rel1  if   e           k disk
      *    Freight Charge (master)
      *
      *
     Fpobccpl1  if   e           k disk
      *    Load Freight Charge
      *
      *
     Fppb5rel1  if   e           k disk
      *    On Time Reason Codes
      *
      *
     Fshp203    if   e           k disk
      *    Datamart Sales: Customer
      *
      *
     Fshp250    uf a e           k disk
      *    Datamart TMS: Load Information
      *
      *
     Fshp251    o    e           k disk
      *    Datamart TMS: Freight Charge Codes
      *
      *
     Fshp252    uf a e           k disk
      *    Datamart TMS: Load Freight Charges
      *
      *
     Fshp253    uf a e           k disk
      *    Datamart TMS: Load Stops
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
     d external        c                   'E'
     d internal        c                   'I'
     d mixed           c                   'M'
      *
     D upper           c                   'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
     D lower           c                   'abcdefghijklmnopqrstuvwxyz'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
     D arrsku          s              7p 0 dim(1000)
      *
      * Array indexes
      *
     D x               s              3  0
     D y               s              3  0
      *
      ****************************************************************
      *  Standalone fields
      ****************************************************************
      *
      * Workfields
     D wkcuno          s                   like(lsshcuno)
82752D wkslsrtecde     s                   like(lssrcd)
82752D wkslsrtenme     s                   like(lsslsrtnm)
      *
      *
      * Workfields for date manipulation
      *
     D wknulldt        s                   like(tmacshdt) inz(D'0001-01-01')
     D wkcymdiso       s               D   datfmt(*iso)
     D wksysdt         s              8  0
     D wkprcdt         s                   like(f4gndt)
     D wkccyymmdd      s              8  0
      *
     D wkdoctyp        s              1    inz('H')
     D wkortypcd       s              2
     D wktotypcd       s              2
     D wkputx          s                   like(mrputx)
     D wkshovqt        s             11  2
     D wkloadid        s                   like(fjrmnb)                         Load ID
     D wkwhsloc        s              3                                         Warehouse Loc E,I,M
     D wkstop          s                   like(flrvnb)                         Stop Number
     D wkreturn        s              7                                         Synon return code
     D wkorder#        s                   like(flc4nb)                         Order number
      *
     D wkaftm          s              6  0                                      Time 6.0
     D wkstopdrop      s                   like(flrvnb)                         Requested Delv Date
     D wkrqdldt        s                   like(tmrqdldt)                       Requested Delv Date
     D wkrqdldtmd      s                   like(tmrqdldtmd)                     Requested Delv Date
     D wk80rqdldt      s                   like(tm80rqdldt)                     Requested Delv Date
     D wkrqdltm        s                   like(tmrqdltm)                       Requested Delv Time
     D wkrqdlstmp      s                   like(lsrqdlstmp)                     Requested Delv TmStm
      *
     D first           s              1
     D next            s              1
     D multrec         s              1  0
      *
      *
      * Parm fields
      *
     D xxcorg          s                   like(tmcorg)
     D xxlstprdt       s              8
      *
     D xxperiod        s                   like(tmacpe)
     D xxquarter       s                   like(tmacqr)
      *
     D xxcocd          s              3  0
     D xxreturn        s              7
      *
     D xxloadid        s              7  0
     D xxloadsts       s              1
     D xxgrwgt         s             11  2
     D xxjulian        s              5  0
     D xxcyymmdd       s              7  0
     D xxcyymmddo      s              7  0
     D xxhpscdyr       s                   like(tmacyr)
     D xxhpscdwk       s                   like(tmacwk)
     D xxhpspicdt      s              5p 0
     D xxcdwk          s                   like(tmacwk)
     D xxcdyr          s                   like(tmacyr)
     D xxday           s              1
     D xxacyr          s                   like(tmcdyr)
     D xxacpe          s                   like(tmacpe)
     D xxacwk          s                   like(tmacwk)
     D xxname          s              9
     D xxabbrev        s              4
      *
      ****************************************************************
      * Data Structures
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      **********************************************************************************************
      * Mainline
      **********************************************************************************************
      *
      * Process records in the OMS Load Header file where:
      *   1) Job date is equal to/greater than todays date
      *   2) Scheduled ship date is not zero (ie: there are orders on this load)
      *   3) Actual ship date is not zero
      * Note: The logical file selects only Invoiced records.
      *
      *
     C     wkprcdt       setll     omfjcpma
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      omfjcpma                               90
     C                   if        *in90 = *off and                             If not EOF
     C                             fjaodt <> 0  and
     C                             fjf9dt <> 0
      *
      * If there is already a record in SHP250 for this load,
      * delete it as well as its Load Freight Charges and Load Stops so that
      * we can rewrite.
      *
     C     fjrmnb        chain     shp250                             92
     C                   if        *in92 = *off
     C                   delete    tmrec
     C                   exsr      $dlt252
     C                   exsr      $dlt253
     C                   exsr      $clear
     C                   endif
      *
      * Populate fields that are a direct map from the OMS Load header file.
      *
     C                   exsr      $directmap
      *
      * Dates and Times (with special logic for a calculated Final Date/Time)
      *
     C                   exsr      $dates
     C                   exsr      $times
     C                   exsr      $final
      *
      * Retrieve Load Header and Load Detail Information
      *
     C                   exsr      $loadhdr
     C                   exsr      $loaddet
      *
      * Retrieve Load Freight Charge Information
      *
     C                   exsr      $charges
      *
      * Determine Fresh/frozen based on the Ship From Warehouse
      *
     C     fjvpcd        chain     caadrel1                           92
     C                   if        *in92 = *off
     C                   move      adwpst        tmfffl
     C                   else
     C                   move      'FZ'          tmfffl
     C                   endif
      *
      * If this is an Export Order
      *
     C                   if        fju2st = yes
     C                   exsr      $loadext
     C                   endif
      *
      * Write the Datamart Load record ONLY if there is net weight. . .
      * If you write a Load record, then write the Load Freight Charge recs.
      * If you do not write a Load record, go delete any/all Load/Stop records
      *    that you may have written in the Load Detail subroutine.
      *
     C                   if        tmnetwt <> 0
     C                   exsr      $wrt250
     C                   exsr      $wrt252
     C                   else
     C                   exsr      $dlt253
     C                   endif
      *
     C                   exsr      $clear
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      *
      * We process Seaboard on the first call and Dailys on the second call.
      * If this is Seaboard, we want to pass back out an updated "last processed
      * date". This new date will be 30 days previous to the system date.
      * This will ensure we reprocess all loads for the last 30 days....so that
      * the users have more time to get load data entered into the system...and
      * changed long after the load has shipped!!! (Note: We changed this to 30
      * days on August 13, 2014. Prior to that, it was 1 day!)
      *
      * Put this back to "'D'" when we start processing Dailys.
     C****************   if        xxcorg = 'D'
     C                   if        xxcorg = 'S'
     C     *mdy          movel     udate         wkcymdiso
     C     wkcymdiso     subdur    30:*days      wkcymdiso
     C                   movel     wkcymdiso     wksysdt
     C                   movel     wksysdt       xxlstprdt
     C                   endif
      *
     C                   seton                                        lr
      /EJECT
      *--------------------------------------------------------------------------------
      * Write or update the record
      *--------------------------------------------------------------------------------
      *
     C     $wrt250       begsr
      *
      * No matter what we moved into the Country Code, if the Export Status is "N", default
      * USA into the country.
      *
     C                   if        tmexfl = no
     C                   movel     'USA'         tmstcntcd
     C                   endif
      *
      * Determine what type of load we have as far as orders go.
      *  MO=Mixed Orders
      *  TO=Transfer Orders only
      *  CO=Customer Orders only
      *
     C                   select
      *    Mixed/Transfer
     C                   when      wktotypcd <> *blank
     C                   if        wkortypcd <> *blank
     C                   movel     'MO'          tmordtypcd
     C                   else
     C                   movel     'TO'          tmordtypcd
     C                   endif
      *       Customer
     C                   when      wkortypcd <> *blank
     C                   movel     'CO'          tmordtypcd
     C                   endsl
      *
      * Setup:
      *   1) SKU count
      *   2) Company organization
      *
     C                   eval      tmskuct = y
     C                   move      xxcorg        tmcorg
      *
      * Calc Total Freight Amount:
      *     Rated Freight + the Freight Charges that are Included in Total Freight
      *     (Just FYI: Every charge except Shag and Wash are included. You can see
      *                the "include flag" in Datamart file SHP251-Freight Charge Codes.)
      *
     C     tmrtfram      add       tmintofram    tmtofram
      *
      * Write record
     C                   write     tmrec
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------
      * Write Freight Charge records for the load.
      *--------------------------------------------------------------------------------
      *
     C     $wrt252       begsr
      *
      * Retrieve the charges from the Load Freight Charges file and write
      * a Datamart Load Freight Charges record for each one.
      *
     C     fjrmnb        setll     pobccpl1
      *
     C                   dou       *in93 = *on                                  Do charges
     C     fjrmnb        reade     pobccpl1                               93
     C                   if        *in93 = *off                                 If not eof
      *
     C                   move      xxcorg        lccorg
     C                   z-add     bcrmnb        lcloadno
     C                   z-add     bcepny        lcseqno
     C                   move      bccdaa        lcfccd
     C                   movel(p)  bccfaa        lccrcd
     C                   z-add     bcc5vl        lcfcam
     C                   move      no            lcrscofl
      *
      * Retrieve Responsible Company when the Freight Charge is 'excessive':
      *  1) Include in Actual Freight = No
      *  2) Include in Total Freight  = Yes
      *
     C                   if        bckbsx = no and                              If excessive frt
     C                             bckssx = yes
     C     key07         chain     pmdkcpl1                           92
     C                   if        *in92 = *off                                 If hit
     C                   z-add     dkkbny        lcrscono
     C                   move      yes           lcrscofl
     C                   endif                                                  If hit
     C                   endif                                                  If excessive frt
      *
     C                   write     lcrec
     C                   clear                   lcrec
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do charges
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------
      * Write/Update the Load/Stop/Customer record
      *--------------------------------------------------------------------------------
      *
     C     $wrtupd253    begsr
      *
      * Load Requested Delivery Dates/Times from work fields
      *
     c                   eval      lsrqdldt   = wkrqdldt
     c                   eval      lsrqdldtmd = wkrqdldtmd
     c                   eval      ls80rqdldt = wk80rqdldt
     c                   eval      lsrqdltm   = wkrqdltm
     c                   eval      lsrqdlstmp = wkrqdlstmp
      *
      * W82752 - Populate Sales Route Code & Name.
82752c                   eval      lssrcd = wkslsrtecde
82752c                   eval      lsslsrtnm = wkslsrtenme
      *
      * See if there is already a Load/Stop record for this:
      *   1) Organization
      *   2) Load
      *   3) Stop
      *   4) ShipTo Customer
      *
     C                   z-add     bebkc7        wkcuno
      *
     C     key09         chain     shp253                             92
     C                   if        *in92 = *off                                 If hit
      *
     C                   if        bejncd = 'TR'
     C                   add       omatwg        lsnetwt
     C                   else
     C                   add       f4bywg        lsnetwt
     C                   endif
      *
     C                   update    lsrec
     C                   else
      *
     C                   move      xxcorg        lscorg
     C                   z-add     bebkc7        lsshcuno
     C                   z-add     fjrmnb        lsloadno
     C                   z-add     flrvnb        lsstop
      *
     C                   select
     C                   when      bejncd = 'TR'
     C                   z-add     omatwg        lsnetwt
     C                   move      omajcd        lsfrwhcd
     C     key11         chain     caeorel1                           92
     C                   if        *in92 = *off
     C                   move      eoajcd        lstowhcd
     C                   endif
     C                   other
      *
     C                   move      *blank        lstowhcd
     C                   move      *blank        lsfrwhcd
     C                   z-add     f4bywg        lsnetwt
      *
      ** 11/19/19  Brad Baden  E15814 - Transportation Extract - Source from Warehouse
      ** Retrieve a calculated Warehouse Location of E, I, or M
      *
     c                   call      'PUO5XFR'
     c                   parm      *blanks       wkreturn
     c                   parm      fjrmnb        wkloadid
     c                   parm      flrvnb        wkstop
     c                   parm      flc4nb        wkorder#
     c                   parm      *blanks       wkwhsloc
      *
     c                   select
     c                   when      wkwhsloc = external
     c                   eval      lsfrwhcd = 'EXT'
      *
     c                   when      wkwhsloc = internal
     c                   eval      lsfrwhcd = 'INT'
      *
     c                   when      wkwhsloc = mixed
     c                   eval      lsfrwhcd = 'MIX'
     c                   endsl
     C                   endsl
      *
      * Appointment Confirm Date/Time (aka: Appointment Date/Time)
      *
     C                   test(t)                 flactm                 92
     C                   if        *in92 = *off                                 If OK appt time
     C                   move      flactm        lsaptm
     C                   else
     C                   move      *loval        lsaptm
     C                   endif                                                  If OK appt time
      *
     C     *cymd         test(d)                 flkfdt                 92
     C                   if        *in92 = *off                                 If OK appt date
     C     *cymd         move      flkfdt        lsapdt
     C                   move      lsapdt        lsapdtmd
     C     *iso          move      lsapdt        ls80apdt
     C                   else
     C                   z-add     0             ls80apdt
     C                   move      *loval        lsapdt
     C                   move      *loval        lsapdtmd
     C                   endif                                                  If OK appt date
      *
      * Move date/time to the new Timestamp field
      *
     C                   movel     lsapdt        lsapstmp
     C                   move      lsaptm        lsapstmp
      *
      *
      * Carrier Appointment Date/Time
      *
     C                   test(t)                 flb3tm                 92
     C                   if        *in92 = *off                                 If OK carrier time
     C                   move      flb3tm        lscraptm
     C                   else
     C                   move      *loval        lscraptm
     C                   endif                                                  If OK carrier time
      *
     C     *cymd         test(d)                 fln7dt                 92
     C                   if        *in92 = *off                                 If OK carrier date
     C     *cymd         move      fln7dt        lscrapdt
     C                   move      lscrapdt      lscrapdtmd
     C     *iso          move      lscrapdt      ls80crapdt
     C                   else
     C                   z-add     0             ls80crapdt
     C                   move      *loval        lscrapdt
     C                   move      *loval        lscrapdtmd
     C                   endif                                                  If OK carrier date
      *
      * Move date/time to the new Timestamp field
      *
     C                   movel     lscrapdt      lscrapstmp
     C                   move      lscraptm      lscrapstmp
      *
      * Actual Arrival Date/Time (aka: Actual Delivery Date/Time)
      *
     C                   test(t)                 flagtm                 92
     C                   if        *in92 = *off                                 If OK time
     C                   move      flagtm        lsacartm
     C                   else
     C                   move      *loval        lsacartm
     C                   endif                                                  If OK time
      *
     C     *cymd         test(d)                 flejdt                 92
     C                   if        *in92 = *off                                 If OK date
     C     *cymd         move      flejdt        lsacardt
     C                   move      lsacardt      lsacardtmd
     C     *iso          move      lsacardt      ls80acardt
     C                   else
     C                   z-add     0             ls80acardt
     C                   move      *loval        lsacardt
     C                   move      *loval        lsacardtmd
     C                   endif                                                  If OK date
      *
      * Move date/time to the new Timestamp field
     C                   movel     lsacardt      lsacarstmp
     C                   move      lsacartm      lsacarstmp
      *
      *
      * Retrieve Customer Type (aka: Sales Channel) from the Datamart Customer file
      * using a key of: ShipTO Customer
      *                 Organization
      *
     C     key10         chain     shp203                             92
     C                   if        *in92 = *off
     C                   move      cucutycd      lscutycd
     C                   move      cucutyds      lscutyds
     C                   else
     C                   move      *blank        lscutycd
     C                   move      *blank        lscutyds
     C                   endif
      *
      * If any Customer on any stop on this Load has a Customer Type of ES,
      * set the Export Seaboard Booking Flag to Yes.
      *
     C                   if        lscutycd = 'ES'
     C                   move      yes           tmexbookfl
     C                   endif
      *
      * Populate On-Time/Late fields using values from:
      *     1) Load Detail record     (for on-time flag)
      *     2) Order Header Extension (as of May 2014, E3123) for Reason Code
      *     3) OnTime Reason Code     (as of May 2014, E3123) for Reason Code Description
      *
     C                   move      fly7st        lsldotfl
     c                   if        lsldotfl = ' '                                     S7834 12/7/16
     c                   move      'Y'           lsldotfl                             y=on time
     c                   end

     C                   move      *blank        lsotadrs
     C                   move      *blank        lsotadrsds
      *
      * Order Header Ext
     C     key02         chain     pmamrel2                           92
     C                   if        *in92 = *off
     C                   move      amhdaa        lsotadrs
      *
      * Original Appointment Date/Time  (added 03/07/2017 LJB E009492)
      *
     C                   test(t)                 amqfny                 92      Time
     C                   if        *in92 = *off                                 If OK carrier time
     C                   move      amqfny        lsoraptm
     C                   else
     C                   move      *loval        lsoraptm
     C                   endif                                                  If OK carrier time
      *
     C     *ymd          test(d)                 amqeny                 92      Date in yymmdd
     C                   if        *in92 = *off                                 If OK carrier date
     C     *ymd          move      amqeny        lsorapdt
     C                   move      lscrapdt      lsorapdtmd
     C     *iso          move      lscrapdt      ls80orapdt
     C                   else
     C                   z-add     0             ls80orapdt
     C                   move      *loval        lsorapdt
     C                   move      *loval        lsorapdtmd
     C                   endif                                                  If OK carrier date
      *
      * Move date/time to the new Timestamp field
      *
     C                   movel     lsorapdt      lsorapstmp
     C                   move      lsoraptm      lsorapstmp
     C                   endif                                                  pmamrel2 exists
      *
      * OnTime Reason Codes
     C     lsotadrs      chain     ppb5rel1                           92
     C                   if        *in92 = *off
     C                   eval      lsotadrsds = b5htt1
     C                   endif
      *
     C                   write     lsrec
     C                   endif                                                  If hit
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------
      * Populate Datamart fields that are a direct map from the OMS Load Header File
      *--------------------------------------------------------------------------------
      *
     C     $directmap    begsr
      *
     C                   z-add     fjrmnb        tmloadno
     C                   z-add     fjaic3        tmlsco
     C                   move      fjrvsx        tmmcfl
     C                   z-add     fjt4nb        tmscseqno
     C                   move      *blank        tmprtdelt
      *
      * Transload Carrier
      *   (E3355-note: only Export loads will have a Transload Carrier)
      *
     C                   move      fjdytx        tmtrcarcd
     C                   move      *blank        tmtrcarnm
     C     fjdytx        chain     omffrel0                           92
     C                   if        *in92 = *off
     C                   movel     ffadtx        tmtrcarnm
     C                   endif
      *
      *
      * Set Partial Load Flag
      *
     C                   if        fjrost = *blank
     C                   move      no            tmparldfl
     C                   else
     C                   move      fjrost        tmparldfl
     C                   endif
      *
      * If number of stops is greater than one, set flag to Y.
      *
     C                   if        fjrrnb > 1
     C                   move      yes           tmmsfl
     C                   else
     C                   move      no            tmmsfl
     C                   endif
      *
      * If there is an amount in the Flat Rate field, set the Flat Rate Flag to "Y"
      *
     C                   if        fjflam > 0
     C                   move      yes           tmlfrtfl
     C                   else
     C                   move      no            tmlfrtfl
     C                   endif
      *
     C                   move      fjpjst        tmltlfl
     C                   move      fjrnst        tmpysts
     C                   movel     fjr0sx        tmldcntcd
     C                   move      no            tmmexifl
      *
      * Load Type Code/Description
      *
     C                   move      fjvdst        tmldtypcd
      *
     C                   select
     C                   when      fjvdst = 'B'
     C                   movel     'Bulk'        tmldtypds
      *
     C                   when      fjvdst = 'R'
     C                   movel     'Reg '        tmldtypds
     C                   endsl
      *
      * Shipping Method - This works in conjunction with the mode of transportation.  The
      * first character of the shipping method in the load header file is the shipping
      * method, the 2nd character is the mode of transportation.
      *
     C                   movel     fjq2cd        tmsmcd
      *
     C                   select
     C                   when      tmsmcd = 'P'
     C                   movel     'Prepaid'     tmsmds
      *
     C                   when      tmsmcd = 'C'
     C                   movel     'Collect'     tmsmds
     C                   endsl
      *
      * Mode of Transportation
      *
     C                   move      fjq2cd        tmmtcd
      *
     C                   select
     C                   when      tmmtcd = 'R'
     C                   movel     'Rail'        tmmtds
     C                   when      tmmtcd = 'T'
     C                   movel     'Truck'       tmmtds
     C                   other
     C                   movel     'Other'       tmmtds
     C                   endsl
      *
     C                   movel     fjbzna        tmldcarcd
      *
     C                   move      fju2st        tmexfl
     C                   move      fjvpcd        tmsfwhscd
     C                   move      fjdbcd        tmlhstacd
     C                   z-add     fjrrnb        tmnostops
     C                   z-add     fjpaou        tmnopalld
      *
      * In the Traffic System, users can override the Total Load Miles
      * on a load. So, populate the Datamart "total load miles" field with
      * either:
      *        1) FJK2DT-Override Total Load Miles
      *        2) FJTLMI-Total Load Miles
      *
     C                   if        fjk2dt > 0
     C                   z-add     fjk2dt        tmldmiles
     C                   else
     C                   z-add     fjtlmi        tmldmiles
     C                   endif
      *
      * Amounts
     C                   z-add     fjdgwg        tmldcpyam
     C                   z-add     fjzbva        tmacfram
     C                   z-add     fjr1nb        tmrtfram
      *
      * Retrieve gross pounds.  Gross pounds is not stored in the record because too many
      * changes (box tare, misc tare, order info, etc) are made that affect the weight.
      * They have chosen to calc on the fly instead of updating the load file.
      *
     C                   call      'POGBXFR'
     C                   parm      *blank        xxreturn
     C                   parm      fjaic3        xxcocd
     C                   parm      fjrmnb        xxloadid
     C                   parm      fjpkst        xxloadsts
     C     tmgrswt       parm                    xxgrwgt
      *
      * Calculate any additional freight charges.
      * Only calculate additional freight if we have actual and rated.
      *
     C                   if        tmacfram <> 0 and tmrtfram <> 0
     C     tmacfram      sub       tmrtfram      tmaddfram
     C                   endif
      *
      *
      * Populate the On-Time Flag and, if the load was not On Time, retrieve info
      * for the Reason Code from the On-Time Reasons file.
      *
     C                   move      fjontm        tmotfl
     C                   if        tmotfl = no                                  If not on time
     C     fjr3sx        chain     ppb5rel1                           92
     C                   if        *in92 = *off
     C                   movel(p)  b5hvt1        tmotcads
     C                   movel(p)  b5hut1        tmotdpds
     C                   movel(p)  b5htt1        tmotcdds
     C                   endif
     C                   endif                                                  If not on time
      *
      * If you have a HoldOver Reason, retrieve its description from the
      * OnTime Reasons file.
      *
     C                   if        fjr4sx <> *blank                             If holdover
     C                   move      fjr4sx        tmhorscd
     C     fjr4sx        chain     ppb5rel1                           92
     C                   if        *in92 = *off
     C                   move(p)   b5htt1        tmhorsds
     C                   endif
     C                   endif                                                  If holdover
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------------
      * Format dates
      *---------------------------------------------------------------------------------------------
      *
     C     $dates        begsr
      *
      * Actual Ship Date
      *
     C     *cymd         test(d)                 fjf9dt                 92
     C                   if        *in92 = *off                                 If OK actual ship
     C     *cymd         move      fjf9dt        tmacshdt
     C                   move      tmacshdt      tmacshdtmd
     C     *iso          move      tmacshdt      tm80acshdt
     C                   else
     C                   move      *loval        tmacshdt
     C                   move      *loval        tmacshdtmd
     C                   endif                                                  If OK actual ship
      *
      * Get HPS calendar year/week and accounting yr/per/wk associated with Actual Ship date
      *
     C                   call      'POF3XFR'
     C                   parm      *blank        xxreturn
     C                   parm      fjaic3        xxcocd
     C                   parm      fjf9dt        xxcyymmdd
     C                   parm      0             xxjulian
     C     tmacyr        parm      0             xxacyr
     C     tmacpe        parm      0             xxacpe
     C     tmacwk        parm      0             xxacwk
     C                   parm      *blank        xxday
     C                   parm      0             xxcdwk
     C                   parm      0             xxhpspicdt
     C     tmcdyr        parm      0             xxhpscdyr
     C     tmcdwkyr      parm      0             xxhpscdwk
      *
      * Call the generic program to retrieve the quarter associated with the
      * accounting period.
      *
     C                   call      'HP8006'
     C                   parm      tmacpe        xxperiod
     C     tmacqr        parm      0             xxquarter
      *
      * Get Saturday week-ending date associated with Actual Ship Date
      *
     C                   call      'POJNXFR'
     C                   parm      *blank        xxreturn
     C                   parm      fjaic3        xxcocd
     C                   parm      fjf9dt        xxcyymmdd
     C                   parm      0             xxcyymmddo
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
      * Get the Saturday date into 'date format'
      *
     C                   move      wknulldt      tmwedt
     C                   move      wknulldt      tmwedtmdcy
      *
     C                   if        xxreturn = *blank
     C     *cymd         test(d)                 xxcyymmddo             92
     C                   if        *in92 = *off                                 If OK Saturday
     C     *cymd         move      xxcyymmddo    tmwedt
     C                   move      tmwedt        tmwedtmdcy
     C     *iso          move      tmwedt        tm80wedt
     C                   endif                                                  If OK Saturday
     C                   endif
      *
      * Get the day of week abbreviation
      *
     C                   move      *blank        tmdow
     C     *cymd         test(d)                 fjf9dt                 92
     C                   if        *in92 = *off                                 If OK date
     C     *cymd         move      fjf9dt        wkcymdiso
     C     *iso          move      wkcymdiso     wkccyymmdd
      *
     C                   call      'HP8005'
     C                   parm                    wkccyymmdd
     C                   parm                    xxname
     C     tmdow         parm                    xxabbrev
     C                   endif                                                  If OK date
      *
      * Scheduled Ship Date
      *
     C     *cymd         test(d)                 fjaodt                 92
     C                   if        *in92 = *off
     C     *cymd         move      fjaodt        tmscshdt
     C                   move      tmscshdt      tmscshdtmd
     C     *iso          move      tmscshdt      tm80scshdt
     C                   else
     C                   move      *loval        tmscshdt
     C                   move      *loval        tmscshdtmd
     C                   endif
      *
      * Adjusted Departure Date
      *
     C     *cymd         test(d)                 fjkadt                 92
     C                   if        *in92 = *off
     C     *cymd         move      fjkadt        tmaddt
     C                   move      tmaddt        tmaddtmdcy
     C     *iso          move      tmaddt        tm80addt
     C                   else
     C                   move      wknulldt      tmaddt
     C                   move      wknulldt      tmaddtmdcy
     C                   endif
      *
      * Deadline Departure Date
      *
     C     *cymd         test(d)                 fjkzdt                 92
     C                   if        *in92 = *off
     C     *cymd         move      fjkzdt        tmdddt
     C                   move      tmdddt        tmdddtmdcy
     C     *iso          move      tmdddt        tm80dddt
     C                   else
     C                   move      *loval        tmdddt
     C                   move      *loval        tmdddtmdcy
     C                   endif
      *
      * Truck Departure Date
      *
     C     *cymd         test(d)                 fjkidt                 92
     C                   if        *in92 = *off
     C     *cymd         move      fjkidt        tmtddt
     C                   move      tmtddt        tmtddtmdcy
     C     *iso          move      tmtddt        tm80tddt
     C                   else
     C                   move      *loval        tmtddt
     C                   move      *loval        tmtddtmdcy
     C                   endif
      *
      * Truck Ready Date
      *
     C     *cymd         test(d)                 fjj4dt                 92
     C                   if        *in92 = *off
     C     *cymd         move      fjj4dt        tmtrdt
     C                   move      tmtrdt        tmtrdtmdcy
     C     *iso          move      tmtrdt        tm80trdt
     C                   else
     C                   move      *loval        tmtrdt
     C                   move      *loval        tmtrdtmdcy
     C                   endif
      *
      * On Yard Date
      *
     C     *cymd         test(d)                 fjkkdt                 92
     C                   if        *in92 = *off
     C     *cymd         move      fjkkdt        tmoydt
     C                   move      tmoydt        tmoydtmdcy
     C     *iso          move      tmoydt        tm80oydt
     C                   else
     C                   move      *loval        tmoydt
     C                   move      *loval        tmoydtmdcy
     C                   endif
      *
      * Spotted Date
      *
     C     *cymd         test(d)                 fjj5dt                 92
     C                   if        *in92 = *off
     C     *cymd         move      fjj5dt        tmspdt
     C                   move      tmspdt        tmspdtmdcy
     C     *iso          move      tmspdt        tm80spdt
     C                   else
     C                   move      *loval        tmspdt
     C                   move      *loval        tmspdtmdcy
     C                   endif
      *
      * Load Finished Date
      *
     C     *cymd         test(d)                 fjj6dt                 92
     C                   if        *in92 = *off                                 If load fin ok
     C     *cymd         move      fjj6dt        tmlfdt
     C                   move      tmlfdt        tmlfdtmdcy
     C     *iso          move      tmlfdt        tm80lfdt
     C                   else
     C                   move      *loval        tmlfdt
     C                   move      *loval        tmlfdtmdcy
     C                   endif                                                  If load fin ok
      *
      * BOL Complete Date
      *
     C     *cymd         test(d)                 fjj7dt                 92
     C                   if        *in92 = *off                                 If BOL complete ok
     C     *cymd         move      fjj7dt        tmbcdt
     C                   move      tmbcdt        tmbcdtmdcy
     C     *iso          move      tmbcdt        tm80bcdt
     C                   else
     C                   move      *loval        tmbcdt
     C                   move      *loval        tmbcdtmdcy
     C                   endif                                                  If BOL complete ok
      *
      * BOL Received Date
      *
     C     *cymd         test(d)                 fjj8dt                 92
     C                   if        *in92 = *off                                 If BOL received ok
     C     *cymd         move      fjj8dt        tmbrdt
     C                   move      tmbrdt        tmbrdtmdcy
     C     *iso          move      tmbrdt        tm80brdt
     C                   else
     C                   move      *loval        tmbrdt
     C                   move      *loval        tmbrdtmdcy
     C                   endif                                                  If BOL received ok
      *
      *
      * Last Combo Production Date
      *
     C     *cymd         test(d)                 fjpzdt                 92
     C                   if        *in92 = *off                                 If combo date
     C     *cymd         move      fjpzdt        tmlcpdt
     C                   move      tmlcpdt       tmlcpdtmd
     C     *iso          move      tmlcpdt       tm80lcpdt
     C                   else
     C                   move      *loval        tmlcpdt
     C                   move      *loval        tmlcpdtmd
     C                   endif                                                  If combo date
      *
      *
      * Requested Delivery Date
      *
     C     *cymd         test(d)                 fjeidt                 92
     C                   if        *in92 = *off                                 If req delivery
     C     *cymd         move      fjeidt        tmrqdldt
     C                   move      tmrqdldt      tmrqdldtmd
     C     *iso          move      tmrqdldt      tm80rqdldt
     C                   else
     C                   move      *loval        tmrqdldt
     C                   move      *loval        tmrqdldtmd
     C                   endif                                                  If req delivery
      *
      *
      *  8/22/2019 JBB E15352  Add Load Plan Start Date and Time to file
      *   Load Plan Start Date
      *
     C     *cymd         test(d)                 fjp0dt                 92
     C                   if        *in92 = *off                                 if load plan start
     C     *cymd         move      fjp0dt        tmpsdt
     C                   move      tmpsdt        tmpsdtmdcy
     C     *iso          move      tmpsdt        tm80psdt
     C                   else
     C                   move      *loval        tmpsdt
     C                   move      *loval        tmpsdtmdcy
     C                   endif                                                  fi load plan start
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Times
      *---------------------------------------------------------------
      *
     C     $times        begsr
      *
      * Load Finished
      *
     C     *jis          test(t)                 fjlftm                 92
     C                   if        *in92 = *off
     C     *jis          move      fjlftm        tmlftm
     C                   else
     C                   move      *loval        tmlftm
     C                   endif
      *
      * BOL Complete
      *
     C     *jis          test(t)                 fjbotm                 92
     C                   if        *in92 = *off
     C     *jis          move      fjbotm        tmbctm
     C                   else
     C                   move      *loval        tmbctm
     C                   endif
      *
      * BOL Received
      *
     C     *jis          test(t)                 fjbltm                 92
     C                   if        *in92 = *off
     C     *jis          move      fjbltm        tmbrtm
     C                   else
     C                   move      *loval        tmbrtm
     C                   endif
      *
      * Adjusted Departure
      *
     C     *jis          test(t)                 fjajcm                 92
     C                   if        *in92 = *off
     C     *jis          move      fjajcm        tmadtm
     C                   else
     C                   move      *loval        tmadtm
     C                   endif
      *
      * Deadline Departure
      *
     C     *jis          test(t)                 fjaxtm                 92
     C                   if        *in92 = *off
     C     *jis          move      fjaxtm        tmddtm
     C                   else
     C                   move      *loval        tmddtm
     C                   endif
      *
      * Truck Ready
      *
     C     *jis          test(t)                 fjtrtm                 92
     C                   if        *in92 = *off
     C     *jis          move      fjtrtm        tmtrtm
     C                   else
     C                   move      *loval        tmtrtm
     C                   endif
      *
      * Truck Departure
      *
     C     *jis          test(t)                 fjastm                 92
     C                   if        *in92 = *off
     C     *jis          move      fjastm        tmtdtm
     C                   else
     C                   move      *loval        tmtdtm
     C                   endif
      *
      * Adjusted Departure
      *
     C     *jis          test(t)                 fjajcm                 92
     C                   if        *in92 = *off
     C     *jis          move      fjajcm        tmadtm
     C                   else
     C                   move      *loval        tmadtm
     C                   endif
      *
      * On Yard
      *
     C     *jis          test(t)                 fjavtm                 92
     C                   if        *in92 = *off
     C     *jis          move      fjavtm        tmoytm
     C                   else
     C                   move      *loval        tmoytm
     C                   endif
      *
      * Spotted
      *
     C     *jis          test(t)                 fjsptm                 92
     C                   if        *in92 = *off
     C     *jis          move      fjsptm        tmsptm
     C                   else
     C                   move      *loval        tmsptm
     C                   endif
      *
      *
      * Last Combo Production Time
      *
     C     *jis          test(t)                 fjcltm                 92
     C                   if        *in92 = *off
     C     *jis          move      fjcltm        tmlcptm
     C                   else
     C                   move      *loval        tmlcptm
     C                   endif
      *
      *
      *  8/22/2019 JBB E15352  Add Load Plan Start Date and Time to file
      *   Load Plan Start Time
     C     *jis          test(t)                 fjcmtm                 92
     C                   if        *in92 = *off
     C     *jis          move      fjcmtm        tmpstm
     C                   else
     C                   move      *loval        tmpstm
     C                   endif
      *
      *
      *  7/14/2021 JBB HD80179 Populate Load Plan Time for company 960
      *                        Populate Load Plan Time based on Seq#
      *
      *  If company is 960, populate Load Plan Time based on Seq#
     c                   if        fjaic3 = 960
      *
     c                   select
     c                   when      fjt4nb = 10
     c                   eval      wkaftm = 50000

     c                   when      fjt4nb = 20
     c                   eval      wkaftm = 110000

     c                   when      fjt4nb = 30
     c                   eval      wkaftm = 170000

     c                   when      fjt4nb = 40
     c                   eval      wkaftm = 230000

     c                   other
     c                   eval      wkaftm = *zeros

     c                   endsl

     C     *jis          test(t)                 wkaftm                 92
     C                   if        *in92 = *off
     C     *jis          move      wkaftm        tmpstm
     C                   else
     C                   move      *loval        tmpstm
     C                   endif

     c                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------------
      * Calculated 'Final' Departure Date/Time
      *---------------------------------------------------------------------------------------------
      *
      * Populate Final Departure Date/Time with either Adjusted Departure or Truck
      * Departure....whichever is latest. (The dates/times we are seeing are a bit
      * illogical; so, we have coded for the scenarios that we were seeing.)
      *
     C     $final        begsr
      *
     C                   move      *loval        tmfidt
     C                   move      *loval        tmfidtmdcy
     C                   z-add     0             tm80fidt
     C                   move      *loval        tmfitm
      *
     C                   select
      *
      * Adjusted Date/Time are zero
      *
     C                   when      tm80addt = 0 and tmadtm = *loval
     C                   move      tmtddt        tmfidt
     C                   move      tmtddtmdcy    tmfidtmdcy
     C                   z-add     tm80tddt      tm80fidt
     C                   move      tmtdtm        tmfitm
      *
      * Truck Date = Adjusted Date
      *
     C                   when      tm80tddt = tm80addt
     C                   move      tmaddt        tmfidt
     C                   move      tmaddtmdcy    tmfidtmdcy
     C                   z-add     tm80addt      tm80fidt
     C                   if        tmadtm = *loval
     C                   move      tmtdtm        tmfitm
     C                   else
     C                   move      tmadtm        tmfitm
     C                   endif
      *
      * Truck Date < Adjusted Date
      *
     C                   when      tm80tddt < tm80addt
     C                   move      tmaddt        tmfidt
     C                   move      tmaddtmdcy    tmfidtmdcy
     C                   z-add     tm80addt      tm80fidt
     C                   move      tmadtm        tmfitm
      *
      * Truck Date > Adjusted Date (and Adjusted Date is zero)
      *
     C                   when      tm80tddt > tm80addt and tm80addt = 0
     C                   move      tmtddt        tmfidt
     C                   move      tmtddtmdcy    tmfidtmdcy
     C                   z-add     tm80tddt      tm80fidt
     C                   move      tmadtm        tmfitm
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------------
      * Retrieve Load Header Miscellaneous Information
      *---------------------------------------------------------------------------------------------
      *
     C     $loadhdr      begsr
      *
      * Retrieve the Land Carrier Scat Code and Name from the Carrier file.
      * The Scat code is the 1st 4 characters of the Land Carrier Name.
      *
     C     fjbzna        chain     omffrel0                           92
     C                   if        *in92 = *off
     C                   movel     ffadtx        tmldscatcd
     C                   movel     ffadtx        tmlndcnm
     C                   endif
      *
      * Initialize the Ocean Carrier Code/Name to blanks
      *
     C                   move      *blank        tmocncrcd
     C                   move      *blank        tmocncnm
      *
      * Retrieve Shipping Region Code from the Region Definition file using:
      *  1) Company
      *  2) Ship To State
      *
     C     key05         chain     pdkgrel2                           92
     C                   if        *in92 = *off
     C                   move      kgv1cd        tmshregcd
     C                   endif
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------------------
      * Retrieve load detail information
      *------------------------------------------------------------------------------------------
      *
     C     $loaddet      begsr
      *
      * Initialize work Stop/Drop field for retrieving the Requested Delivery Date/Time
      *
     c                   eval      wkstopdrop = *zero
      *
      * Initialize the Palletize, Slip Sheet and Export Seaboard Bookings Flags.
      *
     C                   move      no            tmpalfl
     C                   move      no            tmslpfl
     C                   move      no            tmexbookfl
      *
      * Read the Load Detail to get the Orders on the load; process each Order.
      * The LF is keyed by Load and Stop/Drop so that the last order that we
      * process is the last order on the load.
      *
     C     fjrmnb        setll     omflcpl2
     C                   dou       *in91 = *on                                  Do load detail
     C     fjrmnb        reade     omflcpl2                               91
     C                   if        *in91 = *off                                 If not eof
      *
      * Retrieve Order Header info using:
      *  1) Company
      *  2) Order Number
      *
     C     key04         chain     opbfcpl1                           92
     C                   if        *in92 = *off                                 If order header
      *
      * Requested Delivery Time for SHP250
     c                   eval      wkaftm = beaftm * 100
     C     *jis          test(t)                 wkaftm                 94
     C                   if        *in94 = *off                                 if OK rq dlv time
     C     *jis          move      wkaftm        tmrqdltm
     C                   else
     C                   move      *loval        tmrqdltm
     C                   endif                                                  fi OK rq dlv time
      *
      *  7/14/2021 JBB HD80179  Add Requested Delivery Date and Time to
      *   the Datamart Load Info file SHP250 and the Datamart Load Stops
      *   file SHP253 from the first order on the Load/Stop.
     c                   if        flrvnb <> wkstopdrop                         if Stop/Drop changes
     c                   eval      wkstopdrop = flrvnb
      *
      * Requested Delivery Date
     C     *cymd         test(d)                 beeidt                 94
     C                   if        *in94 = *off                                 if OK rq dlv date
     C     *cymd         move      beeidt        wkrqdldt
     C                   move      wkrqdldt      wkrqdldtmd
     C     *iso          move      wkrqdldt      wk80rqdldt
     C                   else
     C                   move      *loval        wkrqdldt
     C                   move      *loval        wkrqdldtmd
     C                   endif                                                  fi OK rq dlv date
      *
      * Requested Delivery Time for SHP253
     c                   eval      wkaftm = beaftm * 100
     C     *jis          test(t)                 wkaftm                 94
     C                   if        *in94 = *off                                 if OK rq dlv time
     C     *jis          move      wkaftm        wkrqdltm
     C                   else
     C                   move      *loval        wkrqdltm
     C                   endif                                                  fi OK rq dlv time
     C                   endif                                                  fi Stop/Drop changes
      *
      * Move date/time to the new Timestamp field
     C                   movel     wkrqdldt      wkrqdlstmp
     C                   move      wkrqdltm      wkrqdlstmp
      *
     C                   add       1             tmnoord
     C                   movel     behnna        tmstcity
     C                   movel     bedbcd        tmststacd
      *
      * W82752 - Get/Save Sales Route Code & Name.
82752C                   eval      wkslsrtecde = BER4CD                         Sales Route
  |  C     BER4CD        chain     pdjerel1
  |  C                   if        %found(pdjerel1)
  |  C                   eval      wkslsrtenme = JEMZNA                         Sales Route Name
82752C                   endif
      *
      * Retrieve Order Detail from either the Sales History or Order Detail file.
      * (Use the Order Detail file for the Transfer Orders...since Transfers are
      * not in Sales History.)
      *
     C                   if        bejncd = 'TR'
     C                   exsr      $trsford
     C                   else
     C                   exsr      $salesord
     C                   endif
      *
     C                   endif                                                  If order header
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do load detail
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------------
      * Transfer Order Processing
      *---------------------------------------------------------------------------------------------
      *
     C     $trsford      begsr
      *
      *  Go to order detail file for this Company/Order...accumulate.
      *
     C     key04         setll     opbgwkl1
     C                   dou       *in93 = *on                                  Do order detail
     C     key04         reade     opbgwkl1                               93
     C                   if        *in93 = *off and omgmst <> 'X'               If not eof
      *
     C                   movel     'TO'          wktotypcd
      *
      * Set the flags for the Load to Yes when/if any Order Detail line is Yes for:
      *  1) Palletize
      *  2) Slip Sheet
     C                   if        omvest = yes
     C                   move      yes           tmpalfl
     C                   endif
      *
     C                   if        omvgst = yes
     C                   move      yes           tmslpfl
     C                   endif
      *
      * Increment Box/Combo Count using Quantity Shipped Total
      *
     C                   select
     C                   when      omagcd = 'BX'
     C                   add       omcbqt        tmbxct
      *
     C                   when      omagcd = 'CB'
     C                   add       omcbqt        tmcbct
     C                   endsl
      *
     C                   add       omcbqt        tmtoblqt
     C                   add       omcbqt        tmtotblqt
     C                   add       omatwg        tmtntwt
     C                   add       omatwg        tmnetwt
      *
     C                   eval      tmsltyds = 'Domestic'
     C                   eval      tmexfl = no
     C                   move      'NA'          tmnaoscd
     C                   movel(p)  'N.America'   tmnaosds
      *
      * Write/Update Load/Stop/ShipToCustomer record
      *
     C                   exsr      $wrtupd253
      *
      * Increment the SKU count. . .
      *  Check to see if the item is already in the SKU array
      *
     C                   z-add     1             x
     C     f4s5nb        lookup    arrsku(x)                              92
     C                   if        *in92 = *off
     C                   add       1             y
     C                   z-add     f4s5nb        arrsku(y)
     C                   endif
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do order detail
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Sales Order Processing
      *---------------------------------------------------------------
      *
     C     $salesord     begsr
      *
     C                   move      'OR'          wkortypcd
     C                   move      yes           first
     C                   move      no            next
     C                   z-add     0             wkshovqt
      *
      * Retrieve Sales History records using a key of:
      *   1) Load number
      *   2) Order number
      *
     C     key01         setll     omhstpn8
     C                   dou       *in93 = *on                                  Do order/sales hist
     C     key01         reade     omhstpn8                               93
     C                   if        *in93 = *off                                 If not eof
      *
      * Increment Box/Combo Count using Quantity Billed
      *
     C                   select
     C                   when      f4agcd = 'BX'
     C                   add       f4exqt        tmbxct
      *
     C                   when      f4agcd = 'CB'
     C                   add       f4exqt        tmcbct
     C                   endsl
      *
      * First time
     C                   if        first = yes
     C                   exsr      $firstline
     C                   endif
      *
      * Accumulate the net quantity/wgt for the orders.
      * (This does not include transfer orders.)
      *
     C                   add       f4exqt        tmtotblqt
     C                   add       f4exqt        tmcusblqt
     C                   add       f4bywg        tmcntwt
     C                   add       f4bywg        tmnetwt
      * For Load/Stop
     C                   exsr      $wrtupd253
      *
     C                   add       f4ulva        tmabfram
      *
      * Keep a running total of Qty Billed less Qty Ordered
      *
     C                   add       f4exqt        wkshovqt
     C                   sub       f4avqt        wkshovqt
      *
      * Increment the SKU count.
      *  Check to see if the item is already in the SKU array
      *
     C                   z-add     1             x
     C     f4s5nb        lookup    arrsku(x)                              92
     C                   if        *in92 = *off
     C                   add       1             y
     C                   z-add     f4s5nb        arrsku(y)
     C                   endif
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do order/sales hist
      *
      * Determine if the order was over/short and add to the count
      *
     C                   select
     C                   when      wkshovqt > 0
     C                   add       1             tmorovct
      *
     C                   when      wkshovqt < 0
     C                   add       1             tmorshct
     C                   endsl
      *
      * If the Load Flags for Palletize and Slip Sheet are already 'Yes', you
      * do not need to do anything else for this order. But, if either flag is still 'No',
      * go process the Order Detail records for this Order. (We can't use Sales History
      * because it doesn't have the Slip Sheet Flag in it.)
      * We will set the flags for the Load to Yes when/if any Order Detail line is Yes for:
      *  1) Palletize
      *  2) Slip Sheet
     C                   select
     C                   when      tmpalfl = yes and tmslpfl = yes
     C                   other
      *
      * Key: Company/Order
      *
     C     key04         setll     opbgwkl1
     C                   dou       *in93 = *on                                  Do order detail
     C     key04         reade     opbgwkl1                               93
     C                   if        *in93 = *off                                 If not eof
      *
     C                   if        omvest = yes
     C                   move      yes           tmpalfl
     C                   endif
      *
     C                   if        omvgst = yes
     C                   move      yes           tmslpfl
     C                   endif
     C                   endif                                                  If not eof
     C                   enddo                                                  Do order detail
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------------
      * First line of the order in Sales History
      *---------------------------------------------------------------------------------------------
      *
      * The first sales history record determines:
      *  ** If this is an export order.
      *  ** Direct or Indirect Sale
      *       Direct means we sold directly to the customer.
      *       Indirect means we sold to a distributor who then sells to a customer.
      *  ** Country code or Export Country Code depending upon the export status.
      *
      *
     C     $firstline    begsr
      *
      * Default in the country code and "domestic".  We have some instances where
      * the load is coded as an export load but there are no export orders.
      *
     C                   movel     f4kxcd        tmstcntcd
     C                   eval      tmsltyds = 'Domestic'
      *
      *  If export load
     C                   if        tmexfl = yes                                 If export load
      *  If export order
     C                   if        f4u2st = yes                                 If export order
     C                   movel     f4umcd        tmstcntcd
     C                   exsr      $expord
     C                   else
      *
      * If the order read in sales history was not the export order but the
      * load is coded as an Export Order, continue reading Sales History until
      * you find the order that was coded as an Export Order.
      *
     C                   move      yes           next
     C                   endif                                                  If export order
     C                   endif                                                  If export load
      *
     C                   move      next          first
      *
      * Setup the North America or Overseas description.
      *
     C                   if        tmstcntcd = 'USA' or
     C                             tmstcntcd = 'CAN' or
     C                             tmstcntcd = 'MEX' or
     C                             tmstcntcd = '   '
     C                   move      'NA'          tmnaoscd
     C                   movel(p)  'N.America'   tmnaosds
     C                   else
     C                   move      'OS'          tmnaoscd
     C                   movel(p)  'Overseas'    tmnaosds
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------------
      * Read export document header to determine if direct or indirect sale
      *---------------------------------------------------------------------------------------------
      *
     C     $expord       begsr
      *
      * Default Sales Type Description
      *
     C                   eval      tmsltyds = 'Direct  '
      *
      * Read Export Document Order header to get consignor name using:
      *  1) order header company
      *  2) order number
      *  3) document type
      *
     C     key03         chain     pdmrrel1                           92
     C                   if        *in92 = *off                                 If hit
      *
      * Consignor name can be in upper or lower case letters.
      * Make all lower case be upper case. If it is not Seaboard, set
      * Sales Type Description to Indirect.
      *
     C     lower:upper   xlate     mrputx        wkputx
     C                   if        %subst(wkputx:1:8) <> 'SEABOARD'
     C                   eval      tmsltyds = 'Indirect'
     C                   endif
     C                   endif                                                  If hit
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------------
      * Retrieve Charges
      *---------------------------------------------------------------------------------------------
      *
     C     $charges      begsr
      *
      * Retrieve the charges from the Load Freight Charges file
      *
     C     fjrmnb        setll     pobccpl1
      *
     C                   dou       *in93 = *on                                  Do charges
     C     fjrmnb        reade     pobccpl1                               93
     C                   if        *in93 = *off                                 If not EOF
      *
      * If the Include in Total Freight Charges is yes
      *
     C                   if        bckssx = yes
     C                   add       bcc5vl        tmintofram
     C                   endif
      *
      * Air Freight-Company Charge
      *
     C                   select
     C                   when      bccdaa = 'AIRCO '
     C                   add       bcc5vl        tmaircoam
      *
      * Air Freight-Containers
      *
     C                   when      bccdaa = 'AIRFRT'
     C                   add       bcc5vl        tmairfram
      * Bunker
     C                   when      bccdaa = 'BUNKER'
     C                   add       bcc5vl        tmbunkam
      * Railcar Rental
     C                   when      bccdaa = 'CARENT'
     C                   add       bcc5vl        tmcarentam
      * Deadhead
     C                   when      bccdaa = 'DEADH '
     C                   add       bcc5vl        tmdeadham
      * Delivery
     C                   when      bccdaa = 'DELIV '
     C                   add       bcc5vl        tmdlivam
      *
      * Detention-Customer Charge
     C                   when      bccdaa = 'DET   '
     C                   add       bcc5vl        tmdetcham
      *
      * Detention-Company Charge
     C                   when      bccdaa = 'DETENT'
     C                   add       bcc5vl        tmdetcoam
      *
      * Detention-Warehouse Charge
     C                   when      bccdaa = 'DETCO '
     C                   add       bcc5vl        tmdetwhsam
      *
      * Detention-Container Charge
     C                   when      bccdaa = 'DETCON'
     C                   add       bcc5vl        tmdetconam
      *
      * Detention-Company Shared
     C                   when      bccdaa = 'DETSLS'
     C                   add       bcc5vl        tmdetslsam
      * Detour Mile
     C                   when      bccdaa = 'DMILE '
     C                   add       bcc5vl        tmdmileam
      *
      * EIS
     C                   when      bccdaa = 'EISCHG'
     C                   add       bcc5vl        tmeischgam
      * Fuel Surcharge
     C                   when      bccdaa = 'FUEL'
     C                   add       bcc5vl        tmfusucham
      * Handling
     C                   when      bccdaa = 'HAND  '
     C                   add       bcc5vl        tmhandam
      * Inland freight
     C                   when      bccdaa = 'INLAND'
     C                   add       bcc5vl        tmlandam
      *
      * Insurance surcharge
     C                   when      bccdaa = 'INSUR '
     C                   add       bcc5vl        tminsam
      * Layover at Plant
     C                   when      bccdaa = 'LAYOVR'
     C                   add       bcc5vl        tmlayoam
      * Misc City & State
     C                   when      bccdaa = 'MISCST'
     C                   add       bcc5vl        tmmiscstam
      * Ocean Freight
     C                   when      bccdaa = 'OCEAN '
     C                   add       bcc5vl        tmocnfram
      *
      * Payment Adjustment-Warehouse
     C                   when      bccdaa = 'PAWHS '
     C                   add       bcc5vl        tmpawhsam
      *
      * Payment Adjustment
     C                   when      bccdaa = 'PAYADJ'
     C                   add       bcc5vl        tmpayam
      *
      * Company Shared Charge
     C                   when      bccdaa = 'PASHR '
     C                   add       bcc5vl        tmpashram
      * Pier Pass
     C                   when      bccdaa = 'PIER  '
     C                   add       bcc5vl        tmpieram
      * Port Check
     C                   when      bccdaa = 'PORTCK'
     C                   add       bcc5vl        tmportckam
      * Railroad
     C                   when      bccdaa = 'RAIL  '
     C                   add       bcc5vl        tmrailam
      *
      * Rebates-Ocean Freight
     C                   when      bccdaa = 'REBATE'
     C                   add       bcc5vl        tmrbatam
      *
      * Inland Freight Recharge
     C                   when      bccdaa = 'RECHAR'
     C                   add       bcc5vl        tmrchgam
      * Order Returned
     C                   when      bccdaa = 'RETURN'
     C                   add       bcc5vl        tmreturnam
      * Shag and Wash
     C                   when      bccdaa = 'SHAG  ' or bccdaa = 'WASH  '
     C                   add       bcc5vl        tmshwhcham
      * Additional Stops
     C                   when      bccdaa = 'STOP  '
     C                   add       bcc5vl        tmfrstcham
      * Terminal
     C                   when      bccdaa = 'TERM  '
     C                   add       bcc5vl        tmtermam
      * Unloading
     C                   when      bccdaa = 'UNLOAD'
     C                   add       bcc5vl        tmunldcham
     C                   other
      *
      * Only include in Other Freight if it is included in actual freight dollars.
      *
     C                   if        bckbsx = yes                                 If actual frt
      * Other Freight
     C                   add       bcc5vl        tmotfrcham
     C                   else
      * Misc Freight
     C                   add       bcc5vl        tmmisccham
     C                   endif                                                  If actual frt
     C                   endsl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do charges
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------------------
      * Retrieve Order Header Extension details (Export loads only)
      *-----------------------------------------------------------------------------------------
      *
     C     $loadext      begsr
      *
     C                   z-add     0             multrec
      *
      * Set the "OTHER" Carrier code equal to the first 4 digits of the Container
      * Number. (See C1765 on 10/11/11. This is no longer valid...but Steph Allen
      * will handle by removing the "dimension" from the Cognos cube. She asked
      * me to leave the code here.)
     C                   movel     fjcntn        tmotcrcd
      *
      * Retrieve Order Header Extension info for this load and overlay anything
      * that was already done for these particular details.
      *
     C     fjrmnb        setll     pmamrel2
     C                   dou       *in93 = *on                                  Do extension
     C     fjrmnb        reade     pmamrel2                               93
     C                   if        *in93 = *off                                 If not EOF
     C                   add       1             multrec
     C                   move      no            tmmexifl
      *
      * If multiple records (orders) on this load,
      *    set the Multi Record flag to Y and force an exit
      *
     C                   select                                                 Select
     C                   when      multrec > 1
     C                   move      yes           tmmexifl
     C                   seton                                        93
      * Port Del Terminal
      * Discharge Port/Airport
     C                   when      multrec = 1
     C                   movel     amoana        tmprtdelt
     C                   movel     amhcaa        tmdiscprt
     C
      *                 Retrieve the Ocean Carrier Code/Name using the
      *                 shipping line
      *
     C     amxacd        chain     omffrel0                           92
     C                   if        *in92 = *off
     C                   movel     amxacd        tmocncrcd
     C                   movel     ffadtx        tmocncnm
     C                   else
     C                   movel(p)  'N/A'         tmocncrcd
     C                   movel(p)  'UNKNOWN'     tmocncnm
     C                   endif
      *
      *                 Retrieve the Port City using a key of:
      *                 Ocean Carrier Code and Port Delivery Terminal
      *
     C                   move      *blank        tmprtcity
     C                   move      *blank        tmprtstate
     C                   if        tmocncrcd <> 'N/A'
     C     key12         chain     pdlcrel0                           92
     C                   if        *in92 = *off
     C                   eval      tmprtcity = lcoktx
     C                   eval      tmprtstate = lcxbcd
     C                   endif
     C                   endif
     C                   endsl                                                  Select
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do extension
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------
      * Clear all work fields and arrays and initialize array indexes
      *-----------------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   z-add     0             arrsku
      *
     C                   z-add     0             x
     C                   z-add     0             y
      *
     C                   move      *blank        wkortypcd
     C                   move      *blank        wktotypcd
     C                   clear                   tmrec
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------
      * Delete all Load Freight Charge records for an Organization/Load
      *---------------------------------------------------------------------------------
      *
     C     $dlt252       begsr
      *
     C     key06         setll     shp252
      *
     C                   dou       *in91 = *on                                  Do loop
     C     key06         reade     shp252                                 91
     C                   if        *in91 = *off
     C                   delete    lcrec
     C                   endif
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------
      * Delete all Load Stop records for Organization/Load
      *---------------------------------------------------------------------------------
      *
     C     $dlt253       begsr
      *
     C     key08         setll     shp253
      *
     C                   dou       *in91 = *on                                  Do loop
     C     key08         reade     shp253                                 91
     C                   if        *in91 = *off
     C                   delete    lsrec
     C                   endif
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write the Freight Charge Codes file
      *---------------------------------------------------------------
      *
      * Read all records in the Freight Charge Master file.
      * Write a Datamart record for each record read--even inactive/deleted
      * records.
      *
     C     $wrt251       begsr
      *
     C                   dou       *in91 = *on                                  Do loop
     C                   read      poa9rel1                               91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   move      a9cdaa        fcfccd
     C                   move      a9pnna        fcfcds
     C                   move      a9j0sx        fccccd
     C                   move      a9jzsx        fcinacfrfl
     C                   move      a9kpsx        fcintofrfl
     C                   move      a9vsst        fcstatfl
      *
      * If field "FC Reference Required" is Yes,
      *  retrieve the "CR Reference Code" for the "Freight Charge Code"
      *  from the Freight Charge Reference file.
      *
     C                   if        a9j3sx = yes
     C     fcfccd        chain     pmdjrel1                           92
     C                   if        *in92 = *off
     C                   eval      fcfcref = djiyaa
     C                   endif
     C                   endif
      *
     C                   move      xxcorg        fccorg
      *
     C                   write     fcrec
     C                   clear                   fcrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     *entry        plist
     C                   parm                    xxlstprdt
     C                   parm                    xxcorg
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    fjrmnb                         load number
     C                   kfld                    flc4nb                         order number
      *
     C     key02         klist
     C                   kfld                    flrmnb
     C                   kfld                    flc4nb
     C                   kfld                    flaic3
      *
     C     key03         klist
     C                   kfld                    beaic3                         Ord Hdr Com
     C                   kfld                    flc4nb                         order #
     C                   kfld                    wkdoctyp                       document type
      *
     C     key04         klist
     C                   kfld                    flaic3                         LD Company
     C                   kfld                    flc4nb                         order #
      *
     C     key05         klist
     C                   kfld                    fjaic3                         LH Company
     C                   kfld                    fjdbcd                         Ship TO State
      *
     C     key06         klist
     C                   kfld                    xxcorg                         organization
     C                   kfld                    fjrmnb                         load number
      *
     C     key07         klist
     C                   kfld                    bcrmnb                         load number
     C                   kfld                    bccdaa                         freight charge code
     C                   kfld                    bcepny                         seq nbr
      *
     C     key08         klist
     C                   kfld                    xxcorg                         organization
     C                   kfld                    tmloadno                       Datamart load number
      *
     C     key09         klist
     C                   kfld                    xxcorg                         Organization
     C                   kfld                    fjrmnb                         Load
     C                   kfld                    flrvnb                         Stop
     C                   kfld                    wkcuno                         Ship To Cust
      *
     C     key10         klist
     C                   kfld                    lsshcuno                       Ship to customer
     C                   kfld                    xxcorg                         organization
      *
     C     key11         klist
     C                   kfld                    fjaic3                         company
     C                   kfld                    ombkc7                         ship to cust
      *
     C     key12         klist
     C                   kfld                    tmocncrcd                      ocean carrier
     C                   kfld                    tmprtdelt                      port delv term
      *
      * Get last processed date into Synon format.
      *
     C                   movel     xxlstprdt     wksysdt
     C     *iso          test(d)                 wksysdt                92
     C                   if        *in92 = *off                                 If OK date
     C     *iso          move      wksysdt       wkcymdiso
     C     *cymd         move      wkcymdiso     wkprcdt
     C                   endif                                                  If OK date
      *
      * Build the Freight Charge Codes file.
      *
     C                   exsr      $wrt251
      *
     C                   endsr
      /eject
