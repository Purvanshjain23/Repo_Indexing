// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDBTPFR
// ?Date: 14.08.2025 Time: 12:03:37
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('P/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Process top of page

MOVE *ALL (To: TOP From: PAR);

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(TOP_Company_Number);
PARAMETER(TOP_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// TOP.Condition Desc. 1  USR = Condition name of PAR.Production Type
TOP_Condition_Desc_1_USR = RTVCND(PAR.Production_Type);

EXECUTE FUNCTION(Rtv Hog Volume         RT) TYPE(RTVOBJ) FILE(PDJCCPP)          AC1373728;
PARAMETER(TOP_Company_Number);
PARAMETER(DB1.Production_Type);
PARAMETER(TOP_Production_Date);
PARAMETER(TOP_Hog_Volume);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Call program Rtv Hog Volume  2 HPE XF.
CALL PROGRAM(Rtv Hog Volume  2 HPE XF) ('PKQIXFR');
PARAMETER(TOP_Company_Number);
PARAMETER(PAR.Production_Date);
PARAMETER(TOP_Hog_Volume_USR);

//?USER: Print required level headings

// SUPPRESSED PRINT Accounting Company Number header format

// SUPPRESSED PRINT Production Type header format

// SUPPRESSED PRINT Production Date header format

// SUPPRESSED PRINT Item Code header format

//?USER: Process before print of detail format

EXECUTE FUNCTION(Rtv Prd Sch Info   PS RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1294543;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Description_Line_One);
PARAMETER(CUR.UOM_Primary);
PARAMETER(PAR.Unit_Weight);
PARAMETER(WRK.Item_Structure_Class_Code);
PARAMETER(WRK.Item_Structure_Group_Code);
PARAMETER(WRK.Item_Structure_Type_Code);
PARAMETER(WRK.Item_Type_Code);
PARAMETER(WRK.Default_Warehouse);
PARAMETER(WRK.Fresh_Chilling_Time);
PARAMETER(WRK.Base_Conv_Loss_Item);
PARAMETER(WRK.Variety_Rendered_Cut);
PARAMETER(WRK.Credit_Item_Status);
PARAMETER(WRK.Std_Weight_Head_Var_Ren);
PARAMETER(WRK.Pieces_Per_Head);
PARAMETER(WRK.Department_Code);
PARAMETER(WRK.Group_for_Packaging);
PARAMETER(WRK.Seconds_Item);
PARAMETER(PAR.Piece_Count_Item);
PARAMETER(PAR.Pieces_Per_Bag);
PARAMETER(PAR.Bags_Per_Unit);
PARAMETER(WRK.Export_Domestic);
PARAMETER(WRK.Print_On_Schedule);
PARAMETER(WRK.Fresh_Inv_Allocation_Seq);
PARAMETER(WRK.Fresh_Sched_As_Ordered);
PARAMETER(WRK.Frozen_Inv_Allocation_Seq);
PARAMETER(WRK.Primal_Group_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Weight Scheduled
CUR.Weight_Sched_Prod_USR = ( DB1.PS_Weight_Standard + DB1.PS_Weight_Prod_Adj )                    +
- DB1.PS_Weight_Converted;

// Pieces Scheduled
CUR.Pieces_Scheduled = ( DB1.PS_Pieces_Standard + DB1.PS_Pieces_Prod_Adj )                         +
- DB1.PS_Pieces_Converted;

//?Quantity Production
CASE;

// IF PAR.Piece Count Item is yes
IF PAR.Piece_Count_Item = 'Y';

// Quantity Production
CUR.Quantity_Production_USR = CUR.Pieces_Scheduled / ( PAR.Pieces_Per_Bag                          +
* PAR.Bags_Per_Unit 'H' ) 'H';

//?Quantity Production
// IF *OTHERWISE
IF *OTHERWISE;

// Quantity Production
CUR.Quantity_Production_USR = CUR.Weight_Sched_Prod_USR / PAR.Unit_Weight 'H';

ENDIF;

//?Report type = Variance Schedule
CASE;

// IF PAR.Report Type Schedule  USR is Variance Schedule
IF PAR.Report_Type_Schedule_USR = 'V';

//?ACTUAL PRODUCTION
EXECUTE FUNCTION(Rtv Actual Production RT) TYPE(RTVOBJ) FILE(CAB7CPP)           AC1377968;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Warehouse_Code);
PARAMETER(CUR.Production_Date);
PARAMETER(WRK.Production_Weight_USR);
PARAMETER(WRK.Production_Quantity_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Production Weight USR = PAR.Production Weight USR + DB1.Transaction Weight
 PAR.Production_Weight_USR = PAR.Production_Weight_USR + DB1.Transaction_Weight;

 // PAR.Production Quantity USR = PAR.Production Quantity USR + DB1.Transaction Quantity
 PAR.Production_Quantity_USR = PAR.Production_Quantity_USR + DB1.Transaction_Quantity;

}


// CUR.Quantity Production USR = CUR.Quantity Production USR - WRK.Production Quant
CUR.Quantity_Production_USR = CUR.Quantity_Production_USR - WRK.Production_Quantity_USR;

// CUR.Weight Sched Prod USR = CUR.Weight Sched Prod USR - WRK.Production Weight US
CUR.Weight_Sched_Prod_USR = CUR.Weight_Sched_Prod_USR - WRK.Production_Weight_USR;

ENDIF;

//?***** PPS043 *****
//?USER: On print of detail format

CASE;

// IF CUR.Quantity Production USR is Less than/equal to Zero
IF CUR.Quantity_Production_USR <= *ZERO;

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Item Code totals format

// SUPPRESSED PRINT Production Date totals format

// SUPPRESSED PRINT Production Type totals format

// SUPPRESSED PRINT Accounting Company Number totals format

