// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPTCXFR
// ?Date: 14.08.2025 Time: 03:41:51
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Run as step 1 of the Restoration to set all records to -0- on hand
EXECUTE FUNCTION(PFS Post Phys Init    RT) TYPE(RTVOBJ) FILE(PDL5CPP)           AC1752858;
PARAMETER(PAR.PFS_From_Warehouse_Code);
{
 //?USER: Initialize routine

 //?09/09/09 PKD E00475 Use System Date instead of Job Date
 EXECUTE FUNCTION(Rtv System Date *CYMD IF) TYPE(EXCINTFUN)                      AC1952751;
 PARAMETER(LCL.System_Date_USR);
 {
  //?Execute internal function

  // LCL.*System timestamp = JOB.*System timestamp
  LCL.*System_timestamp = JOB.*System_timestamp;

  // LCL.Year USR = SUBSTRING(LCL.*System timestamp,CON.1,CON.4)
  LCL.Year_USR = SUBSTRING(LCL.*System_timestamp:1:4);

  // LCL.Month USR = SUBSTRING(LCL.*System timestamp,CON.6,CON.2)
  LCL.Month_USR = SUBSTRING(LCL.*System_timestamp:6:2);

  // LCL.Day USR = SUBSTRING(LCL.*System timestamp,CON.9,CON.2)
  LCL.Day_USR = SUBSTRING(LCL.*System_timestamp:9:2);

  // LCL.Date (Char-8) USR = CONCAT(LCL.Year USR,LCL.Month USR,CON.*ZERO)
  LCL.Date_Char_8_USR = LCL.Year_USR + LCL.Month_USR (*ZERO);

  // LCL.Date (Char-8) USR = CONCAT(LCL.Date (Char-8) USR,LCL.Day USR,CON.*ZERO)
  LCL.Date_Char_8_USR = LCL.Date_Char_8_USR + LCL.Day_USR (*ZERO);

  // LCL.DATE = CVTVAR(LCL.Date (Char-8) USR)
  LCL.DATE = CVTVAR(LCL.Date_Char_8_USR);

  EXECUTE FUNCTION(CVT *YYMD to *CYMD    IF) TYPE(EXCINTFUN)                      AC1929228;
  PARAMETER(PAR.System_Date_USR);
  PARAMETER(LCL.DATE);
  {
   //?Execute internal function

   //?** YEAR **
   // PAR.Year Code = PAR.DATE / CON.10000 *
   PAR.Year_Code = PAR.DATE / 10000;

   // PAR.Year  NBR USR = PAR.Year Code
   PAR.Year_NBR_USR = PAR.Year_Code;

   // PAR.Year  (Char) USR = CVTVAR(PAR.Year  NBR USR)
   PAR.Year_Char_USR = CVTVAR(PAR.Year_NBR_USR);

   //?** MONTH **
   // PAR.Month                 USR = PAR.DATE / CON.100 *
   PAR.Month_USR = PAR.DATE / 100;

   // PAR.Month (Char) USR = CVTVAR(PAR.Month                 USR)
   PAR.Month_Char_USR = CVTVAR(PAR.Month_USR);

   //?** DAY **
   // PAR.Day of Month USR = PAR.DATE
   PAR.Day_of_Month_USR = PAR.DATE;

   // PAR.Day   (Char) USR = CVTVAR(PAR.Day of Month USR)
   PAR.Day_Char_USR = CVTVAR(PAR.Day_of_Month_USR);

   //?CENTURY+YEAR
   CASE;

   // IF PAR.Year Code is Twentieth Century
   IF PAR.Year_Code <= 1999;

   // PAR.Date (Alpha) USR = CONCAT(CON.0,PAR.Year  (Char) USR,CON.*ZERO)
   PAR.Date_Alpha_USR = '0' + PAR.Year_Char_USR (*ZERO);

   //?CENTURY+YEAR
   // IF *OTHERWISE
   IF *OTHERWISE;

   // PAR.Date (Alpha) USR = CONCAT(CON.1,PAR.Year  (Char) USR,CON.*ZERO)
   PAR.Date_Alpha_USR = '1' + PAR.Year_Char_USR (*ZERO);

   ENDIF;

   // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Month (Char) USR,CON.*ZERO)
   PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Month_Char_USR (*ZERO);

   // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Day   (Char) USR,CON.*ZERO)
   PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Day_Char_USR (*ZERO);

   // PAR.Date                  USR = CVTVAR(PAR.Date (Alpha) USR)
   PAR.Date_USR = CVTVAR(PAR.Date_Alpha_USR);

  }

 }

 //?USER: Process Data record

 //?RMC 3/14/06  Compare db1 to par instead of hardcoded CF1
 //?Create Trans records with what's On hand before zero-ing
 CASE;

 // IF DB1.Warehouse Code EQ PAR.PFS Warehouse Code
 IF DB1.Warehouse_Code = PAR.PFS_From_Warehouse_Code;

 // WRK.LLT Trans Qty = CON.*ZERO - DB1.ILL Item Qty On-Hand
 WRK.LLT_Transaction_Qty = 0 - DB1.ILL_Item_Qty_On_Hand;

 // WRK.LLT Trans Wgt = CON.*ZERO - DB1.ILl Item Wgt On-Hand
 WRK.LLT_Transaction_Wgt = 0 - DB1.ILL_Item_Wgt_On_Hand;

 EXECUTE FUNCTION(PFS Item Lot/Loc Trns IF) TYPE(EXCINTFUN)                      AC1735168;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER('AP');
 PARAMETER(LCL.System_Date_USR);
 PARAMETER(DB1.Production_Date);
 PARAMETER(WRK.LLT_Transaction_Qty);
 PARAMETER(WRK.LLT_Transaction_Wgt);
 PARAMETER(*ZERO);
 PARAMETER(DB1.Location_Code);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('P');
 PARAMETER(WRK.LTT_Unused_Sts_1);
 PARAMETER(WRK.LTT_Unused_Sts_2);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Next Seq #        RT) TYPE(RTVOBJ) FILE(PDL7CPP)           AC1510279;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(PAR.LLT_Transaction_Type);
  PARAMETER(PAR.LLT_Transaction_Date);
  PARAMETER(PAR.LLT_Sequence_Number);
  {
   //?USER: Processing if Data record not found

   // PAR.LLT Sequence # = CON.1
   PAR.LLT_Sequence_Number = 1;

   //?USER: Process Data record

   // PAR.LLT Sequence # = DB1.LLT Sequence # + CON.1
   PAR.LLT_Sequence_Number = DB1.LLT_Sequence_Number + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Crt Item Lot/Loc Trns CR) TYPE(CRTOBJ) FILE(PDL7CPP)           AC1505285;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(PAR.LLT_Transaction_Type);
  PARAMETER(PAR.LLT_Transaction_Date);
  PARAMETER(PAR.LLT_Sequence_Number);
  PARAMETER(PAR.LLT_Production_Date);
  PARAMETER(PAR.LLT_Transaction_Qty);
  PARAMETER(PAR.LLT_Transaction_Wgt);
  PARAMETER(PAR.LLT_Lot_Number);
  PARAMETER(PAR.Location_Code);
  PARAMETER(PAR.LLT_Location_Level);
  PARAMETER(PAR.Transfer_Warehouse_Code);
  PARAMETER(PAR.LLT_Transfer_Lot_Number);
  PARAMETER(PAR.Transfer_Location_Code);
  PARAMETER(PAR.LLT_Transfer_Loc_Level);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.LLT_Status);
  PARAMETER(PAR.LTT_Unused_Sts_1);
  PARAMETER(PAR.LTT_Unused_Sts_2);
  PARAMETER(PAR.EDI_Status_1);
  PARAMETER(PAR.EDI_Status_2);
  PARAMETER(PAR.EDI_Status_3);
  PARAMETER(PAR.Record_Status);
  PARAMETER(PAR.Job_Time);
  PARAMETER(PAR.User_Id);
  PARAMETER(PAR.Job_Name);
  PARAMETER(PAR.Job_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

 //?Update on hand qty and weight   --> Set to 0
 EXECUTE FUNCTION(Chg Loc On hand PFS   CH) TYPE(CHGOBJ) FILE(PDL5CPP)           AC1748600;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Lot_Number);
 PARAMETER(DB1.Location_Code);
 PARAMETER(DB1.Location_Level);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.ILL_Avail_Ship_Date);
 PARAMETER(DB1.ILL_Status);
 PARAMETER(DB1.Inv_Hold_Reason_Code);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

}


