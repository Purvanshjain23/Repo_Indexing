// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKYUDFR
// ?Date: 14.08.2025 Time: 02:50:51
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.Pen_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

//?USER: Initialize subfile control

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// *MO.VE             1183529*Bu = ilt. in functions
CTL.CC_Company_Number = WRK.Pen_Company_Number;

// *MO.VE             1183529*Bu = ilt. in functions
WRK.Display_Print_Prompt_Usr = 'Y';

// *MO.VE             1183529*Bu = ilt. in functions
WRK.First_Time_Flag_Usr = 'Y';

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(CTL.CC_Company_Number);
PARAMETER(CTL.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?USER: Initialize subfile record from DBF record

CASE;

// IF RCD.Payment Date Usr 1 is Empty
IF RCD.Payment_Date_Usr_1 = *ZERO;

// *MO.VE             1183529*Bu = ilt. in functions
RCD.Payment_Date_Usr_1 = DB1.Pmt_Current_Payment_Date;

ENDIF;

CASE;

// IF RCD.Payment Date Usr 1 NE RCD.Pmt Current Payment Date
IF RCD.Payment_Date_Usr_1 <> RCD.Pmt_Current_Payment_Date;

// *MO.VE             1183529*Bu = ilt. in functions
RCD.Ref_Date_to_PRKTHPE_USR = 'Y';

ENDIF;

CASE;

// IF RCD.CMP Program Usr is *Blank
IF RCD.CMP_Program_Usr = *BLANK;

// *MO.VE             1183529*Bu = ilt. in functions
RCD.CMP_Program_Usr = 'SB1';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF PGM.*Cursor field <IS> RCD.CMP Program Usr
IF PGM.*Cursor_field = RCD.CMP_Program_Usr;

// Call program Sel Carc Merit Pgm    SR.
CALL PROGRAM(Sel Carc Merit Pgm    SR) ('PKBASRR');
PARAMETER(RCD.CMP_Program_Usr);

ENDIF;

// *MO.VE             1183529*Bu = ilt. in functions
WRK.CMP_Description = *BLANK;

CASE;

// IF RCD.CMP Program Usr is *Blank
IF RCD.CMP_Program_Usr = *BLANK;

// *MO.VE             1183529*Bu = ilt. in functions
RCD.CMP_Program_Usr = 'SB1';

ENDIF;

EXECUTE FUNCTION(Rtv CMP Description  RT) TYPE(RTVOBJ) FILE(PKARREP)            AB1124280;
PARAMETER(RCD.CMP_Program_Usr);
PARAMETER(WRK.CMP_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = 999;

}


//?INVALID CMP PGM
CASE;

// IF WRK.CMP Description EQ WRK.Blank USR
IF WRK.CMP_Description = WRK.Blank_USR;

// Send error message - 'Carcass Merit Prog Com not found.'
ERROR(PRK0136);

QUIT;

ENDIF;

//?VALIDATION FOR REFRESH
DO;

CASE;

// IF RCD.Payment Date Usr 1 is Empty
IF RCD.Payment_Date_Usr_1 = *ZERO;

// *MO.VE             1183529*Bu = ilt. in functions
RCD.Payment_Date_Usr_1 = DB1.Pmt_Current_Payment_Date;

// *MO.VE             1183529*Bu = ilt. in functions
RCD.Ref_Date_to_PRKTHPE_USR = 'N';

ENDIF;

CASE;

// IF RCD.Ref Date to PRKTHPE USR is Blank
IF RCD.Ref_Date_to_PRKTHPE_USR = *BLANK;

// Send error message - 'Refresh is required'
ERROR(PRK0596);
MSGPARM(RCD.Ref_Date_to_PRKTHPE_USR);

QUIT;

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

ENDDO;

//?This program will only be run from PRKTHPE
//?Alice will only put this on PRKTEST menu
CASE;

// IF RCD.*SFLSEL is Prt Carcass Merit Reports
IF RCD.*SFLSEL = '2';

// Call program Pmt Print Options Size XF.
CALL PROGRAM(Pmt Print Options Size XF) ('PDV8PVR');
PARAMETER('Carcass Merit Test');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER('N');
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');
PARAMETER(1);

//?GUYNIGHTQ
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

CASE;

// IF RCD.Ref Date to PRKTHPE USR is Yes
IF RCD.Ref_Date_to_PRKTHPE_USR = 'Y';

// Execute command - 'Refresh HPE'
EXECUTE COMMAND(PRK0597);
PARAMETER('GUYNIGHTQ');
PARAMETER('PRKTESTF');

ENDIF;

// *MO.VE             1183529*Bu = ilt. in functions
WRK.CC_Company_Num_Alpha = RCD.CC_Company_Number;

// *MO.VE             1183529*Bu = ilt. in functions
WRK.@DATE_OF_NUMBERIC_USR = RCD.Pmt_Current_Payment_Date;

// *MO.VE             1183529*Bu = ilt. in functions
WRK.Pmt_Cur_Payment_Dte_Alpha = WRK.@DATE_OF_NUMBERIC_USR;

// *MO.VE             1183529*Bu = ilt. in functions
WRK.@DATE_OF_NUMBERIC_USR = RCD.Payment_Date_Usr_1;

// *MO.VE             1183529*Bu = ilt. in functions
WRK.Pay_Date_to_Usr_Alph = WRK.@DATE_OF_NUMBERIC_USR;

// Execute command - 'SBM Carcass Merit Program Test -- Carl Test'
EXECUTE COMMAND(PRK0600);
PARAMETER(WRK.CC_Company_Num_Alpha);
PARAMETER(WRK.Pmt_Cur_Payment_Dte_Alpha);
PARAMETER(RCD.Ref_Date_to_PRKTHPE_USR);
PARAMETER(WRK.Pay_Date_to_Usr_Alph);
PARAMETER(RCD.CMP_Program_Usr);
PARAMETER('GUYNIGHTQ');

RETURN;

ENDIF;

ENDIF;

