// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBQ9XFR
// ?Date: 14.08.2025 Time: 03:49:04
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification history
DO;

//? 2/18/17 Brad Baden E9064 - Add company 440 processing
//?         This will be accomplished by removing the hard coding of
//?         company numbers, and replacing it with reading the
//?         Company Defaults Internal file for plant companies only.
//?ISCLYNC - 5/15/15 - This program is used to build history
//?for the Item age Inventory non-allocated.  It is run as part of
//?the job schedule with AGEINVT. Current job TFAGEDINV - runs at 5 am.
ENDDO;

//? 2/18/17 JBB E9064 - Old code replaced with reading all plant
//?                     company records
EXECUTE FUNCTION(Bld Item Age Invent Hist) TYPE(RTVOBJ) FILE(PDJYREP)           AC2132486;
{
 //?USER: Initialize routine

 //?Modification history
 DO;

 //? 2/18/17 Brad Baden E9064 - Add company 440 processing
 //?         Process Item Balance file for each specific Company.
 ENDDO;

 //?USER: Process Data record

 //?If Plant Company record is active, process the Company Number
 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
 PARAMETER(DB1.Company_Number);
 PARAMETER('PFSWHSE');
 PARAMETER(LCL.Warehouse_Code);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Bld Item Age Hist RT) TYPE(RTVOBJ) FILE(CAB0REP)           AC2105739;
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Warehouse_Code);
 {
  //?USER: Initialize routine

  //?Modification history
  DO;

  //? 2/18/17 Brad Baden E9064 - Add company 440 processing
  //?         Modified this RTVOBJ to restrict on Company Number,
  //?         instead of reading all records.
  ENDDO;

  //?USER: Process Data record

  EXECUTE FUNCTION(Rtv Bld Age Quantity  RT) TYPE(RTVOBJ) FILE(CAB1REP)           AC2106103;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   // LCL.Production Date USR = CND.Not Entered
   LCL.Production_Date_USR = *ZERO;

   // LCL.Quantity Age Day 1   USR = CON.*ZERO
   LCL.Quantity_Age_Day_1_USR = *ZERO;

   //?USER: Process Data record

   EXECUTE FUNCTION(RTV Build History) TYPE(RTVOBJ) FILE(CAB1REP)                  AC2106046;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Item_Code);
   PARAMETER(DB1.Warehouse_Code);
   PARAMETER(DB1.Production_Date);
   {
    //?USER: Initialize routine

    // LCL.Quantity Age Day 1   USR = CND.Equal to zero
    LCL.Quantity_Age_Day_1_USR = *ZERO;

    // LCL.Include Todays Trans = CND.no
    LCL.Include_Todays_Trans = 'N';

    //?USER: Process Data record

    //?If company is selected, rtv co/item else rtv item
    CASE;

    // IF DB1.Company Number is not equal to zero
    IF DB1.Company_Number <> *ZERO;

    EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
    PARAMETER(DB1.Company_Number);
    PARAMETER(DB1.Item_Code);
    PARAMETER(LCL.Item_Description);
    PARAMETER(WRK.Description_Line_Two);
    PARAMETER(WRK.UOM_Primary);
    PARAMETER(WRK.UOM_Second);
    PARAMETER(WRK.UOM_Third);
    {
     //?USER: Processing if Data record not found

     // PGM.*Return code = CND.*Record does not exist
     PGM.*Return_code = 'Y2U0005';

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

    //?If company is selected, rtv co/item else rtv item
    // IF *OTHERWISE
    IF *OTHERWISE;

    EXECUTE FUNCTION(Rtv Item Descriptions  RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1341279;
    PARAMETER(DB1.Item_Code);
    PARAMETER(LCL.Item_Description);
    PARAMETER(WRK.Description_Line_Two);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

    ENDIF;

    EXECUTE FUNCTION(Rtv Item Type Code     RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1704065;
    PARAMETER(DB1.Item_Code);
    PARAMETER(LCL.Item_Type_Code);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     // PGM.*Return code = CND.*Normal
     PGM.*Return_code = *BLANK;

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

     // PGM.*Return code = CND.*Normal
     PGM.*Return_code = *BLANK;

    }

    //?Check record selection for include todays transactions
    CASE;

    // IF LCL.Include Todays Trans is no
    IF LCL.Include_Todays_Trans = 'N';

    // AND JOB.*Job date EQ DB1.Production Date
    AND JOB.*Job_date = DB1.Production_Date;

    // LCL.Record Selected       USR = CND.no
    LCL.Record_Selected_USR = 'N';

    //?Check record selection for include todays transactions
    // IF *OTHERWISE
    IF *OTHERWISE;

    // LCL.Record Selected       USR = CND.yes
    LCL.Record_Selected_USR = 'Y';

    ENDIF;

    //?If record selected is yes then process
    CASE;

    // IF LCL.Record Selected       USR is yes
    IF LCL.Record_Selected_USR = 'Y';

    // AND LCL.Item Type Code is Finished Goods
    AND LCL.Item_Type_Code = 'FG';

    // LCL.Quantity Age Day 1   USR = LCL.Quantity Age Day 1   USR + DB1.Quantity on Hand - U/M1
    LCL.Quantity_Age_Day_1_USR = LCL.Quantity_Age_Day_1_USR + DB1.Quantity_on_Hand_UOM1;

    ENDIF;

    //?USER: Exit processing

    EXECUTE FUNCTION(RTV Build Non-Alloc   RT) TYPE(RTVOBJ) FILE(POB5CPP)           AC2106065;
    PARAMETER(DB1.Company_Number);
    PARAMETER(DB1.Item_Code);
    PARAMETER(DB1.Warehouse_Code);
    PARAMETER(DB1.Production_Date);
    PARAMETER(LCL.Quantity_Age_Day_1_USR);
    PARAMETER('N');
    {
     //?USER: Initialize routine

     // LCL.Day 1 Sales USR = CON.*ZERO
     LCL.Day_1_Sales_USR = *ZERO;

     // LCL.Include Todays Trans = CND.no
     LCL.Include_Todays_Trans = 'N';

     //?USER: Processing if Data record not found

     // PGM.*Return code = CND.*Record does not exist
     PGM.*Return_code = 'Y2U0005';

     //?USER: Process Data record

     // LCL.OD Production Date = DB1.OD Production Date
     LCL.OD_Production_Date = DB1.OD_Production_Date;

     //?If company is selected, rtv co/item else rtv item
     CASE;

     // IF DB1.Company Number is not equal to zero
     IF DB1.Company_Number <> *ZERO;

     EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
     PARAMETER(DB1.Company_Number);
     PARAMETER(DB1.Item_Code);
     PARAMETER(LCL.Item_Description);
     PARAMETER(WRK.Description_Line_Two);
     PARAMETER(WRK.UOM_Primary);
     PARAMETER(WRK.UOM_Second);
     PARAMETER(WRK.UOM_Third);
     {
      //?USER: Processing if Data record not found

      // PGM.*Return code = CND.*Record does not exist
      PGM.*Return_code = 'Y2U0005';

      //?USER: Process Data record

      MOVE *ALL (To: PAR From: DB1);

     }

     //?If company is selected, rtv co/item else rtv item
     // IF *OTHERWISE
     IF *OTHERWISE;

     EXECUTE FUNCTION(Rtv Item Descriptions  RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1341279;
     PARAMETER(DB1.Item_Code);
     PARAMETER(LCL.Item_Description);
     PARAMETER(WRK.Description_Line_Two);
     {
      //?USER: Processing if Data record not found

      MOVE *ALL (To: PAR From: CON);

      //?USER: Process Data record

      MOVE *ALL (To: PAR From: DB1);

     }

     ENDIF;

     EXECUTE FUNCTION(RTV Order Status       RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1131568;
     PARAMETER(DB1.Company_Number);
     PARAMETER(DB1.Order_Number);
     PARAMETER(LCL.Header_Status);
     PARAMETER(LCL.Header_Status_Last);
     {
      //?USER: Process Data record

      MOVE *ALL (To: PAR From: DB1);

     }

     EXECUTE FUNCTION(Rtv Item Type Code     RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1704065;
     PARAMETER(DB1.Item_Code);
     PARAMETER(LCL.Item_Type_Code);
     {
      //?USER: Processing if Data record not found

      MOVE *ALL (To: PAR From: CON);

      // PGM.*Return code = CND.*Normal
      PGM.*Return_code = *BLANK;

      //?USER: Process Data record

      MOVE *ALL (To: PAR From: DB1);

      // PGM.*Return code = CND.*Normal
      PGM.*Return_code = *BLANK;

     }

     // LCL.Record Selected       USR = CND.yes
     LCL.Record_Selected_USR = 'Y';

     //?Check record selection for include todays transactions
     CASE;

     // IF LCL.Include Todays Trans is no
     IF LCL.Include_Todays_Trans = 'N';

     // AND DB1.OD Production Date EQ JOB.*Job date
     AND DB1.OD_Production_Date = JOB.*Job_date;

     // LCL.Record Selected       USR = CND.no
     LCL.Record_Selected_USR = 'N';

     //?Check record selection for include todays transactions
     // IF *OTHERWISE
     IF *OTHERWISE;

     // LCL.Record Selected       USR = CND.yes
     LCL.Record_Selected_USR = 'Y';

     ENDIF;

     CASE;

     // IF LCL.Header Status is Avail/Entered/Held
     IF LCL.Header_Status = 'A'/'E'/'H';

     // AND LCL.Item Type Code is Finished Goods
     AND LCL.Item_Type_Code = 'FG';

     // AND LCL.Record Selected       USR is yes
     AND LCL.Record_Selected_USR = 'Y';

     // LCL.Day 1 Sales USR = LCL.Day 1 Sales USR + DB1.OD Quantity Inv Sched
     LCL.Day_1_Sales_USR = LCL.Day_1_Sales_USR + DB1.OD_Quantity_Inv_Sched;

     ENDIF;

     //?USER: Exit processing

     // LCL.Quantity Age Day 1   USR = PAR.Quantity Age Day 1   USR - LCL.Day 1 Sales USR
     LCL.Quantity_Age_Day_1_USR = PAR.Quantity_Age_Day_1_USR - LCL.Day_1_Sales_USR;

     EXECUTE FUNCTION(Build History file    IF) TYPE(EXCINTFUN)                      AC2105562;
     PARAMETER(DB1.Company_Number);
     PARAMETER(DB1.Warehouse_Code);
     PARAMETER(DB1.Item_Code);
     PARAMETER(JOB.*Job_date);
     PARAMETER(LCL.OD_Production_Date);
     PARAMETER(LCL.Item_Description);
     PARAMETER(LCL.Quantity_Age_Day_1_USR);
     PARAMETER(WRK.UOM_Primary);
     {
      //?Execute internal function

      CASE;

      // IF PAR.Age Quantity is Greater than zero
      IF PAR.Age_Quantity > *ZERO;

      // OR PAR.Age Quantity is Less than zero
      OR PAR.Age_Quantity < *ZERO;

      EXECUTE FUNCTION(RTV Build History     RT) TYPE(RTVOBJ) FILE(PBBZREP)           AC2104950;
      PARAMETER(PAR.Company_Number);
      PARAMETER(PAR.Warehouse_Code);
      PARAMETER(PAR.Item_Code);
      PARAMETER(PAR.Archive_Date);
      PARAMETER(PAR.Production_Date);
      PARAMETER(PAR.Item_Description);
      PARAMETER(PAR.Age_Quantity);
      PARAMETER(PAR.UOM_Primary);
      {
       //?USER: Processing if Data record not found

       EXECUTE FUNCTION(Create Item Age Invent Hi) TYPE(CRTOBJ) FILE(PBBZREP)          AC2104580;
       PARAMETER(PAR.Company_Number);
       PARAMETER(PAR.Warehouse_Code);
       PARAMETER(PAR.Item_Code);
       PARAMETER(PAR.Archive_Date);
       PARAMETER(PAR.Production_Date);
       PARAMETER(PAR.Item_Description);
       PARAMETER(PAR.Age_Quantity);
       PARAMETER(PAR.UOM_Primary);
       PARAMETER('A');
       PARAMETER(JOB.*Job_date);
       PARAMETER(JOB.*Job_time);
       PARAMETER(JOB.*USER);
       PARAMETER(JOB.*PROGRAM);
       PARAMETER(*ZERO);
       PARAMETER(*ZERO);
       PARAMETER(*BLANK);
       PARAMETER(*BLANK);
       //?USER: Process Data record

       QUIT;

      }

      ENDIF;

     }

    }

    CASE;

    // IF PGM.*Return code is *Record does not exist
    IF PGM.*Return_code = 'Y2U0005';

    EXECUTE FUNCTION(Build History file    IF) TYPE(EXCINTFUN)                      AC2105562;
    PARAMETER(DB1.Company_Number);
    PARAMETER(DB1.Warehouse_Code);
    PARAMETER(DB1.Item_Code);
    PARAMETER(JOB.*Job_date);
    PARAMETER(DB1.Production_Date);
    PARAMETER(LCL.Item_Description);
    PARAMETER(LCL.Quantity_Age_Day_1_USR);
    PARAMETER(WRK.UOM_Primary);
    {
     //?Execute internal function

     CASE;

     // IF PAR.Age Quantity is Greater than zero
     IF PAR.Age_Quantity > *ZERO;

     // OR PAR.Age Quantity is Less than zero
     OR PAR.Age_Quantity < *ZERO;

     EXECUTE FUNCTION(RTV Build History     RT) TYPE(RTVOBJ) FILE(PBBZREP)           AC2104950;
     PARAMETER(PAR.Company_Number);
     PARAMETER(PAR.Warehouse_Code);
     PARAMETER(PAR.Item_Code);
     PARAMETER(PAR.Archive_Date);
     PARAMETER(PAR.Production_Date);
     PARAMETER(PAR.Item_Description);
     PARAMETER(PAR.Age_Quantity);
     PARAMETER(PAR.UOM_Primary);
     {
      //?USER: Processing if Data record not found

      EXECUTE FUNCTION(Create Item Age Invent Hi) TYPE(CRTOBJ) FILE(PBBZREP)          AC2104580;
      PARAMETER(PAR.Company_Number);
      PARAMETER(PAR.Warehouse_Code);
      PARAMETER(PAR.Item_Code);
      PARAMETER(PAR.Archive_Date);
      PARAMETER(PAR.Production_Date);
      PARAMETER(PAR.Item_Description);
      PARAMETER(PAR.Age_Quantity);
      PARAMETER(PAR.UOM_Primary);
      PARAMETER('A');
      PARAMETER(JOB.*Job_date);
      PARAMETER(JOB.*Job_time);
      PARAMETER(JOB.*USER);
      PARAMETER(JOB.*PROGRAM);
      PARAMETER(*ZERO);
      PARAMETER(*ZERO);
      PARAMETER(*BLANK);
      PARAMETER(*BLANK);
      //?USER: Process Data record

      QUIT;

     }

     ENDIF;

    }

    ENDIF;

   }

   //?USER: Exit processing

   EXECUTE FUNCTION(RTV Read all by item) TYPE(RTVOBJ) FILE(POB5CPP)               AC2106077;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Item_Code);
   PARAMETER(DB1.Warehouse_Code);
   {
    //?USER: Process Data record

    EXECUTE FUNCTION(VAL Item Bal Dtl Exist RT) TYPE(RTVOBJ) FILE(CAB1REP)          AC1477900;
    PARAMETER(DB1.Company_Number);
    PARAMETER(DB1.Item_Code);
    PARAMETER(DB1.Warehouse_Code);
    PARAMETER(DB1.OD_Production_Date);
    {
     //?USER: Processing if Data record not found

     // PGM.*Return code = CND.*Record does not exist
     PGM.*Return_code = 'Y2U0005';

     //?USER: Process Data record

     // PGM.*Return code = CND.*Normal
     PGM.*Return_code = *BLANK;

    }

    CASE;

    // IF PGM.*Return code is *Record does not exist
    IF PGM.*Return_code = 'Y2U0005';

    EXECUTE FUNCTION(RTV Build Non-Alloc2  RT) TYPE(RTVOBJ) FILE(POB5CPP)           AC2106139;
    PARAMETER(DB1.Company_Number);
    PARAMETER(DB1.Item_Code);
    PARAMETER(DB1.Warehouse_Code);
    PARAMETER(DB1.OD_Production_Date);
    PARAMETER(DB1.OD_Quantity_Inv_Sched);
    PARAMETER('N');
    {
     //?USER: Initialize routine

     // LCL.Day 1 Sales USR = CON.*ZERO
     LCL.Day_1_Sales_USR = *ZERO;

     // LCL.Include Todays Trans = CND.no
     LCL.Include_Todays_Trans = 'N';

     //?USER: Processing if Data record not found

     // PGM.*Return code = CND.*Record does not exist
     PGM.*Return_code = 'Y2U0005';

     //?USER: Process Data record

     // LCL.OD Production Date = DB1.OD Production Date
     LCL.OD_Production_Date = DB1.OD_Production_Date;

     //?If company is selected, rtv co/item else rtv item
     CASE;

     // IF DB1.Company Number is not equal to zero
     IF DB1.Company_Number <> *ZERO;

     EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
     PARAMETER(DB1.Company_Number);
     PARAMETER(DB1.Item_Code);
     PARAMETER(LCL.Item_Description);
     PARAMETER(WRK.Description_Line_Two);
     PARAMETER(WRK.UOM_Primary);
     PARAMETER(WRK.UOM_Second);
     PARAMETER(WRK.UOM_Third);
     {
      //?USER: Processing if Data record not found

      // PGM.*Return code = CND.*Record does not exist
      PGM.*Return_code = 'Y2U0005';

      //?USER: Process Data record

      MOVE *ALL (To: PAR From: DB1);

     }

     //?If company is selected, rtv co/item else rtv item
     // IF *OTHERWISE
     IF *OTHERWISE;

     EXECUTE FUNCTION(Rtv Item Descriptions  RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1341279;
     PARAMETER(DB1.Item_Code);
     PARAMETER(LCL.Item_Description);
     PARAMETER(WRK.Description_Line_Two);
     {
      //?USER: Processing if Data record not found

      MOVE *ALL (To: PAR From: CON);

      //?USER: Process Data record

      MOVE *ALL (To: PAR From: DB1);

     }

     ENDIF;

     EXECUTE FUNCTION(RTV Order Status       RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1131568;
     PARAMETER(DB1.Company_Number);
     PARAMETER(DB1.Order_Number);
     PARAMETER(LCL.Header_Status);
     PARAMETER(LCL.Header_Status_Last);
     {
      //?USER: Process Data record

      MOVE *ALL (To: PAR From: DB1);

     }

     EXECUTE FUNCTION(Rtv Item Type Code     RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1704065;
     PARAMETER(DB1.Item_Code);
     PARAMETER(LCL.Item_Type_Code);
     {
      //?USER: Processing if Data record not found

      MOVE *ALL (To: PAR From: CON);

      // PGM.*Return code = CND.*Normal
      PGM.*Return_code = *BLANK;

      //?USER: Process Data record

      MOVE *ALL (To: PAR From: DB1);

      // PGM.*Return code = CND.*Normal
      PGM.*Return_code = *BLANK;

     }

     // LCL.Record Selected       USR = CND.yes
     LCL.Record_Selected_USR = 'Y';

     //?Check record selection for include todays transactions
     CASE;

     // IF LCL.Include Todays Trans is no
     IF LCL.Include_Todays_Trans = 'N';

     // AND DB1.OD Production Date EQ JOB.*Job date
     AND DB1.OD_Production_Date = JOB.*Job_date;

     // LCL.Record Selected       USR = CND.no
     LCL.Record_Selected_USR = 'N';

     //?Check record selection for include todays transactions
     // IF *OTHERWISE
     IF *OTHERWISE;

     // LCL.Record Selected       USR = CND.yes
     LCL.Record_Selected_USR = 'Y';

     ENDIF;

     CASE;

     // IF LCL.Header Status is Avail/Entered/Held
     IF LCL.Header_Status = 'A'/'E'/'H';

     // AND LCL.Item Type Code is Finished Goods
     AND LCL.Item_Type_Code = 'FG';

     // AND LCL.Record Selected       USR is yes
     AND LCL.Record_Selected_USR = 'Y';

     // LCL.Day 1 Sales USR = LCL.Day 1 Sales USR + DB1.OD Quantity Inv Sched
     LCL.Day_1_Sales_USR = LCL.Day_1_Sales_USR + DB1.OD_Quantity_Inv_Sched;

     ENDIF;

     //?USER: Exit processing

     EXECUTE FUNCTION(Build History file    IF) TYPE(EXCINTFUN)                      AC2105562;
     PARAMETER(DB1.Company_Number);
     PARAMETER(DB1.Warehouse_Code);
     PARAMETER(DB1.Item_Code);
     PARAMETER(JOB.*Job_date);
     PARAMETER(LCL.OD_Production_Date);
     PARAMETER(LCL.Item_Description);
     PARAMETER(LCL.Day_1_Sales_USR);
     PARAMETER(WRK.UOM_Primary);
     {
      //?Execute internal function

      CASE;

      // IF PAR.Age Quantity is Greater than zero
      IF PAR.Age_Quantity > *ZERO;

      // OR PAR.Age Quantity is Less than zero
      OR PAR.Age_Quantity < *ZERO;

      EXECUTE FUNCTION(RTV Build History     RT) TYPE(RTVOBJ) FILE(PBBZREP)           AC2104950;
      PARAMETER(PAR.Company_Number);
      PARAMETER(PAR.Warehouse_Code);
      PARAMETER(PAR.Item_Code);
      PARAMETER(PAR.Archive_Date);
      PARAMETER(PAR.Production_Date);
      PARAMETER(PAR.Item_Description);
      PARAMETER(PAR.Age_Quantity);
      PARAMETER(PAR.UOM_Primary);
      {
       //?USER: Processing if Data record not found

       EXECUTE FUNCTION(Create Item Age Invent Hi) TYPE(CRTOBJ) FILE(PBBZREP)          AC2104580;
       PARAMETER(PAR.Company_Number);
       PARAMETER(PAR.Warehouse_Code);
       PARAMETER(PAR.Item_Code);
       PARAMETER(PAR.Archive_Date);
       PARAMETER(PAR.Production_Date);
       PARAMETER(PAR.Item_Description);
       PARAMETER(PAR.Age_Quantity);
       PARAMETER(PAR.UOM_Primary);
       PARAMETER('A');
       PARAMETER(JOB.*Job_date);
       PARAMETER(JOB.*Job_time);
       PARAMETER(JOB.*USER);
       PARAMETER(JOB.*PROGRAM);
       PARAMETER(*ZERO);
       PARAMETER(*ZERO);
       PARAMETER(*BLANK);
       PARAMETER(*BLANK);
       //?USER: Process Data record

       QUIT;

      }

      ENDIF;

     }

    }

    ENDIF;

   }

  }

 }

 ENDIF;

}


