// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNYXXFR
// ?Date: 14.08.2025 Time: 03:47:07
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?***This Function is Called from SSIS Process OR from Submit
//?   Automated Orders menu option.***
// Call program EXC Rtv Status        XF.
CALL PROGRAM(EXC Rtv Status        XF) ('PBXNXFR');
PARAMETER(PAR.Company_Number);
PARAMETER('TMSLDP');
PARAMETER(WRK.Live_with_TPM);

// Call program EXC Rtv Status-AS     XF.
CALL PROGRAM(EXC Rtv Status-AS     XF) ('PBX2XFR');
PARAMETER(PAR.Company_Number);
PARAMETER('TMSLDP');
PARAMETER(WRK.PFS_AccuSort_Active);

//?** Creates Orders from uploads, and Loads if not live w/tpm
//?** Program selection is made in the called function
//?R17029 DN 01/21/21-NEW Logic. Removed 'C&K Brokerage' Logic.
CASE;

// IF PAR.Broker Code is Japanese Broker
IF PAR.Broker_Code = 'SEI';

//?Broker code passed as an additional parm              E003326
//?RMC S14549 RMC - chk broker in rtv
EXECUTE FUNCTION(RTV Jpn Ords by Co#    RT) TYPE(RTVOBJ) FILE(PNHGCPP)          AC2025008;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Broker_Code);
PARAMETER(PAR.Return_Code_Usr);
PARAMETER(WRK.Live_with_TPM);
PARAMETER(WRK.PFS_AccuSort_Active);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PAR.Return Code Usr = CND.*Blank
 PAR.Return_Code_Usr = *BLANK;

 CASE;

 // IF PAR.Broker Code NE DB1.Broker Code
 IF PAR.Broker_Code <> DB1.Broker_Code;

 //?RMC 2/21/19 only process if hdr broker is SEI- matching par.broker
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?** Creates Load & Order records for Japanese & Domestic Orders
 //?** This function is called by an SSIS function
 //?** Default Load ID and Order Number to zeros for this procedure
 //?** Put Price Code into the Item Code PASS USR field
 // LCL.System Value Numeric = CON.*ZERO
 LCL.System_Value_Numeric = *ZERO;

 // LCL.Order Number 1  PASS  USR = CON.*ZERO
 LCL.Order_Number_1_PASS_USR = *ZERO;

 //?** Build the Special Instructions, pass in Customer Name parm
 // LCL.Reference Field = CON.*BLANK
 LCL.Reference_Field = *BLANK;

 // LCL.Reference Field = CONCAT(CON.CAF,DB1.Destination City,CON.1)
 LCL.Reference_Field = 'CAF' + DB1.Destination_City (1);

 //?** Build the Shipping Instructions
 // PAR.ED Shipping Marks Txt = CONCAT(DB1.Customer Purchase Order #,CON./,CON.*ZERO)
 PAR.ED_Shipping_Marks_Txt = DB1.Customer_Purchase_Order_# + '/' (*ZERO);

 // PAR.ED Shipping Marks Txt = CONCAT(PAR.ED Shipping Marks Txt,DB1.Country Abbreviation,CON.*ZERO)
 PAR.ED_Shipping_Marks_Txt = PAR.ED_Shipping_Marks_Txt + DB1.Destination_City_Abbrev (*ZERO);

 //?** Parse SSD from *char(26) (from SSIS) to 10 alpha for CVT DATE
 //?** Then move 11 alpha date to 7 alpha, convert 7 alpha
 //?** to 7 numeric. Finally move 7 numeric to SSD
 // WRK.Text USR 4 = SUBSTRING(DB1.SSD Date/Time Alpha,CON.1,CON.4)
 WRK.Text_USR_4 = SUBSTRING(DB1.SSD_Date_Time_Alpha:1:4);

 // WRK.Text 2 = SUBSTRING(DB1.SSD Date/Time Alpha,CON.6,CON.2)
 WRK.Text_2 = SUBSTRING(DB1.SSD_Date_Time_Alpha:6:2);

 // WRK.Text 2 Length USR = SUBSTRING(DB1.SSD Date/Time Alpha,CON.9,CON.2)
 WRK.Text_2_Length_USR = SUBSTRING(DB1.SSD_Date_Time_Alpha:9:2);

 // WRK.Text 10A USR = CONCAT(WRK.Text USR 4,WRK.Text 2,CON.*ZERO)
 WRK.Text_10A_USR = WRK.Text_USR_4 + WRK.Text_2 (*ZERO);

 // WRK.Text 10A USR = CONCAT(WRK.Text 10A USR,WRK.Text 2 Length USR,CON.*ZERO)
 WRK.Text_10A_USR = WRK.Text_10A_USR + WRK.Text_2_Length_USR (*ZERO);

 // Call program Cvt Date              UP.
 CALL PROGRAM(Cvt Date              UP) ('POD5UPR');
 PARAMETER(WRK.Text_10A_USR);
 PARAMETER(WRK.Text_usr_11);
 PARAMETER(*YYMD);
 PARAMETER(*CYMD);
 PARAMETER(*NONE);

 // WRK.Text USR 7 = WRK.Text usr 11
 WRK.Text_USR_7 = WRK.Text_usr_11;

 // WRK.Number Value - 7 = CVTVAR(WRK.Text USR 7)
 WRK.Number_Value_7 = CVTVAR(WRK.Text_USR_7);

 // WRK.Scheduled Ship Date USR = WRK.Number Value - 7
 WRK.Scheduled_Ship_Date_USR = WRK.Number_Value_7;

 //?** Parse RDD from *char(26) (from SSIS) to 10 alpha for CVT DATE
 //?** Then move 11 alpha date to 7 alpha, convert 7 alpha
 //?** to 7 numeric. Finally move 7 numeric to RDD
 // WRK.Text USR 4 = SUBSTRING(DB1.RDD Date/Time Alpha,CON.1,CON.4)
 WRK.Text_USR_4 = SUBSTRING(DB1.RDD_Date_Time_Alpha:1:4);

 // WRK.Text 2 = SUBSTRING(DB1.RDD Date/Time Alpha,CON.6,CON.2)
 WRK.Text_2 = SUBSTRING(DB1.RDD_Date_Time_Alpha:6:2);

 // WRK.Text 2 Length USR = SUBSTRING(DB1.RDD Date/Time Alpha,CON.9,CON.2)
 WRK.Text_2_Length_USR = SUBSTRING(DB1.RDD_Date_Time_Alpha:9:2);

 // WRK.Text 10A USR = CONCAT(WRK.Text USR 4,WRK.Text 2,CON.*ZERO)
 WRK.Text_10A_USR = WRK.Text_USR_4 + WRK.Text_2 (*ZERO);

 // WRK.Text 10A USR = CONCAT(WRK.Text 10A USR,WRK.Text 2 Length USR,CON.*ZERO)
 WRK.Text_10A_USR = WRK.Text_10A_USR + WRK.Text_2_Length_USR (*ZERO);

 // Call program Cvt Date              UP.
 CALL PROGRAM(Cvt Date              UP) ('POD5UPR');
 PARAMETER(WRK.Text_10A_USR);
 PARAMETER(WRK.Text_usr_11);
 PARAMETER(*YYMD);
 PARAMETER(*CYMD);
 PARAMETER(*NONE);

 // WRK.Text USR 7 = WRK.Text usr 11
 WRK.Text_USR_7 = WRK.Text_usr_11;

 // WRK.Number Value - 7 = CVTVAR(WRK.Text USR 7)
 WRK.Number_Value_7 = CVTVAR(WRK.Text_USR_7);

 // WRK.Req Delivery Date = WRK.Number Value - 7
 WRK.Req_Delivery_Date = WRK.Number_Value_7;

 //?** Don't create orders if SSD is before today else Do   E002587
 CASE;

 // IF WRK.Scheduled Ship Date USR LT JOB.*Job date
 IF WRK.Scheduled_Ship_Date_USR < JOB.*Job_date;

 // PAR.Return Code Usr = CND.*No Update
 PAR.Return_Code_Usr = 'NOUPD';

 //?R16637 DN 11/17/20-Check PROD/TEST Data Library to Set Email DL.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Email Address = CON.DL PDINETCT_Test
 LCL.Email_Address = 'DL PDINETCT_Test';

 EXECUTE FUNCTION(RTV Data Libraries     RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1165753;
 PARAMETER('DTALIB');
 PARAMETER(LCL.Library_List_Code);
 PARAMETER(NLL.@Library_List_Code);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.System Value Code is Data File Library
  IF DB1.System_Value_Code = 'DTALIB';

  // PAR.Library List Code = DB1.System Value Alpha
  PAR.Library_List_Code = DB1.System_Value_Alpha;

  // IF DB1.System Value Code is History File Library
  IF DB1.System_Value_Code = 'HISLIB';

  // PAR.@Library List Code = DB1.System Value Alpha
  PAR.@Library_List_Code = DB1.System_Value_Alpha;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF LCL.Library List Code is PRKFLIB Prod Lib
 IF LCL.Library_List_Code = 'PRKFLIB';

 // LCL.Email Address = CON.DL PDINETCT
 LCL.Email_Address = 'DL PDINETCT';

 ENDIF;

 ENDIF;

 // LCL.Company Number Alpha = CVTVAR(PAR.Company Number)
 LCL.Company_Number_Alpha = CVTVAR(PAR.Company_Number);

 // LCL.Text USR 7 = CVTVAR(WRK.Scheduled Ship Date USR)
 LCL.Text_USR_7 = CVTVAR(WRK.Scheduled_Ship_Date_USR);

 // Call program Cvt Date              UP.
 CALL PROGRAM(Cvt Date              UP) ('POD5UPR');
 PARAMETER(LCL.Text_USR_7);
 PARAMETER(WRK.Text_usr_11);
 PARAMETER(*CYMD);
 PARAMETER(*MDYY);
 PARAMETER('/');

 // LCL.Subject Line USR = CONCAT(CON.Order not created for,PAR.ED Shipping Marks Txt,CON.1)
 LCL.Subject_Line_USR = 'Order not created for' + PAR.ED_Shipping_Marks_Txt (1);

 // LCL.Pager Msg 256 USR = CONCAT(WRK.Text usr 11,CON.- Scheduled,CON.1)
 LCL.Pager_Msg_256_USR = WRK.Text_usr_11 + '- Scheduled' (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.Ship Date is too old-Orde,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + 'Ship Date is too old-Orde' (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.r not created for Company,CON.*ZERO)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + 'r not created for Company' (*ZERO);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,LCL.Company Number Alpha,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + LCL.Company_Number_Alpha (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.. Delete old record,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + '. Delete old record' (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.from AS400 before,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + 'from AS400 before' (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.recreating orders.,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + 'recreating orders.' (1);

 //?R16637 DN 11/17/20-CONCAT 'Test' to Email Msg if in TEST Env.
 CASE;

 // IF LCL.Library List Code is Not PRKFLIB
 IF LCL.Library_List_Code <> 'PRKFLIB';

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.- TEST,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + '- TEST' (1);

 ENDIF;

 // Call program CLP Exe ESNDMAIL Cmd   UP.
 CALL PROGRAM(CLP Exe ESNDMAIL Cmd   UP) ('PPW6UPC');
 PARAMETER(LCL.Return_Code_Usr);
 PARAMETER(LCL.Email_Address);
 PARAMETER(LCL.Subject_Line_USR);
 PARAMETER(LCL.Pager_Msg_256_USR);

 //?** Don't create orders if SSD is before today else Do   E002587
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?* If Live w/TPM = "N" or "P" then create order and load. E004019
 //?* If Live w/TPM = "Y" then create orders only
 //?     but it live with DOM/EX only, still created the loads here
 //?* Create orders and loads - or just orders if Live w/TPM & not just Dom
 CASE;

 // IF PAR.Broker Code is Japanese Broker
 IF PAR.Broker_Code = 'SEI';

 CASE;

 // IF PAR.Live with TPM is Not Yes
 IF PAR.Live_with_TPM = 'N'/'P';

 // OR PAR.PFS AccuSort Active is Yes
 OR PAR.PFS_AccuSort_Active = 'Y';

 //?if live with tpm but DOM/EX only, create order/loads for type ES
 //?* Pass in Consignee info                              E004201
 //?R16637 DN 10/02/20-Set Consignee Addr 4, State, Zip & Country.
 // Call program CRT Japan Chlld Orders XF.
 CALL PROGRAM(CRT Japan Chlld Orders XF) ('PMV5XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(WRK.Scheduled_Ship_Date_USR);
 PARAMETER(WRK.Scheduled_Ship_Date_USR);
 PARAMETER(WRK.Req_Delivery_Date);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(LCL.System_Value_Numeric);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Price_Code);
 PARAMETER('U');
 PARAMETER(LCL.Reference_Field);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(LCL.Date_4_RGF_Pass);
 PARAMETER(LCL.Date_4_RGT_Pass);
 PARAMETER(PAR.ED_Shipping_Marks_Txt);
 PARAMETER(DB1.ED_Consignee_Name);
 PARAMETER(DB1.ED_Consignee_Addr_1);
 PARAMETER(DB1.ED_Consignee_Addr_2);
 PARAMETER(DB1.ED_Consignee_Addr_3);
 PARAMETER(DB1.ED_Consignee_Addr_4);
 PARAMETER(DB1.ED_Consignee_State);
 PARAMETER(DB1.ED_Consignee_Postal);
 PARAMETER(DB1.ED_Consignee_Country_Code);
 PARAMETER(DB1.Broker_Code);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Call program Zzz JPN Orders Not LoadXF.
 CALL PROGRAM(Zzz JPN Orders Not LoadXF) ('PBH2XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(WRK.Scheduled_Ship_Date_USR);
 PARAMETER(WRK.Scheduled_Ship_Date_USR);
 PARAMETER(WRK.Req_Delivery_Date);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(LCL.System_Value_Numeric);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Price_Code);
 PARAMETER('U');
 PARAMETER(LCL.Reference_Field);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(LCL.Date_4_RGF_Pass);
 PARAMETER(LCL.Date_4_RGT_Pass);
 PARAMETER(PAR.ED_Shipping_Marks_Txt);
 PARAMETER(DB1.ED_Consignee_Name);
 PARAMETER(DB1.ED_Consignee_Addr_1);
 PARAMETER(DB1.ED_Consignee_Addr_2);
 PARAMETER(DB1.ED_Consignee_Addr_3);
 PARAMETER(DB1.ED_Consignee_Addr_4);
 PARAMETER(DB1.ED_Consignee_State);
 PARAMETER(DB1.ED_Consignee_Postal);
 PARAMETER(DB1.ED_Consignee_Country_Code);
 PARAMETER(DB1.Broker_Code);

 ENDIF;

 ENDIF;

 //?** Default printer to Sales, and don't put on hold  E001973
 // WRK.Hold = CND.No
 WRK.Hold = *NO;

 // Call program Rtv Alpha Value       XF.
 CALL PROGRAM(Rtv Alpha Value       XF) ('POMTXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER('JPNPRINTER');
 PARAMETER(WRK.Printer_Device);

 //?E2176 SLM 03/14/2013
 // Call program PRT Acknowledgements UP.
 CALL PROGRAM(PRT Acknowledgements UP) ('PDJWPCLP');
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(1);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER('S');
 PARAMETER(WRK.Printer_Device);
 PARAMETER(WRK.Hold);
 PARAMETER(*YES);
 PARAMETER(1);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER('N');

 ENDIF;

 ENDIF;

}


//?R17029 DN 01/21/21-NEW Logic. Removed 'C&K Brokerage' Logic.
// IF PAR.Broker Code is Mexico
IF PAR.Broker_Code = 'MEX';

//?R17013 DN 01/29/21-Added Order Automation Creation for Mexico.
EXECUTE FUNCTION(RTV MEX Ords by Co#    RT) TYPE(RTVOBJ) FILE(PNHGCPP)          AC2194964;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Broker_Code);
PARAMETER(PAR.Return_Code_Usr);
PARAMETER(WRK.Live_with_TPM);
PARAMETER(WRK.PFS_AccuSort_Active);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PAR.Return Code Usr = CND.*Blank
 PAR.Return_Code_Usr = *BLANK;

 CASE;

 // IF PAR.Broker Code NE DB1.Broker Code
 IF PAR.Broker_Code <> DB1.Broker_Code;

 //?Only process if hdr broker is MEX- matching par.broker
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?** Creates Order (Not Load) records for Mexico Orders.
 //?** This function is called by an SSIS function
 //?** Default Order Number to zeros for this procedure
 //?** Put Price Code into the Item Code PASS USR field
 // LCL.System Value Numeric = CON.*ZERO
 LCL.System_Value_Numeric = *ZERO;

 // LCL.Order Number 1  PASS  USR = CON.*ZERO
 LCL.Order_Number_1_PASS_USR = *ZERO;

 //?** Build the Special Instructions, pass in Customer Name parm
 // LCL.Reference Field = CON.*BLANK
 LCL.Reference_Field = *BLANK;

 // LCL.Reference Field = CONCAT(CON.CAF,DB1.Destination City,CON.1)
 LCL.Reference_Field = 'CAF' + DB1.Destination_City (1);

 //?** Build the Shipping Instructions
 //?R17013 DN 03/03/21-Don't Populate the Shipping Marks in PDMRREP File.
 // LCL.ED Shipping Marks Txt = CONCAT(DB1.Customer Purchase Order #,CON./,CON.*ZERO)
 LCL.ED_Shipping_Marks_Txt = DB1.Customer_Purchase_Order_# + '/' (*ZERO);

 // LCL.ED Shipping Marks Txt = CONCAT(LCL.ED Shipping Marks Txt,DB1.Destination City Abbrev,CON.*ZE
 LCL.ED_Shipping_Marks_Txt = LCL.ED_Shipping_Marks_Txt + DB1.Destination_City_Abbrev (*ZERO);

 //?** Parse SSD from *char(26) (from SSIS) to 10 alpha for CVT DATE
 //?** Then move 11 alpha date to 7 alpha, convert 7 alpha
 //?** to 7 numeric. Finally move 7 numeric to SSD
 // WRK.Text USR 4 = SUBSTRING(DB1.SSD Date/Time Alpha,CON.1,CON.4)
 WRK.Text_USR_4 = SUBSTRING(DB1.SSD_Date_Time_Alpha:1:4);

 // WRK.Text 2 = SUBSTRING(DB1.SSD Date/Time Alpha,CON.6,CON.2)
 WRK.Text_2 = SUBSTRING(DB1.SSD_Date_Time_Alpha:6:2);

 // WRK.Text 2 Length USR = SUBSTRING(DB1.SSD Date/Time Alpha,CON.9,CON.2)
 WRK.Text_2_Length_USR = SUBSTRING(DB1.SSD_Date_Time_Alpha:9:2);

 // WRK.Text 10A USR = CONCAT(WRK.Text USR 4,WRK.Text 2,CON.*ZERO)
 WRK.Text_10A_USR = WRK.Text_USR_4 + WRK.Text_2 (*ZERO);

 // WRK.Text 10A USR = CONCAT(WRK.Text 10A USR,WRK.Text 2 Length USR,CON.*ZERO)
 WRK.Text_10A_USR = WRK.Text_10A_USR + WRK.Text_2_Length_USR (*ZERO);

 // Call program Cvt Date              UP.
 CALL PROGRAM(Cvt Date              UP) ('POD5UPR');
 PARAMETER(WRK.Text_10A_USR);
 PARAMETER(WRK.Text_usr_11);
 PARAMETER(*YYMD);
 PARAMETER(*CYMD);
 PARAMETER(*NONE);

 // WRK.Text USR 7 = WRK.Text usr 11
 WRK.Text_USR_7 = WRK.Text_usr_11;

 // WRK.Number Value - 7 = CVTVAR(WRK.Text USR 7)
 WRK.Number_Value_7 = CVTVAR(WRK.Text_USR_7);

 // WRK.Scheduled Ship Date USR = WRK.Number Value - 7
 WRK.Scheduled_Ship_Date_USR = WRK.Number_Value_7;

 //?** Parse RDD from *char(26) (from SSIS) to 10 alpha for CVT DATE
 //?** Then move 11 alpha date to 7 alpha, convert 7 alpha
 //?** to 7 numeric. Finally move 7 numeric to RDD
 // WRK.Text USR 4 = SUBSTRING(DB1.RDD Date/Time Alpha,CON.1,CON.4)
 WRK.Text_USR_4 = SUBSTRING(DB1.RDD_Date_Time_Alpha:1:4);

 // WRK.Text 2 = SUBSTRING(DB1.RDD Date/Time Alpha,CON.6,CON.2)
 WRK.Text_2 = SUBSTRING(DB1.RDD_Date_Time_Alpha:6:2);

 // WRK.Text 2 Length USR = SUBSTRING(DB1.RDD Date/Time Alpha,CON.9,CON.2)
 WRK.Text_2_Length_USR = SUBSTRING(DB1.RDD_Date_Time_Alpha:9:2);

 // WRK.Text 10A USR = CONCAT(WRK.Text USR 4,WRK.Text 2,CON.*ZERO)
 WRK.Text_10A_USR = WRK.Text_USR_4 + WRK.Text_2 (*ZERO);

 // WRK.Text 10A USR = CONCAT(WRK.Text 10A USR,WRK.Text 2 Length USR,CON.*ZERO)
 WRK.Text_10A_USR = WRK.Text_10A_USR + WRK.Text_2_Length_USR (*ZERO);

 // Call program Cvt Date              UP.
 CALL PROGRAM(Cvt Date              UP) ('POD5UPR');
 PARAMETER(WRK.Text_10A_USR);
 PARAMETER(WRK.Text_usr_11);
 PARAMETER(*YYMD);
 PARAMETER(*CYMD);
 PARAMETER(*NONE);

 // WRK.Text USR 7 = WRK.Text usr 11
 WRK.Text_USR_7 = WRK.Text_usr_11;

 // WRK.Number Value - 7 = CVTVAR(WRK.Text USR 7)
 WRK.Number_Value_7 = CVTVAR(WRK.Text_USR_7);

 // WRK.Req Delivery Date = WRK.Number Value - 7
 WRK.Req_Delivery_Date = WRK.Number_Value_7;

 //?** Don't create orders if SSD is before today else Do   E002587
 CASE;

 // IF WRK.Scheduled Ship Date USR LT JOB.*Job date
 IF WRK.Scheduled_Ship_Date_USR < JOB.*Job_date;

 // PAR.Return Code Usr = CND.*No Update
 PAR.Return_Code_Usr = 'NOUPD';

 //?R16637 DN 11/17/20-Check PROD/TEST Data Library to Set Email DL.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Email Address = CON.DL PDINETCT_Test
 LCL.Email_Address = 'DL PDINETCT_Test';

 EXECUTE FUNCTION(RTV Data Libraries     RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1165753;
 PARAMETER('DTALIB');
 PARAMETER(LCL.Library_List_Code);
 PARAMETER(NLL.@Library_List_Code);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.System Value Code is Data File Library
  IF DB1.System_Value_Code = 'DTALIB';

  // PAR.Library List Code = DB1.System Value Alpha
  PAR.Library_List_Code = DB1.System_Value_Alpha;

  // IF DB1.System Value Code is History File Library
  IF DB1.System_Value_Code = 'HISLIB';

  // PAR.@Library List Code = DB1.System Value Alpha
  PAR.@Library_List_Code = DB1.System_Value_Alpha;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF LCL.Library List Code is PRKFLIB Prod Lib
 IF LCL.Library_List_Code = 'PRKFLIB';

 // LCL.Email Address = CON.DL PDINETCT
 LCL.Email_Address = 'DL PDINETCT';

 ENDIF;

 ENDIF;

 // LCL.Company Number Alpha = CVTVAR(PAR.Company Number)
 LCL.Company_Number_Alpha = CVTVAR(PAR.Company_Number);

 // LCL.Text USR 7 = CVTVAR(WRK.Scheduled Ship Date USR)
 LCL.Text_USR_7 = CVTVAR(WRK.Scheduled_Ship_Date_USR);

 // Call program Cvt Date              UP.
 CALL PROGRAM(Cvt Date              UP) ('POD5UPR');
 PARAMETER(LCL.Text_USR_7);
 PARAMETER(WRK.Text_usr_11);
 PARAMETER(*CYMD);
 PARAMETER(*MDYY);
 PARAMETER('/');

 //?R17013 DN 03/03/21-Use LCL.ED Shipping Marks Txt here.
 // LCL.Subject Line USR = CONCAT(CON.Order not created for,LCL.ED Shipping Marks Txt,CON.1)
 LCL.Subject_Line_USR = 'Order not created for' + LCL.ED_Shipping_Marks_Txt (1);

 // LCL.Pager Msg 256 USR = CONCAT(WRK.Text usr 11,CON.- Scheduled,CON.1)
 LCL.Pager_Msg_256_USR = WRK.Text_usr_11 + '- Scheduled' (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.Ship Date is too old-Orde,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + 'Ship Date is too old-Orde' (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.r not created for Company,CON.*ZERO)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + 'r not created for Company' (*ZERO);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,LCL.Company Number Alpha,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + LCL.Company_Number_Alpha (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.. Delete old record,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + '. Delete old record' (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.from AS400 before,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + 'from AS400 before' (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.recreating orders.,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + 'recreating orders.' (1);

 //?R16637 DN 11/17/20-CONCAT 'Test' to Email Msg if in TEST Env.
 CASE;

 // IF LCL.Library List Code is Not PRKFLIB
 IF LCL.Library_List_Code <> 'PRKFLIB';

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.- TEST,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + '- TEST' (1);

 ENDIF;

 // Call program CLP Exe ESNDMAIL Cmd   UP.
 CALL PROGRAM(CLP Exe ESNDMAIL Cmd   UP) ('PPW6UPC');
 PARAMETER(LCL.Return_Code_Usr);
 PARAMETER(LCL.Email_Address);
 PARAMETER(LCL.Subject_Line_USR);
 PARAMETER(LCL.Pager_Msg_256_USR);

 //?** Don't create orders if SSD is before today else Do   E002587
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?R17013 DN 01/29/21-Create Orders and Not Load. MG Creates the Load info.
 //?S17053 DN 04/02/21-Set ED Shipping Marks Txt to 'Not Required'.
 // Call program CRT MEX Orders Not LoadXF.
 CALL PROGRAM(CRT MEX Orders Not LoadXF) ('PUR9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(WRK.Scheduled_Ship_Date_USR);
 PARAMETER(WRK.Scheduled_Ship_Date_USR);
 PARAMETER(WRK.Req_Delivery_Date);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(LCL.System_Value_Numeric);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Price_Code);
 PARAMETER('U');
 PARAMETER(LCL.Reference_Field);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER('MEX');
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(LCL.Date_4_RGF_Pass);
 PARAMETER(LCL.Date_4_RGT_Pass);
 PARAMETER('Not Required');
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.ED_Consignee_Name);
 PARAMETER(DB1.ED_Consignee_Addr_1);
 PARAMETER(DB1.ED_Consignee_Addr_2);
 PARAMETER(DB1.ED_Consignee_Addr_3);
 PARAMETER(DB1.ED_Consignee_Addr_4);
 PARAMETER(DB1.ED_Consignee_State);
 PARAMETER(DB1.ED_Consignee_Postal);
 PARAMETER(DB1.ED_Consignee_Country_Code);
 PARAMETER(DB1.Broker_Code);

 //?S17053 DN 04/02/21-Changed HOLD to 'Yes'.
 // WRK.Hold = CND.Yes
 WRK.Hold = *YES;

 // Call program Rtv Alpha Value       XF.
 CALL PROGRAM(Rtv Alpha Value       XF) ('POMTXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER('JPNPRINTER');
 PARAMETER(WRK.Printer_Device);

 // Call program PRT Acknowledgements UP.
 CALL PROGRAM(PRT Acknowledgements UP) ('PDJWPCLP');
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(1);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER('S');
 PARAMETER(WRK.Printer_Device);
 PARAMETER(WRK.Hold);
 PARAMETER(*YES);
 PARAMETER(1);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER('N');

 ENDIF;

 ENDIF;

}


//?R17029 DN 01/21/21-NEW Logic. Removed 'C&K Brokerage' Logic.
// IF *OTHERWISE
IF *OTHERWISE;

//?* E7358 for domestic customers, such as Jetro, etc
//?R17029 DN 01/21/21-C&K Brokerage will also process here.
EXECUTE FUNCTION(RTV Ords by Co#,Brkr   RT) TYPE(RTVOBJ) FILE(PNHGCPP)          AC2097781;
PARAMETER(PAR.Return_Code_Usr);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Broker_Code);
PARAMETER(WRK.Live_with_TPM);
PARAMETER(WRK.PFS_AccuSort_Active);
{
 //?USER: Initialize routine

 //?***** Changes and Comments
 DO;

 //?* E7353 LJB 10/6/2016   Use this for other domestic customers. They
 //?     must have a Broker Code, even if it is one that does not have
 //?     customers assigned to it. This code will group customers
 //?     together to process at one time
 //?* E004019 RMC 07/13/2016    Retrieve PFS Interface value TMSLDP for
 //?                        "Live w/TPM" value
 //?* E004019 LJB 03/20/2015    Retrieve "Live w/TPM" flag. If =Y then
 //?*    call pgm that does not create the load header & detail
 //?*    If "N" or "P" then call the pgm that creates order and load
 //?* E003326 LJB 08/22/2014    Pass in the Broker Code. Domestic orders
 //?*    are now being created using this function
 ENDDO;

 //?R16637 DN 10/23/20-Get Data File Library.
 // Call program RTV Data Libraries     XF.
 CALL PROGRAM(RTV Data Libraries     XF) ('CAQXXFR');
 PARAMETER(LCL.Library_List_Code);
 PARAMETER(LCL.@Library_List_Code);

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 //?***** Comments and changes
 DO;

 //?** Creates Load & Order records for Domestic customers
 //?** This function is called from the network by an SSIS function
 //?** Default Load ID and Order Number to zeros for this procedure
 //?** Put Price Code into the Item Code PASS USR field
 //?** Format the CYYMMDD date from the 26 char date passed from SSIS
 //?** Default printer to Sales, Domestic, don't put on hold
 //?* If Live w/TPM = "N" or "P" then create order and load. E004019
 //?* If Live w/TPM = "Y" then create orders only
 //?     but if live with DOM/EX only, still created the loads here
 //?** Determine printer using the Broker Code
 ENDDO;

 // PAR.Return Code Usr = CND.*Blank
 PAR.Return_Code_Usr = *BLANK;

 //?** Format the CYYMMDD date from the 26 char date passed from SSIS
 // LCL.System Value Numeric = CON.*ZERO
 LCL.System_Value_Numeric = *ZERO;

 // LCL.Order Number 1  PASS  USR = CON.*ZERO
 LCL.Order_Number_1_PASS_USR = *ZERO;

 // LCL.Reference Field = CON.*BLANK
 LCL.Reference_Field = *BLANK;

 // PAR.ED Shipping Marks Txt = CONCAT(DB1.Customer Purchase Order #,CON./,CON.*ZERO)
 PAR.ED_Shipping_Marks_Txt = DB1.Customer_Purchase_Order_# + '/' (*ZERO);

 //?** Parse SSD from *char(26) (from SSIS) to 10 alpha for CVT DATE
 //?** Then move 11 alpha date to 7 alpha, convert 7 alpha
 //?** to 7 numeric. Finally move 7 numeric to SSD
 // WRK.Text USR 4 = SUBSTRING(DB1.SSD Date/Time Alpha,CON.1,CON.4)
 WRK.Text_USR_4 = SUBSTRING(DB1.SSD_Date_Time_Alpha:1:4);

 // WRK.Text 2 = SUBSTRING(DB1.SSD Date/Time Alpha,CON.6,CON.2)
 WRK.Text_2 = SUBSTRING(DB1.SSD_Date_Time_Alpha:6:2);

 // WRK.Text 2 Length USR = SUBSTRING(DB1.SSD Date/Time Alpha,CON.9,CON.2)
 WRK.Text_2_Length_USR = SUBSTRING(DB1.SSD_Date_Time_Alpha:9:2);

 // WRK.Text 10A USR = CONCAT(WRK.Text USR 4,WRK.Text 2,CON.*ZERO)
 WRK.Text_10A_USR = WRK.Text_USR_4 + WRK.Text_2 (*ZERO);

 // WRK.Text 10A USR = CONCAT(WRK.Text 10A USR,WRK.Text 2 Length USR,CON.*ZERO)
 WRK.Text_10A_USR = WRK.Text_10A_USR + WRK.Text_2_Length_USR (*ZERO);

 // Call program Cvt Date              UP.
 CALL PROGRAM(Cvt Date              UP) ('POD5UPR');
 PARAMETER(WRK.Text_10A_USR);
 PARAMETER(WRK.Text_usr_11);
 PARAMETER(*YYMD);
 PARAMETER(*CYMD);
 PARAMETER(*NONE);

 // WRK.Text USR 7 = WRK.Text usr 11
 WRK.Text_USR_7 = WRK.Text_usr_11;

 // WRK.Number Value - 7 = CVTVAR(WRK.Text USR 7)
 WRK.Number_Value_7 = CVTVAR(WRK.Text_USR_7);

 // WRK.Scheduled Ship Date USR = WRK.Number Value - 7
 WRK.Scheduled_Ship_Date_USR = WRK.Number_Value_7;

 //?** Parse RDD - 26 alpha from SSIS to 10 alpha for CVT DATE
 //?** Then move 11 alpha date to 7 alpha, convert 7 alpha
 //?** to 7 numeric. Finally move 7 numeric to RDD
 // WRK.Text USR 4 = SUBSTRING(DB1.RDD Date/Time Alpha,CON.1,CON.4)
 WRK.Text_USR_4 = SUBSTRING(DB1.RDD_Date_Time_Alpha:1:4);

 // WRK.Text 2 = SUBSTRING(DB1.RDD Date/Time Alpha,CON.6,CON.2)
 WRK.Text_2 = SUBSTRING(DB1.RDD_Date_Time_Alpha:6:2);

 // WRK.Text 2 Length USR = SUBSTRING(DB1.RDD Date/Time Alpha,CON.9,CON.2)
 WRK.Text_2_Length_USR = SUBSTRING(DB1.RDD_Date_Time_Alpha:9:2);

 // WRK.Text 10A USR = CONCAT(WRK.Text USR 4,WRK.Text 2,CON.*ZERO)
 WRK.Text_10A_USR = WRK.Text_USR_4 + WRK.Text_2 (*ZERO);

 // WRK.Text 10A USR = CONCAT(WRK.Text 10A USR,WRK.Text 2 Length USR,CON.*ZERO)
 WRK.Text_10A_USR = WRK.Text_10A_USR + WRK.Text_2_Length_USR (*ZERO);

 // Call program Cvt Date              UP.
 CALL PROGRAM(Cvt Date              UP) ('POD5UPR');
 PARAMETER(WRK.Text_10A_USR);
 PARAMETER(WRK.Text_usr_11);
 PARAMETER(*YYMD);
 PARAMETER(*CYMD);
 PARAMETER(*NONE);

 // WRK.Text USR 7 = WRK.Text usr 11
 WRK.Text_USR_7 = WRK.Text_usr_11;

 // WRK.Number Value - 7 = CVTVAR(WRK.Text USR 7)
 WRK.Number_Value_7 = CVTVAR(WRK.Text_USR_7);

 // WRK.Req Delivery Date = WRK.Number Value - 7
 WRK.Req_Delivery_Date = WRK.Number_Value_7;

 //?** Don't create orders if SSD is before today
 CASE;

 // IF WRK.Scheduled Ship Date USR LT JOB.*Job date
 IF WRK.Scheduled_Ship_Date_USR < JOB.*Job_date;

 // PAR.Return Code Usr = CND.*No Update
 PAR.Return_Code_Usr = 'NOUPD';

 CASE;

 // IF PAR.Broker Code is Japanese Broker
 IF PAR.Broker_Code = 'SEI';

 // LCL.Email Address = CON.DL PRKPRD
 LCL.Email_Address = 'DL PRKPRD';

 // IF PAR.Broker Code is C&K Brokerage
 IF PAR.Broker_Code = 'CKB';

 // LCL.Email Address = CON.DL PUBLIX
 LCL.Email_Address = 'DL PUBLIX';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Email Address = CON.DL JETRO
 LCL.Email_Address = 'DL JETRO';

 ENDIF;

 //?R16637 DN 10/23/20-If in Test Env, Use Test Email DL.
 CASE;

 // IF LCL.@Library List Code is Not PRKFLIB
 IF LCL.@Library_List_Code <> 'PRKFLIB';

 // LCL.Email Address = CON.DL PRKDEV
 LCL.Email_Address = 'DL PRKDEV';

 ENDIF;

 // LCL.Company Number Alpha = CVTVAR(PAR.Company Number)
 LCL.Company_Number_Alpha = CVTVAR(PAR.Company_Number);

 // LCL.Text USR 7 = CVTVAR(WRK.Scheduled Ship Date USR)
 LCL.Text_USR_7 = CVTVAR(WRK.Scheduled_Ship_Date_USR);

 // Call program Cvt Date              UP.
 CALL PROGRAM(Cvt Date              UP) ('POD5UPR');
 PARAMETER(LCL.Text_USR_7);
 PARAMETER(WRK.Text_usr_11);
 PARAMETER(*CYMD);
 PARAMETER(*MDYY);
 PARAMETER('/');

 // LCL.Subject Line USR = CONCAT(CON.Order not created for,DB1.Customer Purchase Order #,CON.1)
 LCL.Subject_Line_USR = 'Order not created for' + DB1.Customer_Purchase_Order_# (1);

 // LCL.Pager Msg 256 USR = CONCAT(WRK.Text usr 11,CON.- Scheduled,CON.1)
 LCL.Pager_Msg_256_USR = WRK.Text_usr_11 + '- Scheduled' (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.Ship Date is too old-Orde,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + 'Ship Date is too old-Orde' (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.r not created for Company,CON.*ZERO)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + 'r not created for Company' (*ZERO);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,LCL.Company Number Alpha,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + LCL.Company_Number_Alpha (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.. Delete old record,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + '. Delete old record' (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.from AS400 before,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + 'from AS400 before' (1);

 // LCL.Pager Msg 256 USR = CONCAT(LCL.Pager Msg 256 USR,CON.recreating orders.,CON.1)
 LCL.Pager_Msg_256_USR = LCL.Pager_Msg_256_USR + 'recreating orders.' (1);

 // Call program CLP Exe ESNDMAIL Cmd   UP.
 CALL PROGRAM(CLP Exe ESNDMAIL Cmd   UP) ('PPW6UPC');
 PARAMETER(LCL.Return_Code_Usr);
 PARAMETER(LCL.Email_Address);
 PARAMETER(LCL.Subject_Line_USR);
 PARAMETER(LCL.Pager_Msg_256_USR);

 //?** Don't create orders if SSD is before today
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?* If Live w/TPM = "N" or "P" then create order and load. E004019
 //?* If Live w/TPM = "Y" then create orders only
 //?     but if live with DOM/EX only, still created the loads here
 //?* Crt Upload Orders - Based on - Live w/TPM flag (for Domestic)
 CASE;

 // IF PAR.Live with TPM is Not Yes
 IF PAR.Live_with_TPM = 'N'/'P';

 // Call program Zzz Domestic Auto Ords XF.
 CALL PROGRAM(Zzz Domestic Auto Ords XF) ('PBO8XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(WRK.Scheduled_Ship_Date_USR);
 PARAMETER(WRK.Scheduled_Ship_Date_USR);
 PARAMETER(WRK.Req_Delivery_Date);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(LCL.System_Value_Numeric);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Price_Code);
 PARAMETER('U');
 PARAMETER(LCL.Reference_Field);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(LCL.Date_4_RGF_Pass);
 PARAMETER(LCL.Date_4_RGT_Pass);
 PARAMETER(DB1.Broker_Code);

 //?* Crt Upload Orders - Based on - Live w/TPM flag (for Domestic)
 // IF *OTHERWISE
 IF *OTHERWISE;

 // Call program CRT Dom Auto Ords Only XF.
 CALL PROGRAM(CRT Dom Auto Ords Only XF) ('PBQQXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(WRK.Scheduled_Ship_Date_USR);
 PARAMETER(WRK.Scheduled_Ship_Date_USR);
 PARAMETER(WRK.Req_Delivery_Date);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(LCL.System_Value_Numeric);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Price_Code);
 PARAMETER('U');
 PARAMETER(LCL.Reference_Field);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(LCL.Date_4_RGF_Pass);
 PARAMETER(LCL.Date_4_RGT_Pass);
 PARAMETER(DB1.Broker_Code);

 ENDIF;

 //?** Default printer to Sales, Domestic, don't put on hold
 CASE;

 // IF PAR.Broker Code is C&K Brokerage
 IF PAR.Broker_Code = 'CKB';

 // WRK.Company Value Code Usr = CON.DOMPRINTER
 WRK.Company_Value_Code_Usr = 'DOMPRINTER';

 // IF PAR.Broker Code is JETRO Broker
 IF PAR.Broker_Code = 'JETRO';

 // WRK.Company Value Code Usr = CON.JETPRINTER
 WRK.Company_Value_Code_Usr = 'JETPRINTER';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Company Value Code Usr = CON.DOMPRINTER
 WRK.Company_Value_Code_Usr = 'DOMPRINTER';

 ENDIF;

 // WRK.Hold = CND.No
 WRK.Hold = *NO;

 // Call program Rtv Alpha Value       XF.
 CALL PROGRAM(Rtv Alpha Value       XF) ('POMTXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(WRK.Company_Value_Code_Usr);
 PARAMETER(WRK.Printer_Device);

 // Call program PRT Acknowledgements UP.
 CALL PROGRAM(PRT Acknowledgements UP) ('PDJWPCLP');
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(1);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER('S');
 PARAMETER(WRK.Printer_Device);
 PARAMETER(WRK.Hold);
 PARAMETER(*YES);
 PARAMETER(1);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER('N');

 EXECUTE FUNCTION(RTV Order Qty/Wgt TotalRT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC2027679;
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(LCL.Order_Value_Total);
 PARAMETER(LCL.Order_Weight_Total);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // Call program EDT Post Open Orders 2 XF.
 CALL PROGRAM(EDT Post Open Orders 2 XF) ('POI4XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Order_Number_1_PASS_USR);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(LCL.Order_Value_Total);
 PARAMETER(LCL.Order_Weight_Total);
 PARAMETER(*BLANK);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER('OE');

 ENDIF;

}


ENDIF;

