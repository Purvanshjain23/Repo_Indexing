// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBSEPVR
// ?Date: 14.08.2025 Time: 03:49:13
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?E3787 JJH 08/06/15 - New PFS Product and Production Schedule
//?- This function will create the PFS Prod Schedule Dtl records
//?  as set up in the PFS Prod Sched Batch Hdr Sel file.
//?- The PFS Prod Sched Batch Dtl records are then processed by the
//?  PFSDWNGUY and PFSDWNSTJ (aka 7-Miniute Jobs).
ENDDO;

//?USER: Load screen

CASE;

// IF PAR.PFS Baseline Schedule is Baseline
IF PAR.PFS_Baseline_Schedule = 'B';

// DTL.PFS Baseline Schedule USR = CND.Yes
DTL.PFS_Baseline_Schedule_USR = 'Y';

// IF PAR.PFS Baseline Schedule is Not Baseline
IF PAR.PFS_Baseline_Schedule = *BLANK;

// DTL.PFS Baseline Schedule USR = CND.No
DTL.PFS_Baseline_Schedule_USR = 'N';

ENDIF;

//?USER: User defined action

//?Convert PFS Change Date to YYYYMMDD
EXECUTE FUNCTION(Rtv System Date *CYMD IF) TYPE(EXCINTFUN)                      AC1952751;
PARAMETER(LCL.System_Date_USR);
{
 //?Execute internal function

 // LCL.*System timestamp = JOB.*System timestamp
 LCL.*System_timestamp = JOB.*System_timestamp;

 // LCL.Year USR = SUBSTRING(LCL.*System timestamp,CON.1,CON.4)
 LCL.Year_USR = SUBSTRING(LCL.*System_timestamp:1:4);

 // LCL.Month USR = SUBSTRING(LCL.*System timestamp,CON.6,CON.2)
 LCL.Month_USR = SUBSTRING(LCL.*System_timestamp:6:2);

 // LCL.Day USR = SUBSTRING(LCL.*System timestamp,CON.9,CON.2)
 LCL.Day_USR = SUBSTRING(LCL.*System_timestamp:9:2);

 // LCL.Date (Char-8) USR = CONCAT(LCL.Year USR,LCL.Month USR,CON.*ZERO)
 LCL.Date_Char_8_USR = LCL.Year_USR + LCL.Month_USR (*ZERO);

 // LCL.Date (Char-8) USR = CONCAT(LCL.Date (Char-8) USR,LCL.Day USR,CON.*ZERO)
 LCL.Date_Char_8_USR = LCL.Date_Char_8_USR + LCL.Day_USR (*ZERO);

 // LCL.DATE = CVTVAR(LCL.Date (Char-8) USR)
 LCL.DATE = CVTVAR(LCL.Date_Char_8_USR);

 EXECUTE FUNCTION(CVT *YYMD to *CYMD    IF) TYPE(EXCINTFUN)                      AC1929228;
 PARAMETER(PAR.System_Date_USR);
 PARAMETER(LCL.DATE);
 {
  //?Execute internal function

  //?** YEAR **
  // PAR.Year Code = PAR.DATE / CON.10000 *
  PAR.Year_Code = PAR.DATE / 10000;

  // PAR.Year  NBR USR = PAR.Year Code
  PAR.Year_NBR_USR = PAR.Year_Code;

  // PAR.Year  (Char) USR = CVTVAR(PAR.Year  NBR USR)
  PAR.Year_Char_USR = CVTVAR(PAR.Year_NBR_USR);

  //?** MONTH **
  // PAR.Month                 USR = PAR.DATE / CON.100 *
  PAR.Month_USR = PAR.DATE / 100;

  // PAR.Month (Char) USR = CVTVAR(PAR.Month                 USR)
  PAR.Month_Char_USR = CVTVAR(PAR.Month_USR);

  //?** DAY **
  // PAR.Day of Month USR = PAR.DATE
  PAR.Day_of_Month_USR = PAR.DATE;

  // PAR.Day   (Char) USR = CVTVAR(PAR.Day of Month USR)
  PAR.Day_Char_USR = CVTVAR(PAR.Day_of_Month_USR);

  //?CENTURY+YEAR
  CASE;

  // IF PAR.Year Code is Twentieth Century
  IF PAR.Year_Code <= 1999;

  // PAR.Date (Alpha) USR = CONCAT(CON.0,PAR.Year  (Char) USR,CON.*ZERO)
  PAR.Date_Alpha_USR = '0' + PAR.Year_Char_USR (*ZERO);

  //?CENTURY+YEAR
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Date (Alpha) USR = CONCAT(CON.1,PAR.Year  (Char) USR,CON.*ZERO)
  PAR.Date_Alpha_USR = '1' + PAR.Year_Char_USR (*ZERO);

  ENDIF;

  // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Month (Char) USR,CON.*ZERO)
  PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Month_Char_USR (*ZERO);

  // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Day   (Char) USR,CON.*ZERO)
  PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date                  USR = CVTVAR(PAR.Date (Alpha) USR)
  PAR.Date_USR = CVTVAR(PAR.Date_Alpha_USR);

 }

}


EXECUTE FUNCTION(CNV cyymmdd to yyyymmdd) TYPE(EXCINTFUN)                       AC1732965;
PARAMETER(LCL.System_Date_USR);
PARAMETER(LCL.PFS_Change_Date);
{
 //?Execute internal function

 // LCL.Year Code = PAR.Date In  (7,0) USR *YEAR
 LCL.Year_Code = DATEDTLS(PAR.Date_In_70_USR 'YR' 1111111 'NONE' 'N' 1);

 // LCL.Month NBR USR = PAR.Date In  (7,0) USR *MONTH
 LCL.Month_NBR_USR = DATEDTLS(PAR.Date_In_70_USR 'MO' 1111111 'NONE' 'N' 1);

 // LCL.Day of Month USR = PAR.Date In  (7,0) USR *DAY OF MONTH
 LCL.Day_of_Month_USR = DATEDTLS(PAR.Date_In_70_USR 'DM' 1111111 'NONE' 'N' 1);

 // PAR.Year Alpha (YYYY) USR = CVTVAR(LCL.Year Code)
 PAR.Year_Alpha_YYYY_USR = CVTVAR(LCL.Year_Code);

 // PAR.Month (Char) USR = CVTVAR(LCL.Month NBR USR)
 PAR.Month_Char_USR = CVTVAR(LCL.Month_NBR_USR);

 // PAR.Day   (Char) USR = CVTVAR(LCL.Day of Month USR)
 PAR.Day_Char_USR = CVTVAR(LCL.Day_of_Month_USR);

 // PAR.Date (Char-8) USR = CONCAT(PAR.Year Alpha (YYYY) USR,PAR.Month (Char) USR,CON.*ZERO)
 PAR.Date_Char_8_USR = PAR.Year_Alpha_YYYY_USR + PAR.Month_Char_USR (*ZERO);

 // PAR.Date (Char-8) USR = CONCAT(PAR.Date (Char-8) USR,PAR.Day   (Char) USR,CON.*ZERO)
 PAR.Date_Char_8_USR = PAR.Date_Char_8_USR + PAR.Day_Char_USR (*ZERO);

 // PAR.Date Out (8,0) USR = CVTVAR(PAR.Date (Char-8) USR)
 PAR.Date_Out_80_USR = CVTVAR(PAR.Date_Char_8_USR);

}


//?Initialize PFS Prod Sched Batch Dtl fields
// LCL.PFS Change time = JOB.*Job time
LCL.PFS_Change_Time = JOB.*Job_time;

//?Create PFS Prod Sched Batch Dtl records
// Call program Snd PFS Prd Sch Bt Dt XF.
CALL PROGRAM(Snd PFS Prd Sch Bt Dt XF) ('PBSGXFR');
PARAMETER(DTL.PFS_Company_Number);
PARAMETER(DTL.PFS_Batch_Date);
PARAMETER(DTL.PFS_Batch_Time);
PARAMETER(DTL.PFS_User_ID);

//?Update PFS Prod Sched Batch Hdr is Ready to Send
EXECUTE FUNCTION(Chg PFS Prd Sch Bt Hd RT) TYPE(RTVOBJ) FILE(PBB2CPP)           AC2111881;
PARAMETER(DTL.PFS_Company_Number);
PARAMETER(DTL.PFS_Batch_Date);
PARAMETER(DTL.PFS_Batch_Time);
PARAMETER(DTL.PFS_User_ID);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(6);
PARAMETER(LCL.PFS_Change_Date);
PARAMETER(LCL.PFS_Change_Time);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg PFS Prd Sch Bt Hd CH) TYPE(CHGOBJ) FILE(PBB2CPP)           AC2109263;
 PARAMETER(DB1.PFS_Company_Number);
 PARAMETER(DB1.PFS_Batch_Date);
 PARAMETER(DB1.PFS_Batch_Time);
 PARAMETER(DB1.PFS_User_ID);
 PARAMETER(DB1.PFS_Baseline_Schedule);
 PARAMETER(PAR.PFS_Batch_Sent_Date);
 PARAMETER(PAR.PFS_Batch_Sent_Time);
 PARAMETER(DB1.PFS_Record_Status);
 PARAMETER(PAR.PFS_Process_Status);
 PARAMETER(DB1.PFS_Error_Reason);
 PARAMETER(DB1.PFS_Create_Date);
 PARAMETER(DB1.PFS_Create_Time);
 PARAMETER(PAR.PFS_Change_Date);
 PARAMETER(PAR.PFS_Change_Time);
}


PGM.*Return_code = *BLANK;

RETURN;

//?USER: Exit program processing

CASE;

// IF DTL.*CMD key is CF03
IF DTL.*CMD_key = '03';

PGM.*Return_code = 'Y2U0016';

RETURN;

ENDIF;

