      *****************  RPG PROGRAM HEADING  ************************
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Datamart--Sales
      * PROGRAM:     SH220 - Datamart Sales: Build Commodity Market Price
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     12/31/07
      *
      *           This file in the Data Mart will be cleared/built with
      *           each load of the Data Mart. Adam Gross wants the latest
      *           record for each Market Code/Price Group.
      *
      ****************************************************************
      * Date      Programmer
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fomf0cpl1  if   e           k disk
      *  Commodity Market Price
      *
      *
     Fshp220    o    e           k disk
      *  Datamart: Commodity Market Price
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *---------------------------------------------------------------
      * Standalone fields
      *---------------------------------------------------------------
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svcmmkcd        s                   like(cmcmmkcd)
     D svlrcd          s                   like(cmlrcd)
      *
      * Workfields
      *
     D wklbpr          s                   like(cmlbpr)
     D wksyndt         s                   like(f0eqdt)
      *
      * Parms
      *
     D xxcorg          s                   like(cmcorg)
      *
      *
      ****************************************************************
      * Data Structures
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read each record in the OMS Commodity Market Price file. Only
      * write the most recent record for each Commodity Market/Price
      * Group.
     C     *loval        setll     omf0cpl1
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      omf0cpl1                               90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   move      f0lqcd        svcmmkcd
     C                   move      f0lrcd        svlrcd
      *
     C                   when      f0lqcd <> svcmmkcd or
     C                             f0lrcd <> svlrcd
     C                   exsr      $wrt220
     C                   endsl
      *
      * Detail
     C                   z-add     f0eqdt        wksyndt
     C                   z-add     f0a5pr        wklbpr
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      * EOF processing
     C                   if        first = no
     C                   exsr      $wrt220
     C                   endif
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      *  Write the record
      *---------------------------------------------------------------
      *
     C     $wrt220       begsr
      *
     C                   move      xxcorg        cmcorg
     C                   move      svcmmkcd      cmcmmkcd
     C                   move      svlrcd        cmlrcd
     C                   z-add     wklbpr        cmlbpr
      * Flip date
     C                   exsr      $dates
     C                   write     cmrec
     C                   clear                   cmrec
      *
     C                   move      f0lqcd        svcmmkcd
     C                   move      f0lrcd        svlrcd
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      *  Flip Market Price Date into 3 formats
      *---------------------------------------------------------------
      *
     C     $dates        begsr
      *
     C     *cymd         test(d)                 wksyndt                92
     C                   if        *in92 = *off
     C     *cymd         move      wksyndt       cmmpdt
     C                   move      cmmpdt        cmmpdtmd
     C     *iso          move      cmmpdt        cm80mpdt
     C                   else
     C                   move      *loval        cmmpdt
     C                   move      *loval        cmmpdtmd
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      *  Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     *entry        plist
     C                   parm                    xxcorg
      *
     C                   endsr
      /EJECT
