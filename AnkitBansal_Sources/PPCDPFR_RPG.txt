     H/TITLE Prt Base Availability PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 08/07/17  Time  : 11:09:20
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FPDKLREL2IF  E           K        DISK
      * RSQ : Company Item Avail Group  Co/Group/Item
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FPDKKREL1IF  E           K        DISK
      * RTV : Availability Group        Retrieval index
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCABZRELDIF  E           K        DISK
      * RTV : Company Item              Active Items Only
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPDL5CPL1IF  E           K        DISK
      * RTV : Item Lot Location         Retrieval index
      *
     FCAB1REL0IF  E           K        DISK
      * RTV : Item Balance Detail       Retrieval index       NV
      *
     FOPBGWKLFIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FOMBYREL1IF  E           K        DISK
      * RTV : Item Default              Retrieval index
      *
     FPDIOREL8IF  E           K        DISK
      * RSQ : Item Bill Of Material     Co/CompItem/Item Typ=C
      *
     FPPAFCPL2IF  E           K        DISK
      * RSQ : PS Std Production         Co/Item/Whs/Dte(D)
      *
     FPDI8CPL1IF  E           K        DISK
      * RTV : PS Prod Item Schedule     Retrieval index
      *
     FPPCDPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Base Availability PF  Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
     E                    YDOW        7  1               *Days of week
     I@BZREZG
      * Company Item              Active Items Only
      * Renamed input format fields
     I              BZAIC3                          WAAIC3
     I              BZHGCD                          WAHGCD
     I              BZAVNA                          WAAVNA
     I              BZAWNA                          WAAWNA
     I              BZL7NA                          WAL7NA
     I              BZL8NA                          WAL8NA
     I              BZL6NA                          WAL6NA
     I              BZMFNA                          WAMFNA
     I              BZADCD                          WAADCD
     I              BZAWPC                          WAAWPC
     I              BZLXST                          WALXST
     I              BZAECD                          WAAECD
     I              BZAXPC                          WAAXPC
     I              BZLYST                          WALYST
     I              BZAFCD                          WAAFCD
     I              BZAICD                          WAAICD
     I              BZAIWG                          WAAIWG
     I              BZHICD                          WAHICD
     I              BZRBCD                          WARBCD
     I              BZFZST                          WAFZST
     I              BZAVST                          WAAVST
     I              BZCZWG                          WACZWG
     I              BZC0WG                          WAC0WG
     I              BZURTN                          WAURTN
     I              BZAJC8                          WAAJC8
     I              BZRINB                          WARINB
     I              BZRHNB                          WARHNB
     I              BZRGNB                          WARGNB
     I              BZLNCD                          WALNCD
     I              BZTFNB                          WATFNB
     I              BZN0CD                          WAN0CD
     I              BZX4ST                          WAX4ST
     I              BZTMVA                          WATMVA
     I              BZTNVA                          WATNVA
     I              BZBLPR                          WABLPR
     I              BZBMPR                          WABMPR
     I              BZLRCD                          WALRCD
     I              BZU9ST                          WAU9ST
     I              BZCMCO                          WACMCO
     I              BZQ1CD                          WAQ1CD
     I              BZQ8CD                          WAQ8CD
     I              BZCHTM                          WACHTM
     I              BZQZCD                          WAQZCD
     I              BZXWST                          WAXWST
     I              BZXXST                          WAXXST
     I              BZVMST                          WAVMST
     I              BZSWGH                          WASWGH
     I              BZPPHE                          WAPPHE
     I              BZR3CD                          WAR3CD
     I              BZSDCD                          WASDCD
     I              BZICN1                          WAICN1
     I              BZSVCD                          WASVCD
     I              BZICN2                          WAICN2
     I              BZSWCD                          WASWCD
     I              BZV2NB                          WAV2NB
     I              BZSXCD                          WASXCD
     I              BZITCN                          WAITCN
     I              BZSYCD                          WASYCD
     I              BZITC5                          WAITC5
     I              BZSZCD                          WASZCD
     I              BZICN6                          WAICN6
     I              BZS0CD                          WAS0CD
     I              BZICN7                          WAICN7
     I              BZS1CD                          WAS1CD
     I              BZICN8                          WAICN8
     I              BZS2CD                          WAS2CD
     I              BZICN9                          WAICN9
     I              BZS3CD                          WAS3CD
     I              BZICN0                          WAICN0
     I              BZS4CD                          WAS4CD
     I              BZSFNB                          WASFNB
     I              BZA3WG                          WAA3WG
     I              BZSJNB                          WASJNB
     I              BZLLCD                          WALLCD
     I              BZLMCD                          WALMCD
     I              BZP3ST                          WAP3ST
     I              BZSKNB                          WASKNB
     I              BZSLNB                          WASLNB
     I              BZSMNB                          WASMNB
     I              BZP4ST                          WAP4ST
     I              BZCFNB                          WACFNB
     I              BZCGNB                          WACGNB
     I              BZILNB                          WAILNB
     I              BZCHNB                          WACHNB
     I              BZCINB                          WACINB
     I              BZCJNB                          WACJNB
     I              BZCMNB                          WACMNB
     I              BZCNNB                          WACNNB
     I              BZCRNB                          WACRNB
     I              BZCSNB                          WACSNB
     I              BZCVNB                          WACVNB
     I              BZCWNB                          WACWNB
     I              BZCXNB                          WACXNB
     I              BZCZNB                          WACZNB
     I              BZC0NB                          WAC0NB
     I              BZN1CD                          WAN1CD
     I              BZB4NB                          WAB4NB
     I              BZB5NB                          WAB5NB
     I              BZX5ST                          WAX5ST
     I              BZX6ST                          WAX6ST
     I              BZX7ST                          WAX7ST
     I              BZPCCT                          WAPCCT
     I              BZBDNB                          WABDNB
     I              BZBJNB                          WABJNB
     I              BZSUST                          WASUST
     I              BZSVST                          WASVST
     I              BZSYST                          WASYST
     I              BZSZST                          WASZST
     I              BZS1ST                          WAS1ST
     I              BZXRCD                          WAXRCD
     I              BZXTCD                          WAXTCD
     I              BZXUCD                          WAXUCD
     I              BZF5WG                          WAF5WG
     I              BZF6WG                          WAF6WG
     I              BZF7WG                          WAF7WG
     I              BZBLNB                          WABLNB
     I              BZBNNB                          WABNNB
     I              BZS2ST                          WAS2ST
     I              BZS4ST                          WAS4ST
     I              BZS5ST                          WAS5ST
     I              BZS6ST                          WAS6ST
     I              BZS8ST                          WAS8ST
     I              BZS9ST                          WAS9ST
     I              BZTCST                          WATCST
     I              BZTDST                          WATDST
     I              BZUVST                          WAUVST
     I              BZUWST                          WAUWST
     I              BZUXST                          WAUXST
     I              BZVSST                          WAVSST
     I              BZAATM                          WAAATM
     I              BZAYNA                          WAAYNA
     I              BZA0NA                          WAA0NA
     I              BZAXDT                          WAAXDT
      *
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WBAJCD
     I              ADF8NA                          WBF8NA
     I              ADACNA                          WBACNA
     I              ADADNA                          WBADNA
     I              ADAENA                          WBAENA
     I              ADAJNA                          WBAJNA
     I              ADBTTX                          WBBTTX
     I              ADAOCD                          WBAOCD
     I              ADBGCD                          WBBGCD
     I              ADVHST                          WBVHST
     I              ADMPNA                          WBMPNA
     I              ADWPST                          WBWPST
     I              ADXUST                          WBXUST
     I              ADT0ST                          WBT0ST
     I              ADT1ST                          WBT1ST
     I              ADDBNB                          WBDBNB
     I              ADT2ST                          WBT2ST
     I              ADT3ST                          WBT3ST
     I              ADT4ST                          WBT4ST
     I              ADT6ST                          WBT6ST
     I              ADBWC3                          WBBWC3
     I              ADBTC3                          WBBTC3
     I              ADBUC3                          WBBUC3
     I              ADBVC3                          WBBVC3
     I              ADFCAA                          WBFCAA
     I              ADRQSX                          WBRQSX
     I              ADRRSX                          WBRRSX
     I              ADRSSX                          WBRSSX
     I              ADRTSX                          WBRTSX
     I              ADT7ST                          WBT7ST
     I              ADT8ST                          WBT8ST
     I              ADRNSX                          WBRNSX
     I              ADROSX                          WBROSX
     I              ADRPSX                          WBRPSX
     I              ADUVST                          WBUVST
     I              ADUWST                          WBUWST
     I              ADUXST                          WBUXST
     I              ADVSST                          WBVSST
     I              ADAATM                          WBAATM
     I              ADAYNA                          WBAYNA
     I              ADA0NA                          WBA0NA
     I              ADAXDT                          WBAXDT
      *
     I@AFCPUA
      * PS Std Production         Co/Item/Whs/Dte(D)
      * Renamed input format fields
     I              AFAIC3                          WCAIC3
     I              AFHGCD                          WCHGCD
     I              AFAJCD                          WCAJCD
     I              AFAUDT                          WCAUDT
     I              AFW0NX                          WCW0NX
     I              AFW1NX                          WCW1NX
     I              AFW2NX                          WCW2NX
     I              AFW3NX                          WCW3NX
     I              AFW4NX                          WCW4NX
     I              AFUVST                          WCUVST
     I              AFUWST                          WCUWST
     I              AFUXST                          WCUXST
     I              AFVSST                          WCVSST
     I              AFAATM                          WCAATM
     I              AFAYNA                          WCAYNA
     I              AFA0NA                          WCA0NA
     I              AFAXDT                          WCAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Company Item Avail Group
      * I : RST Company Number
     I                                    P   1   20P1AIC3
      * I : RST Availability Group Code
     I                                        3   5 P1V4CD
     IP2PARM      DS
      * FLD: *Arrays
      * I :  Warehouse Code
     I                                        1   3 P2AJCD
      * I :  Date From             USR
     I                                    P   4   70P2JEDT
      * I :  Date To               USR
     I                                    P   8  110P2JFDT
      * N :  USR Day 1
     I                                    P  12  150P2FFDT
      * N :  USR Day 2
     I                                    P  16  190P2E1DT
      * N :  USR Day 3
     I                                    P  20  230P2E2DT
      * N :  USR Day 4
     I                                    P  24  270P2E3DT
      * N :  USR Day 5
     I                                    P  28  310P2E4DT
     IP3PARM      DS
      * FLD: *Arrays
      * N :  USR Day 6
     I                                    P   1   40P3E5DT
      * N :  USR Day 7
     I                                    P   5   80P3E6DT
      * N :  USR Day 8
     I                                    P   9  120P3FKDT
      * N :  USR Day 9
     I                                    P  13  160P3FLDT
      * N :  USR Day 10
     I                                    P  17  200P3FGDT
      * N :  USR Day 11
     I                                    P  21  240P3FHDT
      * N :  USR Day 12
     I                                    P  25  280P3FIDT
      * N :  USR Day 13
     I                                    P  29  320P3FJDT
      * N :  USR Day 14
     I                                    P  33  360P3HPDT
      * N :  USR Day 15
     I                                    P  37  400P3HQDT
      * N :  USR Day 16
     I                                    P  41  440P3HRDT
     IP4PARM      DS
      * FLD: *Arrays
      * N :  Generic Heading 1
     I                                        1   8 P4MWTX
      * N :  Generic Heading 2
     I                                        9  16 P4MXTX
      * N :  Generic Heading 3
     I                                       17  24 P4MYTX
      * N :  Generic Heading 4
     I                                       25  32 P4MZTX
      * N :  Generic Heading 5
     I                                       33  40 P4M0TX
      * N :  Generic Heading 6
     I                                       41  48 P4M1TX
      * N :  Generic Heading 7
     I                                       49  56 P4M2TX
      * N :  Generic Heading 8
     I                                       57  64 P4M3TX
      * N :  Generic Heading 9
     I                                       65  72 P4M4TX
      * N :  Generic Heading 10
     I                                       73  80 P4M5TX
      * N :  Generic Heading 11
     I                                       81  88 P4M6TX
      * N :  Generic Heading 12
     I                                       89  96 P4M7TX
      * N :  Generic Heading 13
     I                                       97 104 P4M8TX
      * N :  Generic Heading 14
     I                                      105 112 P4M9TX
      * N :  Display Line Flag
     I                                      113 114 P4DFST
      * N :  Generic Heading 15
     I                                      115 122 P4Y5TX
      * N :  Generic Heading 16
     I                                      123 130 P4Y6TX
     IP5PARM      DS
      * N :  Total Sched Shipments USR
     I                                    P   1   51P5KNNB
     IP6PARM      DS
      * N :  Grand Total Schd Ship USR
     I                                    P   1   51P6LGNB
     IP7PARM      DS
      * I :  Std Prod Input Sts USR
     I                                        1   1 P7NKTX
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1V4CD    PARM           WP0002  3        Availability Gr
     C           P2AJCD    PARM           WP0003  3        Warehouse Code
     C           P2JEDT    PARM           WP0004  70       Date From
     C           P2JFDT    PARM           WP0005  70       Date To
     C           P7NKTX    PARM           WP0006  1        Std Prod Input
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Base Availability PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$HENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Base Availability PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN KLAIC3    WQKA01           Company Number
     C           *LIKE     DEFN KLV4CD    WQKA02           Availability Gr
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           Company Number
     C                     KFLD           WQKA02           Availability Gr
      * Setup key
     C                     Z-ADDP1AIC3    WQKA01           Company Number
     C                     MOVELP1V4CD    WQKA02           Availability Gr
      * Establish starting position
     C           KRSA      SETLL@KLREHI                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Availability Gr
     C                     MOVEL'Y'       W0AL02  1        Item Display Se
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $BAIC3           Company Number
     C                     MOVEL*BLANK    $BADTX           Name
     C                     Z-ADD*ZERO     $BJEDT           Date From
     C                     Z-ADD*ZERO     $BJFDT           Date To
     C                     MOVEL*BLANK    $BV4CD           Availability Gr
     C                     MOVEL*BLANK    $BNVNA           Availability Gr
     C                     MOVEL*BLANK    $BAJCD           Warehouse Code
     C                     MOVEL*BLANK    $BF8NA           Warehouse Descr
     C                     MOVEL*BLANK    $BNKTX           Std Prod Input
     C                     MOVEL*BLANK    $BSQNA           Std Prod Input
     C                     MOVEL*BLANK    $BCPCD           USR Warehouse C
     C                     MOVEL*BLANK    $BAUNA           Description
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDKLAIC3    $CAIC3           Company Number
     C                     Z-ADD*ZERO     $CFFDT           USR Day 1
     C                     MOVEL*BLANK    $CMWTX           Generic Heading
     C                     MOVEL*BLANK    $CMXTX           Generic Heading
     C                     MOVEL*BLANK    $CYQTX           Generic Heading
     C                     MOVEL*BLANK    $CMYTX           Generic Heading
     C                     MOVEL*BLANK    $CYRTX           Generic Heading
     C                     MOVEL*BLANK    $CMZTX           Generic Heading
     C                     MOVEL*BLANK    $CYSTX           Generic Heading
     C                     MOVEL*BLANK    $CM0TX           Generic Heading
     C                     MOVEL*BLANK    $CYTTX           Generic Heading
     C                     MOVEL*BLANK    $CM1TX           Generic Heading
     C                     MOVEL*BLANK    $CYUTX           Generic Heading
     C                     MOVEL*BLANK    $CM2TX           Generic Heading
     C                     MOVEL*BLANK    $CYVTX           Generic Heading
     C                     MOVEL*BLANK    $CM3TX           Generic Heading
     C                     MOVEL*BLANK    $CYWTX           Generic Heading
     C                     MOVEL*BLANK    $CM4TX           Generic Heading
     C                     MOVEL*BLANK    $CYXTX           Generic Heading
     C                     MOVEL*BLANK    $CM5TX           Generic Heading
     C                     MOVEL*BLANK    $CYYTX           Generic Heading
     C                     MOVEL*BLANK    $CM6TX           Generic Heading
     C                     MOVEL*BLANK    $CYZTX           Generic Heading
     C                     MOVEL*BLANK    $CM7TX           Generic Heading
     C                     MOVEL*BLANK    $CY0TX           Generic Heading
     C                     MOVEL*BLANK    $CM8TX           Generic Heading
     C                     MOVEL*BLANK    $CY1TX           Generic Heading
     C                     MOVEL*BLANK    $CM9TX           Generic Heading
     C                     MOVEL*BLANK    $CY2TX           Generic Heading
     C                     MOVEL*BLANK    $CY5TX           Generic Heading
     C                     MOVEL*BLANK    $CY3TX           Generic Heading
     C                     MOVEL*BLANK    $CY6TX           Generic Heading
     C                     MOVEL*BLANK    $CY4TX           Generic Heading
     C                     Z-ADD*ZERO     $CE1DT           USR Day 2
     C                     Z-ADD*ZERO     $CE2DT           USR Day 3
     C                     Z-ADD*ZERO     $CE3DT           USR Day 4
     C                     Z-ADD*ZERO     $CE4DT           USR Day 5
     C                     Z-ADD*ZERO     $CE5DT           USR Day 6
     C                     Z-ADD*ZERO     $CE6DT           USR Day 7
     C                     MOVEL*BLANK    $CZ2CD           Warehouse 9 USR
     C                     MOVEL*BLANK    $CZ3CD           Warehouse 10 US
     C                     MOVEL*BLANK    $CSTTX           USR Text 7
     C                     MOVEL*BLANK    $CZ6CD           Warehouse 13 US
     C                     MOVEL*BLANK    $CZ7CD           Warehouse 14 US
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDKLAIC3    $DAIC3           Company Number
     C                     MOVEL*BLANK    $DPFTX           Text 1 Length U
     C                     Z-ADDKLHGCD    $DHGCD           Item Code
     C                     MOVEL*BLANK    $DOONA           Item Desc DRV
     C                     Z-ADD*ZERO     $DAIWG           Unit Weight
     C                     Z-ADD*ZERO     $DWINB           USR Weight 1
     C                     Z-ADD*ZERO     $DBGNX           USR 3 Numeric
     C                     MOVEL*BLANK    $DADCD           U/M - Primary
     C                     Z-ADD*ZERO     $DLEQT           Qty On-Hand USR
     C                     Z-ADD*ZERO     $DU5NX           Qty On-Hand 7.2
     C                     Z-ADD*ZERO     $DLGWG           Wgt On-Hand USR
     C                     Z-ADD*ZERO     $DLIQT           Qty Sched Prod
     C                     Z-ADD*ZERO     $DVMNX           Qty Sched Prod
     C                     Z-ADD*ZERO     $DLHWG           Wgt Sched Prod
     C                     Z-ADD*ZERO     $DLKQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DU6NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DK0WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $DLGQT           Qty EOD Inv 1 U
     C                     Z-ADD*ZERO     $DVNNX           Qty EOD Inv 1 7
     C                     Z-ADD*ZERO     $DLIWG           Wgt EOD Inv 1 U
     C                     Z-ADD*ZERO     $DIRQT           Quantity Ordere
     C                     Z-ADD*ZERO     $DQS01           Quantity Schedu
     C                     Z-ADD*ZERO     $DQTO1           Quantity Ordere
     C                     Z-ADD*ZERO     $DQS02           Quantity Schedu
     C                     Z-ADD*ZERO     $DQT02           Quantity Ordere
     C                     Z-ADD*ZERO     $DQS03           Quantity Schedu
     C                     Z-ADD*ZERO     $DQT03           Quantity Ordere
     C                     Z-ADD*ZERO     $DQS04           Quantity Schedu
     C                     Z-ADD*ZERO     $DQT05           Quantity Ordere
     C                     Z-ADD*ZERO     $DQS05           Quantity Schedu
     C                     Z-ADD*ZERO     $DASNX           Quantity Sched
     C                     Z-ADD*ZERO     $DAQNX           Quantity On-Han
     C                     Z-ADD*ZERO     $DLLQT           Qty Sched Ord 2
     C                     Z-ADD*ZERO     $DVENX           Qty Sched Ord 2
     C                     Z-ADD*ZERO     $DK8WG           Wgt Sched Ord 2
     C                     Z-ADD*ZERO     $DLVQT           Qty Sched Ord 3
     C                     Z-ADD*ZERO     $DVFNX           Qty Sched Ord 3
     C                     Z-ADD*ZERO     $DK9WG           Wgt Sched Ord 3
     C                     Z-ADD*ZERO     $DMOQT           Qty Sched Ord 4
     C                     Z-ADD*ZERO     $DVGNX           Qty Sched Ord 4
     C                     Z-ADD*ZERO     $DLAWG           Wgt Sched Ord 4
     C                     Z-ADD*ZERO     $DMPQT           Qty Sched Ord 5
     C                     Z-ADD*ZERO     $DVHNX           Qty Sched Ord 5
     C                     Z-ADD*ZERO     $DLBWG           Wgt Sched Ord 5
     C                     Z-ADD*ZERO     $DMQQT           Qty Sched Ord 6
     C                     Z-ADD*ZERO     $DVINX           Qty Sched Ord 6
     C                     Z-ADD*ZERO     $DLCWG           Wgt Sched Ord 6
     C                     Z-ADD*ZERO     $DMRQT           Qty Sched Ord 7
     C                     Z-ADD*ZERO     $DVJNX           Qty Sched Ord 7
     C                     Z-ADD*ZERO     $DLDWG           Wgt Sched Ord 7
     C                     Z-ADD*ZERO     $DMUQT           Qty Sched Ord 8
     C                     Z-ADD*ZERO     $DVKNX           Qty Sched Ord 8
     C                     Z-ADD*ZERO     $DLEWG           Wgt Sched Ord 8
     C                     Z-ADD*ZERO     $DMVQT           Qty Sched Ord 9
     C                     Z-ADD*ZERO     $DVLNX           Qty Sched Ord 9
     C                     Z-ADD*ZERO     $DLFWG           Wgt Sched Ord 9
     C                     Z-ADD*ZERO     $DMWQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DU7NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DK1WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $DMXQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DU8NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DK2WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $DMYQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DU9NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DK3WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $DMZQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DVANX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DK4WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $DM0QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DVBNX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DK5WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $DM6QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DVCNX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DK6WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $DM7QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DVDNX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DK7WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $DODNB           Number Value -
     C                     Z-ADD*ZERO     $DQLTX           Quantity Loc Tr
     C                     Z-ADD*ZERO     $DATNX           Quantity Sched
     C                     Z-ADD*ZERO     $DARNX           Quantity On-Han
     C                     Z-ADD*ZERO     $DTVNB           Calc 7
     C                     MOVELKLV4CD    $DV4CD           Availability Gr
     C                     Z-ADDKLIDSQ    $DIDSQ           Item Display Se
     C                     MOVELKLUVST    $DUVST           EDI Status 1
     C                     MOVELKLUWST    $DUWST           EDI Status 2
     C                     MOVELKLUXST    $DUXST           EDI Status 3
     C                     MOVELKLVSST    $DVSST           Record Status
     C                     Z-ADDKLAATM    $DAATM           Job Time
     C                     MOVELKLAYNA    $DAYNA           User Id
     C                     MOVELKLA0NA    $DA0NA           Job Name
     C                     Z-ADDKLAXDT    $DAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * PRTOBJ calls after print of detail format
      * Embedded PRTOBJ : Prt Base Avail        PO
     C                     EXSR UBSUBR                     Embedded PRTOBJ
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN KLAIC3    WZA001           Company Number
     C                     Z-ADDKLAIC3    WZA001
     C           *LIKE     DEFN KLV4CD    WZA002           Availability Gr
     C                     MOVELKLV4CD    WZA002
     C           *LIKE     DEFN KLIDSQ    WZA003           Item Display Se
     C                     Z-ADDKLIDSQ    WZA003
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@KLREHI                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * RMC 07/18/07 - Use new rtv to get PA Base Avail Rpt Include
      * Rtv Base Avail PA Rpt RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDKLAIC3    WL0082           Company Number
     C                     Z-ADDKLHGCD    WL0083           Item Code
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0084    YL0072    P      Item Type Code
     C                     MOVELWL0085    YL0073    P      Base/Conv/Loss
     C                     MOVELWL0086    YL0074    P      PA Base Avail R
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.Base/Conv/Loss Item is Not Base
      *   |- c2    : LCL.Item Type Code is Not Finished Good
      *   '-
     C           YL0073    IFEQ *BLANK                     *IF
     C           YL0073    OREQ 'C'
     C           YL0073    OREQ 'F'
     C           YL0073    OREQ 'L'
     C           YL0072    ORNE 'FG'                       *OR
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE: LCL.PA Base Avail Rpt Include is Yes
     C           YL0074    IFEQ 'Y'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Availability Gr
     C                     MOVEL*BLANK    W0AL02  1        Item Display Se
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Availability Gr
     C                     MOVEL'Y'       W0AL02  1        Item Display Se
     C                     ELSE
      * Next record - Detect level breaks
     C           KLAIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           KLV4CD    IFNE WZA002                     Availability Gr
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           KLIDSQ    IFNE WZA003                     Item Display Se
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         B0MAIN    BEGSR
      *================================================================
      * Prt Base Avail        PO: Mainline
      *================================================================
      * Prt Base Avail        PO: Initialise
     C                     EXSR ZBINIT
      * Declare restrictor key work fields
     C           *LIKE     DEFN IOAIC3    WQKB01           Company Number
     C           *LIKE     DEFN IOC9NB    WQKB02           Component Item
      * Define keylist
     C           KRSB      KLIST
     C                     KFLD           WQKB01           Company Number
     C                     KFLD           WQKB02           Component Item
      * Setup key
     C                     Z-ADD$DAIC3    WQKB01           Company Number
     C                     Z-ADD$DHGCD    WQKB02           Component Item
      * Establish starting position
     C           KRSB      SETLL@IOREH1                    *
      * Read first record with user selection
     C                     EXSR B3READ
     C           W0EOFB    IFNE '0'                        IF
      * USER: Null report processing
     C                     MOVEL'Y'       YL0052           Null Report
      * Prt Base Avail Total  US - Company Item Avail Group  * 
     C                     EXSR B4PTOT
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0BL1P  1        First page
     C                     MOVEL'Y'       W0BL00  1        Company Number
     C                     MOVEL'Y'       W0BL01  1        Component Item
     C                     MOVEL'Y'       W0BL02  1        Item Code
      * Set column headings flag
     C                     MOVE 'Y'       W0BCDT
      * Print report body
     C           W0EOFB    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR B1PHDR
      * Print report detail line
     C                     EXSR B2PDTL
      * Read next record with user selection
     C                     EXSR B3READ
      * Print totals
     C                     EXSR B4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         B0EXIT    ENDSR
      /EJECT
     CSR         B1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0BL1P    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $GHGCD           Item Code
     C                     Z-ADD*ZERO     $GU5NX           Qty On-Hand 7.2
     C                     Z-ADD*ZERO     $GVONX           Qty Std Prod 1
     C                     Z-ADD*ZERO     $GVPNX           Qty Std Prod 2
     C                     Z-ADD*ZERO     $GVQNX           Qty Std Prod 3
     C                     Z-ADD*ZERO     $GVRNX           Qty Std Prod 4
     C                     Z-ADD*ZERO     $GVSNX           Qty Std Prod 5
     C                     Z-ADD*ZERO     $GVTNX           Qty Std Prod 6
     C                     Z-ADD*ZERO     $GVUNX           Qty Std Prod 7
     C                     Z-ADD*ZERO     $GVVNX           Qty Std Prod 8
     C                     Z-ADD*ZERO     $GVWNX           Qty Std Prod 9
     C                     Z-ADD*ZERO     $GVXNX           Qty Std Prod 10
     C                     Z-ADD*ZERO     $GVYNX           Qty Std Prod 11
     C                     Z-ADD*ZERO     $GVZNX           Qty Std Prod 12
     C                     Z-ADD*ZERO     $GV0NX           Qty Std Prod 13
     C                     Z-ADD*ZERO     $GV1NX           Qty Std Prod 14
     C                     Z-ADD*ZERO     $GV2NX           Qty Std Prod 15
     C                     Z-ADD*ZERO     $GV3NX           Qty Std Prod 16
     C                     Z-ADD*ZERO     $GLJWG           Wgt On-Hand SUM
     C                     Z-ADD*ZERO     $GVMNX           Qty Sched Prod
     C                     Z-ADD*ZERO     $GLKWG           Wgt Sched Prod
     C                     Z-ADD*ZERO     $GU6NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GLLWG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GVNNX           Qty EOD Inv 1 7
     C                     Z-ADD*ZERO     $GLMWG           Wgt EOD Inv 1 S
     C                     Z-ADD*ZERO     $GVENX           Qty Sched Ord 2
     C                     Z-ADD*ZERO     $GLNWG           Wgt Sched Ord 2
     C                     Z-ADD*ZERO     $GVFNX           Qty Sched Ord 3
     C                     Z-ADD*ZERO     $GLOWG           Wgt Sched Ord 3
     C                     Z-ADD*ZERO     $GVGNX           Qty Sched Ord 4
     C                     Z-ADD*ZERO     $GLPWG           Wgt Sched Ord 4
     C                     Z-ADD*ZERO     $GVHNX           Qty Sched Ord 5
     C                     Z-ADD*ZERO     $GLQWG           Wgt Sched Ord 5
     C                     Z-ADD*ZERO     $GVINX           Qty Sched Ord 6
     C                     Z-ADD*ZERO     $GLRWG           Wgt Sched Ord 6
     C                     Z-ADD*ZERO     $GVJNX           Qty Sched Ord 7
     C                     Z-ADD*ZERO     $GLSWG           Wgt Sched Ord 7
     C                     Z-ADD*ZERO     $GVKNX           Qty Sched Ord 8
     C                     Z-ADD*ZERO     $GLTWG           Wgt Sched Ord 8
     C                     Z-ADD*ZERO     $GVLNX           Qty Sched Ord 9
     C                     Z-ADD*ZERO     $GLUWG           Wgt Sched Ord 9
     C                     Z-ADD*ZERO     $GU7NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GLVWG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GU8NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GL1WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GU9NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GLWWG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GVANX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GLXWG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GVBNX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GLYWG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GVCNX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GLZWG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GVDNX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GL8NY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOSWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GL9NY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOTWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMANY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOUWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMBNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOVWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMCNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOWWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMDNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOXWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMENY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOYWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMFNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOZWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMGNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO0WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMHNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO1WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMINY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO2WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMJNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO3WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMKNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO4WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMLNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO5WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMMNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO6WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMNNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO7WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GV4NX           Qty Avail 1 7.2
     C                     Z-ADD*ZERO     $GV5NX           Qty Avail 2 7.2
     C                     Z-ADD*ZERO     $GV6NX           Qty Avail 3 7.2
     C                     Z-ADD*ZERO     $GV7NX           Qty Avail 4 7.2
     C                     Z-ADD*ZERO     $GV8NX           Qty Avail 5 7.2
     C                     Z-ADD*ZERO     $GV9NX           Qty Avail 6 7.2
     C                     Z-ADD*ZERO     $GWANX           Qty Avail 7 7.2
     C                     Z-ADD*ZERO     $GWBNX           Qty Avail 8 7.2
     C                     Z-ADD*ZERO     $GWCNX           Qty Avail 9 7.2
     C                     Z-ADD*ZERO     $GWDNX           Qty Avail 10 7.
     C                     Z-ADD*ZERO     $GWENX           Qty Avail 11 7.
     C                     Z-ADD*ZERO     $GWFNX           Qty Avail 12 7.
     C                     Z-ADD*ZERO     $GWGNX           Qty Avail 13 7.
     C                     Z-ADD*ZERO     $GWHNX           Qty Avail 14 7.
     C                     Z-ADD*ZERO     $GWINX           Qty Avail 15 7.
     C                     Z-ADD*ZERO     $GWJNX           Qty Avail 16 7.
     C                     Z-ADD*ZERO     $GWKNX           Qty Total 1 7.2
     C                     Z-ADD*ZERO     $GWLNX           Qty Total 2 7.2
     C                     Z-ADD*ZERO     $GWMNX           Qty Total 3 7.2
     C                     Z-ADD*ZERO     $GWNNX           Qty Total 4 7.2
     C                     Z-ADD*ZERO     $GWONX           Qty Total 5 7.2
     C                     Z-ADD*ZERO     $GWPNX           Qty Total 6 7.2
     C                     Z-ADD*ZERO     $GWQNX           Qty Total 7 7.2
     C                     Z-ADD*ZERO     $GWRNX           Qty Total 8 7.2
     C                     Z-ADD*ZERO     $GWSNX           Qty Total 9 7.2
     C                     Z-ADD*ZERO     $GWTNX           Qty Total 10 7.
     C                     Z-ADD*ZERO     $GWUNX           Qty Total 11 7.
     C                     Z-ADD*ZERO     $GWVNX           Qty Total 12 7.
     C                     Z-ADD*ZERO     $GWWNX           Qty Total 13 7.
     C                     Z-ADD*ZERO     $GWXNX           Qty Total 14 7.
     C                     Z-ADD*ZERO     $GWYNX           Qty Total 15 7.
     C                     Z-ADD*ZERO     $GWZNX           Qty Total 16 7.
     C                     Z-ADD*ZERO     $GL0WG           Wgt Sched Ord 1
     C                     MOVEL*BLANK    $GPFTX           Text 1 Length U
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP1P  1
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP00  1
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP01  1
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP02  1
     C                     END
      *
      *================================================================
     CSR         B1EXIT    ENDSR
      /EJECT
     CSR         B2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDIOAIC3    $FAIC3           Company Number
     C                     Z-ADDIOHGCD    $FHGCD           Item Code
     C                     MOVEL*BLANK    $FOONA           Item Desc DRV
     C                     Z-ADD*ZERO     $FAIWG           Unit Weight
     C                     Z-ADD*ZERO     $FWINB           USR Weight 1
     C                     Z-ADD*ZERO     $FBGNX           USR 3 Numeric
     C                     MOVEL*BLANK    $FADCD           U/M - Primary
     C                     Z-ADD*ZERO     $FLEQT           Qty On-Hand USR
     C                     Z-ADD*ZERO     $FU5NX           Qty On-Hand 7.2
     C                     Z-ADD*ZERO     $FLGWG           Wgt On-Hand USR
     C                     Z-ADD*ZERO     $FLIQT           Qty Sched Prod
     C                     Z-ADD*ZERO     $FVMNX           Qty Sched Prod
     C                     Z-ADD*ZERO     $FLHWG           Wgt Sched Prod
     C                     Z-ADD*ZERO     $FLKQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FU6NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FK0WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $FLGQT           Qty EOD Inv 1 U
     C                     Z-ADD*ZERO     $FVNNX           Qty EOD Inv 1 7
     C                     Z-ADD*ZERO     $FLIWG           Wgt EOD Inv 1 U
     C                     Z-ADD*ZERO     $FLLQT           Qty Sched Ord 2
     C                     Z-ADD*ZERO     $FVENX           Qty Sched Ord 2
     C                     Z-ADD*ZERO     $FK8WG           Wgt Sched Ord 2
     C                     Z-ADD*ZERO     $FLVQT           Qty Sched Ord 3
     C                     Z-ADD*ZERO     $FVFNX           Qty Sched Ord 3
     C                     Z-ADD*ZERO     $FK9WG           Wgt Sched Ord 3
     C                     Z-ADD*ZERO     $FMOQT           Qty Sched Ord 4
     C                     Z-ADD*ZERO     $FVGNX           Qty Sched Ord 4
     C                     Z-ADD*ZERO     $FLAWG           Wgt Sched Ord 4
     C                     Z-ADD*ZERO     $FMPQT           Qty Sched Ord 5
     C                     Z-ADD*ZERO     $FVHNX           Qty Sched Ord 5
     C                     Z-ADD*ZERO     $FLBWG           Wgt Sched Ord 5
     C                     Z-ADD*ZERO     $FMQQT           Qty Sched Ord 6
     C                     Z-ADD*ZERO     $FVINX           Qty Sched Ord 6
     C                     Z-ADD*ZERO     $FLCWG           Wgt Sched Ord 6
     C                     Z-ADD*ZERO     $FMRQT           Qty Sched Ord 7
     C                     Z-ADD*ZERO     $FVJNX           Qty Sched Ord 7
     C                     Z-ADD*ZERO     $FLDWG           Wgt Sched Ord 7
     C                     Z-ADD*ZERO     $FMUQT           Qty Sched Ord 8
     C                     Z-ADD*ZERO     $FVKNX           Qty Sched Ord 8
     C                     Z-ADD*ZERO     $FLEWG           Wgt Sched Ord 8
     C                     Z-ADD*ZERO     $FMVQT           Qty Sched Ord 9
     C                     Z-ADD*ZERO     $FVLNX           Qty Sched Ord 9
     C                     Z-ADD*ZERO     $FLFWG           Wgt Sched Ord 9
     C                     Z-ADD*ZERO     $FMWQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FU7NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FK1WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $FMXQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FU8NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FK2WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $FMYQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FU9NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FK3WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $FMZQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FVANX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FK4WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $FM0QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FVBNX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FK5WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $FM6QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FVCNX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FK6WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $FM7QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FVDNX           Qty Sched Ord 1
     C                     MOVEL*BLANK    $FDTSX           Print (Yes/No)
     C                     MOVEL*BLANK    $FPFTX           Text 1 Length U
     C                     Z-ADD*ZERO     $FL8NY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDMNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOCWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FL9NY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDNNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOKWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMANY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDONY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOLWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMBNY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDPNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOMWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMCNY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDQNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FONWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMDNY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDRNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOOWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMENY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDSNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOPWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMFNY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDTNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOQWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMGNY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDUNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FORWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMHNY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDVNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FODWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMINY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDWNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOEWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMJNY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDXNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOFWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMKNY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDYNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOGWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMLNY           Qty For Freezer
     C                     Z-ADD*ZERO     $FDZNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOHWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMMNY           Qty For Freezer
     C                     Z-ADD*ZERO     $FD0NY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOIWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FMNNY           Qty For Freezer
     C                     Z-ADD*ZERO     $FD1NY           Quantity 7.0 US
     C                     Z-ADD*ZERO     $FOJWG           Wgt For Freezer
     C                     Z-ADD*ZERO     $FK7WG           Wgt Sched Ord 1
     C                     Z-ADDIOC9NB    $FC9NB           Component Item
     C                     MOVELIOV2ST    $FV2ST           BOM Type
     C                     Z-ADDIOBOPR    $FBOPR           Sales Yield
     C                     Z-ADDIOBPPR    $FBPPR           Production Yiel
     C                     Z-ADDIOHGQT    $FHGQT           Packaging Quant
     C                     MOVELIOHHCD    $FHHCD           U/M - Primary D
     C                     MOVELIOYAST    $FYAST           Upd Standard Pr
     C                     Z-ADDIOCNSM    $FCNSM           Consume Priorit
     C                     Z-ADDIOBMY1    $FBMY1           Consume Priorit
     C                     Z-ADDIOBMY2    $FBMY2           BOM Pumped Perc
     C                     Z-ADDIOIXQT    $FIXQT           BOM Meat Cost C
     C                     Z-ADDIOIYQT    $FIYQT           BOM Off Line Yi
     C                     MOVELIORSST    $FRSST           BOM Multi-RM Op
     C                     MOVELIORTST    $FRTST           BOM Group Prod
     C                     MOVELIOUVST    $FUVST           EDI Status 1
     C                     MOVELIOUWST    $FUWST           EDI Status 2
     C                     MOVELIOUXST    $FUXST           EDI Status 3
     C                     MOVELIOVSST    $FVSST           Record Status
     C                     Z-ADDIOAATM    $FAATM           Job Time
     C                     MOVELIOAYNA    $FAYNA           User Id
     C                     MOVELIOA0NA    $FA0NA           Job Name
     C                     Z-ADDIOAXDT    $FAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $FLGWG    $GLJWG           Wgt On-Hand SUM
     C                     ADD  $FLHWG    $GLKWG           Wgt Sched Prod
     C                     ADD  $FK0WG    $GLLWG           Wgt Sched Ord 1
     C                     ADD  $FLIWG    $GLMWG           Wgt EOD Inv 1 S
     C                     ADD  $FK8WG    $GLNWG           Wgt Sched Ord 2
     C                     ADD  $FK9WG    $GLOWG           Wgt Sched Ord 3
     C                     ADD  $FLAWG    $GLPWG           Wgt Sched Ord 4
     C                     ADD  $FLBWG    $GLQWG           Wgt Sched Ord 5
     C                     ADD  $FLCWG    $GLRWG           Wgt Sched Ord 6
     C                     ADD  $FLDWG    $GLSWG           Wgt Sched Ord 7
     C                     ADD  $FLEWG    $GLTWG           Wgt Sched Ord 8
     C                     ADD  $FLFWG    $GLUWG           Wgt Sched Ord 9
     C                     ADD  $FK1WG    $GLVWG           Wgt Sched Ord 1
     C                     ADD  $FK2WG    $GL1WG           Wgt Sched Ord 1
     C                     ADD  $FK3WG    $GLWWG           Wgt Sched Ord 1
     C                     ADD  $FK4WG    $GLXWG           Wgt Sched Ord 1
     C                     ADD  $FK5WG    $GLYWG           Wgt Sched Ord 1
     C                     ADD  $FK6WG    $GLZWG           Wgt Sched Ord 1
     C                     ADD  $FK7WG    $GL0WG           Wgt Sched Ord 1
     C                     ADD  $FOCWG    $GOSWG           Wgt for Freezer
     C                     ADD  $FOKWG    $GOTWG           Wgt for Freezer
     C                     ADD  $FOLWG    $GOUWG           Wgt for Freezer
     C                     ADD  $FOMWG    $GOVWG           Wgt for Freezer
     C                     ADD  $FONWG    $GOWWG           Wgt for Freezer
     C                     ADD  $FOOWG    $GOXWG           Wgt for Freezer
     C                     ADD  $FOPWG    $GOYWG           Wgt for Freezer
     C                     ADD  $FOQWG    $GOZWG           Wgt for Freezer
     C                     ADD  $FORWG    $GO0WG           Wgt for Freezer
     C                     ADD  $FODWG    $GO1WG           Wgt for Freezer
     C                     ADD  $FOEWG    $GO2WG           Wgt for Freezer
     C                     ADD  $FOFWG    $GO3WG           Wgt for Freezer
     C                     ADD  $FOGWG    $GO4WG           Wgt for Freezer
     C                     ADD  $FOHWG    $GO5WG           Wgt for Freezer
     C                     ADD  $FOIWG    $GO6WG           Wgt for Freezer
     C                     ADD  $FOJWG    $GO7WG           Wgt for Freezer
      *
      *================================================================
     CSR         B2EXIT    ENDSR
      /EJECT
     CSR         B3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN IOAIC3    WZB001           Company Number
     C                     Z-ADDIOAIC3    WZB001
     C           *LIKE     DEFN IOC9NB    WZB002           Component Item
     C                     Z-ADDIOC9NB    WZB002
     C           *LIKE     DEFN IOHGCD    WZB003           Item Code
     C                     Z-ADDIOHGCD    WZB003
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFB    OREQ '1'
     C           KRSB      READE@IOREH1                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFB  1
      * Quit if no record read
     C           W0EOFB    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Rtv Base Avail PA Rpt RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDIOAIC3    WL0082           Company Number
     C                     Z-ADDIOHGCD    WL0083           Item Code
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0084    YL0064    P      Item Type Code
     C                     MOVELWL0085    YL0065    P      Base/Conv/Loss
     C                     MOVELWL0086    YL0066    P      PA Base Avail R
      * 05/04/12 PKD Boneless Butt consume both Bone In and Boneless Butt
      * 05/04/12 PKD Boneless Butt consume both Bone In and Boneless Butt
      * Added C3 to the condition.  If the Consume Priority is zero then
      * the product is not used for PA.
      * CASE:
      *  - c1 OR c2 OR c3
      *   |- c1    : DB1.Consume Priority is GT 1
      *   |- c2    : LCL.Item Type Code is Not Finished Good
      *   |- c3    : DB1.Consume Priority is EQ Zero
      *   '-
     C           IOCNSM    IFGT 1                          *IF
     C           YL0064    ORNE 'FG'                       *OR
     C           IOCNSM    OREQ *ZERO                      *OR
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE: LCL.PA Base Avail Rpt Include is Yes
     C           YL0066    IFEQ 'Y'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0BL00  1        Company Number
     C                     MOVEL*BLANK    W0BL01  1        Component Item
     C                     MOVEL*BLANK    W0BL02  1        Item Code
     C           W0EOFB    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0BL00  1        Company Number
     C                     MOVEL'Y'       W0BL01  1        Component Item
     C                     MOVEL'Y'       W0BL02  1        Item Code
     C                     ELSE
      * Next record - Detect level breaks
     C           IOAIC3    IFNE WZB001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL00
     C                     END
     C           IOC9NB    IFNE WZB002                     Component Item
     C           W0BL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL01
     C                     END
     C           IOHGCD    IFNE WZB003                     Item Code
     C           W0BL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL02
     C                     END
     C                     END
      *================================================================
     CSR         B3EXIT    ENDSR
      /EJECT
     CSR         B4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0BL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP02
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP01
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP00
     C                     END
      *
     C           W0EOFB    IFEQ '1'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of final totals format
      * CASE: LCL.Null Report is Null
     C           YL0052    IFEQ 'Y'                        *IF
      * CUR = CON By name
     C                     MOVEL*BLANK    $GCON            *CON (Screen co
     C                     Z-ADD*ZERO     $GHGCD           Item Code
     C                     Z-ADD*ZERO     $GU5NX           Qty On-Hand 7.2
     C                     Z-ADD*ZERO     $GVONX           Qty Std Prod 1
     C                     Z-ADD*ZERO     $GVPNX           Qty Std Prod 2
     C                     Z-ADD*ZERO     $GVQNX           Qty Std Prod 3
     C                     Z-ADD*ZERO     $GVRNX           Qty Std Prod 4
     C                     Z-ADD*ZERO     $GVSNX           Qty Std Prod 5
     C                     Z-ADD*ZERO     $GVTNX           Qty Std Prod 6
     C                     Z-ADD*ZERO     $GVUNX           Qty Std Prod 7
     C                     Z-ADD*ZERO     $GVVNX           Qty Std Prod 8
     C                     Z-ADD*ZERO     $GVWNX           Qty Std Prod 9
     C                     Z-ADD*ZERO     $GVXNX           Qty Std Prod 10
     C                     Z-ADD*ZERO     $GVYNX           Qty Std Prod 11
     C                     Z-ADD*ZERO     $GVZNX           Qty Std Prod 12
     C                     Z-ADD*ZERO     $GV0NX           Qty Std Prod 13
     C                     Z-ADD*ZERO     $GV1NX           Qty Std Prod 14
     C                     Z-ADD*ZERO     $GV2NX           Qty Std Prod 15
     C                     Z-ADD*ZERO     $GV3NX           Qty Std Prod 16
     C                     Z-ADD*ZERO     $GLJWG           Wgt On-Hand SUM
     C                     Z-ADD*ZERO     $GVMNX           Qty Sched Prod
     C                     Z-ADD*ZERO     $GLKWG           Wgt Sched Prod
     C                     Z-ADD*ZERO     $GU6NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GLLWG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GVNNX           Qty EOD Inv 1 7
     C                     Z-ADD*ZERO     $GLMWG           Wgt EOD Inv 1 S
     C                     Z-ADD*ZERO     $GVENX           Qty Sched Ord 2
     C                     Z-ADD*ZERO     $GLNWG           Wgt Sched Ord 2
     C                     Z-ADD*ZERO     $GVFNX           Qty Sched Ord 3
     C                     Z-ADD*ZERO     $GLOWG           Wgt Sched Ord 3
     C                     Z-ADD*ZERO     $GVGNX           Qty Sched Ord 4
     C                     Z-ADD*ZERO     $GLPWG           Wgt Sched Ord 4
     C                     Z-ADD*ZERO     $GVHNX           Qty Sched Ord 5
     C                     Z-ADD*ZERO     $GLQWG           Wgt Sched Ord 5
     C                     Z-ADD*ZERO     $GVINX           Qty Sched Ord 6
     C                     Z-ADD*ZERO     $GLRWG           Wgt Sched Ord 6
     C                     Z-ADD*ZERO     $GVJNX           Qty Sched Ord 7
     C                     Z-ADD*ZERO     $GLSWG           Wgt Sched Ord 7
     C                     Z-ADD*ZERO     $GVKNX           Qty Sched Ord 8
     C                     Z-ADD*ZERO     $GLTWG           Wgt Sched Ord 8
     C                     Z-ADD*ZERO     $GVLNX           Qty Sched Ord 9
     C                     Z-ADD*ZERO     $GLUWG           Wgt Sched Ord 9
     C                     Z-ADD*ZERO     $GU7NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GLVWG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GU8NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GL1WG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GU9NX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GLWWG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GVANX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GLXWG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GVBNX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GLYWG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GVCNX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GLZWG           Wgt Sched Ord 1
     C                     Z-ADD*ZERO     $GVDNX           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $GL8NY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOSWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GL9NY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOTWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMANY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOUWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMBNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOVWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMCNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOWWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMDNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOXWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMENY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOYWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMFNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GOZWG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMGNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO0WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMHNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO1WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMINY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO2WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMJNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO3WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMKNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO4WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMLNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO5WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMMNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO6WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GMNNY           Qty For Freezer
     C                     Z-ADD*ZERO     $GO7WG           Wgt for Freezer
     C                     Z-ADD*ZERO     $GV4NX           Qty Avail 1 7.2
     C                     Z-ADD*ZERO     $GV5NX           Qty Avail 2 7.2
     C                     Z-ADD*ZERO     $GV6NX           Qty Avail 3 7.2
     C                     Z-ADD*ZERO     $GV7NX           Qty Avail 4 7.2
     C                     Z-ADD*ZERO     $GV8NX           Qty Avail 5 7.2
     C                     Z-ADD*ZERO     $GV9NX           Qty Avail 6 7.2
     C                     Z-ADD*ZERO     $GWANX           Qty Avail 7 7.2
     C                     Z-ADD*ZERO     $GWBNX           Qty Avail 8 7.2
     C                     Z-ADD*ZERO     $GWCNX           Qty Avail 9 7.2
     C                     Z-ADD*ZERO     $GWDNX           Qty Avail 10 7.
     C                     Z-ADD*ZERO     $GWENX           Qty Avail 11 7.
     C                     Z-ADD*ZERO     $GWFNX           Qty Avail 12 7.
     C                     Z-ADD*ZERO     $GWGNX           Qty Avail 13 7.
     C                     Z-ADD*ZERO     $GWHNX           Qty Avail 14 7.
     C                     Z-ADD*ZERO     $GWINX           Qty Avail 15 7.
     C                     Z-ADD*ZERO     $GWJNX           Qty Avail 16 7.
     C                     Z-ADD*ZERO     $GWKNX           Qty Total 1 7.2
     C                     Z-ADD*ZERO     $GWLNX           Qty Total 2 7.2
     C                     Z-ADD*ZERO     $GWMNX           Qty Total 3 7.2
     C                     Z-ADD*ZERO     $GWNNX           Qty Total 4 7.2
     C                     Z-ADD*ZERO     $GWONX           Qty Total 5 7.2
     C                     Z-ADD*ZERO     $GWPNX           Qty Total 6 7.2
     C                     Z-ADD*ZERO     $GWQNX           Qty Total 7 7.2
     C                     Z-ADD*ZERO     $GWRNX           Qty Total 8 7.2
     C                     Z-ADD*ZERO     $GWSNX           Qty Total 9 7.2
     C                     Z-ADD*ZERO     $GWTNX           Qty Total 10 7.
     C                     Z-ADD*ZERO     $GWUNX           Qty Total 11 7.
     C                     Z-ADD*ZERO     $GWVNX           Qty Total 12 7.
     C                     Z-ADD*ZERO     $GWWNX           Qty Total 13 7.
     C                     Z-ADD*ZERO     $GWXNX           Qty Total 14 7.
     C                     Z-ADD*ZERO     $GWYNX           Qty Total 15 7.
     C                     Z-ADD*ZERO     $GWZNX           Qty Total 16 7.
     C                     Z-ADD*ZERO     $GL0WG           Wgt Sched Ord 1
     C                     MOVEL*BLANK    $GPFTX           Text 1 Length U
     C                     END                             *FI
     C                     Z-ADD$DHGCD    $GHGCD           Item Code
     C                     MOVELP2AJCD    YL0067           Warehouse Code
      * CASE: LCL.Sold 100% Frozen is yes
     C           YL0056    IFEQ 'Y'                        *IF
      * CASE: PAR.Company Number is Guymon
     C           $DAIC3    IFEQ 360                        *IF
     C                     MOVEL'CF1'     YL0067           Warehouse Code
     C                     ELSE
      * CASE: PAR.Company Number is St. Joseph
     C           $DAIC3    IFEQ 960                        *IF
     C                     MOVEL'SF1'     YL0067           Warehouse Code
     C                     ELSE
      * CASE: PAR.Company Number is Seaboard Triumph Foods
     C           $DAIC3    IFEQ 440                        *IF
     C                     MOVEL'STF'     YL0067           Warehouse Code
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0146  92       Weight Producti
     C                     Z-ADD*ZERO     WN0147  70       Pieces Producti
     C                     MOVEL*BLANK    WN0148  3        PS Production W
      *
      * Rtv Standard Prod     IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0146           Weight Producti
     C                     Z-ADD*ZERO     WN0147           Pieces Producti
     C                     MOVEL*BLANK    WN0148           PS Production W
     C                     Z-ADD*ZERO     $GVONX           Qty Std Prod 1
     C                     Z-ADD*ZERO     $GVPNX           Qty Std Prod 2
     C                     Z-ADD*ZERO     $GVQNX           Qty Std Prod 3
     C                     Z-ADD*ZERO     $GVRNX           Qty Std Prod 4
     C                     Z-ADD*ZERO     $GVSNX           Qty Std Prod 5
     C                     Z-ADD*ZERO     $GVTNX           Qty Std Prod 6
     C                     Z-ADD*ZERO     $GVUNX           Qty Std Prod 7
     C                     Z-ADD*ZERO     $GVVNX           Qty Std Prod 8
     C                     Z-ADD*ZERO     $GVWNX           Qty Std Prod 9
     C                     Z-ADD*ZERO     $GVXNX           Qty Std Prod 10
     C                     Z-ADD*ZERO     $GVYNX           Qty Std Prod 11
     C                     Z-ADD*ZERO     $GVZNX           Qty Std Prod 12
     C                     Z-ADD*ZERO     $GV0NX           Qty Std Prod 13
     C                     Z-ADD*ZERO     $GV1NX           Qty Std Prod 14
     C                     Z-ADD*ZERO     $GV2NX           Qty Std Prod 15
     C                     Z-ADD*ZERO     $GV3NX           Qty Std Prod 16
      * Std Production using Standard Production file
     C                     EXSR ULSUBR                     Std Production
      * Scheduled Shipments & Freezer Allocation
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * CONV: Sched Orders Using Pieces
     C                     EXSR UMSUBR                     CONV: Sched Ord
      * CONV: Freezer Allocation Using Pieces
     C                     EXSR UNSUBR                     CONV: Freezer A
     C                     ELSE
      * CASE: *OTHERWISE
      * CONV: Sched Orders Using Unit Weight
     C                     EXSR UOSUBR                     CONV: Sched Ord
      * CONV: Freezer Allocation Using Unit Weight
     C                     EXSR UPSUBR                     CONV: Freezer A
     C                     END                             *FI
     C                     MOVEL'Y'       YL0071           First Time Flag
     C                     Z-ADD$GVONX    WN0136           Total Sched Shi
      * Total-day 2
      * CASE: PAR.Generic Heading 2 is Equal Total
     C           WN0120    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GVPNX           Qty Std Prod 2
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GVPNX           Qty Std Prod 2
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GVPNX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 3
      * CASE: PAR.Generic Heading 3 is Equal Total
     C           WN0121    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GVQNX           Qty Std Prod 3
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GVQNX           Qty Std Prod 3
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GVQNX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 4
      * CASE: PAR.Generic Heading 4 is Equal Total
     C           WN0122    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GVRNX           Qty Std Prod 4
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GVRNX           Qty Std Prod 4
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GVRNX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 5
      * CASE: PAR.Generic Heading 5 is Equal Total
     C           WN0123    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GVSNX           Qty Std Prod 5
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GVSNX           Qty Std Prod 5
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GVSNX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 6
      * CASE: PAR.Generic Heading 6 is Equal Total
     C           WN0124    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GVTNX           Qty Std Prod 6
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GVTNX           Qty Std Prod 6
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GVTNX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 7
      * CASE: PAR.Generic Heading 7 is Equal Total
     C           WN0125    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GVUNX           Qty Std Prod 7
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GVUNX           Qty Std Prod 7
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GVUNX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 8
      * CASE: PAR.Generic Heading 8 is Equal Total
     C           WN0126    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GVVNX           Qty Std Prod 8
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GVVNX           Qty Std Prod 8
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GVVNX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 9
      * CASE: PAR.Generic Heading 9 is Equal Total
     C           WN0127    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GVWNX           Qty Std Prod 9
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GVWNX           Qty Std Prod 9
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GVWNX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 10
      * CASE: PAR.Generic Heading 10 is Equal Total
     C           WN0128    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GVXNX           Qty Std Prod 10
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GVXNX           Qty Std Prod 10
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GVXNX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 11
      * CASE: PAR.Generic Heading 11 is Equal Total
     C           WN0129    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GVYNX           Qty Std Prod 11
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GVYNX           Qty Std Prod 11
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GVYNX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 12
      * CASE: PAR.Generic Heading 12 is Equal Total
     C           WN0130    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GVZNX           Qty Std Prod 12
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GVZNX           Qty Std Prod 12
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GVZNX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 13
      * CASE: PAR.Generic Heading 13 is Equal Total
     C           WN0131    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GV0NX           Qty Std Prod 13
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GV0NX           Qty Std Prod 13
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GV0NX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 14
      * CASE: PAR.Generic Heading 14 is Equal Total
     C           WN0132    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GV1NX           Qty Std Prod 14
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GV1NX           Qty Std Prod 14
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GV1NX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 15
      * CASE: PAR.Generic Heading 15 is Equal Total
     C           WN0134    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GV2NX           Qty Std Prod 15
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GV2NX           Qty Std Prod 15
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GV2NX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Total-day 16
      * CASE: PAR.Generic Heading 16 is Equal Total
     C           WN0135    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $GV3NX           Qty Std Prod 16
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
      * CASE: LCL.First Time Flag is Yes
     C           YL0071    IFEQ 'Y'                        *IF
     C                     ADD  $GU5NX    $GV3NX           Qty Std Prod 16
     C                     MOVEL'N'       YL0071           First Time Flag
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $GV3NX    WN0136           Total Sched Shi
     C                     END                             *FI
      * Calculate Availability
     C                     EXSR UQSUBR                     Calculate Avail
     C           $GU5NX    ADD  $GV4NX    $GWKNX           Qty Total 1 7.2
      * Total 2
      * CASE: PAR.Generic Heading 2 is Equal Total
     C           WN0120    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWKNX    $GWLNX           Qty Total 2 7.2
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GV5NX    ADD  $GWKNX    $GWLNX           Qty Total 2 7.2
     C                     END                             *FI
      * Total 3
      * CASE: PAR.Generic Heading 3 is Equal Total
     C           WN0121    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWLNX    $GWMNX           Qty Total 3 7.2
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GV6NX    ADD  $GWLNX    $GWMNX           Qty Total 3 7.2
     C                     END                             *FI
      * Total 4
      * CASE: PAR.Generic Heading 4 is Equal Total
     C           WN0122    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWMNX    $GWNNX           Qty Total 4 7.2
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GV7NX    ADD  $GWMNX    $GWNNX           Qty Total 4 7.2
     C                     END                             *FI
      * Total 5
      * CASE: PAR.Generic Heading 5 is Equal Total
     C           WN0123    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWNNX    $GWONX           Qty Total 5 7.2
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GV8NX    ADD  $GWNNX    $GWONX           Qty Total 5 7.2
     C                     END                             *FI
      * Total 6
      * CASE: PAR.Generic Heading 6 is Equal Total
     C           WN0124    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWONX    $GWPNX           Qty Total 6 7.2
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GV9NX    ADD  $GWONX    $GWPNX           Qty Total 6 7.2
     C                     END                             *FI
      * Total 7
      * CASE: PAR.Generic Heading 7 is Equal Total
     C           WN0125    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWPNX    $GWQNX           Qty Total 7 7.2
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GWANX    ADD  $GWPNX    $GWQNX           Qty Total 7 7.2
     C                     END                             *FI
      * Total 8
      * CASE: PAR.Generic Heading 8 is Equal Total
     C           WN0126    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWQNX    $GWRNX           Qty Total 8 7.2
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GWBNX    ADD  $GWQNX    $GWRNX           Qty Total 8 7.2
     C                     END                             *FI
      * Total 9
      * CASE: PAR.Generic Heading 9 is Equal Total
     C           WN0127    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWRNX    $GWSNX           Qty Total 9 7.2
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GWCNX    ADD  $GWRNX    $GWSNX           Qty Total 9 7.2
     C                     END                             *FI
      * Total 10
      * CASE: PAR.Generic Heading 10 is Equal Total
     C           WN0128    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWSNX    $GWTNX           Qty Total 10 7.
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GWDNX    ADD  $GWSNX    $GWTNX           Qty Total 10 7.
     C                     END                             *FI
      * Total 11
      * CASE: PAR.Generic Heading 11 is Equal Total
     C           WN0129    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWTNX    $GWUNX           Qty Total 11 7.
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GWENX    ADD  $GWTNX    $GWUNX           Qty Total 11 7.
     C                     END                             *FI
      * Total 12
      * CASE: PAR.Generic Heading 12 is Equal Total
     C           WN0130    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWUNX    $GWVNX           Qty Total 12 7.
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GWFNX    ADD  $GWUNX    $GWVNX           Qty Total 12 7.
     C                     END                             *FI
      * Total 13
      * CASE: PAR.Generic Heading 13 is Equal Total
     C           WN0131    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWVNX    $GWWNX           Qty Total 13 7.
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GWGNX    ADD  $GWVNX    $GWWNX           Qty Total 13 7.
     C                     END                             *FI
      * Total 14
      * CASE: PAR.Generic Heading 14 is Equal Total
     C           WN0132    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWWNX    $GWXNX           Qty Total 14 7.
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GWHNX    ADD  $GWWNX    $GWXNX           Qty Total 14 7.
     C                     END                             *FI
      * Total 15
      * CASE: PAR.Generic Heading 15 is Equal Total
     C           WN0134    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWXNX    $GWYNX           Qty Total 15 7.
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GWINX    ADD  $GWXNX    $GWYNX           Qty Total 15 7.
     C                     END                             *FI
      * Total 16
      * CASE: PAR.Generic Heading 16 is Equal Total
     C           WN0135    IFEQ 'Total'                    *IF
     C                     Z-ADD$GWYNX    $GWZNX           Qty Total 16 7.
     C                     ELSE
      * CASE: *OTHERWISE
     C           $GWJNX    ADD  $GWYNX    $GWZNX           Qty Total 16 7.
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 11
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $GHGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$GHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VGHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VGHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$GFINTTL
     C                     END
     C                     END
      *
      *================================================================
     CSR         B4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Base Availability PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Base Availability PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
      * 1PG = PAR By name
     C                     Z-ADDP1AIC3    $BAIC3           Company Number
     C                     Z-ADDP2JEDT    $BJEDT           Date From
     C                     Z-ADDP2JFDT    $BJFDT           Date To
     C                     MOVELP1V4CD    $BV4CD           Availability Gr
     C                     MOVELP2AJCD    $BAJCD           Warehouse Code
     C                     MOVELP7NKTX    $BNKTX           Std Prod Input
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SDRVGN
      * RTV Whse Descrip       RT - Warehouse  * 
     C                     EXSR SERVGN
      * RTV Group Description  RT - Availability Group  * 
     C                     EXSR SFRVGN
     C                     MOVEL*BLANK    $BSQNA           Std Prod Input
      * Std Prod Input Desc DRV
      * PAR.Std Prod Input Desc DRV = Condition name of PAR.Std Prod Inpu
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1885516   Y2LSNO  70       List number
     C                     PARM $BNKTX    W0INVL 25        Std Prod Input
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BSQNA    PARM           W0CNNM 25        Std Prod Input
      *
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BAIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Date From             USR to display format
      * Convert date
     C           1000000   ADD  $BJEDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBJEDT
      * Print format
     C                     WRITE$B1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of Prt Base Availability PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Company Number format
     C                     Z-ADDP2JEDT    P2FFDT           USR Day 1
      * PAR.USR Day 2 = PAR.USR Day 1 + CON.1 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2E1DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2E1DT
     C                     END
      * PAR.USR Day 3 = PAR.USR Day 1 + CON.2 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD2         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2E2DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2E2DT
     C                     END
      * PAR.USR Day 4 = PAR.USR Day 1 + CON.3 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD3         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2E3DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2E3DT
     C                     END
      * PAR.USR Day 5 = PAR.USR Day 1 + CON.4 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD4         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2E4DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2E4DT
     C                     END
      * PAR.USR Day 6 = PAR.USR Day 1 + CON.5 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD5         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3E5DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3E5DT
     C                     END
      * PAR.USR Day 7 = PAR.USR Day 1 + CON.6 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD6         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3E6DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3E6DT
     C                     END
      * PAR.USR Day 8 = PAR.USR Day 1 + CON.7 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD7         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3FKDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3FKDT
     C                     END
      * PAR.USR Day 9 = PAR.USR Day 1 + CON.8 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD8         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3FLDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3FLDT
     C                     END
      * PAR.USR Day 10 = PAR.USR Day 1 + CON.9 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD9         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3FGDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3FGDT
     C                     END
      * PAR.USR Day 11 = PAR.USR Day 1 + CON.10 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD10        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3FHDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3FHDT
     C                     END
      * PAR.USR Day 12 = PAR.USR Day 1 + CON.11 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD11        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3FIDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3FIDT
     C                     END
      * PAR.USR Day 13 = PAR.USR Day 1 + CON.12 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD12        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3FJDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3FJDT
     C                     END
      * PAR.USR Day 14 = PAR.USR Day 1 + CON.13 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD13        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3HPDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3HPDT
     C                     END
      * PAR.USR Day 15 = PAR.USR Day 1 + CON.14 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD14        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3HQDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3HQDT
     C                     END
      * PAR.USR Day 16 = PAR.USR Day 1 + CON.15 *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD15        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3HRDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3HRDT
     C                     END
      * CUR = PAR By name
     C                     Z-ADDP1AIC3    $CAIC3           Company Number
     C                     Z-ADDP2FFDT    $CFFDT           USR Day 1
     C                     MOVELP4MWTX    $CMWTX           Generic Heading
     C                     MOVELP4MXTX    $CMXTX           Generic Heading
     C                     MOVELP4MYTX    $CMYTX           Generic Heading
     C                     MOVELP4MZTX    $CMZTX           Generic Heading
     C                     MOVELP4M0TX    $CM0TX           Generic Heading
     C                     MOVELP4M1TX    $CM1TX           Generic Heading
     C                     MOVELP4M2TX    $CM2TX           Generic Heading
     C                     MOVELP4M3TX    $CM3TX           Generic Heading
     C                     MOVELP4M4TX    $CM4TX           Generic Heading
     C                     MOVELP4M5TX    $CM5TX           Generic Heading
     C                     MOVELP4M6TX    $CM6TX           Generic Heading
     C                     MOVELP4M7TX    $CM7TX           Generic Heading
     C                     MOVELP4M8TX    $CM8TX           Generic Heading
     C                     MOVELP4M9TX    $CM9TX           Generic Heading
     C                     MOVELP4Y5TX    $CY5TX           Generic Heading
     C                     MOVELP4Y6TX    $CY6TX           Generic Heading
     C                     Z-ADDP2E1DT    $CE1DT           USR Day 2
     C                     Z-ADDP2E2DT    $CE2DT           USR Day 3
     C                     Z-ADDP2E3DT    $CE3DT           USR Day 4
     C                     Z-ADDP2E4DT    $CE4DT           USR Day 5
     C                     Z-ADDP3E5DT    $CE5DT           USR Day 6
     C                     Z-ADDP3E6DT    $CE6DT           USR Day 7
      * Re-format Heading Date  1
      * CASE: CUR.Generic Heading 1 is Equal Total
     C           $CMWTX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZRTX           Vertical Line 1
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0081  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CMWTX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0081    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CMWTX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0081    CAT  WUNATX:ZQ WN0081    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0081    CAT  '/':ZQ    WN0081    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CMWTX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0081    CAT  WUNATX:ZQ WN0081    P      Generic Heading
     C                     MOVELWN0081    $CMWTX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date  2
      * CASE: CUR.Generic Heading 2 is Equal Total
     C           $CMXTX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZCTX           Vertical Line 2
      * Set On Indicator 01    US - /UT User Source  * 
     C                     SETON                     01    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0082  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CMXTX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0082    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CMXTX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0082    CAT  WUNATX:ZQ WN0082    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0082    CAT  '/':ZQ    WN0082    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CMXTX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0082    CAT  WUNATX:ZQ WN0082    P      Generic Heading
     C                     MOVELWN0082    $CMXTX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date  3
      * CASE: CUR.Generic Heading 3 is Equal Total
     C           $CMYTX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZDTX           Vertical Line 3
      * Set On Indicator 02    US - /UT User Source  * 
     C                     SETON                     02    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0083  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CMYTX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0083    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CMYTX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0083    CAT  WUNATX:ZQ WN0083    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0083    CAT  '/':ZQ    WN0083    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CMYTX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0083    CAT  WUNATX:ZQ WN0083    P      Generic Heading
     C                     MOVELWN0083    $CMYTX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date  4
      * CASE: CUR.Generic Heading 4 is Equal Total
     C           $CMZTX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZETX           Vertical Line 4
      * Set On Indicator 03    US - /UT User Source  * 
     C                     SETON                     03    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0084  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CMZTX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0084    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CMZTX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0084    CAT  WUNATX:ZQ WN0084    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0084    CAT  '/':ZQ    WN0084    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CMZTX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0084    CAT  WUNATX:ZQ WN0084    P      Generic Heading
     C                     MOVELWN0084    $CMZTX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date  5
      * CASE: CUR.Generic Heading 5 is Equal Total
     C           $CM0TX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZFTX           Vertical Line 5
      * Set On Indicator 04    US - /UT User Source  * 
     C                     SETON                     04    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0085  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM0TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0085    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM0TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0085    CAT  WUNATX:ZQ WN0085    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0085    CAT  '/':ZQ    WN0085    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM0TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0085    CAT  WUNATX:ZQ WN0085    P      Generic Heading
     C                     MOVELWN0085    $CM0TX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date  6
      * CASE: CUR.Generic Heading 6 is Equal Total
     C           $CM1TX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZGTX           Vertical Line 6
      * Set On Indicator 05    US - /UT User Source  * 
     C                     SETON                     05    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0086  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM1TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0086    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM1TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0086    CAT  WUNATX:ZQ WN0086    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0086    CAT  '/':ZQ    WN0086    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM1TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0086    CAT  WUNATX:ZQ WN0086    P      Generic Heading
     C                     MOVELWN0086    $CM1TX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date  7
      * CASE: CUR.Generic Heading 7 is Equal Total
     C           $CM2TX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZHTX           Vertical Line 7
      * Set On Indicator 06    US - /UT User Source  * 
     C                     SETON                     06    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0087  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM2TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0087    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM2TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0087    CAT  WUNATX:ZQ WN0087    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0087    CAT  '/':ZQ    WN0087    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM2TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0087    CAT  WUNATX:ZQ WN0087    P      Generic Heading
     C                     MOVELWN0087    $CM2TX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date  8
      * CASE: CUR.Generic Heading 8 is Equal Total
     C           $CM3TX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZITX           Vertical Line 8
      * Set On Indicator 07    US - /UT User Source  * 
     C                     SETON                     07    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0088  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM3TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0088    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM3TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0088    CAT  WUNATX:ZQ WN0088    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0088    CAT  '/':ZQ    WN0088    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM3TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0088    CAT  WUNATX:ZQ WN0088    P      Generic Heading
     C                     MOVELWN0088    $CM3TX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date  9
      * CASE: CUR.Generic Heading 9 is Equal Total
     C           $CM4TX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZJTX           Vertical Line 9
      * Set On Indicator 08    US - /UT User Source  * 
     C                     SETON                     08    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0089  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM4TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0089    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM4TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0089    CAT  WUNATX:ZQ WN0089    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0089    CAT  '/':ZQ    WN0089    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM4TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0089    CAT  WUNATX:ZQ WN0089    P      Generic Heading
     C                     MOVELWN0089    $CM4TX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date 10
      * CASE: CUR.Generic Heading 10 is Equal Total
     C           $CM5TX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZKTX           Vertical Line 1
      * Set On Indicator 09    US - /UT User Source  * 
     C                     SETON                     09    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0090  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM5TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0090    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM5TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0090    CAT  WUNATX:ZQ WN0090    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0090    CAT  '/':ZQ    WN0090    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM5TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0090    CAT  WUNATX:ZQ WN0090    P      Generic Heading
     C                     MOVELWN0090    $CM5TX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date 11
      * CASE: CUR.Generic Heading 11 is Equal Total
     C           $CM6TX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZLTX           Vertical Line 1
      * Set On Indicator 10    US - /UT User Source  * 
     C                     SETON                     10    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0091  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM6TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0091    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM6TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0091    CAT  WUNATX:ZQ WN0091    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0091    CAT  '/':ZQ    WN0091    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM6TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0091    CAT  WUNATX:ZQ WN0091    P      Generic Heading
     C                     MOVELWN0091    $CM6TX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date 12
      * CASE: CUR.Generic Heading 12 is Equal Total
     C           $CM7TX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZMTX           Vertical Line 1
      * Set On Indicator 11    US - /UT User Source  * 
     C                     SETON                     11    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0092  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM7TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0092    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM7TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0092    CAT  WUNATX:ZQ WN0092    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0092    CAT  '/':ZQ    WN0092    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM7TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0092    CAT  WUNATX:ZQ WN0092    P      Generic Heading
     C                     MOVELWN0092    $CM7TX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date 13
      * CASE: CUR.Generic Heading 13 is Equal Total
     C           $CM8TX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZNTX           Vertical Line 1
      * Set On Indicator 12    US - /UT User Source  * 
     C                     SETON                     12    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0093  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM8TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0093    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM8TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0093    CAT  WUNATX:ZQ WN0093    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0093    CAT  '/':ZQ    WN0093    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM8TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0093    CAT  WUNATX:ZQ WN0093    P      Generic Heading
     C                     MOVELWN0093    $CM8TX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date 14
      * CASE: CUR.Generic Heading 14 is Equal Total
     C           $CM9TX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZOTX           Vertical Line 1
      * Set On Indicator 13    US - /UT User Source  * 
     C                     SETON                     13    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0094  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM9TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0094    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM9TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0094    CAT  WUNATX:ZQ WN0094    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0094    CAT  '/':ZQ    WN0094    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CM9TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0094    CAT  WUNATX:ZQ WN0094    P      Generic Heading
     C                     MOVELWN0094    $CM9TX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date 15
      * CASE: CUR.Generic Heading 15 is Equal Total
     C           $CY5TX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZPTX           Vertical Line 1
      * Set On Indicator 14    US - /UT User Source  * 
     C                     SETON                     14    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0095  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CY5TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0095    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CY5TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0095    CAT  WUNATX:ZQ WN0095    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0095    CAT  '/':ZQ    WN0095    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CY5TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0095    CAT  WUNATX:ZQ WN0095    P      Generic Heading
     C                     MOVELWN0095    $CY5TX           Generic Heading
     C                     END                             *FI
      * Re-format Heading Date 16
      * CASE: CUR.Generic Heading 16 is Equal Total
     C           $CY6TX    IFEQ 'Total'                    *IF
     C                     MOVEL'|'       WUZQTX           Vertical Line 1
      * Set On Indicator 15    US - /UT User Source  * 
     C                     SETON                     15    SETON INDICATOR
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0096  8        Generic Heading
      *
      * SET Format Text Dates  IF
     C                     Z-ADD2         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CY6TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WUNATX    CAT  '/':ZQ    WN0096    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CY6TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0096    CAT  WUNATX:ZQ WN0096    P      Generic Heading
     C                     Z-ADD0         ZQ      50
     C           WN0096    CAT  '/':ZQ    WN0096    P      Generic Heading
     C                     Z-ADD2         YRSW00
     C                     Z-ADD5         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBST$CY6TX:ZQ WUNATX    P  90  Generic Heading
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           WN0096    CAT  WUNATX:ZQ WN0096    P      Generic Heading
     C                     MOVELWN0096    $CY6TX           Generic Heading
     C                     END                             *FI
     C                     MOVEL$CMXTX    $CYQTX           Generic Heading
     C                     MOVEL$CMYTX    $CYRTX           Generic Heading
     C                     MOVEL$CMZTX    $CYSTX           Generic Heading
     C                     MOVEL$CM0TX    $CYTTX           Generic Heading
     C                     MOVEL$CM1TX    $CYUTX           Generic Heading
     C                     MOVEL$CM2TX    $CYVTX           Generic Heading
     C                     MOVEL$CM3TX    $CYWTX           Generic Heading
     C                     MOVEL$CM4TX    $CYXTX           Generic Heading
     C                     MOVEL$CM5TX    $CYYTX           Generic Heading
     C                     MOVEL$CM6TX    $CYZTX           Generic Heading
     C                     MOVEL$CM7TX    $CY0TX           Generic Heading
     C                     MOVEL$CM8TX    $CY1TX           Generic Heading
     C                     MOVEL$CM9TX    $CY2TX           Generic Heading
     C                     MOVEL$CY5TX    $CY3TX           Generic Heading
     C                     MOVEL$CY6TX    $CY4TX           Generic Heading
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP00
     C                     END                             FI
      * Print Availability Group Code of Prt Base Availability PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Item Display Sequence of Prt Base Availability PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Detail line. of Prt Base Availability PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * RTV Pces/Bag,Bag/Unt,umRT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0040           Company Number
     C                     Z-ADD$DHGCD    WL0041           Item Code
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0042    WUAVNA    P      Description Lin
     C                     MOVELWL0043    $DADCD    P      U/M - Primary
     C                     Z-ADDWL0044    $DAIWG           Unit Weight
     C                     MOVELWL0045    YL0022    P      Piece Count Ite
     C                     Z-ADDWL0046    YL0023           Pieces Per Bag
     C                     Z-ADDWL0047    YL0024           Bags Per Unit
      * RTV Sold 100% Frozen  RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0048           Company Number
     C                     Z-ADD$DHGCD    WL0049           Item Code
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0050    YL0025    P      Sold 100% Froze
     C                     Z-ADD$DAIWG    $DWINB           USR Weight 1
      *
     C                     Z-ADD*ZERO     WN0097  92       Weight Producti
     C                     Z-ADD*ZERO     WN0098  70       Pieces Producti
     C                     MOVEL*BLANK    WN0099  3        PS Production W
     C                     Z-ADD*ZERO     WN0100  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0101  81       Grand Total Sch
     C                     MOVEL*BLANK    WN0102  1        Ord/Sch Sts USR
      *
      * Rtv Base PA           IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     $DLEQT           Qty On-Hand USR
     C                     Z-ADD*ZERO     $DLIQT           Qty Sched Prod
     C                     Z-ADD*ZERO     WULOQT           Qty Produced US
     C                     Z-ADD*ZERO     WULFQT           Qty Remaining P
     C                     Z-ADD*ZERO     $DLKQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DLGQT           Qty EOD Inv 1 U
     C                     Z-ADD*ZERO     $DLLQT           Qty Sched Ord 2
     C                     Z-ADD*ZERO     WULHQT           Qty EOD Inv 2 U
     C                     Z-ADD*ZERO     WULMQT           Qty Prod Needed
     C                     Z-ADD*ZERO     WULNQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     WULJQT           Qty Sched Prod
     C                     Z-ADD*ZERO     $DLVQT           Qty Sched Ord 3
     C                     Z-ADD*ZERO     WULRQT           Qty EOD Inv 3 U
     C                     Z-ADD*ZERO     WULUQT           Qty Prod Needed
     C                     Z-ADD*ZERO     WULTQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     WULWQT           Qty Sched Prod
     C                     Z-ADD*ZERO     WN0097           Weight Producti
     C                     Z-ADD*ZERO     WN0098           Pieces Producti
     C                     MOVEL*BLANK    WN0099           PS Production W
     C                     Z-ADD*ZERO     $DMOQT           Qty Sched Ord 4
     C                     Z-ADD*ZERO     $DMPQT           Qty Sched Ord 5
     C                     Z-ADD*ZERO     $DMQQT           Qty Sched Ord 6
     C                     Z-ADD*ZERO     $DMRQT           Qty Sched Ord 7
     C                     Z-ADD*ZERO     $DMUQT           Qty Sched Ord 8
     C                     Z-ADD*ZERO     $DMVQT           Qty Sched Ord 9
     C                     Z-ADD*ZERO     $DMWQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DMXQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DMYQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DMZQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DM0QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DM6QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $DM7QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     WN0100           Total Sched Shi
     C                     Z-ADD*ZERO     WN0101           Grand Total Sch
     C                     MOVEL*BLANK    WN0102           Ord/Sch Sts USR
      * NEW - If item sold 100% frozen, defaults plants Internal freezer
     C                     MOVELP2AJCD    YL0026           Warehouse Code
      * CASE: PAR.Sold 100% Frozen is yes
     C           YL0025    IFEQ 'Y'                        *IF
      * CASE: PAR.Company Number is Guymon
     C           $DAIC3    IFEQ 360                        *IF
     C                     MOVEL'CF1'     YL0026           Warehouse Code
     C                     ELSE
      * CASE: PAR.Company Number is St. Joseph
     C           $DAIC3    IFEQ 960                        *IF
     C                     MOVEL'SF1'     YL0026           Warehouse Code
     C                     ELSE
      * CASE: PAR.Company Number is Sioux City
     C           $DAIC3    IFEQ 440                        *IF
     C                     MOVEL'STF'     YL0026           Warehouse Code
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 1  **********
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELYL0026    WL0051    P      Warehouse Code
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0052    YL0027    P      Lot Tracking Fl
      * CASE: LCL.Lot Tracking Flag is yes
     C           YL0027    IFEQ 'Y'                        *IF
      * Rtv Item Loc Qty Tot  RT - Item Lot Location  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0053           Company Number
     C                     Z-ADD$DHGCD    WL0054           Item Code
     C                     MOVELYL0026    WL0055    P      Warehouse Code
     C                     Z-ADD$DLEQT    WL0056           Quantity Loc On
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0056    $DLEQT           Quantity Loc On
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv On-Hand Base PA   RT - Item Balance Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0057           Company Number
     C                     Z-ADD$DHGCD    WL0058           Item Code
     C                     MOVELYL0026    WL0059    P      Warehouse Code
     C                     Z-ADD$DLEQT    WL0060           On Hand U/M1 Su
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0060    $DLEQT           On Hand U/M1 Su
     C                     END                             *FI
      * If inventory qty is less than zero then make zero
      * CASE: PAR.Qty On-Hand USR is LT Zero
     C           $DLEQT    IFLT 0                          *IF
     C                     Z-ADD0         $DLEQT           Qty On-Hand USR
     C                     END                             *FI
      * Return Sched qty and weight.. which is what is was doing FP1054 4
     C                     MOVEL'N'       YL0028           Status Flag 10
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0061           Company Number
     C                     Z-ADD$DHGCD    WL0062           Item Code
     C                     MOVELYL0026    WL0063    P      Warehouse Code
     C                     Z-ADDYL0001    WL0064           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0065           Weight Schedule
     C                     Z-ADD$DLKQT    WL0066           Quantity Schedu
     C                     MOVELYL0028    WL0067    P      Status Flag 10
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0065    WUEEWG           Weight Schedule
     C                     Z-ADDWL0066    $DLKQT           Quantity Schedu
     C                     Z-ADD$DLKQT    WN0100           Total Sched Shi
     C                     MOVEL'O'       WN0102           Ord/Sch Sts USR
      * **********  Day 2  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0002    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DLLQT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DLLQT           Quantity Schedu
      * **********  Day 3  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0003    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DLVQT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DLVQT           Quantity Schedu
      * **********  Day 4  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0004    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DMOQT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DMOQT           Quantity Schedu
      * **********  Day 5  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0005    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DMPQT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DMPQT           Quantity Schedu
      * **********  Day 6  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0006    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DMQQT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DMQQT           Quantity Schedu
      * **********  Day 7  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0007    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DMRQT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DMRQT           Quantity Schedu
      * **********  Day 8  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0008    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DMUQT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DMUQT           Quantity Schedu
      * **********  Day 9  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0009    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DMVQT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DMVQT           Quantity Schedu
      * **********  Day 10 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0010    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DMWQT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DMWQT           Quantity Schedu
      * **********  Day 11 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0011    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DMXQT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DMXQT           Quantity Schedu
      * **********  Day 12 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0012    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DMYQT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DMYQT           Quantity Schedu
      * **********  Day 13 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0013    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DMZQT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DMZQT           Quantity Schedu
      * **********  Day 14 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0014    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DM0QT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DM0QT           Quantity Schedu
      * **********  Day 15 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0015    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DM6QT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DM6QT           Quantity Schedu
      * **********  Day 16 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0072           Company Number
     C                     Z-ADD$DHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0016    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$DM7QT    WL0077           Quantity Schedu
     C                     MOVELWN0102    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $DM7QT           Quantity Schedu
     C                     MOVEL*BLANK    $DOONA           Item Desc DRV
      * Item Desc DRV
      * Rtv Item Descriptions  RT - OM Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DHGCD    WL0079           Item Code
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0080    $DOONA    P      Description Lin
     C                     MOVELWL0081    WUAWNA    P      Description Lin
     C                     Z-ADD$DLKQT    P5KNNB           Total Sched Shi
      * Total-day 2
      * CASE: PAR.Generic Heading 2 is Equal Total
     C           P4MXTX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DLLQT           Qty Sched Ord 2
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DLLQT    P5KNNB           Total Sched Shi
     C                     ADD  $DLLQT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 3
      * CASE: PAR.Generic Heading 3 is Equal Total
     C           P4MYTX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DLVQT           Qty Sched Ord 3
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DLVQT    P5KNNB           Total Sched Shi
     C                     ADD  $DLVQT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 4
      * CASE: PAR.Generic Heading 4 is Equal Total
     C           P4MZTX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DMOQT           Qty Sched Ord 4
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DMOQT    P5KNNB           Total Sched Shi
     C                     ADD  $DMOQT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 5
      * CASE: PAR.Generic Heading 5 is Equal Total
     C           P4M0TX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DMPQT           Qty Sched Ord 5
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DMPQT    P5KNNB           Total Sched Shi
     C                     ADD  $DMPQT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 6
      * CASE: PAR.Generic Heading 6 is Equal Total
     C           P4M1TX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DMQQT           Qty Sched Ord 6
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DMQQT    P5KNNB           Total Sched Shi
     C                     ADD  $DMQQT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 7
      * CASE: PAR.Generic Heading 7 is Equal Total
     C           P4M2TX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DMRQT           Qty Sched Ord 7
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DMRQT    P5KNNB           Total Sched Shi
     C                     ADD  $DMRQT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 8
      * CASE: PAR.Generic Heading 8 is Equal Total
     C           P4M3TX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DMUQT           Qty Sched Ord 8
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DMUQT    P5KNNB           Total Sched Shi
     C                     ADD  $DMUQT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 9
      * CASE: PAR.Generic Heading 9 is Equal Total
     C           P4M4TX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DMVQT           Qty Sched Ord 9
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DMVQT    P5KNNB           Total Sched Shi
     C                     ADD  $DMVQT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 10
      * CASE: PAR.Generic Heading 10 is Equal Total
     C           P4M5TX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DMWQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DMWQT    P5KNNB           Total Sched Shi
     C                     ADD  $DMWQT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 11
      * CASE: PAR.Generic Heading 11 is Equal Total
     C           P4M6TX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DMXQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DMXQT    P5KNNB           Total Sched Shi
     C                     ADD  $DMXQT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 12
      * CASE: PAR.Generic Heading 12 is Equal Total
     C           P4M7TX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DMYQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DMYQT    P5KNNB           Total Sched Shi
     C                     ADD  $DMYQT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 13
      * CASE: PAR.Generic Heading 13 is Equal Total
     C           P4M8TX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DMZQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DMZQT    P5KNNB           Total Sched Shi
     C                     ADD  $DMZQT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 14
      * CASE: PAR.Generic Heading 14 is Equal Total
     C           P4M9TX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DM0QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DM0QT    P5KNNB           Total Sched Shi
     C                     ADD  $DM0QT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 15
      * CASE: PAR.Generic Heading 15 is Equal Total
     C           P4Y5TX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DM6QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DM6QT    P5KNNB           Total Sched Shi
     C                     ADD  $DM6QT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Total-day 16
      * CASE: PAR.Generic Heading 16 is Equal Total
     C           P4Y6TX    IFEQ 'Total'                    *IF
     C                     Z-ADDP5KNNB    $DM7QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DM7QT    P5KNNB           Total Sched Shi
     C                     ADD  $DM7QT    P6LGNB           Grand Total Sch
     C                     END                             *FI
      * Calculate Weight
      * CASE: LCL.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
     C           YL0023    MULT YL0024    YL0029           Pieces Need USR
     C                     Z-ADDYL0029    $DBGNX           USR 3 Numeric
     C           $DLEQT    MULT YL0029    $DLGWG           Wgt On-Hand USR
     C           $DLIQT    MULT YL0029    $DLHWG           Wgt Sched Prod
     C           $DLKQT    MULT YL0029    $DK0WG           Wgt Sched Ord 1
     C           $DLGQT    MULT YL0029    $DLIWG           Wgt EOD Inv 1 U
     C           $DLLQT    MULT YL0029    $DK8WG           Wgt Sched Ord 2
     C           $DLVQT    MULT YL0029    $DK9WG           Wgt Sched Ord 3
     C           $DMOQT    MULT YL0029    $DLAWG           Wgt Sched Ord 4
     C           $DMPQT    MULT YL0029    $DLBWG           Wgt Sched Ord 5
     C           $DMQQT    MULT YL0029    $DLCWG           Wgt Sched Ord 6
     C           $DMRQT    MULT YL0029    $DLDWG           Wgt Sched Ord 7
     C           $DMUQT    MULT YL0029    $DLEWG           Wgt Sched Ord 8
     C           $DMVQT    MULT YL0029    $DLFWG           Wgt Sched Ord 9
     C           $DMWQT    MULT YL0029    $DK1WG           Wgt Sched Ord 1
     C           $DMXQT    MULT YL0029    $DK2WG           Wgt Sched Ord 1
     C           $DMYQT    MULT YL0029    $DK3WG           Wgt Sched Ord 1
     C           $DMZQT    MULT YL0029    $DK4WG           Wgt Sched Ord 1
     C           $DM0QT    MULT YL0029    $DK5WG           Wgt Sched Ord 1
     C           $DM6QT    MULT YL0029    $DK6WG           Wgt Sched Ord 1
     C           $DM7QT    MULT YL0029    $DK7WG           Wgt Sched Ord 1
     C                     ELSE
      * CASE: *OTHERWISE
     C           $DLEQT    MULT $DAIWG    $DLGWG           Wgt On-Hand USR
     C           $DLIQT    MULT $DAIWG    $DLHWG           Wgt Sched Prod
     C           $DLKQT    MULT $DAIWG    $DK0WG           Wgt Sched Ord 1
     C           $DLGQT    MULT $DAIWG    $DLIWG           Wgt EOD Inv 1 U
     C           $DLLQT    MULT $DAIWG    $DK8WG           Wgt Sched Ord 2
     C           $DLVQT    MULT $DAIWG    $DK9WG           Wgt Sched Ord 3
     C           $DMOQT    MULT $DAIWG    $DLAWG           Wgt Sched Ord 4
     C           $DMPQT    MULT $DAIWG    $DLBWG           Wgt Sched Ord 5
     C           $DMQQT    MULT $DAIWG    $DLCWG           Wgt Sched Ord 6
     C           $DMRQT    MULT $DAIWG    $DLDWG           Wgt Sched Ord 7
     C           $DMUQT    MULT $DAIWG    $DLEWG           Wgt Sched Ord 8
     C           $DMVQT    MULT $DAIWG    $DLFWG           Wgt Sched Ord 9
     C           $DMWQT    MULT $DAIWG    $DK1WG           Wgt Sched Ord 1
     C           $DMXQT    MULT $DAIWG    $DK2WG           Wgt Sched Ord 1
     C           $DMYQT    MULT $DAIWG    $DK3WG           Wgt Sched Ord 1
     C           $DMZQT    MULT $DAIWG    $DK4WG           Wgt Sched Ord 1
     C           $DM0QT    MULT $DAIWG    $DK5WG           Wgt Sched Ord 1
     C           $DM6QT    MULT $DAIWG    $DK6WG           Wgt Sched Ord 1
     C           $DM7QT    MULT $DAIWG    $DK7WG           Wgt Sched Ord 1
     C                     END                             *FI
      * Move 0 decimal to 2 decimal
     C                     EXSR UASUBR                     Move 0 decimal
      * dont print line if all fields are zero
      * CASE:
      *  - c1ANDc2ANDc3ANDc4ANDc5ANDc6ANDc7ANDc8ANDc9ANDc10ANDc11ANDc12A
      *  - NDc14ANDc15ANDc16ANDc17ANDc18ANDc19ANDc20
      *   |- c1    : CUR.Qty On-Hand USR is EQ Zero
      *   |- c2    : CUR.Qty Sched Prod 1 USR is EQ Zero
      *   |- c3    : CUR.Qty Sched Ord 1 USR is EQ Zero
      *   |- c4    : CUR.Qty EOD Inv 1 USR is EQ Zero
      *   |- c5    : CUR.Qty Sched Ord 2 USR is EQ Zero
      *   |- c6    : CUR.Qty Sched Ord 3 USR is EQ Zero
      *   |- c7    : CUR.Qty Sched Ord 4 USR EQ WRK.ZERO
      *   |- c8    : CUR.Qty Sched Ord 5 USR EQ WRK.ZERO
      *   |- c9    : CUR.Qty Sched Ord 6 USR EQ WRK.ZERO
      *   |- c10   : CUR.Qty Sched Ord 7 USR EQ WRK.ZERO
      *   |- c11   : CUR.Qty Sched Ord 8 USR is EQ Zero
      *   |- c12   : CUR.Qty Sched Ord 9 USR is EQ Zero
      *   |- c14   : CUR.Qty Sched Ord 10 USR is EQ Zero
      *   |- c15   : CUR.Qty Sched Ord 11 USR is EQ Zero
      *   |- c16   : CUR.Qty Sched Ord 12 USR is EQ Zero
      *   |- c17   : CUR.Qty Sched Ord 13 USR is EQ Zero
      *   |- c18   : CUR.Qty Sched Ord 14 USR is EQ Zero
      *   |- c19   : CUR.Qty Sched Ord 15 USR is EQ Zero
      *   |- c20   : CUR.Qty Sched Ord 16 USR is EQ Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $DLEQT    IFEQ *ZERO                      *IF
     C           $DLIQT    IFEQ *ZERO                      *IF
     C           $DLKQT    IFEQ *ZERO                      *IF
     C           $DLGQT    IFEQ *ZERO                      *IF
     C           $DLLQT    IFEQ *ZERO                      *IF
     C           $DLVQT    IFEQ *ZERO                      *IF
     C           $DMOQT    IFEQ WUW0NB                     *IF
     C           $DMPQT    IFEQ WUW0NB                     *IF
     C           $DMQQT    IFEQ WUW0NB                     *IF
     C           $DMRQT    IFEQ WUW0NB                     *IF
     C           $DMUQT    IFEQ *ZERO                      *IF
     C           $DMVQT    IFEQ *ZERO                      *IF
     C           $DMWQT    IFEQ *ZERO                      *IF
     C           $DMXQT    IFEQ *ZERO                      *IF
     C           $DMYQT    IFEQ *ZERO                      *IF
     C           $DMZQT    IFEQ *ZERO                      *IF
     C           $DM0QT    IFEQ *ZERO                      *IF
     C           $DM6QT    IFEQ *ZERO                      *IF
     C           $DM7QT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $DHGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$DHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VDHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Print First Page Format of Prt Base Avail        PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP1P    ANDEQ'P'
      * Print format
     C                     WRITE$E1STPAG
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0BP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0BL1P
     C                     END                             FI
      * Print Company Number of Prt Base Avail        PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP00
     C                     END                             FI
      * Print Component Item Code of Prt Base Avail        PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP01
     C                     END                             FI
      * Print Item Code of Prt Base Avail        PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP02
     C                     END                             FI
      * Print Detail line. of Prt Base Avail        PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0BCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BPDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * RTV Pces/Bag,Bag/Unt,umRT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0040           Company Number
     C                     Z-ADD$FHGCD    WL0041           Item Code
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0042    WUAVNA    P      Description Lin
     C                     MOVELWL0043    $FADCD    P      U/M - Primary
     C                     Z-ADDWL0044    $FAIWG           Unit Weight
     C                     MOVELWL0045    YL0053    P      Piece Count Ite
     C                     Z-ADDWL0046    YL0054           Pieces Per Bag
     C                     Z-ADDWL0047    YL0055           Bags Per Unit
      * RTV Sold 100% Frozen  RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0048           Company Number
     C                     Z-ADD$FHGCD    WL0049           Item Code
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0050    YL0056    P      Sold 100% Froze
     C                     Z-ADD$FAIWG    $FWINB           USR Weight 1
      *
     C                     Z-ADD*ZERO     WN0140  92       Weight Producti
     C                     Z-ADD*ZERO     WN0141  70       Pieces Producti
     C                     MOVEL*BLANK    WN0142  3        PS Production W
     C                     Z-ADD*ZERO     WN0143  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0144  81       Grand Total Sch
     C                     MOVEL*BLANK    WN0145  1        Ord/Sch Sts USR
      *
      * Rtv Base PA           IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     $FLEQT           Qty On-Hand USR
     C                     Z-ADD*ZERO     $FLIQT           Qty Sched Prod
     C                     Z-ADD*ZERO     WULOQT           Qty Produced US
     C                     Z-ADD*ZERO     WULFQT           Qty Remaining P
     C                     Z-ADD*ZERO     $FLKQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FLGQT           Qty EOD Inv 1 U
     C                     Z-ADD*ZERO     $FLLQT           Qty Sched Ord 2
     C                     Z-ADD*ZERO     WULHQT           Qty EOD Inv 2 U
     C                     Z-ADD*ZERO     WULMQT           Qty Prod Needed
     C                     Z-ADD*ZERO     WULNQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     WULJQT           Qty Sched Prod
     C                     Z-ADD*ZERO     $FLVQT           Qty Sched Ord 3
     C                     Z-ADD*ZERO     WULRQT           Qty EOD Inv 3 U
     C                     Z-ADD*ZERO     WULUQT           Qty Prod Needed
     C                     Z-ADD*ZERO     WULTQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     WULWQT           Qty Sched Prod
     C                     Z-ADD*ZERO     WN0140           Weight Producti
     C                     Z-ADD*ZERO     WN0141           Pieces Producti
     C                     MOVEL*BLANK    WN0142           PS Production W
     C                     Z-ADD*ZERO     $FMOQT           Qty Sched Ord 4
     C                     Z-ADD*ZERO     $FMPQT           Qty Sched Ord 5
     C                     Z-ADD*ZERO     $FMQQT           Qty Sched Ord 6
     C                     Z-ADD*ZERO     $FMRQT           Qty Sched Ord 7
     C                     Z-ADD*ZERO     $FMUQT           Qty Sched Ord 8
     C                     Z-ADD*ZERO     $FMVQT           Qty Sched Ord 9
     C                     Z-ADD*ZERO     $FMWQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FMXQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FMYQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FMZQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FM0QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FM6QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     $FM7QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     WN0143           Total Sched Shi
     C                     Z-ADD*ZERO     WN0144           Grand Total Sch
     C                     MOVEL*BLANK    WN0145           Ord/Sch Sts USR
      * NEW - If item sold 100% frozen, defaults plants Internal freezer
     C                     MOVELP2AJCD    YL0026           Warehouse Code
      * CASE: PAR.Sold 100% Frozen is yes
     C           YL0056    IFEQ 'Y'                        *IF
      * CASE: PAR.Company Number is Guymon
     C           $FAIC3    IFEQ 360                        *IF
     C                     MOVEL'CF1'     YL0026           Warehouse Code
     C                     ELSE
      * CASE: PAR.Company Number is St. Joseph
     C           $FAIC3    IFEQ 960                        *IF
     C                     MOVEL'SF1'     YL0026           Warehouse Code
     C                     ELSE
      * CASE: PAR.Company Number is Sioux City
     C           $FAIC3    IFEQ 440                        *IF
     C                     MOVEL'STF'     YL0026           Warehouse Code
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 1  **********
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELYL0026    WL0051    P      Warehouse Code
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0052    YL0027    P      Lot Tracking Fl
      * CASE: LCL.Lot Tracking Flag is yes
     C           YL0027    IFEQ 'Y'                        *IF
      * Rtv Item Loc Qty Tot  RT - Item Lot Location  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0053           Company Number
     C                     Z-ADD$FHGCD    WL0054           Item Code
     C                     MOVELYL0026    WL0055    P      Warehouse Code
     C                     Z-ADD$FLEQT    WL0056           Quantity Loc On
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0056    $FLEQT           Quantity Loc On
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv On-Hand Base PA   RT - Item Balance Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0057           Company Number
     C                     Z-ADD$FHGCD    WL0058           Item Code
     C                     MOVELYL0026    WL0059    P      Warehouse Code
     C                     Z-ADD$FLEQT    WL0060           On Hand U/M1 Su
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0060    $FLEQT           On Hand U/M1 Su
     C                     END                             *FI
      * If inventory qty is less than zero then make zero
      * CASE: PAR.Qty On-Hand USR is LT Zero
     C           $FLEQT    IFLT 0                          *IF
     C                     Z-ADD0         $FLEQT           Qty On-Hand USR
     C                     END                             *FI
      * Return Sched qty and weight.. which is what is was doing FP1054 4
     C                     MOVEL'N'       YL0028           Status Flag 10
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0061           Company Number
     C                     Z-ADD$FHGCD    WL0062           Item Code
     C                     MOVELYL0026    WL0063    P      Warehouse Code
     C                     Z-ADDYL0030    WL0064           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0065           Weight Schedule
     C                     Z-ADD$FLKQT    WL0066           Quantity Schedu
     C                     MOVELYL0028    WL0067    P      Status Flag 10
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0065    WUEEWG           Weight Schedule
     C                     Z-ADDWL0066    $FLKQT           Quantity Schedu
     C                     Z-ADD$FLKQT    WN0143           Total Sched Shi
     C                     MOVEL'O'       WN0145           Ord/Sch Sts USR
      * **********  Day 2  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0031    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FLLQT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FLLQT           Quantity Schedu
      * **********  Day 3  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0032    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FLVQT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FLVQT           Quantity Schedu
      * **********  Day 4  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0033    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FMOQT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FMOQT           Quantity Schedu
      * **********  Day 5  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0034    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FMPQT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FMPQT           Quantity Schedu
      * **********  Day 6  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0035    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FMQQT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FMQQT           Quantity Schedu
      * **********  Day 7  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0036    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FMRQT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FMRQT           Quantity Schedu
      * **********  Day 8  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0037    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FMUQT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FMUQT           Quantity Schedu
      * **********  Day 9  **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0038    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FMVQT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FMVQT           Quantity Schedu
      * **********  Day 10 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0039    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FMWQT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FMWQT           Quantity Schedu
      * **********  Day 11 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0040    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FMXQT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FMXQT           Quantity Schedu
      * **********  Day 12 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0041    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FMYQT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FMYQT           Quantity Schedu
      * **********  Day 13 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0042    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FMZQT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FMZQT           Quantity Schedu
      * **********  Day 14 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0043    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FM0QT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FM0QT           Quantity Schedu
      * **********  Day 15 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0044    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FM6QT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FM6QT           Quantity Schedu
      * **********  Day 16 **********
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FAIC3    WL0072           Company Number
     C                     Z-ADD$FHGCD    WL0073           Item Code
     C                     MOVELYL0026    WL0074    P      Warehouse Code
     C                     Z-ADDYL0045    WL0075           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0076           Weight Schedule
     C                     Z-ADD$FM7QT    WL0077           Quantity Schedu
     C                     MOVELWN0145    WL0078    P      Ord/Sch Sts USR
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0076    WUEEWG           Weight Schedule
     C                     Z-ADDWL0077    $FM7QT           Quantity Schedu
     C                     MOVEL*BLANK    $FOONA           Item Desc DRV
      * Item Desc DRV
      * Rtv Item Descriptions  RT - OM Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FHGCD    WL0079           Item Code
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0080    $FOONA    P      Description Lin
     C                     MOVELWL0081    WUAWNA    P      Description Lin
     C                     Z-ADD$FLKQT    WN0136           Total Sched Shi
     C                     Z-ADD$FDMNY    WN0138           Total Alloc/Ord
      * RMC 8/27/07  Added this XF to get Prod Yield % for produced item
      * for certain type/group/class. if not that str, make it 1 to have
      * Rtv Item Typ/Grp/Cls  RT - Company Item  * 
     C                     EXSR SPRVGN
      * Get Prod Yld% for boneless sirloins only
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : LCL.Item Structure Type Code is Cooked Products
      *   |- c2    : LCL.Item Structure Group Code is Credit Items
      *   |- c3    : LCL.Item Structure Class Code is Sirloins
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0059    IFEQ 200                        *IF
     C           YL0058    IFEQ 850                        *IF
     C           YL0057    IFEQ 853                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Item Prod Yield   XF - Item Bill Of Material  * 
     C                     CALL 'POQWXFR'              90  Rtv Item Prod Y
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $FAIC3    WQ0001  30       Company Number
     C                     PARM $FHGCD    WQ0002  70       Item Code
     C                     PARM $FHGCD    WQ0003  70       Component Item
     C           YL0060    PARM *ZERO     WQ0004  52       Production Yiel
     C           YL0061    PARM *BLANK    WQ0005  1        Record Found US
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POQWXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         YL0060           Production Yiel
     C                     END                             *FI
      * Div % by 100 for calc
      * CASE: LCL.Production Yield is equal to zero
     C           YL0060    IFEQ *ZERO                      *IF
     C                     Z-ADD1         YL0062           @Percent 6/5
     C                     ELSE
      * CASE: *OTHERWISE
     C           YL0060    DIV  100       YL0062           @Percent 6/5
     C                     END                             *FI
      * MOVE: Total Vs. Day Values & Accumulate Totals
     C                     EXSR UCSUBR                     MOVE: Total Vs.
     C           YL0054    MULT YL0055    YL0063           Pieces Need USR
     C                     Z-ADDYL0063    $FBGNX           USR 3 Numeric
      * CALC: Weight
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * CONV: Calculate Scheduled Ship Weight
     C                     EXSR UDSUBR                     CONV: Calculate
      * CONV: Calculate Sch Freezer Weight
     C                     EXSR UESUBR                     CONV: Calculate
     C                     ELSE
      * CASE: *OTHERWISE
      * CONV: Calculate Scheduled Ship Weight
     C                     EXSR UFSUBR                     CONV: Calculate
      * CONV: Calculate Sch Freezer Weight
     C                     EXSR UGSUBR                     CONV: Calculate
     C                     END                             *FI
      * CALC: Base Availability
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * CONV: Sch Ship Qty to Base Qty Using Pieces
     C                     EXSR UHSUBR                     CONV: Sch Ship
      * CONV: Sch Freezer Qty to Base Qty Using Pieces
     C                     EXSR UISUBR                     CONV: Sch Freez
     C                     ELSE
      * CASE: *OTHERWISE
      * CONV: Sch Ship Qty to Base Qty Using Unit Weight
     C                     EXSR UJSUBR                     CONV: Sch Ship
      * CONV: Sch Freezer Qty to Base Qty Using Unit Weight
     C                     EXSR UKSUBR                     CONV: Sch Freez
     C                     END                             *FI
      * dont print line if all fields are zero
      * CASE: SCHED SHIPS ALL ZERO
      *  - c1ANDc2ANDc3ANDc4ANDc5ANDc6ANDc7ANDc8ANDc9ANDc10ANDc11ANDc12A
      *  - NDc14ANDc15ANDc16ANDc17ANDc18ANDc19ANDc20
      *   |- c1    : CUR.Qty On-Hand USR is EQ Zero
      *   |- c2    : CUR.Qty Sched Prod 1 USR is EQ Zero
      *   |- c3    : CUR.Qty Sched Ord 1 USR is EQ Zero
      *   |- c4    : CUR.Qty EOD Inv 1 USR is EQ Zero
      *   |- c5    : CUR.Qty Sched Ord 2 USR is EQ Zero
      *   |- c6    : CUR.Qty Sched Ord 3 USR is EQ Zero
      *   |- c7    : CUR.Qty Sched Ord 4 USR EQ WRK.ZERO
      *   |- c8    : CUR.Qty Sched Ord 5 USR EQ WRK.ZERO
      *   |- c9    : CUR.Qty Sched Ord 6 USR EQ WRK.ZERO
      *   |- c10   : CUR.Qty Sched Ord 7 USR EQ WRK.ZERO
      *   |- c11   : CUR.Qty Sched Ord 8 USR is EQ Zero
      *   |- c12   : CUR.Qty Sched Ord 9 USR is EQ Zero
      *   |- c14   : CUR.Qty Sched Ord 10 USR is EQ Zero
      *   |- c15   : CUR.Qty Sched Ord 11 USR is EQ Zero
      *   |- c16   : CUR.Qty Sched Ord 12 USR is EQ Zero
      *   |- c17   : CUR.Qty Sched Ord 13 USR is EQ Zero
      *   |- c18   : CUR.Qty Sched Ord 14 USR is EQ Zero
      *   |- c19   : CUR.Qty Sched Ord 15 USR is EQ Zero
      *   |- c20   : CUR.Qty Sched Ord 16 USR is EQ Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $FLEQT    IFEQ *ZERO                      *IF
     C           $FLIQT    IFEQ *ZERO                      *IF
     C           $FLKQT    IFEQ *ZERO                      *IF
     C           $FLGQT    IFEQ *ZERO                      *IF
     C           $FLLQT    IFEQ *ZERO                      *IF
     C           $FLVQT    IFEQ *ZERO                      *IF
     C           $FMOQT    IFEQ WUW0NB                     *IF
     C           $FMPQT    IFEQ WUW0NB                     *IF
     C           $FMQQT    IFEQ WUW0NB                     *IF
     C           $FMRQT    IFEQ WUW0NB                     *IF
     C           $FMUQT    IFEQ *ZERO                      *IF
     C           $FMVQT    IFEQ *ZERO                      *IF
     C           $FMWQT    IFEQ *ZERO                      *IF
     C           $FMXQT    IFEQ *ZERO                      *IF
     C           $FMYQT    IFEQ *ZERO                      *IF
     C           $FMZQT    IFEQ *ZERO                      *IF
     C           $FM0QT    IFEQ *ZERO                      *IF
     C           $FM6QT    IFEQ *ZERO                      *IF
     C           $FM7QT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         YL0051           Count USR
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $FHGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$FHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VFHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print column headings if required
     C           W0BCDT    IFEQ 'Y'
     C                     WRITE$FCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0BCDT
     C                     END                             FI
      * Print format
     C                     WRITE$FDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0BPDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Base Availability PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  6         W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt Base Availability PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  4         W0FSUM
     C                     END                             FI
      *
      * * Availability Group Code of Prt Base Availability PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Display Sequence of Prt Base Availability PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Base Availability PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD3         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt Base Avail        PO
     C           W0BP1P    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt Base Avail        PO
     C           W0BP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Component Item Code of Prt Base Avail        PO
     C           W0BP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Code of Prt Base Avail        PO
     C           W0BP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Base Avail        PO
     C           W0BPDT    IFEQ 'Y'
     C                     Z-ADD3         W0DTLN
     C           W0BCDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'OMS'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv PA Shipdate-21+SunRT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD1         WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN AFAIC3    WQSC01           Company Number
      * Define keylist
     C           KPSSC     KLIST
     C                     KFLD           WQSC01           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           Company Number
      * Setup key
     C                     Z-ADDWL0001    WQSC01           Company Number
     C                     Z-ADDWL0002    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSC     SETLL@AFREBE                    *
     C           KRSSC     READE@AFREBE                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.Count USR is GT 21
     C           WUCNTU    IFGT 21                         *IF
     C                     GOTO SCEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Date
      * CASE: WRK.Count USR is One
     C           WUCNTU    IFEQ 1                          *IF
      *
     C                     MOVEL*BLANK    WN0001  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0002  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0003  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0004  2        Month (Char) US
     C                     MOVEL*BLANK    WN0005  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0002           Date (Alpha) US
     C                     MOVELAFBCDT    WN0002           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0002:ZQ WN0003    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0002:ZQ WN0004    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0002:ZQ WN0005    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0004    CAT  WN0005:ZQ WN0001    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0001    CAT  WN0003:ZQ WN0001    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0001    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0003           Generic Heading
     C                     MOVELWUCLC6    WL0003           Generic Heading
     C                     Z-ADDAFBCDT    WL0019           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0004           Generic Heading
     C                     MOVEL'Total'   WL0004           Generic Heading
     C                     Z-ADD0         WL0020           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Two
     C           WUCNTU    IFEQ 2                          *IF
      *
     C                     MOVEL*BLANK    WN0006  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0007  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0008  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0009  2        Month (Char) US
     C                     MOVEL*BLANK    WN0010  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0007           Date (Alpha) US
     C                     MOVELAFBCDT    WN0007           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0007:ZQ WN0008    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0007:ZQ WN0009    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0007:ZQ WN0010    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0009    CAT  WN0010:ZQ WN0006    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0006    CAT  WN0008:ZQ WN0006    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0006    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0004           Generic Heading
     C                     MOVELWUCLC6    WL0004           Generic Heading
     C                     Z-ADDAFBCDT    WL0020           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0005           Generic Heading
     C                     MOVEL'Total'   WL0005           Generic Heading
     C                     Z-ADD0         WL0021           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Three
     C           WUCNTU    IFEQ 3                          *IF
      *
     C                     MOVEL*BLANK    WN0011  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0012  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0013  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0014  2        Month (Char) US
     C                     MOVEL*BLANK    WN0015  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0012           Date (Alpha) US
     C                     MOVELAFBCDT    WN0012           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0012:ZQ WN0013    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0012:ZQ WN0014    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0012:ZQ WN0015    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0014    CAT  WN0015:ZQ WN0011    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0011    CAT  WN0013:ZQ WN0011    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0011    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0005           Generic Heading
     C                     MOVELWUCLC6    WL0005           Generic Heading
     C                     Z-ADDAFBCDT    WL0021           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0006           Generic Heading
     C                     MOVEL'Total'   WL0006           Generic Heading
     C                     Z-ADD0         WL0022           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Four
     C           WUCNTU    IFEQ 4                          *IF
      *
     C                     MOVEL*BLANK    WN0016  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0017  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0018  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0019  2        Month (Char) US
     C                     MOVEL*BLANK    WN0020  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0017           Date (Alpha) US
     C                     MOVELAFBCDT    WN0017           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0017:ZQ WN0018    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0017:ZQ WN0019    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0017:ZQ WN0020    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0019    CAT  WN0020:ZQ WN0016    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0016    CAT  WN0018:ZQ WN0016    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0016    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0006           Generic Heading
     C                     MOVELWUCLC6    WL0006           Generic Heading
     C                     Z-ADDAFBCDT    WL0022           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0007           Generic Heading
     C                     MOVEL'Total'   WL0007           Generic Heading
     C                     Z-ADD0         WL0023           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Five
     C           WUCNTU    IFEQ 5                          *IF
      *
     C                     MOVEL*BLANK    WN0021  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0022  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0023  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0024  2        Month (Char) US
     C                     MOVEL*BLANK    WN0025  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0022           Date (Alpha) US
     C                     MOVELAFBCDT    WN0022           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0022:ZQ WN0023    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0022:ZQ WN0024    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0022:ZQ WN0025    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0024    CAT  WN0025:ZQ WN0021    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0021    CAT  WN0023:ZQ WN0021    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0021    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0007           Generic Heading
     C                     MOVELWUCLC6    WL0007           Generic Heading
     C                     Z-ADDAFBCDT    WL0023           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0008           Generic Heading
     C                     MOVEL'Total'   WL0008           Generic Heading
     C                     Z-ADD0         WL0024           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Six
     C           WUCNTU    IFEQ 6                          *IF
      *
     C                     MOVEL*BLANK    WN0026  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0027  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0028  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0029  2        Month (Char) US
     C                     MOVEL*BLANK    WN0030  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0027           Date (Alpha) US
     C                     MOVELAFBCDT    WN0027           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0027:ZQ WN0028    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0027:ZQ WN0029    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0027:ZQ WN0030    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0029    CAT  WN0030:ZQ WN0026    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0026    CAT  WN0028:ZQ WN0026    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0026    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0008           Generic Heading
     C                     MOVELWUCLC6    WL0008           Generic Heading
     C                     Z-ADDAFBCDT    WL0024           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0009           Generic Heading
     C                     MOVEL'Total'   WL0009           Generic Heading
     C                     Z-ADD0         WL0025           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Seven
     C           WUCNTU    IFEQ 7                          *IF
      *
     C                     MOVEL*BLANK    WN0031  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0032  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0033  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0034  2        Month (Char) US
     C                     MOVEL*BLANK    WN0035  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0032           Date (Alpha) US
     C                     MOVELAFBCDT    WN0032           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0032:ZQ WN0033    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0032:ZQ WN0034    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0032:ZQ WN0035    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0034    CAT  WN0035:ZQ WN0031    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0031    CAT  WN0033:ZQ WN0031    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0031    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0009           Generic Heading
     C                     MOVELWUCLC6    WL0009           Generic Heading
     C                     Z-ADDAFBCDT    WL0025           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0010           Generic Heading
     C                     MOVEL'Total'   WL0010           Generic Heading
     C                     Z-ADD0         WL0026           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Eight
     C           WUCNTU    IFEQ 8                          *IF
      *
     C                     MOVEL*BLANK    WN0036  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0037  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0038  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0039  2        Month (Char) US
     C                     MOVEL*BLANK    WN0040  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0037           Date (Alpha) US
     C                     MOVELAFBCDT    WN0037           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0037:ZQ WN0038    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0037:ZQ WN0039    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0037:ZQ WN0040    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0039    CAT  WN0040:ZQ WN0036    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0036    CAT  WN0038:ZQ WN0036    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0036    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0010           Generic Heading
     C                     MOVELWUCLC6    WL0010           Generic Heading
     C                     Z-ADDAFBCDT    WL0026           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0011           Generic Heading
     C                     MOVEL'Total'   WL0011           Generic Heading
     C                     Z-ADD0         WL0027           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Nine
     C           WUCNTU    IFEQ 9                          *IF
      *
     C                     MOVEL*BLANK    WN0041  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0042  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0043  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0044  2        Month (Char) US
     C                     MOVEL*BLANK    WN0045  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0042           Date (Alpha) US
     C                     MOVELAFBCDT    WN0042           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0042:ZQ WN0043    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0042:ZQ WN0044    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0042:ZQ WN0045    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0044    CAT  WN0045:ZQ WN0041    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0041    CAT  WN0043:ZQ WN0041    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0041    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0011           Generic Heading
     C                     MOVELWUCLC6    WL0011           Generic Heading
     C                     Z-ADDAFBCDT    WL0027           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0012           Generic Heading
     C                     MOVEL'Total'   WL0012           Generic Heading
     C                     Z-ADD0         WL0028           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Ten
     C           WUCNTU    IFEQ 10                         *IF
      *
     C                     MOVEL*BLANK    WN0046  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0047  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0048  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0049  2        Month (Char) US
     C                     MOVEL*BLANK    WN0050  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0047           Date (Alpha) US
     C                     MOVELAFBCDT    WN0047           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0047:ZQ WN0048    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0047:ZQ WN0049    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0047:ZQ WN0050    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0049    CAT  WN0050:ZQ WN0046    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0046    CAT  WN0048:ZQ WN0046    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0046    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0012           Generic Heading
     C                     MOVELWUCLC6    WL0012           Generic Heading
     C                     Z-ADDAFBCDT    WL0028           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0013           Generic Heading
     C                     MOVEL'Total'   WL0013           Generic Heading
     C                     Z-ADD0         WL0029           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Eleven
     C           WUCNTU    IFEQ 11                         *IF
      *
     C                     MOVEL*BLANK    WN0051  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0052  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0053  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0054  2        Month (Char) US
     C                     MOVEL*BLANK    WN0055  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0052           Date (Alpha) US
     C                     MOVELAFBCDT    WN0052           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0052:ZQ WN0053    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0052:ZQ WN0054    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0052:ZQ WN0055    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0054    CAT  WN0055:ZQ WN0051    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0051    CAT  WN0053:ZQ WN0051    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0051    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0013           Generic Heading
     C                     MOVELWUCLC6    WL0013           Generic Heading
     C                     Z-ADDAFBCDT    WL0029           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0014           Generic Heading
     C                     MOVEL'Total'   WL0014           Generic Heading
     C                     Z-ADD0         WL0030           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Twelve
     C           WUCNTU    IFEQ 12                         *IF
      *
     C                     MOVEL*BLANK    WN0056  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0057  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0058  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0059  2        Month (Char) US
     C                     MOVEL*BLANK    WN0060  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0057           Date (Alpha) US
     C                     MOVELAFBCDT    WN0057           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0057:ZQ WN0058    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0057:ZQ WN0059    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0057:ZQ WN0060    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0059    CAT  WN0060:ZQ WN0056    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0056    CAT  WN0058:ZQ WN0056    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0056    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0014           Generic Heading
     C                     MOVELWUCLC6    WL0014           Generic Heading
     C                     Z-ADDAFBCDT    WL0030           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0015           Generic Heading
     C                     MOVEL'Total'   WL0015           Generic Heading
     C                     Z-ADD0         WL0031           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Thirteen
     C           WUCNTU    IFEQ 13                         *IF
      *
     C                     MOVEL*BLANK    WN0061  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0062  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0063  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0064  2        Month (Char) US
     C                     MOVEL*BLANK    WN0065  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0062           Date (Alpha) US
     C                     MOVELAFBCDT    WN0062           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0062:ZQ WN0063    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0062:ZQ WN0064    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0062:ZQ WN0065    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0064    CAT  WN0065:ZQ WN0061    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0061    CAT  WN0063:ZQ WN0061    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0061    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0015           Generic Heading
     C                     MOVELWUCLC6    WL0015           Generic Heading
     C                     Z-ADDAFBCDT    WL0031           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0016           Generic Heading
     C                     MOVEL'Total'   WL0016           Generic Heading
     C                     Z-ADD0         WL0032           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Fourteen
     C           WUCNTU    IFEQ 14                         *IF
      *
     C                     MOVEL*BLANK    WN0066  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0067  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0068  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0069  2        Month (Char) US
     C                     MOVEL*BLANK    WN0070  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0067           Date (Alpha) US
     C                     MOVELAFBCDT    WN0067           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0067:ZQ WN0068    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0067:ZQ WN0069    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0067:ZQ WN0070    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0069    CAT  WN0070:ZQ WN0066    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0066    CAT  WN0068:ZQ WN0066    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0066    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0016           Generic Heading
     C                     MOVELWUCLC6    WL0016           Generic Heading
     C                     Z-ADDAFBCDT    WL0032           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0017           Generic Heading
     C                     MOVEL'Total'   WL0017           Generic Heading
     C                     Z-ADD0         WL0033           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Fifteen
     C           WUCNTU    IFEQ 15                         *IF
      *
     C                     MOVEL*BLANK    WN0071  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0072  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0073  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0074  2        Month (Char) US
     C                     MOVEL*BLANK    WN0075  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0072           Date (Alpha) US
     C                     MOVELAFBCDT    WN0072           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0072:ZQ WN0073    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0072:ZQ WN0074    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0072:ZQ WN0075    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0074    CAT  WN0075:ZQ WN0071    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0071    CAT  WN0073:ZQ WN0071    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0071    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0017           Generic Heading
     C                     MOVELWUCLC6    WL0017           Generic Heading
     C                     Z-ADDAFBCDT    WL0033           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WL0018           Generic Heading
     C                     MOVEL'Total'   WL0018           Generic Heading
     C                     Z-ADD0         WL0034           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Sixteen
     C           WUCNTU    IFEQ 16                         *IF
      *
     C                     MOVEL*BLANK    WN0076  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0077  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0078  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0079  2        Month (Char) US
     C                     MOVEL*BLANK    WN0080  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0077           Date (Alpha) US
     C                     MOVELAFBCDT    WN0077           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0077:ZQ WN0078    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0077:ZQ WN0079    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0077:ZQ WN0080    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0079    CAT  WN0080:ZQ WN0076    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0076    CAT  WN0078:ZQ WN0076    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0076    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WL0018           Generic Heading
     C                     MOVELWUCLC6    WL0018           Generic Heading
     C                     Z-ADDAFBCDT    WL0034           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Seventeen
     C           WUCNTU    IFEQ 17                         *IF
     C                     Z-ADDAFBCDT    WL0035           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Eighteen
     C           WUCNTU    IFEQ 18                         *IF
     C                     Z-ADDAFBCDT    WL0036           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Nineteen
     C           WUCNTU    IFEQ 19                         *IF
     C                     Z-ADDAFBCDT    WL0037           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Twenty
     C           WUCNTU    IFEQ 20                         *IF
     C                     Z-ADDAFBCDT    WL0038           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Twenty One
     C           WUCNTU    IFEQ 21                         *IF
     C                     Z-ADDAFBCDT    WL0039           Avail Ship Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C           KRSSC     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD$BAIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSD     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BADTX           Name
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    $BADTX           Name
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Whse Descrip       RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL$BAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSE     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BF8NA           Warehouse Descr
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELADF8NA    $BF8NA           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Group Description  RT - Availability Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           KKV4CD           Availability Gr
      * Setup key
     C                     MOVEL$BV4CD    KKV4CD           Availability Gr
      * Establish starting position
     C           KRSSF     CHAIN@KKREG7              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2215' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BNVNA           Availability Gr
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELKKNVNA    $BNVNA           Availability Gr
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Pces/Bag,Bag/Unt,umRT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0040    BZAIC3           Company Number
     C                     Z-ADDWL0041    BZHGCD           Item Code
      * Establish starting position
     C           KRSSG     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WL0042           Description Lin
     C                     MOVELBZADCD    WL0043           U/M - Primary
     C                     Z-ADDBZAIWG    WL0044           Unit Weight
     C                     MOVELBZPCCT    WL0045           Piece Count Ite
     C                     Z-ADDBZBDNB    WL0046           Pieces Per Bag
     C                     Z-ADDBZBJNB    WL0047           Bags Per Unit
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Sold 100% Frozen  RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WAHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0048    WAAIC3           Company Number
     C                     Z-ADDWL0049    WAHGCD           Item Code
      * Establish starting position
     C           KRSSH     CHAIN@BZREZG              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0050           Sold 100% Froze
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAS4ST    WL0050           Sold 100% Froze
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0051    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSI     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0052           Lot Tracking Fl
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBVHST    WL0052           Lot Tracking Fl
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv Item Loc Qty Tot  RT - Item Lot Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0056           Quantity Loc On
      * Declare restrictor key work fields
     C           *LIKE     DEFN L5AIC3    WQSJ01           Company Number
     C           *LIKE     DEFN L5HGCD    WQSJ02           Item Code
     C           *LIKE     DEFN L5AJCD    WQSJ03           Warehouse Code
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Company Number
     C                     KFLD           WQSJ02           Item Code
     C                     KFLD           WQSJ03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0053    WQSJ01           Company Number
     C                     Z-ADDWL0054    WQSJ02           Item Code
     C                     MOVELWL0055    WQSJ03           Warehouse Code
      * Establish starting position
     C           KRSSJ     SETLL@L5CPSV                    *
     C           KRSSJ     READE@L5CPSV                  90*
      * Data record not found
     C   90                MOVEL'USR2634' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  L5J2QT    WL0056           Quantity Loc On
     C           KRSSJ     READE@L5CPSV                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv On-Hand Base PA   RT - Item Balance Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0060           On Hand U/M1 Su
      * Declare restrictor key work fields
     C           *LIKE     DEFN B1AIC3    WQSK01           Company Number
     C           *LIKE     DEFN B1HGCD    WQSK02           Item Code
     C           *LIKE     DEFN B1AJCD    WQSK03           Warehouse Code
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Company Number
     C                     KFLD           WQSK02           Item Code
     C                     KFLD           WQSK03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0057    WQSK01           Company Number
     C                     Z-ADDWL0058    WQSK02           Item Code
     C                     MOVELWL0059    WQSK03           Warehouse Code
      * Establish starting position
     C           KRSSK     SETLL@B1REJ0                    *
     C           KRSSK     READE@B1REJ0                  90*
      * Data record not found
     C   90                MOVEL'USR0330' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Production Date EQ JOB.*Job date
     C           B1ELDT    IFEQ ##JDT                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  B1ARQT    WL0060           On Hand U/M1 Su
     C                     END                             *FI
     C           KRSSK     READE@B1REJ0                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD0         WL0065           Weight Schedule
     C                     Z-ADD0         WL0066           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSL01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSL02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSL03           Warehouse Code
      * Define keylist
     C           KPSSL     KLIST
     C                     KFLD           WQSL01           Company Number
     C                     KFLD           WQSL02           Item Code
     C                     KFLD           WQSL03           Warehouse Code
     C                     KFLD           OMAODT           Scheduled Ship
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WQSL01           Company Number
     C                     KFLD           WQSL02           Item Code
     C                     KFLD           WQSL03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0061    WQSL01           Company Number
     C                     Z-ADDWL0062    WQSL02           Item Code
     C                     MOVELWL0063    WQSL03           Warehouse Code
     C                     Z-ADDWL0064    OMAODT           Scheduled Ship
      * Establish starting position
     C           KPSSL     SETLL@BGWKKG                    *
     C           KRSSL     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0068           Company Number
     C                     Z-ADDOMC4NB    WL0069           Order Number
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0070    WUGWST    P      Header Status
     C                     MOVELWL0071    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Status Flag 10 Y/N is Yes
     C           WL0067    IFEQ 'Y'                        *IF
      * FP1054 if Yes, accum Scheduled qty & wgt as it was before
     C                     ADD  OMAUWG    WL0065           Weight Schedule
     C                     ADD  OMCCQT    WL0066           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 if no, accum Ordered & qty & wgt
     C                     ADD  OMD0WG    WL0065           Weight Schedule
     C                     ADD  OMAVQT    WL0066           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSL     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0068    BEAIC3           Company Number
     C                     Z-ADDWL0069    BEC4NB           Order Number
      * Establish starting position
     C           KRSSM     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    WL0070           Header Status
     C                     MOVELBEOBST    WL0071           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Sched Shipments   RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD0         WL0076           Weight Schedule
     C                     Z-ADD0         WL0077           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSN01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSN02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSN03           Warehouse Code
     C           *LIKE     DEFN OMAODT    WQSN04           Scheduled Ship
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WQSN01           Company Number
     C                     KFLD           WQSN02           Item Code
     C                     KFLD           WQSN03           Warehouse Code
     C                     KFLD           WQSN04           Scheduled Ship
      * Setup key
     C                     Z-ADDWL0072    WQSN01           Company Number
     C                     Z-ADDWL0073    WQSN02           Item Code
     C                     MOVELWL0074    WQSN03           Warehouse Code
     C                     Z-ADDWL0075    WQSN04           Scheduled Ship
      * Establish starting position
     C           KRSSN     SETLL@BGWKKG                    *
     C           KRSSN     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0068           Company Number
     C                     Z-ADDOMC4NB    WL0069           Order Number
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0070    WUGWST    P      Header Status
     C                     MOVELWL0071    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Ord/Sch Sts USR is Scheduled
     C           WL0078    IFEQ 'S'                        *IF
     C                     ADD  OMAUWG    WL0076           Weight Schedule
     C                     ADD  OMCCQT    WL0077           Quantity Schedu
     C                     ELSE
      * CASE: PAR.Ord/Sch Sts USR is Ordered
     C           WL0078    IFEQ 'O'                        *IF
     C                     ADD  OMD0WG    WL0076           Weight Schedule
     C                     ADD  OMAVQT    WL0077           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSN     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * Rtv Item Descriptions  RT - OM Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           BYHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0079    BYHGCD           Item Code
      * Establish starting position
     C           KRSSO     CHAIN@BYREA1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1160' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0080           Description Lin
     C                     MOVEL*BLANK    WL0081           Description Lin
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBYAVNA    WL0080           Description Lin
     C                     MOVELBYAWNA    WL0081           Description Lin
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Rtv Item Typ/Grp/Cls  RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD$FAIC3    BZAIC3           Company Number
     C                     Z-ADD$FHGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSP     CHAIN@BZREJU              90    *
      * Data record not found
     C   90                MOVEL'USR0326' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBZRINB    YL0057           Item Structure
     C                     Z-ADDBZRHNB    YL0058           Item Structure
     C                     Z-ADDBZRGNB    YL0059           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * Rtv Base Avail PA Rpt RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0082    BZAIC3           Company Number
     C                     Z-ADDWL0083    BZHGCD           Item Code
      * Establish starting position
     C           KRSSQ     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0084           Item Type Code
     C                     MOVEL*BLANK    WL0085           Base/Conv/Loss
     C                     MOVEL*BLANK    WL0086           PA Base Avail R
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZN0CD    WL0084           Item Type Code
     C                     MOVELBZQZCD    WL0085           Base/Conv/Loss
     C                     MOVELBZP4ST    WL0086           PA Base Avail R
     C                     ENDIF
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * Rtv Prd Day Sts       RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           AFAIC3           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0087    AFAIC3           Company Number
     C                     Z-ADDWL0088    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSSR     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0089           Production Day
     C                     GOTO SREXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAFWAST    WL0089           Production Day
     C                     ENDIF
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * Rtv Std Production    RT - PS Std Production  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCAIC3    WQSS01           Company Number
     C           *LIKE     DEFN WCHGCD    WQSS02           Item Code
     C           *LIKE     DEFN WCAJCD    WQSS03           Warehouse Code
      * Define keylist
     C           KPSSS     KLIST
     C                     KFLD           WQSS01           Company Number
     C                     KFLD           WQSS02           Item Code
     C                     KFLD           WQSS03           Warehouse Code
     C                     KFLD           WCAUDT           Effective Date
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           WQSS01           Company Number
     C                     KFLD           WQSS02           Item Code
     C                     KFLD           WQSS03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0090    WQSS01           Company Number
     C                     Z-ADDWL0091    WQSS02           Item Code
     C                     MOVELWL0092    WQSS03           Warehouse Code
     C                     Z-ADDWL0093    WCAUDT           Effective Date
      * Establish starting position
     C           KPSSS     SETLL@AFCPUA                    *
     C           KRSSS     READE@AFCPUA                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3345' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0094           PS Qty Standard
     C                     GOTO SSEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWCW0NX    WL0094           PS Qty Standard
     C                     GOTO SSEXIT                     *QUIT
     C           KRSSS     READE@AFCPUA                  90*
     C                     ENDDO
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSST     KLIST
     C                     KFLD           I8AIC3           Company Number
     C                     KFLD           I8V5ST           Production Type
     C                     KFLD           I8ELDT           Production Date
     C                     KFLD           I8HGCD           Item Code
     C                     KFLD           I8AJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0095    I8AIC3           Company Number
     C                     MOVELWL0096    I8V5ST           Production Type
     C                     Z-ADDWL0097    I8ELDT           Production Date
     C                     Z-ADDWL0098    I8HGCD           Item Code
     C                     MOVELWL0099    I8AJCD           Warehouse Code
      * Establish starting position
     C           KRSST     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0100           PS Weight Stand
     C                     Z-ADD*ZERO     WL0101           PS Pieces Stand
     C                     GOTO STEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDI8DXWG    WL0100           PS Weight Stand
     C                     Z-ADDI8B2NB    WL0101           PS Pieces Stand
     C                     ENDIF
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Move 0 decimal to 2 decimal
      *================================================================
     C                     Z-ADD$DLEQT    $DU5NX           Qty On-Hand 7.2
     C                     Z-ADD$DLIQT    $DVMNX           Qty Sched Prod
     C                     Z-ADD$DLKQT    $DU6NX           Qty Sched Ord 1
     C                     Z-ADD$DLGQT    $DVNNX           Qty EOD Inv 1 7
     C                     Z-ADD$DLLQT    $DVENX           Qty Sched Ord 2
     C                     Z-ADD$DLVQT    $DVFNX           Qty Sched Ord 3
     C                     Z-ADD$DMOQT    $DVGNX           Qty Sched Ord 4
     C                     Z-ADD$DMPQT    $DVHNX           Qty Sched Ord 5
     C                     Z-ADD$DMQQT    $DVINX           Qty Sched Ord 6
     C                     Z-ADD$DMRQT    $DVJNX           Qty Sched Ord 7
     C                     Z-ADD$DMUQT    $DVKNX           Qty Sched Ord 8
     C                     Z-ADD$DMVQT    $DVLNX           Qty Sched Ord 9
     C                     Z-ADD$DMWQT    $DU7NX           Qty Sched Ord 1
     C                     Z-ADD$DMXQT    $DU8NX           Qty Sched Ord 1
     C                     Z-ADD$DMYQT    $DU9NX           Qty Sched Ord 1
     C                     Z-ADD$DMZQT    $DVANX           Qty Sched Ord 1
     C                     Z-ADD$DM0QT    $DVBNX           Qty Sched Ord 1
     C                     Z-ADD$DM6QT    $DVCNX           Qty Sched Ord 1
     C                     Z-ADD$DM7QT    $DVDNX           Qty Sched Ord 1
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Base Avail        PO
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0103  70       USR Day 1
     C                     Z-ADD*ZERO     WN0104  70       USR Day 2
     C                     Z-ADD*ZERO     WN0105  70       USR Day 3
     C                     Z-ADD*ZERO     WN0106  70       USR Day 4
     C                     Z-ADD*ZERO     WN0107  70       USR Day 5
     C                     Z-ADD*ZERO     WN0108  70       USR Day 6
     C                     Z-ADD*ZERO     WN0109  70       USR Day 7
     C                     Z-ADD*ZERO     WN0110  70       USR Day 8
     C                     Z-ADD*ZERO     WN0111  70       USR Day 9
     C                     Z-ADD*ZERO     WN0112  70       USR Day 10
     C                     Z-ADD*ZERO     WN0113  70       USR Day 11
     C                     Z-ADD*ZERO     WN0114  70       USR Day 12
     C                     Z-ADD*ZERO     WN0115  70       USR Day 13
     C                     Z-ADD*ZERO     WN0116  70       USR Day 14
     C                     Z-ADD*ZERO     WN0117  70       USR Day 15
     C                     Z-ADD*ZERO     WN0118  70       USR Day 16
     C                     MOVEL*BLANK    WN0119  8        Generic Heading
     C                     MOVEL*BLANK    WN0120  8        Generic Heading
     C                     MOVEL*BLANK    WN0121  8        Generic Heading
     C                     MOVEL*BLANK    WN0122  8        Generic Heading
     C                     MOVEL*BLANK    WN0123  8        Generic Heading
     C                     MOVEL*BLANK    WN0124  8        Generic Heading
     C                     MOVEL*BLANK    WN0125  8        Generic Heading
     C                     MOVEL*BLANK    WN0126  8        Generic Heading
     C                     MOVEL*BLANK    WN0127  8        Generic Heading
     C                     MOVEL*BLANK    WN0128  8        Generic Heading
     C                     MOVEL*BLANK    WN0129  8        Generic Heading
     C                     MOVEL*BLANK    WN0130  8        Generic Heading
     C                     MOVEL*BLANK    WN0131  8        Generic Heading
     C                     MOVEL*BLANK    WN0132  8        Generic Heading
     C                     MOVEL*BLANK    WN0133  2        Display Line Fl
     C                     MOVEL*BLANK    WN0134  8        Generic Heading
     C                     MOVEL*BLANK    WN0135  8        Generic Heading
     C                     Z-ADD*ZERO     WN0136  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0137  81       Grand Total Sch
     C                     Z-ADD*ZERO     WN0138 112       Total Alloc/Ord
     C                     Z-ADD*ZERO     WN0139 112       Grand Tot Alloc
      *
      * Prt Base Avail        PO: Mainline
     C                     EXSR B0MAIN
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * MOVE: Total Vs. Day Values & Accumulate Totals
      *================================================================
      * Total-day 2
      * CASE: PAR.Generic Heading 2 is Equal Total
     C           WN0120    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FLLQT           Qty Sched Ord 2
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDNNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FLLQT    WN0136           Total Sched Shi
     C                     ADD  $FLLQT    WN0137           Grand Total Sch
     C                     ADD  $FDNNY    WN0138           Total Alloc/Ord
     C                     ADD  $FDNNY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 3
      * CASE: PAR.Generic Heading 3 is Equal Total
     C           WN0121    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FLVQT           Qty Sched Ord 3
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDONY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FLVQT    WN0136           Total Sched Shi
     C                     ADD  $FLVQT    WN0137           Grand Total Sch
     C                     ADD  $FDONY    WN0138           Total Alloc/Ord
     C                     ADD  $FDONY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 4
      * CASE: PAR.Generic Heading 4 is Equal Total
     C           WN0122    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FMOQT           Qty Sched Ord 4
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDPNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FMOQT    WN0136           Total Sched Shi
     C                     ADD  $FMOQT    WN0137           Grand Total Sch
     C                     ADD  $FDPNY    WN0138           Total Alloc/Ord
     C                     ADD  $FDPNY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 5
      * CASE: PAR.Generic Heading 5 is Equal Total
     C           WN0123    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FMPQT           Qty Sched Ord 5
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDQNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FMPQT    WN0136           Total Sched Shi
     C                     ADD  $FMPQT    WN0137           Grand Total Sch
     C                     ADD  $FDQNY    WN0138           Total Alloc/Ord
     C                     ADD  $FDQNY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 6
      * CASE: PAR.Generic Heading 6 is Equal Total
     C           WN0124    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FMQQT           Qty Sched Ord 6
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDRNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FMQQT    WN0136           Total Sched Shi
     C                     ADD  $FMQQT    WN0137           Grand Total Sch
     C                     ADD  $FDRNY    WN0138           Total Alloc/Ord
     C                     ADD  $FDRNY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 7
      * CASE: PAR.Generic Heading 7 is Equal Total
     C           WN0125    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FMRQT           Qty Sched Ord 7
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDSNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FMRQT    WN0136           Total Sched Shi
     C                     ADD  $FMRQT    WN0137           Grand Total Sch
     C                     ADD  $FDSNY    WN0138           Total Alloc/Ord
     C                     ADD  $FDSNY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 8
      * CASE: PAR.Generic Heading 8 is Equal Total
     C           WN0126    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FMUQT           Qty Sched Ord 8
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDTNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FMUQT    WN0136           Total Sched Shi
     C                     ADD  $FMUQT    WN0137           Grand Total Sch
     C                     ADD  $FDTNY    WN0138           Total Alloc/Ord
     C                     ADD  $FDTNY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 9
      * CASE: PAR.Generic Heading 9 is Equal Total
     C           WN0127    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FMVQT           Qty Sched Ord 9
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDUNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FMVQT    WN0136           Total Sched Shi
     C                     ADD  $FMVQT    WN0137           Grand Total Sch
     C                     ADD  $FDUNY    WN0138           Total Alloc/Ord
     C                     ADD  $FDUNY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 10
      * CASE: PAR.Generic Heading 10 is Equal Total
     C           WN0128    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FMWQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDVNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FMWQT    WN0136           Total Sched Shi
     C                     ADD  $FMWQT    WN0137           Grand Total Sch
     C                     ADD  $FDVNY    WN0138           Total Alloc/Ord
     C                     ADD  $FDVNY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 11
      * CASE: PAR.Generic Heading 11 is Equal Total
     C           WN0129    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FMXQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDWNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FMXQT    WN0136           Total Sched Shi
     C                     ADD  $FMXQT    WN0137           Grand Total Sch
     C                     ADD  $FDWNY    WN0138           Total Alloc/Ord
     C                     ADD  $FDWNY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 12
      * CASE: PAR.Generic Heading 12 is Equal Total
     C           WN0130    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FMYQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDXNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FMYQT    WN0136           Total Sched Shi
     C                     ADD  $FMYQT    WN0137           Grand Total Sch
     C                     ADD  $FDXNY    WN0138           Total Alloc/Ord
     C                     ADD  $FDXNY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 13
      * CASE: PAR.Generic Heading 13 is Equal Total
     C           WN0131    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FMZQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDYNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FMZQT    WN0136           Total Sched Shi
     C                     ADD  $FMZQT    WN0137           Grand Total Sch
     C                     ADD  $FDYNY    WN0138           Total Alloc/Ord
     C                     ADD  $FDYNY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 14
      * CASE: PAR.Generic Heading 14 is Equal Total
     C           WN0132    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FM0QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FDZNY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FM0QT    WN0136           Total Sched Shi
     C                     ADD  $FM0QT    WN0137           Grand Total Sch
     C                     ADD  $FDZNY    WN0138           Total Alloc/Ord
     C                     ADD  $FDZNY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 15
      * CASE: PAR.Generic Heading 15 is Equal Total
     C           WN0134    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FM6QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FD0NY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FM6QT    WN0136           Total Sched Shi
     C                     ADD  $FM6QT    WN0137           Grand Total Sch
     C                     ADD  $FD0NY    WN0138           Total Alloc/Ord
     C                     ADD  $FD0NY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      * Total-day 16
      * CASE: PAR.Generic Heading 16 is Equal Total
     C           WN0135    IFEQ 'Total'                    *IF
     C                     Z-ADDWN0136    $FM7QT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     WN0136           Total Sched Shi
     C                     Z-ADDWN0138    $FD1NY           Quantity 7.0 US
     C                     Z-ADD*ZERO     WN0138           Total Alloc/Ord
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $FM7QT    WN0136           Total Sched Shi
     C                     ADD  $FM7QT    WN0137           Grand Total Sch
     C                     ADD  $FD1NY    WN0138           Total Alloc/Ord
     C                     ADD  $FD1NY    WN0139           Grand Tot Alloc
     C                     END                             *FI
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * CONV: Calculate Scheduled Ship Weight
      *================================================================
     C           $FLEQT    MULT YL0063    $FLGWG           Wgt On-Hand USR
     C           $FLIQT    MULT YL0063    $FLHWG           Wgt Sched Prod
     C           $FLGQT    MULT YL0063    $FLIWG           Wgt EOD Inv 1 U
     C           $FLKQT    MULT YL0063    $FK0WG           Wgt Sched Ord 1
     C           $FLLQT    MULT YL0063    $FK8WG           Wgt Sched Ord 2
     C           $FLVQT    MULT YL0063    $FK9WG           Wgt Sched Ord 3
     C           $FMOQT    MULT YL0063    $FLAWG           Wgt Sched Ord 4
     C           $FMPQT    MULT YL0063    $FLBWG           Wgt Sched Ord 5
     C           $FMQQT    MULT YL0063    $FLCWG           Wgt Sched Ord 6
     C           $FMRQT    MULT YL0063    $FLDWG           Wgt Sched Ord 7
     C           $FMUQT    MULT YL0063    $FLEWG           Wgt Sched Ord 8
     C           $FMVQT    MULT YL0063    $FLFWG           Wgt Sched Ord 9
     C           $FMWQT    MULT YL0063    $FK1WG           Wgt Sched Ord 1
     C           $FMXQT    MULT YL0063    $FK2WG           Wgt Sched Ord 1
     C           $FMYQT    MULT YL0063    $FK3WG           Wgt Sched Ord 1
     C           $FMZQT    MULT YL0063    $FK4WG           Wgt Sched Ord 1
     C           $FM0QT    MULT YL0063    $FK5WG           Wgt Sched Ord 1
     C           $FM6QT    MULT YL0063    $FK6WG           Wgt Sched Ord 1
     C           $FM7QT    MULT YL0063    $FK7WG           Wgt Sched Ord 1
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * CONV: Calculate Sch Freezer Weight
      *================================================================
     C           $FDMNY    MULT YL0063    $FOCWG           Wgt For Freezer
     C           $FDNNY    MULT YL0063    $FOKWG           Wgt For Freezer
     C           $FDONY    MULT YL0063    $FOLWG           Wgt For Freezer
     C           $FDPNY    MULT YL0063    $FOMWG           Wgt For Freezer
     C           $FDQNY    MULT YL0063    $FONWG           Wgt For Freezer
     C           $FDRNY    MULT YL0063    $FOOWG           Wgt For Freezer
     C           $FDSNY    MULT YL0063    $FOPWG           Wgt For Freezer
     C           $FDTNY    MULT YL0063    $FOQWG           Wgt For Freezer
     C           $FDUNY    MULT YL0063    $FORWG           Wgt For Freezer
     C           $FDVNY    MULT YL0063    $FODWG           Wgt For Freezer
     C           $FDWNY    MULT YL0063    $FOEWG           Wgt For Freezer
     C           $FDXNY    MULT YL0063    $FOFWG           Wgt For Freezer
     C           $FDYNY    MULT YL0063    $FOGWG           Wgt For Freezer
     C           $FDZNY    MULT YL0063    $FOHWG           Wgt For Freezer
     C           $FD0NY    MULT YL0063    $FOIWG           Wgt For Freezer
     C           $FD1NY    MULT YL0063    $FOJWG           Wgt For Freezer
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * CONV: Calculate Scheduled Ship Weight
      *================================================================
     C           $FLEQT    MULT $FAIWG    $FLGWG           Wgt On-Hand USR
     C           $FLIQT    MULT $FAIWG    $FLHWG           Wgt Sched Prod
     C           $FLGQT    MULT $FAIWG    $FLIWG           Wgt EOD Inv 1 U
     C           $FLKQT    MULT $FAIWG    $FK0WG           Wgt Sched Ord 1
     C           $FLLQT    MULT $FAIWG    $FK8WG           Wgt Sched Ord 2
     C           $FLVQT    MULT $FAIWG    $FK9WG           Wgt Sched Ord 3
     C           $FMOQT    MULT $FAIWG    $FLAWG           Wgt Sched Ord 4
     C           $FMPQT    MULT $FAIWG    $FLBWG           Wgt Sched Ord 5
     C           $FMQQT    MULT $FAIWG    $FLCWG           Wgt Sched Ord 6
     C           $FMRQT    MULT $FAIWG    $FLDWG           Wgt Sched Ord 7
     C           $FMUQT    MULT $FAIWG    $FLEWG           Wgt Sched Ord 8
     C           $FMVQT    MULT $FAIWG    $FLFWG           Wgt Sched Ord 9
     C           $FMWQT    MULT $FAIWG    $FK1WG           Wgt Sched Ord 1
     C           $FMXQT    MULT $FAIWG    $FK2WG           Wgt Sched Ord 1
     C           $FMYQT    MULT $FAIWG    $FK3WG           Wgt Sched Ord 1
     C           $FMZQT    MULT $FAIWG    $FK4WG           Wgt Sched Ord 1
     C           $FM0QT    MULT $FAIWG    $FK5WG           Wgt Sched Ord 1
     C           $FM6QT    MULT $FAIWG    $FK6WG           Wgt Sched Ord 1
     C           $FM7QT    MULT $FAIWG    $FK7WG           Wgt Sched Ord 1
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * CONV: Calculate Sch Freezer Weight
      *================================================================
     C           $FDMNY    MULT $FAIWG    $FOCWG           Wgt For Freezer
     C           $FDNNY    MULT $FAIWG    $FOKWG           Wgt For Freezer
     C           $FDONY    MULT $FAIWG    $FOLWG           Wgt For Freezer
     C           $FDPNY    MULT $FAIWG    $FOMWG           Wgt For Freezer
     C           $FDQNY    MULT $FAIWG    $FONWG           Wgt For Freezer
     C           $FDRNY    MULT $FAIWG    $FOOWG           Wgt For Freezer
     C           $FDSNY    MULT $FAIWG    $FOPWG           Wgt For Freezer
     C           $FDTNY    MULT $FAIWG    $FOQWG           Wgt For Freezer
     C           $FDUNY    MULT $FAIWG    $FORWG           Wgt For Freezer
     C           $FDVNY    MULT $FAIWG    $FODWG           Wgt For Freezer
     C           $FDWNY    MULT $FAIWG    $FOEWG           Wgt For Freezer
     C           $FDXNY    MULT $FAIWG    $FOFWG           Wgt For Freezer
     C           $FDYNY    MULT $FAIWG    $FOGWG           Wgt For Freezer
     C           $FDZNY    MULT $FAIWG    $FOHWG           Wgt For Freezer
     C           $FD0NY    MULT $FAIWG    $FOIWG           Wgt For Freezer
     C           $FD1NY    MULT $FAIWG    $FOJWG           Wgt For Freezer
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         UHSUBR    BEGSR
      *================================================================
      * CONV: Sch Ship Qty to Base Qty Using Pieces
      *================================================================
      * ***------------------  Base Avail  ---------------------------***
     C           $FLGWG    DIV  YL0029    $FU5NX    H      Qty On-Hand 7.2
     C           $FLIWG    DIV  YL0029    $FVNNX    H      Qty EOD Inv 1 7
     C           $FLHWG    DIV  YL0029    $FVMNX    H      Qty Sched Prod
     C           $FK0WG    DIV  YL0029    $FU6NX    H      Qty Sched Ord 1
     C           $FK8WG    DIV  YL0029    $FVENX    H      Qty Sched Ord 2
     C           $FK9WG    DIV  YL0029    $FVFNX    H      Qty Sched Ord 3
     C           $FLAWG    DIV  YL0029    $FVGNX    H      Qty Sched Ord 4
     C           $FLBWG    DIV  YL0029    $FVHNX    H      Qty Sched Ord 5
     C           $FLCWG    DIV  YL0029    $FVINX    H      Qty Sched Ord 6
     C           $FLDWG    DIV  YL0029    $FVJNX    H      Qty Sched Ord 7
     C           $FLEWG    DIV  YL0029    $FVKNX    H      Qty Sched Ord 8
     C           $FLFWG    DIV  YL0029    $FVLNX    H      Qty Sched Ord 9
     C           $FK1WG    DIV  YL0029    $FU7NX    H      Qty Sched Ord 1
     C           $FK2WG    DIV  YL0029    $FU8NX    H      Qty Sched Ord 1
     C           $FK3WG    DIV  YL0029    $FU9NX    H      Qty Sched Ord 1
     C           $FK4WG    DIV  YL0029    $FVANX    H      Qty Sched Ord 1
     C           $FK5WG    DIV  YL0029    $FVBNX    H      Qty Sched Ord 1
     C           $FK6WG    DIV  YL0029    $FVCNX    H      Qty Sched Ord 1
     C           $FK7WG    DIV  YL0029    $FVDNX    H      Qty Sched Ord 1
      *================================================================
     CSR         UHEXIT    ENDSR
      /EJECT
     CSR         UISUBR    BEGSR
      *================================================================
      * CONV: Sch Freezer Qty to Base Qty Using Pieces
      *================================================================
      * --------------------- BASE AVAILABILITY ----------------------
     C           $FOCWG    DIV  YL0029    $FL8NY    H      Qty For Freezer
     C           $FOKWG    DIV  YL0029    $FL9NY    H      Qty For Freezer
     C           $FOLWG    DIV  YL0029    $FMANY    H      Qty For Freezer
     C           $FOMWG    DIV  YL0029    $FMBNY    H      Qty For Freezer
     C           $FONWG    DIV  YL0029    $FMCNY    H      Qty For Freezer
     C           $FOOWG    DIV  YL0029    $FMDNY    H      Qty For Freezer
     C           $FOPWG    DIV  YL0029    $FMENY    H      Qty For Freezer
     C           $FOQWG    DIV  YL0029    $FMFNY    H      Qty For Freezer
     C           $FORWG    DIV  YL0029    $FMGNY    H      Qty For Freezer
     C           $FODWG    DIV  YL0029    $FMHNY    H      Qty For Freezer
     C           $FOEWG    DIV  YL0029    $FMINY    H      Qty For Freezer
     C           $FOFWG    DIV  YL0029    $FMJNY    H      Qty For Freezer
     C           $FOGWG    DIV  YL0029    $FMKNY    H      Qty For Freezer
     C           $FOHWG    DIV  YL0029    $FMLNY    H      Qty For Freezer
     C           $FOIWG    DIV  YL0029    $FMMNY    H      Qty For Freezer
     C           $FOJWG    DIV  YL0029    $FMNNY    H      Qty For Freezer
      *================================================================
     CSR         UIEXIT    ENDSR
      /EJECT
     CSR         UJSUBR    BEGSR
      *================================================================
      * CONV: Sch Ship Qty to Base Qty Using Unit Weight
      *================================================================
      * ***------------------  Base Avail  ---------------------------***
     C           $FLGWG    DIV  $DAIWG    $FU5NX    H      Qty On-Hand 7.2
     C           $FLIWG    DIV  $DAIWG    $FVNNX    H      Qty EOD Inv 1 7
     C           $FLHWG    DIV  $DAIWG    $FVMNX    H      Qty Sched Prod
      * Comp: qty sched ord 1 7.2
      * CUR.Qty Sched Ord 1 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 1 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FK0WG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FU6NX           Qty Sched Ord 1
      * Comp: qty sched ord 2 7.2
      * CUR.Qty Sched Ord 2 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 2 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FK8WG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FVENX           Qty Sched Ord 2
      * Comp: qty sched ord 3 7.2
      * CUR.Qty Sched Ord 3 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 3 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FK9WG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FVFNX           Qty Sched Ord 3
      * Comp: qty sched ord 4 7.2
      * CUR.Qty Sched Ord 4 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 4 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FLAWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FVGNX           Qty Sched Ord 4
      * Comp: qty sched ord 5 7.2
      * CUR.Qty Sched Ord 5 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 5 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FLBWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FVHNX           Qty Sched Ord 5
      * Comp: qty sched ord 6 7.2
      * CUR.Qty Sched Ord 6 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 6 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FLCWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FVINX           Qty Sched Ord 6
      * Comp: qty sched ord 7 7.2
      * CUR.Qty Sched Ord 7 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 7 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FLDWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FVJNX           Qty Sched Ord 7
      * Comp: qty sched ord 8 7.2
      * CUR.Qty Sched Ord 8 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 8 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FLEWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FVKNX           Qty Sched Ord 8
      * Comp: qty sched ord 9 7.2
      * CUR.Qty Sched Ord 9 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 9 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FLFWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FVLNX           Qty Sched Ord 9
      * Comp: qty sched ord 107.2
      * CUR.Qty Sched Ord 10 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 10 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FK1WG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FU7NX           Qty Sched Ord 1
      * Comp: qty sched ord 117.2
      * CUR.Qty Sched Ord 11 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 11 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FK2WG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FU8NX           Qty Sched Ord 1
      * Comp: qty sched ord 127.2
      * CUR.Qty Sched Ord 12 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 12 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FK3WG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FU9NX           Qty Sched Ord 1
      * Comp: qty sched ord 137.2
      * CUR.Qty Sched Ord 13 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 13 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FK4WG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FVANX           Qty Sched Ord 1
      * Comp: qty sched ord 147.2
      * CUR.Qty Sched Ord 14 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 14 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FK5WG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FVBNX           Qty Sched Ord 1
      * Comp: qty sched ord 157.2
      * CUR.Qty Sched Ord 15 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 15 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FK6WG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FVCNX           Qty Sched Ord 1
      * Comp: qty sched ord 167.2
      * CUR.Qty Sched Ord 16 7.2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt Sched Ord 16 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FK7WG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FVDNX           Qty Sched Ord 1
      *================================================================
     CSR         UJEXIT    ENDSR
      /EJECT
     CSR         UKSUBR    BEGSR
      *================================================================
      * CONV: Sch Freezer Qty to Base Qty Using Unit Weight
      *================================================================
      * ---------------------  BASE AVAILABILITY ------------------------
      * Comp: Qty f/Freezer 1
      * CUR.Qty For Freezer 1 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 1 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOCWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FL8NY           Qty For Freezer
      * Comp: Qty f/Freezer 2
      * CUR.Qty For Freezer 2 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 2 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOKWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FL9NY           Qty For Freezer
      * Comp: Qty f/Freezer 3
      * CUR.Qty For Freezer 3 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 3 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOLWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMANY           Qty For Freezer
      * Comp: Qty f/Freezer 4
      * CUR.Qty For Freezer 4 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 4 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOMWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMBNY           Qty For Freezer
      * Comp: Qty f/Freezer 5
      * CUR.Qty For Freezer 5 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 5 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FONWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMCNY           Qty For Freezer
      * Comp: Qty f/Freezer 6
      * CUR.Qty For Freezer 6 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 6 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOOWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMDNY           Qty For Freezer
      * Comp: Qty f/Freezer 7
      * CUR.Qty For Freezer 7 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 7 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOPWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMENY           Qty For Freezer
      * Comp: Qty f/Freezer 8
      * CUR.Qty For Freezer 8 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 8 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOQWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMFNY           Qty For Freezer
      * Comp: Qty f/Freezer 9
      * CUR.Qty For Freezer 9 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 9 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FORWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMGNY           Qty For Freezer
      * Comp: Qty f/Freezer 10
      * CUR.Qty For Freezer 10 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 10 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FODWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMHNY           Qty For Freezer
      * Comp: Qty f/Freezer 11
      * CUR.Qty For Freezer 11 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 11 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOEWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMINY           Qty For Freezer
      * Comp: Qty f/Freezer 12
      * CUR.Qty For Freezer 12 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 12 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOFWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMJNY           Qty For Freezer
      * Comp: Qty f/Freezer 13
      * CUR.Qty For Freezer 13 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 13 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOGWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMKNY           Qty For Freezer
      * Comp: Qty f/Freezer 14
      * CUR.Qty For Freezer 14 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 14 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOHWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMLNY           Qty For Freezer
      * Comp: Qty f/Freezer 15
      * CUR.Qty For Freezer 15 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 15 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOIWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMMNY           Qty For Freezer
      * Comp: Qty f/Freezer 16
      * CUR.Qty For Freezer 16 USR =
      *    *COMPUTE (x1 / x2 / x3)
      * x1    : CUR.Wgt For Freezer 16 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : LCL.@Percent 6/5
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $FOJWG    DIV  YL0062    W0WB01    H      *Synon (15,5) w
     C           W0WB01    DIV  $DAIWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $FMNNY           Qty For Freezer
      *================================================================
     CSR         UKEXIT    ENDSR
      /EJECT
     CSR         ULSUBR    BEGSR
      *================================================================
      * Std Production using Standard Production file
      *================================================================
      * **********  Day 1  **********
      * Day 1
      * CASE: PAR.USR Day 1 is GT Zero
     C           YL0030    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 1 *DAY OF WEEK
     C           YL0030    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 1 + CON.-1 *DAYS
     C           YL0030    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * CASE: LCL.Production Date LT JOB.*Job date
     C           YL0069    IFLT ##JDT                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GVONX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0149  1        Production Type
     C                     Z-ADD*ZERO     WN0150  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0151  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0149           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0149           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0149    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0150           PS Weight Stand
     C                     Z-ADDWL0101    WN0151           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0151    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVONX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0150    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVONX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 2  **********
      * Day 2
      * CASE: PAR.USR Day 2 is GT Zero
     C           YL0031    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 2 *DAY OF WEEK
     C           YL0031    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 2 + CON.-1 *DAYS
     C           YL0031    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GVPNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0152  1        Production Type
     C                     Z-ADD*ZERO     WN0153  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0154  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0152           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0152           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0152    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0153           PS Weight Stand
     C                     Z-ADDWL0101    WN0154           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0154    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVPNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0153    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVPNX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 3  **********
      * Day 3
      * CASE: PAR.USR Day 3 is GT Zero
     C           YL0032    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 3 *DAY OF WEEK
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 3 + CON.-1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GVQNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0155  1        Production Type
     C                     Z-ADD*ZERO     WN0156  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0157  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0155           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0155           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0155    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0156           PS Weight Stand
     C                     Z-ADDWL0101    WN0157           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0157    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVQNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0156    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVQNX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 4  **********
      * Day 4
      * CASE: PAR.USR Day 4 is GT Zero
     C           YL0033    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 4 *DAY OF WEEK
     C           YL0033    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 4 + CON.-1 *DAYS
     C           YL0033    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GVRNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0158  1        Production Type
     C                     Z-ADD*ZERO     WN0159  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0160  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0158           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0158           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0158    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0159           PS Weight Stand
     C                     Z-ADDWL0101    WN0160           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0160    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVRNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0159    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVRNX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 5  **********
      * Day 5
      * CASE: PAR.USR Day 5 is GT Zero
     C           YL0034    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 5 *DAY OF WEEK
     C           YL0034    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 5 + CON.-1 *DAYS
     C           YL0034    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GVSNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0161  1        Production Type
     C                     Z-ADD*ZERO     WN0162  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0163  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0161           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0161           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0161    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0162           PS Weight Stand
     C                     Z-ADDWL0101    WN0163           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0163    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVSNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0162    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVSNX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 6  **********
      * Day 6
      * CASE: PAR.USR Day 6 is GT Zero
     C           YL0035    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 6 *DAY OF WEEK
     C           YL0035    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 6 + CON.-1 *DAYS
     C           YL0035    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GVTNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0164  1        Production Type
     C                     Z-ADD*ZERO     WN0165  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0166  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0164           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0164           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0164    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0165           PS Weight Stand
     C                     Z-ADDWL0101    WN0166           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0166    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVTNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0165    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVTNX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 7  **********
      * Day 7
      * CASE: PAR.USR Day 7 is GT Zero
     C           YL0036    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 7 *DAY OF WEEK
     C           YL0036    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 7 + CON.-1 *DAYS
     C           YL0036    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GVUNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0167  1        Production Type
     C                     Z-ADD*ZERO     WN0168  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0169  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0167           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0167           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0167    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0168           PS Weight Stand
     C                     Z-ADDWL0101    WN0169           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0169    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVUNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0168    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVUNX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 8  **********
      * Day 8
      * CASE: PAR.USR Day 8 is GT Zero
     C           YL0037    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 8 *DAY OF WEEK
     C           YL0037    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 8 + CON.-1 *DAYS
     C           YL0037    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GVVNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0170  1        Production Type
     C                     Z-ADD*ZERO     WN0171  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0172  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0170           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0170           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0170    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0171           PS Weight Stand
     C                     Z-ADDWL0101    WN0172           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0172    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVVNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0171    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVVNX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 9  **********
      * Day 9
      * CASE: PAR.USR Day 9 is GT Zero
     C           YL0038    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 9 *DAY OF WEEK
     C           YL0038    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 9 + CON.-1 *DAYS
     C           YL0038    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GVWNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0173  1        Production Type
     C                     Z-ADD*ZERO     WN0174  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0175  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0173           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0173           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0173    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0174           PS Weight Stand
     C                     Z-ADDWL0101    WN0175           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0175    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVWNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0174    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVWNX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 10 **********
      * Day 10
      * CASE: PAR.USR Day 10 is GT Zero
     C           YL0039    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 10 *DAY OF WEEK
     C           YL0039    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 10 + CON.-1 *DAYS
     C           YL0039    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GVXNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0176  1        Production Type
     C                     Z-ADD*ZERO     WN0177  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0178  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0176           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0176           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0176    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0177           PS Weight Stand
     C                     Z-ADDWL0101    WN0178           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0178    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVXNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0177    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVXNX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 11 **********
      * Day 11
      * CASE: PAR.USR Day 11 is GT Zero
     C           YL0040    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 11 *DAY OF WEEK
     C           YL0040    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 11 + CON.-1 *DAYS
     C           YL0040    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GVYNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0179  1        Production Type
     C                     Z-ADD*ZERO     WN0180  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0181  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0179           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0179           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0179    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0180           PS Weight Stand
     C                     Z-ADDWL0101    WN0181           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0181    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVYNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0180    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVYNX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 12 **********
      * Day 12
      * CASE: PAR.USR Day 12 is GT Zero
     C           YL0041    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 12 *DAY OF WEEK
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 12 + CON.-1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GVZNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0182  1        Production Type
     C                     Z-ADD*ZERO     WN0183  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0184  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0182           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0182           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0182    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0183           PS Weight Stand
     C                     Z-ADDWL0101    WN0184           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0184    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVZNX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0183    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVZNX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 13 **********
      * Day 13
      * CASE: PAR.USR Day 13 is GT Zero
     C           YL0042    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 13 *DAY OF WEEK
     C           YL0042    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 13 + CON.-1 *DAYS
     C           YL0042    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GV0NX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0185  1        Production Type
     C                     Z-ADD*ZERO     WN0186  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0187  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0185           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0185           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0185    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0186           PS Weight Stand
     C                     Z-ADDWL0101    WN0187           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0187    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV0NX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0186    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV0NX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 14 **********
      * Day 14
      * CASE: PAR.USR Day 14 is GT Zero
     C           YL0043    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 14 *DAY OF WEEK
     C           YL0043    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 14 + CON.-1 *DAYS
     C           YL0043    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GV1NX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0188  1        Production Type
     C                     Z-ADD*ZERO     WN0189  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0190  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0188           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0188           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0188    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0189           PS Weight Stand
     C                     Z-ADDWL0101    WN0190           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0190    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV1NX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0189    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV1NX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 15 **********
      * Day 15
      * CASE: PAR.USR Day 15 is GT Zero
     C           YL0044    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 15 *DAY OF WEEK
     C           YL0044    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 15 + CON.-1 *DAYS
     C           YL0044    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GV2NX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0191  1        Production Type
     C                     Z-ADD*ZERO     WN0192  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0193  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0191           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0191           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0191    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0192           PS Weight Stand
     C                     Z-ADDWL0101    WN0193           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0193    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV2NX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0192    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV2NX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * **********  Day 16 **********
      * Day 16
      * CASE: PAR.USR Day 16 is GT Zero
     C           YL0045    IFGT 0                          *IF
      * LCL.Day of Week (SYN) USR = PAR.USR Day 16 *DAY OF WEEK
     C           YL0045    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0068
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0068    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Production Date = PAR.USR Day 16 + CON.-1 *DAYS
     C           YL0045    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0069
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0069
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0087           Company Number
     C                     Z-ADDYL0069    WL0088           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0089    YL0070    P      Production Day
      * CASE: LCL.Production Day Status is yes
     C           YL0070    IFEQ 'Y'                        *IF
      * CASE: PAR.Std Prod Input Sts USR is Entered by Retail Sales
     C           P7NKTX    IFEQ 'E'                        *IF
      * Rtv Std Production    RT - PS Std Production  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0090           Company Number
     C                     Z-ADD$DHGCD    WL0091           Item Code
     C                     MOVELYL0067    WL0092    P      Warehouse Code
     C                     Z-ADDYL0069    WL0093           Effective Date
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0094    $GV3NX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL*BLANK    WN0194  1        Production Type
     C                     Z-ADD*ZERO     WN0195  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0196  70       PS Pieces Stand
      *
      * Rtv Standard Prod SYS IF
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0069    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0194           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0194           Production Type
     C                     END                             *FI
      * Rtv Standard Wgt/Pcs  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0095           Company Number
     C                     MOVELWN0194    WL0096    P      Production Type
     C                     Z-ADDYL0069    WL0097           Production Date
     C                     Z-ADD$DHGCD    WL0098           Item Code
     C                     MOVELYL0067    WL0099    P      Warehouse Code
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0100    WN0195           PS Weight Stand
     C                     Z-ADDWL0101    WN0196           PS Pieces Stand
      * CASE: PAR.Piece Count Item is yes
     C           YL0022    IFEQ 'Y'                        *IF
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Pieces Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Pieces Need USR
     C           WN0196    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV3NX           PS Qty Standard
     C                     ELSE
      * CASE: *OTHERWISE
      * PS Qty Standard
      * PAR.PS Qty Standard =
      *    *COMPUTE ((x1) / (x2))
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0195    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV3NX           PS Qty Standard
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         ULEXIT    ENDSR
      /EJECT
     CSR         UMSUBR    BEGSR
      *================================================================
      * CONV: Sched Orders Using Pieces
      *================================================================
      * Qty On-Hand 7.2 USR
      * CUR.Qty On-Hand 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt On-Hand SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt On-Hand USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLJWG    ADD  $DLGWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GU5NX           Qty On-Hand 7.2
      * Qty sched prod 1 7.2 usr
      * CUR.Qty Sched Prod 1 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Prod 1 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Prod 1 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLKWG    ADD  $DLHWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVMNX           Qty Sched Prod
      * Qty EOD Inv 1 7.2 USR
      * CUR.Qty EOD Inv 1 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt EOD Inv 1 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt EOD Inv 1 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLMWG    ADD  $DLIWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVNNX           Qty EOD Inv 1 7
      * Qty Sched Ord 1 7.2 USR
      * CUR.Qty Sched Ord 1 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 1 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 1 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLLWG    ADD  $DK0WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GU6NX           Qty Sched Ord 1
      * Qty Sched Ord 2 7.2 USR
      * CUR.Qty Sched Ord 2 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 2 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 2 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLNWG    ADD  $DK8WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVENX           Qty Sched Ord 2
      * Qty Sched Ord 3 7.2 USR
      * CUR.Qty Sched Ord 3 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 3 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 3 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLOWG    ADD  $DK9WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVFNX           Qty Sched Ord 3
      * Qty Sched Ord 4 7.2 USR
      * CUR.Qty Sched Ord 4 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 4 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 4 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLPWG    ADD  $DLAWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVGNX           Qty Sched Ord 4
      * Qty Sched Ord 5 7.2 USR
      * CUR.Qty Sched Ord 5 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 5 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 5 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLQWG    ADD  $DLBWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVHNX           Qty Sched Ord 5
      * Qty Sched Ord 6 7.2 USR
      * CUR.Qty Sched Ord 6 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 6 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 6 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLRWG    ADD  $DLCWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVINX           Qty Sched Ord 6
      * Qty Sched Ord 7 7.2 USR
      * CUR.Qty Sched Ord 7 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 7 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 7 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLSWG    ADD  $DLDWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVJNX           Qty Sched Ord 7
      * Qty Sched Ord 8 7.2 USR
      * CUR.Qty Sched Ord 8 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 8 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 8 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLTWG    ADD  $DLEWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVKNX           Qty Sched Ord 8
      * Qty Sched Ord 9 7.2 USR
      * CUR.Qty Sched Ord 9 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 9 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 9 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLUWG    ADD  $DLFWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVLNX           Qty Sched Ord 9
      * Qty Sched Ord 10 7.2 USR
      * CUR.Qty Sched Ord 10 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 10 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 10 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLVWG    ADD  $DK1WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GU7NX           Qty Sched Ord 1
      * Qty Sched Ord 11 7.2 USR
      * CUR.Qty Sched Ord 11 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 11 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 11 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GL1WG    ADD  $DK2WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GU8NX           Qty Sched Ord 1
      * Qty Sched Ord 12 7.2 USR
      * CUR.Qty Sched Ord 12 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 12 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 12 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLWWG    ADD  $DK3WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GU9NX           Qty Sched Ord 1
      * Qty Sched Ord 13 7.2 USR
      * CUR.Qty Sched Ord 13 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 13 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 13 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLXWG    ADD  $DK4WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVANX           Qty Sched Ord 1
      * Qty Sched Ord 14 7.2 USR
      * CUR.Qty Sched Ord 14 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 14 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 14 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLYWG    ADD  $DK5WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVBNX           Qty Sched Ord 1
      * Qty Sched Ord 15 7.2 USR
      * CUR.Qty Sched Ord 15 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 15 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 15 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GLZWG    ADD  $DK6WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVCNX           Qty Sched Ord 1
      * Qty Sched Ord 16 7.2 USR
      * CUR.Qty Sched Ord 16 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 16 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 16 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GL0WG    ADD  $DK7WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVDNX           Qty Sched Ord 1
      *================================================================
     CSR         UMEXIT    ENDSR
      /EJECT
     CSR         UNSUBR    BEGSR
      *================================================================
      * CONV: Freezer Allocation Using Pieces
      *================================================================
      * Qty For Freezer 1 USR
      * CUR.Qty For Freezer 1 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 1
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GOSWG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GL8NY           Qty For Freezer
      * Qty For Freezer 2 USR
      * CUR.Qty For Freezer 2 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 2
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GOTWG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GL9NY           Qty For Freezer
      * Qty For Freezer 3 USR
      * CUR.Qty For Freezer 3 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 3
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GOUWG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMANY           Qty For Freezer
      * Qty For Freezer 4 USR
      * CUR.Qty For Freezer 4 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 4
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GOVWG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMBNY           Qty For Freezer
      * Qty For Freezer 5 USR
      * CUR.Qty For Freezer 5 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 5
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GOWWG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMCNY           Qty For Freezer
      * Qty For Freezer 6 USR
      * CUR.Qty For Freezer 6 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 6
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GOXWG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMDNY           Qty For Freezer
      * Qty For Freezer 7 USR
      * CUR.Qty For Freezer 7 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 7
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GOYWG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMENY           Qty For Freezer
      * Qty For Freezer 8 USR
      * CUR.Qty For Freezer 8 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 8
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GOZWG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMFNY           Qty For Freezer
      * Qty For Freezer 9 USR
      * CUR.Qty For Freezer 9 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 9
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GO0WG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMGNY           Qty For Freezer
      * Qty For Freezer 10 USR
      * CUR.Qty For Freezer 10 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 10
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GO1WG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMHNY           Qty For Freezer
      * Qty For Freezer 11 USR
      * CUR.Qty For Freezer 11 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 11
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GO2WG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMINY           Qty For Freezer
      * Qty For Freezer 12 USR
      * CUR.Qty For Freezer 12 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 12
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GO3WG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMJNY           Qty For Freezer
      * Qty For Freezer 13 USR
      * CUR.Qty For Freezer 13 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 13
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GO4WG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMKNY           Qty For Freezer
      * Qty For Freezer 14 USR
      * CUR.Qty For Freezer 14 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 14
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GO5WG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMLNY           Qty For Freezer
      * Qty For Freezer 15 USR
      * CUR.Qty For Freezer 15 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 15
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GO6WG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMMNY           Qty For Freezer
      * Qty For Freezer 16 USR
      * CUR.Qty For Freezer 16 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 16
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Pieces Need USR
     C           $GO7WG    DIV  YL0029    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMNNY           Qty For Freezer
      *================================================================
     CSR         UNEXIT    ENDSR
      /EJECT
     CSR         UOSUBR    BEGSR
      *================================================================
      * CONV: Sched Orders Using Unit Weight
      *================================================================
      * Qty On-Hand 7.2 USR
      * CUR.Qty On-Hand 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt On-Hand SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt On-Hand USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLJWG    ADD  $DLGWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GU5NX           Qty On-Hand 7.2
      * Qty sched prod 1 7.2 usr
      * CUR.Qty Sched Prod 1 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Prod 1 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Prod 1 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLKWG    ADD  $DLHWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVMNX           Qty Sched Prod
      * Qty Sched Ord 1 7.2 USR
      * CUR.Qty Sched Ord 1 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 1 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 1 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLLWG    ADD  $DK0WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GU6NX           Qty Sched Ord 1
      * Qty EOD Inv 1 7.2 USR
      * CUR.Qty EOD Inv 1 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt EOD Inv 1 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt EOD Inv 1 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLMWG    ADD  $DLIWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVNNX           Qty EOD Inv 1 7
      * Qty Sched Ord 2 7.2 USR
      * CUR.Qty Sched Ord 2 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 2 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 2 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLNWG    ADD  $DK8WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVENX           Qty Sched Ord 2
      * Qty Sched Ord 3 7.2 USR
      * CUR.Qty Sched Ord 3 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 3 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 3 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLOWG    ADD  $DK9WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVFNX           Qty Sched Ord 3
      * Qty Sched Ord 4 7.2 USR
      * CUR.Qty Sched Ord 4 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 4 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 4 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLPWG    ADD  $DLAWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVGNX           Qty Sched Ord 4
      * Qty Sched Ord 5 7.2 USR
      * CUR.Qty Sched Ord 5 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 5 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 5 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLQWG    ADD  $DLBWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVHNX           Qty Sched Ord 5
      * Qty Sched Ord 6 7.2 USR
      * CUR.Qty Sched Ord 6 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 6 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 6 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLRWG    ADD  $DLCWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVINX           Qty Sched Ord 6
      * Qty Sched Ord 7 7.2 USR
      * CUR.Qty Sched Ord 7 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 7 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 7 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLSWG    ADD  $DLDWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVJNX           Qty Sched Ord 7
      * Qty Sched Ord 8 7.2 USR
      * CUR.Qty Sched Ord 8 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 8 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 8 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLTWG    ADD  $DLEWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVKNX           Qty Sched Ord 8
      * Qty Sched Ord 9 7.2 USR
      * CUR.Qty Sched Ord 9 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 9 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 9 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLUWG    ADD  $DLFWG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVLNX           Qty Sched Ord 9
      * Qty Sched Ord 10 7.2 USR
      * CUR.Qty Sched Ord 10 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 10 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 10 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLVWG    ADD  $DK1WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GU7NX           Qty Sched Ord 1
      * Qty Sched Ord 11 7.2 USR
      * CUR.Qty Sched Ord 11 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 11 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 11 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GL1WG    ADD  $DK2WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GU8NX           Qty Sched Ord 1
      * Qty Sched Ord 12 7.2 USR
      * CUR.Qty Sched Ord 12 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 12 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 12 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLWWG    ADD  $DK3WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GU9NX           Qty Sched Ord 1
      * Qty Sched Ord 13 7.2 USR
      * CUR.Qty Sched Ord 13 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 13 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 13 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLXWG    ADD  $DK4WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVANX           Qty Sched Ord 1
      * Qty Sched Ord 14 7.2 USR
      * CUR.Qty Sched Ord 14 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 14 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 14 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLYWG    ADD  $DK5WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVBNX           Qty Sched Ord 1
      * Qty Sched Ord 15 7.2 USR
      * CUR.Qty Sched Ord 15 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 15 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 15 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GLZWG    ADD  $DK6WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVCNX           Qty Sched Ord 1
      * Qty Sched Ord 16 7.2 USR
      * CUR.Qty Sched Ord 16 7.2 USR =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Wgt Sched Ord 16 SUM
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Wgt Sched Ord 16 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GL0WG    ADD  $DK7WG    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GVDNX           Qty Sched Ord 1
      *================================================================
     CSR         UOEXIT    ENDSR
      /EJECT
     CSR         UPSUBR    BEGSR
      *================================================================
      * CONV: Freezer Allocation Using Unit Weight
      *================================================================
      * Qty For Freezer 1 USR
      * CUR.Qty For Freezer 1 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 1
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GOSWG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GL8NY           Qty For Freezer
      * Qty For Freezer 2 USR
      * CUR.Qty For Freezer 2 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 2
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GOTWG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GL9NY           Qty For Freezer
      * Qty For Freezer 3 USR
      * CUR.Qty For Freezer 3 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 3
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GOUWG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMANY           Qty For Freezer
      * Qty For Freezer 4 USR
      * CUR.Qty For Freezer 4 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 4
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GOVWG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMBNY           Qty For Freezer
      * Qty For Freezer 5 USR
      * CUR.Qty For Freezer 5 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 5
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GOWWG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMCNY           Qty For Freezer
      * Qty For Freezer 6 USR
      * CUR.Qty For Freezer 6 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 6
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GOXWG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMDNY           Qty For Freezer
      * Qty For Freezer 7 USR
      * CUR.Qty For Freezer 7 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 7
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GOYWG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMENY           Qty For Freezer
      * Qty For Freezer 8 USR
      * CUR.Qty For Freezer 8 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 8
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GOZWG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMFNY           Qty For Freezer
      * Qty For Freezer 9 USR
      * CUR.Qty For Freezer 9 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 9
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GO0WG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMGNY           Qty For Freezer
      * Qty For Freezer 10 USR
      * CUR.Qty For Freezer 10 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 10
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GO1WG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMHNY           Qty For Freezer
      * Qty For Freezer 11 USR
      * CUR.Qty For Freezer 11 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 11
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GO2WG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMINY           Qty For Freezer
      * Qty For Freezer 12 USR
      * CUR.Qty For Freezer 12 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 12
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GO3WG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMJNY           Qty For Freezer
      * Qty For Freezer 13 USR
      * CUR.Qty For Freezer 13 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 13
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GO4WG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMKNY           Qty For Freezer
      * Qty For Freezer 14 USR
      * CUR.Qty For Freezer 14 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 14
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GO5WG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMLNY           Qty For Freezer
      * Qty For Freezer 15 USR
      * CUR.Qty For Freezer 15 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 15
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GO6WG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMMNY           Qty For Freezer
      * Qty For Freezer 16 USR
      * CUR.Qty For Freezer 16 USR =
      *    *COMPUTE ((x1) / x3)
      * x1    : CUR.Wgt for Freezer SUM 16
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Unit Weight
     C           $GO7WG    DIV  $DAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GMNNY           Qty For Freezer
      *================================================================
     CSR         UPEXIT    ENDSR
      /EJECT
     CSR         UQSUBR    BEGSR
      *================================================================
      * Calculate Availability
      *================================================================
      * Qty Avail 1 7.2 USR
      * CUR.Qty Avail 1 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 1 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 1 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 1 USR
     C           $GVONX    SUB  $GU6NX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GL8NY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV4NX           Qty Avail 1 7.2
      * Qty Avail 2 7.2 USR
      * CUR.Qty Avail 2 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 2 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 2 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 2 USR
     C           $GVPNX    SUB  $GVENX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GL9NY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV5NX           Qty Avail 2 7.2
      * Qty Avail 3 7.2 USR
      * CUR.Qty Avail 3 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 3 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 3 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 3 USR
     C           $GVQNX    SUB  $GVFNX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMANY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV6NX           Qty Avail 3 7.2
      * Qty Avail 4 7.2 USR
      * CUR.Qty Avail 4 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 4 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 4 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 4 USR
     C           $GVRNX    SUB  $GVGNX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMBNY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV7NX           Qty Avail 4 7.2
      * Qty Avail 5 7.2 USR
      * CUR.Qty Avail 5 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 5 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 5 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 5 USR
     C           $GVSNX    SUB  $GVHNX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMCNY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV8NX           Qty Avail 5 7.2
      * Qty Avail 6 7.2 USR
      * CUR.Qty Avail 6 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 6 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 6 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 6 USR
     C           $GVTNX    SUB  $GVINX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMDNY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GV9NX           Qty Avail 6 7.2
      * Qty Avail 7 7.2 USR
      * CUR.Qty Avail 7 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 7 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 7 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 7 USR
     C           $GVUNX    SUB  $GVJNX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMENY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GWANX           Qty Avail 7 7.2
      * Qty Avail 8 7.2 USR
      * CUR.Qty Avail 8 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 8 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 8 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 8 USR
     C           $GVVNX    SUB  $GVKNX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMFNY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GWBNX           Qty Avail 8 7.2
      * Qty Avail 9 7.2 USR
      * CUR.Qty Avail 9 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 9 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 9 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 9 USR
     C           $GVWNX    SUB  $GVLNX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMGNY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GWCNX           Qty Avail 9 7.2
      * Qty Avail 10 7.2 USR
      * CUR.Qty Avail 10 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 10 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 10 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 10 USR
     C           $GVXNX    SUB  $GU7NX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMHNY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GWDNX           Qty Avail 10 7.
      * Qty Avail 11 7.2 USR
      * CUR.Qty Avail 11 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 11 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 11 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 11 USR
     C           $GVYNX    SUB  $GU8NX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMINY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GWENX           Qty Avail 11 7.
      * Qty Avail 12 7.2 USR
      * CUR.Qty Avail 12 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 12 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 12 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 12 USR
     C           $GVZNX    SUB  $GU9NX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMJNY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GWFNX           Qty Avail 12 7.
      * Qty Avail 13 7.2 USR
      * CUR.Qty Avail 13 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 13 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 13 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 13 USR
     C           $GV0NX    SUB  $GVANX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMKNY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GWGNX           Qty Avail 13 7.
      * Qty Avail 14 7.2 USR
      * CUR.Qty Avail 14 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 14 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 14 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 14 USR
     C           $GV1NX    SUB  $GVBNX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMLNY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GWHNX           Qty Avail 14 7.
      * Qty Avail 15 7.2 USR
      * CUR.Qty Avail 15 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 15 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 15 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 15 USR
     C           $GV2NX    SUB  $GVCNX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMMNY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GWINX           Qty Avail 15 7.
      * Qty Avail 16 7.2 USR
      * CUR.Qty Avail 16 7.2 USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.Qty Std Prod 16 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x2    : CUR.Qty Sched Ord 16 7.2 USR
      * -     : PGM.*Synon (15,2) work field
      * x3    : CUR.Qty For Freezer 16 USR
     C           $GV3NX    SUB  $GVDNX    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  $GMNNY    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GWJNX           Qty Avail 16 7.
      *================================================================
     CSR         UQEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZBINIT    BEGSR
      *================================================================
      * Prt Base Avail        PO: Initialise
      *================================================================
      * USER: Initialize program
      * RMC 04/20/17 E9064 added 440
      * RMC 07/19/07 Look at PA Base Avail Rpt field in company item for
      * RMC - Base Calc in PRTOBJ - use prod yield% when determing wgt
      *   scheduled for the CERTAIN items: class/group type: 853/850/200
      *  ie.. boneless sirloins                            08/28/07
      * Rtv PA Shipdate-21+SunRT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0001           Company Number
     C                     Z-ADDP2JEDT    WL0002           Post to G/L Dat
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    WN0119    P      Generic Heading
     C                     MOVELWL0004    WN0120    P      Generic Heading
     C                     MOVELWL0005    WN0121    P      Generic Heading
     C                     MOVELWL0006    WN0122    P      Generic Heading
     C                     MOVELWL0007    WN0123    P      Generic Heading
     C                     MOVELWL0008    WN0124    P      Generic Heading
     C                     MOVELWL0009    WN0125    P      Generic Heading
     C                     MOVELWL0010    WN0126    P      Generic Heading
     C                     MOVELWL0011    WN0127    P      Generic Heading
     C                     MOVELWL0012    WN0128    P      Generic Heading
     C                     MOVELWL0013    WN0129    P      Generic Heading
     C                     MOVELWL0014    WN0130    P      Generic Heading
     C                     MOVELWL0015    WN0131    P      Generic Heading
     C                     MOVELWL0016    WN0132    P      Generic Heading
     C                     MOVELWL0017    WN0134    P      Generic Heading
     C                     MOVELWL0018    WN0135    P      Generic Heading
     C                     Z-ADDWL0019    YL0030           Avail Ship Date
     C                     Z-ADDWL0020    YL0031           Avail Ship Date
     C                     Z-ADDWL0021    YL0032           Avail Ship Date
     C                     Z-ADDWL0022    YL0033           Avail Ship Date
     C                     Z-ADDWL0023    YL0034           Avail Ship Date
     C                     Z-ADDWL0024    YL0035           Avail Ship Date
     C                     Z-ADDWL0025    YL0036           Avail Ship Date
     C                     Z-ADDWL0026    YL0037           Avail Ship Date
     C                     Z-ADDWL0027    YL0038           Avail Ship Date
     C                     Z-ADDWL0028    YL0039           Avail Ship Date
     C                     Z-ADDWL0029    YL0040           Avail Ship Date
     C                     Z-ADDWL0030    YL0041           Avail Ship Date
     C                     Z-ADDWL0031    YL0042           Avail Ship Date
     C                     Z-ADDWL0032    YL0043           Avail Ship Date
     C                     Z-ADDWL0033    YL0044           Avail Ship Date
     C                     Z-ADDWL0034    YL0045           Avail Ship Date
     C                     Z-ADDWL0035    YL0046           Avail Ship Date
     C                     Z-ADDWL0036    YL0047           Avail Ship Date
     C                     Z-ADDWL0037    YL0048           Avail Ship Date
     C                     Z-ADDWL0038    YL0049           Avail Ship Date
     C                     Z-ADDWL0039    YL0050           Avail Ship Date
     C                     Z-ADD0         YL0051           Count USR
     C                     MOVEL*BLANK    YL0052           Null Report
      *================================================================
     CSR         ZBEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P2FFDT           USR Day 1
     C                     Z-ADD*ZERO     P2E1DT           USR Day 2
     C                     Z-ADD*ZERO     P2E2DT           USR Day 3
     C                     Z-ADD*ZERO     P2E3DT           USR Day 4
     C                     Z-ADD*ZERO     P2E4DT           USR Day 5
     C                     Z-ADD*ZERO     P3E5DT           USR Day 6
     C                     Z-ADD*ZERO     P3E6DT           USR Day 7
     C                     Z-ADD*ZERO     P3FKDT           USR Day 8
     C                     Z-ADD*ZERO     P3FLDT           USR Day 9
     C                     Z-ADD*ZERO     P3FGDT           USR Day 10
     C                     Z-ADD*ZERO     P3FHDT           USR Day 11
     C                     Z-ADD*ZERO     P3FIDT           USR Day 12
     C                     Z-ADD*ZERO     P3FJDT           USR Day 13
     C                     Z-ADD*ZERO     P3HPDT           USR Day 14
     C                     Z-ADD*ZERO     P3HQDT           USR Day 15
     C                     Z-ADD*ZERO     P3HRDT           USR Day 16
     C                     MOVEL*BLANK    P4MWTX           Generic Heading
     C                     MOVEL*BLANK    P4MXTX           Generic Heading
     C                     MOVEL*BLANK    P4MYTX           Generic Heading
     C                     MOVEL*BLANK    P4MZTX           Generic Heading
     C                     MOVEL*BLANK    P4M0TX           Generic Heading
     C                     MOVEL*BLANK    P4M1TX           Generic Heading
     C                     MOVEL*BLANK    P4M2TX           Generic Heading
     C                     MOVEL*BLANK    P4M3TX           Generic Heading
     C                     MOVEL*BLANK    P4M4TX           Generic Heading
     C                     MOVEL*BLANK    P4M5TX           Generic Heading
     C                     MOVEL*BLANK    P4M6TX           Generic Heading
     C                     MOVEL*BLANK    P4M7TX           Generic Heading
     C                     MOVEL*BLANK    P4M8TX           Generic Heading
     C                     MOVEL*BLANK    P4M9TX           Generic Heading
     C                     MOVEL*BLANK    P4DFST           Display Line Fl
     C                     MOVEL*BLANK    P4Y5TX           Generic Heading
     C                     MOVEL*BLANK    P4Y6TX           Generic Heading
     C                     Z-ADD*ZERO     P5KNNB           Total Sched Shi
     C                     Z-ADD*ZERO     P6LGNB           Grand Total Sch
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field Count USR
     C                     Z-ADD*ZERO     WUCNTU  50
      * Define work field @Calc 6,0
     C                     Z-ADD*ZERO     WUCLC6  60
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    KLAIC3           Company Number
     C                     MOVEL*LOVAL    KLV4CD           Availability Gr
     C                     MOVEL*LOVAL    KLIDSQ           Item Display Se
     C                     MOVEL*LOVAL    KLHGCD           Item Code
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field Vertical Line 1
     C                     MOVEL*BLANK    WUZRTX  1
      * Define work field Generic Heading
     C                     MOVEL*BLANK    WUNATX  8
      * Define work field Vertical Line 2
     C                     MOVEL*BLANK    WUZCTX  1
      * Define work field Vertical Line 3
     C                     MOVEL*BLANK    WUZDTX  1
      * Define work field Vertical Line 4
     C                     MOVEL*BLANK    WUZETX  1
      * Define work field Vertical Line 5
     C                     MOVEL*BLANK    WUZFTX  1
      * Define work field Vertical Line 6
     C                     MOVEL*BLANK    WUZGTX  1
      * Define work field Vertical Line 7
     C                     MOVEL*BLANK    WUZHTX  1
      * Define work field Vertical Line 8
     C                     MOVEL*BLANK    WUZITX  1
      * Define work field Vertical Line 9
     C                     MOVEL*BLANK    WUZJTX  1
      * Define work field Vertical Line 10
     C                     MOVEL*BLANK    WUZKTX  1
      * Define work field Vertical Line 11
     C                     MOVEL*BLANK    WUZLTX  1
      * Define work field Vertical Line 12
     C                     MOVEL*BLANK    WUZMTX  1
      * Define work field Vertical Line 13
     C                     MOVEL*BLANK    WUZNTX  1
      * Define work field Vertical Line 14
     C                     MOVEL*BLANK    WUZOTX  1
      * Define work field Vertical Line 15
     C                     MOVEL*BLANK    WUZPTX  1
      * Define work field Vertical Line 16
     C                     MOVEL*BLANK    WUZQTX  1
      * Define work field Description Line One
     C                     MOVEL*BLANK    WUAVNA 30
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAHGCD           Item Code
     C                     Z-ADD*ZERO     WAAWPC           Conversion Fact
     C                     Z-ADD*ZERO     WAAXPC           Conversion Fact
     C                     Z-ADD*ZERO     WAAIWG           Unit Weight
     C                     Z-ADD*ZERO     WACZWG           Minimum Weight
     C                     Z-ADD*ZERO     WAC0WG           Maximum Weight
     C                     Z-ADD*ZERO     WAURTN           Number Cases On
     C                     Z-ADD*ZERO     WAAJC8           Vendor - Item D
     C                     Z-ADD*ZERO     WARINB           Item Structure
     C                     Z-ADD*ZERO     WARHNB           Item Structure
     C                     Z-ADD*ZERO     WARGNB           Item Structure
     C                     Z-ADD*ZERO     WATFNB           Transportation
     C                     Z-ADD*ZERO     WATMVA           Maximum Audit V
     C                     Z-ADD*ZERO     WATNVA           Minimum Audit V
     C                     Z-ADD*ZERO     WABLPR           Market Overage
     C                     Z-ADD*ZERO     WABMPR           Standard Overag
     C                     Z-ADD*ZERO     WACMCO           Item Pricing Co
     C                     Z-ADD*ZERO     WACHTM           Fresh Chilling
     C                     Z-ADD*ZERO     WASWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WAPPHE           Pieces Per Head
     C                     Z-ADD*ZERO     WAICN1           Item Category N
     C                     Z-ADD*ZERO     WAICN2           Item Category N
     C                     Z-ADD*ZERO     WAV2NB           Item Category N
     C                     Z-ADD*ZERO     WAITCN           Item Category N
     C                     Z-ADD*ZERO     WAITC5           Item Category N
     C                     Z-ADD*ZERO     WAICN6           Item Category N
     C                     Z-ADD*ZERO     WAICN7           Item Category N
     C                     Z-ADD*ZERO     WAICN8           Item Category N
     C                     Z-ADD*ZERO     WAICN9           Item Category N
     C                     Z-ADD*ZERO     WAICN0           Item Category N
     C                     Z-ADD*ZERO     WASFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     WAA3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     WASJNB           Production Lead
     C                     Z-ADD*ZERO     WASKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WASLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WASMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WACFNB           PM Pounds per H
     C                     Z-ADD*ZERO     WACGNB           Item Frt Overag
     C                     Z-ADD*ZERO     WAILNB           Packages per ca
     C                     Z-ADD*ZERO     WACHNB           Use/Freeze/Sell
     C                     Z-ADD*ZERO     WACINB           PM Batch Size
     C                     Z-ADD*ZERO     WACJNB           Package Level s
     C                     Z-ADD*ZERO     WACMNB           Partial Item Co
     C                     Z-ADD*ZERO     WACNNB           WIP Item Code
     C                     Z-ADD*ZERO     WACRNB           WIP Reject Code
     C                     Z-ADD*ZERO     WACSNB           Std Costing Uni
     C                     Z-ADD*ZERO     WACVNB           FP Std Green We
     C                     Z-ADD*ZERO     WACWNB           PM Standard LBS
     C                     Z-ADD*ZERO     WACXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     WACZNB           PM Formula LBS/
     C                     Z-ADD*ZERO     WAC0NB           PM Finished LBS
     C                     Z-ADD*ZERO     WAB4NB           PM R/M Type Cod
     C                     Z-ADD*ZERO     WAB5NB           PM Line Number
     C                     Z-ADD*ZERO     WABDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WABJNB           Bags Per Unit
     C                     Z-ADD*ZERO     WAF5WG           Item Target Pri
     C                     Z-ADD*ZERO     WAF6WG           Minimum Piece W
     C                     Z-ADD*ZERO     WAF7WG           Maximum Piece W
     C                     Z-ADD*ZERO     WABLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     WABNNB           Production Qty
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Qty Produced USR
     C                     Z-ADD*ZERO     WULOQT  50
      * Define work field Qty Remaining Prod USR
     C                     Z-ADD*ZERO     WULFQT  50
      * Define work field Qty EOD Inv 2 USR
     C                     Z-ADD*ZERO     WULHQT  50
      * Define work field Qty Prod Needed 2 USR
     C                     Z-ADD*ZERO     WULMQT  50
      * Define work field Qty Prod Adjusted 2 USR
     C                     Z-ADD*ZERO     WULNQT  50
      * Define work field Qty Sched Prod 2 USR
     C                     Z-ADD*ZERO     WULJQT  50
      * Define work field Qty EOD Inv 3 USR
     C                     Z-ADD*ZERO     WULRQT  50
      * Define work field Qty Prod Needed 3 USR
     C                     Z-ADD*ZERO     WULUQT  50
      * Define work field Qty Prod Adjusted 3 USR
     C                     Z-ADD*ZERO     WULTQT  50
      * Define work field Qty Sched Prod 3 USR
     C                     Z-ADD*ZERO     WULWQT  50
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WBBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WBBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WBBUC3           WHS Sched Prod
     C                     Z-ADD*ZERO     WBBVC3           WHS Inventory C
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field Weight Scheduled SUM
     C                     Z-ADD*ZERO     WUEEWG 112
      * Define work field Header Status
     C                     MOVEL*BLANK    WUGWST  1
      * Define work field Billing Activity Type
     C                     MOVEL*BLANK    WUOBST  1
      * Define work field Description Line Two
     C                     MOVEL*BLANK    WUAWNA 30
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    IOAIC3           Company Number
     C                     MOVEL*LOVAL    IOC9NB           Component Item
     C                     MOVEL*LOVAL    IOHGCD           Item Code
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCHGCD           Item Code
     C                     Z-ADD*ZERO     WCAUDT           Effective Date
     C                     Z-ADD*ZERO     WCW0NX           PS Qty Standard
     C                     Z-ADD*ZERO     WCW1NX           PS Qty Unused 1
     C                     Z-ADD*ZERO     WCW2NX           PS Qty Unused 2
     C                     Z-ADD*ZERO     WCW3NX           PS Qty Unused 3
     C                     Z-ADD*ZERO     WCW4NX           PS Qty Unused 4
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    W0WB01 155       *Synon (15,5) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SCRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003  8
     C                     MOVEL*BLANK    WL0004  8
     C                     MOVEL*BLANK    WL0005  8
     C                     MOVEL*BLANK    WL0006  8
     C                     MOVEL*BLANK    WL0007  8
     C                     MOVEL*BLANK    WL0008  8
     C                     MOVEL*BLANK    WL0009  8
     C                     MOVEL*BLANK    WL0010  8
     C                     MOVEL*BLANK    WL0011  8
     C                     MOVEL*BLANK    WL0012  8
     C                     MOVEL*BLANK    WL0013  8
     C                     MOVEL*BLANK    WL0014  8
     C                     MOVEL*BLANK    WL0015  8
     C                     MOVEL*BLANK    WL0016  8
     C                     MOVEL*BLANK    WL0017  8
     C                     MOVEL*BLANK    WL0018  8
     C                     Z-ADD*ZERO     WL0019  70
     C                     Z-ADD*ZERO     WL0020  70
     C                     Z-ADD*ZERO     WL0021  70
     C                     Z-ADD*ZERO     WL0022  70
     C                     Z-ADD*ZERO     WL0023  70
     C                     Z-ADD*ZERO     WL0024  70
     C                     Z-ADD*ZERO     WL0025  70
     C                     Z-ADD*ZERO     WL0026  70
     C                     Z-ADD*ZERO     WL0027  70
     C                     Z-ADD*ZERO     WL0028  70
     C                     Z-ADD*ZERO     WL0029  70
     C                     Z-ADD*ZERO     WL0030  70
     C                     Z-ADD*ZERO     WL0031  70
     C                     Z-ADD*ZERO     WL0032  70
     C                     Z-ADD*ZERO     WL0033  70
     C                     Z-ADD*ZERO     WL0034  70
     C                     Z-ADD*ZERO     WL0035  70
     C                     Z-ADD*ZERO     WL0036  70
     C                     Z-ADD*ZERO     WL0037  70
     C                     Z-ADD*ZERO     WL0038  70
     C                     Z-ADD*ZERO     WL0039  70
      * Define local variables for subroutine SGRVGN.
     C                     Z-ADD*ZERO     WL0040  30
     C                     Z-ADD*ZERO     WL0041  70
     C                     MOVEL*BLANK    WL0042 30
     C                     MOVEL*BLANK    WL0043  2
     C                     Z-ADD*ZERO     WL0044 112
     C                     MOVEL*BLANK    WL0045  1
     C                     Z-ADD*ZERO     WL0046  70
     C                     Z-ADD*ZERO     WL0047  70
      * Define local variables for subroutine SHRVGN.
     C                     Z-ADD*ZERO     WL0048  30
     C                     Z-ADD*ZERO     WL0049  70
     C                     MOVEL*BLANK    WL0050  1
      * Define local variables for subroutine SIRVGN.
     C                     MOVEL*BLANK    WL0051  3
     C                     MOVEL*BLANK    WL0052  1
      * Define local variables for subroutine SJRVGN.
     C                     Z-ADD*ZERO     WL0053  30
     C                     Z-ADD*ZERO     WL0054  70
     C                     MOVEL*BLANK    WL0055  3
     C                     Z-ADD*ZERO     WL0056  70
      * Define local variables for subroutine SKRVGN.
     C                     Z-ADD*ZERO     WL0057  30
     C                     Z-ADD*ZERO     WL0058  70
     C                     MOVEL*BLANK    WL0059  3
     C                     Z-ADD*ZERO     WL0060 112
      * Define local variables for subroutine SLRVGN.
     C                     Z-ADD*ZERO     WL0061  30
     C                     Z-ADD*ZERO     WL0062  70
     C                     MOVEL*BLANK    WL0063  3
     C                     Z-ADD*ZERO     WL0064  70
     C                     Z-ADD*ZERO     WL0065 112
     C                     Z-ADD*ZERO     WL0066 112
     C                     MOVEL*BLANK    WL0067  1
      * Define local variables for subroutine SMRVGN.
     C                     Z-ADD*ZERO     WL0068  30
     C                     Z-ADD*ZERO     WL0069  70
     C                     MOVEL*BLANK    WL0070  1
     C                     MOVEL*BLANK    WL0071  1
      * Define local variables for subroutine SNRVGN.
     C                     Z-ADD*ZERO     WL0072  30
     C                     Z-ADD*ZERO     WL0073  70
     C                     MOVEL*BLANK    WL0074  3
     C                     Z-ADD*ZERO     WL0075  70
     C                     Z-ADD*ZERO     WL0076 112
     C                     Z-ADD*ZERO     WL0077 112
     C                     MOVEL*BLANK    WL0078  1
      * Define local variables for subroutine SORVGN.
     C                     Z-ADD*ZERO     WL0079  70
     C                     MOVEL*BLANK    WL0080 30
     C                     MOVEL*BLANK    WL0081 30
      * Define local variables for subroutine SQRVGN.
     C                     Z-ADD*ZERO     WL0082  30
     C                     Z-ADD*ZERO     WL0083  70
     C                     MOVEL*BLANK    WL0084  3
     C                     MOVEL*BLANK    WL0085  2
     C                     MOVEL*BLANK    WL0086  1
      * Define local variables for subroutine SRRVGN.
     C                     Z-ADD*ZERO     WL0087  30
     C                     Z-ADD*ZERO     WL0088  70
     C                     MOVEL*BLANK    WL0089  1
      * Define local variables for subroutine SSRVGN.
     C                     Z-ADD*ZERO     WL0090  30
     C                     Z-ADD*ZERO     WL0091  70
     C                     MOVEL*BLANK    WL0092  3
     C                     Z-ADD*ZERO     WL0093  70
     C                     Z-ADD*ZERO     WL0094  72
      * Define local variables for subroutine STRVGN.
     C                     Z-ADD*ZERO     WL0095  30
     C                     MOVEL*BLANK    WL0096  1
     C                     Z-ADD*ZERO     WL0097  70
     C                     Z-ADD*ZERO     WL0098  70
     C                     MOVEL*BLANK    WL0099  3
     C                     Z-ADD*ZERO     WL0100  92
     C                     Z-ADD*ZERO     WL0101  70
      * Define local work field Avail Ship Date 1 USR
     C                     Z-ADD*ZERO     YL0001  70
      * Define local work field Avail Ship Date 2 USR
     C                     Z-ADD*ZERO     YL0002  70
      * Define local work field Avail Ship Date 3 USR
     C                     Z-ADD*ZERO     YL0003  70
      * Define local work field Avail Ship Date 4 USR
     C                     Z-ADD*ZERO     YL0004  70
      * Define local work field Avail Ship Date 5 USR
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field Avail Ship Date 6 USR
     C                     Z-ADD*ZERO     YL0006  70
      * Define local work field Avail Ship Date 7 USR
     C                     Z-ADD*ZERO     YL0007  70
      * Define local work field Avail Ship Date 8 USR
     C                     Z-ADD*ZERO     YL0008  70
      * Define local work field Avail Ship Date 9 USR
     C                     Z-ADD*ZERO     YL0009  70
      * Define local work field Avail Ship Date 10 USR
     C                     Z-ADD*ZERO     YL0010  70
      * Define local work field Avail Ship Date 11 USR
     C                     Z-ADD*ZERO     YL0011  70
      * Define local work field Avail Ship Date 12 USR
     C                     Z-ADD*ZERO     YL0012  70
      * Define local work field Avail Ship Date 13 USR
     C                     Z-ADD*ZERO     YL0013  70
      * Define local work field Avail Ship Date 14 USR
     C                     Z-ADD*ZERO     YL0014  70
      * Define local work field Avail Ship Date 15 USR
     C                     Z-ADD*ZERO     YL0015  70
      * Define local work field Avail Ship Date 16 USR
     C                     Z-ADD*ZERO     YL0016  70
      * Define local work field Avail Ship Date 17 USR
     C                     Z-ADD*ZERO     YL0017  70
      * Define local work field Avail Ship Date 18 USR
     C                     Z-ADD*ZERO     YL0018  70
      * Define local work field Avail Ship Date 19 USR
     C                     Z-ADD*ZERO     YL0019  70
      * Define local work field Avail Ship Date 20 USR
     C                     Z-ADD*ZERO     YL0020  70
      * Define local work field Avail Ship Date 21 USR
     C                     Z-ADD*ZERO     YL0021  70
      * Define local work field Piece Count Item
     C                     MOVEL*BLANK    YL0022  1
      * Define local work field Pieces Per Bag
     C                     Z-ADD*ZERO     YL0023  70
      * Define local work field Bags Per Unit
     C                     Z-ADD*ZERO     YL0024  70
      * Define local work field Sold 100% Frozen
     C                     MOVEL*BLANK    YL0025  1
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0026  3
      * Define local work field Lot Tracking Flag
     C                     MOVEL*BLANK    YL0027  1
      * Define local work field Status Flag 10 Y/N
     C                     MOVEL*BLANK    YL0028  1
      * Define local work field Pieces Need USR
     C                     Z-ADD*ZERO     YL0029  70
      * Define local work field Avail Ship Date 1 USR
     C                     Z-ADD*ZERO     YL0030  70
      * Define local work field Avail Ship Date 2 USR
     C                     Z-ADD*ZERO     YL0031  70
      * Define local work field Avail Ship Date 3 USR
     C                     Z-ADD*ZERO     YL0032  70
      * Define local work field Avail Ship Date 4 USR
     C                     Z-ADD*ZERO     YL0033  70
      * Define local work field Avail Ship Date 5 USR
     C                     Z-ADD*ZERO     YL0034  70
      * Define local work field Avail Ship Date 6 USR
     C                     Z-ADD*ZERO     YL0035  70
      * Define local work field Avail Ship Date 7 USR
     C                     Z-ADD*ZERO     YL0036  70
      * Define local work field Avail Ship Date 8 USR
     C                     Z-ADD*ZERO     YL0037  70
      * Define local work field Avail Ship Date 9 USR
     C                     Z-ADD*ZERO     YL0038  70
      * Define local work field Avail Ship Date 10 USR
     C                     Z-ADD*ZERO     YL0039  70
      * Define local work field Avail Ship Date 11 USR
     C                     Z-ADD*ZERO     YL0040  70
      * Define local work field Avail Ship Date 12 USR
     C                     Z-ADD*ZERO     YL0041  70
      * Define local work field Avail Ship Date 13 USR
     C                     Z-ADD*ZERO     YL0042  70
      * Define local work field Avail Ship Date 14 USR
     C                     Z-ADD*ZERO     YL0043  70
      * Define local work field Avail Ship Date 15 USR
     C                     Z-ADD*ZERO     YL0044  70
      * Define local work field Avail Ship Date 16 USR
     C                     Z-ADD*ZERO     YL0045  70
      * Define local work field Avail Ship Date 17 USR
     C                     Z-ADD*ZERO     YL0046  70
      * Define local work field Avail Ship Date 18 USR
     C                     Z-ADD*ZERO     YL0047  70
      * Define local work field Avail Ship Date 19 USR
     C                     Z-ADD*ZERO     YL0048  70
      * Define local work field Avail Ship Date 20 USR
     C                     Z-ADD*ZERO     YL0049  70
      * Define local work field Avail Ship Date 21 USR
     C                     Z-ADD*ZERO     YL0050  70
      * Define local work field Count USR
     C                     Z-ADD*ZERO     YL0051  50
      * Define local work field Null Report
     C                     MOVEL*BLANK    YL0052  1
      * Define local work field Piece Count Item
     C                     MOVEL*BLANK    YL0053  1
      * Define local work field Pieces Per Bag
     C                     Z-ADD*ZERO     YL0054  70
      * Define local work field Bags Per Unit
     C                     Z-ADD*ZERO     YL0055  70
      * Define local work field Sold 100% Frozen
     C                     MOVEL*BLANK    YL0056  1
      * Define local work field Item Structure Class Code
     C                     Z-ADD*ZERO     YL0057  30
      * Define local work field Item Structure Group Code
     C                     Z-ADD*ZERO     YL0058  30
      * Define local work field Item Structure Type Code
     C                     Z-ADD*ZERO     YL0059  30
      * Define local work field Production Yield
     C                     Z-ADD*ZERO     YL0060  52
      * Define local work field Record Found USR
     C                     MOVEL*BLANK    YL0061  1
      * Define local work field @Percent 6/5
     C                     Z-ADD*ZERO     YL0062  65
      * Define local work field Pieces Need USR
     C                     Z-ADD*ZERO     YL0063  70
      * Define local work field Item Type Code
     C                     MOVEL*BLANK    YL0064  3
      * Define local work field Base/Conv/Loss Item
     C                     MOVEL*BLANK    YL0065  2
      * Define local work field PA Base Avail Rpt Include
     C                     MOVEL*BLANK    YL0066  1
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0067  3
      * Define local work field Day of Week (SYN) USR
     C                     Z-ADD*ZERO     YL0068  10
      * Define local work field Production Date
     C                     Z-ADD*ZERO     YL0069  70
      * Define local work field Production Day Status
     C                     MOVEL*BLANK    YL0070  1
      * Define local work field First Time Flag
     C                     MOVEL*BLANK    YL0071  1
      * Define local work field Item Type Code
     C                     MOVEL*BLANK    YL0072  3
      * Define local work field Base/Conv/Loss Item
     C                     MOVEL*BLANK    YL0073  2
      * Define local work field PA Base Avail Rpt Include
     C                     MOVEL*BLANK    YL0074  1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * RMC - 4/22/17 E9064 added 440 STF warehouse in prtobj
      * E3014
      * RMC - 3/19/14 dont use warehouse when getting OD or pa.  (fr-fz p
      * RMC - Base Calc in PRTOBJ - use prod yield% when determing wgt
      *   scheduled for the CERTAIN items: class/group type: 853/850/200
      *  ie.. boneless sirloins
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
      * Rtv PA Shipdate-21+SunRT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0001           Company Number
     C                     Z-ADDP2JEDT    WL0002           Post to G/L Dat
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    P4MWTX    P      Generic Heading
     C                     MOVELWL0004    P4MXTX    P      Generic Heading
     C                     MOVELWL0005    P4MYTX    P      Generic Heading
     C                     MOVELWL0006    P4MZTX    P      Generic Heading
     C                     MOVELWL0007    P4M0TX    P      Generic Heading
     C                     MOVELWL0008    P4M1TX    P      Generic Heading
     C                     MOVELWL0009    P4M2TX    P      Generic Heading
     C                     MOVELWL0010    P4M3TX    P      Generic Heading
     C                     MOVELWL0011    P4M4TX    P      Generic Heading
     C                     MOVELWL0012    P4M5TX    P      Generic Heading
     C                     MOVELWL0013    P4M6TX    P      Generic Heading
     C                     MOVELWL0014    P4M7TX    P      Generic Heading
     C                     MOVELWL0015    P4M8TX    P      Generic Heading
     C                     MOVELWL0016    P4M9TX    P      Generic Heading
     C                     MOVELWL0017    P4Y5TX    P      Generic Heading
     C                     MOVELWL0018    P4Y6TX    P      Generic Heading
     C                     Z-ADDWL0019    YL0001           Avail Ship Date
     C                     Z-ADDWL0020    YL0002           Avail Ship Date
     C                     Z-ADDWL0021    YL0003           Avail Ship Date
     C                     Z-ADDWL0022    YL0004           Avail Ship Date
     C                     Z-ADDWL0023    YL0005           Avail Ship Date
     C                     Z-ADDWL0024    YL0006           Avail Ship Date
     C                     Z-ADDWL0025    YL0007           Avail Ship Date
     C                     Z-ADDWL0026    YL0008           Avail Ship Date
     C                     Z-ADDWL0027    YL0009           Avail Ship Date
     C                     Z-ADDWL0028    YL0010           Avail Ship Date
     C                     Z-ADDWL0029    YL0011           Avail Ship Date
     C                     Z-ADDWL0030    YL0012           Avail Ship Date
     C                     Z-ADDWL0031    YL0013           Avail Ship Date
     C                     Z-ADDWL0032    YL0014           Avail Ship Date
     C                     Z-ADDWL0033    YL0015           Avail Ship Date
     C                     Z-ADDWL0034    YL0016           Avail Ship Date
     C                     Z-ADDWL0035    YL0017           Avail Ship Date
     C                     Z-ADDWL0036    YL0018           Avail Ship Date
     C                     Z-ADDWL0037    YL0019           Avail Ship Date
     C                     Z-ADDWL0038    YL0020           Avail Ship Date
     C                     Z-ADDWL0039    YL0021           Avail Ship Date
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
