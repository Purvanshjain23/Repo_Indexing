// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDR3DFR
// ?Date: 14.08.2025 Time: 03:32:52
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?RMC PFS019 9/12/06 age code: chg 90 days to 120
EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('P/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize subfile control

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Item_Description);
PARAMETER(WRK.Description_Line_Two);
PARAMETER(WRK.UOM_Primary);
PARAMETER(WRK.UOM_Second);
PARAMETER(WRK.UOM_Third);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Warehouse          RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1100960;
PARAMETER(CTL.Warehouse_Code);
PARAMETER(CTL.Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


//?USER: Initialize subfile record from DBF record

CASE;

// IF DB1.Order Secondary Line Seq is GT 1
IF DB1.Order_Secondary_Line_Seq > 1;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Load/Load Status   RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1441185;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(WRK.Load_Status);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 // PAR.Load Status = CND.*Blank
 PAR.Load_Status = *BLANK;

 //?USER: Process Data record

 CASE;

 // IF DB1.Header Status is Confirmed & Complete
 IF DB1.Header_Status = 'C'/'R';

 // PAR.Load Status = CND.Lock
 PAR.Load_Status = 'L';

 // IF DB1.Load ID NE WRK.ZERO
 IF DB1.Load_ID <> WRK.ZERO;

 EXECUTE FUNCTION(RTV Load Status        RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1297640;
 PARAMETER(DB1.Load_ID);
 PARAMETER(PAR.Load_Status);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  // PGM.*Return code = CND.*Record already exists
  PGM.*Return_code = 'Y2U0003';

  MOVE *ALL (To: PAR From: DB1);

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Load Status = CND.*Blank
 PAR.Load_Status = *BLANK;

 ENDIF;

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


//?Can't be on a locked load
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

CASE;

// IF WRK.Load Status is Locked thru Invoiced
IF WRK.Load_Status = 'I'/'L'/'S';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// RCD.USR Age Code = DB1.Age Code
RCD.USR_Age_Code = DB1.Age_Code;

EXECUTE FUNCTION(RTV Ship to Name,Holds RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1440133;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Ship_To_Name);
PARAMETER(RCD.Order_in_Use);
PARAMETER(RCD.Credit_Hold);
PARAMETER(RCD.Production_Hold);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// PAR.USR Update Flag = CND.No
PAR.USR_Update_Flag = *BLANK;

ENDIF;

//?Can't be on a locked load
// IF *OTHERWISE
IF *OTHERWISE;

//?order header doesn't exist
// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Item_Description);
PARAMETER(WRK.Description_Line_Two);
PARAMETER(WRK.UOM_Primary);
PARAMETER(WRK.UOM_Second);
PARAMETER(WRK.UOM_Third);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Warehouse          RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1100960;
PARAMETER(CTL.Warehouse_Code);
PARAMETER(CTL.Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

//?USER: Process subfile record (Pre-confirm)

EXECUTE FUNCTION(RTV Ship to Name,Holds RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1440133;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Ship_To_Name);
PARAMETER(RCD.Order_in_Use);
PARAMETER(RCD.Credit_Hold);
PARAMETER(RCD.Production_Hold);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF RCD.Order in Use is yes
IF RCD.Order_in_Use = 'Y';

// Send error message - 'Order &1 is in use by another user'
ERROR(USR0508);
MSGPARM(RCD.Order_Number);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

CASE;

// IF RCD.USR Age Code EQ WRK.BLANK
IF RCD.USR_Age_Code = WRK.BLANK;

// RCD.USR Age Code = RCD.Age Code
RCD.USR_Age_Code = RCD.Age_Code;

ENDIF;

//?Set up Age Code # days
CASE;

// IF RCD.USR Age Code is 1 Day
IF RCD.USR_Age_Code = 'A';

// PAR.Aging Day = CON.1
PAR.Aging_Day = 1;

//?Set up Age Code # days
// IF RCD.USR Age Code is 2 Day
IF RCD.USR_Age_Code = 'B';

// PAR.Aging Day = CON.2
PAR.Aging_Day = 2;

//?Set up Age Code # days
// IF RCD.USR Age Code is 3 Day
IF RCD.USR_Age_Code = 'C';

// PAR.Aging Day = CON.3
PAR.Aging_Day = 3;

//?Set up Age Code # days
// IF RCD.USR Age Code is 4 Day
IF RCD.USR_Age_Code = 'D';

// PAR.Aging Day = CON.4
PAR.Aging_Day = 4;

//?Set up Age Code # days
// IF RCD.USR Age Code is 5 Day
IF RCD.USR_Age_Code = 'E';

// PAR.Aging Day = CON.5
PAR.Aging_Day = 5;

//?Set up Age Code # days
// IF RCD.USR Age Code is 6 Day
IF RCD.USR_Age_Code = 'F';

// PAR.Aging Day = CON.6
PAR.Aging_Day = 6;

//?Set up Age Code # days
// IF RCD.USR Age Code is 7 Day
IF RCD.USR_Age_Code = 'G';

// PAR.Aging Day = CON.7
PAR.Aging_Day = 7;

//?Set up Age Code # days
// IF RCD.USR Age Code is 7 Days to 120 Days
IF RCD.USR_Age_Code = 'H';

// PAR.Aging Day = CON.99999
PAR.Aging_Day = 99999;

//?Set up Age Code # days
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Aging Day = CON.*ZERO
PAR.Aging_Day = *ZERO;

ENDIF;

//?Validate Age Code
CASE;

// IF RCD.USR Age Code EQ WRK.BLANK
IF RCD.USR_Age_Code = WRK.BLANK;

// Send error message - 'Value Required'
ERROR(USR1852);
MSGPARM(RCD.USR_Age_Code);

//?Validate Age Code
// IF PAR.Chilling Time USR EQ WRK.ZERO
IF PAR.Chilling_Time_USR = WRK.ZERO;

//?chilling time usr is the highest chill time for any substituting item
//?Validate Age Code
// IF PAR.Chilling Time USR GT PAR.Aging Day
IF PAR.Chilling_Time_USR > PAR.Aging_Day;

// Send error message - 'The Chill Time for any substitute item cannot exceed the days for the Age C
ERROR(USR2402);
MSGPARM(RCD.USR_Age_Code);

ENDIF;

//?USER: Process subfile control (Post-confirm)

// Send status message - 'Processing...'
MESSAGE(USR2303 *STATUS);

//?USER: Process subfile record (Post-confirm)

CASE;

// IF RCD.USR Quantity Subeded NE WRK.ZERO
IF RCD.USR_Quantity_Subeded <> WRK.ZERO;

// PAR.USR Update Flag = CND.Yes
PAR.USR_Update_Flag = 'Y';

// WRK.USR Quantity to Confirm = RCD.USR Quantity Subeded
WRK.USR_Quantity_to_Confirm = RCD.USR_Quantity_Subeded;

// Call program ZZWW Substitutions ArraXF.
CALL PROGRAM(ZZWW Substitutions ArraXF) ('PDSIXFR');
PARAMETER('UP');
PARAMETER(CTL.Company_Number);
PARAMETER(*ZERO);
PARAMETER(CTL.Warehouse_Code);
PARAMETER(*ZERO);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER(RCD.Age_Code);
PARAMETER(RCD.Item_Age_Days);
PARAMETER(RCD.Production_Ovr_AgeDte_Fr);
PARAMETER(RCD.Production_Ovr_AgeDte_To);
PARAMETER(WRK.USR_Quantity_to_Confirm);
PARAMETER(WRK.Chilling_Time_USR);

// Call program EDT Post Open Orders   XF.
CALL PROGRAM(EDT Post Open Orders   XF) ('PDHRXFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(WRK.Unused_Parm_Value_USR);
PARAMETER(WRK.Order_Weight_Total);
PARAMETER('OE');

// RCD.USR Quantity Subeded = CON.*ZERO
RCD.USR_Quantity_Subeded = *ZERO;

EXECUTE FUNCTION(Rtv Hdr/PrdHld/Crd St RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1410177;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(WRK.Header_Status);
PARAMETER(WRK.Credit_Hold);
PARAMETER(WRK.Production_Hold);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF WRK.Header Status is Hold
IF WRK.Header_Status = 'H';

//?Production hold
CASE;

// IF WRK.Production Hold is Yes
IF WRK.Production_Hold = 'Y';

// Send completion message - 'Order &1 put on Production Hold.'
MESSAGE(USR2032 *COMPLETION);
MSGPARM(RCD.Order_Number);

ENDIF;

//?Credit hold
CASE;

// IF WRK.Credit Hold is Yes
IF WRK.Credit_Hold = 'Y';

// Send completion message - 'Order &1 put on Credit Hold.'
MESSAGE(USR2033 *COMPLETION);
MSGPARM(RCD.Order_Number);

ENDIF;

ENDIF;

ENDIF;

//?USER: Final processing (Post-confirm)

CASE;

// IF PAR.USR Update Flag is Yes
IF PAR.USR_Update_Flag = 'Y';

PGM.*Return_code = *BLANK;

RETURN;

ENDIF;

