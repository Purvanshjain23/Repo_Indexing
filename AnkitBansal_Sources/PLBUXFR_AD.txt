// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLBUXFR
// ?Date: 14.08.2025 Time: 02:53:39
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification History
DO;

//?12/15/2021 RMC SDN616 - leave  input date parm 7.0
//?12/14/2021 RMC SDN616 - CHANGE input date parm to 15.5, then move to 7.0
//?             Impl project S82566
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
//? 4/17/2017 JBB C9426 - Add Ref parameters to DSD
//?                       Recompiled for new Ref 1, Ref 2, and Ref
//?                       Status fields on update to BOL Reference.
ENDDO;

EXECUTE FUNCTION(Rtv DSH Status        RT) TYPE(RTVOBJ) FILE(PLADCPP)           AB1247374;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.DSH_Kill_Date);
PARAMETER(PAR.DSH_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Quit if the Schedule is closed.
CASE;

// IF PAR.DSH Status is 10=Schedule Closed
IF PAR.DSH_Status = '10';

QUIT;

ENDIF;

//?-------------------------------------------------------------------------
//?Called from: HP277CL when it is submitted from the WEB.
//?Read DS Detail by Kill date, Select internal, HPE Post Sts n=P
//? 1) If HPE Post Status = N,R        (Not posted or Repost)
//?     If Not Posted or (Repost and BOL = 0): Crt BOL
//?     If Repost: Update BOL Pln Head Delv= Sched Delv Head
//?     Both: Set HPE Post Sts to "P" if no errors, or "E" if errors
//? 2) If HPE Post Status = D           (Delete=Clear Slot)
//?  Delv Sched Dtl:  Zero-out BO/Load, farm site, building, room,sire,
//?  group, sched delv head,tranp office,trucker,driver,load crew
//?  load type,full/split,movement, mv prnt,schd route start pt/dt/tm,
//?  farm arrvl dt/tm, farm deprt dt/tm,prod,loc,bo,bol,srces
//?  If Split, then Delete Delv Schedule Splits
//?     Delete Buy Order Load from HPE Buy Order Load
//?     Set HPS Post Sts to "N" for not posted
//?     Set HPE Post Sts to "N" for not posted
//?-------------------------------------------------------------------------
EXECUTE FUNCTION(Rtv Exc post from WEB RT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1247380;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.DSH_Kill_Date);
{
 //?USER: Initialize routine

 //?E2423 Mtech Live or Not Live *** Interfaces to HPS ***
 //?C9426 JBB 4/17/17 - Accept new REF parameters on BOL update
 //?Get the MTech Live Yes or No
 DO;

 //?Mtech Live Yes or no
 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER('MTECHLIVE');
 PARAMETER(WRK.System_Value_Alpha_USR);

 // LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
 LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

 ENDDO;

 CASE;

 // IF LCL.MTech Live Yes or No is Yes MTech is Live
 IF LCL.MTech_Live_Yes_or_No = 'Y';

 QUIT;

 //?E2423 Mtech Live will not use this HPS program
 ENDIF;

 //?USER: Process Data record

 //?D=Clear Slot  | N=Not Posted Yet  |  R=Repost Slot
 CASE;

 // IF DB1.DSD HPE Post Status is Deleted
 IF DB1.DSD_HPE_Post_Status = 'D';

 //?Clear slot
 //?Delete buy order data
 CASE;

 // IF DB1.BOH Buy Order Number is NE Zero
 IF DB1.BOH_Buy_Order_Number <> *ZERO;

 EXECUTE FUNCTION(Rtv/Dlt BOL f/DSD     RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1245616;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Buy Order Detail  DL) TYPE(DLTOBJ) FILE(PKAXCPP)           AB1100532;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
 }

 ENDIF;

 //?Delete split
 CASE;

 // IF DB1.DSD Full/Split Load is Split
 IF DB1.DSD_Full_Split_Load = 'S';

 EXECUTE FUNCTION(Rtv Del DSS           RT) TYPE(RTVOBJ) FILE(PLAGCPP)           AB1247815;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DSD_Delivery_Date);
 PARAMETER(DB1.DSD_Delivery_Time);
 PARAMETER(DB1.DSD_Delivery_Time_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Delv Sched Split  DL) TYPE(DLTOBJ) FILE(PLAGCPP)           AB1244778;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.DSH_Kill_Date);
  PARAMETER(DB1.DSD_Delivery_Date);
  PARAMETER(DB1.DSD_Delivery_Time);
  PARAMETER(DB1.DSD_Delivery_Time_Seq);
  PARAMETER(DB1.DSS_Split_Sequence);
 }

 ENDIF;

 EXECUTE FUNCTION(Chg DSD Clear Slot    CH) TYPE(CHGOBJ) FILE(PLAECPP)           AB1245957;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DSD_Delivery_Date);
 PARAMETER(DB1.DSD_Delivery_Time);
 PARAMETER(DB1.DSD_Delivery_Time_Seq);
 PARAMETER(DB1.DSD_Scheduled_Hour);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(DB1.DSD_Unused_Head);
 PARAMETER(*ZERO);
 PARAMETER(DB1.DSD_Scheduled_Kill_Head);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_Usr_2);
 PARAMETER('F');
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER('N');
 PARAMETER(WRK.Blank_Usr_2);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.DSD_Receiving_Shift);
 PARAMETER(DB1.DSD_Kill_Shift);
 PARAMETER(DB1.DSD_BOL_Kill_Shift);
 PARAMETER('N');
 PARAMETER('N');
 PARAMETER('O');
 PARAMETER(WRK.Blank_Usr_2);
 PARAMETER(DB1.DSD_Transfer_Sts);
 PARAMETER(DB1.DSD_Unused_Date);
 PARAMETER(DB1.DSD_Unused_Time);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*blank);
 PARAMETER(*blank);
 PARAMETER(*BLANK);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?D=Clear Slot  | N=Not Posted Yet  |  R=Repost Slot
 // IF DB1.DSD HPE Post Status is Not Posted
 IF DB1.DSD_HPE_Post_Status = 'N';

 // OR DB1.DSD HPE Post Status is Repost
 OR ( DB1.DSD_HPE_Post_Status = 'R';

 // AND DB1.BOH Buy Order Number is EQ Zero
 AND DB1.BOH_Buy_Order_Number = *ZERO );

 //?Create BOL, Chg HPE Post Sts
 CASE;

 // IF DB1.DSD Movement Number NE WRK.Zero USR
 IF DB1.DSD_Movement_Number <> WRK.Zero_USR;

 //? 4/17/17 JBB C9426 - New reference parameters accepted
 // Call program Crt BOH/BOL f/DelvSch XF.
 CALL PROGRAM(Crt BOH/BOL f/DelvSch XF) ('PLBEXFR');
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DSD_Delivery_Date);
 PARAMETER(DB1.DSD_Delivery_Time);
 PARAMETER(DB1.DSD_Scheduled_Delv_Head);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(LCL.BOH_Company_Number);
 PARAMETER(LCL.BOH_Buy_Order_Number);
 PARAMETER(LCL.BOL_Load_Number);
 PARAMETER(DB1.DSD_PRD_Srv_Batch_ID);
 PARAMETER(DB1.DSD_PRD_Srv_Sched_ID);
 PARAMETER(DB1.DSD_Ref_1);
 PARAMETER(DB1.DSD_Ref_2);
 PARAMETER(DB1.DSD_Ref_Status);
 PARAMETER('N');

 EXECUTE FUNCTION(Chg Delv Sched Dtl    CH) TYPE(CHGOBJ) FILE(PLAECPP)           AB1244728;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DSD_Delivery_Date);
 PARAMETER(DB1.DSD_Delivery_Time);
 PARAMETER(DB1.DSD_Delivery_Time_Seq);
 PARAMETER(DB1.DSD_Scheduled_Hour);
 PARAMETER(DB1.DSD_Farm_Site_Code);
 PARAMETER(DB1.DSD_Building);
 PARAMETER(DB1.DSD_Room);
 PARAMETER(DB1.DSD_Sire_Line_Code);
 PARAMETER(DB1.DSD_Hog_Group_Code);
 PARAMETER(DB1.DSD_Unused_Head);
 PARAMETER(DB1.DSD_Scheduled_Delv_Head);
 PARAMETER(DB1.DSD_Scheduled_Kill_Head);
 PARAMETER(DB1.DSD_Transportation_Office);
 PARAMETER(DB1.DSD_Trucker_Code_HPS);
 PARAMETER(DB1.DSD_Driver);
 PARAMETER(DB1.DSD_Loading_Crew);
 PARAMETER(DB1.CHR_Code);
 PARAMETER(DB1.DSD_Load_Type);
 PARAMETER(DB1.DSD_Full_Split_Load);
 PARAMETER(DB1.DSD_Movement_Number);
 PARAMETER(DB1.DSD_Truck_ID);
 PARAMETER(DB1.DSD_Trailer_ID);
 PARAMETER(DB1.DSD_Movement_Printed);
 PARAMETER(DB1.DSD_Sched_Route_Start_Pnt);
 PARAMETER(DB1.DSD_Sched_Route_Start_Dte);
 PARAMETER(DB1.DSD_Sched_Route_Start_Tim);
 PARAMETER(DB1.DSD_Sch_Farm_Arrival_Date);
 PARAMETER(DB1.DSD_Sch_Farm_Arrival_Time);
 PARAMETER(DB1.DSD_Sch_Start_Load_Date);
 PARAMETER(DB1.DSD_Sch_Start_Load_Time);
 PARAMETER(DB1.DSD_Receiving_Shift);
 PARAMETER(DB1.DSD_Kill_Shift);
 PARAMETER(DB1.DSD_BOL_Kill_Shift);
 PARAMETER(DB1.DSD_HPS_Post_Status);
 PARAMETER('P');
 PARAMETER(DB1.DSD_Lock_Status);
 PARAMETER(DB1.DSD_Source_Type);
 PARAMETER(DB1.DSD_Transfer_Sts);
 PARAMETER(DB1.DSD_Unused_Date);
 PARAMETER(DB1.DSD_Unused_Time);
 PARAMETER(DB1.SR_Source_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(LCL.BOH_Company_Number);
 PARAMETER(LCL.BOH_Buy_Order_Number);
 PARAMETER(LCL.BOL_Load_Number);
 PARAMETER(DB1.DSD_PRD_Srv_Batch_ID);
 PARAMETER(DB1.DSD_PRD_Srv_Sched_ID);
 PARAMETER(DB1.DSD_Ref_1);
 PARAMETER(DB1.DSD_Ref_2);
 PARAMETER(DB1.DSD_Ref_Status);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

 //?D=Clear Slot  | N=Not Posted Yet  |  R=Repost Slot
 // IF DB1.DSD HPE Post Status is Repost
 IF DB1.DSD_HPE_Post_Status = 'R';

 //?Change Plan head delv in BOL, Chg HPE Post Sts
 EXECUTE FUNCTION(Rtv Chg Plan Hd Delv  RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1247386;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.DSD_Scheduled_Delv_Head);
 PARAMETER(DB1.DSD_Movement_Number);
 {
  //?USER: Process Data record

  //?ALSO MOVE THE MOVEMENT NUMBER
  EXECUTE FUNCTION(Chg Plan Hd Delv      CH) TYPE(CHGOBJ) FILE(PKAXCPP)           AB1247381;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(PAR.BOL_Pln_Head_Delv);
  PARAMETER(PAR.DSD_Movement_Number);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 EXECUTE FUNCTION(Chg Delv Sched Dtl    CH) TYPE(CHGOBJ) FILE(PLAECPP)           AB1244728;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DSD_Delivery_Date);
 PARAMETER(DB1.DSD_Delivery_Time);
 PARAMETER(DB1.DSD_Delivery_Time_Seq);
 PARAMETER(DB1.DSD_Scheduled_Hour);
 PARAMETER(DB1.DSD_Farm_Site_Code);
 PARAMETER(DB1.DSD_Building);
 PARAMETER(DB1.DSD_Room);
 PARAMETER(DB1.DSD_Sire_Line_Code);
 PARAMETER(DB1.DSD_Hog_Group_Code);
 PARAMETER(DB1.DSD_Unused_Head);
 PARAMETER(DB1.DSD_Scheduled_Delv_Head);
 PARAMETER(DB1.DSD_Scheduled_Kill_Head);
 PARAMETER(DB1.DSD_Transportation_Office);
 PARAMETER(DB1.DSD_Trucker_Code_HPS);
 PARAMETER(DB1.DSD_Driver);
 PARAMETER(DB1.DSD_Loading_Crew);
 PARAMETER(DB1.CHR_Code);
 PARAMETER(DB1.DSD_Load_Type);
 PARAMETER(DB1.DSD_Full_Split_Load);
 PARAMETER(DB1.DSD_Movement_Number);
 PARAMETER(DB1.DSD_Truck_ID);
 PARAMETER(DB1.DSD_Trailer_ID);
 PARAMETER(DB1.DSD_Movement_Printed);
 PARAMETER(DB1.DSD_Sched_Route_Start_Pnt);
 PARAMETER(DB1.DSD_Sched_Route_Start_Dte);
 PARAMETER(DB1.DSD_Sched_Route_Start_Tim);
 PARAMETER(DB1.DSD_Sch_Farm_Arrival_Date);
 PARAMETER(DB1.DSD_Sch_Farm_Arrival_Time);
 PARAMETER(DB1.DSD_Sch_Start_Load_Date);
 PARAMETER(DB1.DSD_Sch_Start_Load_Time);
 PARAMETER(DB1.DSD_Receiving_Shift);
 PARAMETER(DB1.DSD_Kill_Shift);
 PARAMETER(DB1.DSD_BOL_Kill_Shift);
 PARAMETER(DB1.DSD_HPS_Post_Status);
 PARAMETER('P');
 PARAMETER(DB1.DSD_Lock_Status);
 PARAMETER(DB1.DSD_Source_Type);
 PARAMETER(DB1.DSD_Transfer_Sts);
 PARAMETER(DB1.DSD_Unused_Date);
 PARAMETER(DB1.DSD_Unused_Time);
 PARAMETER(DB1.SR_Source_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.DSD_PRD_Srv_Batch_ID);
 PARAMETER(DB1.DSD_PRD_Srv_Sched_ID);
 PARAMETER(DB1.DSD_Ref_1);
 PARAMETER(DB1.DSD_Ref_2);
 PARAMETER(DB1.DSD_Ref_Status);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

}


