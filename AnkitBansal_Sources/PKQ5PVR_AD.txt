// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKQ5PVR
// ?Date: 14.08.2025 Time: 02:52:32
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?H16853 - ISE - 02/03/21 - Increased Buy Order length from 5 to 7.
//?                          Recompilation only.
EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

// PAR.Display Print Prompt  Usr = CND.Prompt is to be displayed
PAR.Display_Print_Prompt_Usr = 'Y';

CASE;

// IF JOB.*USER is Purva Patel
IF JOB.*USER = 'ISPPATE';

// OR JOB.*USER is Purva Patel Prod
OR JOB.*USER = 'ISPURVAP';

// LCL.Display Field Usr = CND.*Yes
LCL.Display_Field_Usr = *YES;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Display Field Usr = CND.*No
LCL.Display_Field_Usr = *NO;

ENDIF;

//?USER: Load screen

//?First Time Processing
CASE;

// IF WRK.First Time Flag Usr is Yes
IF WRK.First_Time_Flag_Usr = 'Y';

// DTL.BOH Company Number = PAR.CC Company Number
DTL.BOH_Company_Number = PAR.CC_Company_Number;

// WRK.First Time Flag Usr = CND.No
WRK.First_Time_Flag_Usr = 'N';

// DTL.PD Name = CON.*All
DTL.PD_Name = *All;

// DTL.Condition Name USR = CON.*All
DTL.Condition_Name_USR = *All;

// DTL.Condition Name 1 USR = CON.*All
DTL.Condition_Name_1_USR = *All;

// DTL.Include Market USR = CND.Yes
DTL.Include_Market_USR = 'Y';

// DTL.Condition Name 2 USR = Condition name of DTL.Include Market USR
DTL.Condition_Name_2_USR = RTVCND(DTL.Include_Market_USR);

// DTL.Include Subject USR = CND.Yes
DTL.Include_Subject_USR = 'Y';

// DTL.Condition Name 3 USR = Condition name of DTL.Include Subject USR
DTL.Condition_Name_3_USR = RTVCND(DTL.Include_Subject_USR);

// DTL.Include Resale Class USR = CND.No
DTL.Include_Resale_USR = 'N';

// DTL.Condition Name 4 USR = Condition name of DTL.Include Resale USR
DTL.Condition_Name_4_USR = RTVCND(DTL.Include_Resale_USR);

// DTL.Payment Data Type USR = LCL.*Factor 2
DTL.Payment_Data_Type_USR = LCL.*Factor_2;

// DTL.New Report by Date = CND.No
DTL.New_Report_by_Date = 'N';

// DTL.Condition Name 5 USR = Condition name of DTL.New Report by Date
DTL.Condition_Name_5_USR = RTVCND(DTL.New_Report_by_Date);

// DTL.Print Invalid Carcs USR = CND.No
DTL.Print_Invalid_Carcs_USR = 'N';

// DTL.Condition Name 6 USR = Condition name of DTL.Print Invalid Carcs USR
DTL.Condition_Name_6_USR = RTVCND(DTL.Print_Invalid_Carcs_USR);

// DTL.Create Outfile USR = CND.No
DTL.Create_Outfile_USR = 'N';

// DTL.Create OUTF EvlTrnVl USR = CND.No
DTL.Create_OUTF_EvlTrnVl_USR = 'N';

ENDIF;

// Call program Val Company Number    XF.
CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);

//?USER: Validate fields

//?Sel:  Producer
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

//?Producer
CASE;

// IF PGM.*Cursor field <IS> DTL.PD Producer Code
IF PGM.*Cursor_field = DTL.PD_Producer_Code;

// Call program Sel Producer          SR.
CALL PROGRAM(Sel Producer          SR) ('PKA1SRR');
PARAMETER(DTL.PD_Producer_Code);

ENDIF;

ENDIF;

//?Val:  Producer
CASE;

// IF DTL.PD Producer Code is Entered
IF DTL.PD_Producer_Code <> *BLANK;

EXECUTE FUNCTION(Val Prod Existance    RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1176016;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PD_Name);
PARAMETER(WRK.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF WRK.Record Found USR is Record Not Found
IF WRK.Record_Found_USR = 'N';

// Send error message - 'Producer not found.'
ERROR(PRK0009);

ENDIF;

ENDIF;

// DTL.Condition Name USR = Condition name of DTL.TH Payment Type
DTL.Condition_Name_USR = RTVCND(DTL.TH_Payment_Type);

// DTL.Condition Name 1 USR = Condition name of DTL.Variance Type USR
DTL.Condition_Name_1_USR = RTVCND(DTL.Variance_Type_USR);

// DTL.Condition Name 2 USR = Condition name of DTL.Include Market USR
DTL.Condition_Name_2_USR = RTVCND(DTL.Include_Market_USR);

// DTL.Condition Name 3 USR = Condition name of DTL.Include Subject USR
DTL.Condition_Name_3_USR = RTVCND(DTL.Include_Subject_USR);

// DTL.Condition Name 4 USR = Condition name of DTL.Include Resale USR
DTL.Condition_Name_4_USR = RTVCND(DTL.Include_Resale_USR);

// DTL.Condition Name 5 USR = Condition name of DTL.New Report by Date
DTL.Condition_Name_5_USR = RTVCND(DTL.New_Report_by_Date);

//?USER: User defined action

CASE;

// IF PAR.Display Print Prompt  Usr is Prompt is to be displayed
IF PAR.Display_Print_Prompt_Usr = 'Y';

// Call program Pmt Print Options Size XF.
CALL PROGRAM(Pmt Print Options Size XF) ('PDV8PVR');
PARAMETER('Hot Scale Upload Summary');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER('N');
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Oms_Application_Code);
PARAMETER(1);

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

//?Submit Report
CASE;

// IF DTL.New Report by Date is Yes
IF DTL.New_Report_by_Date = 'Y';

// LCL.Date From USR = DTL.Date From USR
LCL.Date_From_USR = DTL.Date_From_USR;

// LCL.Date To   USR = DTL.Date To   USR
LCL.Date_To_USR = DTL.Date_To_USR;

// DOW LCL.Date From USR LE LCL.Date To   USR
DOW LCL.Date_From_USR <= LCL.Date_To_USR;

// WRK.Date Alpha USR = CVTVAR(LCL.Date From USR)
WRK.Date_Alpha_USR = CVTVAR(LCL.Date_From_USR);

// WRK.Date Alpha Usr 2 = CVTVAR(LCL.Date From USR)
WRK.Date_Alpha_Usr_2 = CVTVAR(LCL.Date_From_USR);

// LCL.Job Name = CONCAT(CON.HSU,WRK.Date Alpha USR,CON.*ZERO)
LCL.Job_Name = 'HSU' + WRK.Date_Alpha_USR (*ZERO);

// Retrieve message - 'JOB(&1) jobq(&2) log(&3) hold(&4)'
PGM.*Sbmjob_override_string = RTVMSG(PRK0812);
PARAMETER(LCL.Job_Name);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('4 00 *NOLIST');
PARAMETER(*NO);

// Call program Prt Hot Scl Upl Summ  CL.
SBMJOB;
CALL PROGRAM(Prt Hot Scl Upl Summ  CL) ('PKQ4UPC');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(WRK.Date_Alpha_USR);
PARAMETER(WRK.Date_Alpha_Usr_2);
PARAMETER(DTL.TH_Payment_Type);
PARAMETER(DTL.Variance_Type_USR);
PARAMETER(DTL.Analysis_Type_USR);
PARAMETER(DTL.Include_Market_USR);
PARAMETER(DTL.Include_Subject_USR);
PARAMETER(DTL.Include_Resale_USR);
PARAMETER(DTL.Report_Type_Sum_Dtl_USR);
PARAMETER(DTL.Payment_Data_Type_USR);
PARAMETER(DTL.Create_OUTF_EvlTrnVl_USR);
PARAMETER(DTL.Print_Invalid_Carcs_USR);
PARAMETER(DTL.Create_Outfile_USR);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.Oms_System_Value_Alpha);
SBMJOBEND;

// LCL.Date From USR = LCL.Date From USR + CON.1 *DAYS
LCL.Date_From_USR = DATEINCR(LCL.Date_From_USR 1 'DY' 1111111 'NONE' 'N' 1);

ENDDO;

//?Submit Report
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Date Alpha USR = CVTVAR(DTL.Date From USR)
WRK.Date_Alpha_USR = CVTVAR(DTL.Date_From_USR);

// WRK.Date Alpha Usr 2 = CVTVAR(DTL.Date To   USR)
WRK.Date_Alpha_Usr_2 = CVTVAR(DTL.Date_To_USR);

// Retrieve message - 'JOB(&1) jobq(&2) log(&3) hold(&4)'
PGM.*Sbmjob_override_string = RTVMSG(PRK0812);
PARAMETER('PRTHTUPLSM');
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('4 00 *NOLIST');
PARAMETER(*NO);

// Call program Prt Hot Scl Upl Summ  CL.
SBMJOB;
CALL PROGRAM(Prt Hot Scl Upl Summ  CL) ('PKQ4UPC');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(WRK.Date_Alpha_USR);
PARAMETER(WRK.Date_Alpha_Usr_2);
PARAMETER(DTL.TH_Payment_Type);
PARAMETER(DTL.Variance_Type_USR);
PARAMETER(DTL.Analysis_Type_USR);
PARAMETER(DTL.Include_Market_USR);
PARAMETER(DTL.Include_Subject_USR);
PARAMETER(DTL.Include_Resale_USR);
PARAMETER(DTL.Report_Type_Sum_Dtl_USR);
PARAMETER(DTL.Payment_Data_Type_USR);
PARAMETER(DTL.Create_OUTF_EvlTrnVl_USR);
PARAMETER(DTL.Print_Invalid_Carcs_USR);
PARAMETER(DTL.Create_Outfile_USR);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.Oms_System_Value_Alpha);
SBMJOBEND;

ENDIF;

ENDIF;

ENDIF;

// DTL.Payment Data Type USR = LCL.Payment Data Type USR
DTL.Payment_Data_Type_USR = LCL.Payment_Data_Type_USR;

