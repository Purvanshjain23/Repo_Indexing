// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNOUDFR
// ?Date: 14.08.2025 Time: 03:45:54
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('OMS');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// LCL.First Time Flag = CND.Yes
LCL.First_Time_Flag = 'Y';

//?USER: Initialize subfile control

CASE;

// IF LCL.First Time Flag is Yes
IF LCL.First_Time_Flag = 'Y';

// CTL.Company Number = PAR.Company Number
CTL.Company_Number = PAR.Company_Number;

// LCL.First Time Flag = CND.NO
LCL.First_Time_Flag = 'N';

ENDIF;

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(CTL.Company_Name_DRV);
PARAMETER(CTL.Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// LCL.Quantity 7.0 USR = CTL.Quantity 7.0 USR
LCL.Quantity_7_0_USR = CTL.Quantity_7_0_USR;

//?USER: Initialize subfile record from DBF record

CASE;

// IF RCD.COA Ref Load Id is GT Zero
IF RCD.COA_Ref_Load_Id > *ZERO;

EXECUTE FUNCTION(RTV First Order on LoadRT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1464005;
PARAMETER(RCD.COA_Ref_Load_Id);
PARAMETER(RCD.Order_Number_Ref);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 QUIT;

}


EXECUTE FUNCTION(RTV Purchase Order     RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1355939;
PARAMETER(RCD.COA_Shipping_Company);
PARAMETER(RCD.Order_Number_Ref);
PARAMETER(RCD.Customer_Purchase_Order_#);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

EXECUTE FUNCTION(RTV HPB Meter Net Gal RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC1971568;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER(RCD.Case_Sequence_Number);
PARAMETER(RCD.Quantity_7_0_USR);
PARAMETER(LCL.HPB_Meter_Total_Gallon);
PARAMETER(LCL.HPB_Meter_Net_Weight);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF RCD.RFS Transaction Type is Buy
IF RCD.RFS_Transaction_Type = 'BUY';

// RCD.Quantity 7.0 USR = RCD.COA BHR Net Galls to Sell
RCD.Quantity_7_0_USR = RCD.COA_BHR_Net_Galls_to_Sell;

//?W104274 DN 08/08/22-Replaced to Get SE Marketing Co from Co Values File.
//?W104274 DN 08/08/22-Get SE Market Co from Co Values Instead of Hard Code.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Numeric Value 2    RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC2169947;
PARAMETER(RCD.Company_Number);
PARAMETER('HPBMKT');
PARAMETER(LCL.Company_Number);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Order for BUY     RT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2000023;
PARAMETER(LCL.Company_Number);
PARAMETER(RCD.COA_ULSD_Company_#);
PARAMETER(RCD.COA_Batch_Number);
PARAMETER(RCD.COA_Batch_Header_RIN_Seq);
PARAMETER(RCD.Order_Number_Ref);
PARAMETER(NLL.Order_Sequence_Number);
PARAMETER(NLL.Order_Secondary_Line_Seq);
PARAMETER(NLL.Case_Sequence_Number);
PARAMETER(RCD.COA_Ref_Load_Id);
PARAMETER(NLL.COA_RIN_Gallons_Sold);
PARAMETER(RCD.Customer_Purchase_Order_#);
PARAMETER(RCD.COA_Shipping_Company);
{
 //?USER: Processing if Data record not found

 // PAR.Order Number = CON.*ZERO
 PAR.Order_Number = *ZERO;

 //?USER: Process Data record

 //?Get 1st ord ... s/only be 1 order for this ulsd/batch/seq
 CASE;

 // IF DB1.Order Number is Greater then zero
 IF DB1.Order_Number > *ZERO;

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

 ENDIF;

}


ENDIF;

ENDIF;

CASE;

// IF LCL.COA RIN SoldFull/Splt Sts is Asterisk
IF LCL.COA_RIN_SoldFull_Splt_Sts = *;

CASE;

// IF RCD.COA RIN SoldFull/Splt Sts is Blank
IF RCD.COA_RIN_SoldFull_Splt_Sts = *BLANK;

// OR RCD.COA RIN SoldFull/Splt Sts is Split
OR RCD.COA_RIN_SoldFull_Splt_Sts = 'S';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

CASE;

// IF CTL.Quantity 7.0 USR is Greater than Zero
IF CTL.Quantity_7_0_USR > *ZERO;

CASE;

// IF RCD.Quantity 7.0 USR GE CTL.Quantity 7.0 USR
IF RCD.Quantity_7_0_USR >= CTL.Quantity_7_0_USR;

// AND RCD.RFS Transaction Type is Buy Trans Types
AND RCD.RFS_Transaction_Type = 'BUY'/'TRB';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

//?F04=Prompt
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> CTL.COA RIN Trans Partner Id
IF PGM.*Cursor_field = CTL.COA_RIN_Trans_Partner_Id;

// Call program Sel HPB Trans Partner SL.
CALL PROGRAM(Sel HPB Trans Partner SL) ('PNM1SRR');
PARAMETER(CTL.Company_Number);
PARAMETER(LCL.Ship_To_Customer);
PARAMETER(CTL.COA_RIN_Trans_Partner_Id);

ENDIF;

ENDIF;

//?F21=Print sumtin
CASE;

// IF CTL.*CMD key is *Print List
IF CTL.*CMD_key = '21';

CASE;

// IF CTL.COA Batch Number is Greater than zero
IF CTL.COA_Batch_Number > *ZERO;

// OR CTL.COA RIN Transaction Date is Entered
OR CTL.COA_RIN_Transaction_Date <> *ZERO;

// OR CTL.COA Ship To Warehouse is Not Blanks
OR CTL.COA_Ship_To_Warehouse <> *BLANK;

// OR CTL.RFS Transaction Type is *ALL values
OR CTL.RFS_Transaction_Type = 'SEL'/'RET'/'BUY'/'SEP'/'TRB';

// OR CTL.COA RIN SoldFull/Splt Sts is Asterisk
OR CTL.COA_RIN_SoldFull_Splt_Sts = *;

// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// Call program PMT Prt Opt w/PSz SHR  PV.
CALL PROGRAM(PMT Prt Opt w/PSz SHR  PV) ('PDV8PVR');
PARAMETER('Print RINS per Batch');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(LCL.PRT_Night_Queue);
PARAMETER('OMS');
PARAMETER(*MISSING);
PARAMETER(1);

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Company Number Pass   USR = CTL.Company Number
PAR.Company_Number_Pass_USR = CTL.Company_Number;

// PAR.Numeric Value 1 USR = CTL.COA Batch Number
PAR.Numeric_Value_1_USR = CTL.COA_Batch_Number;

// PAR.Date 1          PASS  USR = CTL.COA RIN Transaction Date
PAR.Date_1_PASS_USR = CTL.COA_RIN_Transaction_Date;

// LCL.COA RIN SoldFull/Splt Sts = CTL.COA RIN SoldFull/Splt Sts
LCL.COA_RIN_SoldFull_Splt_Sts = CTL.COA_RIN_SoldFull_Splt_Sts;

// LCL.Order Number 1  PASS  USR = CTL.Quantity 7.0 USR
LCL.Order_Number_1_PASS_USR = CTL.Quantity_7_0_USR;

// Call program Zzz Prt Rins per Batch UP.
SBMJOB;
CALL PROGRAM(Zzz Prt Rins per Batch UP) ('PMRKUPR');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(CTL.COA_ULSD_Company_#);
PARAMETER(PAR.Numeric_Value_1_USR);
PARAMETER(*ZERO);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.Date_1_PASS_USR);
PARAMETER(LCL.Order_Number_1_PASS_USR);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(CTL.COA_Ship_To_Warehouse);
PARAMETER(LCL.COA_RIN_SoldFull_Splt_Sts);
PARAMETER(CTL.RFS_Transaction_Type);
SBMJOBOVR JOB(HPBATCHRIN);
SBMJOBOVR JOBD(*USRPRF);
SBMJOBEND;

// Send information message - 'Print has been submitted.'
MESSAGE(USR1832 *INFO);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Batch/Trans Dt/or Ship to Whse must be entered for print'
ERROR(USR4347);

ENDIF;

ENDIF;

//?F22=email sumtin
CASE;

// IF CTL.*CMD key is CF22
IF CTL.*CMD_key = '22';

//?W104274 DN 08/08/22-Added Co 376 Hugoton SE Marketing.
CASE;

// IF CTL.Company Number is St Joseph HPB Marketing
IF CTL.Company_Number = 374;

// OR CTL.Company Number is HPB Biodiesel
OR CTL.Company_Number = 369;

// OR CTL.Company Number is Hugoton SE Marketing
OR CTL.Company_Number = 376;

CASE;

// IF CTL.COA Batch Number is Greater than zero
IF CTL.COA_Batch_Number > *ZERO;

// OR CTL.COA RIN Transaction Date is Entered
OR CTL.COA_RIN_Transaction_Date <> *ZERO;

// OR CTL.COA Ship To Warehouse is Not Blanks
OR CTL.COA_Ship_To_Warehouse <> *BLANK;

// OR CTL.RFS Transaction Type is *ALL values
OR CTL.RFS_Transaction_Type = 'SEL'/'RET'/'BUY'/'SEP'/'TRB';

// OR CTL.COA RIN SoldFull/Splt Sts is Asterisk
OR CTL.COA_RIN_SoldFull_Splt_Sts = *;

// OR CTL.Quantity 7.0 USR is Greater than Zero
OR CTL.Quantity_7_0_USR > *ZERO;

// Call program Pmt Enter Email Addr  PV.
CALL PROGRAM(Pmt Enter Email Addr  PV) ('POWGPVR');
PARAMETER(LCL.Email_Address);

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// OR LCL.Email Address is Blank
OR LCL.Email_Address = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.COA RIN SoldFull/Splt Sts = CTL.COA RIN SoldFull/Splt Sts
LCL.COA_RIN_SoldFull_Splt_Sts = CTL.COA_RIN_SoldFull_Splt_Sts;

CASE;

// IF LCL.COA RIN SoldFull/Splt Sts is Asterisk
IF LCL.COA_RIN_SoldFull_Splt_Sts = *;

// LCL.COA RIN SoldFull/Splt Sts = CND.Fully Sold
LCL.COA_RIN_SoldFull_Splt_Sts = 'F';

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.COA RIN SoldFull/Splt Sts = CND.Blank
LCL.COA_RIN_SoldFull_Splt_Sts = *BLANK;

ENDIF;

// PAR.Company Number Pass   USR = CTL.Company Number
PAR.Company_Number_Pass_USR = CTL.Company_Number;

// PAR.Numeric Value 1 USR = CTL.COA Batch Number
PAR.Numeric_Value_1_USR = CTL.COA_Batch_Number;

// PAR.Order Number 1  PASS  USR = CTL.Quantity 7.0 USR
PAR.Order_Number_1_PASS_USR = CTL.Quantity_7_0_USR;

// PAR.Date 1          PASS  USR = CTL.COA RIN Transaction Date
PAR.Date_1_PASS_USR = CTL.COA_RIN_Transaction_Date;

// Call program Zzz Eml Rins per Batch UP.
SBMJOB;
CALL PROGRAM(Zzz Eml Rins per Batch UP) ('PNTMUPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(CTL.COA_ULSD_Company_#);
PARAMETER(PAR.Numeric_Value_1_USR);
PARAMETER(*ZERO);
PARAMETER(PAR.Date_1_PASS_USR);
PARAMETER(PAR.Order_Number_1_PASS_USR);
PARAMETER(CTL.COA_Ship_To_Warehouse);
PARAMETER(LCL.COA_RIN_SoldFull_Splt_Sts);
PARAMETER(CTL.RFS_Transaction_Type);
PARAMETER(LCL.Email_Address);
SBMJOBOVR JOB(HPBATCHRIN);
SBMJOBOVR JOBD(*USRPRF);
SBMJOBEND;

// Send information message - 'Email has been submitted'
MESSAGE(USR2977 *INFO);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Batch/Trans Dt/or Ship to Whse must be entered for print'
ERROR(USR4347);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Company Number is required.'
ERROR(USR2183);
MSGPARM(CTL.Company_Number);

ENDIF;

ENDIF;

CASE;

// IF CTL.Quantity 7.0 USR NE LCL.Quantity 7.0 USR
IF CTL.Quantity_7_0_USR <> LCL.Quantity_7_0_USR;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

// LCL.COA RIN SoldFull/Splt Sts = CTL.COA RIN SoldFull/Splt Sts
LCL.COA_RIN_SoldFull_Splt_Sts = CTL.COA_RIN_SoldFull_Splt_Sts;

CASE;

// IF CTL.COA RIN SoldFull/Splt Sts is Asterisk
IF CTL.COA_RIN_SoldFull_Splt_Sts = *;

// CTL.COA RIN SoldFull/Splt Sts = CND.Blank
CTL.COA_RIN_SoldFull_Splt_Sts = *BLANK;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?5=dsp rin detail
CASE;

// IF RCD.*SFLSEL is *Display
IF RCD.*SFLSEL = '5'/'5';

// Call program Dsp RIN Detail        DR.
CALL PROGRAM(Dsp RIN Detail        DR) ('PNNLD1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.COA_ULSD_Company_#);
PARAMETER(RCD.COA_Batch_Number);
PARAMETER(RCD.COA_Batch_Header_RIN_Seq);
PARAMETER(RCD.COA_Batch_Hdr_RIN_Seq_Sec);

ENDIF;

//?8=dsp order inq
CASE;

// IF RCD.*SFLSEL is *8
IF RCD.*SFLSEL = '8';

CASE;

// IF RCD.Order Number is Greater then zero
IF RCD.Order_Number > *ZERO;

// Call program DSP Ord Inq Ship Dtl   DF.
CALL PROGRAM(DSP Ord Inq Ship Dtl   DF) ('PDP3DFR');
PARAMETER(RCD.COA_Shipping_Company);
PARAMETER(RCD.Order_Number);
PARAMETER(LCL.Order_Sequence_Number);
PARAMETER(LCL.Application_Code);

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

ENDIF;

ENDIF;

//?9=dsp ref load
CASE;

// IF RCD.*SFLSEL is Option 9
IF RCD.*SFLSEL = '9'/'9';

CASE;

// IF RCD.Order Number Ref is Entered
IF RCD.Order_Number_Ref <> *ZERO;

// Call program DSP Ord Inq Ship Dtl   DF.
CALL PROGRAM(DSP Ord Inq Ship Dtl   DF) ('PDP3DFR');
PARAMETER(RCD.COA_Shipping_Company);
PARAMETER(RCD.Order_Number_Ref);
PARAMETER(LCL.Order_Sequence_Number);
PARAMETER(LCL.Application_Code);

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

ENDIF;

ENDIF;

