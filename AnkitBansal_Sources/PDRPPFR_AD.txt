// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDRPPFR
// ?Date: 14.08.2025 Time: 12:04:20
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?RMC 01/29/07  Added report type (daily/weekly) parm.
//?FP1054 RMC 06/15/09  prt ordered qty/wgt instead of sched
//?FP1054 RMC 07/07/09  accum OD per bill act type 1,4
EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: On print of first page format

MOVE *ALL (To: 1PG From: PAR);

//?Calc Day Heading Dates    -- moved here from level headings 01/30/07
CASE;

// IF PAR.Report Type(Daily/Weekly) is Daily
IF PAR.Report_TypeDaily_Weekly = '1';

// PAR.USR Day 1 = PAR.Date From             USR
PAR.USR_Day_1 = PAR.Date_From_USR;

// PAR.USR Day 2 = PAR.USR Day 1 + CON.1 *DAYS
PAR.USR_Day_2 = DATEINCR(PAR.USR_Day_1 1 'DY' 1111111 'NONE' 'N' 1);

// PAR.USR Day 3 = PAR.USR Day 1 + CON.2 *DAYS
PAR.USR_Day_3 = DATEINCR(PAR.USR_Day_1 2 'DY' 1111111 'NONE' 'N' 1);

// PAR.USR Day 4 = PAR.USR Day 1 + CON.3 *DAYS
PAR.USR_Day_4 = DATEINCR(PAR.USR_Day_1 3 'DY' 1111111 'NONE' 'N' 1);

// PAR.USR Day 5 = PAR.USR Day 1 + CON.4 *DAYS
PAR.USR_Day_5 = DATEINCR(PAR.USR_Day_1 4 'DY' 1111111 'NONE' 'N' 1);

//?Calc Day Heading Dates    -- moved here from level headings 01/30/07
// IF PAR.Report Type(Daily/Weekly) is Weekly
IF PAR.Report_TypeDaily_Weekly = '2';

EXECUTE FUNCTION(RTV Next Saturday      RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1674395;
PARAMETER(CUR.Company_Number);
PARAMETER(PAR.Date_From_USR);
PARAMETER(PAR.USR_Day_1);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Day of Week is Saturday
 IF DB1.Day_of_Week = '7';

 // PAR.Scheduled Ship Date = DB1.Post to G/L Date
 PAR.Scheduled_Ship_Date = DB1.Post_to_G_L_Date;

 QUIT;

 ENDIF;

}


// PAR.USR Day 2 = PAR.USR Day 1 + CON.7 *DAYS
PAR.USR_Day_2 = DATEINCR(PAR.USR_Day_1 7 'DY' 1111111 'NONE' 'N' 1);

// PAR.USR Day 3 = PAR.USR Day 1 + CON.14 *DAYS
PAR.USR_Day_3 = DATEINCR(PAR.USR_Day_1 14 'DY' 1111111 'NONE' 'N' 1);

// PAR.USR Day 4 = PAR.USR Day 1 + CON.21 *DAYS
PAR.USR_Day_4 = DATEINCR(PAR.USR_Day_1 21 'DY' 1111111 'NONE' 'N' 1);

// PAR.USR Day 5 = PAR.USR Day 1 + CON.28 *DAYS
PAR.USR_Day_5 = DATEINCR(PAR.USR_Day_1 28 'DY' 1111111 'NONE' 'N' 1);

// 1PG.Date To               USR = PAR.USR Day 4
X1PG_Date_To_USR = PAR.USR_Day_4;

ENDIF;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// 1PG.Condition Name USR = Condition name of 1PG.Report Type USR
X1PG_Condition_Name_USR = RTVCND(X1PG_Report_Type_USR);

EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(X1PG_Warehouse_Code);
PARAMETER(X1PG_Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(X1PG_USR_Warehouse_Code);
PARAMETER(X1PG_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


EXECUTE FUNCTION(RTV Group Description  RT) TYPE(RTVOBJ) FILE(PDKKREP)          AC1380777;
PARAMETER(X1PG_Availability_Group_Code);
PARAMETER(X1PG_Availability_Group_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


// 1PG.Text USR 20 = Condition name of 1PG.Single Whs/Comparison
X1PG_Text_USR_20 = RTVCND(X1PG_Single_Whs_Comparison);

// 1PG.Condition Desc. 1  USR = Condition name of 1PG.Report Type(Daily/Weekly)
X1PG_Condition_Desc_1_USR = RTVCND(X1PG_Report_TypeDaily_Weekly);

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
MOVE *ALL (To: CUR From: PAR);

// CUR.Warehouse 11 USR = PAR.Warehouse Code
CUR.Warehouse_11_USR = PAR.Warehouse_Code;

EXECUTE FUNCTION(Rtv Lot Tracking Flag RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1506123;
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Lot_Tracking_Flag);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PAR.Lot Tracking Flag is yes
IF PAR.Lot_Tracking_Flag = 'Y';

//?RMC PFS019 8/21/06 show on hand form item bal instead of lot loc
// CUR.USR Text 7            USR = CON.On-Hand
CUR.USR_Text_7_USR = 'On-Hand';

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.USR Text 7            USR = CON.On-Hand
CUR.USR_Text_7_USR = 'On-Hand';

ENDIF;

// Print Company Number header format
PRINT Company Number header format;

ENDIF;

// SUPPRESSED PRINT Availability Group Code header format

// SUPPRESSED PRINT Item Display Sequence header format

//?PRTOBJ calls before print of detail format

//?Embedded PRTOBJ : Prt Inv/Ordr for S/Whs PO
EXECUTE FUNCTION(Prt Inv/Ordr for S/Whs PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(PAR.Date_From_USR);
PARAMETER(PAR.Report_Type_USR);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.USR_Warehouse_Code);
PARAMETER(PAR.Date_From_USR);
PARAMETER(PAR.Date_To_USR);
PARAMETER(PAR.USR_Day_1);
PARAMETER(PAR.USR_Day_2);
PARAMETER(PAR.USR_Day_3);
PARAMETER(PAR.USR_Day_4);
PARAMETER(PAR.USR_Day_5);
PARAMETER(CUR.Quantity_Ordered_1_USR);
PARAMETER(CUR.Quantity_Scheduled_1_USR);
PARAMETER(CUR.Quantity_Ordered_2_USR);
PARAMETER(CUR.Quantity_Scheduled_2_USR);
PARAMETER(CUR.Quantity_Ordered_3_USR);
PARAMETER(CUR.Quantity_Scheduled_3_USR);
PARAMETER(CUR.Quantity_Ordered_4_USR);
PARAMETER(CUR.Quantity_Scheduled_4_USR);
PARAMETER(CUR.Quantity_Ordered_5_USR);
PARAMETER(CUR.Quantity_Scheduled_5_USR);
PARAMETER(PAR.Report_TypeDaily_Weekly);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: On print of detail format

// Whs 1 Scheduled
CUR.Quantity_Sched_1_USR = ( ( CUR.Quantity_Ordered_1_USR + CUR.Quantity_Ordered_2_USR )           +
+ CUR.Quantity_Ordered_3_USR ) + CUR.Quantity_Ordered_4_USR;

// Whs 2 Scheduled
CUR.Quantity_Sched_2_USR = ( ( CUR.Quantity_Scheduled_1_USR                                        +
+ CUR.Quantity_Scheduled_2_USR ) + CUR.Quantity_Scheduled_3_USR )                                 +
+ CUR.Quantity_Scheduled_4_USR;

//?Rtv On-Hand Inventory.
CASE;

// IF PAR.Lot Tracking Flag is yes
IF PAR.Lot_Tracking_Flag = 'Y';

//?RMC PFS019 8/21/06 show on hand from item bal instead of lot loc
EXECUTE FUNCTION(RTV On Hand Qty       RT) TYPE(RTVOBJ) FILE(CAB0REP)           AC1517668;
PARAMETER(PAR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(CUR.Quantity_On_Hand_1_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.On Hand U/M1 Summary = PAR.On Hand U/M1 Summary + DB1.On Hand U/M1 Summary
 PAR.On_Hand_UOM1_Summary = PAR.On_Hand_UOM1_Summary + DB1.On_Hand_UOM1_Summary;

}


//?Rtv On-Hand Inventory.
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV On Hand Qty       RT) TYPE(RTVOBJ) FILE(CAB0REP)           AC1517668;
PARAMETER(PAR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(CUR.Quantity_On_Hand_1_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.On Hand U/M1 Summary = PAR.On Hand U/M1 Summary + DB1.On Hand U/M1 Summary
 PAR.On_Hand_UOM1_Summary = PAR.On_Hand_UOM1_Summary + DB1.On_Hand_UOM1_Summary;

}


ENDIF;

//?Print Format
CASE;

// IF CUR.Quantity Sched 1 USR is Equal to Zero
IF CUR.Quantity_Sched_1_USR = *ZERO;

// AND CUR.Quantity Sched 2 USR is Equal to Zero
AND CUR.Quantity_Sched_2_USR = *ZERO;

// AND CUR.Quantity On-Hand 1 USR is Equal to Zero
AND CUR.Quantity_On_Hand_1_USR = *ZERO;

// AND CUR.Quantity On-Hand 2 USR is Equal to Zero
AND CUR.Quantity_On_Hand_2_USR = *ZERO;

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

ENDIF;

EXECUTE FUNCTION(Item Desc DRV) TYPE(DRVFLD)                                    AC1505592;
PARAMETER(CUR.Item_Desc_DRV);
PARAMETER(CUR.Item_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Item Descriptions  RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1341279;
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Item_Desc_DRV);
 PARAMETER(WRK.Description_Line_Two);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// CUR.Number Value - 7 = CUR.Quantity On-Hand 1 USR - CUR.Quantity Sched 1 USR
CUR.Number_Value_7 = CUR.Quantity_On_Hand_1_USR - CUR.Quantity_Sched_1_USR;

// CUR.Calc 7 = CUR.Quantity On-Hand 2 USR - CUR.Quantity Sched 2 USR
CUR.Calc_7 = CUR.Quantity_On_Hand_2_USR - CUR.Quantity_Sched_2_USR;

CASE;

// IF PAR.Lot Tracking Flag is yes
IF PAR.Lot_Tracking_Flag = 'Y';

EXECUTE FUNCTION(Rtv Frozen Quantity   RT) TYPE(RTVOBJ) FILE(PDL5CPP)           AC1540267;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(CUR.Item_Code);
PARAMETER(JOB.*Job_date);
PARAMETER(CUR.Quantity_Loc_Trans_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.ILL Status is Available
 IF DB1.ILL_Status = 'A';

 // PAR.Quantity Loc Trans USR = PAR.Quantity Loc Trans USR + DB1.ILL Item Qty On-Ha
 PAR.Quantity_Loc_Trans_USR = PAR.Quantity_Loc_Trans_USR + DB1.ILL_Item_Qty_On_Hand;

 ENDIF;

}


ENDIF;

//?USER: Process after print of detail format

NXT.Quantity_Loc_On_Hand_SUM = SUM(CUR.Quantity_On_Hand_1_USR);

//?USER: Print required level totals

// SUPPRESSED PRINT Item Display Sequence totals format

// SUPPRESSED PRINT Availability Group Code totals format

// SUPPRESSED PRINT Company Number totals format

