// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWC8SRR
// ?Date: 14.08.2025 Time: 02:56:02
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(CTL.CC_Company_Number);
PARAMETER('C/S');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// LCL.First Time Usr = CND.Yes
LCL.First_Time_Usr = 'Y';

//?USER: Load subfile record from DBF record

CASE;

// IF LCL.First Time Usr is Yes
IF LCL.First_Time_Usr = 'Y';

// CTL.MCR GL Acct ID = PAR.MCR GL Acct ID
CTL.MCR_GL_Acct_ID = PAR.MCR_GL_Acct_ID;

// LCL.First Time Usr = CND.No
LCL.First_Time_Usr = 'N';

ENDIF;

CASE;

// IF CTL.MCR GL Acct ID is Not Blanks
IF CTL.MCR_GL_Acct_ID <> *BLANK;

CASE;

// IF DB1.MCR GL Acct ID NE CTL.MCR GL Acct ID
IF DB1.MCR_GL_Acct_ID <> CTL.MCR_GL_Acct_ID;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

CASE;

// IF CTL.MCR M3 Dimension 1 is Entered
IF CTL.MCR_M3_Dimension_1 <> *BLANK;

CASE;

// IF DB1.MCR M3 Dimension 1 NE CTL.MCR M3 Dimension 1
IF DB1.MCR_M3_Dimension_1 <> CTL.MCR_M3_Dimension_1;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process subfile control

CASE;

// IF CTL.MCR GL Acct ID NE LCL.MCR GL Acct ID
IF CTL.MCR_GL_Acct_ID <> LCL.MCR_GL_Acct_ID;

// LCL.MCR GL Acct ID = CTL.MCR GL Acct ID
LCL.MCR_GL_Acct_ID = CTL.MCR_GL_Acct_ID;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

CASE;

// IF CTL.MCR M3 Dimension 1 NE LCL.MCR M3 Dimension 1
IF CTL.MCR_M3_Dimension_1 <> LCL.MCR_M3_Dimension_1;

// LCL.MCR M3 Dimension 1 = CTL.MCR M3 Dimension 1
LCL.MCR_M3_Dimension_1 = CTL.MCR_M3_Dimension_1;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process selected line

MOVE *ALL (To: PAR From: RCD);

