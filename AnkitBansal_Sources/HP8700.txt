      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP8700
      * TITLE:       Calculate Quantity Available
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     03/09/04
      *
      * FUNCTION:  Given incoming values, this program will return:
      *                 1) quantity budgeted
      *                 2) quantity on requests
      *                 3) quantity available
      *
      * NOTE:      This program does not set on LR---it uses RETURN to speed processing.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/13/04  LeAnne Fedor
      *           Recompile only. Cost Per Unit Amount was changed from
      *           9,2 to 9,4.
      *
      * 01/06/04  LeAnne Fedor
      *           The users have set up 'To Date' budgets for 13 weeks with
      *           small budget quantities---like 3 pails of something. So, of
      *           course, they are getting the 'over budget' message on the very
      *           first order because this prorates out to .0313 per day!
      *
      *           As a temporary fix, we are going to give them a 21-day grace
      *           period at the start of each 'To-Date' budget. During the first
      *           21 days, we will just use the Standard Budget logic without the
      *           prorated 'To Date' logic.
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
     Fhsp185    if   e           k disk
      *    Budget template header
      *
      *
     Fhsp188    if   e           k disk
      *    Farm budget header
      *
      *
     Fhsp189    if   e           k disk
      *    Farm budget detail
      *
      *
     Fhsp192    if   e           k disk
      *    Request header
      *
      *
     Fhsj193c   if   e           k disk
      *    Request detail + Item master
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields
      *
     D wkperdayqt      s                   like(jdbgqt)
     D wkqt            s                   like(jdbgqt)
      *
      *
      * Work fields for date manipulation
      *
     D wkgracedt       s               D   datfmt(*iso)
     D wkisobfdt       s               D   datfmt(*iso)
     D wkisobtdt       s               D   datfmt(*iso)
     D wkisoxxdt       s               D   datfmt(*iso)
     D wkdays          s              5  0
      *
      *
      * Parms
      *
     D xxfbsn          s                   like(qdfbsn)
     D xxbgit          s                   like(imbgit)
     D xxrqsn          s                   like(qdrqsn)
     D xxdt            s              8  0
     D xxbgqt          s                   like(qdapqt)
     D xxqt            s                   like(qdapqt)
     D xxavqt          s                   like(qdapqt)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Determine the Budgeted Quantity for this Farm Budget/Budget Item
      *
     C                   exsr      $budget
      *
      * Accumulate Budget Item Quantities for this Farm Budget/Budget Item on
      * Requests
     C                   exsr      $requests
      *
      * Calculate the 'available' quantity.
      *
     C     xxbgqt        sub       xxqt          xxavqt
      *
      * Return to calling program
      *
     C                   return
      /EJECT
      *---------------------------------------------------------------
      * Determine the Budgeted Quantity
      *---------------------------------------------------------------
      *
     C     $budget       begsr
      *
      * Start by retrieving the Budgeted Quantity for this Farm Budget/Budget Item.
      *
     C     key01         chain     hsp189                             92
     C                   if        *in92 = *off
     C                   z-add     jdbgqt        xxbgqt
     C                   endif
      *
      * Next, retrieve the Budget Template that this Farm Budget was built from.
      *
     C     xxfbsn        chain     hsp188                             92
     C                   if        *in92 = *off                                 If header
      *
      * Next, retrieve the Budget Template Header to get the Budget Availability
      * for this Template. If the Budget Availability is 'To Date', then you
      * need to do some more calcs to derive the 'to date' Budgeted Quantity.
      *
     C     jhbtcd        chain     hsp185                             92
     C                   if        *in92 = *off and thbacd = 'T'
     C                   exsr      $todate
     C                   endif
     C                   endif                                                  If header
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Determine the Budget Quantity Available 'To Date'
      *---------------------------------------------------------------
      *
     C     $todate       begsr
      *
      * Find the number of days between the FROM/TO dates of this
      * Farm Budget.
      *
     C                   if        jhbfdt <> 0 and                              If dates
     C                             jhbtdt <> 0
     C     *iso          move      jhbfdt        wkisobfdt
     C     *iso          move      jhbtdt        wkisobtdt
     C     wkisobtdt     subdur    wkisobfdt     wkdays:*d
      *
      *
      * If 'days' calculated above is not zero, find the 'per day'
      * budgeted quantity.
      *
     C                   if        wkdays <> 0
     C     xxbgqt        div       wkdays        wkperdayqt
     C                   else
     C                   z-add     0             wkperdayqt
     C                   endif
      *
      * Find the number of days between the incoming date and the FROM
      * DATE of the Farm Budget. Then, take the Per Day Quantity times
      * the elapsed days to get the Budget Quantity.
      *
     C                   if        xxdt <> 0                                    If incoming date
     C     *iso          test(d)                 xxdt                   92
     C                   if        *in92 = *off and                             If OK
     C                             xxdt > jhbfdt
     C     *iso          move      xxdt          wkisoxxdt
      *
      *------------------------------------------------------------------------
      * Temporary 21-day grace period logic. If the order date is
      * 21 days after the start of the budget, then do the "to date"
      * stuff; otherwise, it is the 'grace period' of 21 days and we will just
      * use the Standard Availability logic.
      *
     C     wkisobfdt     adddur    21:*days      wkgracedt
     C                   if        wkisoxxdt > wkgracedt                        If no grace
      *
      *------------------------------------------------------------------------
      *
      * The following 2 lines are regular code--not the temp code:
      *
     C     wkisoxxdt     subdur    wkisobfdt     wkdays:*d
     C     wkperdayqt    mult      wkdays        xxbgqt
      *
     C                   endif                                                  If no grace
      *
     C                   endif                                                  If OK
     C                   endif                                                  If incoming date
     C                   endif                                                  If dates
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Accumulate Budget Item Quantities on Requests
      *---------------------------------------------------------------
      *
     C     $requests     begsr
      *
     C     xxfbsn        setll     hsj193c
      *
     C                   dou       *in91 = *on                                  Do requests
     C     xxfbsn        reade     hsj193c                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             xxbgit = imbgit and
     C                             qdrqscd <> 'H' and
     C                             qdrqscd <> 'D' and
     C                             qdrqscd <> 'E'
      *
      * Omit 'On-hold' requests
      *
     C     qdrqsn        chain     hsp192                             92
     C                   if        *in92 = *off and qhrqscd = 'H'               If hold
     C                   else
      *
     C                   select
     C                   when      qdrqscd = 'C' or qdapqt = 0
     C                   z-add     qdusqt        wkqt
     C                   other
     C                   z-add     qdapqt        wkqt
     C                   endsl
      *
      * If this Item has Volume, multipy Quantity times Volume
      *
     C                   if        imvol <> 0
     C     imvol         mult      wkqt          wkqt
     C                   endif
      *
      * Accumulate quantity
      *
     C                   add       wkqt          xxqt
      *
     C                   endif                                                  If hold
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do requests
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxfbsn
     C                   parm                    xxbgit
     C                   parm                    xxdt
      *
     C                   parm                    xxbgqt
     C                   parm                    xxqt
     C                   parm                    xxavqt
      *
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    xxfbsn
     C                   kfld                    xxbgit
      *
     C                   endsr
      /EJECT
