// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUG0PVR
// ?Date: 14.08.2025 Time: 03:50:21
// ?------------------------------------------------------------------------------------------------

//?USER: Validate fields

//?Prompt for From/To Company & From Packaging Item.
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

//?To Company.
CASE;

// IF PGM.*Cursor field <IS> DTL.To Company
IF PGM.*Cursor_field = DTL.To_Company;

// Call program Sel Plant Companies   SR.
CALL PROGRAM(Sel Plant Companies   SR) ('PUAZSRR');
PARAMETER(DTL.To_Company);

ENDIF;

//?TO Packaging Item.
CASE;

// IF PGM.*Cursor field <IS> DTL.Packaging Item Code 1 USR
IF PGM.*Cursor_field = DTL.Packaging_Item_Code_1_USR;

CASE;

// IF DTL.To Company is not equal to zero
IF DTL.To_Company <> *ZERO;

// Call program Sel Packaging Item    SR.
CALL PROGRAM(Sel Packaging Item    SR) ('POFRSRR');
PARAMETER(DTL.To_Company);
PARAMETER(DTL.Packaging_Item_Code_1_USR);

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - '&1'
ERROR(USR4977);
MSGPARM('To Company is required.');

QUIT;

ENDIF;

ENDIF;

ENDIF;

//?Validate From/To Company.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?To Company.
CASE;

// IF DTL.To Company is not equal to zero
IF DTL.To_Company <> *ZERO;

EXECUTE FUNCTION(Val Company Exist     RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC2143767;
PARAMETER(DTL.To_Company);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Invalid Company Number'
ERROR(USR1783);
MSGPARM(DTL.To_Company);

QUIT;

ENDIF;

ENDIF;

//?From/To Company Cannot be the Same.
CASE;

// IF DTL.Company Number EQ DTL.To Company
IF DTL.Company_Number = DTL.To_Company;

// LCL.Generic Message 80 USR = CONCAT(CON.From & To Company cannot,CON.be the same.,CON.1)
LCL.Generic_Message_80_USR = 'From & To Company cannot' + 'be the same.' (1);

// Send error message - '&1'
ERROR(USR4977);
MSGPARM(LCL.Generic_Message_80_USR);

QUIT;

ENDIF;

ENDIF;

//?Validate To Packaging Item.
CASE;

// IF DTL.Packaging Item Code 1 USR is Entered
IF DTL.Packaging_Item_Code_1_USR <> *BLANK;

EXECUTE FUNCTION(Val Pckg Item Exist   RT) TYPE(RTVOBJ) FILE(POARREP)           AC2143780;
PARAMETER(DTL.To_Company);
PARAMETER(DTL.Packaging_Item_Code_1_USR);

//?Copy To Company/Packaging Item cannot already exist.
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// LCL.Generic Message 80 USR = CONCAT(CON.Copy To Company/Packaging,CON.Item code already exist.,CO
LCL.Generic_Message_80_USR = 'Copy To Company/Packaging' + 'Item code already exist.' (1);

// Send error message - '&1'
ERROR(USR4977);
MSGPARM(LCL.Generic_Message_80_USR);

QUIT;

ENDIF;

ENDIF;

//?USER: User defined action

EXECUTE FUNCTION(Upd Copy Packaging Itm RT) TYPE(RTVOBJ) FILE(POARREP)          AC2148919;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Packaging_Item_Code);
PARAMETER(DTL.To_Company);
PARAMETER(DTL.Packaging_Item_Code_1_USR);
{
 //?USER: Process Data record

 //?Copy FROM Company/Packaging Item to TO Company/Packaging Item.
 EXECUTE FUNCTION(Crt Copy Packaging Itm CR) TYPE(CRTOBJ) FILE(POARREP)          AC2148920;
 PARAMETER(PAR.To_Company);
 PARAMETER(PAR.Packaging_Item_Code_1_USR);
 PARAMETER(DB1.Pckg_Item_Description);
 PARAMETER(DB1.Pckg_List_Sequence);
 PARAMETER(DB1.Pckg_Type_Class);
 PARAMETER(DB1.Pckg_Item_Type);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Pckg_Unit_Cost);
 PARAMETER(DB1.Pckg_Tare_Weight);
 PARAMETER(DB1.Pckg_Reporting_Group);
 PARAMETER(DB1.Pckg_Group_Category);
 PARAMETER(DB1.Pckg_Modified_Weight);
 PARAMETER(DB1.Pckg_Unused_Status_3);
 PARAMETER(DB1.Pckg_Unused_Sts_2);
 PARAMETER(DB1.Pre_printed_Bag_Sts);
 PARAMETER(DB1.Pckg_Unused_Status_5);
 PARAMETER(DB1.Pckg_Unused_Status_6);
 PARAMETER(DB1.Pckg_Unused_Status_7);
 PARAMETER(DB1.Pckg_Unused_Status_8);
 PARAMETER(DB1.Pckg_Unused_Status_9);
 PARAMETER(DB1.Pckg_Unused_Status_10);
 PARAMETER(DB1.Pckg_Unused_Code);
 PARAMETER(DB1.Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time 2    IF) TYPE(EXCINTFUN)                     AC2045684;
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

}


