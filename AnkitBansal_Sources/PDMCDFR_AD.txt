// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDMCDFR
// ?Date: 14.08.2025 Time: 03:35:10
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?** 05/19/16   RMC E4119  remove live with tpm check
//?05/11/04 SLM PKTR01 Multi-Company - Order Header TRG Remove Co
//?                                    from Logical View
// PAR.Application Code = CND.Order Management System
PAR.Application_Code = 'OMS';

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER(PAR.Application_Code);
PARAMETER(WRK.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PAR.USR Program name = CON.*BLANK
PAR.USR_Program_name = *BLANK;

// PAR.USR First Line on Screen = CON.*ZERO
PAR.USR_First_Line_on_Screen = *ZERO;

// PAR.First Time Flag = CND.Yes
PAR.First_Time_Flag = 'Y';

// PAR.USR Status (Y/N) = CND.no
PAR.USR_Status_Y_N = 'N';

// PAR.User Profile Name = JOB.*USER
PAR.User_Profile_Name = JOB.*USER;

// PGM.*Scan limit = CON.1000
PGM.*Scan_limit = 1000;

//?USER: Initialize subfile control

//?First time Through Program
CASE;

// IF PAR.First Time Flag is Yes
IF PAR.First_Time_Flag = 'Y';

//?If allow multi company is no then use company from user profile
CASE;

// IF PAR.Allow Multi-Company is no
IF PAR.Allow_Multi_Company = 'N';

// CTL.Company Number = WRK.Company Number
CTL.Company_Number = WRK.Company_Number;

//?If allow multi company is no then use company from user profile
// IF *OTHERWISE
IF *OTHERWISE;

// CTL.Company Number = PAR.Company Number
CTL.Company_Number = PAR.Company_Number;

ENDIF;

// PAR.First Time Flag = CND.NO
PAR.First_Time_Flag = 'N';

// CTL.Order Number = PAR.Order Number
CTL.Order_Number = PAR.Order_Number;

// CTL.Order Type - Sales = PAR.Order Type - Sales
CTL.Order_Type_Sales = PAR.Order_Type_Sales;

// CTL.Ship To Customer = PAR.Ship To Customer
CTL.Ship_To_Customer = PAR.Ship_To_Customer;

// CTL.USR Description - 15 = PAR.Ship To Name
CTL.USR_Description_15 = PAR.Ship_To_Name;

// CTL.Order Date = PAR.Order Date
CTL.Order_Date = PAR.Order_Date;

// CTL.Header Status = PAR.Header Status
CTL.Header_Status = PAR.Header_Status;

// CTL.Load ID = PAR.Load ID
CTL.Load_ID = PAR.Load_ID;

ENDIF;

CASE;

// IF CTL.Load ID is GT Zero
IF CTL.Load_ID > *ZERO;

EXECUTE FUNCTION(RTV Load Total Weight  RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1384160;
PARAMETER(CTL.Load_ID);
PARAMETER(CTL.Order_Weight_Total);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// IF *OTHERWISE
IF *OTHERWISE;

// CTL.Order Weight Total = CON.*ZERO
CTL.Order_Weight_Total = *ZERO;

ENDIF;

//?USER: Initialize subfile record from DBF record

// Execute function Clc Line on Scrn       US.
EXECUTE FUNCTION(Clc Line on Scrn       US) TYPE(EXCUSRSRC) ('PDLCUFR');
PARAMETER(PAR.USR_First_Line_on_Screen);
{
 0110 C*****  ##RR CONTAINS THE 1ST LINE ON SCREEN                    *****
 0124 C*****  ##RRMAX CONTAINS THE LAST LINE ON PRIOR SCREEN          *****
 0124 C*****  IF ##RR - ##RRMAX = 1, THIS IS THE FIRST LINE ON SCREEN *****
 0125 C           ##RR      SUB  ##RRMX    #OPLUF
}


//?Select PO Number
CASE;

// IF CTL.Accounting Company Number EQ DB1.Accounting Company Number
IF CTL.Company_Number = DB1.Company_Number;

// OR CTL.Accounting Company Number EQ WRK.ZERO
OR CTL.Company_Number = WRK.ZERO;

CASE;

// IF CTL.USR Cust. P.O. Short is Entered
IF CTL.USR_Cust_P_O_Short <> *BLANK;

// CTL.Customer Purchase Order # = CTL.USR Cust. P.O. Short
CTL.Customer_Purchase_Order_# = CTL.USR_Cust_P_O_Short;

CASE;

// IF CTL.Customer Purchase Order # EQ DB1.Customer Purchase Order #
IF CTL.Customer_Purchase_Order_# = DB1.Customer_Purchase_Order_#;

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Select PO Number
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?SEL:  Company Number
CASE;

// IF CTL.Company Number is Equal to zero
IF CTL.Company_Number = *ZERO;

//?SEL:  Company Number
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF DB1.Company Number EQ CTL.Company Number
IF DB1.Company_Number = CTL.Company_Number;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

EXECUTE FUNCTION(RTV Stop Number       RT) TYPE(RTVOBJ) FILE(OMFLCPP)           AC1197795;
PARAMETER(RCD.Load_ID);
PARAMETER(RCD.Stop_Drop);
PARAMETER(RCD.Order_Number);
PARAMETER(NLL.Appointment_Confirm_Date);
PARAMETER(NLL.Appointment_Confirm_Time);
{
 //?USER: Initialize routine

 // PAR.Stop/Drop = CON.*ZERO
 PAR.Stop_Drop = *ZERO;

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 //?If order number is found, retrieve stop number
 CASE;

 // IF PAR.Order Number EQ DB1.Order Number
 IF PAR.Order_Number = DB1.Order_Number;

 // PAR.Stop/Drop = DB1.Stop/Drop
 PAR.Stop_Drop = DB1.Stop_Drop;

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

 ENDIF;

}


//?SEL: Load Id
CASE;

// IF CTL.Load ID is GT Zero
IF CTL.Load_ID > *ZERO;

CASE;

// IF RCD.Load ID NE CTL.Load ID
IF RCD.Load_ID <> CTL.Load_ID;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?CALC: Subfile control function fields

//?Reloading subfile if PO Number user field is not blank.
CASE;

// IF CTL.USR Cust. P.O. Short is Entered
IF CTL.USR_Cust_P_O_Short <> *BLANK;

// CTL.Customer Purchase Order # = CTL.USR Cust. P.O. Short
CTL.Customer_Purchase_Order_# = CTL.USR_Cust_P_O_Short;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process subfile control (Pre-confirm)

//?Prompt for ship to customer number
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.Ship To Customer
AND PGM.*Cursor_field = CTL.Ship_To_Customer;

//?040104 slm add selection on ship to customer by customer name
// Call program SEL Cust/ShpTo Flag 'Y'SR.
CALL PROGRAM(SEL Cust/ShpTo Flag 'Y'SR) ('PDYSSRR');
PARAMETER(CTL.Ship_To_Customer);

ENDIF;

//?Ship to customer name
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.USR Description - 15
AND PGM.*Cursor_field = CTL.USR_Description_15;

//?040104 slm add select on ship to customer selection by name
// Call program SEL Cust/ShpTo Flag 'Y'SR.
CALL PROGRAM(SEL Cust/ShpTo Flag 'Y'SR) ('PDYSSRR');
PARAMETER(CTL.Ship_To_Customer);

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(CTL.Ship_To_Customer);
PARAMETER(PAR.Ship_To_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// CTL.USR Description - 15 = PAR.Ship To Name
CTL.USR_Description_15 = PAR.Ship_To_Name;

ENDIF;

//?P.O Number Entered on Control
CASE;

// IF CTL.USR Cust. P.O. Short is Entered
IF CTL.USR_Cust_P_O_Short <> *BLANK;

// AND PAR.USR Status (Y/N) is no
AND PAR.USR_Status_Y_N = 'N';

// CTL.Customer Purchase Order # = CTL.USR Cust. P.O. Short
CTL.Customer_Purchase_Order_# = CTL.USR_Cust_P_O_Short;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PAR.USR Status (Y/N) = CND.yes
PAR.USR_Status_Y_N = 'Y';

ENDIF;

//?P.O not entered
CASE;

// IF CTL.USR Cust. P.O. Short is Not Entered
IF CTL.USR_Cust_P_O_Short = *BLANK;

// AND PAR.USR Status (Y/N) is yes
AND PAR.USR_Status_Y_N = 'Y';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PAR.USR Status (Y/N) = CND.no
PAR.USR_Status_Y_N = 'N';

ENDIF;

CASE;

// IF CTL.Order Number is Not equal to zeros
IF CTL.Order_Number <> *ZERO;

EXECUTE FUNCTION(RTV Load ID            RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1384375;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Order_Number);
PARAMETER(CTL.Load_ID);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.Company Number
AND PGM.*Cursor_field = CTL.Company_Number;

// Call program SEL Co By Number       SR.
CALL PROGRAM(SEL Co By Number       SR) ('PDMESRR');
PARAMETER(CTL.Company_Number);
PARAMETER(WRK.Company_Name);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?CALC: Subfile record function fields

// RCD.USR Cust. P.O. Short = RCD.Customer Purchase Order #
RCD.USR_Cust_P_O_Short = RCD.Customer_Purchase_Order_#;

//?USER: Process subfile record (Pre-confirm)

//?Process request for detail
CASE;

// IF RCD.*SFLSEL is *Display
IF RCD.*SFLSEL = '5'/'5';

CASE;

// IF RCD.Billing Activity Type is Credit or Debit Memo
IF RCD.Billing_Activity_Type = '2'/'3';

// Call program DSP Credit/Debit Memo  D1.
CALL PROGRAM(DSP Credit/Debit Memo  D1) ('PDIXD1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Date);

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF RCD.Event Code is Shipped Thru 07 History
IF RCD.Event_Code >= '04';
AND RCD.Event_Code <= '07';

// Call program DSP Ord Inq Ship Dtl   DF.
CALL PROGRAM(DSP Ord Inq Ship Dtl   DF) ('PDP3DFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(WRK.Order_Sequence_Number);
PARAMETER(PAR.Application_Code);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program DSP Ord Inquiry Detail DF.
CALL PROGRAM(DSP Ord Inquiry Detail DF) ('PDPZDFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(WRK.Order_Sequence_Number);
PARAMETER(WRK.Order_Secondary_Line_Seq);

ENDIF;

ENDIF;

ENDIF;

//?Process request Ordered vs. Shipped
CASE;

// IF RCD.*SFLSEL is Option 8
IF RCD.*SFLSEL = '8'/'8';

CASE;

// IF RCD.Billing Activity Type is Credit or Debit Memo
IF RCD.Billing_Activity_Type = '2'/'3';

// Send information message - 'No Shipping Detail for CM/DM'
MESSAGE(USR2328 *INFO);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program DSP Order vs. Ship Dtl DF.
CALL PROGRAM(DSP Order vs. Ship Dtl DF) ('PDP7DFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Type_Sales);
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Ship_To_Name);
PARAMETER(RCD.Customer_Purchase_Order_#);
PARAMETER(RCD.Order_Date);
PARAMETER(RCD.Actual_Shipped_Date);
PARAMETER(RCD.Header_Status);
PARAMETER(RCD.Credit_Hold);
PARAMETER(RCD.Production_Hold);
PARAMETER(RCD.New_Customer_Hold);
PARAMETER(RCD.Sales_Route_Code);
PARAMETER(PAR.Application_Code);

ENDIF;

ENDIF;

//?Process Display Dispatch/Tracer request
CASE;

// IF RCD.*SFLSEL is Option 9
IF RCD.*SFLSEL = '9'/'9';

// Call program DSP Dispatch/Tracer    DF.
CALL PROGRAM(DSP Dispatch/Tracer    DF) ('PDT3DFR');
PARAMETER(RCD.Load_ID);

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

SET CURSOR;

ENDIF;

//?PO Number not equal to PO Number user field.
CASE;

// IF CTL.Customer Purchase Order # NE CTL.USR Cust. P.O. Short
IF CTL.Customer_Purchase_Order_# <> CTL.USR_Cust_P_O_Short;

QUIT;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

//?PO Number not equal to PO Number user field.
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// CTL.Customer Purchase Order # = CTL.USR Cust. P.O. Short
CTL.Customer_Purchase_Order_# = CTL.USR_Cust_P_O_Short;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Exit program processing

//?CMD 3 Exit
CASE;

// IF CTL.*CMD key is *Exit
IF CTL.*CMD_key = '03';

// PAR.USR Program name = CON.*BLANK
PAR.USR_Program_name = *BLANK;

MOVE *ALL (To: PAR From: CTL);

RETURN;

ENDIF;

