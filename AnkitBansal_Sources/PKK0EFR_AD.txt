// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKK0EFR
// ?Date: 14.08.2025 Time: 02:52:01
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.Zero_USR);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

//?USER: Validate subfile record fields

//?1996 Quarter Start and End dates
CASE;

// IF RCD.Calendar Year is 1996
IF RCD.Calendar_Year = 1996;

CASE;

// IF RCD.Calendar Quarter is Quarter 1
IF RCD.Calendar_Quarter = '1';

// RCD.Calendar Quarter Start = CND.Quarter 1 start
RCD.Calendar_Quarter_Start = 0960101;

// RCD.Calendar Quarter End = CND.Quarter 1 End
RCD.Calendar_Quarter_End = 0960331;

// IF RCD.Calendar Quarter is Quarter 2
IF RCD.Calendar_Quarter = '2';

// RCD.Calendar Quarter Start = CND.Quarter 2 start
RCD.Calendar_Quarter_Start = 0960401;

// RCD.Calendar Quarter End = CND.Quarter 2 End
RCD.Calendar_Quarter_End = 0960630;

// IF RCD.Calendar Quarter is Quarter 3
IF RCD.Calendar_Quarter = '3';

// RCD.Calendar Quarter Start = CND.Quarter 3 start
RCD.Calendar_Quarter_Start = 0960701;

// RCD.Calendar Quarter End = CND.Quarter 3 End
RCD.Calendar_Quarter_End = 0960930;

// IF RCD.Calendar Quarter is Quarter 4
IF RCD.Calendar_Quarter = '4';

// RCD.Calendar Quarter Start = CND.Quarter 4 start
RCD.Calendar_Quarter_Start = 0961001;

// RCD.Calendar Quarter End = CND.Quarter 4 End
RCD.Calendar_Quarter_End = 0961231;

ENDIF;

ENDIF;

//?1997 Quarter Start and End dates
CASE;

// IF RCD.Calendar Year is 1997
IF RCD.Calendar_Year = 1997;

CASE;

// IF RCD.Calendar Quarter is Quarter 1
IF RCD.Calendar_Quarter = '1';

// RCD.Calendar Quarter Start = CND.Quarter 1 start 1997
RCD.Calendar_Quarter_Start = 0970101;

// RCD.Calendar Quarter End = CND.Quarter 1 End 1997
RCD.Calendar_Quarter_End = 0970331;

// IF RCD.Calendar Quarter is Quarter 2
IF RCD.Calendar_Quarter = '2';

// RCD.Calendar Quarter Start = CND.Quarter 2 start 1997
RCD.Calendar_Quarter_Start = 0970401;

// RCD.Calendar Quarter End = CND.Quarter 2 End 1997
RCD.Calendar_Quarter_End = 0970630;

// IF RCD.Calendar Quarter is Quarter 3
IF RCD.Calendar_Quarter = '3';

// RCD.Calendar Quarter Start = CND.Quarter 3 start 1997
RCD.Calendar_Quarter_Start = 0970701;

// RCD.Calendar Quarter End = CND.Quarter 3 End 1997
RCD.Calendar_Quarter_End = 0970930;

// IF RCD.Calendar Quarter is Quarter 4
IF RCD.Calendar_Quarter = '4';

// RCD.Calendar Quarter Start = CND.Quarter 4 start 1997
RCD.Calendar_Quarter_Start = 0971001;

// RCD.Calendar Quarter End = CND.Quarter 4 End 1997
RCD.Calendar_Quarter_End = 0971231;

ENDIF;

ENDIF;

//?1998 Quarter Start and End dates
CASE;

// IF RCD.Calendar Year is 1998
IF RCD.Calendar_Year = 1998;

CASE;

// IF RCD.Calendar Quarter is Quarter 1
IF RCD.Calendar_Quarter = '1';

// RCD.Calendar Quarter Start = CND.Quarter 1 start 1998
RCD.Calendar_Quarter_Start = 0980101;

// RCD.Calendar Quarter End = CND.Quarter 1 End 1998
RCD.Calendar_Quarter_End = 0980331;

// IF RCD.Calendar Quarter is Quarter 2
IF RCD.Calendar_Quarter = '2';

// RCD.Calendar Quarter Start = CND.Quarter 2 start 1998
RCD.Calendar_Quarter_Start = 0980401;

// RCD.Calendar Quarter End = CND.Quarter 2 End 1998
RCD.Calendar_Quarter_End = 0980630;

// IF RCD.Calendar Quarter is Quarter 3
IF RCD.Calendar_Quarter = '3';

// RCD.Calendar Quarter Start = CND.Quarter 3 start 1998
RCD.Calendar_Quarter_Start = 0980701;

// RCD.Calendar Quarter End = CND.Quarter 3 End 1998
RCD.Calendar_Quarter_End = 0980930;

// IF RCD.Calendar Quarter is Quarter 4
IF RCD.Calendar_Quarter = '4';

// RCD.Calendar Quarter Start = CND.Quarter 4 start 1998
RCD.Calendar_Quarter_Start = 0981001;

// RCD.Calendar Quarter End = CND.Quarter 4 End 1998
RCD.Calendar_Quarter_End = 0981231;

ENDIF;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(Create Producer Contract) TYPE(CRTOBJ) FILE(PKD0CPP)           AB1199071;
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


//?USER: Delete DBF record

EXECUTE FUNCTION(Delete Producer Contract) TYPE(DLTOBJ) FILE(PKD0CPP)           AB1199073;

//?USER: Change DBF record

EXECUTE FUNCTION(Change Producer Contract) TYPE(CHGOBJ) FILE(PKD0CPP)           AB1199072;
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


