// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKYMXFR
// ?Date: 14.08.2025 Time: 02:53:19
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// Call program Val Application/User  XF.
CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
PARAMETER(WRK.Oms_Warehouse_Code);
PARAMETER(LCL.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(WRK.Oms_SalesPerson_Code);
PARAMETER(WRK.Oms_Allow_Multi_Company);
PARAMETER(WRK.Oms_Default_Printer);
PARAMETER(WRK.Oms_Name);
PARAMETER(WRK.Oms_System_Value_Alpha);
PARAMETER(WRK.Oms_Access_Denied_Y_N);

EXECUTE FUNCTION(Rtv Exp Loin Wt Rngs  RT) TYPE(RTVOBJ) FILE(PKFFREP)           AB1242398;
PARAMETER(LCL.CC_Company_Number);
PARAMETER(PAR.Low_Range_Min_Weight);
PARAMETER(PAR.Low_Range_Max_Weight);
PARAMETER(PAR.Export_Range_Min_Weight);
PARAMETER(PAR.Export_Range_Max_Weight);
PARAMETER(PAR.High_Range_Min_Weight);
PARAMETER(PAR.High_Range_Max_Weight);
PARAMETER(PAR.Low_Description);
PARAMETER(PAR.Export_Description);
PARAMETER(PAR.High_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Loin Range Count  RT) TYPE(RTVOBJ) FILE(PKDLCPP)           AB1242386;
PARAMETER(LCL.CC_Company_Number);
PARAMETER(PAR.Production_Date);
PARAMETER(03);
PARAMETER(PAR.Shift_A_Low_Count);
PARAMETER(PAR.Shift_A_Export_Count);
PARAMETER(PAR.Shift_A_High_Count);
PARAMETER(PAR.Shift_B_Low_Count);
PARAMETER(PAR.Shift_B_Export_Count);
PARAMETER(PAR.Shift_B_High_Count);
PARAMETER(PAR.Low_Range_Min_Weight);
PARAMETER(PAR.Low_Range_Max_Weight);
PARAMETER(PAR.Export_Range_Min_Weight);
PARAMETER(PAR.Export_Range_Max_Weight);
PARAMETER(PAR.High_Range_Min_Weight);
PARAMETER(PAR.High_Range_Max_Weight);
{
 //?USER: Process Data record

 //?Low Range Count
 CASE;

 // IF DB1.PSA Weight GE PAR.Low Range Min Weight
 IF DB1.PSA_Weight >= PAR.Low_Range_Min_Weight;

 // AND DB1.PSA Weight LE PAR.Low Range Max Weight
 AND DB1.PSA_Weight <= PAR.Low_Range_Max_Weight;

 CASE;

 // IF DB1.PSA Shift is Shift 1
 IF DB1.PSA_Shift = '1';

 // PAR.Shift A Low Count = PAR.Shift A Low Count + CON.1
 PAR.Shift_A_Low_Count = PAR.Shift_A_Low_Count + 1;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Shift B Low Count = PAR.Shift B Low Count + CON.1
 PAR.Shift_B_Low_Count = PAR.Shift_B_Low_Count + 1;

 ENDIF;

 ENDIF;

 //?Export Range Count
 CASE;

 // IF DB1.PSA Weight GE PAR.Export Range Min Weight
 IF DB1.PSA_Weight >= PAR.Export_Range_Min_Weight;

 // AND DB1.PSA Weight LE PAR.Export Range Max Weight
 AND DB1.PSA_Weight <= PAR.Export_Range_Max_Weight;

 CASE;

 // IF DB1.PSA Shift is Shift 1
 IF DB1.PSA_Shift = '1';

 // PAR.Shift A Export Count = PAR.Shift A Export Count + CON.1
 PAR.Shift_A_Export_Count = PAR.Shift_A_Export_Count + 1;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Shift B Export Count = PAR.Shift B Export Count + CON.1
 PAR.Shift_B_Export_Count = PAR.Shift_B_Export_Count + 1;

 ENDIF;

 ENDIF;

 //?High Range Count
 CASE;

 // IF DB1.PSA Weight GE PAR.High Range Min Weight
 IF DB1.PSA_Weight >= PAR.High_Range_Min_Weight;

 // AND DB1.PSA Weight LE PAR.High Range Max Weight
 AND DB1.PSA_Weight <= PAR.High_Range_Max_Weight;

 CASE;

 // IF DB1.PSA Shift is Shift 1
 IF DB1.PSA_Shift = '1';

 // PAR.Shift A High Count = PAR.Shift A High Count + CON.1
 PAR.Shift_A_High_Count = PAR.Shift_A_High_Count + 1;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Shift B High Count = PAR.Shift B High Count + CON.1
 PAR.Shift_B_High_Count = PAR.Shift_B_High_Count + 1;

 ENDIF;

 ENDIF;

}


EXECUTE FUNCTION(Rtv Loin Range Count  RT) TYPE(RTVOBJ) FILE(PKDLCPP)           AB1242386;
PARAMETER(LCL.CC_Company_Number);
PARAMETER(PAR.Production_Date);
PARAMETER(04);
PARAMETER(PAR.Shift_A_Low_Count);
PARAMETER(PAR.Shift_A_Export_Count);
PARAMETER(PAR.Shift_A_High_Count);
PARAMETER(PAR.Shift_B_Low_Count);
PARAMETER(PAR.Shift_B_Export_Count);
PARAMETER(PAR.Shift_B_High_Count);
PARAMETER(PAR.Low_Range_Min_Weight);
PARAMETER(PAR.Low_Range_Max_Weight);
PARAMETER(PAR.Export_Range_Min_Weight);
PARAMETER(PAR.Export_Range_Max_Weight);
PARAMETER(PAR.High_Range_Min_Weight);
PARAMETER(PAR.High_Range_Max_Weight);
{
 //?USER: Process Data record

 //?Low Range Count
 CASE;

 // IF DB1.PSA Weight GE PAR.Low Range Min Weight
 IF DB1.PSA_Weight >= PAR.Low_Range_Min_Weight;

 // AND DB1.PSA Weight LE PAR.Low Range Max Weight
 AND DB1.PSA_Weight <= PAR.Low_Range_Max_Weight;

 CASE;

 // IF DB1.PSA Shift is Shift 1
 IF DB1.PSA_Shift = '1';

 // PAR.Shift A Low Count = PAR.Shift A Low Count + CON.1
 PAR.Shift_A_Low_Count = PAR.Shift_A_Low_Count + 1;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Shift B Low Count = PAR.Shift B Low Count + CON.1
 PAR.Shift_B_Low_Count = PAR.Shift_B_Low_Count + 1;

 ENDIF;

 ENDIF;

 //?Export Range Count
 CASE;

 // IF DB1.PSA Weight GE PAR.Export Range Min Weight
 IF DB1.PSA_Weight >= PAR.Export_Range_Min_Weight;

 // AND DB1.PSA Weight LE PAR.Export Range Max Weight
 AND DB1.PSA_Weight <= PAR.Export_Range_Max_Weight;

 CASE;

 // IF DB1.PSA Shift is Shift 1
 IF DB1.PSA_Shift = '1';

 // PAR.Shift A Export Count = PAR.Shift A Export Count + CON.1
 PAR.Shift_A_Export_Count = PAR.Shift_A_Export_Count + 1;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Shift B Export Count = PAR.Shift B Export Count + CON.1
 PAR.Shift_B_Export_Count = PAR.Shift_B_Export_Count + 1;

 ENDIF;

 ENDIF;

 //?High Range Count
 CASE;

 // IF DB1.PSA Weight GE PAR.High Range Min Weight
 IF DB1.PSA_Weight >= PAR.High_Range_Min_Weight;

 // AND DB1.PSA Weight LE PAR.High Range Max Weight
 AND DB1.PSA_Weight <= PAR.High_Range_Max_Weight;

 CASE;

 // IF DB1.PSA Shift is Shift 1
 IF DB1.PSA_Shift = '1';

 // PAR.Shift A High Count = PAR.Shift A High Count + CON.1
 PAR.Shift_A_High_Count = PAR.Shift_A_High_Count + 1;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Shift B High Count = PAR.Shift B High Count + CON.1
 PAR.Shift_B_High_Count = PAR.Shift_B_High_Count + 1;

 ENDIF;

 ENDIF;

}


EXECUTE FUNCTION(Rtv/Chg/Crt Exp Loin  RT) TYPE(RTVOBJ) FILE(PKFECPP)           AB1242400;
PARAMETER(LCL.CC_Company_Number);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Shift_A_Low_Count);
PARAMETER(PAR.Shift_A_Export_Count);
PARAMETER(PAR.Shift_A_High_Count);
PARAMETER(PAR.Shift_B_Low_Count);
PARAMETER(PAR.Shift_B_Export_Count);
PARAMETER(PAR.Shift_B_High_Count);
PARAMETER(PAR.Low_Description);
PARAMETER(PAR.Export_Description);
PARAMETER(PAR.High_Description);
{
 //?USER: Processing if Data record not found

 EXECUTE FUNCTION(Create Export Loin Range) TYPE(CRTOBJ) FILE(PKFECPP)           AB1242101;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Production_Date);
 PARAMETER(PAR.Shift_A_Low_Count);
 PARAMETER(PAR.Shift_A_Export_Count);
 PARAMETER(PAR.Shift_A_High_Count);
 PARAMETER(PAR.Shift_B_Low_Count);
 PARAMETER(PAR.Shift_B_Export_Count);
 PARAMETER(PAR.Shift_B_High_Count);
 PARAMETER(PAR.Low_Description);
 PARAMETER(PAR.Export_Description);
 PARAMETER(PAR.High_Description);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 //?USER: Process Data record

 EXECUTE FUNCTION(Change Export Loin Range) TYPE(CHGOBJ) FILE(PKFECPP)           AB1242102;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Production_Date);
 PARAMETER(PAR.Shift_A_Low_Count);
 PARAMETER(PAR.Shift_A_Export_Count);
 PARAMETER(PAR.Shift_A_High_Count);
 PARAMETER(PAR.Shift_B_Low_Count);
 PARAMETER(PAR.Shift_B_Export_Count);
 PARAMETER(PAR.Shift_B_High_Count);
 PARAMETER(PAR.Low_Description);
 PARAMETER(PAR.Export_Description);
 PARAMETER(PAR.High_Description);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


