      *****************  RPG PROGRAM HEADING  ************************
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      HPS---Datamart
      * PROGRAM:     HP295 - Datamart FIN: Targets
      *                     (Nursery/Grow Finish Only)
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     09/21/07
      *
      * FUNCTION:    Update the group header and the weekly group detail with Target info.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 12/10/08  LeAnne Ramsey
      *           The users now have the capability for the NurFin Targets to enter
      *           2 sets of targets: 1 for Normal groups and 1 for GDU groups.
      *           At the time they requested this Target change, they only anticipated
      *           inputing GDU targets for Cell 1 groups.
      *           So, if a group in this program is 1) GDU and 2) users have entered a
      *           GDU target, we will use that. Otherwise, we will use the target values
      *           the user has entered for "Normal" groups.
      *
      * 05/24/10  LeAnne Ramsey
      *           Recompile only. Added 2 fields to HPPF075-Weekly Group Detail:
      *              WBWEDTMDCY-Week Ending Date in date format mm/dd/ccyy
      *              WBPAJTIHD -Placement Adjusted Transfer In Head
      *
      * 10/18/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one.
      *
      * 10/14/16  Barb Gutierrez
      *           Recompile only. Added fields Sold days in phase, Avg Sold days in phase,
      *           Wgt open date, and company number to HPPF034.         E6136
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fcalcalb   if   e           k disk
      *  Calendar file
      *
      *
     Fhsp032    if   e           k disk
      *  Production variables
      *
      *
     Fhppf034   uf   e           k disk
      *    Datamart FIN: group header
      *
      *
     Fhsl123b   if   e           k disk
      *   NUR/FIN Yearly Targets
      *
      *
     Fhplf075f  uf   e           k disk
      *  Datamart FIN: Weekly group detail
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D count           s              3  0
      *
      *
      * Workfields
      *
     D wklastbump      s              3  0
     D wkwtlshd        s              5  0
     D wkrate          s              9  6
     D wkwks           s              3  0
     D wkdays          s              3  0
     D wkstdday        s              3  0
     D wktihd          s                   like(hgtihd)
      *
      *
      * Workfields for Date Manipulation
      *
     D wknulldt        s                   like(hgdsdt) inz(D'0001-01-01')
     D wkisodate       s               D   datfmt(*iso)
     D wkwkbegdt       s                   like(hgcldt)
     D wktoday         s              8  0
     D wktargdt        s              8  0
      *
      *
      * Parm fields
      *
     D xxcurbegdt      s              8  0
     D xxcurhist       s              1
      *
     D xxccyymmdd      s              8  0
     D xxsatdt         s              8  0
     D xxcdyr          s              4  0
     D xxcdwk          s              2  0
      *
      *
      * Define parms for the generic movement program
      *
     D zzcymd          s              8  0
     D @@nu50          s              5  0
     D gpihd           s                   like(@@nu50)
     D pinhd           s                   like(@@nu50)
     D tinhd           s                   like(@@nu50)
     D tisphd          s                   like(@@nu50)
     D tidphd          s                   like(@@nu50)
     D pouhd           s                   like(@@nu50)
     D touhd           s                   like(@@nu50)
     D tosphd          s                   like(@@nu50)
     D todphd          s                   like(@@nu50)
     D rinhd           s                   like(@@nu50)
     D rouhd           s                   like(@@nu50)
     D qinhd           s                   like(@@nu50)
     D qouhd           s                   like(@@nu50)
     D morhd           s                   like(@@nu50)
     D inahd           s                   like(@@nu50)
      *
     D @@nu92          s              9  2
     D pinlb           s                   like(@@nu92)
     D tinlb           s                   like(@@nu92)
     D tisplb          s                   like(@@nu92)
     D tidplb          s                   like(@@nu92)
     D poulb           s                   like(@@nu92)
     D toulb           s                   like(@@nu92)
     D tosplb          s                   like(@@nu92)
     D todplb          s                   like(@@nu92)
     D rinlb           s                   like(@@nu92)
     D roulb           s                   like(@@nu92)
     D qinlb           s                   like(@@nu92)
     D qoulb           s                   like(@@nu92)
     D morlb           s                   like(@@nu92)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *-----------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Read each group in the Datamart Group Header that has an open date.
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      hppf034                                90
     C                   if        *in90 = *off and                             If not EOF
     C                             hgopdt <> wknulldt
      *
      * Continue processing this group when this is:
      * 1) a History run or
      * 2) a Current run and the group is either:
      *    a) not closed or
      *    b) closed on/after the 'current' week-beginnning date from the
      *       data area.
      *
     C                   if        xxcurhist = 'H' or                           If continue
     C                             (hgcldt = wknulldt or
     C                              hgcldt >= wkwkbegdt)
      *
      * Derive a Target Date to use in retrieving "target" values.
      *
     C                   exsr      $targdt
      *
      * Using the derived "target date":
      *  1) retrieve associated Year/Quarter from the Calendar file
      *  2) retrieve "target values" from the Nur/Fin Yearly Targets
      *     file for the: Year/Quarter/Origin BGF Cell/Origin BGF Pod
      *  3) calculate "target values" for the group
      *  4) update the group's Weekly Detail records with the target values
      *
     C     wktargdt      chain     calcalb                            92
     C                   if        *in92 = *off                                 If year/qtr
     C     key01         chain     hsl123b                            92
     C                   if        *in92 = *off
     C                   exsr      $targets
     C                   exsr      $weekly
     C                   endif
     C                   endif                                                  If year/qtr
      *
      * Update Group Header record.
      *
     C                   update    hgrec
      *
     C                   endif                                                  If continue
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      * EOF Processing
     C                   seton                                        lr
      /EJECT
      *--------------------------------------------------------------------------
      * Derive a "date" to use for retrieving the "target" values
      *--------------------------------------------------------------------------
      *
     C     $targdt       begsr
      *
     C                   z-add     0             wktargdt
     C                   z-add     0             wkstdday
     C                   z-add     0             wkdays
     C                   z-add     0             wkwks
      *
      * Disposed/Closed groups
      *   1) Use Disposed Date for Target Date
      *
     C                   if        hgdsdt <> wknulldt                           If DS/CL
     C     *iso          movel     hgdsdt        wktargdt
     C                   else
      *
      * Open groups:
      * Retrieve "standard days in phase" from Production Variables file.
      * (The file has a "nursery" record and a "grow finish" record.)
      *
     C                   if        hgppcd = 'NUR  '
     C     004           chain     hsp032                             92
     C                   else
     C     005           chain     hsp032                             92
     C                   endif
      *
     C                   if        *in92 = *off
     C                   z-add     pvpvval       wkstdday
     C                   endif
      *
      * Compare "standard days" to the group's "days in phase":
      *   When the group has been open longer than the standard days,
      *       use the Week-Ending Date of this run for the "target date"
      *   Else
      *       calc a "target date" as: open date + standard days in phase
      *
     C                   if        hgphsday > wkstdday
     C                   z-add     xxsatdt       wktargdt
     C                   else
     C     hgopdt        adddur    wkstdday:*d   wkisodate
     C                   move      wkisodate     wktargdt
     C                   endif
     C                   endif                                                  If DS/Cl
      *
      * Now, we guess at how many "weekly" records this group may ultimately
      * have in the Weekly Detail file. (We need this to calc our "weekly"
      * head.)
      * So, calculate the "days" between the group's Open Date and Target Date.
      * Then, turn days into "weeks" and add 1 to the week. (We had to add
      * 1 to the week to come up with the correct number of weekly records--
      * using logic based on a "remainder" did not work.)
      *
     C                   if        wktargdt <> 0
     C     *iso          movel     wktargdt      wkisodate
     C     wkisodate     subdur    hgopdt        wkdays:*days
     C                   eval      wkwks = (wkdays / 7) + 1
     C                   endif
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------------
      * Target logic
      *--------------------------------------------------------------------------
      *
     C     $targets      begsr
      *
     C                   z-add     0             wklastbump
     C                   z-add     0             wkwtlshd
     C                   z-add     0             wktihd
      *
     C                   select
      * DISPOSED/CLOSED
     C                   when      hgdsdt <> wknulldt
      *
      *          Put "adjusted transfer in" head into the workfield for calcs.
      *
     C                   z-add     hgajtihd      wktihd
      *
      *          Calc "Cull" targets (only populated for Closed GF groups).
      *
     C                   if        hgppcd = 'GF   '                             If Grow Fin
      *
     C                   if        hggtcd = 'G' and nyggcupr <> 0               If GDU
     C                   z-add     nyggcupr      hgtcupr
     C                   else
     C                   z-add     nygcupr       hgtcupr
     C                   endif                                                  If GDU
      *
     C                   eval      wkrate = hgtcupr / 100
     C                   eval(h)   hgtcuhd = wktihd * wkrate
     C                   endif                                                  If Grow Fin
     C                   other
      *
      * OPEN GROUPS
      * Open groups do not have "transfer in" head in the Datamart Group Header.
      * So, retrieve the value and put it into the workfield.
      *
     C                   z-add     xxsatdt       zzcymd
     C                   call      'HPMOVE'      plist01
     C                   z-add     tinhd         wktihd
     C                   endsl
      *
      * We will store the Target Loss % in the file just for info
      *
      *       Grow Finish
     C                   select
     C                   when      hgppcd = 'GF   '
      *
     C                   if        hggtcd = 'G' and nyggtlspr <> 0              If GDU
     C                   z-add     nyggtlspr     hgtlspr
     C                   else
     C                   z-add     nygtlspr      hgtlspr
     C                   endif                                                  If GDU
      *
     C                   eval      wkrate = hgtlspr / 100
      *          Nursery
     C                   when      hgppcd = 'NUR  '
     C                   z-add     nyntlspr      hgtlspr
     C                   eval      wkrate = nyntlspr / 100
     C                   endsl
      *
      * Target Loss Head
     C                   eval(h)   hgtlshd = wktihd * wkrate
      *
      * Calculate the "weekly target" workfield values:
      *  1) Weekly Target Loss Head
      *  2) The last week to "bump" weekly head up by 1 on the weekly records
      *
     C                   if        wkwks <> 0
     C     hgtlshd       div       wkwks         wkwtlshd
     C                   mvr                     wklastbump
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------------------
      * Update Weekly Group Detail records for the Group
      *---------------------------------------------------------------------------------------
      *
      * The "bump" logic below needs a bit of explanation. We must use whole values for
      * "head" on the "weekly" records.
      * So, we have to "bump" head up by 1 for some of the weeks so that, when a group is
      * finally closed, the sum of this "head" value from the "weekly" records equals the
      * "target loss head" on the group record (which is the total head we used to initially
      * come up with our "weekly" head value.) The field "wklastbump" tells us the last week
      * to "bump up" the head. After this last "bump" week, we will not add 1 to the weekly
      * head.
      *
     C     $weekly       begsr
      *
     C                   z-add     0             count
     C     hghgcd        setll     hplf075f
      *
     C                   dou       *in91 = *on                                  Do weekly
     C     hghgcd        reade     hplf075f                               91
     C                   if        *in91 = *off and                             If more
     C                             wbwedt >= hgopdt
     C                   add       1             count
      *
      * Weekly Loss Head
     C                   if        count <= wklastbump
     C                   eval      wbwtlshd = wkwtlshd + 1
     C                   else
     C                   eval      wbwtlshd = wkwtlshd
     C                   endif
      *
     C                   update    wbrec
      *
     C                   endif                                                  If more
     C                   enddo                                                  Do weekly
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     *entry        plist
     C                   parm                    xxcurhist
     C                   parm                    xxcurbegdt
      *
      *
     C     plist01       plist
     C                   parm                    hghgsn
     C                   parm                    zzcymd
      * Head
     C                   parm                    gpihd                          GROUP INV
     C                   parm                    pinhd                          PIG IN
     C                   parm                    tinhd                          TRSF IN
     C                   parm                    tisphd                         SAME PHASE
     C                   parm                    tidphd                         DIFF PHASE
     C                   parm                    pouhd                          PIGS OUT
     C                   parm                    touhd                          TRSF OUT
     C                   parm                    tosphd                         SAME PHASE
     C                   parm                    tosphd                         DIFF PHASE
     C                   parm                    rinhd                          REJECT IN
     C                   parm                    rouhd                          REJECT OUT
     C                   parm                    qinhd                          QUALITY IN
     C                   parm                    qouhd                          QUALITY OUT
     C                   parm                    morhd                          MORTALITY
     C                   parm                    inahd                          INV ADJ
      * Pounds
     C                   parm                    pinlb                          PIG IN
     C                   parm                    tinlb                          TRSF IN
     C                   parm                    tisplb                         SAME PHASE
     C                   parm                    tidplb                         DIFF PHASE
     C                   parm                    poulb                          PIG OUT
     C                   parm                    toulb                          TRSF OUT
     C                   parm                    tosplb                         SAME PHASE
     C                   parm                    todplb                         DIFF PHASE
     C                   parm                    rinlb                          REJECT IN
     C                   parm                    roulb                          REJECT OUT
     C                   parm                    qinlb                          QUALITY IN
     C                   parm                    qoulb                          QUALITY OUT
     C                   parm                    morlb                          MORTALITY
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    hgobcell
     C                   kfld                    hgobpod
     C                   kfld                    cahpsyr
     C                   kfld                    cahpsqt
      *
      * If this is a 'Current' run, you will ultimately need the incoming date in ISO format
      * date comparison purposes. So, just get it ready now!
      *
     C     *iso          movel     xxcurbegdt    wkwkbegdt
      *
      * You will also need the "Saturday" week-ending date that goes with the system date.
      *
     C                   move      *date         wkisodate
     C                   move      wkisodate     wktoday
      *
     C                   call      'HP8007'
     C                   parm      wktoday       xxccyymmdd
     C                   parm      0             xxsatdt
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
     C                   endsr
      /EJECT
