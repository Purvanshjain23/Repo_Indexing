// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBTAXFR
// ?Date: 14.08.2025 Time: 03:49:19
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Read not IC invoices  - create omp300 for AR interface
CASE;

// IF PAR.Type Code is EQ Blank
IF PAR.Type_Code = *BLANK;

EXECUTE FUNCTION(RTV Inv with RmBalDue RT) TYPE(RTVOBJ) FILE(ARBDCPP)           AC2112475;
PARAMETER(PAR.Invoice_Number);
PARAMETER(PAR.Invoice_Number_Usr_2);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Invoice Suffix is IN, DM, or CM
 IF DB1.Invoice_Suffix = 'CM'/'DM'/'IN';

 // AND DB1.Invoice Number GT PAR.Invoice Number
 AND DB1.Invoice_Number > PAR.Invoice_Number;

 // Call program M3 OMS GL Invoice Post ZZ.
 CALL PROGRAM(M3 OMS GL Invoice Post ZZ) ('M3GLINV');
 PARAMETER(LCL.Return_Code_Usr);
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number_Ref);

 //?Save highest invoice number interfaced to update comp value
 CASE;

 // IF DB1.Invoice Number GT PAR.Invoice Number Usr 2
 IF DB1.Invoice_Number > PAR.Invoice_Number_Usr_2;

 // PAR.Invoice Number Usr 2 = DB1.Invoice Number
 PAR.Invoice_Number_Usr_2 = DB1.Invoice_Number;

 ENDIF;

 ENDIF;

}


ENDIF;

//?Read IC invoices  - dont have ar header so read sales hist for GL intrfc
CASE;

// IF PAR.Type Code is Inter-Plant Transfer
IF PAR.Type_Code = 'IP';

EXECUTE FUNCTION(Rtv for M3 Interface  RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC2123749;
PARAMETER(PAR.Invoice_Number);
PARAMETER('IP');
PARAMETER(PAR.Invoice_Number_Usr_2);
{
 //?USER: Initialize routine

 // LCL.Invoice Number Usr 1 = CON.*ZERO
 LCL.Invoice_Number_Usr_1 = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.Invoice Number GT PAR.Invoice Number
 IF DB1.Invoice_Number > PAR.Invoice_Number;

 // AND PAR.Type Code EQ DB1.Type Code
 AND PAR.Type_Code = DB1.Type_Code;

 //?Do on invoice number break
 CASE;

 // IF DB1.Invoice Number NE LCL.Invoice Number Usr 1
 IF DB1.Invoice_Number <> LCL.Invoice_Number_Usr_1;

 // Call program M3 OMS GL Invoice Post ZZ.
 CALL PROGRAM(M3 OMS GL Invoice Post ZZ) ('M3GLINV');
 PARAMETER(LCL.Return_Code_Usr);
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);

 //?Save highest invoice number interfaced to update comp value
 CASE;

 // IF DB1.Invoice Number GT PAR.Invoice Number Usr 2
 IF DB1.Invoice_Number > PAR.Invoice_Number_Usr_2;

 // PAR.Invoice Number Usr 2 = DB1.Invoice Number
 PAR.Invoice_Number_Usr_2 = DB1.Invoice_Number;

 ENDIF;

 // LCL.Invoice Number Usr 1 = DB1.Invoice Number
 LCL.Invoice_Number_Usr_1 = DB1.Invoice_Number;

 ENDIF;

 ENDIF;

}


ENDIF;

CASE;

// IF PAR.Invoice Number Usr 2 is GT Zero
IF PAR.Invoice_Number_Usr_2 > *ZERO;

CASE;

// IF PAR.Type Code is Inter-Plant Transfer
IF PAR.Type_Code = 'IP';

EXECUTE FUNCTION(RTV Chg NmValue Val/Co RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC2121926;
PARAMETER('M3LSTINV');
PARAMETER(PAR.Invoice_Number_Usr_2);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(CHG Company Values     CH) TYPE(CHGOBJ) FILE(PDKMREP)          AC1381501;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Company_Value_Code);
 PARAMETER(DB1.Description);
 PARAMETER(DB1.System_Value_Type);
 PARAMETER(DB1.System_Value_Alpha);
 PARAMETER(PAR.System_Value_Numeric);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp 2 IF) TYPE(EXCINTFUN)                      AC2165057;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


ENDIF;

ENDIF;

