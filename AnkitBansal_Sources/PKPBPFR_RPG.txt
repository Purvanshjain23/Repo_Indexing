     H/TITLE Tmp Western Rsrv Fix  PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISDREDD
     H* Date          : 02/02/21  Time  : 13:02:05
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKA1CPLWIF  E           K        DISK
      * RSQ : Tattoo Header             Co/Prd/Kill Date
      *
     FPKCDCPL1IF  E           K        DISK
      * RTV : Tattoo Ded/Add            Retrieval index
      *
     FPKAWCPL1IF  E           K        DISK
      * RTV : Buy Order Header          Retrieval index
      *
     FPKAQCPL0IF  E           K        DISK
      * RTV : Producer Sub-Contract     Retrieval index
      *
     FPKECCPL1IF  E           K        DISK
      * RTV : Producer SC Floor Price   Retrieval index
      *
     FPKEECPL0IF  E           K        DISK
      * RTV : Producer Cntrct RsvAct Hd Retrieval index
      *
     FPKPBPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Tmp Western Rsrv Fix  PF  Print file
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Tattoo Header
      * N : RST BOH Company Number
     I                                    P   1   20P1HMNB
      * N : POS TH Kill Date
     I                                    P   3   60P1B0DT
      * N :  TH LIve Net Amt
     I                                    P   7  102P1CAPR
      * N :  TH Carcass Net Amt
     I                                    P  11  142P1ATPR
      * N :  TH Additions Amt
     I                                    P  15  182P1A5VA
      * N :  Th Payment Net Amt
     I                                    P  19  222P1CCPR
      * N : RST PD Producer Code
     I                                       23  28 P1ABCD
     IP2PARM      DS
      * N :  Tot Cost Live CWT Usr
     I                                    P   1   32P2MNPR
     IP3PARM      DS
      * N :  Var Net Pay Usr
     I                                    P   1   42P3K0PR
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Tmp Western Rsrv Fix  PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$FENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Tmp Western Rsrv Fix  PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQKA01           BOH Company Num
     C           *LIKE     DEFN A1ABCD    WQKA02           PD Producer Cod
      * Define keylist
     C           KPSA      KLIST
     C                     KFLD           WQKA01           BOH Company Num
     C                     KFLD           WQKA02           PD Producer Cod
     C                     KFLD           A1B0DT           TH Kill Date
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           BOH Company Num
     C                     KFLD           WQKA02           PD Producer Cod
      * Setup key
     C                     Z-ADDP1HMNB    WQKA01           BOH Company Num
     C                     MOVELP1ABCD    WQKA02           PD Producer Cod
     C                     Z-ADDP1B0DT    A1B0DT           TH Kill Date
      * Establish starting position
     C           KPSA      SETLL@A1CPQ1                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        PD Producer Cod
     C                     MOVEL'Y'       W0AL02  1        TH Kill Date
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $BHMNB           BOH Company Num
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $CHMNB           BOH Company Num
     C                     MOVELA1ABCD    $CABCD           PD Producer Cod
      * Load related totals format
     C                     Z-ADDA1HMNB    $EHMNB           BOH Company Num
     C                     MOVELA1ABCD    $EABCD           PD Producer Cod
     C                     Z-ADD*ZERO     $EBRVA           Ded All other R
     C                     Z-ADD*ZERO     $EBDVA           Net Total SUM
     C                     Z-ADD*ZERO     $ECTVA           Ded All other R
     C                     Z-ADD*ZERO     $ECUVA           NET TOTAL SUM2
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDA1HMNB    $DHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $DBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    $DBONB           BOL Load Number
     C                     Z-ADDA1CVNB    $DCVNB           TH Tattoo Numbe
     C                     Z-ADDA1B0DT    $DB0DT           TH Kill Date
     C                     Z-ADDA1FENB    $DFENB           TH Head Killed
     C                     Z-ADDA1AWDT    $DAWDT           TH Purchase Dat
     C                     MOVELA1J9ST    $DJ9ST           TH Payment Type
     C                     MOVELA1BICD    $DBICD           TH Group Refere
     C                     MOVELA1CPST    $DCPST           TH Live Purchas
     C                     Z-ADDA1ACPR    $DACPR           TH Live Purchas
     C                     Z-ADDA1EGPR    $DEGPR           TH CM Gross Liv
     C                     Z-ADDA1B9PR    $DB9PR           TH Live Gross A
     C                     Z-ADDA1CAPR    $DCAPR           TH LIve Net Amt
     C                     MOVELA1C4ST    $DC4ST           TH Resale UOM
     C                     Z-ADDA1AIPR    $DAIPR           TH Recalc Live
     C                     Z-ADDA1A6DT    $DA6DT           TH Pricing Date
     C                     MOVELA1C2ST    $DC2ST           TH Resale Sprea
     C                     Z-ADDA1CXNB    $DCXNB           TH Dead On Arri
     C                     Z-ADDA1CWNB    $DCWNB           TH Head Receive
     C                     Z-ADDA1FCNB    $DFCNB           TH Yard Deads
     C                     Z-ADDA1H9NB    $DH9NB           TH Held Over
     C                     Z-ADDA1FDNB    $DFDNB           TH Head Condemn
     C                     Z-ADDA1HENB    $DHENB           TH Head Adds
     C                     Z-ADDA1HFNB    $DHFNB           TH Head Accepte
     C                     Z-ADDA1CYNB    $DCYNB           TH Live Wgt
     C                     Z-ADDA1LRNB    $DLRNB           TH Adj Live Wgt
     C                     Z-ADDA1E0NB    $DE0NB           TH Hot Wgt
     C                     Z-ADDA1A5PC    $DA5PC           TH Tot Loin Eye
     C                     Z-ADDA1FBNB    $DFBNB           TH Tot Backfat
     C                     Z-ADDA1A4PC    $DA4PC           TH Tot Light Re
     C                     Z-ADDA1F7NB    $DF7NB           TH Avg Live Wgt
     C                     Z-ADD*ZERO     $DA0VA           THD Ded/Add Amo
     C                     Z-ADDA1HDNB    $DHDNB           TH Avg Hot Wgt
     C                     Z-ADDA1F5NB    $DF5NB           TH Avg Light Re
     C                     Z-ADDA1F4NB    $DF4NB           TH Avg Lean Per
     C                     Z-ADDA1F3NB    $DF3NB           TH Avg Loin Eye
     C                     Z-ADDA1F2NB    $DF2NB           TH Avg Backfat
     C                     Z-ADDA1AVPC    $DAVPC           TH Std Yield Pe
     C                     Z-ADDA1AWPC    $DAWPC           TH Actual Yield
     C                     Z-ADDA1CWPC    $DCWPC           TH Adj Actual Y
     C                     Z-ADDA1A8PC    $DA8PC           TH Yield Differ
     C                     Z-ADDA1A7PC    $DA7PC           TH Recalc Live
     C                     Z-ADDA1B8PR    $DB8PR           TH CM Market Pr
     C                     Z-ADDA1AMPR    $DAMPR           TH CM Base Mkt
     C                     Z-ADDA1ANPR    $DANPR           TH CM Base Mkt
     C                     Z-ADDA1AYVA    $DAYVA           TH CM Sort Disc
     C                     Z-ADDA1AWVA    $DAWVA           TH CM Yield Gai
     C                     Z-ADDA1AOPR    $DAOPR           TH CM Base Carc
     C                     Z-ADDA1AXVA    $DAXVA           TH CM LN AddOn/
     C                     Z-ADDA1APPR    $DAPPR           TH CM Carcass G
     C                     Z-ADDA1ASPR    $DASPR           TH Deduction Am
     C                     Z-ADDA1A4VA    $DA4VA           TH Total Net WO
     C                     Z-ADDA1ATPR    $DATPR           TH Carcass Net
     C                     Z-ADDA1A5VA    $DA5VA           TH Additions Am
     C                     Z-ADDA1CBPR    $DCBPR           TH Payment Gros
     C                     Z-ADDA1CCPR    $DCCPR           Th Payment Net
     C                     Z-ADD*ZERO     $DCFPR           Trans Extended
     C                     Z-ADD*ZERO     $DLFPR           Th Payment Net
     C                     Z-ADDA1LPNB    $DLPNB           TH AP Voucher/D
     C                     Z-ADDA1CDPR    $DCDPR           TH Freight Amou
     C                     Z-ADDA1A7VA    $DA7VA           TH Accrual Amou
     C                     Z-ADDA1A2PR    $DA2PR           TH Fixed Cost A
     C                     MOVELA1JWST    $DJWST           TH Calc Net Sts
     C                     MOVELA1CWST    $DCWST           TH Payment Sts
     C                     MOVELA1D7ST    $DD7ST           TH Header Error
     C                     MOVELA1D8ST    $DD8ST           TH Detail Error
     C                     MOVELA1DWST    $DDWST           TH Kill Balanci
     C                     MOVELA1D6ST    $DD6ST           TH Bal to Kill
     C                     Z-ADDA1GHNB    $DGHNB           TH Commission A
     C                     Z-ADDA1BYDT    $DBYDT           TH Voucher Paym
     C                     MOVELA1E0ST    $DE0ST           TH User Error O
     C                     MOVELA1E1ST    $DE1ST           TH Held Over Re
     C                     MOVELA1E2ST    $DE2ST           TH Sex
     C                     Z-ADDA1BSDT    $DBSDT           TH Held/Ovr Com
     C                     Z-ADDA1BTDT    $DBTDT           TH Commission P
     C                     Z-ADDA1BUDT    $DBUDT           TH Actual Check
     C                     Z-ADDA1HGNB    $DHGNB           TH Shipped Weig
     C                     Z-ADDA1HHNB    $DHHNB           TH Avg Hot Wgt
     C                     Z-ADDA1HINB    $DHINB           TH FFLI
     C                     Z-ADDA1A3PR    $DA3PR           TH Kill Product
     C                     Z-ADDA1A4PR    $DA4PR           TH Cut Product
     C                     Z-ADDA1A6PR    $DA6PR           TH Render Produ
     C                     Z-ADDA1J9NB    $DJ9NB           TH Head Exclude
     C                     Z-ADDA1D6PR    $DD6PR           TH CM Bse Mkt L
     C                     Z-ADDA1D7PR    $DD7PR           TH CM Bse Mkt C
     C                     Z-ADDA1D8PR    $DD8PR           TH CM Srt Dsc L
     C                     Z-ADDA1D9PR    $DD9PR           TH CM Srt Dsc C
     C                     Z-ADDA1EAPR    $DEAPR           TH CM Yld G/L L
     C                     Z-ADDA1EBPR    $DEBPR           TH CM Yld G/L C
     C                     Z-ADDA1ECPR    $DECPR           TH CM Crc Val L
     C                     Z-ADDA1EDPR    $DEDPR           TH CM Crc Val C
     C                     Z-ADDA1EEPR    $DEEPR           TH CM Lean Prem
     C                     Z-ADDA1EFPR    $DEFPR           TH CM Lean Prem
     C                     Z-ADDA1EHPR    $DEHPR           TH CM Gross Car
     C                     MOVELA1KAST    $DKAST           TH Source Type
     C                     MOVELA1J7ST    $DJ7ST           TH Scale Ticket
     C                     Z-ADDA1OXNB    $DOXNB           TH HPS Movement
     C                     MOVELA1LKST    $DLKST           TH Source Code
     C                     MOVELA1LLST    $DLLST           TH Hog Class Ty
     C                     MOVELA1J8ST    $DJ8ST           TH Posted to HP
     C                     MOVELA1LIST    $DLIST           TH Schedule Kil
     C                     MOVELA1LJST    $DLJST           TH Shift Held O
     C                     MOVELA1NZTX    $DNZTX           TH State
     C                     MOVELA1HJCD    $DHJCD           TH Unused Code
     C                     MOVELA1R4ST    $DR4ST           TH Unused Sts 2
     C                     MOVELA1R5ST    $DR5ST           TH Commission S
     C                     MOVELA1R6ST    $DR6ST           TH Paid 2 Week
     C                     MOVELA1R7ST    $DR7ST           TH Unused Sts 1
     C                     Z-ADDA1THWT    $DTHWT           TH DOA Weight
     C                     Z-ADDA1T2WT    $DT2WT           TH Avg Lean % E
     C                     Z-ADDA1THHD    $DTHHD           TH HPS Farm Sit
     C                     Z-ADDA1T2HD    $DT2HD           TH Shift Held O
     C                     Z-ADDA1OBPR    $DOBPR           TH Sorting Amou
     C                     Z-ADDA1KOER    $DKOER           TH Head Identif
     C                     Z-ADDA1OPIR    $DOPIR           TH Percent Iden
     C                     Z-ADDA1OPEM    $DOPEM           TH Percent Acce
     C                     Z-ADDA1IORP    $DIORP           TH Head Adjuste
     C                     Z-ADDA1OWEO    $DOWEO           TH PHA Head Add
     C                     MOVELA1OQET    $DOQET           TH PHA Add Type
     C                     MOVELA1URST    $DURST           TH PHA Average
     C                     MOVELA1USST    $DUSST           TH PHA Add Reas
     C                     Z-ADDA1HHPC    $DHHPC           TH PHA Yield Pe
     C                     Z-ADDA1S9PR    $DS9PR           TH PHA Lean Prm
     C                     Z-ADDA1TAPR    $DTAPR           TH VC Gross Val
     C                     Z-ADDA1TBPR    $DTBPR           TH Excluded Gro
     C                     Z-ADDA1JFUR    $DJFUR           TH Avg Lean %
     C                     Z-ADDA1KRIF    $DKRIF           TH Broken Back
     C                     Z-ADDA1KORF    $DKORF           TH Hot Scl Uplo
     C                     Z-ADDA1KAPR    $DKAPR           TH Unused Nbr 4
     C                     Z-ADDA1KROT    $DKROT           TH Excluded Car
     C                     Z-ADDA1OTJG    $DOTJG           TH Excluded Pre
     C                     Z-ADDA1IRJG    $DIRJG           TH Unused Nbr 7
     C                     Z-ADDA1IMJF    $DIMJF           TH Unused Nbr 8
     C                     Z-ADDA1IRGF    $DIRGF           TH Unused Nbr 9
     C                     Z-ADDA1KRJF    $DKRJF           TH Unused Nbr 1
     C                     Z-ADDA1OJRF    $DOJRF           TH Break Even P
     C                     Z-ADDA1KFOR    $DKFOR           TH Meat Value F
     C                     Z-ADDA1ORJK    $DORJK           TH Yld Parm Adj
     C                     Z-ADDA1OMVJ    $DOMVJ           TH PHA Sort Dis
     C                     Z-ADDA1MVNF    $DMVNF           TH Avg Loin Eye
     C                     Z-ADDA1MCNF    $DMCNF           TH Avg Backfat
     C                     Z-ADDA1NCNF    $DNCNF           TH HITCH Old Pa
     C                     Z-ADDA1NCHF    $DNCHF           TH MPR Sort Los
     C                     Z-ADDA1IGIR    $DIGIR           TH Unused Nbr 1
     C                     Z-ADDA1KFJR    $DKFJR           TH Unused Nbr 2
     C                     Z-ADDA1EADT    $DEADT           TH Cold Scl Upl
     C                     Z-ADDA1EBDT    $DEBDT           TH Cold Scl Upl
     C                     Z-ADDA1ECDT    $DECDT           TH Head LFT
     C                     Z-ADDA1EDDT    $DEDDT           TH Head EUT/KOA
     C                     Z-ADDA1EEDT    $DEEDT           TH Unused Date
     C                     MOVELA1U4ST    $DU4ST           TH Unused Sts 1
     C                     MOVELA1U5ST    $DU5ST           TH Unused Sts 2
     C                     MOVELA1U6ST    $DU6ST           TH Unused Sts 3
     C                     MOVELA1U7ST    $DU7ST           TH Unused Sts 4
     C                     MOVELA1U8ST    $DU8ST           TH Unused Sts 5
     C                     MOVELA1U9ST    $DU9ST           TH Unused Sts 6
     C                     MOVELA1VAST    $DVAST           TH Unused Sts 7
     C                     MOVELA1VBST    $DVBST           TH Unused Sts 8
     C                     MOVELA1AGCD    $DAGCD           GN Genetic Code
     C                     MOVELA1BECD    $DBECD           HC Class Code
     C                     MOVELA1BDCD    $DBDCD           DF Defect Code
     C                     MOVELA1CSCD    $DCSCD           THP Process Cod
     C                     MOVELA1ABCD    $DABCD           PD Producer Cod
     C                     MOVELA1AECD    $DAECD           PL Location Cod
     C                     MOVELA1ACCD    $DACCD           HB Buyer Code
     C                     MOVELA1AAVN    $DAAVN           RS User Changed
     C                     Z-ADDA1AADT    $DAADT           RS Date Changed
     C                     Z-ADDA1AMTM    $DAMTM           RS Time Changed
     C                     MOVELA1AJST    $DAJST           RS Record Statu
     C                     MOVELA1AHVN    $DAHVN           RS Job
     C                     MOVELA1AGVN    $DAGVN           RS Program
     C                     MOVELA1ABVN    $DABVN           RS User Added
     C                     Z-ADDA1ABDT    $DABDT           RS Date Added
     C                     Z-ADDA1ABTM    $DABTM           RS Time Added
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $DA0VA    $EBRVA           Ded All other R
     C                     ADD  $DCFPR    $ECTVA           Ded All other R
     C                     ADD  $DCCPR    $EBDVA           Net Total SUM
     C                     ADD  $DLFPR    $ECUVA           NET TOTAL SUM2
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN A1HMNB    WZA001           BOH Company Num
     C                     Z-ADDA1HMNB    WZA001
     C           *LIKE     DEFN A1ABCD    WZA002           PD Producer Cod
     C                     MOVELA1ABCD    WZA002
     C           *LIKE     DEFN A1B0DT    WZA003           TH Kill Date
     C                     Z-ADDA1B0DT    WZA003
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@A1CPQ1                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * CASE: DB1.PD Producer Code NE WRK.PD Producer Code
     C           A1ABCD    IFNE WUABCD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DB1.TH Kill Date GT WRK.Date To   USR
      *   |- c2    : DB1.TH Kill Date LT WRK.Date From USR
      *   '-
     C           A1B0DT    IFGT WUB4DT                     *IF
     C           A1B0DT    ORLT WUB3DT                     *OR
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE: DB1.TH Hog Class Type is Market
     C           A1LLST    IFEQ 'M'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE: DB1.TH Head Killed is *Zeros
     C           A1FENB    IFEQ *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        BOH Company Num
     C                     MOVEL*BLANK    W0AL01  1        PD Producer Cod
     C                     MOVEL*BLANK    W0AL02  1        TH Kill Date
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        PD Producer Cod
     C                     MOVEL'Y'       W0AL02  1        TH Kill Date
     C                     ELSE
      * Next record - Detect level breaks
     C           A1HMNB    IFNE WZA001                     BOH Company Num
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           A1ABCD    IFNE WZA002                     PD Producer Cod
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           A1B0DT    IFNE WZA003                     TH Kill Date
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$EKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Tmp Western Rsrv Fix  PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Tmp Western Rsrv Fix  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print BOH Company Number of Tmp Western Rsrv Fix  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Print format
     C                     WRITE$BKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print PD Producer Code of Tmp Western Rsrv Fix  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print TH Kill Date of Tmp Western Rsrv Fix  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Detail line. of Tmp Western Rsrv Fix  PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
     C           A1FENB    MULT A1F7NB    $DLRNB           TH Adj Live Wgt
      * Rtv Tattoo Ded/Add    RT - Tattoo Ded/Add  * 
     C                     EXSR SARVGN
      * Tot Cost Live CWT Usr
      * CASE: DB1.TH Payment Type is Live
     C           A1J9ST    IFEQ 'L'                        *IF
     C                     Z-ADDA1ACPR    P2MNPR           Tot Cost Live C
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDA1EGPR    P2MNPR           Tot Cost Live C
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0001  52       PSC FLoor Price
     C                     MOVEL*BLANK    WN0002  1        PSC Sub-Contrac
     C                     Z-ADD*ZERO     WN0003  70       PFP Week Ending
     C                     Z-ADD*ZERO     WN0004  52       PFP Adjusted Fl
     C                     MOVEL*BLANK    WN0005  5        PC Contract Cod
     C                     MOVEL*BLANK    WN0006  5        PSC Sub-Contrac
     C                     MOVEL*BLANK    WN0007  1        Balance Exists
      *
      * Clc Reserve Amount    IF
     C                     Z-ADD*ZERO     P3K0PR           Var Net Pay Usr
      * Rtv Sub-Contract Type RT - Buy Order Header  * 
     C                     EXSR SBRVGN
      * Rtv Prior Sunday      XF - STR Order Management Sys  * 
     C                     CALL 'PDLNXFR'              90  Rtv Prior Sunda
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $DHMNB    WQ0001  30       Company Number
     C                     PARM $DAWDT    WQ0002  70       Kill Date Usr
     C           WN0003    PARM *ZERO     WQ0003  70       Date USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDLNXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * RTV Floor Price       RT - Producer SC Floor Price  * 
     C                     EXSR SDRVGN
      * Val Reserv Acct Exists RT - Producer Cntrct RsvAct Hd  * 
     C                     EXSR SERVGN
      * Calculate the unit price
      * CASE: PAR.Balance Exists USR is Yes
     C           WN0007    IFEQ 'Y'                        *IF
     C           WN0004    ADD  WN0001    W0WA             *Synon (15,2) w
      * Determine unit price if there is a reserve account balance
      * CASE: PAR.TH CM Gross Live /CWT GT PGM.*Synon (15,2) work field
     C           P2MNPR    IFGT W0WA                       *IF
     C                     Z-ADDW0WA      P3K0PR           Var Net Pay Usr
     C                     ELSE
      * CASE: PAR.TH CM Gross Live /CWT GT PAR.PFP Adjusted Floor Price
     C           P2MNPR    IFGT WN0004                     *IF
     C                     Z-ADDP2MNPR    P3K0PR           Var Net Pay Usr
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0004    P3K0PR           Var Net Pay Usr
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Determine unit price if there is no reserve account balance
      * CASE: PAR.TH CM Gross Live /CWT GT PAR.PFP Adjusted Floor Price
     C           P2MNPR    IFGT WN0004                     *IF
     C                     Z-ADDP2MNPR    P3K0PR           Var Net Pay Usr
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0004    P3K0PR           Var Net Pay Usr
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  P2MNPR    P3K0PR           Var Net Pay Usr
      * Clc UOM Extension     IF
      * Extension
      * CASE: PAR.Trans UOM USR is Flat
     C           'NL'      IFEQ 'FL'                       *IF
      * * * * * *   FLAT    * * * * *
      * FLAT
      * CASE: PAR.Trans UOM USR is Flat
     C           'NL'      IFEQ 'FL'                       *IF
     C           P3K0PR    MULT 1         $DCFPR           Trans Extended
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Head UOM
     C           'NL'      IFEQ 'DH'                       *IF
     C           'NL'      OREQ 'RH'
     C           'NL'      OREQ 'YH'
     C           'NL'      OREQ 'CH'
     C           'NL'      OREQ 'KH'
     C           'NL'      OREQ 'NH'
     C           'NL'      OREQ 'DY'
     C           'NL'      OREQ 'RX'
     C           'NL'      OREQ 'HM'
     C           'NL'      OREQ 'DE'
      * * * * * *    HEAD   * * * * *
      * HEAD
      * CASE: PAR.Trans UOM USR is Received Head
     C           'NL'      IFEQ 'RH'                       *IF
     C           $DCWNB    MULT P3K0PR    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Received Hd less Yard Dd
     C           'NL'      IFEQ 'RX'                       *IF
     C           $DCWNB    SUB  $DFCNB    WUF6NB           Net Head Usr
     C           WUF6NB    MULT P3K0PR    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Killed Head
     C           'NL'      IFEQ 'KH'                       *IF
     C           $DFENB    MULT P3K0PR    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Condemned Head
     C           'NL'      IFEQ 'CH'                       *IF
     C           $DFDNB    MULT P3K0PR    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Yard Deads Head
     C           'NL'      IFEQ 'YH'                       *IF
     C           $DFCNB    MULT P3K0PR    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is DOA Head
     C           'NL'      IFEQ 'DH'                       *IF
     C           $DCXNB    MULT P3K0PR    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Net Head
     C           'NL'      IFEQ 'NH'                       *IF
     C                     Z-ADD$DCWNB    WUF6NB           Net Head Usr
     C                     SUB  $DFCNB    WUF6NB           Net Head Usr
     C                     SUB  $DFDNB    WUF6NB           Net Head Usr
     C           WUF6NB    MULT P3K0PR    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is DOA Head + Yard Dead Head
     C           'NL'      IFEQ 'DY'                       *IF
     C           $DCXNB    ADD  $DFCNB    WUF6NB           Net Head Usr
     C           WUF6NB    MULT P3K0PR    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is DOA HD + Yard Dead + EUT
     C           'NL'      IFEQ 'DE'                       *IF
     C           $DCXNB    ADD  $DFCNB    WUF6NB           Net Head Usr
     C                     ADD  $DEDDT    WUF6NB           Net Head Usr
     C           WUF6NB    MULT P3K0PR    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Received Head /100 Miles
     C           'NL'      IFEQ 'HM'                       *IF
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (x1 * x2 * (x3/x4))
      * x1    : PAR.PSM Miles to Company
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Head Killed
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x4    : CON.100
     C           *ZERO     MULT $DFENB    W0WA01           *Synon (15,2) w
     C           P3K0PR    DIV  100       W0WB02    H      *Synon (15,5) w
     C           W0WA01    MULT W0WB02    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $DCFPR           Trans Extended
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Weight UOM
     C           'NL'      IFEQ 'CW'                       *IF
     C           'NL'      OREQ 'LW'
     C           'NL'      OREQ 'NL'
     C           'NL'      OREQ 'SW'
     C           'NL'      OREQ 'LX'
     C           'NL'      OREQ 'SX'
      * * * * * *    WEIGHT   * * * * *
      * WEIGHT
      * CASE: PAR.Trans UOM USR is Live Hundred Weight
     C           'NL'      IFEQ 'LW'                       *IF
      * Live hundred wgt
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.TH Live Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           $DCYNB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P3K0PR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is LW less Yard Dead Wgt
     C           'NL'      IFEQ 'LX'                       *IF
      *  Calc wgt of yard dead based on Th avg live wgt
     C           $DF7NB    MULT $DFCNB    WUCCNB           Yard dead weigh
      *   Subtract Yard Dead wgt from Live Wgt
     C           $DCYNB    SUB  WUCCNB    WUOONB           Live Weight
      * Live hundred wgt less Yd
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Live Weight           USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUOONB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P3K0PR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Carcass Hundred Weight
     C           'NL'      IFEQ 'CW'                       *IF
      * Carcass Hundred Wgt
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           $DE0NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P3K0PR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Net Live Weight
     C           'NL'      IFEQ 'NL'                       *IF
     C                     Z-ADD$DCWNB    WUF6NB           Net Head Usr
     C                     SUB  $DFCNB    WUF6NB           Net Head Usr
     C                     SUB  $DFDNB    WUF6NB           Net Head Usr
      * * Insert avg live weight
     C           WUF6NB    MULT $DF7NB    WUVBNB           Net Live Weight
      * Net Live Weight
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Net Live Weight Usr
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUVBNB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P3K0PR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Shipped Weight - Doa's
     C           'NL'      IFEQ 'SW'                       *IF
      *   Calc Avg shipped wgt, then calc wgt of DOA'S
      * This rule was defined on 01/14/97
      * The Calculations for Avg Shipped Weights are
      * Head Received should be the live hogs that walk across the scale
      * Doa's should be the hogs that died either after we collected
      *       or before we weighed them
      * Avg Shipped Weight : Shipped Weight /(Head Received + Doa's)
     C           $DCWNB    ADD  $DCXNB    WUEXNB           Hd Cnt Org Ship
      * CASE: WRK.Hd Cnt Org Ship Usr is *Zeros
     C           WUEXNB    IFEQ 0                          *IF
     C                     Z-ADD*ZERO     WUY9NB           Avg Weight USR
     C                     ELSE
      * CASE: *OTHERWISE
     C           $DHGNB    DIV  WUEXNB    WUY9NB           Avg Weight USR
     C                     END                             *FI
     C           WUY9NB    MULT $DCXNB    WUEVNB           Doa's Avg Weigh
      *   Subtract doa's from Shipped Wgt
     C           $DHGNB    SUB  WUEVNB    WUZ4NB           Ship Wgt Tot Us
      * Shipped Weight Total Ext
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Ship Wgt Tot Usr
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUZ4NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P3K0PR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is SW - Doa's WT - Yrd Dd WT
     C           'NL'      IFEQ 'SX'                       *IF
      *   Calc Avg shipped wgt, then calc wgt of DOA'S and Yard Deads
      * This rule was defined on 01/14/97
      * The Calculations for Avg Shipped Weights are
      * Head Received should be the live hogs that walk across the scale
      * Doa's should be the hogs that died either after we collected
      *       or before we weighed them
      * Avg Shipped Weight : Shipped Weight /(Head Received + Doa's)
     C           $DCWNB    ADD  $DCXNB    WUEXNB           Hd Cnt Org Ship
      * CASE: WRK.Hd Cnt Org Ship Usr is *Zeros
     C           WUEXNB    IFEQ 0                          *IF
     C                     Z-ADD*ZERO     WUY9NB           Avg Weight USR
     C                     ELSE
      * CASE: *OTHERWISE
     C           $DHGNB    DIV  WUEXNB    WUY9NB           Avg Weight USR
     C                     END                             *FI
     C           WUY9NB    MULT $DFCNB    WUCCNB           Yard dead weigh
     C           WUY9NB    MULT $DCXNB    WUEVNB           Doa's Avg Weigh
      *   Subtract Doa's and Subtract Yard Dead wgt from Shipped Wgt
     C           $DHGNB    SUB  WUEVNB    WUZ4NB           Ship Wgt Tot Us
     C                     SUB  WUCCNB    WUZ4NB           Ship Wgt Tot Us
      * Shipped wgt less Yd
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Ship Wgt Tot Usr
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUZ4NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P3K0PR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $DCFPR           Trans Extended
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Value UOM
     C           'NL'      IFEQ 'GV'                       *IF
     C           'NL'      OREQ 'BD'
      * * * * * *    VALUE    * * * * *
      * VALUE
      * CASE: PAR.Trans UOM USR is Gross Hundred Value
     C           'NL'      IFEQ 'GV'                       *IF
      * Gross Hundred Value
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.TH Payment Gross
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           $DCBPR    DIV  100       W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT P3K0PR    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Carcass Hundred Weight
     C           'NL'      IFEQ 'CW'                       *IF
      * Carcass Hundred Value
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           $DE0NB    DIV  100       W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT P3K0PR    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Base Market Dollars
     C           'NL'      IFEQ 'BD'                       *IF
      * Clc Base Mkt Dollars  XF - STR Unit of Measure Calc  * 
     C                     CALL 'PKBSE01'              90  Clc Base Mkt Do
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $DHMNB    WQ0004  30       BOH Company Num
     C                     PARM $DAWDT    WQ0005  70       TH Purchase Dat
     C                     PARM $DCYNB    WQ0006  71       TH Live Wgt
     C                     PARM 'RSVAC'   WQ0007  5        DED D/A Code
     C           WUCSPR    PARM *ZERO     WQ0008  92       Base Mkt Prc Am
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKBSE01' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: WRK.Base Mkt Prc Amt Tot USR GE WRK.Zero USR
     C           WUCSPR    IFGE WUE9NB                     *IF
      * Base Market Dollars
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Base Mkt Prc Amt Tot USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUCSPR    DIV  100       W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT P3K0PR    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $DCFPR           Trans Extended
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DCFPR           Trans Extended
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Percent UOM
     C           'NL'      IFEQ *BLANK                     *IF
      * * * * * *    PERCENT   * * * * *
      * PERCENT
      * CASE: PAR.Trans UOM USR is Percent of Gross Value
     C           'NL'      IFEQ *BLANK                     *IF
      * Percent of Gross Value
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.Trans Unit Amt Usr
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.TH Payment Gross
     C           P3K0PR    DIV  100       W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT $DCBPR    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $DCFPR           Trans Extended
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * New Addition Amount
      * PAR.TH Additions Amt =
      *    *COMPUTE (x1 + (x2 * x3) + x4)
      * x1    : DB1.TH Additions Amt
      * +     : PGM.*Synon (15,2) work field
      * x2    : CUR.THD Ded/Add Amount
      * *     : PGM.*Synon (15,2) work field *
      * x3    : CON.-1
      * +     : PGM.*Synon (15,2) work field
      * x4    : CUR.Trans Extended Amt Usr
     C           $DA0VA    MULT -1        W0WA02           *Synon (15,2) w
     C           A1A5VA    ADD  W0WA02    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  $DCFPR    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P1A5VA           TH Additions Am
     C           A1A4VA    ADD  P1A5VA    $DLFPR           Th Payment Net
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert TH Kill Date to display format
      * Convert date
     C           1000000   ADD  $DB0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDB0DT
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Tmp Western Rsrv Fix  PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Company Number of Tmp Western Rsrv Fix  PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * PD Producer Code of Tmp Western Rsrv Fix  PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  1         W0FSUM
     C                     END                             FI
      *
      * * TH Kill Date of Tmp Western Rsrv Fix  PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Tmp Western Rsrv Fix  PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD2         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD5         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Tattoo Ded/Add    RT - Tattoo Ded/Add  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           CDHMNB           BOH Company Num
     C                     KFLD           CDBNNB           BOH Buy Order N
     C                     KFLD           CDBONB           BOL Load Number
     C                     KFLD           CDCVNB           TH Tattoo Numbe
     C                     KFLD           CDB0DT           TH Kill Date
     C                     KFLD           CDBQCD           DED D/A Code
      * Setup key
     C                     Z-ADD$DHMNB    CDHMNB           BOH Company Num
     C                     Z-ADD$DBNNB    CDBNNB           BOH Buy Order N
     C                     Z-ADD$DBONB    CDBONB           BOL Load Number
     C                     Z-ADD$DCVNB    CDCVNB           TH Tattoo Numbe
     C                     Z-ADD$DB0DT    CDB0DT           TH Kill Date
     C                     MOVEL'RSVAC'   CDBQCD           DED D/A Code
      * Establish starting position
     C           KRSSA     CHAIN@CDCPIU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0174' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     $DA0VA           THD Ded/Add Amo
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDCDA0VA    $DA0VA           THD Ded/Add Amo
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Sub-Contract Type RT - Buy Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           AWHMNB           BOH Company Num
     C                     KFLD           AWBNNB           BOH Buy Order N
      * Setup key
     C                     Z-ADD$DHMNB    AWHMNB           BOH Company Num
     C                     Z-ADD$DBNNB    AWBNNB           BOH Buy Order N
      * Establish starting position
     C           KRSSB     CHAIN@AWCPBI              90    *
      * Data record not found
     C   90                MOVEL'PRK0049' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAWAKCD    WN0005           PC Contract Cod
     C                     MOVELAWALCD    WN0006           PSC Sub-Contrac
      * Rtv Sub-Contract Type RT - Producer Sub-Contract  * 
     C                     EXSR SCRVGN
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Sub-Contract Type RT - Producer Sub-Contract  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           AQAKCD           PC Contract Cod
     C                     KFLD           AQALCD           PSC Sub-Contrac
      * Setup key
     C                     MOVELAWAKCD    AQAKCD           PC Contract Cod
     C                     MOVELAWALCD    AQALCD           PSC Sub-Contrac
      * Establish starting position
     C           KRSSC     CHAIN@AQCPA0              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0037' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0001           PSC FLoor Price
     C                     MOVEL*BLANK    WN0002           PSC Sub-Contrac
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDAQA8PR    WN0001           PSC FLoor Price
     C                     MOVELAQF3ST    WN0002           PSC Sub-Contrac
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Floor Price       RT - Producer SC Floor Price  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           ECAKCD           PC Contract Cod
     C                     KFLD           ECALCD           PSC Sub-Contrac
     C                     KFLD           ECDJDT           PFP Week Ending
      * Setup key
     C                     MOVELWN0005    ECAKCD           PC Contract Cod
     C                     MOVELWN0006    ECALCD           PSC Sub-Contrac
     C                     Z-ADDWN0003    ECDJDT           PFP Week Ending
      * Establish starting position
     C           KRSSD     CHAIN@ECCPAG              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0816' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0004           PFP Adjusted Fl
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDECODPR    WN0004           PFP Adjusted Fl
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Val Reserv Acct Exists RT - Producer Cntrct RsvAct Hd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'N'       WN0007           Balance Exists
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           EEAKCD           PC Contract Cod
      * Setup key
     C                     MOVELWN0005    EEAKCD           PC Contract Cod
      * Establish starting position
     C           KRSSE     CHAIN@EECPAP              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0820' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * CASE: DB1.PAH Account Balance GT WRK.Zero USR
     C           EEEJVA    IFGT WUE9NB                     *IF
     C                     MOVEL'Y'       WN0007           Balance Exists
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modifications and Comments
      *================================================================
      * H16853 ISE 01/23/2021 - Increased the length from 5 to 7 and corr
      *                         alignment of Buy Order Number field.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P1HMNB           BOH Company Num
     C                     Z-ADD*ZERO     P1B0DT           TH Kill Date
     C                     Z-ADD*ZERO     P1CAPR           TH LIve Net Amt
     C                     Z-ADD*ZERO     P1ATPR           TH Carcass Net
     C                     Z-ADD*ZERO     P1A5VA           TH Additions Am
     C                     Z-ADD*ZERO     P1CCPR           Th Payment Net
     C                     MOVEL*BLANK    P1ABCD           PD Producer Cod
     C                     Z-ADD*ZERO     P2MNPR           Tot Cost Live C
     C                     Z-ADD*ZERO     P3K0PR           Var Net Pay Usr
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Date From USR
     C                     Z-ADD*ZERO     WUB3DT  70
      * Define work field Date To   USR
     C                     Z-ADD*ZERO     WUB4DT  70
      * Define work field PD Producer Code
     C                     MOVEL*BLANK    WUABCD  6
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    A1HMNB           BOH Company Num
     C                     MOVEL*LOVAL    A1ABCD           PD Producer Cod
     C                     MOVEL*LOVAL    A1B0DT           TH Kill Date
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Define work field Net Head Usr
     C                     Z-ADD*ZERO     WUF6NB  50
      * Define work field Yard dead weight      USR
     C                     Z-ADD*ZERO     WUCCNB  71
      * Define work field Live Weight           USR
     C                     Z-ADD*ZERO     WUOONB  71
      * Define work field Net Live Weight Usr
     C                     Z-ADD*ZERO     WUVBNB  71
      * Define work field Hd Cnt Org Ship Usr
     C                     Z-ADD*ZERO     WUEXNB  50
      * Define work field Avg Weight USR
     C                     Z-ADD*ZERO     WUY9NB  51
      * Define work field Doa's Avg Weight Usr
     C                     Z-ADD*ZERO     WUEVNB  71
      * Define work field Ship Wgt Tot Usr
     C                     Z-ADD*ZERO     WUZ4NB  71
      * Define work field Base Mkt Prc Amt Tot USR
     C                     Z-ADD*ZERO     WUCSPR  92
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WA   152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WB02 155       *Synon (15,5) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * Modifications and Comments
     C                     EXSR UASUBR                     Modifications a
     C                     Z-ADD360       P1HMNB           BOH Company Num
     C                     MOVEL*BLANK    P1ABCD           PD Producer Cod
     C                     MOVEL'WEST'    P1ABCD           PD Producer Cod
     C                     Z-ADD980710    P1B0DT           TH Kill Date
     C                     Z-ADD980710    WUB3DT           Date From USR
     C                     Z-ADD980929    WUB4DT           Date To   USR
     C                     MOVEL*BLANK    WUABCD           PD Producer Cod
     C                     MOVEL'WEST'    WUABCD           PD Producer Cod
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
