// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWJ4PVR
// ?Date: 14.08.2025 Time: 02:56:41
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//?12/13/2019 JBB E57521 - EDI Carcass Summary Prompt and Sequel
//?           Function created.  This new function will replace the
//?           Sequel Script on menu HPE005, menu option 16.  The user
//?           will enter a From Date and a To Date, optionally a
//?           Source Code (blank = all), and an email address.  Upon
//?           confirmation, a CL is submitted that will EXECUTE a
//?           Sequel View based upon the user selection.
ENDDO;

// PAR.Oms Application Code = CND.Hog Procurement & Evaluat
PAR.Oms_Application_Code = 'HPE';

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.Oms_Application_Code);
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?USER: Load screen

// DTL.BOH Company Number = PAR.CC Company Number
DTL.BOH_Company_Number = PAR.CC_Company_Number;

//?USER: Process command keys

//?F4=Prompt Source Code
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

//?Prompt on TH Source Code
CASE;

// IF PGM.*Cursor field <IS> DTL.TH Source Code
IF PGM.*Cursor_field = DTL.TH_Source_Code;

// Call program Sel Source            SR.
CALL PROGRAM(Sel Source            SR) ('PKDRSRR');
PARAMETER(DTL.TH_Source_Code);

ENDIF;

ENDIF;

//?USER: Validate fields

//?SNDERRMSG: From Date > To Date
CASE;

// IF DTL.Date From USR GT DTL.Date To   USR
IF DTL.Date_From_USR > DTL.Date_To_USR;

// Send error message - 'From date cannot be later than to date.'
ERROR(PRK1450);
MSGPARM(DTL.Date_From_USR);
MSGPARM(DTL.Date_To_USR);

ENDIF;

//?USER: Validate relations

CASE;

// IF DTL.TH Source Code is EQ Blank
IF DTL.TH_Source_Code = *BLANK;

// LCL.SR Description = CON.All Source Codes
LCL.SR_Description = 'All Source Codes';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Val Source            RT) TYPE(RTVOBJ) FILE(PKAAREP)           AB1202234;
PARAMETER(DTL.TH_Source_Code);
PARAMETER(LCL.SR_Description);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


//?If record not found SNDERRMSG; Else load description
CASE;

// IF LCL.Record Found USR is Record Not Found
IF LCL.Record_Found_USR = 'N';

// Send error message - 'Source not found.'
ERROR(PRK1470);
MSGPARM(DTL.TH_Source_Code);

ENDIF;

ENDIF;

//?USER: User defined action

//?Convert dates to mm/dd/yyy for message text on EXECUTE command
// Call program Cvt date to mm/dd/yyyy UP.
CALL PROGRAM(Cvt date to mm/dd/yyyy UP) ('PWJ8UPR');
PARAMETER(DTL.Date_From_USR);
PARAMETER(PAR.Date_From_mm_dd_yyyy);

// Call program Cvt date to mm/dd/yyyy UP.
CALL PROGRAM(Cvt date to mm/dd/yyyy UP) ('PWJ8UPR');
PARAMETER(DTL.Date_To_USR);
PARAMETER(PAR.Date_To_mm_dd_yyyy);

// Call program Pmt EDI Crc Summ Rprt CL.
SBMJOB;
CALL PROGRAM(Pmt EDI Crc Summ Rprt CL) ('PWJ5UPC');
PARAMETER(DTL.Date_From_USR);
PARAMETER(DTL.Date_To_USR);
PARAMETER(DTL.TH_Source_Code);
PARAMETER(DTL.EMail_Address);
PARAMETER(PAR.Date_From_mm_dd_yyyy);
PARAMETER(PAR.Date_To_mm_dd_yyyy);
SBMJOBOVR JOB(EDICRCSUMM);
SBMJOBEND;

// Send information message - 'Job &1 has been submitted.'
MESSAGE(PRK1500 *INFO);
MSGPARM('EDICRCSUMM');

