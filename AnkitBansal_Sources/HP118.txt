      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP118
      * TITLE:       REVISE EXPENSE TICKET
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     05/05/94
      *
      * FUNCTION: USES AN EDIT RECORD FORMAT TO ADD/CHANGE/DELETE
      *           AN EXPENSE TICKET.
      *
      *           THIS PROGRAM IS CALLED FROM HP418 - WORK WITH
      *           EXPENSE TICKETS.
      *
      *           THE USER MAY DELETE AN EXISTING RECORD BY TAKING
      *           F11=DELETE FROM THIS PROGRAM.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 09/09/94  LEANNE FEDOR
      *           CHANGED THE EDIT ON THE BEGIN/END DATES TO ALLOW THE
      *           USER TO ENTER TICKETS 1 PERIOD INTO THE FUTURE
      *           INSTEAD OF ONLY FOR THE CURRENT PERIOD.
      *
      * 11/15/94  MARY PALMER
      *           ADDED EDIT THAT FROM EXPENSE DATE AND TO EXPENSE DATE
      *           CANNOT BE GREATER THAN TODAY'S DATE.
      *
      * 01/18/95  LEANNE FEDOR
      *           ADDED A NEW ALLOCATION FIELD OF 'COST CENTER'.
      *
      * 04/24/95  LEANNE FEDOR
      *           CHANGED FARM SITE CODE FROM ALPHA TO NUMERIC.
      *
      * 08/30/95  LEANNE FEDOR
      *           ADDED BUSINESS OFFICE AS AN INPUT PARM ON THE CALL
      *           TO HP543-SELECT FARM SITE.
      *
      * 01/31/01  LeAnne Fedor
      *           In preparation for allowing groups on a farm to have different
      *           production types, we will no longer default the 'production type' of a farm
      *           into the production type field in the expense ticket file.
      *
      * 07/18/02  LeAnne Fedor
      *           In preparation for allowing groups on a farm to have different
      *           production phases, we will no longer default the 'production phase'
      *           of a farm into the 'production phase' field in the expense ticket file.
      *
      * 12/12/02  LeAnne Fedor
      *           In preparation for allowing more flexibility to change a group's production
      *           phase/type, we have changed the use/logic of these fields in the Expense
      *           Ticket file.
      *
      *           Currently, the production phase/type fields hold:
      *             1) the phase/type of the group when the ticket is 1) direct or 2) already
      *                allocated OR
      *             2) the allocation level when the ticket is T=to be allocated....if the
      *                user has elected to allocate at the phase and/or type level
      *
      *           With our change, the phase/type will be BLANK on ALL records that are
      *           a) direct or b) already allocated. These records will have a group which
      *           we will use to retrieve the group's phase/type from the Hog Group file when
      *           needed for reporting, etc.
      *
      *           The only records that have a value in the production phase/type fields are
      *           those that are yet to be allocated...and, then, only if the user has specified
      *           them as allocation levels.
      *
      * 07/02/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * SET DATE FORMAT TO YMD FOR COMPARISON TO FROM AND TO DATES
      *
     H DATEDIT(*YMD)
      *
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD118    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP007    IF   E           K DISK
      *    DIVISION                 (KEY: DVDVCD)
      *
     FHSP008    IF   E           K DISK
      *    REGION                   (KEY: RGRGCD)
      *
     FHSP009    IF   E           K DISK
      *    BUSINESS OFFICE          (KEY: BOBOBO)
      *
     FHSP010    IF   E           K DISK
      *    PRODUCTION TYPE          (KEY: PTPTCD)
      *
     FHSP011    IF   E           K DISK
      *    PRODUCTION PHASE         (KEY: PPPPCD)
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE                (KEY: FSFSCD)
      *
     FHSP019    IF   E           K DISK
      *  FARM BUILDINGS             (KEY: FBFSCD FBBLCD)
      *
     FHSP034    IF   E           K DISK
      *  HOG GROUPS                 (KEY: HGHGCD)
      *
     FHSL034D   IF   E           K DISK
     F                                     RENAME(HGREC:HGRECD)
      *  HOG GROUPS                 (KEY: HGHGSN)
      *
     FHSP040    IF   E           K DISK
      *  ALLOCATION METHOD          (KEY: AMAMCD)
      *
     FHSP048    UF A E           K DISK
      *   EXPENSE TICKET               (KEY: XTXTSN)
      *
     FHSP052    IF   E           K DISK
      *  EXPENSE CODE MASTER        (KEY: EXEXCD)
      *
     FHSJ052B   IF   E           K DISK
     F                                     RENAME(EXREC:EXRECB)
      *  JOIN OF EXPENSE CODE MASTER AND REPORT CODE
      *  SHOWING ONLY THOSE EXPENSE CODES WITH USER-CONTROLLED
      *  REPORT CODES
      *                             (KEY: EXEXCD)
      *                             (SELECT: RPUCFL = Y)
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO, DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DAXTSN'
      *---------------------------------------------------------------
     D                 DS
     D  DAXTSN                 1      7  0
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DAAPER'
      *---------------------------------------------------------------
     D                 DS
     D  DAAPER                 1     24
     D  DACCYY                 1      4  0
     D  DAPER                  5      6  0
     D  DABPDT                 7     14  0
     D  DAEPDT                15     22  0
     D  DAPGFL                23     23
     D  DAPPFL                24     24
      *
      *---------------------------------------------------------------
      *  DATA STRUCTURE TO HOLD THE VALUES OF THE "NEXT" PERIOD
      *---------------------------------------------------------------
     D                 DS
     D  WKAPER                 1     22  0
     D  WKCCYY                 1      4  0
     D  WKPER                  5      6  0
     D  WKBPDT                 7     14  0
     D  WKEPDT                15     22  0
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     D                 DS
     D  WKAMDY                 1      6
     D  WKMDY                  1      6  0
     D  WKMM                   1      2  0
     D  WKDD                   3      4  0
     D  WKYY                   5      6  0
      *
      * DATE IN CCYYMMDD FORMAT
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
     C     MODE          IFEQ      CREATE                                       IF CREATE
      *
     C                   Z-ADD     0             DFXTSN
     C                   MOVE      *BLANK        DFEXCD
     C                   Z-ADD     0             DFXTAM
     C                   Z-ADD     0             DFXTQT
     C                   Z-ADD     0             DFXTHD
     C                   Z-ADD     0             DFXTLB
     C                   MOVE      *BLANK        DFAMCD
     C                   MOVE      *BLANK        DFHGCD
     C                   Z-ADD     0             DFFSCD
     C                   MOVE      *BLANK        DFBLCD
     C                   MOVE      *BLANK        DFPTCD
     C                   MOVE      *BLANK        DFPPCD
     C                   MOVE      *BLANK        DFCJD
      *
      * IF A RESTRICTED USER
      *
     C     WKRMFL        IFEQ      YES
     C                   ELSE
     C                   MOVE      *BLANK        DFDVCD
     C                   MOVE      *BLANK        DFRGCD
     C                   MOVE      *BLANK        DFALBO
     C                   ENDIF
     C                   ELSE
      *
      * IF THE MODE IS NOT 'CREATE', CHECK THAT THE EXPENSE TICKET
      * SELECTED BY THE USER STILL EXISTS.
      *
     C                   EXSR      $SETOF
      *
     C     DFXTSN        CHAIN(N)  HSP048                             90
     C     *IN90         IFEQ      *ON                                          IF NOT FOUND
     C                   MOVEL     YES           NOTFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00371'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFXTSN        XXXTSN
     C                   MOVEA     XXXTSN        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * THE EXPENSE TICKET STILL EXISTS, SO EXECUTE THE SUBROUTINE
      * TO ROLL UP THE ALLOCATED RECORDS INTO THE ORIGINAL RECORD.
      * AND, FLIP DATES FROM CCYYMMDD TO MMDDYY.
      *
     C                   EXSR      $ROLL1
     C                   EXSR      $FLIP1
     C                   ENDIF                                                  IF NOT FOUND
     C                   ENDIF                                                  IF CREATE
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      ****************************************************************
      * $ROLL1 - ROUTINE TO ROLL THE MULTIPLE DETAIL RECORDS BACK UP
      *          INTO THE ORIGINAL RECORD THE USER KEYED ON SCREEN 1
      ****************************************************************
      *
     C     $ROLL1        BEGSR
      *
      * SET THE FIRST TIME FLAG TO YES
      *
     C                   MOVEL     YES           FIRST
     C                   Z-ADD     0             DFXTAM
     C                   Z-ADD     0             DFXTQT
     C                   Z-ADD     0             DFXTHD
     C                   Z-ADD     0             DFXTLB
      *
     C     DFXTSN        SETLL     HSP048
     C                   SETOFF                                       93
      *
     C     *IN93         DOUEQ     *ON                                          DO ROLL LOOP
     C     DFXTSN        READE(N)  HSP048                                 93
     C     *IN93         IFEQ      *OFF                                         IF NOT EOF
      *
     C     FIRST         IFEQ      YES                                          IF FIRST
     C                   Z-ADD     XTXBDT        HDXBDT
     C                   Z-ADD     XTXEDT        HDXEDT
     C                   MOVEL     XTEXCD        DFEXCD
     C                   MOVEL     XTAMCD        DFAMCD
      *
      * ATTEMPT TO DISPLAY THE ALLOCATION LEVEL FIELDS AS THEY WERE
      * ORIGINALLY KEYED BY CHECKING THE EXISTANCE OF HOG GROUP, FARM
      * AND BUSINESS OFFICE.
      *
     C                   SELECT
      *
     C     XTHGSN        WHENNE    0                                            WH HOG GROUP
     C     XTHGSN        CHAIN     HSL034D                            94
     C     *IN94         IFEQ      *OFF
     C                   MOVEL     HGHGCD        DFHGCD
     C                   ENDIF
      *
     C     XTFSCD        WHENNE    0                                            WH FARM
     C                   Z-ADD     XTFSCD        DFFSCD
     C                   MOVEL     XTBLCD        DFBLCD
     C                   OTHER
      *
     C     XTALBO        IFNE      *BLANK                                       IF B/O
     C                   MOVEL     XTALBO        DFALBO
     C                   ELSE
     C                   MOVEL     XTDVCD        DFDVCD
     C                   MOVEL     XTRGCD        DFRGCD
     C                   ENDIF                                                  IF B/O
      *
     C                   MOVEL     XTPPCD        DFPPCD
     C                   MOVEL     XTPTCD        DFPTCD
     C                   MOVEL     XTCJD         DFCJD
     C                   ENDSL
      *
     C                   MOVEL     NO            FIRST
     C                   ENDIF                                                  IF FIRST
      *
     C                   ADD       XTXTAM        DFXTAM
     C                   ADD       XTXTQT        DFXTQT
     C                   ADD       XTXTHD        DFXTHD
     C                   ADD       XTXTLB        DFXTLB
      *
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO ROLL LOOP
      *
     C                   ENDSR                                                                016
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      *
      * SET THE INDICATORS TO CONTROL SCREEN FIELDS AND
      * WRITE MESSAGES FROM ARRAYS TO MESSAGE SUBFILE
      *
     C                   EXSR      $IND
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP118K1
     C                   WRITE     HP118EC
     C                   EXFMT     HP118R1
      *
      * CLEAR MESSAGES AND SET OFF INDICATORS
      *
     C                   EXSR      $CLMSG
     C                   EXSR      $SETOF
      *
      * GET USER'S INPUT AND SET ROUTINE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3=EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4=PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN09         WHENEQ    *ON                                          F9-WHATEVER
      *
     C     MODE          IFEQ      REVISE
     C                   EXSR      $EDIT1
     C     ERROR         IFEQ      0
     C                   EXSR      $DLT
     C                   EXSR      $CRT
     C                   MOVEL     EXIT          ROUTNE
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
     C                   ENDIF
      *
     C     MODE          IFEQ      CREATE
     C                   EXSR      $EDIT1
     C     ERROR         IFEQ      0
     C                   EXSR      $CRTTK
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
     C                   ENDIF
      *
     C     *IN11         WHENEQ    *ON                                          F11-DELETE
     C                   EXSR      $DLT
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NOTFLG        IFEQ      NO
     C                   EXSR      $EDIT1
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * IF THE MODE IS 'DELETE', THE USER CANNOT CHANGE ANY INFO.
      *
     C     MODE          IFEQ      DELETE                                       IF DELETING
     C                   ELSE
      *
      * CLEAR HIDDEN FIELDS
      *
     C                   Z-ADD     0             HDXBDT
     C                   Z-ADD     0             HDXEDT
     C                   Z-ADD     0             HDHGSN
     C                   MOVE      *BLANK        HDECCD
     C                   MOVE      *BLANK        HDESCD
     C                   MOVE      *BLANK        HDRPCD
     C                   MOVE      *BLANK        HDDVCD
     C                   MOVE      *BLANK        HDRGCD
     C                   MOVE      *BLANK        HDGRFL
      *
      * VALIDATE:
      *    TICKET BEGIN AND END DATES
      *    EXPENSE CODE
      *    AMOUNT
      *    ALLOCATION METHOD
      *
      *
     C                   EXSR      $XTDT
     C                   EXSR      $EXCD
      *
      * AMOUNT
     C     DFXTAM        IFEQ      0
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
     C                   EXSR      $AMCD
      *
      *---------------------------------------------------------------
      * ONLY CONTINUE EDITING IF THE ALLOCATION METHOD WAS VALID.
      *---------------------------------------------------------------
      *
     C     *IN30         IFEQ      *OFF                                         IF METHOD OK
      *
      * THE USER MUST HAVE KEYED IN AT LEAST ONE ALLOCATION LEVEL VALUE
      * IF THEY HAVE KEYED NOTHING, ISSUE AN ERROR MESSAGE.  OTHERWISE,
      * BEGIN THE ALLOCATION LEVEL EDITING.
      *
     C     DFHGCD        IFEQ      *BLANK                                       IF NOTHING
     C     DFFSCD        ANDEQ     0
     C     DFBLCD        ANDEQ     *BLANK
     C     DFCJD         ANDEQ     *BLANK
     C     DFPTCD        ANDEQ     *BLANK
     C     DFPPCD        ANDEQ     *BLANK
     C     DFALBO        ANDEQ     *BLANK
     C     DFRGCD        ANDEQ     *BLANK
     C     DFDVCD        ANDEQ     *BLANK
     C                   SETON                                        51
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00379'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
      * HOG GROUP
     C     DFHGCD        IFNE      *BLANK                                       IF GROUP
     C     HDGRFL        OREQ      YES
     C                   EXSR      $HGCD
     C                   ENDIF                                                  IF GROUP
      *
      * VALIDATE:
      *    FARM SITE
      *    BUILDING
      *    COST CENTER
      *    PRODUCTION TYPE
      *    PRODUCTION PHASE
     C                   EXSR      $FSCD
     C                   EXSR      $BLCD
     C                   EXSR      $CJD
     C                   EXSR      $PTCD
     C                   EXSR      $PPCD
      *
      * IF THE USER IS NOT RESTRICTED, EDIT:
      *     ALLOCATED BUSINESS OFFICE
      *     REGION
      *     DIVISION
      *
     C     WKRMFL        IFEQ      NO
     C                   EXSR      $ALBO
     C                   EXSR      $RGCD
     C                   EXSR      $DVCD
     C                   ENDIF
      *
     C                   ENDIF                                                  IF NOTHING
     C                   ENDIF                                                  IF METHOD OK
     C                   ENDIF                                                  IF DELETING
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $XTDT - EDIT TICKET BEGIN AND END DATES
      *****************************************************************
      *
     C     $XTDT         BEGSR
      *
      *----------------------------------------------------------------
      * VALIDATE THAT THE BEGIN DATE IS VALID AND ADD CENTURY VALUES
      * TO THE WORK FIELD FOR LATER USE IN THE UPDATING ROUTINE.
      *----------------------------------------------------------------
      *
     C                   Z-ADD     DFBMDY        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        26
     C                   ADD       1             ERROR
     C                   MOVE      'HS09004'     MGID(E)
     C                   ELSE
     C                   Z-ADD     PTO8          HDXBDT
     C                   ENDIF                                                  IF INVALID
      *
      * IF BEGIN DATE IS VALID,
      *    CHECK THAT IT IS NOT GREATER THAN TODAY'S DATE
      *    CHECK THAT IT IS NOT IN A CLOSED PERIOD
      *    CHECK THAT IT IS NOT MORE THAN 1 PERIOD INTO THE FUTURE
      *    CHECK THAT THE PERIOD CLOSE PROGRAMS ARE NOT RUNNING
      *
     C     *IN26         IFEQ      *OFF                                         IF GOOD BEG
      *
     C                   SELECT
      *
     C     HDXBDT        WHENGT    *DATE
     C                   SETON                                        26
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00426'     MGID(E)
     C                   ENDIF
      *
     C     HDXBDT        WHENLT    DABPDT
     C                   SETON                                        26
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09007'     MGID(E)
     C                   ENDIF
      *
     C     HDXBDT        WHENGT    WKEPDT
     C                   SETON                                        26
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09014'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     WKBMDY        MGW(1)
     C                   MOVEA     WKEMDY        MGW(7)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C     HDXBDT        WHENGE    DABPDT
     C     HDXBDT        ANDLE     DAEPDT
     C     DAPPFL        ANDNE     *BLANK
     C                   SETON                                        26
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09016'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDIF                                                  IF GOOD BEG
      *
      *----------------------------------------------------------------
      * END DATE IS REQUIRED WHEN THE ALLOCATION METHOD DOES NOT
      * REQUIRE A GROUP. SO, IF END DATE IS ENTERED OR REQUIRED,
      * VALIDATE THAT THE END DATE IS VALID AND ADD CENTURY VALUES
      * TO THE WORK FIELD FOR LATER USE IN THE UPDATING ROUTINE.
      *----------------------------------------------------------------
      *
     C     DFAMCD        CHAIN     HSP040                             96
     C     *IN96         IFEQ      *OFF                                         IF REQUIRED
     C     AMGRFL        ANDEQ     NO
     C     DFEMDY        ANDEQ     0
     C                   SETON                                        27
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00372'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     AMAMCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF REQUIRED
      *
     C     DFEMDY        IFNE      0                                            IF ENTERED
     C                   Z-ADD     DFEMDY        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        27
     C                   ADD       1             ERROR
     C                   MOVE      'HS09004'     MGID(E)
     C                   ELSE
     C                   Z-ADD     PTO8          HDXEDT
     C                   ENDIF                                                  IF INVALID
      *
      * IF END DATE IS VALID,
      *    CHECK THAT IT IS NOT GREATER THAN TODAY'S DATE
      *    CHECK THAT IT IS NOT IN A CLOSED PERIOD
      *    CHECK THAT IT IS NOT MORE THAN 1 PERIOD IN THE FUTURE
      *    CHECK THAT THE PERIOD CLOSE PROGRAMS ARE NOT RUNNING
      *
     C     *IN27         IFEQ      *OFF                                         IF GOOD END
      *
     C                   SELECT
      *
     C     HDXEDT        WHENGT    *DATE
     C                   SETON                                        27
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00426'     MGID(E)
     C                   ENDIF
      *
     C     HDXEDT        WHENLT    DABPDT
     C                   SETON                                        27
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09007'     MGID(E)
     C                   ENDIF
      *
     C     HDXEDT        WHENGT    WKEPDT
     C                   SETON                                        27
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09014'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     WKBMDY        MGW(1)
     C                   MOVEA     WKEMDY        MGW(7)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C     HDXEDT        WHENGE    DABPDT
     C     HDXEDT        ANDLE     DAEPDT
     C     DAPPFL        ANDNE     *BLANK
     C                   SETON                                        27
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09016'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDIF                                                  IF GOOD END
     C                   ENDIF                                                  IF ENTERED
      *
      *----------------------------------------------------------------
      * IF BEGIN AND END DATE ARE BOTH VALID, CHECK THAT:
      *    END DATE IS AFTER BEGIN DATE
      *    BOTH DATES ARE IN THE SAME PERIOD
      *----------------------------------------------------------------
      *
     C     *IN26         IFEQ      *OFF                                         IF BOTH OK
     C     *IN27         ANDEQ     *OFF
     C     DFEMDY        ANDNE     0
      *
      * IF END DATE EARLIER THAN BEGIN DATE
      *
     C     HDXEDT        IFLT      HDXBDT                                       IF EARLIER
     C                   SETON                                        27
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09012'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF EARLIER
      *
      * IF BOTH DATES NOT IN SAME PERIOD
      *
     C                   SELECT
     C     HDXBDT        WHENGE    DABPDT
     C     HDXBDT        ANDLE     DAEPDT
     C     HDXEDT        IFLT      DABPDT
     C     HDXEDT        ORGT      DAEPDT
     C                   SETON                                        27
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09017'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
     C     HDXBDT        WHENGE    WKBPDT
     C     HDXBDT        ANDLE     WKEPDT
     C     HDXEDT        IFLT      WKBPDT
     C     HDXEDT        ORGT      WKEPDT
     C                   SETON                                        27
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09017'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDIF                                                  IF BOTH OK
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $EXCD - EDIT EXPENSE CODE
      *****************************************************************
      *
     C     $EXCD         BEGSR
      *
     C     DFEXCD        IFEQ      *BLANK                                       IF NO CODE
     C                   SETON                                        29
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C     DFEXCD        CHAIN     HSP052                             91
     C     *IN91         IFEQ      *ON                                          IF NOT VALID
     C                   SETON                                        29
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00301'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFEXCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * EXPENSE CODE IS VALID, SO SEE IF IT HAS A REPORT CODE
      * THAT IS USER CONTROLLED
      *
     C     DFEXCD        CHAIN     HSJ052B                            71
     C     *IN71         IFEQ      *ON                                          IF NOT USER
     C                   SETON                                        29
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00299'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFEXCD        MGW(1)
     C                   MOVEA     EXRPCD        MGW(6)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   MOVEL     EXRPCD        HDRPCD
     C                   MOVEL     EXECCD        HDECCD
     C                   MOVEL     EXESCD        HDESCD
     C                   ENDIF                                                  IF NOT USER
     C                   ENDIF                                                  IF NOT VALID
      *
     C                   ENDIF                                                  IF NO CODE
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $AMCD - EDIT ALLOCATION METHOD CODE
      *****************************************************************
      *
     C     $AMCD         BEGSR
      *
     C     DFAMCD        IFEQ      *BLANK                                       IF BLANK
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C     DFAMCD        CHAIN     HSP040                             96
     C     *IN96         IFEQ      *OFF                                         IF OK
     C                   MOVEL     AMGRFL        HDGRFL
     C                   ELSE
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00389'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFAMCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF OK
     C                   ENDIF                                                  IF BLANK
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $HGCD  - SUBROUTINE TO PERFORM EDITS ON HOG GROUP
      *****************************************************************
      *
     C     $HGCD         BEGSR
      *
      * VALIDATIONS:
      * HOG GROUP IS REQUIRED IF THE ALLOCATION METHOD REQUIRES GROUP
      * HOG GROUP IS NOT ALLOWED IF THE ALLOCATION METHOD DOESN'T
      *           REQUIRE A GROUP
      * HOG GROUP MUST BE VALID IN THE HOG GROUP MASTER FILE
      * HOG GROUP CANNOT BE A VOIDED OR CLOSED GROUP
      * IF USER IS RESTRICTED, HE MUST BE BE AUTHORIZED TO THE SECURITY
      *       LOCATION OF THE GROUP'S BUSINESS OFFICE
      *
      * GROUP REQUIRED
      *
     C     DFHGCD        IFEQ      *BLANK                                       IF BLANK
     C     HDGRFL        IFEQ      YES                                          IF REQUIRED
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00368'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFAMCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF REQUIRED
     C                   ELSE
      *
      * HOG GROUP HAS BEEN ENTERED
      *
     C     HDGRFL        IFEQ      NO                                           IF NOT ALLOW
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00369'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFAMCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * VALID GROUP
      *
     C     DFHGCD        CHAIN     HSP034                             94
     C     *IN94         IFEQ      *ON                                          IF BAD GROUP
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00261'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * GROUP CANNOT HAVE A STATUS OF VD=VOID OR CL=CLOSED
      *
     C     HGGSCD        IFEQ      'VD'                                         IF BAD STAT
     C     HGGSCD        OREQ      'CL'
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00377'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     HGGSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * IF   THE USER IS RESTRICTED FOR MAINTENANCE
      * AND  HIS BUSINESS OFFICE DOESN'T MATCH THE HOG GROUP OFFICE
      *      PERFORM ADDITIONAL CHECKS WITH SECURTIY LOCATION
      *
     C     WKRMFL        IFEQ      YES                                          IF RESTRICT
     C     WKBOBO        ANDNE     HGFSBO
     C     HGFSBO        CHAIN     HSP009                             97
     C     *IN97         IFEQ      *OFF
     C     BOSLCD        ANDNE     WKSLCD
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00378'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF                                                  IF RESTRICT
     C                   ENDIF                                                  IF BAD STAT
     C                   ENDIF                                                  IF BAD GROUP
     C                   ENDIF                                                  IF NOT ALLOW
     C                   ENDIF                                                  IF BLANK
      *
     C     DFHGCD        IFNE      *BLANK
     C     *IN31         ANDEQ     *OFF
     C                   Z-ADD     HGHGSN        HDHGSN
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $FSCD - EDIT FARM SITE
      *****************************************************************
      *
     C     $FSCD         BEGSR
      *
      * IF HOG GROUP IS ENTERED, THEN FARM MUST BE BLANK
      *
     C     DFHGCD        IFNE      *BLANK                                       IF HOG/FARM
     C     DFFSCD        ANDNE     0
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00384'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
      * IF ENTERED, FARM MUST BE VALID
      *
     C     DFFSCD        IFNE      0                                            IF ENTERED
      *
     C     DFFSCD        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD FARM
      *
      * IF   THE USER IS RESTRICTED FOR MAINTENANCE
      * AND  HIS BUSINESS OFFICE DOESN'T MATCH THE FARM SITE OFFICE
      *      PERFORM ADDITIONAL CHECKS WITH SECURTIY LOCATION
      *
     C     WKRMFL        IFEQ      YES                                          IF RESTRICT
     C     WKBOBO        ANDNE     FSFSBO
     C     FSFSBO        CHAIN     HSP009                             97
     C     *IN97         IFEQ      *OFF
     C     BOSLCD        ANDNE     WKSLCD
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00380'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF                                                  IF RESTRICT
      *
      * INVALID FARM SITE
     C                   ELSE
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00131'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD FARM
     C                   ENDIF                                                  IF ENTERED
     C                   ENDIF                                                  IF HOG/FARM
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $BLCD - VALIDATE BUILDING
      *****************************************************************
      *
     C     $BLCD         BEGSR
      *
      * IF HOG GROUP IS ENTERED, THEN BUILDING MUST BE BLANK
      *
     C     DFHGCD        IFNE      *BLANK                                       IF HOG/BLDG
     C     DFBLCD        ANDNE     *BLANK
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00384'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
      * IF ENTERED, BUILDING MUST BE VALID FOR THIS FARM
      *
     C     DFBLCD        IFNE      *BLANK                                       IF ENTERED
      *
     C     K1P019        CHAIN     HSP019                             88
     C     *IN88         IFEQ      *ON                                          IF BAD BLDG
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00116'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFBLCD        MGW(1)
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(6)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BAD BLDG
     C                   ENDIF                                                  IF ENTERED
     C                   ENDIF                                                  IF HOG/BLDG
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $CJD - VALIDATE COST CENTER
      *****************************************************************
      *
     C     $CJD          BEGSR
      *
     C     DFCJD         IFNE      *BLANK                                       IF ENTERED
      *
      * IF HOG GROUP IS ENTERED, THEN COST CENTER MUST BE BLANK
      *
     C     DFHGCD        IFNE      *BLANK                                       IF HOG
     C                   SETON                                        40
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00384'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF HOG
      *
      * IF FARM IS ENTERED, THEN COST CENTER MUST BE BLANK
      *
     C     DFFSCD        IFNE      0                                            IF FARM
     C                   SETON                                        40
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00385'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF HOG
      *
      * IF OK SO FAR, COST CENTER MUST BE VALID FOR THE
      * COMPANY TIED TO THE ORIGINATING BUSINESS OFFICE
      *
     C     *IN40         IFEQ      *OFF                                         IF OK
     C                   EXSR      $JDEC
     C     JDEFL         IFEQ      YES
     C                   SETON                                        40
     C                   ENDIF
     C                   ENDIF                                                  IF OK
     C                   ENDIF                                                  IF ENTERED
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $JDEC - SUBROUTINE TO CALL THE EXTERNAL PROGRAM TO VALIDATE JDE
      *         COST CENTERS.
      *****************************************************************
      *
     C     $JDEC         BEGSR
      *
     C                   MOVE      *BLANK        XXCCDS
     C                   MOVEL     NO            JDEFL
      *
     C                   CALL      'HPJDEC'
     C                   PARM                    MGI                            MSG ID
     C                   PARM                    MGD                            MSG DATA FLD
     C                   PARM                    ERROR                          # ERR MSGS
     C                   PARM                    DFCJD                          COST CENTER
     C                   PARM                    WKCOCD                         COMPANY
     C                   PARM                    XXCCDS                         DESCRIPTION
     C                   PARM                    JDEFL                          ERROR FLAG
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $PTCD - VALIDATE PRODUCTION TYPE CODE
      *****************************************************************
      *
     C     $PTCD         BEGSR
      *
     C     DFPTCD        IFNE      *BLANK                                       IF ENTERED
      *
      * IF HOG GROUP IS ENTERED, THEN PRODUCTION TYPE MUST BE BLANK
      *
     C     DFHGCD        IFNE      *BLANK                                       IF HOG
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00384'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF HOG
      *
      * IF FARM IS ENTERED, THEN PRODUCTION TYPE MUST BE BLANK
      *
     C     DFFSCD        IFNE      0                                            IF FARM
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00385'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF HOG
      *
      * IF OK SO FAR, PRODUCTION TYPE MUST BE VALID
      *
     C     *IN34         IFEQ      *OFF                                         IF OK
     C     DFPTCD        CHAIN     HSP010                             98
     C     *IN98         IFEQ      *ON                                          IF BAD TYPE
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00180'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPTCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BAD TYPE
     C                   ENDIF                                                  IF OK
     C                   ENDIF                                                  IF ENTERED
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $PPCD - VALIDATE PRODUCTION PHASE CODE
      *****************************************************************
      *
     C     $PPCD         BEGSR
      *
     C     DFPPCD        IFNE      *BLANK                                       IF ENTERED
      *
      * IF HOG GROUP IS ENTERED, THEN PRODUCTION PHASE MUST BE BLANK
      *
     C     DFHGCD        IFNE      *BLANK                                       IF HOG
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00384'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF HOG
      *
      * IF FARM IS ENTERED, THEN PRODUCTION PHASE MUST BE BLANK
      *
     C     DFFSCD        IFNE      0                                            IF FARM
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00385'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FARM
      *
      * IF OK SO FAR, PRODUCTION PHASE MUST BE VALID
      *
     C     *IN35         IFEQ      *OFF                                         IF OK
     C     DFPPCD        CHAIN     HSP011                             89
     C     *IN89         IFEQ      *ON                                          IF BAD PHASE
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00170'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BAD PHASE
     C                   ENDIF                                                  IF OK
     C                   ENDIF                                                  IF ENTERED
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $DVCD - VALIDATE DIVISION CODE
      *****************************************************************
      *
     C     $DVCD         BEGSR
      *
      * IF DIVISION CODE HAS BEEN ENTERED
      *     IF HOG GROUP IS ENTERED, THEN DIVISION CODE MUST BE BLANK
      *     IF FARM IS ENTERED, THEN DIVISION CODE MUST BE BLANK
      *     IF COST CENTER IS ENTERED, THEN DIVISION CODE MUST BE BLANK
      *     IF B/O IS ENTERED, THEN DIVISION CODE MUST BE BLANK
      *     DIVISION MUST BE VALID IN MASTER FILE
      *     DIVISION MUST BE A "LIVE" DIVISION
      *
     C     DFDVCD        IFNE      *BLANK                                       IF NOT BLANK
      *
     C     DFHGCD        IFNE      *BLANK                                       IF HOG
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00384'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF HOG
      *
     C     DFFSCD        IFNE      0                                            IF FARM
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00385'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FARM
      *
     C     DFCJD         IFNE      *BLANK                                       IF COST CTR
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00386'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF COST CTR
      *
     C     DFALBO        IFNE      *BLANK                                       IF B/O
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00387'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF B/O
      *
     C     *IN36         IFEQ      *OFF                                         IF OK
     C     DFDVCD        CHAIN     HSP007                             95
     C     *IN95         IFEQ      *ON                                          IF BAD DIV
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00401'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFDVCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      *
      * IF DIVISION IS VALID, CHECK THAT IT IS A "LIVE" DIVISION
      *
     C     DVDVCD        IFNE      'LIVE '                                      IF NOT LIVE
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00109'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFDVCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT LIVE
     C                   ENDIF                                                  IF BAD DIV
     C                   ENDIF                                                  IF OK
     C                   ENDIF                                                  IF NOT BLANK
      *
     C     DFDVCD        IFNE      *BLANK                                       IF NOT BLANK
     C     *IN36         ANDEQ     *OFF
     C                   MOVEL     DFDVCD        HDDVCD
     C                   ENDIF                                                  IF NOT BLANK
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $RGCD - VALIDATE REGION CODE
      *****************************************************************
      *
     C     $RGCD         BEGSR
      *
     C     DFRGCD        IFNE      *BLANK                                       IF ENTERED
      *
      * IF HOG GROUP IS ENTERED, THEN REGION MUST BE BLANK
      *
     C     DFHGCD        IFNE      *BLANK                                       IF HOG
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00384'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF HOG
      *
      * IF FARM IS ENTERED, THEN REGION MUST BE BLANK
      *
     C     DFFSCD        IFNE      0                                            IF FARM
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00385'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FARM
      *
      * IF COST CENTER IS ENTERED, THEN REGION MUST BE BLANK
      *
     C     DFCJD         IFNE      *BLANK                                       IF COST CTR
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00386'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF COST CTR
      *
      * IF BUSINESS OFFICE IS ENTERED, THEN REGION MUST BE BLANK
      *
     C     DFALBO        IFNE      *BLANK                                       IF B/O
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00387'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF B/O
      *
      * IF OK SO FAR, REGION MUST BE VALID
      *
     C     *IN37         IFEQ      *OFF                                         IF OK
     C     DFRGCD        CHAIN     HSP008                             96
     C     *IN96         IFEQ      *ON                                          IF BAD
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00382'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRGCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BAD
     C                   ENDIF                                                  IF OK
     C                   ENDIF                                                  IF ENTERED
      *
     C     DFRGCD        IFNE      *BLANK
     C     *IN37         ANDEQ     *OFF
     C                   MOVEL     DFRGCD        HDRGCD
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * $ALBO - VALIDATE ALLOCATION BUSINESS OFFICE
      *****************************************************************
      *
     C     $ALBO         BEGSR
      *
     C     DFALBO        IFNE      *BLANK                                       IF ENTERED
      *
      * IF HOG GROUP IS ENTERED, THEN B/O MUST BE BLANK
      *
     C     DFHGCD        IFNE      *BLANK                                       IF HOG
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00384'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF HOG
      *
      * IF FARM IS ENTERED, THEN ALLOCATING B/O MUST BE BLANK
      *
     C     DFFSCD        IFNE      0                                            IF FARM
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00385'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FARM
      *
      * IF COST CENTER IS ENTERED, THEN B/O MUST BE BLANK
      *
     C     DFCJD         IFNE      *BLANK                                       IF COST CTR
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00386'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF COST CTR
      *
      * IF OK SO FAR, BUSINESS OFFICE MUST BE VALID IN MASTER FILE
      *
     C     *IN38         IFEQ      *OFF                                         IF OK
     C     DFALBO        CHAIN     HSP009                             97
     C     *IN97         IFEQ      *ON                                          IF BAD
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00110'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFALBO        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
      * IF BUSINESS OFFICE IS VALID, CHECK THAT IT IS A "LIVE" OFFICE
      *
     C     BODVCD        IFNE      'LIVE '                                      IF NOT LIVE
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00112'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFALBO        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT LIVE
     C                   ENDIF                                                  IF BAD
     C                   ENDIF                                                  IF OK
     C                   ENDIF                                                  IF ENTERED
      *
     C     DFALBO        IFNE      *BLANK
     C     *IN38         ANDEQ     *OFF
     C                   MOVEL     BODVCD        HDDVCD
     C                   MOVEL     BORGCD        HDRGCD
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      ****************************************************************
      * $IND - RESET INDICATORS
      ****************************************************************
      *
     C     $IND          BEGSR
      *
      * THE DSPATR LOGIC USED IN THE DSPF REQUIRES AT LEAST ONE
      * INDICATOR TO BE ON.
      *
     C                   SETON                                        42
      *
     C     NOTFLG        IFEQ      YES                                          IF NOT FOUND
     C                   SETON                                        90
     C                   ENDIF                                                  IF NOT FOUND
      *
      *  SET UP FOR USER'S ACTION
      *
     C                   SELECT
     C     DFMODE        WHENEQ    REVISE
     C                   SETON                                        60
     C     DFMODE        WHENEQ    CREATE
     C                   SETON                                        61
     C     DFMODE        WHENEQ    DELETE
     C                   SETON                                        63
     C                   ENDSL
      *
      * IF USER IS RESTRICTED FOR MAINTENANCE, NONDISPLAY/PROTECT
      * BUSINESS OFFICE/REGION/DIVISION
      *
     C     WKRMFL        IFEQ      YES
     C                   SETON                                        64
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      ****************************************************************
      * SUBROUTINE: $F4S1 - F4 PROMPT ON SCREEN 1                        *
      ****************************************************************
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * EXPENSE CODE
      *
     C     FLD           WHENEQ    'DFEXCD'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXEXCD
     C                   MOVE      *BLANK        XXEXDS
     C                   CALL      'HP564'
     C                   PARM                    XXEXCD
     C                   PARM                    XXEXDS
     C                   SETON                                        59
     C     XXEXCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXEXCD        DFEXCD
     C                   ENDIF                                                  IF SELECTED
      *
      * ALLOCATION METHOD
      *
     C     FLD           WHENEQ    'DFAMCD'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXAMCD
     C                   MOVE      *BLANK        XXAMDS
     C                   CALL      'HP545'
     C                   PARM                    XXAMCD
     C                   PARM                    XXAMDS
     C                   SETON                                        50
     C     XXAMCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXAMCD        DFAMCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF  HOG GROUP
      *
     C     FLD           WHENEQ    'DFHGCD'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXALBO
     C                   Z-ADD     0             WKFSCD
     C                   MOVE      *BLANK        XXHGCD
     C                   CALL      'HP541'
     C                   PARM                    XXALBO
     C                   PARM                    WKFSCD
     C                   PARM                    XXHGCD
     C                   SETON                                        51
     C     XXHGCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXHGCD        DFHGCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF FARM SITE
      *
     C     FLD           WHENEQ    'DFFSCD'
     C     *IN63         ANDEQ     *OFF
     C                   CALL      'HP5040'
     C                   PARM      'A'           XXAIST
     C                   PARM      0             WKFSCD
     C                   PARM      *blank        XXFSNM
     C                   SETON                                        52
     C     WKFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     WKFSCD        DFFSCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF BUILDING
      *
     C     FLD           WHENEQ    'DFBLCD'
     C     *IN63         ANDEQ     *OFF
     C                   Z-ADD     DFFSCD        WKFSCD
     C                   MOVE      *BLANK        XXBLCD
     C                   MOVE      *BLANK        XXBLDS
     C                   CALL      'HP523'
     C                   PARM                    WKFSCD
     C                   PARM                    XXBLCD
     C                   PARM                    XXBLDS
     C                   SETON                                        53
     C     XXBLCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXBLCD        DFBLCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF COST CENTER
      *
     C     FLD           WHENEQ    'DFCJD'
     C     *IN63         ANDEQ     *OFF
     C                   CALL      'HP514'
     C                   PARM                    WKCOCD
     C                   PARM                    XXCJD
     C                   PARM                    XXCCDS
     C                   SETON                                        41
     C     XXCJD         IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXCJD         DFCJD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF PRODUCTION TYPE
      *
     C     FLD           WHENEQ    'DFPTCD'
     C     *IN63         ANDEQ     *OFF
     C                   CALL      'HP504'
     C                   PARM                    XXPTCD
     C                   PARM                    XXPTDS
     C                   SETON                                        54
     C     XXPTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPTCD        DFPTCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF PRODUCTION PHASE
      *
     C     FLD           WHENEQ    'DFPPCD'
     C     *IN63         ANDEQ     *OFF
     C                   CALL      'HP507'
     C                   PARM                    XXPPCD
     C                   PARM                    XXPPDS
     C                   SETON                                        55
     C     XXPPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPPCD        DFPPCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF BUSINESS OFFICE CODE
      *
     C     FLD           WHENEQ    'DFALBO'
     C                   MOVEL     'LIVE '       XXDVCD
     C                   MOVE      *BLANK        XXALBO
     C                   MOVE      *BLANK        XXBODS
     C                   CALL      'HP503'
     C                   PARM                    XXALBO
     C                   PARM                    XXBODS
     C                   PARM                    XXDVCD
     C                   SETON                                        58
     C     XXALBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXALBO        DFALBO
     C                   ENDIF                                                  IF SELECTED
      *
      * IF REGION
      *
     C     FLD           WHENEQ    'DFRGCD'
     C     *IN63         ANDEQ     *OFF
     C                   CALL      'HP548'
     C                   PARM                    XXRGCD
     C                   PARM                    XXRGDS
     C                   SETON                                        57
     C     XXRGCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXRGCD        DFRGCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF DIVISION
      *
     C     FLD           WHENEQ    'DFDVCD'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XODVCD
     C                   MOVEL     'LIVE '       XIDVCD
     C                   CALL      'HP547'
     C                   PARM                    XIDVCD
     C                   PARM                    XODVCD
     C                   PARM                    XXDVDS
     C                   SETON                                        56
     C     XODVCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XODVCD        DFDVCD
     C                   ENDIF                                                  IF SELECTED
      *
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      ********************************************************************
      * SUBROUTINE: $FLIP1 - FLIP DATES FROM CCYYMMDD TO MMDDYY          *
      ********************************************************************
      *
     C     $FLIP1        BEGSR
      *
      * FLIP EXPENSE BEGIN DATE
      *
     C                   Z-ADD     HDXBDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         DFBMDY
      *
      * FLIP EXPENSE END DATE
      *
     C                   Z-ADD     HDXEDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         DFEMDY
      *
     C                   ENDSR
      /EJECT
      ****************************************************************
      * $DATE -  MANIPULATE DATES WITH DATE UTILITY
      ****************************************************************
      *
     C     $DATE         BEGSR
      *
     C                   CALL      'UT80060R'
     C                   PARM                    PFRM8             8 0
     C                   PARM                    PTO8              8 0
     C                   PARM                    PFRFMT            4
     C                   PARM                    PTOFMT            4
     C                   PARM                    PDAYS             4 0
     C                   PARM                    PCODE             1
     C                   PARM                    PRTRN             1
      *
     C                   ENDSR
      /EJECT
      ********************************************************************
      * SUBROUTINE: $TOMDY   FLIP DATE FROM YYMMDD TO MMDDYY             *
      ********************************************************************
      *
     C     $TOMDY        BEGSR
      *
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
      *
     C                   ENDSR
      /EJECT
      ****************************************************************
      * $CRTTK - CREATE A NEW FEED TICKET HEADER AND DETAIL
      ****************************************************************
      *
     C     $CRTTK        BEGSR
      *
      * BRING IN THE DATA ARE AND GET THE NEXT TICKET NUMBER TO ASSIGN.
      *
     C     *LOCK         IN        DAXTSN
     C                   ADD       1             DAXTSN
     C                   OUT       DAXTSN
     C                   Z-ADD     DAXTSN        DFXTSN
      *
      *
      * CREATE THE EXPENSE TICKET
      *
     C                   EXSR      $CRT
      *
      * ISSUE THE MESSAGE THAT THE TICKET WAS CREATED
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00431'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFXTSN        XXXTSN
     C                   MOVEA     XXXTSN        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      ****************************************************************
      * $CRT - CREATE EXPENSE TICKET RECORD
      ****************************************************************
      *
     C     $CRT          BEGSR
      *
      * CLEAR ALLOCATION LEVEL FIELDS IN THE FILE RECORD
      *
     C                   Z-ADD     0             XTHGSN
     C                   Z-ADD     0             XTFSCD
     C                   MOVE      *BLANK        XTBLCD
     C                   MOVE      *BLANK        XTRMCD
     C                   MOVE      *BLANK        XTCJD
     C                   MOVE      *BLANK        XTPPCD
     C                   MOVE      *BLANK        XTPTCD
     C                   MOVE      *BLANK        XTDVCD
     C                   MOVE      *BLANK        XTRGCD
     C                   MOVE      *BLANK        XTALBO
      *
      * MOVE SCREEN FIELDS TO FILE
      *
     C                   Z-ADD     DFXTSN        XTXTSN
     C                   Z-ADD     HDXBDT        XTXBDT
     C                   Z-ADD     HDXEDT        XTXEDT
     C                   Z-ADD     DFXTAM        XTXTAM
     C                   Z-ADD     DFXTQT        XTXTQT
     C                   Z-ADD     DFXTHD        XTXTHD
     C                   Z-ADD     DFXTLB        XTXTLB
      *
     C                   MOVEL     DFAMCD        XTAMCD
     C                   MOVEL     DFEXCD        XTEXCD
      *
     C                   MOVEL     HDRPCD        XTRPCD
     C                   MOVEL     HDECCD        XTECCD
     C                   MOVEL     HDESCD        XTESCD
      *
     C                   MOVEL     WKCOCD        XTCOCD
     C                   MOVEL     DFCJD         XTCJD
     C                   MOVEL     DFPPCD        XTPPCD
     C                   MOVEL     DFPTCD        XTPTCD
      *
      * UNCONDITIONAL DEFAULTS
      *
     C                   MOVEL     WKBOBO        XTBOBO
     C                   MOVEL     'EN'          XTXSCD
     C                   Z-ADD     0             XTALDT
     C                   Z-ADD     0             XTPODT
     C                   Z-ADD     0             XTEPDT
      *
      * IF HOG GROUP IS NOT BLANK, RETRIEVE ALLOCATION LEVEL DEFAULTS
      * FROM THE HOG GROUP FILE
      *
     C     DFHGCD        IFNE      *BLANK                                       IF HOG GROUP
     C                   MOVEL     'D'           XTALFL
     C                   Z-ADD     HDHGSN        XTHGSN
     C     HDHGSN        CHAIN     HSL034D                            94
     C     *IN94         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     HGDVCD        XTDVCD
     C                   MOVEL     HGRGCD        XTRGCD
     C                   MOVEL     HGFSBO        XTALBO
     C                   Z-ADD     HGFSCD        XTFSCD
     C                   MOVEL     HGBLCD        XTBLCD
     C                   MOVEL     HGRMCD        XTRMCD
     C                   ENDIF                                                  IF FOUND
     C                   ELSE
      *
     C                   MOVEL     'T'           XTALFL
      *
      * IF FARM SITE IS NOT BLANK, RETRIEVE ALLOCATION LEVEL DEFAULTS
      * FROM THE FARM SITE FILE
      *
     C     DFFSCD        IFNE      0                                            IF FARM
     C                   Z-ADD     DFFSCD        XTFSCD
     C                   MOVEL     DFBLCD        XTBLCD
     C     DFFSCD        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD FARM
     C                   MOVEL     FSDVCD        XTDVCD
     C                   MOVEL     FSRGCD        XTRGCD
     C                   MOVEL     FSFSBO        XTALBO
     C                   ENDIF                                                  IF GOOD FARM
     C                   ELSE
      *
      * IF THE USER IS RESTRICTED FOR MAINTENANCE
      *
     C     WKRMFL        IFEQ      YES                                          IF RST USER
     C                   MOVEL     WKBOBO        XTALBO
     C                   MOVEL     WKDVCD        XTDVCD
     C                   MOVEL     WKRGCD        XTRGCD
     C                   ELSE
     C                   MOVEL     HDDVCD        XTDVCD
     C                   MOVEL     HDRGCD        XTRGCD
     C                   MOVEL     DFALBO        XTALBO
     C                   ENDIF                                                  IF RST USER
     C                   ENDIF                                                  IF FARM
     C                   ENDIF                                                  IF HOG GROUP
      *
     C                   WRITE     XTREC
      *
     C                   ENDSR
      /EJECT
      ****************************************************************
      * $DLT - DELETE ALL RECORDS OF THE EXPENSE TICKET
      ****************************************************************
      *
     C     $DLT          BEGSR
      *
     C     DFXTSN        SETLL     HSP048
     C                   SETOFF                                       93
     C     *IN93         DOUEQ     *ON                                          DO LOOP
     C     DFXTSN        READE     HSP048                                 93
     C     *IN93         IFEQ      *OFF                                         IF FOUND
     C                   DELETE    XTREC
     C                   ENDIF                                                  IF FOUND
     C                   ENDDO                                                  DO LOOP
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SETOF - SUBROUTINE TO SET SCREEN INDICATORS OFF
      *---------------------------------------------------------------
      *
     C     $SETOF        BEGSR
      *
     C                   SETOFF                                       262739
     C                   SETOFF                                       293031
     C                   SETOFF                                       323334
     C                   SETOFF                                       353637
     C                   SETOFF                                       3840
      *
     C                   SETOFF                                       41
     C                   SETOFF                                       505152
     C                   SETOFF                                       535455
     C                   SETOFF                                       565758
     C                   SETOFF                                       59
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANKS       MGI
     C                   PARM      *BLANKS       MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    MODE
     C                   PARM                    WKBOBO
     C                   PARM                    WKRMFL            1
     C                   PARM                    DFXTSN
     C                   PARM                    RTNCD
      *
      * KEY FOR FILE HSP019-FARM BUILDINGS
      *
     C     K1P019        KLIST
     C                   KFLD                    DFFSCD
     C                   KFLD                    DFBLCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            ERRFLG            1
     C                   MOVEL     NO            NOTFLG            1
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C     *LIKE         DEFINE    DFMODE        MODE                           SFL POSITION
     C     *LIKE         DEFINE    IDFLOW        WKFLOW                         SFL POSITION
      *
      * NUMERIC FIELDS FOR USE AS PARMS
      *
     C     *LIKE         DEFINE    FSFSCD        WKFSCD
      *
      * ALPHA FIELDS FOR USE AS PARMS
      *
     C                   MOVE      *BLANK        XXAIST            1
     C                   MOVE      *BLANK        XXFSCD            5
     C                   MOVE      *BLANK        XXXTSN            7
     C     *LIKE         DEFINE    FSFSNM        XXFSNM
     C     *LIKE         DEFINE    XTEXCD        XXEXCD
     C                   MOVE      *BLANK        XXEXDS           20
     C     *LIKE         DEFINE    XTDVCD        XIDVCD
     C     *LIKE         DEFINE    XTDVCD        XODVCD
     C     *LIKE         DEFINE    XTDVCD        XXDVCD
     C                   MOVE      *BLANK        XXDVDS           20
     C     *LIKE         DEFINE    XTRGCD        XXRGCD
     C                   MOVE      *BLANK        XXRGDS           20
     C     *LIKE         DEFINE    XTALBO        XXALBO
     C     *LIKE         DEFINE    BOBODS        XXBODS
     C     *LIKE         DEFINE    PPPPCD        XXPPCD
     C     *LIKE         DEFINE    PPPPDS        XXPPDS
     C     *LIKE         DEFINE    PTPTCD        XXPTCD
     C     *LIKE         DEFINE    PTPTDS        XXPTDS
     C     *LIKE         DEFINE    FBBLCD        XXBLCD
     C     *LIKE         DEFINE    FBBLDS        XXBLDS
     C     *LIKE         DEFINE    AMAMCD        XXAMCD
     C     *LIKE         DEFINE    AMAMDS        XXAMDS
     C     *LIKE         DEFINE    HGHGCD        XXHGCD
      *
     C     *LIKE         DEFINE    XTCJD         XXCJD
     C                   MOVE      *BLANK        XXCCDS           30
     C                   MOVE      *BLANK        JDEFL             1            JDE ERR FLAG
      *
      * CONTROL FIELDS, FLAGS, COUNTERS, WORK FIELDS, SAVE FIELDS
      *
     C                   MOVEL     YES           FIRST             1
     C     *LIKE         DEFINE    BOBOBO        WKBOBO
     C     *LIKE         DEFINE    BOCOCD        WKCOCD
     C     *LIKE         DEFINE    BODVCD        WKDVCD
     C     *LIKE         DEFINE    BORGCD        WKRGCD
     C     *LIKE         DEFINE    BOSLCD        WKSLCD
      *
      * THE USER CAN COME INTO THIS PROGRAM SEVERAL DIFFERENT WAYS.
      * CHECK THE ENTRY MODE AND SET THE APPROPRIATE INDICATORS TO
      * CONTROL THE SCREEN DISPLAY.
      *
     C                   SELECT
      *
     C     MODE          WHENEQ    CREATE
     C                   MOVEL     CREATE        DFMODE
      *
     C     MODE          WHENEQ    REVISE
     C                   MOVEL     REVISE        DFMODE
      *
     C     MODE          WHENEQ    DELETE
     C                   MOVEL     DELETE        DFMODE
     C                   ENDSL
      *
      *
      * DEFINE THE DATA AREA THAT CONTAINS THE CURRENT ACCOUNTING
      * PERIOD
      *
     C     *DTAARA       DEFINE                  DAAPER
     C                   IN        *DTAARA
      *
      * DEFINE THE DATA AREA THAT CONTAINS THE EXPENSE TICKET NUMBER
      *
     C     *DTAARA       DEFINE                  DAXTSN
      *
      * SET UP AN ALPHA MMDDYY OF BEGINING PERIOD DATE FOR LATER
      * MESSAGE PURPOSES.
      *
     C                   Z-ADD     DABPDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   MOVE      WKAMDY        WKBMDY            6
      *
      * IF THE USER IS CREATING A NEW EXPENSE TICKET
      *    1) DEFAULT BEGINNING DATE OF CURRENT PERIOD TO SCREEN
      *    2) RETRIEVE ENDING DATE OF CURRENT PERIOD FOR END DATE
      *
     C     MODE          IFEQ      CREATE                                       IF CREATE
     C                   Z-ADD     WKMDY         DFBMDY
     C                   Z-ADD     DAEPDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         DFEMDY
     C                   ENDIF                                                  IF CREATE
      *
      * CALCULATE THE DATE RANGE OF THE NEXT PERIOD SINCE THE
      * USER CAN ENTER EXPENSE TICKETS FOR ONE PERIOD INTO THE
      * FUTURE.
      *
     C     DAPER         IFLT      13
     C     DAPER         ADD       1             WKPER
     C                   ELSE
     C                   Z-ADD     1             WKPER
     C     DACCYY        ADD       1             WKCCYY
     C                   ENDIF
      *
     C                   MOVEL     'CYMD'        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   MOVEL     'I'           PCODE
      *
      * CALCULATE THE FIRST DAY OF THE NEXT PERIOD BY ADDING '1' TO
      * THE CURRENT PERIOD ENDING DATE.
      *
     C                   Z-ADD     DAEPDT        PFRM8
     C                   Z-ADD     1             PDAYS
     C                   EXSR      $DATE
     C     PRTRN         IFNE      *BLANK                                       IF GOOD BEG
     C                   Z-ADD     0             WKBPDT
     C                   Z-ADD     0             WKEPDT
     C                   ELSE
      *
     C                   Z-ADD     PTO8          WKBPDT
      *
      * CALCULATE THE LAST DAY OF THE NEXT PERIOD BY ADDING '27'
      * DAYS TO THE BEGINNING DATE JUST CALCULATED.
      *
     C                   Z-ADD     PTO8          PFRM8
     C                   Z-ADD     27            PDAYS
     C                   MOVEL     'I'           PCODE
     C                   EXSR      $DATE
     C     PRTRN         IFNE      *BLANK                                       IF END OK
     C                   Z-ADD     0             WKEPDT
     C                   ELSE
     C                   Z-ADD     PTO8          WKEPDT
      *
      * SET UP AN ALPHA MMDDYY FOR LATER MESSAGE PURPOSES
      *
     C                   Z-ADD     WKEPDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   MOVE      WKAMDY        WKEMDY            6
      *
     C                   ENDIF                                                  IF END OK
     C                   ENDIF                                                  IF GOOD BEG
      *
      * RETRIEVE THE COMPANY CODE OF THE USER'S BUSINESS OFFICE FOR
      * LATER USE IN VALIDATION OF THE COST CENTER. AND,
      * IF THE USER HAS RESTRICTED MAINTENANCE, SAVE HIS BUSINESS
      * OFFICE INFO.
      *
     C     WKBOBO        CHAIN     HSP009                             97
     C     *IN97         IFEQ      *OFF                                         IF GOOD BO
     C                   MOVEL     BOCOCD        WKCOCD
     C     WKRMFL        IFEQ      YES                                          IF RESTRICT
     C                   MOVEL     BODVCD        WKDVCD
     C                   MOVEL     BORGCD        WKRGCD
     C                   MOVEL     BOSLCD        WKSLCD
     C                   ENDIF                                                  IF RESTRICT
     C                   ENDIF                                                  IF GOOD BO
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM
     C                   EXSR      $CLMSG
      *
     C                   ENDSR
      /EJECT
