      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP204SD- Build JDE Upload file: HPS Semen Sales
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     07/31/02
      *
      * FUNCTION: This program builds an upload file of current period
      *           data that will be interfaced to JDE.
      *
      *           This program is called from HP204CLSD which is called
      *           from the upload driver CL HP404CL..which is submitted from
      *           HP404.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      * 02/26/16  Barb Gutierrez(E5290)
      *           Added logic to handle new company Iowa Farms.
      * 10/12/18  Danny Nguyen  (S13682)
      *           Removed control break by Company since OPNQRYF logic on
      *           hsl018i is now selecting by Company.
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl018i   if   e           k disk
      *    Farm site
      *    (only records with cost centers selected in open query)
      *
      *
     Fhsl081d   if   e           k disk
      *    Weekly sire line doses
      *    (records selected in open query)
      *
      *
     Fhsp204    uf a e           k disk
      *    HPS to JDE upload file
      *
      *
     Fhsl204a   if a e           k disk    rename(hjrec:hjreca) prefix(p1)
      *    HPS to JDE upload file
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      *---------------------------------------------------------------
      * STANDALONE FIELDS
      *---------------------------------------------------------------
      *
      * Control fields
      *
     D svcocd          s                   like(fscocd)
     D svmcu           s                   like(fscjd)
     D svdesc          s                   like(hjdesc)
     D svre            s                   like(hjre)
     D first           s              1    inz('Y')
      *
      *
      * Work fields
      *
     D wkmcu           s                   like(hjmcu)
      *
      * Workfields for accumulating
      *
     D wkdono          s                   like(hjhpsval)
     D wkhpsval        s                   like(hjhpsval)
     D wkjdeval        s                   like(hjjdeval)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldacyr                 1      4  0
     D  ldacpe                 5      6  0
     D  ldbpdt                 7     14  0
     D  ldepdt                15     22  0
     D  ldhucd                23     24
      *
     D  ldhuds               100    129
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Perform BGF processing
      *
     C                   exsr      $bgf
      *
      * Write offsetting entries
      *
     C                   exsr      $offset
      *
      * Set 'new batch number' and 'new document number' flags
      *
     C                   exsr      $flags
      *
     C                   seton                                        lr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Process all BGF farms
      *--------------------------------------------------------------------------------------
      *
     C     $bgf          begsr
      *
     C     *loval        setll     hsl018i
      *
      * Process all BGF farms
      *
     C                   dou       *in90 = *on                                  Do BGF farms
     C                   read      hsl018i                                90
     C                   if        *in90 = *off and fsppcd = 'BGF  '            If not EOF
      *
     C                   if        first = yes
     C                   exsr      $first
     C                   endif
      *
      * Control break on company number
      *   a) write last record Pig Day records to interface file
      *   b) clear accumulators and save cost center
      *   c) Set new batch number and new document flags
      *   e) Write offsetting entries for company
      *
     C                   select
      * S13682-Removed Control Break on Company Number. Open Query File Logic will now select
      *        by Company Number.
13682C**                 when      svcocd <> fscocd
  |  C**                 exsr      $bgfjde
  |  C**                 exsr      $offset
  |  C**                 exsr      $clear
13682C**                 move      fscocd        svcocd
      *
      * Control break on cost center
      *   a) write BGF records to interface file
      *   b) clear accumulators and save cost center
      *
     C                   when      svmcu <> fscjd
     C                   exsr      $bgfjde
     C                   exsr      $clear
     C                   move      fscjd         svmcu
     C                   endsl
      *
      * Accumulate detail values for the farm.
      *
     C                   exsr      $bgffarm
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do BGF farms
      *
      * Last record processing for BGF farms
      *
     C                   exsr      $bgfjde
     C                   exsr      $clear
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Retrieve values for a BGF farm
      *--------------------------------------------------------------------------------------
      *
     C     $bgffarm      begsr
      *
      * You will need BGF Weekly Sire Line Doses data for:
      *    1) Total number of doses of semen on a farm
      *
     C     fsfscd        setll     hsl081d
     C                   dou       *in91 = *on                                  Do semen doses
     C     fsfscd        reade     hsl081d                                91
     C                   if        *in91 = *off                                 If EOF
     C                   add       swdono        wkdono
     C                   endif                                                  If EOF
     C                   enddo                                                  Do semen doses
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Write records to the upload file for a BGF cost center
      *--------------------------------------------------------------------------------------
      *
     C     $bgfjde       begsr
      *
      * Semen doses
     C                   if        wkdono <> 0
     C                   z-add     wkdono        hjhpsval
     C     100           mult      wkdono        hjjdeval
     C                   eval      hjdesc = 'Semen Doses Delivered'
     C                   eval      hjobj = '6017'
     C                   move      *blank        hjre
     C                   exsr      $write204
     C                   endif
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Write record to interface file
      *--------------------------------------------------------------------------------------
      *
     C     $write204     begsr
      *
     C                   eval      hjexa = hjdesc
     C                   move      'AU'          hjtype
     C                   move      no            hjoffset
     C                   z-add     0             hjbatval
     C                   move      svmcu         hjmcu
     C                   move      *blank        hjsub
     C                   z-add     ldacyr        hjacyr
     C                   z-add     ldacpe        hjacpe
     C                   move      svcocd        hjcocd
      *
     C                   write     hjrec
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Clear accumulators
      *--------------------------------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   z-add     0             wkdono
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Process interface records and populate 'new batch number' and 'new doc number' flags
      *--------------------------------------------------------------------------------------
      *
      * The interface file is used by several HPS programs. But, we have written only 1 JDE
      * program to read the file and write its records into JDE. And, each 'upload' seems to
      * have different requirements on the number of 'batches' and 'documents'. So, we
      * customize the 'flag' logic here so that the JDE program can be 'generic'.
      *
      * For the HPS upload of 'Units' to JDE, we will ultimately:
      *    1) create a new JDE batch for each unique 'description' per company
      *    2) retrieve a new JDE 'document' number for each unique 'description'
      *
      *
     C     $flags        begsr
      *
     C                   move      *blank        svdesc
     C                   move      *blank        svre
     C                   move      *blanks       svcocd
     C     *loval        setll     hsp204
      *
     C                   dou       *in91 = *on                                  Do flag loop
     C                   read      hsp204                                 91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      svdesc <> hjdesc or
     C                             svcocd <> hjcocd
     C                   move      hjdesc        svdesc
     C                   move      hjre          svre
     C                   move      hjcocd        svcocd
     C                   move      yes           hjnewbat
     C                   move      yes           hjnewdoc
     C                   other
     C                   move      no            hjnewbat
     C                   move      no            hjnewdoc
     C                   endsl
      *
     C                   update    hjrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do flag loop
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Process interface records and write offsetting records
      *--------------------------------------------------------------------------------------
      *
     C     $offset       begsr
      *
     C                   move      yes           first
     C     svcocd        setll     hsl204a
      *
     C                   dou       *in91 = *on                                  Do offsets
     C     svcocd        reade     hsl204a                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   if        first = yes
     C                   move      no            first
     C                   move      p1hjdesc      svdesc
     C                   move      p1hjre        svre
     C                   endif
      *
      * Control break on description
      *   a) write offsetting record to interface file
      *   b) clear accumulator and save description
      *
     C                   if        svdesc <> p1hjdesc
     C                   exsr      $writeoff
     C                   endif
      *
      * Detail processing
     C                   add       p1hjhpsval    wkhpsval
     C                   add       p1hjjdeval    wkjdeval
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do offsets
      *
      *  Write offsetting record for last description
      *
     C                   if        first = no
     C                   exsr      $writeoff
     C                   endif
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Write offset records to interface file
      *--------------------------------------------------------------------------------------
      *
     C     $writeoff     begsr
      *
     C                   move      no            hjnewbat
     C                   move      no            hjnewdoc
      *
     C                   z-add     ldacyr        hjacyr
     C                   z-add     ldacpe        hjacpe
     C                   move      'AU'          hjtype
     C                   move      svcocd        wkmcu
     C                   eval      hjmcu = wkmcu
     C                   eval      hjobj = '6020'
     C                   move      *blank        hjsub
     C                   move      yes           hjoffset
      *
     C                   move      svdesc        hjdesc
     C                   move      svre          hjre
     C                   eval      hjexa = hjdesc
     C     -1            mult      wkhpsval      hjhpsval
     C     -1            mult      wkjdeval      hjjdeval
      *
      * Populate the 'batch header value' field with the 'offset' value. Force the
      * number to be positive.
      *
     C                   select
     C                   when      hjjdeval >= 0
     C                   z-add     hjjdeval      hjbatval
     C                   other
     C     -1            mult      hjjdeval      hjbatval
     C                   endsl
      *
     C                   write     hjrec
      *
     C                   z-add     0             wkhpsval
     C                   z-add     0             wkjdeval
     C                   move      p1hjdesc      svdesc
     C                   move      p1hjre        svre
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Subroutine for first time for BGF
      *--------------------------------------------------------------------------------------
      *
     C     $first        begsr
      *
     C                   move      fscjd         svmcu
     C                   move      fscocd        svcocd
     C                   move      no            first
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Initialization subroutine
      *--------------------------------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
     C                   endsr
      /EJECT
