// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBF3PFR
// ?Date: 14.08.2025 Time: 12:03:27
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

//?select load order change type
CASE;

// IF DB1.Load Change Type is MPR Specific
IF DB1.Load_Change_Type = 'ORDCMP'/'ORDPRT'/'ORDQTY'/'ORDWGT';

//?select load order change type
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Order Number header format

// SUPPRESSED PRINT Created Date header format

// SUPPRESSED PRINT Created Time header format

// SUPPRESSED PRINT Sequence Number header format

// SUPPRESSED PRINT Load ID header format

//?USER: On print of detail format

//?Extract OD Seq from 1st 3 pos if Prior Value
CASE;

// IF DB1.Load Change Type is Order Quantity
IF DB1.Load_Change_Type = 'ORDQTY';

// OR DB1.Load Change Type is Order Weight
OR DB1.Load_Change_Type = 'ORDWGT';

// OR DB1.Load Change Type is Order Price Type Change
OR DB1.Load_Change_Type = 'ORDPRT';

// LCL.Text 3 Length USR = SUBSTRING(DB1.Change Log Prior Value,CON.1,CON.3)
LCL.Text_3_Length_USR = SUBSTRING(DB1.Change_Log_Prior_Value:1:3);

// CUR.Order Sequence Number = CVTVAR(LCL.Text 3 Length USR)
CUR.Order_Sequence_Number = CVTVAR(LCL.Text_3_Length_USR);

ENDIF;

EXECUTE FUNCTION(Rtv Ord Seq Item     RT) TYPE(RTVOBJ) FILE(OPBGWKP)            AC2053935;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(CUR.Order_Sequence_Number);
PARAMETER(1);
PARAMETER(CUR.Item_Code);
PARAMETER(LCL.Order_Desc_Line_One);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// PAR.Company Number = DB1.Company Number
PAR.Company_Number = DB1.Company_Number;

// CUR.Condition Desc. 1  USR = Condition name of DB1.Load Change Type
CUR.Condition_Desc_1_USR = RTVCND(DB1.Load_Change_Type);

//?  If Date Change Type, reverse the values
CASE;

// IF DB1.Load Change Type is Date changes
IF DB1.Load_Change_Type = 'RQSDLV'/'RQSSHP'/'SCHSHP';

// WRK.USR Work Field 3A = SUBSTRING(DB1.Change Log Prior Value,CON.2,CON.2)
WRK.USR_Work_Field_3A = SUBSTRING(DB1.Change_Log_Prior_Value:2:2);

// WRK.Month (Char) USR = SUBSTRING(DB1.Change Log Prior Value,CON.4,CON.2)
WRK.Month_Char_USR = SUBSTRING(DB1.Change_Log_Prior_Value:4:2);

// WRK.Day   (Char) USR = SUBSTRING(DB1.Change Log Prior Value,CON.6,CON.2)
WRK.Day_Char_USR = SUBSTRING(DB1.Change_Log_Prior_Value:6:2);

// WRK.Text USR 4 = CONCAT(WRK.Month (Char) USR,WRK.Day   (Char) USR,CON.*ZERO)
WRK.Text_USR_4 = WRK.Month_Char_USR + WRK.Day_Char_USR (*ZERO);

// CUR.Change Log Prior Value = CONCAT(WRK.Text USR 4,WRK.USR Work Field 3A,CON.*ZERO)
CUR.Change_Log_Prior_Value = WRK.Text_USR_4 + WRK.USR_Work_Field_3A (*ZERO);

// WRK.USR Work Field 3A = SUBSTRING(DB1.Change Log New Value,CON.2,CON.2)
WRK.USR_Work_Field_3A = SUBSTRING(DB1.Change_Log_New_Value:2:2);

// WRK.Month (Char) USR = SUBSTRING(DB1.Change Log New Value,CON.4,CON.2)
WRK.Month_Char_USR = SUBSTRING(DB1.Change_Log_New_Value:4:2);

// WRK.Day   (Char) USR = SUBSTRING(DB1.Change Log New Value,CON.6,CON.2)
WRK.Day_Char_USR = SUBSTRING(DB1.Change_Log_New_Value:6:2);

// WRK.Text USR 4 = CONCAT(WRK.Month (Char) USR,WRK.Day   (Char) USR,CON.*ZERO)
WRK.Text_USR_4 = WRK.Month_Char_USR + WRK.Day_Char_USR (*ZERO);

// CUR.Change Log New Value = CONCAT(WRK.Text USR 4,WRK.USR Work Field 3A,CON.*ZERO)
CUR.Change_Log_New_Value = WRK.Text_USR_4 + WRK.USR_Work_Field_3A (*ZERO);

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Load ID totals format

// SUPPRESSED PRINT Sequence Number totals format

// SUPPRESSED PRINT Created Time totals format

// SUPPRESSED PRINT Created Date totals format

//?Embedded PRTOBJ : Prt Prc Chgs-MPR Audt PO
EXECUTE FUNCTION(Prt Prc Chgs-MPR Audt PO) TYPE(PRTOBJ);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// SUPPRESSED PRINT Order Number totals format

