// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKA3EFR
// ?Date: 14.08.2025 Time: 02:48:52
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


//?USER: Initialize subfile record (new record)

// *MO.VE             1183529*Bu = ilt. in functions
RCD.PCC_Comment_Type = 'U';

// *MO.VE             1183529*Bu = ilt. in functions
RCD.RS_Record_Status = 'A';

//?USER: Create DBF record

EXECUTE FUNCTION(Crt Contract Comment  IF) TYPE(EXCINTFUN) FILE(PKASCPP)        AB1115249;
PARAMETER(RCD.PC_Contract_Code);
PARAMETER(RCD.PCC_Comment_Line);
PARAMETER(RCD.PCC_Comment);
PARAMETER('U');
PARAMETER(RCD.RS_User_Changed);
PARAMETER(RCD.RS_Date_Changed);
PARAMETER(RCD.RS_Time_Changed);
PARAMETER(RCD.RS_Record_Status);
PARAMETER(RCD.RS_Job);
PARAMETER(RCD.RS_Program);
PARAMETER(RCD.RS_User_Added);
PARAMETER(RCD.RS_Date_Added);
PARAMETER(RCD.RS_Time_Added);
{
 //?Execute internal function

 EXECUTE FUNCTION(Rtv Next Line Number  RT) TYPE(RTVOBJ) FILE(PKASCPP)           AB1115250;
 PARAMETER(PAR.PC_Contract_Code);
 PARAMETER(PAR.PCC_Comment_Line);
 {
  //?USER: Processing if Data record not found

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PCC_Comment_Line = 1;

  //?USER: Process Data record

  // PAR.PCC Comment Line = DB1.PCC Comment Line + CON.1
  PAR.PCC_Comment_Line = DB1.PCC_Comment_Line + 1;

  QUIT;

 }

 EXECUTE FUNCTION(Crt Contract Comment  CR) TYPE(CRTOBJ) FILE(PKASCPP)           AB1100789;
 PARAMETER(PAR.PC_Contract_Code);
 PARAMETER(PAR.PCC_Comment_Line);
 PARAMETER(PAR.PCC_Comment);
 PARAMETER(PAR.PCC_Comment_Type);
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER(PAR.RS_Record_Status);
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 PARAMETER(PAR.RS_User_Added);
 PARAMETER(PAR.RS_Date_Added);
 PARAMETER(PAR.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

}


//?USER: Delete DBF record

EXECUTE FUNCTION(Dlt Contract Comment  DL) TYPE(DLTOBJ) FILE(PKASCPP)           AB1100791;
PARAMETER(RCD.PC_Contract_Code);
PARAMETER(RCD.PCC_Comment_Line);

//?USER: Change DBF record

EXECUTE FUNCTION(Chg Contract Comment  CH) TYPE(CHGOBJ) FILE(PKASCPP)           AB1100790;
PARAMETER(RCD.PC_Contract_Code);
PARAMETER(RCD.PCC_Comment_Line);
PARAMETER(RCD.PCC_Comment);
PARAMETER(RCD.PCC_Comment_Type);
PARAMETER(RCD.RS_User_Changed);
PARAMETER(RCD.RS_Date_Changed);
PARAMETER(RCD.RS_Time_Changed);
PARAMETER(RCD.RS_Record_Status);
PARAMETER(RCD.RS_Job);
PARAMETER(RCD.RS_Program);
PARAMETER(RCD.RS_User_Added);
PARAMETER(RCD.RS_Date_Added);
PARAMETER(RCD.RS_Time_Added);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


