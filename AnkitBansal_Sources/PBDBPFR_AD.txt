// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBDBPFR
// ?Date: 14.08.2025 Time: 12:03:24
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// WRK.Page Number USR = CON.*ZERO
WRK.Page_Number_USR = *ZERO;

//?***** Change Log and Comments
//?*****
//?** 04/27/2012 LJB E001608
//?** Duplicate PDC2PFR PRT Bill of Lading-GUY PF
//?** Daily's requires 2 decimal places for the Net Weight
//?*****
//?** Notes:
//?** Overlay of the BOL form created and uploaded to AS400.
//?**   Change printer overrides to *APFDS and include overlay name
//?** Dummy character added in the Prtobj just before the
//?**   Load ID. The overlay uses this to position the first line.
//?*****
//?USER: Process top of page

// TOP.Load ID = DB1.Load ID
TOP_Load_ID = DB1.Load_ID;

EXECUTE FUNCTION(Rtv Co. Shipper        RT) TYPE(RTVOBJ) FILE(PDJYREP)          AC1772483;
PARAMETER(DB1.Company_Number);
PARAMETER(TOP_CDI_Shipper);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.CDI Shipper = DB1.CDI Shipper
 PAR.CDI_Shipper = DB1.CDI_Shipper;

}


EXECUTE FUNCTION(RTV Federal ID,City,St RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1782329;
PARAMETER(DB1.Company_Number);
PARAMETER(WRK.City);
PARAMETER(TOP_Federal_Tax_Id);
PARAMETER(WRK.State_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// TOP.City/State/Zip        USR = CONCAT(WRK.City,WRK.State Code,CON.1)
TOP_City_State_Zip_USR = WRK.City + WRK.State_Code (1);

// TOP.Reefer Temperature = DB1.Reefer Temperature
TOP_Reefer_Temperature = DB1.Reefer_Temperature;

// TOP.Shipping Temp Code C/F = DB1.Shipping Temp C/F txt
TOP_Shipping_Temp_Code_C_F = DB1.Shipping_Temp_C_F_txt;

// TOP.Seal 1 USR Alpha = DB1.Seal 1
TOP_Seal_1_USR_Alpha = DB1.Seal_1;

//?** Format Seal 1
CASE;

// IF TOP.Seal 1 USR Alpha is ALL ZEROS
IF TOP_Seal_1_USR_Alpha = '0000000';

// TOP.Seal 1 USR Alpha = CON.*BLANK
TOP_Seal_1_USR_Alpha = *BLANK;

ENDIF;

// TOP.Seal 2 USR Alpha = DB1.Seal 2
TOP_Seal_2_USR_Alpha = DB1.Seal_2;

//?** Format Seal 2
CASE;

// IF TOP.Seal 2 USR Alpha is ALL ZEROS
IF TOP_Seal_2_USR_Alpha = '0000000';

// TOP.Seal 2 USR Alpha = CON.*BLANK
TOP_Seal_2_USR_Alpha = *BLANK;

ENDIF;

// TOP.Seal 3 USR Alpha = DB1.Seal 3
TOP_Seal_3_USR_Alpha = DB1.Seal_3;

//?** Format Seal 3
CASE;

// IF TOP.Seal 3 USR Alpha is ALL ZEROS
IF TOP_Seal_3_USR_Alpha = '0000000';

// TOP.Seal 3 USR Alpha = CON.*BLANK
TOP_Seal_3_USR_Alpha = *BLANK;

ENDIF;

// TOP.Load Shag Flag = DB1.Load Shag Flag
TOP_Load_Shag_Flag = DB1.Load_Shag_Flag;

// TOP.Load Wash Flag = DB1.Load Wash Flag
TOP_Load_Wash_Flag = DB1.Load_Wash_Flag;

// TOP.Trailer Id            USR = DB1.Trailer Id
TOP_Trailer_Id_USR = DB1.Trailer_Id;

// WRK.Status Description = Condition name of DB1.Shipping Method
WRK.Status_Description = RTVCND(DB1.Shipping_Method);

// TOP.Status Description = SUBSTRING(WRK.Status Description,CON.1,CON.7)
TOP_Status_Description = SUBSTRING(WRK.Status_Description:1:7);

// WRK.Page Number USR = WRK.Page Number USR + CON.1
WRK.Page_Number_USR = WRK.Page_Number_USR + 1;

// TOP.USR Page Number 3.0 = WRK.Page Number USR
TOP_USR_Page_Number_3_0 = WRK.Page_Number_USR;

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

//?USER: On print of detail format

CASE;

// IF DB1.Override Total Load Miles is Entered
IF DB1.Override_Total_Load_Miles <> *ZERO;

// CUR.Total Load Miles = DB1.Override Total Load Miles
CUR.Total_Load_Miles = DB1.Override_Total_Load_Miles;

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Total Load Miles = DB1.Total Load Miles
CUR.Total_Load_Miles = DB1.Total_Load_Miles;

ENDIF;

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT BOL Dtl - DLY     PO
EXECUTE FUNCTION(PRT BOL Dtl - DLY     PO) TYPE(PRTOBJ);
PARAMETER(CUR.Load_ID);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Reefer_Temperature);
PARAMETER(CUR.Seal_1);
PARAMETER(CUR.Seal_2);
PARAMETER(CUR.Seal_3);
PARAMETER(CUR.Total_Stops);
PARAMETER(CUR.Trailer_Id);
PARAMETER(CUR.Carrier_Code);
PARAMETER(CUR.Number_Pallets_Received);
PARAMETER(CUR.Number_Pallets_Loaded);
PARAMETER(CUR.Load_Carrier_Pay_Amt);
PARAMETER(CUR.Product_Temperature);
PARAMETER(CUR.Number_Spacers_Loaded);
PARAMETER(CUR.Car_Veh_Initials);
PARAMETER(CUR.Total_Load_Miles);
PARAMETER(CUR.Recorder_ID);
PARAMETER(CUR.Shipping_Method);
PARAMETER(CUR.Ship_From_Warehouse);
PARAMETER(CUR.Scheduled_Delivery_Date);
PARAMETER(CUR.Scheduled_Delivery_Time);
PARAMETER(CUR.Shipping_Temp_C_F_txt);
PARAMETER(PAR.USR_Page_Number_3_0);
PARAMETER(PAR.BOL_Status_USR);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level totals

// SUPPRESSED PRINT Company Number totals format

//?PRTOBJ calls before print of final totals format

//?Embedded PRTOBJ : Prt Document Comment  PO
EXECUTE FUNCTION(Val Comment Exists    RT) TYPE(RTVOBJ) FILE(PPAQREP)           AC1852951;
PARAMETER(PAR.Company_Number);
PARAMETER('BL');
PARAMETER('TRAFF');
PARAMETER(LCL.Record_Created_USR);
{
 //?USER: Initialize routine

 // PAR.Record Created        USR = CND.No
 PAR.Record_Created_USR = 'N';

 //?USER: Process Data record

 CASE;

 // IF DB1.CDD Comment 1 is Entered
 IF DB1.CDD_Comment_1 <> *BLANK;

 // AND DB1.CDD Comment 2 is Entered
 AND DB1.CDD_Comment_2 <> *BLANK;

 // AND DB1.CDD Comment 3 is Entered
 AND DB1.CDD_Comment_3 <> *BLANK;

 // AND DB1.CDD Comment 4 is Entered
 AND DB1.CDD_Comment_4 <> *BLANK;

 // AND DB1.CDD Comment 5 is Entered
 AND DB1.CDD_Comment_5 <> *BLANK;

 // PAR.Record Created        USR = CND.Yes
 PAR.Record_Created_USR = 'Y';

 ENDIF;

}


CASE;

// IF LCL.Record Created        USR is No
IF LCL.Record_Created_USR = 'N';

QUIT;

ENDIF;

EXECUTE FUNCTION(Prt Document Comment  PO) TYPE(PRTOBJ);
PARAMETER(PAR.Company_Number);
PARAMETER('TRAFF');
PARAMETER('BL');
{
 //?USER: Initialize routine

 // PAR.Record Created        USR = CND.No
 PAR.Record_Created_USR = 'N';

 //?USER: Process Data record

 CASE;

 // IF DB1.CDD Comment 1 is Entered
 IF DB1.CDD_Comment_1 <> *BLANK;

 // AND DB1.CDD Comment 2 is Entered
 AND DB1.CDD_Comment_2 <> *BLANK;

 // AND DB1.CDD Comment 3 is Entered
 AND DB1.CDD_Comment_3 <> *BLANK;

 // AND DB1.CDD Comment 4 is Entered
 AND DB1.CDD_Comment_4 <> *BLANK;

 // AND DB1.CDD Comment 5 is Entered
 AND DB1.CDD_Comment_5 <> *BLANK;

 // PAR.Record Created        USR = CND.Yes
 PAR.Record_Created_USR = 'Y';

 ENDIF;

}


//?USER: On print of final totals format

RETURN;

