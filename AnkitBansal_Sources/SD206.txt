      *****************  RPG PROGRAM HEADING  ************************
     h option(*SRCSTMT:*NODEBUGIO)
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Margin Management
      * PROGRAM:     SD206 - Signal Demand: Item Bill of Material
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     03/05/08
      *
      * FUNCTION: This program builds the BOM file.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * Date      Programmer
      *
      * 04/03/08  LeAnne Ramsey
      *           Added 2 fields to Item Bill of Material file for Signal Demand:
      *                 1) Consume Priority
      *                 2) Consume Priority Percent
      *           Prior to this change we were omitting records when/where:
      *                       (iov2st = 'P' and iobppr = 0) or
      *                       (iov2st = 'C' and ioixqt = 0)
      *           Now, we want to include/process all Active records.
      *
      * 05/09/08  LeAnne Ramsey
      *           Signal Demand now wants multiple records for an Item when it
      *           has "alternatives" that it can "consume". To keep the
      *           confusion/complexity out of this Signal Demand build, Purva
      *           has created a workfile/workfile build program that I call
      *           prior to calling this SD206 program. Her program does all the
      *           complex logic and writes the workfile. This program now just
      *           does a read/write from the workfile to the Signal Demand file.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fpmdycpl1  if   e           k disk
      *   Purva's workfile: Item BOM
      *
      *
     Fsdp206    o    e           k disk
      *    Signal Demand: Item bill of material
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * Data Structures
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * Mainline
      ***************************************************************************************
      *
      * Read each record in Purva's workfile (Item Bill of Material).
      *
     C     *loval        setll     pmdycpl1
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      pmdycpl1                               90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   z-add     dyhgcd        bmitcd
     C                   z-add     dydxnb        bmseqno
     C                   z-add     dyc9nb        bmciitcd
     C                   move      dyv2st        bmbomty
     C                   z-add     dybppr        bmpypc
     C                   z-add     dycnsm        bmcp
     C                   z-add     dybmy1        bmcppc
     C                   z-add     dybmy2        bmpumppc
     C                   z-add     dyixqt        bmmcpc
      *
     C                   write     bmrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      * EOF
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
     C                   endsr
      /EJECT
