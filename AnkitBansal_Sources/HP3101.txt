      *****************  RPG PROGRAM HEADING  ************************
     h option(*SRCSTMT:*NODEBUGIO)
      *
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP3101
      * PROJECT:     E010812  Task: E11947
      * TITLE:       Workfile--Populate Delivery Sched Detail INT file
      * PROGRAMMER:  Brad Baden
      * CREATED:     12/05/17
      *
      * FUNCTION:  Batch program to populate file PWAKCPP
      *            This is called from HP4082CL - Move Edited Scheduled Transfers into HPS.
      *            This program will only select customers that exist in the Ship To SBD
      *            Customer file HSP195.  Since 3rd Party customers do not exist in that
      *            file, they will be excluded when populating the Delivery Sched Detail INT
      *            file.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      *  5/09/18  Brad Baden    (E13021)
      *           Populate Change Date and Change Time on PWAKCPP records
      *
      *  5/15/18  Brad Baden    (E13054)
      *           Populate Farm, Building, and Room from the HSP196 record.
      *
      * 11/03/20  ISE           (H16853)
      *           Recompile only. Increased Buy Order field length from 5 to 7.
      *
      ****************************************************************
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp196    if   e             disk
      *    Scheduled Load Planning File (records selected by open query)
      *
      *
     Fhsl195a   if   e           k disk
      *     Ship To Seaboard Customer
      *
      *
     Fhsl1951a  if   e           k disk
      *     Ship To Seaboard Customer Ref
      *
      *
     Fpwakcpl0  o    e           k disk
      *    Delivery Sched Detail INT
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
      * Control fields
      *
     D procfl          s              1    inz('Y')                             process record
     D first           s              1    inz('Y')                             first pass
     D recordfound     s              1    inz('N')                             at least 1 rcd proc
      *
      *
      * Save fields
      *
     D svakzta1        s                   like(akzta1)                         movement#
     D svakzoa1        s                   like(akzoa1)                         company#
     D svakhwdt        s                   like(akhwdt)                         kill date
     D svakhxdt        s                   like(akhxdt)                         delivery date
     D svakckth        s                   like(akckth)                         delivery time
     D svakjxss        s                   like(akjxss)                         load type
      *
      *
      * Work fields for date manipulation
      *
     D wkupdt          s                   like(akpvcd)
     D wkuptm          s                   like(akpwcd)
     D transseq        s              5  0
     D headcount       s              5  0
     D producer        s              6
     D producerloc     s              6
     D customer        s              8p 0
     D custtype        s              2p 0
     D farmsite        s                   like(akzsa1)
     D building        s                   like(akstcd)
     D room            s                   like(aksucd)
     D hoggroup        s                   like(akjvss)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Prepare to read the file.
      *
     C     *start        setll     hsp196
      *
      * Read all records in the file that were selected by the open query.
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsp196                                 90
     C                   if        *in90 = *off                                 if not EOF
      *
      * Default the 'process' flag to YES.
      *
     C                   move      yes           procfl
      *
      * If the SBD Customer record for the customer number is not found, or
      * if the record exists but the Post to HPE flag is 'N', then do not
      * process this HSP196 record.
      *
     C     lpajd         chain     hsl195a
     C                   if        %found(hsl195a)                              if found
     C                   if        cupsthpe = no                                if cupsthpe
     C                   move      no            procfl
     C                   endif                                                  fi cupsthpe
     C                   else
     C                   move      no            procfl
     C                   endif                                                  fi found
      *
      * Continue processing?
      *
     C                   if        procfl = yes                                 if procfl = yes
      *
      * Check for change in Movement Number.  When Movement Number changes,
      * a record will be written to the Delivery Sched Detail INT file for
      * the previous Movement Number.
      *
     C                   if        svakzta1 <> lpmvsn                           if svakzta1

      *       write a record to PWAKCPL0
     C                   if        first = 'Y'                                  if first
     C                   eval      first = 'N'
     C                   eval      recordfound = yes
     C                   else
     C                   exsr      $wrtpwak
     C                   eval      recordfound = yes
     C                   eval      headcount = 0
     C                   endif                                                  fi first

     C                   exsr      $producer
     C                   exsr      $holdvalues
     C                   eval      svakzta1 = lpmvsn

     C                   else
     C                   eval      headcount = headcount + lpschd
     C                   endif                                                  fi svakzta1
     C                   endif                                                  fi procfl = yes
      *
     C                   endif                                                  fi not EOF
     C                   enddo                                                  Main do
      *
      * EOF processing
      *
     C                   if        recordfound = yes                            if recordfound
     C                   exsr      $wrtpwak
     C                   endif                                                  fi recordfound
      *
     C                   eval      *inlr = *on
      /EJECT
      *---------------------------------------------------------------
      * Move saved values to daabase fields and then write the record
      *---------------------------------------------------------------
      *
     C     $wrtpwak      begsr
      *
     C                   eval      akzoa1 = svakzoa1                            company number
     C                   eval      akhvdt = %dec(%char(%date:*cymd0):7:0)       current date
     C                   time                    akb6tm                         current time
     C                   eval      akzpa1 = transseq                            sequence number
     C                   eval      akhwdt = svakhwdt                            kill date
     C                   eval      akhxdt = svakhxdt                            delivery date
     C                   eval      akckth = svakckth                            delivery time
     C                   eval      akzsa1 = farmsite                            farm site
     C                   eval      akstcd = building                            building
     C                   eval      aksucd = room                                room
     C                   eval      akjvss = hoggroup                            hog group
     C                   eval      akzra1 = headcount                           head count
     C                   eval      akjxss = svakjxss                            load type
     C                   eval      akzta1 = svakzta1                            movement number
     C                   eval      akabcd = producer                            producer
     C                   eval      akaecd = producerloc                         producer location
      *
     C                   write     @akcpyb
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Hold the values of the current HSP196 record
      *---------------------------------------------------------------
      *
     C     $holdvalues   begsr
      *
     C                   move      lpcocd        svakzoa1                       company code
     C                   eval      svakhwdt = %dec(%char(%date(lpsckldt:*iso):  kill date
     C                                      *cymd0):7:0)
     C                   eval      svakhxdt = %dec(%char(%date(lpscshdt:*iso):  ship date
     C                                      *cymd0):7:0)
     C                   movel     lpscshtm      svakckth                       ship time
     C                   eval      svakjxss = lpltcd                            load type
     C                   eval      svakzta1 = lpmvsn                            movement number
     C                   eval      transseq = transseq + 1                      transaction seq#
     C                   eval      headcount = headcount + lpschd               head count
     C                   eval      farmsite  = lpfscd                           farm site
     C                   eval      building  = lpblcd                           building
     C                   eval      room      = lprmcd                           room
     C                   eval      hoggroup  = lphgcd                           hog group
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Get Producer and Producer Location from Ship To SBD Customer
      *---------------------------------------------------------------
      *
     C     $producer     begsr
      *
      ** First, get producer
      *
     C                   eval      customer = lpajd
     C                   eval      custtype = 2
     C     key01         chain     hsl1951a
     C                   if        %found
     C                   eval      producer = crtypcd
     C                   else
     C                   eval      producer = *blanks
     C                   endif
      *
      ** Then get producer location
      *
     C                   eval      customer = lpajd
     C                   eval      custtype = 3
     C     key01         chain     hsl1951a
     C                   if        %found
     C                   eval      producerloc = crtypcd
     C                   else
     C                   eval      producerloc = *blanks
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      ** Load PWAKCPL0 values that never change value
      *
     C     key01         klist
     C                   kfld                    customer
     C                   kfld                    custtype
      *
      * Set up the date/time for time-stamping the PWAKCPL0 record
      *
           wkupdt = %dec(%char(%date(udate:*mdy):*cymd0):7:0);
      *
     C                   time                    wkuptm
      *
      ** Load PWAKCPL0 values that never change value
      *
     C                   eval      akzqa1 = 1
     C                   eval      akjwss = *blanks
     C                   eval      aks1cd = *blanks
     C                   eval      akswcd = *blanks
     C                   eval      aksxcd = *blanks
     C                   eval      aksycd = *blanks
     C                   eval      akjyss = 'F'
     C                   eval      akszcd = *blanks
     C                   eval      aks0cd = *blanks
     C                   eval      akjzss = *blanks
     C                   eval      akhzdt = *zeros
     C                   eval      akclth = *zeros
     C                   eval      akh0dt = *zeros
     C                   eval      akcmth = *zeros
     C                   eval      akhydt = *zeros
     C                   eval      akcnth = *zeros
     C                   eval      akhmnb = *zeros
     C                   eval      akbnnb = *zeros
     C                   eval      akbonb = *zeros
     C                   eval      akzua1 = *zeros
     C                   eval      akzva1 = *zeros
     C                   eval      ake3t1 = *blanks
     C                   eval      ake4t1 = *blanks
     C                   eval      akj0ss = 'SM'
     C                   eval      akffss = 'A'
     C                   eval      akfgss = 0                                   DSU process status
     C                   eval      akfhss = *blanks
     C                   eval      akpvcd = wkupdt
     C                   eval      akpwcd = wkuptm
      *
     C                   endsr
      /EJECT
