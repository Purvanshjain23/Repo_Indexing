// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPO5PFR
// ?Date: 14.08.2025 Time: 12:06:37
// ?------------------------------------------------------------------------------------------------

//?USER: Record selection processing

//?RMC 8/5/20 ADDED THIS SELECTION TO PROCESS ONLY WHSES FOR PAR.ISC GROUP
EXECUTE FUNCTION(Rtv Acct Co          RT) TYPE(RTVOBJ) FILE(CAADREP)            AC1802492;
PARAMETER(DB1.Warehouse_Code);
PARAMETER(LCL.Accounting_Company);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(LCL.Accounting_Company);
PARAMETER('IVFGROUP');
PARAMETER(LCL.IVF_Valuation_Grouping);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PAR.ISC Valuation Grouping NE LCL.IVF Valuation Grouping
IF PAR.ISC_Valuation_Grouping <> LCL.IVF_Valuation_Grouping;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF DB1.Inventory Trans. Type is Issue types
IF DB1.Inventory_Trans_Type = 'I'/'IO'/'RW';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT Item Code header format

// SUPPRESSED PRINT Warehouse Code header format

// SUPPRESSED PRINT Inventory Trans. Type header format

// SUPPRESSED PRINT Production Date header format

//?USER: On print of detail format

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

//?USER: Process after print of detail format

NXT.Transaction_Qty_SUM = SUM(CUR.Transaction_Quantity);

NXT.Transaction_Wgt_Ttl_SUM = SUM(CUR.Transaction_Weight);

//?USER: Print required level totals

// SUPPRESSED PRINT Production Date totals format

CASE;

IF NEW Inventory_Trans_Type;
CASE;

// IF CUR.Transaction Qty       SUM is Entered
IF CUR.Transaction_Qty_SUM <> *ZERO;

// OR CUR.Transaction Wgt. Ttl SUM is Entered
OR CUR.Transaction_Wgt_Ttl_SUM <> *ZERO;

CASE;

// IF CUR.Inventory Trans. Type is Issue types
IF CUR.Inventory_Trans_Type = 'I'/'IO'/'RW';

// PAR.Record Found USR = CND.Record Found
PAR.Record_Found_USR = 'Y';

// PAR.ISC Inventory Shipmnt Qty = PAR.ISC Inventory Shipmnt Qty + CUR.Transaction Qty       SUM
PAR.ISC_Inventory_Shipmnt_Qty = PAR.ISC_Inventory_Shipmnt_Qty + CUR.Transaction_Qty_SUM;

// PAR.ISC Inventory Shipmnt Lbs = PAR.ISC Inventory Shipmnt Lbs + CUR.Transaction Wgt. Ttl SUM
PAR.ISC_Inventory_Shipmnt_Lbs = PAR.ISC_Inventory_Shipmnt_Lbs                                      +
+ CUR.Transaction_Wgt_Ttl_SUM;

// IF CUR.Inventory Trans. Type is Transfer types
IF CUR.Inventory_Trans_Type = 'TW'/'T';

// IF CUR.Inventory Trans. Type is Misc Adj types
IF CUR.Inventory_Trans_Type = 'RC'/'R'/'RP'/'S';

ENDIF;

ENDIF;

// Print Inventory Trans. Type totals format
PRINT Inventory Trans. Type totals format;

ENDIF;

CASE;

IF NEW Warehouse_Code;
CASE;

// IF PAR.Record Found USR is Record Found
IF PAR.Record_Found_USR = 'Y';

EXECUTE FUNCTION(Rtv Acct Co          RT) TYPE(RTVOBJ) FILE(CAADREP)            AC1802492;
PARAMETER(CUR.Warehouse_Code);
PARAMETER(LCL.Accounting_Company);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?R9083 05/09/17 DN-Added IVG as Input Parm.
EXECUTE FUNCTION(Rtv Chg Inv Shipments RT) TYPE(RTVOBJ) FILE(PPBSCPP)           AC1739486;
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(LCL.Accounting_Company);
PARAMETER(CUR.Warehouse_Code);
PARAMETER(CUR.Item_Code);
PARAMETER(PAR.ISC_Inventory_Shipmnt_Qty);
PARAMETER(PAR.ISC_Inventory_Shipmnt_Lbs);
PARAMETER(PAR.ISC_Valuation_Grouping);
{
 //?USER: Processing if Data record not found

 EXECUTE FUNCTION(Rtv Inv Stock Closing RT) TYPE(RTVOBJ) FILE(OMBYREP)           AC1738283;
 PARAMETER(PAR.ISC_Item_Code);
 PARAMETER(WRK.Description_Line_One);
 PARAMETER(WRK.ISC_Item_Structure_Class);
 PARAMETER(WRK.ISC_Item_Structure_Group);
 PARAMETER(WRK.ISC_Item_Structure_Type);
 PARAMETER(WRK.ISC_Item_Dft_Cmdty_Mkt_Bs);
 PARAMETER(WRK.ISC_Item_Type);
 PARAMETER(WRK.ISC_Item_Cmdty_Price_Grp);
 PARAMETER(WRK.ISC_Item_GL_Sub_Code);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv Inv Stock Closing RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1738284;
 PARAMETER(PAR.ISC_Warehouse_Company);
 PARAMETER(PAR.ISC_Item_Code);
 PARAMETER(WRK.ISC_Item_UOM_Pricing);
 PARAMETER(WRK.ISC_Item_Market_Overage);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Warehouse Type     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1285482;
 PARAMETER(PAR.ISC_Warehouse_Code);
 PARAMETER(WRK.ISC_Warehouse_Type);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // WRK.ISC Post Balance Sts = CND.Open
 WRK.ISC_Post_Balance_Sts = 'O';

 // WRK.ISC Post Warehouse Sts = CND.Open
 WRK.ISC_Post_Warehouse_Sts = 'O';

 //?R9083 05/09/17 DN-Populate ISC Valuation Grouping.
 EXECUTE FUNCTION(Crt Inventory Stock   CR) TYPE(CRTOBJ) FILE(PPBSCPP)           AC1738127;
 PARAMETER(PAR.ISC_Week_Ending_Date);
 PARAMETER(PAR.ISC_Warehouse_Company);
 PARAMETER(PAR.ISC_Warehouse_Code);
 PARAMETER(PAR.ISC_Item_Code);
 PARAMETER(WRK.ISC_Warehouse_Type);
 PARAMETER(WRK.ISC_Item_Cmdty_Price_Grp);
 PARAMETER(WRK.ISC_Item_Dft_Cmdty_Mkt_Bs);
 PARAMETER(WRK.ISC_Item_Type);
 PARAMETER(WRK.ISC_Item_Market_Overage);
 PARAMETER(WRK.ISC_Item_Structure_Type);
 PARAMETER(WRK.ISC_Item_Structure_Group);
 PARAMETER(WRK.ISC_Item_Structure_Class);
 PARAMETER(WRK.ISC_Item_GL_Sub_Code);
 PARAMETER(WRK.ISC_Item_UOM_Pricing);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.ISC_Inventory_Shipmnt_Qty);
 PARAMETER(PAR.ISC_Inventory_Shipmnt_Lbs);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(WRK.ISC_Post_Balance_Sts);
 PARAMETER(WRK.ISC_Post_Warehouse_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.ISC_Valuation_Grouping);
 PARAMETER(*ZERO);
 PARAMETER(WRK.ISC_Unused_Sts_2);
 PARAMETER('A');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

  // Compute:Ending Inv Fin Qt
  DB1.ISC_Ending_Inv_Final_Qty = ( ( ( DB1.ISC_Ending_Inventory_Qty
  + DB1.ISC_Ending_Inv_Adj_Qty ) + DB1.ISC_Sun_Ship_Inv_Adj_Qty )
  + DB1.ISC_Unsh_Ship_Inv_Adj_Qty ) + DB1.ISC_End_Inv_Partial_Qty;

  // Compute:Ending Inv Fin Lb
  DB1.ISC_Ending_Inv_Final_Lbs = ( ( ( DB1.ISC_Ending_Inventory_Lbs
  + DB1.ISC_Ending_Inv_Adj_Lbs ) + DB1.ISC_Sun_Ship_Inv_Adj_Lbs )
  + DB1.ISC_Unsh_Ship_Inv_Adj_Lbs ) + DB1.ISC_End_Inv_Partial_Lbs;

 }

 //?USER: Process Data record

 // WRK.ISC Inventory Shipmnt Qty = DB1.ISC Inventory Shipmnt Qty + PAR.ISC Inventory Shipmnt Qty
 WRK.ISC_Inventory_Shipmnt_Qty = DB1.ISC_Inventory_Shipmnt_Qty
 + PAR.ISC_Inventory_Shipmnt_Qty;

 // WRK.ISC Inventory Shipmnt Lbs = DB1.ISC Inventory Shipmnt Lbs + PAR.ISC Inventory Shipmnt Lbs
 WRK.ISC_Inventory_Shipmnt_Lbs = DB1.ISC_Inventory_Shipmnt_Lbs
 + PAR.ISC_Inventory_Shipmnt_Lbs;

 EXECUTE FUNCTION(Chg Inventory Stock   CH) TYPE(CHGOBJ) FILE(PPBSCPP)           AC1738128;
 PARAMETER(DB1.ISC_Week_Ending_Date);
 PARAMETER(DB1.ISC_Warehouse_Company);
 PARAMETER(DB1.ISC_Warehouse_Code);
 PARAMETER(DB1.ISC_Item_Code);
 PARAMETER(DB1.ISC_Warehouse_Type);
 PARAMETER(DB1.ISC_Item_Cmdty_Price_Grp);
 PARAMETER(DB1.ISC_Item_Dft_Cmdty_Mkt_Bs);
 PARAMETER(DB1.ISC_Item_Type);
 PARAMETER(DB1.ISC_Item_Market_Overage);
 PARAMETER(DB1.ISC_Item_Structure_Type);
 PARAMETER(DB1.ISC_Item_Structure_Group);
 PARAMETER(DB1.ISC_Item_Structure_Class);
 PARAMETER(DB1.ISC_Item_GL_Sub_Code);
 PARAMETER(DB1.ISC_Item_UOM_Pricing);
 PARAMETER(DB1.ISC_Begin_Inv_Final_Qty);
 PARAMETER(DB1.ISC_Begin_Inv_Final_Lbs);
 PARAMETER(DB1.ISC_Begin_Inv_Adjust_Qty);
 PARAMETER(DB1.ISC_Begin_Inv_Adjust_Lbs);
 PARAMETER(DB1.ISC_Begin_Inv_Qty);
 PARAMETER(DB1.ISC_Begin_Inv_Lbs);
 PARAMETER(DB1.ISC_Floor_Production_Qty);
 PARAMETER(DB1.ISC_Floor_Production_Lbs);
 PARAMETER(DB1.ISC_Floor_Prod_Adj_Qty);
 PARAMETER(DB1.ISC_Floor_Prod_Adj_Lbs);
 PARAMETER(DB1.ISC_Sales_Production_Qty);
 PARAMETER(DB1.ISC_Sales_Production_Lbs);
 PARAMETER(WRK.ISC_Inventory_Shipmnt_Qty);
 PARAMETER(WRK.ISC_Inventory_Shipmnt_Lbs);
 PARAMETER(DB1.ISC_Ord_Dtl_Shipment_Qty);
 PARAMETER(DB1.ISC_Ord_Dtl_Shipment_Lbs);
 PARAMETER(DB1.ISC_Shipment_Final_Qty);
 PARAMETER(DB1.ISC_Shipment_Final_Lbs);
 PARAMETER(DB1.ISC_FOB_Gross_Amount);
 PARAMETER(DB1.ISC_Inventory_Txfr_Qty);
 PARAMETER(DB1.ISC_Inventory_Txfr_Lbs);
 PARAMETER(DB1.ISC_Misc_Invntry_Adj_Qty);
 PARAMETER(DB1.ISC_Misc_Invntry_Adj_Lbs);
 PARAMETER(DB1.ISC_Ending_Inventory_Qty);
 PARAMETER(DB1.ISC_Ending_Inventory_Lbs);
 PARAMETER(DB1.ISC_End_Inv_User_Id);
 PARAMETER(DB1.ISC_End_Inv_Date);
 PARAMETER(DB1.ISC_End_Inv_Time);
 PARAMETER(DB1.ISC_Sun_Ship_Inv_Adj_Qty);
 PARAMETER(DB1.ISC_Sun_Ship_Inv_Adj_Lbs);
 PARAMETER(DB1.ISC_Unsh_Ship_Inv_Adj_Qty);
 PARAMETER(DB1.ISC_Unsh_Ship_Inv_Adj_Lbs);
 PARAMETER(DB1.ISC_End_Inv_Partial_Qty);
 PARAMETER(DB1.ISC_End_Inv_Partial_Lbs);
 PARAMETER(DB1.ISC_Ending_Inv_Adj_Qty);
 PARAMETER(DB1.ISC_Ending_Inv_Adj_Lbs);
 PARAMETER(DB1.ISC_End_Inv_Adj_Comment);
 PARAMETER(DB1.ISC_Ending_Inv_Adj_User);
 PARAMETER(DB1.ISC_Ending_Inv_Adj_Date);
 PARAMETER(DB1.ISC_Ending_Inv_Adj_Time);
 PARAMETER(DB1.ISC_Ending_Inv_Final_Qty);
 PARAMETER(DB1.ISC_Ending_Inv_Final_Lbs);
 PARAMETER(DB1.ISC_Warehouse_Price_UOM);
 PARAMETER(DB1.ISC_Warehouse_Price_Ovrrd);
 PARAMETER(DB1.ISC_Post_Balance_Sts);
 PARAMETER(DB1.ISC_Post_Warehouse_Sts);
 PARAMETER(DB1.ISC_Commission_Amount);
 PARAMETER(DB1.ISC_Unused_Lbs_1);
 PARAMETER(DB1.ISC_TF_Exempt_NPR_Dollars);
 PARAMETER(DB1.ISC_TF_Exempt_Pounds);
 PARAMETER(DB1.ISC_Valuation_Grouping);
 PARAMETER(DB1.ISC_Unused_Date_1);
 PARAMETER(DB1.ISC_Unused_Sts_2);
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

  // Compute:Ending Inv Fin Qt
  DB1.ISC_Ending_Inv_Final_Qty = ( ( ( DB1.ISC_Ending_Inventory_Qty
  + DB1.ISC_Ending_Inv_Adj_Qty ) + DB1.ISC_Sun_Ship_Inv_Adj_Qty )
  + DB1.ISC_Unsh_Ship_Inv_Adj_Qty ) + DB1.ISC_End_Inv_Partial_Qty;

  // Compute:Ending Inv Fin Lb
  DB1.ISC_Ending_Inv_Final_Lbs = ( ( ( DB1.ISC_Ending_Inventory_Lbs
  + DB1.ISC_Ending_Inv_Adj_Lbs ) + DB1.ISC_Sun_Ship_Inv_Adj_Lbs )
  + DB1.ISC_Unsh_Ship_Inv_Adj_Lbs ) + DB1.ISC_End_Inv_Partial_Lbs;

  // Comp: sales prod qty
  DB1.ISC_Sales_Production_Qty = ( DB1.ISC_Ending_Inv_Final_Qty
  + DB1.ISC_Shipment_Final_Qty ) - DB1.ISC_Begin_Inv_Final_Qty;

  // Comp: sales prod lbs
  DB1.ISC_Sales_Production_Lbs = ( DB1.ISC_Ending_Inv_Final_Lbs
  + DB1.ISC_Shipment_Final_Lbs ) - DB1.ISC_Begin_Inv_Final_Lbs;

 }

}


ENDIF;

// PAR.ISC Inventory Shipmnt Qty = CON.*ZERO
PAR.ISC_Inventory_Shipmnt_Qty = *ZERO;

// PAR.ISC Inventory Shipmnt Lbs = CON.*ZERO
PAR.ISC_Inventory_Shipmnt_Lbs = *ZERO;

// PAR.Record Found USR = CND.Record Not Found
PAR.Record_Found_USR = 'N';

// Print Warehouse Code totals format
PRINT Warehouse Code totals format;

ENDIF;

// SUPPRESSED PRINT Item Code totals format

// SUPPRESSED PRINT Company Number totals format

