     H/TITLE WW DP Product         DF  Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Display file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISJHIGH
     H* Date          : 05/22/18  Time  : 15:28:53
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPBOTDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: WW DP Product         DF  Display file
      *
     FPBBNREL2IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RSQ : DP Product                Product
      *
     FOMBYREL1IF  E           K        DISK
      * RTV : Item Default              Retrieval index
      *
     FPBBPREL2IF  E           K        DISK
      * RSQ : DP Product Location       Product/Location
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPBBNREL0UF  E           K        DISK
      * UPD : DP Product                Update index
      *
     E                    AR1        30  1               ARRAY 1
     E                    AR2        30  1               ARRAY 2
     E                    J7          7  1
     E                    K7          7  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    #L7         7  1
     E                    UCT        40  1               CENTER TABLE
      * Long constants
     E                    @CN#    1  03  6   @CN    25
     I@BNRESX
      * DP Product                Update index
      * Renamed input format fields
     I              BNTAAA                          WATAAA
     I              BNTBAA                          WATBAA
     I              BNFWC7                          WAFWC7
     I              BNUYNA                          WAUYNA
     I              BNZVNY                          WAZVNY
     I              BNZWNY                          WAZWNY
     I              BNCFU1                          WACFU1
     I              BNTCAA                          WATCAA
     I              BNCGU1                          WACGU1
     I              BNCHU1                          WACHU1
     I              BNCIU1                          WACIU1
     I              BNCJU1                          WACJU1
     I              BNXTAA                          WAXTAA
     I              BNAFNB                          WAAFNB
     I              BNAGNB                          WAAGNB
     I              BNADSC                          WAADSC
     I              BNS9AA                          WAS9AA
     I              BNANDX                          WAANDX
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     IQPBBN1    E DSPBBNREL0
      * UPD : DP Product                Update index
      * Renamed input format fields
     I              BNTAAA                          WATAAA
     I              BNTBAA                          WATBAA
     I              BNFWC7                          WAFWC7
     I              BNUYNA                          WAUYNA
     I              BNZVNY                          WAZVNY
     I              BNZWNY                          WAZWNY
     I              BNCFU1                          WACFU1
     I              BNTCAA                          WATCAA
     I              BNCGU1                          WACGU1
     I              BNCHU1                          WACHU1
     I              BNCIU1                          WACIU1
     I              BNCJU1                          WACJU1
     I              BNXTAA                          WAXTAA
     I              BNAFNB                          WAAFNB
     I              BNAGNB                          WAAGNB
     I              BNADSC                          WAADSC
     I              BNS9AA                          WAS9AA
     I              BNANDX                          WAANDX
      *
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * N :  Warehouse Code
     I                                        1   3 P1AJCD
      * N :  Company Number
     I                                    P   4   50P1AIC3
      * N :  Application Code
     I                                        6  11 P1DNCD
      * N :  Salesperson Code
     I                                       12  14 P1BCCD
      * N :  System Date Format
     I                                       15  17 P1B8NA
      * N :  User Profile Name
     I                                       18  27 P1AJVN
      * N :  Allow Multi-Company
     I                                       28  28 P1I6ST
      * N :  Default Printer
     I                                       29  38 P1MPNA
      * N :  First Time Flag
     I                                       39  39 P1TAST
      * N :  System Value Alpha
     I                                       40  79 P1BXTX
      * N :  Access Denied (Y/N)
     I                                       80  80 P1WVST
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'CD7 Non numeric data'
      * Message data for 'DP Prod cant be deleted'
      * *SFLSEL
     I                                        1   1 ZA0001
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0002
      * Application Code
     I                                       11  16 ZA0003
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0004
      * Application Code
     I                                       11  16 ZA0005
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           BNFWC7           DP Product
      * Setup key
     C                     Z-ADD#2FWC7    BNFWC7
     C           KPOS      SETLL@BNRETL
     C                     READ @BNRETL                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2UYNA    WZUYNA
     C                     MOVEL#2UYNA    WZUYNA           DP Product Desc
     C           *LIKE     DEFN #2CFU1    WZCFU1
     C                     MOVEL#2CFU1    WZCFU1           DP Product Type
     C           *LIKE     DEFN #2CHU1    WZCHU1
     C                     MOVEL#2CHU1    WZCHU1           DP Product Clas
     C           *LIKE     DEFN #2FWC7    WZFWC7
     C                     MOVEL#2FWC7    WZFWC7           DP Product
     C           *LIKE     DEFN #2ADSC    WZADSC
     C                     MOVEL#2ADSC    WZADSC           DP Record Statu
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@BNRETL                  90*
     C  N82                READ @BNRETL                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,37
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2UYNA    IFNE *BLANK                     DP Product Desc
     C           BNUYNA    CABNE#2UYNA    BB020            DP Product Desc
     C                     END
     C           #2CFU1    IFNE *BLANK                     DP Product Type
     C           BNCFU1    CABNE#2CFU1    BB020            DP Product Type
     C                     END
     C           #2CHU1    IFNE *BLANK                     DP Product Clas
     C           BNCHU1    CABNE#2CHU1    BB020            DP Product Clas
     C                     END
     C           #2ADSC    IFNE *BLANK                     DP Record Statu
     C           BNADSC    CABNE#2ADSC    BB020            DP Record Statu
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * E13079 JJH 05/22/18 - Display Item Type Code
      * Rtv Item Type Code     RT - Item Default  * 
     C                     EXSR SARVGN
      * Sel: item desc
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * CASE: CTL.Description 1 usr NE WRK.BLANK
     C           #CTIT1    IFNE WUGSTX                     *IF
      * CVT Str to Upper Alpha US - /UT User Source  * 
     C                     MOVEA#CTIT1    AR1              LOAD ARRAY
     C                     MOVEA*BLANK    AR2              LOAD ARRAY
     C                     Z-ADD1         X1      20       SET COUNTER
     C                     Z-ADD1         Y1      20       SET COUNTER
      * * * * * * * CHECK FOR ALPHABETIC CHARACTERS * * * * * * *
     C           X1        DOWLT31
     C           AR1,X1    IFEQ ' '
     C           AR1,X1    ORGE 'a'
     C           AR1,X1    ANDLE'Z'
     C           AR1,X1    ANDNE'~'
     C           AR1,X1    ANDNE'{'
     C           AR1,X1    ANDNE'}'
     C           AR1,X1    ANDNE'\'
     C                     MOVE AR1,X1    AR2,Y1
     C                     ADD  1         Y1
     C                     ADD  1         X1
     C                     ELSE
     C                     ADD  1         X1
     C                     END
     C                     END
     C                     Z-ADD1         Y1
     C           Y1        DOWLT31
     C           AR2,Y1    IFEQ 'a'
     C                     MOVEL'A'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'b'
     C                     MOVEL'B'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'c'
     C                     MOVEL'C'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'd'
     C                     MOVEL'D'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'e'
     C                     MOVEL'E'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'f'
     C                     MOVEL'F'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'g'
     C                     MOVEL'G'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'h'
     C                     MOVEL'H'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'i'
     C                     MOVEL'I'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'j'
     C                     MOVEL'J'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'k'
     C                     MOVEL'K'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'l'
     C                     MOVEL'L'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'm'
     C                     MOVEL'M'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'n'
     C                     MOVEL'N'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'o'
     C                     MOVEL'O'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'p'
     C                     MOVEL'P'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'q'
     C                     MOVEL'Q'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'r'
     C                     MOVEL'R'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 's'
     C                     MOVEL'S'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 't'
     C                     MOVEL'T'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'u'
     C                     MOVEL'U'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'v'
     C                     MOVEL'V'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'w'
     C                     MOVEL'W'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'x'
     C                     MOVEL'X'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'y'
     C                     MOVEL'Y'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'z'
     C                     MOVEL'Z'       AR2,Y1
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ADD  1         Y1
     C                     END
     C                     MOVEAAR2       #CTIT1           LOAD OUTPUT
      * CLC Call Qclscan       UP - /UT User Source  * 
     C                     CALL 'QCLSCAN'              90  CLC Call Qclsca
     C                     PARM #1UYNA    WQ0001256        USR Qclscan fie
     C                     PARM 30        WQ0002  30       USR Qclscan Len
     C                     PARM 1         WQ0003  30       USR Qclscan Sta
     C                     PARM #CTIT1    WQ0004256        USR Qclscan Mas
     C                     PARM 30        WQ0005  30       USR Qclscan Mas
     C                     PARM '1'       WQ0006  1        USR Qclscan Tra
     C                     PARM '1'       WQ0007  1        USR Qclscan Tri
     C                     PARM *BLANK    WQ0008  1        USR Qclscan Wil
     C           WUY8NB    PARM WUY8NB    WQ0009  30       USR Qclscan Res
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'QCLSCAN' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     9832  *
     C                     END
      * CASE: WRK.USR Qclscan Result ? is Does contain
     C           WUY8NB    IFGT 0                          *IF
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Sel Product Type
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * CASE: CTL.Text USR NE WRK.BLANK
     C           #CIUTX    IFNE WUGSTX                     *IF
      * CVT Str to Upper Alpha US - /UT User Source  * 
     C                     MOVEA#CIUTX    AR1              LOAD ARRAY
     C                     MOVEA*BLANK    AR2              LOAD ARRAY
     C                     Z-ADD1         X1      20       SET COUNTER
     C                     Z-ADD1         Y1      20       SET COUNTER
     C           X1        DOWLT31
     C           AR1,X1    IFEQ ' '
     C           AR1,X1    ORGE 'a'
     C           AR1,X1    ANDLE'Z'
     C           AR1,X1    ANDNE'~'
     C           AR1,X1    ANDNE'{'
     C           AR1,X1    ANDNE'}'
     C           AR1,X1    ANDNE'\'
     C                     MOVE AR1,X1    AR2,Y1
     C                     ADD  1         Y1
     C                     ADD  1         X1
     C                     ELSE
     C                     ADD  1         X1
     C                     END
     C                     END
     C                     Z-ADD1         Y1
     C           Y1        DOWLT31
     C           AR2,Y1    IFEQ 'a'
     C                     MOVEL'A'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'b'
     C                     MOVEL'B'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'c'
     C                     MOVEL'C'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'd'
     C                     MOVEL'D'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'e'
     C                     MOVEL'E'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'f'
     C                     MOVEL'F'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'g'
     C                     MOVEL'G'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'h'
     C                     MOVEL'H'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'i'
     C                     MOVEL'I'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'j'
     C                     MOVEL'J'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'k'
     C                     MOVEL'K'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'l'
     C                     MOVEL'L'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'm'
     C                     MOVEL'M'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'n'
     C                     MOVEL'N'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'o'
     C                     MOVEL'O'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'p'
     C                     MOVEL'P'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'q'
     C                     MOVEL'Q'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'r'
     C                     MOVEL'R'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 's'
     C                     MOVEL'S'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 't'
     C                     MOVEL'T'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'u'
     C                     MOVEL'U'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'v'
     C                     MOVEL'V'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'w'
     C                     MOVEL'W'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'x'
     C                     MOVEL'X'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'y'
     C                     MOVEL'Y'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'z'
     C                     MOVEL'Z'       AR2,Y1
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ADD  1         Y1
     C                     END
     C                     MOVEAAR2       #CIUTX           LOAD OUTPUT
      * CLC Call Qclscan       UP - /UT User Source  * 
     C                     CALL 'QCLSCAN'              90  CLC Call Qclsca
     C                     PARM #1CFU1    WQ0010256        USR Qclscan fie
     C                     PARM 50        WQ0011  30       USR Qclscan Len
     C                     PARM 1         WQ0012  30       USR Qclscan Sta
     C                     PARM #CIUTX    WQ0013256        USR Qclscan Mas
     C                     PARM 10        WQ0014  30       USR Qclscan Mas
     C                     PARM '1'       WQ0015  1        USR Qclscan Tra
     C                     PARM '1'       WQ0016  1        USR Qclscan Tri
     C                     PARM *BLANK    WQ0017  1        USR Qclscan Wil
     C           WUY8NB    PARM WUY8NB    WQ0018  30       USR Qclscan Res
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'QCLSCAN' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     9834  *
     C                     END
      * CASE: WRK.USR Qclscan Result ? is Does contain
     C           WUY8NB    IFGT 0                          *IF
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Sel Product Class
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * CASE: CTL.Text 10A USR NE WRK.BLANK
     C           #CK1TX    IFNE WUGSTX                     *IF
      * CVT Str to Upper Alpha US - /UT User Source  * 
     C                     MOVEA#CK1TX    AR1              LOAD ARRAY
     C                     MOVEA*BLANK    AR2              LOAD ARRAY
     C                     Z-ADD1         X1      20       SET COUNTER
     C                     Z-ADD1         Y1      20       SET COUNTER
     C           X1        DOWLT31
     C           AR1,X1    IFEQ ' '
     C           AR1,X1    ORGE 'a'
     C           AR1,X1    ANDLE'Z'
     C           AR1,X1    ANDNE'~'
     C           AR1,X1    ANDNE'{'
     C           AR1,X1    ANDNE'}'
     C           AR1,X1    ANDNE'\'
     C                     MOVE AR1,X1    AR2,Y1
     C                     ADD  1         Y1
     C                     ADD  1         X1
     C                     ELSE
     C                     ADD  1         X1
     C                     END
     C                     END
     C                     Z-ADD1         Y1
     C           Y1        DOWLT31
     C           AR2,Y1    IFEQ 'a'
     C                     MOVEL'A'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'b'
     C                     MOVEL'B'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'c'
     C                     MOVEL'C'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'd'
     C                     MOVEL'D'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'e'
     C                     MOVEL'E'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'f'
     C                     MOVEL'F'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'g'
     C                     MOVEL'G'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'h'
     C                     MOVEL'H'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'i'
     C                     MOVEL'I'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'j'
     C                     MOVEL'J'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'k'
     C                     MOVEL'K'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'l'
     C                     MOVEL'L'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'm'
     C                     MOVEL'M'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'n'
     C                     MOVEL'N'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'o'
     C                     MOVEL'O'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'p'
     C                     MOVEL'P'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'q'
     C                     MOVEL'Q'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'r'
     C                     MOVEL'R'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 's'
     C                     MOVEL'S'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 't'
     C                     MOVEL'T'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'u'
     C                     MOVEL'U'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'v'
     C                     MOVEL'V'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'w'
     C                     MOVEL'W'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'x'
     C                     MOVEL'X'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'y'
     C                     MOVEL'Y'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'z'
     C                     MOVEL'Z'       AR2,Y1
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ADD  1         Y1
     C                     END
     C                     MOVEAAR2       #CK1TX           LOAD OUTPUT
      * CLC Call Qclscan       UP - /UT User Source  * 
     C                     CALL 'QCLSCAN'              90  CLC Call Qclsca
     C                     PARM #1CHU1    WQ0019256        USR Qclscan fie
     C                     PARM 50        WQ0020  30       USR Qclscan Len
     C                     PARM 1         WQ0021  30       USR Qclscan Sta
     C                     PARM #CK1TX    WQ0022256        USR Qclscan Mas
     C                     PARM 10        WQ0023  30       USR Qclscan Mas
     C                     PARM '1'       WQ0024  1        USR Qclscan Tra
     C                     PARM '1'       WQ0025  1        USR Qclscan Tri
     C                     PARM *BLANK    WQ0026  1        USR Qclscan Wil
     C           WUY8NB    PARM WUY8NB    WQ0027  30       USR Qclscan Res
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'QCLSCAN' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     9835  *
     C                     END
      * CASE: WRK.USR Qclscan Result ? is Does contain
     C           WUY8NB    IFGT 0                          *IF
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * E13079 JJH 05/22/18 - Record Selection for Item Type Code
      * Sel Item Type Code
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * CASE: CTL.Item Type Code is Entered
     C           #CN0CD    IFNE *BLANK                     *IF
      * CASE: RCD.Item Type Code NE CTL.Item Type Code
     C           #RN0CD    IFNE #CN0CD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @BNRETL                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate DP Product and convert to internal.
      * CD7 Ext/Int
     C                     MOVELV2FWC7    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2FWC7    WUEOCD           CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC7  7
     C                     MOVEA*BLANKS   K7
     C                     Z-ADD7         C       30
     C                     Z-ADD7         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUEOCD    J7
     C                     MOVE *BLANKS   W0RTN
     C                     DO   7
     C           J7,C      IFNE ' '
     C                     MOVEAJ7,C      K7,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK7        JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC7    TEST7   1
     C           TEST7     IFGT '?'
     C           TEST7     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC7     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC7    WUEOCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ @CN,001                    *IF
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                     MOVEL'USR0802' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD0         #2FWC7           CD7 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUEOCD    #2FWC7           CD7 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZFWC7    CASNE#2FWC7    FBRQRL
     C           WZADSC    CASNE#2ADSC    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * CASE: CTL.*CMD key is *Create
     C           *IN06     IFEQ '1'                        *IF
      * Exc Crt from ItmDft   XF - DP Product  * 
     C                     CALL 'PBO1XFR'              90  Exc Crt from It
     C                     PARM *BLANK    W0RTN   7
     C           #2FWC7    PARM #2FWC7    WQ0028  70       DP Product
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBO1XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
      * CASE: CTL.DP Product is Zero
     C           #2FWC7    IFEQ *ZERO                      *IF
      * Send message 'Item Default not selected'
     C                     MOVEL'USR4758' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * CASE: CTL.*CMD key is CF10
     C           *IN10     IFEQ '1'                        *IF
      * Edt DP Product Attr   EF - DP Product Attributes  * 
     C                     CALL 'PBO3EFR'              90  Edt DP Product
     C                     PARM *BLANK    W0RTN   7
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBO3EFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * Sel Desc
      * CASE: CTL.Description 1 usr NE LCL.Description 1 usr
     C           #CTIT1    IFNE YL0001                     *IF
     C                     MOVEL#CTIT1    YL0001           Description 1 u
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * Sel Type
      * CASE: CTL.Text USR NE LCL.Text USR
     C           #CIUTX    IFNE YL0002                     *IF
     C                     MOVEL#CIUTX    YL0002           Text USR
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * Sel Class
      * CASE: CTL.Text 10A USR NE LCL.Text 10A USR
     C           #CK1TX    IFNE YL0003                     *IF
     C                     MOVEL#CK1TX    YL0003           Text 10A USR
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * E13079 JJH 05/22/18 - Record Selection for Item Type Code
      * Sel Item Type Code
      * CASE: CTL.Item Type Code is Entered
     C           #CN0CD    IFNE *BLANK                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPRCF
      * Exit if not confirmed
     C           *IN99     IFEQ '1'
     C                     SETOF                     99
     C                     GOTO DAEXIT
     C                     END
      * Process subfile (pass 2)
     C                     EXSR EAPRSF
      * If error during 2nd pass exit:
     C           *IN99     CABEQ'1'       DAEXIT
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,37
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * SFLNXTCHG
     C                     SETON                     84
      * USER: Process subfile record (Pre-confirm)
      * 2=Edit Product
      * CASE: RCD.*SFLSEL is *Edit
     C           #1SEL     IFEQ '2'                        *IF
     C           #1SEL     OREQ ' 2'
      * Edt DP Product        ER - DP Product  * 
     C                     CALL 'PBOUE1R'              90  Edt DP Product
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1FWC7    WQ0029  70       DP Product
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBOUE1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * 4=Delete product
      * CASE: RCD.*SFLSEL is *Delete
     C           #1SEL     IFEQ '4'                        *IF
     C           #1SEL     OREQ ' 4'
      * Val DP Prod Loc Ex-Prd RT - DP Product Location  * 
     C                     EXSR SBRVGN
      * CASE: PGM.*Return code is *Record already exists
     C           W0RTN     IFEQ @CN,002                    *IF
      * Setup message data for message
     C                     MOVEL#1SEL     ZA0001           *SFLSEL
      * Send message 'DP Prod cant be deleted'
     C                     MOVEL'USR4757' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     END                             *FI
      * 5=display product
      * CASE: RCD.*SFLSEL is *Display
     C           #1SEL     IFEQ '5'                        *IF
     C           #1SEL     OREQ ' 5'
      * Dsp DP Product        DR - DP Product  * 
     C                     CALL 'PBOVD1R'              90  Dsp DP Product
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1FWC7    WQ0030  70       DP Product
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBOVD1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * 8=Edit product location
      * CASE: RCD.*SFLSEL is Option 8
     C           #1SEL     IFEQ '8'                        *IF
     C           #1SEL     OREQ ' 8'
      * Edt DP Prod Location  EF - DP Product Location  * 
     C                     CALL 'PBNUEFR'              90  Edt DP Prod Loc
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1FWC7    WQ0031  70       DP Product
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBNUEFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         DHPRCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                     EXSR MOCV#2
      * Update screen time
     C                     TIME           ##TME
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#SFLCTL
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'CAVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         EAPRSF    BEGSR
      *================================================================
      * Update DBF from subfile
      *================================================================
     C           *IN81     IFEQ '1'
      * Process all modified subfile records
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      * Process modified subfile record
     C                     EXSR EBPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END                             WOD *92
     C                     END                             FI *81
      * If any errors, cancel reload
     C           *IN99     IFEQ '1'
     C                     MOVEL'N'       W0RSF   1
     C                     END
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         EBPRSR    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,37
     C                     SETOF                     98
      * USER: Process subfile record (Post-confirm)
      * CASE: RCD.*SFLSEL is *Delete
     C           #1SEL     IFEQ '4'                        *IF
     C           #1SEL     OREQ ' 4'
      * Del DP Product        DO - DP Product  * 
     C                     EXSR SCDLRC
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C                     SETON                     84    SFLNXTCHG
     C  N99                Z-ADD##RR      ##SFRC     99    *
     C                     GOTO EBEXIT
     C                     ELSE
      * SFLRCD valid
     C                     SETOF                     84    SFLNXTCHG
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @BNRETL fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     MOVELBNTAAA    #1TAAA           DP Profile
     C                     MOVELBNTBAA    #1TBAA           DP Scenario
     C                     Z-ADDBNZVNY    #1ZVNY           DP Sell Price
     C                     Z-ADDBNZWNY    #1ZWNY           DP Standard Cos
     C                     MOVELBNTCAA    #1TCAA           DP Base Unit of
     C                     MOVELBNCGU1    #1CGU1           DP Product Grou
     C                     MOVELBNCIU1    #1CIU1           DP Product Form
     C                     MOVELBNCJU1    #1CJU1           DP Product Bran
     C                     MOVELBNXTAA    #1XTAA           DP Sub Brand
     C                     Z-ADDBNAFNB    #1AFNB           DP Total Pieces
     C                     Z-ADDBNAGNB    #1AGNB           DP Unit Weight
     C                     MOVELBNS9AA    #1S9AA           DP System of Re
     C                     Z-ADDBNANDX    #1ANDX           DP Date Time St
     C                     Z-ADDBNFWC7    #1FWC7           DP Product
      * Clear external version also
     C                     MOVEL*BLANK    V1FWC7
     C                     MOVELBNUYNA    #1UYNA           DP Product Desc
     C                     MOVELBNCFU1    #1CFU1           DP Product Type
     C                     MOVELBNCHU1    #1CHU1           DP Product Clas
     C                     MOVELBNADSC    #1ADSC           DP Record Statu
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     MOVEL*BLANK    #RN0CD           Item Type Code
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     MOVEL*BLANK    #2UYNA           DP Product Desc
     C                     MOVEL*BLANK    #2CFU1           DP Product Type
     C                     MOVEL*BLANK    #2CHU1           DP Product Clas
     C                     Z-ADD*ZERO     #2FWC7           DP Product
      * Clear external version also
     C                     MOVEL*BLANK    V2FWC7
     C                     MOVEL*BLANK    #CTIT1           Description 1 u
     C                     MOVEL*BLANK    #CN0CD           Item Type Code
     C                     MOVEL*BLANK    #CIUTX           Text USR
     C                     MOVEL*BLANK    #CK1TX           Text 10A USR
     C                     MOVEL*BLANK    #2ADSC           DP Record Statu
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert DP Product to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1FWC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1FWC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1FWC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1FWC7           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert DP Product to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2FWC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2FWC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2FWC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2FWC7           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Item Type Code     RT - Item Default  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           BYHGCD           Item Code
      * Setup key
     C                     Z-ADD#1FWC7    BYHGCD           Item Code
      * Establish starting position
     C           KRSSA     CHAIN@BYREA1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1160' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #RN0CD           Item Type Code
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBYN0CD    #RN0CD           Item Type Code
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Val DP Prod Loc Ex-Prd RT - DP Product Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BPFWC7    WQSB01           DP Product
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           DP Product
      * Setup key
     C                     Z-ADD#1FWC7    WQSB01           DP Product
      * Establish starting position
     C           KRSSB     SETLL@BPRETM                    *
     C           KRSSB     READE@BPRETM                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR4732' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C           KRSSB     READE@BPRETM                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCDLRC    BEGSR
      *================================================================
      * Del DP Product        DO - DP Product  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @BNRESX
     C                     MOVEL#1TAAA    WATAAA           DP Profile
     C                     MOVEL#1TBAA    WATBAA           DP Scenario
     C                     Z-ADD#1FWC7    WAFWC7           DP Product
      *
     C           KLDLSC    KLIST
     C                     KFLD           WATAAA           DP Profile
     C                     KFLD           WATBAA           DP Scenario
     C                     KFLD           WAFWC7           DP Product
     C           KLDLSC    CHAIN@BNRESX              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PBBNREL0'MDACP
     C                     MOVEL'@BNRESX' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SCEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@BNRESX                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0001    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSD     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    P1I6ST           Allow Multi-Com
     C                     MOVELDRMPNA    P1MPNA           Default Printer
     C                     MOVELDRBCCD    P1BCCD           Salesperson Cod
     C                     Z-ADDDRAIC3    YL0004           Company Number
     C                     MOVELDRBUVN    WN0002           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - User Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0001    DTAJVN           User Profile Na
     C                     MOVELWL0002    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSE     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0003           Company Number
     C                     MOVELDTAJCD    WL0004           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSF01           Application Cod
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSF01           Application Cod
     C                     MOVEL'OMS'     WQSF01           Application Cod
      * Establish starting position
     C           KRSSF     SETLL@DNRESF                    *
     C           KRSSF     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SGRVGN
     C                     END                             *FI
     C           KRSSF     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSG01           Application Cod
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSG01           Application Cod
      * Establish starting position
     C           KRSSG     SETLL@DNRESF                    *
     C           KRSSG     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSG     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD9         ZHSTRW  40
     C                     Z-ADD21        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              9292  *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1AJCD           Warehouse Code
     C                     Z-ADD*ZERO     P1AIC3           Company Number
     C                     MOVEL*BLANK    P1DNCD           Application Cod
     C                     MOVEL*BLANK    P1BCCD           Salesperson Cod
     C                     MOVEL*BLANK    P1B8NA           System Date For
     C                     MOVEL*BLANK    P1AJVN           User Profile Na
     C                     MOVEL*BLANK    P1I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P1MPNA           Default Printer
     C                     MOVEL*BLANK    P1TAST           First Time Flag
     C                     MOVEL*BLANK    P1BXTX           System Value Al
     C                     MOVEL*BLANK    P1WVST           Access Denied (
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      * Define work field USR Qclscan Result ?
     C                     Z-ADD*ZERO     WUY8NB  30
      * Define work field USR First Position
     C                     MOVEL*BLANK    WUI3ST  1
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAFWC7           DP Product
     C                     Z-ADD*ZERO     WAZVNY           DP Sell Price
     C                     Z-ADD*ZERO     WAZWNY           DP Standard Cos
     C                     Z-ADD*ZERO     WAAFNB           DP Total Pieces
     C                     Z-ADD*ZERO     WAAGNB           DP Unit Weight
     C                     Z-ADD*ZERO     WAANDX           DP Date Time St
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SERVGN.
     C                     MOVEL*BLANK    WL0001 10
     C                     MOVEL*BLANK    WL0002  6
     C                     Z-ADD*ZERO     WL0003  30
     C                     MOVEL*BLANK    WL0004  3
      * Define local work field Description 1 usr
     C                     MOVEL*BLANK    YL0001 30
      * Define local work field Text USR
     C                     MOVEL*BLANK    YL0002 10
      * Define local work field Text 10A USR
     C                     MOVEL*BLANK    YL0003 10
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0004  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0005  3
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD13        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      *
     C                     MOVEL*BLANK    WN0001 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0001           User Profile Na
      *
     C                     MOVEL*BLANK    WN0002 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SDRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,003                    *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0002           User Profile Na
     C                     MOVEL'OMS'     ZA0003           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0002    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0001    WL0001    P      User Profile Na
     C                     MOVEL'OMS'     WL0002    P      Application Cod
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    P1AIC3           Company Number
     C                     MOVELWL0004    YL0005    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0002    WL0001    P      User Profile Na
     C                     MOVEL'OMS'     WL0002    P      Application Cod
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    P1AIC3           Company Number
     C                     MOVELWL0004    YL0005    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0005    P1AJCD           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0004           User Profile Na
     C                     MOVEL'OMS'     ZA0005           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0004    IFNE 0                          *IF
     C                     Z-ADDYL0004    P1AIC3           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0005    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C           P1AJCD    PARM *BLANK    WQ0032  3        Warehouse Code
     C                     PARM YL0004    WQ0033  30       Shipping Compan
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SFRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     Z-ADD9999999   W0SLM            *Scan limit
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 USR0752
00002 Y2U0003
00003 Y2U0005
