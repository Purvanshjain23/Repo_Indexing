      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP253 - COPY KILL DATA TO HOG PRODUCTION SYSTEM
      *                      FROM HOG PROCUREMENT AND EVALUATION SYSTEM
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     09/07/95
      *
      * FUNCTION: THIS PROGRAM READS THE KILL DATA IN THE HOG PROCURE-
      *           MENT AND EVALUATION SYSTEM AND DUPLICATES THE DATA
      *           INTO THE HOG PRODUCTION SYSTEM.
      *
      *           ALL THE DATA IS EDITED AND A LISTING IS GENERATED IN
      *           HP252. HP252 CALLS THIS PROGRAM IF:
      *               1) THERE ARE NO ERRORS.
      *               2) USER HAS SELECTED 'FINAL'
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 01/08/96  LEANNE FEDOR
      *           REMOVED LOGIC THAT MAPPED 'GRADE' FROM HPES TO HPS.
      *           THE HOG PROCUREMENT AND EVALUATION SYSTEM DOES NOT
      *           HAVE A PREMIUM/DISCOUNT CALLED 'GRADE'
      *
      * 01/17/96  ALICE BROWNFIELD
      *           PUT BACK LOGIC THAT MAPPED 'GRADE' FROM HPES TO HPS.
      *           THE HOG PROCUREMENT AND EVALUATION SYSTEM HAS
      *           LEAN PREMIUM/DEDUCT AND HPS CALLS IT 'GRADE'
      *
      * 01/17/96  ALICE BROWNFIELD
      *           ADDED CODE TO WRITE OUT A CHECK HEADER FOR THE
      *           LAST RECORD.
      *
      * 01/26/96  LEANNE FEDOR
      *           PROGRAM LOGIC WAS NOT DESIGNED TO PROCESS 'HOLDOVERS'
      *           CORRECTLY--WE WERE GETTING DUPLICATE CHECK HEADER
      *           RECORDS AND RECORDS WITH DUPLICATE LINE NUMBERS IN
      *           BOTH THE CHECK DETAIL AND CHECK ADJUSTMENT FILES.
      *
      *           ALSO, JUST FOR INFORMATION, THE
      *           CHECK NUMBER IN HPS EQUATES TO THE HPES FIELD CALLED
      *           'AP VOUCHER/DOCUMENT#'. THE HPS CHECK NUMBER FIELD IS
      *           7,0 WHILE THE HPES VOUCHER FIELD IS 8,0.  I SUPPOSE
      *           THIS COULD CAUSE PROBLEMS IF THE HPES SYSTEM EVER
      *           USES MORE THAN 7 DIGITS OF THEIR POSSIBLE 8.
      *
      * 02/06/96  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELD 'BOL PRINTED COUNT' ADDED
      *           TO SALES MOVEMENT HEADER FILE.
      *
      * 03/08/96  LEANNE FEDOR
      *           RECOMPILE ONLY. THE FIELD 'CHECK AMOUNT' IN THE
      *           HPS CHECK HEADER FILE WAS INCREASED FROM 7,2 TO 9,2.
      *
      * 03/14/96  LEANNE FEDOR
      *           ADDED LOGIC TO ONLY WRITE PREMIUM/DISCOUNTS AND
      *           PERFORMANCE DATA WHEN THE PAYMENT TYPE IS 'CARCASS'.
      *           AND, FOR 'LIVE' PAYMENTS, SET THE 'BASE AMOUNT'
      *           EQUAL TO THE 'GROSS' AMOUNT.
      *
      * 04/02/96  LEANNE FEDOR
      *           THE USERS REQUESTED THAT WE OVERLAY THE VALUES THEY
      *           HAVE KEYED FOR SHIPPED POUNDS WITH THE VALUES FROM
      *           THE CHECK INFO. SO, WE SUM LIVE AND DOA POUNDS AND
      *           OVERLAY SHIPPED POUNDS.
      *
      * 06/26/96  LEANNE FEDOR
      *           CHANGED IN PRODUCTION. SINCE THE USERS WERE HAVING
      *           TO MODIFY ALMOST ALL CHECKS BROUGHT OVER FROM HPES,
      *           WE CHANGED THE CODE TO FLAG ALL CHECKS AS 'MANUAL'
      *           INSTEAD OF 'AUTOMATED'. THIS WILL ALLOW THE HPS
      *           USERS TO CHANGE THE CHECK DATA IN HPS WITHOUT HAVING
      *           TO CALL I.S. IN KANSAS CITY AND HAVE THE CHECK DBU'D
      *           TO BE 'MANUAL'.
      *
      * 07/03/96  LEANNE FEDOR
      *           MARGIE ALLEN REQUESTED THAT, FOR HOLDOVERS, NO
      *           RECORDS WILL BE COPIED TO HPS FROM HPES UNTIL ALL THE
      *           HOLDOVERS ARE COMPLETED. SO, I ADDED LOGIC TO
      *           PREVENT PROCESSING OF RECORDS THAT HAVE HOLDOVER
      *           HEAD BUT NO HOLDOVER COMPLETED DATE.
      *
      * 11/15/96  LEANNE FEDOR
      *           RECOMPILE ONLY. HPE TATTOO DEDUCTION/ADD-ON FILE
      *           IN HOG PROCUREMENT AND EVALUATION SYSTEM WAS CHANGED.
      *
      * 12/19/97  LEANNE FEDOR
      *           AS REQUESTED BY BLAKE DAY, YARD DEAD AND CONDEMNED HOGS
      *           SHOULD NOW BE REPORTED AS 'DOA' INSTEAD OF 'LIVE'. SO,
      *               A) ADD YARD DEAD AND CONDEMNED HEAD AND POUNDS INTO
      *                  THE HPS 'DOA' VALUES
      *               B) SUBTRACT YARD DEAD AND CONDEMNED HEAD AND
      *                  POUNDS OUT OF THE HPS 'LIVE' VALUES
      *
      * 02/04/98  LeAnne Fedor
      *           Recompile only. Select changed on SYNON tattoo header
      *           file.
      *
      * 03/02/98  LeAnne Fedor
      *           Added the following fields to the HPS database for
      *           sales movement detail and check detail:
      *                     condemned head and pounds
      *                     yard dead head and pounds
      *
      *           We returned the interface logic to what it was before
      *           Blake Day's requested change on 12/19/97--the yard dead
      *           and condemned head and pounds will once again be included
      *           in the 'live' head and pounds.  We added new logic to store
      *           condemned/yard dead head and pounds in the new database
      *           fields.
      *
      * 01/11/99  LeAnne Fedor
      *           Recompile only. New field 'scheduled kill date' added
      *           to sales movement header file.
      *
      * 11/03/99  LeAnne Fedor
      *           Recompile only. Changes were made to the tattoo
      *           header file.
      *
      * 12/08/99  LeAnne Fedor
      *           While doing analysis for 'splitting' checks, I found that
      *           condemned and yard dead values were not getting updated
      *           in the Sales Movement Detail file. These fields are never
      *           used in any HPS functions, but I added the code to populate
      *           them anyway.
      *
      * 12/14/99  LeAnne Fedor
      *           Logic was added in HP252 to split HPE records into multiple groups.
      *           So, I changed this program to read the new 'split' workfiles
      *           instead of the HPE files.
      *
      * 10/17/00  LeAnne Fedor
      *           Recompile only. New field 'load type' added to the sales
      *           movement head file.
      *
      * 05/27/04  LeAnne Fedor
      *           Cosmetic changes only.
      *
      * 12/15/17  Brad Baden    E010812
      *           Change main file, add new file, and delete workfile
      *           records as they are processed.
      *           1. Replace file PKA1CPL4 with file PKA1CPQ2. File
      *              PKA1CPQ2 only contains records ready to process.
      *           2. Add workfile HSL3101A.  This file is the Kill Data
      *              to HPS for Business Office.
      *           3. At EOF, read the HSL3101A records to update the
      *              PKA1CPQ2 record, setting the record as being processed.
      *           4. After updating PKA1CPQ2 record, delete the current
      *              HSL3101 record being processed.
      *
      *  2/12/18  Brad Baden    E010812
      *           After UAT, it was decided that there will be 1 check per
      *           day per customer.  The check number will be the kill date
      *           in the CYYMMDD format.
      *
      *  3/07/18  Brad Baden    E010812
      *           For Company 440, update the Shipped Head and Shipped
      *           pounds equal to the equivalent check values.
      *
      * 11/02/20  ISE           H16853
      *           Recompile only. Increased Buy Order Number field length
      *           from 5 to 7.
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     F*PKA1CPL4  UF   E           K DISK
      *  TATTOO HEADER FROM HPES
      *  (RECORDS SELECTED BY OPEN QUERY)
      *
      *
     FPKA1CPQ2  UF   E           K DISK
      *  TATTOO HEADER FROM HPE
      *  (RECORDS SELECTED BY OPEN QUERY)
      *
      *
     FHSP063    UF A E           K DISK
      *    CHECK HEADER
      *
      *
     FHSP064    UF A E           K DISK
      *    CHECK DETAIL
      *
      *
     FHSL064B   IF   E           K DISK    rename(cdrec:cdrecb)
      *    CHECK DETAIL
      *
      *
     FHSL065D   UF A E           K DISK
      *    CHECK ADJUSTMENTS
      *
      *
     FHSP084    UF   E           K DISK
      *  SALES MOVEMENT HEADER
      *
      *
     FHSP085    UF   E           K DISK
      *  SALES MOVEMENT DETAIL
      *
      *
     FHSP311    IF   E           K DISK
      *    Workfile: Movement Detail
      *
      *
     FHSP313    IF   E           K DISK
      *    Workfile: Deduction/Add-ons
      *
     FHSL3101A  UF   E           K DISK
      *  WORKFILE: KILL DATA TO HPS
      *
      *
      /EJECT
      *---------------------------------------------------------------
      * MOVEMENT NUMBER ARRAY
      *---------------------------------------------------------------
      *
     D MOV             S              7  0 DIM(999)                             MOVEMENT
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * DATA STRUCTURE FOR MATCHING DATE FORMATS BETWEEN THE
      * HOG PRODUCTION SYSTEM AND THE HOG PROCUREMENT AND EVALUATION
      * SYSTEM
      *---------------------------------------------------------------
      *
      * DATES IN THE HOG PRODUCTION SYSTEM ARE STORED AS CCYYMMDD.
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      * HOG PROCUREMENT AND EVALUATION DATES ARE STORED AS CYYMMDD.
      *
     D                 DS
     D  WK0YMD                 1      7  0
     D  WKCC                   1      1  0
     D  WKYY                   2      3  0
     D  WKMM                   4      5  0
     D  WKDD                   6      7  0
      *
      *---------------------------------------------------------------
      * Stand Alone Fields
      *---------------------------------------------------------------
      *
     D wkkldt          s                   like(a1b0dt)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
      * Process each movement detail workfile record.
      *
     C     *LOVAL        SETLL     HSP311
      *
     C     *IN90         DOUEQ     *ON                                          MAIN DO
     C                   READ      HSP311                                 90
     C     *IN90         IFEQ      *OFF                                         IF NOT EOF
      *
      * RETRIEVE THE SALES HEADER RECORD FOR THIS MOVEMENT.
      *
     C     WDOXNB        CHAIN     HSP084                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     SHCVNO        WKCVNO
     C                   MOVEL     SHSTCD        WKSTCD
     C                   ELSE
     C                   Z-ADD     0             WKCVNO
     C                   MOVE      *BLANK        WKSTCD
     C                   ENDIF
      *
     C     FIRST         IFEQ      YES
     C                   EXSR      $BREAK
     C                   MOVEL     NO            FIRST
     C                   ENDIF
      *
      * IF CHECK NUMBER, CUSTOMER OR CHECK DATE CHANGES,
      *   1)  WRITE/UPDATE CHECK HEADER RECORD
      *   2)  RESET THE PROCESSING CONTROL FIELDS AND COUNTERS
      *
     C     WDLPNB        IFNE      SVCHNO
     C     WKCVNO        ORNE      SVCVNO
     C     WDBYDT        ORNE      SVBYDT
     C                   EXSR      $CHECK
     C                   EXSR      $BREAK
     C                   ENDIF
      *
      * WRITE A CHECK DETAIL RECORD
      *
     C                   EXSR      $CHDTL
      *
      * WRITE PREMIUM/DISCOUNT RECORDS ASSOCIATED WITH THIS
      * CHECK DETAIL RECORD IF IT IS A PAYMENT TYPE OF 'CARCASS MERIT'
      *
     C     CDTPCD        IFEQ      'C'
     C                   EXSR      $PREM
     C                   ENDIF
      *
      * WRITE DEDUCTION/ADD-ON RECORDS ASSOCIATED WITH THIS
      * CHECK DETAIL RECORD.
      *
     C                   EXSR      $DEDAD
      *
      * UPDATE THE CORRESPONDING SALES MOVEMENT DETAIL RECORD FOR
      * THIS MOVEMENT AND GROUP
      *
     C                   EXSR      $SGDTL
      *
      *
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  MAIN DO
      *
      *----------------------------------------------------------------
      * EOF PROCESSING
      *----------------------------------------------------------------
      *
      * IF ANY RECORDS WERE PROCESSED IN THIS RUN
      *   1) WRITE/UPDATE THE LAST CHECK HEADER RECORD
      *   2) UPDATE THE STATUS OF THE SALES MOVEMENTS PROCESSED
      *      IN THIS RUN OF THE COPY
      *   3) UPDATE THE HPS STATUS OF THE TATTOO HEADER RECORDS
      *      TO 'Y'.
      *
     C     FIRST         IFEQ      NO
     C                   EXSR      $CHECK
     C                   EXSR      $STAT
     C                   exsr      $hpssts
     C                   ENDIF
      *
      *
      * READ EACH RECORD FROM THE 'TATTOO HEADER' FILE IN THE
      * HOG PROCUREMENT AND EVALUATION SYSTEM AND UPDATE THE 'POSTED TO HPS'
      * FLAG TO YES.
      * NOTE: This section commented out because it is now done in subroutine
      *       $HPSSTS.  It will read the HSL3101 file to update Tattoo Header.
      *
     C*    *LOVAL        SETLL     PKA1CPL4
      *
     C*    *IN91         DOUEQ     *ON                                          DO CLEAN-UP
     C*                  READ      PKA1CPL4                               91
     C*    *IN91         IFEQ      *OFF                                         IF NOT EOF
     C*                  MOVEL     YES           A1J8ST
     C*                  UPDATE    @A1CPRN
     C*                  ENDIF                                                  IF NOT EOF
     C*                  ENDDO                                                  DO CLEAN-UP
      *
      *
     C                   SETON                                        LR
      /EJECT
      *----------------------------------------------------------------
      * SET UP THE SAVE FIELDS TO CONTROL THE PROCESSING BREAK
      *----------------------------------------------------------------
      *
     C     $BREAK        BEGSR
      *
      * SAVE CUSTOMER, CHECK, AND CHECK DATE IN CYYMMDD FORMAT
      * Check date is already in ccyymmdd format from HSP3101
      *
     C                   Z-ADD     WKCVNO        SVCVNO
     C                   Z-ADD     WDLPNB        SVCHNO
     C                   Z-ADD     WDBYDT        SVBYDT
      *
      * FLIP CHECK DATE TO CCYYMMDD FORMAT
      * Check date is already in ccyymmdd format from HSP3101, so no
      * need to convert it.  Just move check date into SVCHDT.
      *
     C*                  Z-ADD     WDBYDT        WK0YMD
     C*                  EXSR      $CCYMD
     C*                  Z-ADD     WKCYMD        SVCHDT
      *
     C                   Z-ADD     WDBYDT        SVCHDT
      *
      * SAVE THE SALES TYPE
      *
     C                   MOVEL     WKSTCD        SVSTCD
      *
      * INITIALIZE THE FLAG FIELDS FOR PAY TYPE
      *
     C                   MOVE      *BLANK        PAYLFL
     C                   MOVE      *BLANK        PAYCFL
      *
      * CHECK TO SEE IF WE ALREADY HAVE A CHECK HEADER. A CHECK
      * HEADER WILL ALREADY EXIST IF THIS IS A HOLDOVER AND
      * THE NON-HOLDOVERS WERE COPIED PREVIOUSLY.
      *
      * IF A CHECK HEADER ALREADY EXISTS:
      *   1) MOVE THE 'CHECK AMOUNT' TO THE ACCUMULATOR
      *      WORK FIELD.
      *
      *   2) FIND THE LAST LINE NUMBER USED FOR THIS CHECK IN THE
      *      CHECK DETAIL FILE AND MOVE IT TO THE LINE NUMBER
      *      WORKFIELD
      *
     C     key04         CHAIN(N)  HSP063                             92
     C     *IN92         IFEQ      *ON                                          IF NO HEADER
     C                   Z-ADD     0             WKCHAM
     C                   Z-ADD     0             WKLNNO
     C                   ELSE
      *
     C                   Z-ADD     CHCHAM        WKCHAM
      *
     C     key04         SETLL     HSP064
     C     *IN92         DOUEQ     *ON                                          DO CHK DTL
     C     key04         READE(N)  HSP064                                 92
     C     *IN92         IFEQ      *OFF                                         IF HIT
     C                   Z-ADD     CDLNNO        WKLNNO
     C                   ENDIF                                                  IF HIT
     C                   ENDDO                                                  DO CHK DTL
      *
     C                   ENDIF                                                  IF NO HEADER
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * WRITE A CHECK HEADER RECORD
      *---------------------------------------------------------------
      *
     C     $CHECK        BEGSR
      *
      * DETERMINE IF THIS CHECK IS 'LIVE' PAYMENTS, 'CARCASS'
      * PAYMENTS OR MIXED (BOTH LIVE AND CARCASS).
      *
     C                   MOVE      *BLANK        WKTPCD
      *
     C                   SELECT
     C     PAYLFL        WHENEQ    YES
     C     PAYCFL        ANDEQ     YES
     C                   MOVEL     'M'           WKTPCD
      *
     C     PAYLFL        WHENEQ    YES
     C                   MOVEL     'L'           WKTPCD
      *
     C     PAYCFL        WHENEQ    YES
     C                   MOVEL     'C'           WKTPCD
     C                   ENDSL
      *
      * RETRIEVE THE CHECK HEADER
      *
     C     key04         CHAIN     HSP063                             92
     C     *IN92         IFEQ      *OFF                                         IF HDR EXIST
     C                   Z-ADD     WKCHAM        CHCHAM
     C                   MOVEL     'M'           CHDSCD
      *
     C     WKTPCD        IFNE      CHTPCD
     C                   MOVEL     'M'           CHTPCD
     C                   ENDIF
      *
     C                   UPDATE    CHREC
     C                   ELSE
      *
     C                   Z-ADD     SVCVNO        CHCVNO
     C                   Z-ADD     SVCHNO        CHCHNO
     C                   Z-ADD     SVCHDT        CHCHDT
     C                   MOVEL     SVSTCD        CHSTCD
     C                   Z-ADD     WKCHAM        CHCHAM
     C                   MOVEL     WKTPCD        CHTPCD
     C                   MOVEL     'M'           CHDSCD
     C                   WRITE     CHREC
     C                   ENDIF                                                  IF HDR EXIST
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * WRITE A CHECK DETAIL RECORD
      *---------------------------------------------------------------
      *
     C     $CHDTL        BEGSR
      *
      * CHECK DATE
      * CHECK NUMBER
      * CUSTOMER NUMBER
     C                   Z-ADD     SVCHDT        CDCHDT
     C                   Z-ADD     SVCHNO        CDCHNO
     C                   Z-ADD     SVCVNO        CDCVNO
      *
      * ACCUMULATE CHECK AMOUNT FOR THE CHECK HEADER RECORD
      *
     C                   ADD       WDCCPR        WKCHAM
      *
      * MOVEMENT NUMBER
     C                   Z-ADD     WDOXNB        CDMVSN
      *
      * System assigned hog group number
      *
     C                   Z-ADD     WDHGSN        CDHGSN
      *
      * INCREMENT THE LINE COUNTER
      *
     C                   ADD       1             WKLNNO
     C                   Z-ADD     WKLNNO        CDLNNO
      * TYPE OF PAYMENT
     C                   MOVEL     WDJ9ST        CDTPCD
      *
     C                   SELECT
     C     CDTPCD        WHENEQ    'L'
     C                   MOVEL     YES           PAYLFL
     C     CDTPCD        WHENEQ    'C'
     C                   MOVEL     YES           PAYCFL
     C                   ENDSL
      *
      * FLIP KILL DATE TO CCYYMMDD FORMAT AND USE FOR
      * BOTH KILL DATE AND SALES ACCRUAL DATE FIELDS.
      *
     C                   Z-ADD     WDB0DT        WK0YMD
     C                   EXSR      $CCYMD
     C                   Z-ADD     WKCYMD        CDKLDT
     C                   Z-ADD     WKCYMD        CDSADT
      *
      * Live head and pounds
     C                   z-add     wdcwnb        cdlvhd
     C                   z-add     wdcynb        cdlvlb
      *
      * DOA head
      * DOA pounds = DOA head * average live pounds
      *
     C                   z-add     wdcxnb        cddohd
     C                   eval(h)   cddolb = WDcxnb * WDf7nb
      *
      * Condemned head
      * Condemned pounds = condemned head * average live pounds
      *
     C                   z-add     WDfdnb        cdcdhd
     C                   eval(h)   cdcdlb = WDfdnb * WDf7nb
      *
      *
      * Yard dead head
      * Yard dead pounds = yard dead head * average live pounds
      *
     C                   z-add     WDfcnb        cdydhd
     C                   eval(h)   cdydlb = WDfcnb * WDf7nb
      *
      *
      * GROSS AMOUNT
     C                   Z-ADD     WDCBPR        CDGRAM
      * TATTOO NUMBER
     C                   Z-ADD     WDCVNB        CDTANO
      * CLASS CODE
     C                   MOVEL     WDBECD        CDCLCD
      * DEFECT CODE
     C                   MOVEL     WDBDCD        CDDFCD
      *
      * THE FOLLOWING FIELDS ARE POPULATED DIFFERENTLY FOR
      * 'CARCASS MERIT' PAYMENTS AND 'LIVE' PAYMENTS
      *
      *      CARCASS POUNDS
      *      BACKFAT AVERAGE
      *      AVERAGE LEAN PERCENT
      *      AVERAGE LOIN EYE
      *      BASE AMOUNT
      *
     C     CDTPCD        IFEQ      'C'                                          IF CARCASS
     C                   Z-ADD     WDE0NB        CDCRLB
     C                   Z-ADD     WDF2NB        CDBFAM
     C                   Z-ADD     WDF4NB        CDLNPR
     C                   Z-ADD     WDF3NB        CDLEAM
     C                   Z-ADD     WDANPR        CDBAAM
     C                   ELSE
      *
      * FOR 'LIVE' PAYMENT TYPE RECORDS, SET THE PERFORMANCE
      * FIELDS TO ZERO.  AND, SET THE 'BASE AMOUNT' EQUAL TO
      * THE GROSS AMOUNT.
     C                   Z-ADD     0             CDCRLB
     C                   Z-ADD     0             CDBFAM
     C                   Z-ADD     0             CDLNPR
     C                   Z-ADD     0             CDLEAM
     C                   Z-ADD     WDCBPR        CDBAAM
     C                   ENDIF                                                  IF CARCASS
      *
     C                   WRITE     CDREC
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * WRITE PREMIUM/DISCOUNT RECORDS FOR CHECK DETAIL LINE
      *---------------------------------------------------------------
      *
     C     $PREM         BEGSR
      *
     C                   MOVEL     'P'           CJCJFL
     C                   Z-ADD     CDCHDT        CJCHDT
     C                   Z-ADD     CDCHNO        CJCHNO
     C                   Z-ADD     CDCVNO        CJCVNO
     C                   Z-ADD     CDLNNO        CJLNNO
      *
      * SORT LOSS
     C     WDAYVA        IFNE      0
     C                   MOVEL     'SORT '       CJCJCD
     C                   Z-ADD     WDAYVA        CJCJAM
     C                   WRITE     CJREC
     C                   ENDIF
      *
      * YIELD
     C     WDAWVA        IFNE      0
     C                   MOVEL     'YIELD'       CJCJCD
     C                   Z-ADD     WDAWVA        CJCJAM
     C                   WRITE     CJREC
     C                   ENDIF
      *
      * 'LEAN PREMIUM/DEDUCT' IN THE 'HOG PROCUREMENT AND EVALUATION
      * SYSTEM' IS CALLED 'GRADE' IN THE 'HOG PRODUCTION SYSTEM'
      *
     C     WDAXVA        IFNE      0
     C                   MOVEL     'GRADE'       CJCJCD
     C                   Z-ADD     WDAXVA        CJCJAM
     C                   WRITE     CJREC
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * WRITE DEDUCTION/ADD-ON RECORDS FOR CHECK DETAIL LINE
      *---------------------------------------------------------------
      *
     C     $DEDAD        BEGSR
      *
     C     key02         SETLL     hsp313
      *
     C     *IN92         DOUEQ     *ON                                          DO HPES DED
     C     key02         READE     hsp313                                 92
     C     *IN92         IFEQ      *OFF                                         IF NOT EOF
     C                   MOVEL     WKCJFL        CJCJFL
     C                   Z-ADD     CDCHDT        CJCHDT
     C                   Z-ADD     CDCHNO        CJCHNO
     C                   Z-ADD     CDCVNO        CJCVNO
     C                   Z-ADD     CDLNNO        CJLNNO
      *
      * The following 2 fields are from the workfile:
      *    1) deduction/add-on code
      *    2) amount
      *
     C                   MOVEL     WABQCD        CJCJCD
     C                   Z-ADD     WAA0VA        CJCJAM
      *
     C                   WRITE     CJREC
      *
      * ALSO WRITE/UPDATE A LINE '0' RECORD FOR THIS DEDUCTION/ADD-ON
      * CODE.
      *
     C     key03         CHAIN     HSL065D                            91
     C     *IN91         IFEQ      *OFF
     C                   ADD       WAA0VA        CJCJAM
     C                   UPDATE    CJREC
     C                   ELSE
     C                   Z-ADD     CDCHDT        CJCHDT
     C                   Z-ADD     CDCHNO        CJCHNO
     C                   Z-ADD     CDCVNO        CJCVNO
     C                   MOVEL     'D'           CJCJFL
     C                   Z-ADD     0             CJLNNO
     C                   MOVEL     WABQCD        CJCJCD
     C                   Z-ADD     WAA0VA        CJCJAM
     C                   WRITE     CJREC
     C                   ENDIF
      *
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO HPES DED
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * UPDATE THE SALES MOVEMENT DETAIL RECORDS
      *---------------------------------------------------------------
      *
     C     $SGDTL        BEGSR
      *
     C     key01         CHAIN     HSP085                             92
     C     *IN92         IFEQ      *OFF
     C                   ADD       CDLVHD        SGLVHD
     C                   ADD       CDLVLB        SGLVLB
     C                   ADD       CDDOHD        SGDOHD
     C                   ADD       CDDOLB        SGDOLB
     C     SGLVLB        ADD       SGDOLB        SGSHLB
     C                   ADD       CDYDHD        SGYDHD
     C                   ADD       CDYDLB        SGYDLB
     C                   ADD       CDCDHD        SGCDHD
     C                   ADD       CDCDLB        SGCDLB
      *
      * If Company is 440, update the shipped head and pounds from check
     C                   if        wdhmnb = 440
     C                   eval      sgshhd = sglvhd + sgdohd
     C                   eval      sgshlb = sglvlb + sgdolb
     C                   endif
      *
     C                   UPDATE    SGREC
     C                   ENDIF
      *
      * SAVE THE MOVEMENT FOR LATER UPDATING OF THE SALES
      * MOVEMENT HEADER RECORD.
      * LOOK UP MOVEMENT IN ARRAY. IF NOT FOUND, MOVE
      * THE MOVEMENT NUMBER TO THE NEXT ELEMENT IN ARRAY.
      *
     C                   Z-ADD     1             X
     C     CDMVSN        LOOKUP    MOV(X)                                 98
     C     *IN98         IFEQ      *OFF
     C                   ADD       1             Y
     C                   Z-ADD     CDMVSN        MOV(Y)
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * UPDATE THE SALES MOVEMENT STATUS
      *----------------------------------------------------------------
      *
      * FOR EACH MOVEMENT THAT YOU HAVE PROCESSED, YOU MUST
      * REEVALUATE THE STATUS OF THE SALES MOVEMENT AND UPDATE IT.
      * ALSO, YOU MUST DETERMINE IF THIS MOVEMENT WAS PAID 'LIVE',
      * 'CARCASS', OR MIX OF LIVE AND CARCASS.
      *
      * SO, FOR EACH MOVEMENT IN THE ARRAY, RETRIEVE ALL THE SALES
      * DETAIL LINES FOR THE MOVEMENT.  SUM THE 'LIVE AND DOA' HEAD
      * INTO A FIELD FOR 'ARRIVED' HEAD. SUM THE SHIPPED HEAD. THEN,
      * RESET THE STATUS BASED ON THE COMPARISON OF THE 'SHIPPED'
      * AND 'ARRIVED' HEAD.
      *
     C     $STAT         BEGSR
      *
     C     Y             IFNE      0                                            IF ELEMENTS
     C                   DO        Y             X                              DO ALL ENTRY
     C     MOV(X)        IFNE      0                                            IF ENTRY
      *
     C                   Z-ADD     0             WKSHHD
     C                   Z-ADD     0             WKARHD
      *
      * COUNT SHIPPED AND ARRIVED HEAD FOR THIS MOVEMENT
      *
     C     MOV(X)        SETLL     HSP085
     C                   SETOFF                                       92
      *
     C     *IN92         DOUEQ     *ON                                          DO HEAD
     C     MOV(X)        READE(N)  HSP085                                 92
     C     *IN92         IFEQ      *OFF
     C                   ADD       SGSHHD        WKSHHD
     C                   ADD       SGLVHD        WKARHD
     C                   ADD       SGDOHD        WKARHD
     C                   ENDIF
     C                   ENDDO                                                  DO HEAD
      *
      * EVALUATE TYPE OF PAYMENT FOR THIS MOVEMENT BY READING
      * ALL CHECK DETAIL RECORDS FOR THE MOVEMENT.
      *
     C     MOV(X)        SETLL     HSL064B
     C                   SETOFF                                       92
     C                   MOVE      *BLANK        PAYLFL
     C                   MOVE      *BLANK        PAYCFL
      *
     C     *IN92         DOUEQ     *ON                                          DO PAY TYPE
     C     MOV(X)        READE     HSL064B                                92
     C     *IN92         IFEQ      *OFF
      *
     C                   SELECT
     C     CDTPCD        WHENEQ    'L'
     C                   MOVEL     YES           PAYLFL
     C     CDTPCD        WHENEQ    'C'
     C                   MOVEL     YES           PAYCFL
     C                   ENDSL
      *
     C                   ENDIF
     C                   ENDDO                                                  DO PAY TYPE
      *
      * RETRIEVE SALES MOVEMENT HEADER FOR UPDATE
      *
     C     MOV(X)        CHAIN     HSP084                             92
     C     *IN92         IFEQ      *OFF                                         IF FOUND
      *
      * SET UP MOVEMENT STATUS
      *
      * Note: Program HP261 has already set the Movement Status to 'SH'.
      *       We will still let this code change the Movement Status and
      *       update HSP084.   E010812 1/26/18 JBB
      *
      *
     C                   SELECT
     C     SHMSCD        WHENEQ    'PP'
      *
     C     WKARHD        WHENEQ    0
     C                   MOVEL     'SH'          SHMSCD
      *
     C     WKARHD        WHENGE    WKSHHD
     C                   MOVEL     'FP'          SHMSCD
     C                   OTHER
      *
     C                   MOVEL     'NC'          SHMSCD
     C                   ENDSL
      *
      * SET UP MOVEMENT TYPE OF PAYMENT
      *
     C                   SELECT
     C     PAYLFL        WHENEQ    YES
     C     PAYCFL        ANDEQ     YES
     C                   MOVEL     'M'           SHTPCD
      *
     C     PAYLFL        WHENEQ    YES
     C                   MOVEL     'L'           SHTPCD
      *
     C     PAYCFL        WHENEQ    YES
     C                   MOVEL     'C'           SHTPCD
     C                   OTHER
      *
     C                   MOVE      *BLANK        SHTPCD
     C                   ENDSL
      *
     C                   UPDATE    SHREC
      *
     C                   ENDIF                                                  IF FOUND
      *
     C                   ENDIF                                                  IF ENTRY
     C                   ENDDO                                                  DO ALL ENTRY
     C                   ENDIF                                                  IF ELEMENTS
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * Update the Tattoo Header HPS flag to processed
      *----------------------------------------------------------------
      *
      * Read the HSL3101 workfile to update the Tatto Header records,
      * setting the HPS Processed flag to 'Y'.
      *
     C     $hpssts       begsr
      *
     C     *loval        setll     hsl3101a
     C                   if        %found(hsl3101a)                             if %found(hsl3101a)
     C                   dou       %eof                                         dou %eof
     C                   read      hsl3101a
     C                   if        not %eof                                     if not %eof
      *
      ** Convert Kill Date from ccyymmdd to cyymmd
     C                   eval      wkkldt = %dec(%char(%date(w1kldt:*iso):
     C                             *cymd0):7:0)
      *
      ** Retrieve Tattoo Header record for update
     C     key05         chain     pka1cpq2
     C                   if        %found(pka1cpq2)                             if %found(pka1cpq2)
      *
      **       Update HPS flag in Tattoo Header
     C                   eval      a1j8st = 'Y'
     C                   update    @a1cpx6
      *
      **       After update, delete the current HSL3101A record
     C                   delete    w1rec
      *
     C                   endif                                                  fi %found(pka1cpq2)
      *
     C                   endif                                                  fi not %eof
     C                   enddo                                                  dou %eof
     C                   endif                                                  fi %found(hsl3101a)
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * FORMAT DATE FROM CYYMMDD TO CCYYMMDD
      *---------------------------------------------------------------
      *
      * THE HOG PRODUCTION SYSTEM CARRIES DATES AS 8,0 IN THE FORMAT
      * OF CCYYMMDD.
      *
      * THE HOG PROCUREMENT AND EVALUATION SYSTEM CARRIES
      * DATES AS 7,0 NUMERIC FIELDS WITH THE FIRST DIGIT BEING
      * 0=20TH CENTURY OR 1=21ST CENTURY.
      * EXAMPLE: 0951225 FOR CHRISTMAS IN 1995 AND
      *          1951225 FOR CHRISTMAS IN 2095
      *
      * THIS SUBROUTINE CONVERTS DATES TO THE CCYYMMDD FORMAT FOR
      * THE HOG PRODUCTION SYSTEM.
      *
     C     $CCYMD        BEGSR
      *
     C                   Z-ADD     WKYY          WKYER
     C                   Z-ADD     WKMM          WKMON
     C                   Z-ADD     WKDD          WKDAY
     C     WKCC          IFEQ      0
     C                   Z-ADD     19            WKCEN
     C                   ELSE
     C                   Z-ADD     20            WKCEN
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY LIST FOR SALES MOVEMENT DETAIL
      *
     C     key01         KLIST
     C                   KFLD                    CDMVSN
     C                   KFLD                    CDHGSN
      *
     C     key02         KLIST
     C                   KFLD                    WDHMNB
     C                   KFLD                    WDBNNB
     C                   KFLD                    WDBONB
     C                   KFLD                    WDCVNB
     C                   KFLD                    WDB0DT
     C                   KFLD                    WDHGSN
      *
     C     key03         KLIST
     C                   KFLD                    CDCVNO
     C                   KFLD                    CDCHNO
     C                   KFLD                    CDCHDT
     C                   KFLD                    WKCJFL
     C                   KFLD                    WABQCD
     C                   KFLD                    WKLINE
      *
     C     key04         KLIST
     C                   KFLD                    SVCHDT
     C                   KFLD                    SVCVNO
     C                   KFLD                    SVCHNO
      *
     C     key05         klist
     C                   kfld                    w1comp#
     C                   kfld                    w1bono
     C                   kfld                    w1boldno
     C                   kfld                    w1tattoo
     C                   kfld                    wkkldt
      *
      *
     C     *LIKE         DEFINE    CDLNNO        WKLINE
     C                   Z-ADD     0             WKLINE
     C     *LIKE         DEFINE    CJCJFL        WKCJFL
     C                   MOVEL     'D'           WKCJFL
     C     *LIKE         DEFINE    CHTPCD        WKTPCD
      *
      * ARRAY INDEXES
     C                   Z-ADD     0             X                 3 0
     C                   Z-ADD     0             Y                 3 0
      *
      * WORKFIELDS
      *
     C     *LIKE         DEFINE    CDLNNO        WKLNNO
     C     *LIKE         DEFINE    CDCVNO        WKCVNO
     C     *LIKE         DEFINE    CHCHAM        WKCHAM
     C     *LIKE         DEFINE    CHSTCD        WKSTCD
      *
     C     *LIKE         DEFINE    SGSHHD        WKSHHD
     C     *LIKE         DEFINE    SGSHHD        WKARHD
      *
      * SAVE FIELDS
     C     *LIKE         DEFINE    WDBYDT        SVBYDT
     C     *LIKE         DEFINE    CHCHNO        SVCHNO
     C     *LIKE         DEFINE    CDCVNO        SVCVNO
     C     *LIKE         DEFINE    CDCHDT        SVCHDT
     C     *LIKE         DEFINE    SHSTCD        SVSTCD
      *
      * FLAGS FOR DETERMINING THE TYPE OF PAYMENT FOR A CHECK
      * HEADER RECORD.
      *
     C                   MOVEL     YES           FIRST             1
     C                   MOVEL     NO            PAYLFL            1
     C                   MOVEL     NO            PAYCFL            1
      *
     C                   ENDSR
      /EJECT
