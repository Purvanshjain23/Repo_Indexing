// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKG0DFR
// ?Date: 14.08.2025 Time: 02:49:28
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Number
ENDDO;

//?HPE Get ready for  STF   20161115    Susan Blakey
EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.Zero_USR);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

//?USER: Initialize subfile control

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// CTL.RS Record Status = CND.Active
CTL.RS_Record_Status = 'A';

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

ENDIF;

//?USER: Initialize subfile record from DBF record

// RCD.Int/External Desc Usr = Condition name of DB1.SR Type
RCD.Int_External_Desc_Usr = RTVCND(DB1.SR_Type);

// RCD.Src Cntrct Typ Desc Usr = Condition name of DB1.SR Source Contract Type
RCD.Src_Cntrct_Typ_Desc_Usr = RTVCND(DB1.SR_Source_Contract_Type);

//?HPE Get ready for  STF
//?SELET ON OPEN OR NONOPEN   SLM 20161115
CASE;

// IF CTL.SR Source Contract Type EQ RCD.SR Source Contract Type
IF CTL.SR_Source_Contract_Type = RCD.SR_Source_Contract_Type;

// IF CTL.SR Source Contract Type EQ LCL.SR Source Contract Type
IF CTL.SR_Source_Contract_Type = LCL.SR_Source_Contract_Type;

// IF *OTHERWISE
IF *OTHERWISE;

QUIT;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?F6=Create
CASE;

// IF CTL.*CMD key is *Create
IF CTL.*CMD_key = '06';

// *MO.VE             1183529*Bu = ilt. in functions
CTL.SR_Source_Code = WRK.Blank_USR;

// Call program Edt Source            E1.
CALL PROGRAM(Edt Source            E1) ('PKGZE1R');
PARAMETER(CTL.SR_Source_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Defer_confirm = 'N';

ENDIF;

//?F21=Print List
CASE;

// IF CTL.*CMD key is Print List
IF CTL.*CMD_key = '21';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Print Source List');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Execute command - 'SBM Prt Pricing Option List'
EXECUTE COMMAND(PRK0304);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(CTL.RS_Record_Status);
PARAMETER(PAR.Oms_System_Value_Alpha);

ENDIF;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?2=Revise Request
CASE;

// IF RCD.*SFLSEL is *Revise request
IF RCD.*SFLSEL = '2'/'2';

// Call program Edt Source            E1.
CALL PROGRAM(Edt Source            E1) ('PKGZE1R');
PARAMETER(RCD.SR_Source_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

ENDIF;

//?4=Delete Request
CASE;

// IF RCD.*SFLSEL is *Delete request
IF RCD.*SFLSEL = '4'/'4';

//?Check for relationships for Source
DO;

EXECUTE FUNCTION(Chk Source Code) TYPE(RTVOBJ) FILE(PKB1CPP)                    AB1161630;
PARAMETER(RCD.SR_Source_Code);
{
 //?USER: Processing if Data record not found

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = 999;

 // Send error message - 'A Carcass Detail is using the record. Delete is invalid.'
 ERROR(PRK0525);

 QUIT;

}


EXECUTE FUNCTION(Chk Source/Producer   RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1123582;
PARAMETER(RCD.SR_Source_Code);
{
 //?USER: Processing if Data record not found

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = 999;

 // Send error message - 'A Producer is using this record.  Delete is invalid.'
 ERROR(PRK0265);

 QUIT;

}


EXECUTE FUNCTION(Chk Source            RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1161627;
PARAMETER(RCD.SR_Source_Code);
{
 //?USER: Processing if Data record not found

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = 999;

 // Send error message - 'A Tattoo Header is using the record.  Delete is invalid.'
 ERROR(PRK0262);

 QUIT;

}


EXECUTE FUNCTION(Chk Source            RT) TYPE(RTVOBJ) FILE(PKC8CPP)           AB1161636;
PARAMETER(RCD.SR_Source_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // PGM.*Return code = CND.Record Found
 PGM.*Return_code = 999;

 // Send error message - 'Hog Population Distribution is using the record. Delete is invalid.'
 ERROR(PRK0526);

 QUIT;

}


EXECUTE FUNCTION(Chk Source            RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1161639;
PARAMETER(RCD.SR_Source_Code);
{
 //?USER: Processing if Data record not found

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = 999;

 // Send error message - 'Hog Population Rpt Hdr is using the record. Delete is invalid.'
 ERROR(PRK0527);

 QUIT;

}


ENDDO;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?Print
CASE;

// IF RCD.*SFLSEL is *Print request
IF RCD.*SFLSEL = '6'/'6';

//?Print Options Prompt
CASE;

// IF WRK.Display Print Prompt  Usr is Prompt is to be displayed
IF WRK.Display_Print_Prompt_Usr = 'Y';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Print Source');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

// WRK.Display Print Prompt  Usr = CND.Do not display prompt
WRK.Display_Print_Prompt_Usr = 'N';

ENDIF;

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Execute command - 'SBM Prt Pricing Option List'
EXECUTE COMMAND(PRK0305);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(RCD.SR_Source_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?USER: Final processing (Pre-confirm)

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

//?USER: Process subfile record (Post-confirm)

//?4=Delete Request
CASE;

// IF RCD.*SFLSEL is *Delete request
IF RCD.*SFLSEL = '4'/'4';

EXECUTE FUNCTION(Dlt Source            DO) TYPE(DLTOBJ) FILE(PKAAREP)           AB1104411;
PARAMETER(RCD.SR_Source_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

