// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKQ6EFR
// ?Date: 14.08.2025 Time: 02:52:33
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//?                      length from 5 to 7.
ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.BOH_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

// WRK.First Time Flag Usr = CND.Blank
WRK.First_Time_Flag_Usr = *BLANK;

//?USER: Initialize subfile header

//?First Time Processing
CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// CTL.BOH Company Number = WRK.BOH Company Number
CTL.BOH_Company_Number = WRK.BOH_Company_Number;

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(CTL.BOH_Company_Number);
PARAMETER(CTL.Name_USR);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg Carcass Detail    CH) TYPE(CHGOBJ) FILE(PKB1CPP)           AB1116845;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(RCD.CD_Scale_Sequence_Number);
PARAMETER(RCD.CD_Carcass_Number);
PARAMETER(RCD.CD_Carcass_Number_Insert);
PARAMETER(RCD.CD_Record_Add_Del_Sts);
PARAMETER(RCD.CD_Sort_Loss);
PARAMETER(RCD.CD_STD_Yield);
PARAMETER(RCD.CD_Base_Carcass_CWT);
PARAMETER(RCD.CD_Crc_Value_Per_CWT);
PARAMETER(RCD.CD_Base_Carc_Value);
PARAMETER(RCD.CD_Crc_Value_$_Per_Hd);
PARAMETER(RCD.CD_Lean_Premium_CWT);
PARAMETER(RCD.CD_Lean_Premium_$_Per_Hd);
PARAMETER(RCD.CD_Gross_Value_Per_CWT);
PARAMETER(RCD.CD_Gross_Value_$_Per_HD);
PARAMETER(RCD.CD_Kill_Date);
PARAMETER(RCD.CD_Shift);
PARAMETER(RCD.CD_FFLI);
PARAMETER(RCD.CD_Record_Created_W_Avg);
PARAMETER(RCD.CD_Record_Created_Status);
PARAMETER(RCD.CD_LOT);
PARAMETER(RCD.CD_User_Error_Override);
PARAMETER(RCD.CD_Source_Type);
PARAMETER(RCD.CD_Payment_Type);
PARAMETER(RCD.CD_CA_Sort_Loss);
PARAMETER(RCD.CD_CA_Std_Yield);
PARAMETER(RCD.CD_CA_Base_Carcass_CWT);
PARAMETER(RCD.CD_CA_Crc_Value_Per_CWT);
PARAMETER(RCD.CD_CA_Base_Carc_Value);
PARAMETER(RCD.CD_CA_Crc_Value_$_Per_Hd);
PARAMETER(RCD.CD_CA_Lean_Premium_CWT);
PARAMETER(RCD.CD_CA_Lean_Premium_$_P_Hd);
PARAMETER(RCD.CD_CA_Gross_Value_Per_CWT);
PARAMETER(RCD.CD_CA_Gross_Value_$_P_Hd);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.SR_Source_Code);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


//?USER: Exit program processing

//?Count Head Adds and update TH
EXECUTE FUNCTION(Rtv Cnt Carc Dtl Adds RT) TYPE(RTVOBJ) FILE(PKB1CPP)           AB1218606;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);
{
 //?USER: Initialize routine

 // WRK.Count USR = CON.*ZERO
 WRK.Count_USR = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.CD Record Add/Del Sts is Add
 IF DB1.CD_Record_Add_Del_Sts = 'A';

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?USER: Exit processing

 //?Update TH Adds
 EXECUTE FUNCTION(Rtv/Chg Head Adds     RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1218607;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.Count_USR);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Head Adds         CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1218608;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(PAR.Count_USR);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

}


