     H/TITLE UPD Avail-To-Sell  SCH XF Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 05/17/22  Time  : 16:38:16
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPDIORELKIF  E           K        DISK
      * RSQ : Item Bill Of Material     Co/Item/CItem StrWgtYld
      *
     FPDI8CPL1IF  E           K        DISK
      * RTV : PS Prod Item Schedule     Retrieval index
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FPDIOREL6IF  E           K        DISK
      * RSQ : Item Bill Of Material     Co/Itm/Typ/CPty/CItm Mt
      *
     FPDI7CPL2IF  E           K        DISK
      * RSQ : PS Production Capability  Co/Dept/EftDte(d)
      *
     FPDI8CPL4IF  E           K        DISK
      * RSQ : PS Prod Item Schedule     Co/Itm/Whs/PrdDte/Typ
      *
     FPDLMCPL1IF  E           K        DISK
      * RTV : PS Prod Dept Schedule     Retrieval index
      *
     FCABZRELQIF  E           K        DISK
      * RSQ : Company Item              Co/Dept/ExpDom
      *
     FCAAFRELBIF  E           K        DISK
      * RSQ : Calendar                  Co/Year/Week#/Date
      *
     FPDI8CPLCIF  E           K        DISK
      * RSQ : PS Prod Item Schedule     Co/Itm/Whs/ShpDte/Typ
      *
     FOPBGWKLVIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Om CCC
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FCAAFREL7IF  E           K        DISK
      * RSQ : Calendar                  RSQ Co/Yr/Period/Week/Da
      *
     FPDKNCPL1IF  E           K        DISK
      * RTV : Order Detail Schedule     Retrieval index
      *
     FPDKNCPL5IF  E           K        DISK
      * RSQ : Order Detail Schedule     Co/Item/Whse/SchdDte
      *
     FOPBFCPLOIF  E           K        DISK
      * RSQ : Order Header TRG          Ord-D/Co
      *
     FPOB6CPL3IF  E           K        DISK
      * RSQ : Order Detail Sched-Consmd Co/Ord/PrdDt/Cns/Itm/Seq
      *
     FPOB6CPL1IF  E           K        DISK
      * RTV : Order Detail Sched-Consmd Retrieval index
      *
     FPDI8CPL0UF  E           K        DISK                      A
      * UPD : PS Prod Item Schedule     Update index
      *
     FPDKNCPL0UF  E           K        DISK                      A
      * UPD : Order Detail Schedule     Update index
      *
     FPOB6CPL0UF  E           K        DISK                      A
      * UPD : Order Detail Sched-Consmd Update index
      *
     E                    YK01      100 12  D            PA Work Array f
      *
     I@BZREJU
      * Company Item              Retrieval index       NV
      * Renamed input format fields
     I              BZAIC3                          WAAIC3
     I              BZHGCD                          WAHGCD
     I              BZAVNA                          WAAVNA
     I              BZAWNA                          WAAWNA
     I              BZL7NA                          WAL7NA
     I              BZL8NA                          WAL8NA
     I              BZL6NA                          WAL6NA
     I              BZMFNA                          WAMFNA
     I              BZADCD                          WAADCD
     I              BZAWPC                          WAAWPC
     I              BZLXST                          WALXST
     I              BZAECD                          WAAECD
     I              BZAXPC                          WAAXPC
     I              BZLYST                          WALYST
     I              BZAFCD                          WAAFCD
     I              BZAICD                          WAAICD
     I              BZAIWG                          WAAIWG
     I              BZHICD                          WAHICD
     I              BZRBCD                          WARBCD
     I              BZFZST                          WAFZST
     I              BZAVST                          WAAVST
     I              BZCZWG                          WACZWG
     I              BZC0WG                          WAC0WG
     I              BZURTN                          WAURTN
     I              BZAJC8                          WAAJC8
     I              BZRINB                          WARINB
     I              BZRHNB                          WARHNB
     I              BZRGNB                          WARGNB
     I              BZLNCD                          WALNCD
     I              BZTFNB                          WATFNB
     I              BZN0CD                          WAN0CD
     I              BZX4ST                          WAX4ST
     I              BZTMVA                          WATMVA
     I              BZTNVA                          WATNVA
     I              BZBLPR                          WABLPR
     I              BZBMPR                          WABMPR
     I              BZLRCD                          WALRCD
     I              BZU9ST                          WAU9ST
     I              BZCMCO                          WACMCO
     I              BZQ1CD                          WAQ1CD
     I              BZQ8CD                          WAQ8CD
     I              BZCHTM                          WACHTM
     I              BZQZCD                          WAQZCD
     I              BZXWST                          WAXWST
     I              BZXXST                          WAXXST
     I              BZVMST                          WAVMST
     I              BZSWGH                          WASWGH
     I              BZPPHE                          WAPPHE
     I              BZR3CD                          WAR3CD
     I              BZSDCD                          WASDCD
     I              BZICN1                          WAICN1
     I              BZSVCD                          WASVCD
     I              BZICN2                          WAICN2
     I              BZSWCD                          WASWCD
     I              BZV2NB                          WAV2NB
     I              BZSXCD                          WASXCD
     I              BZITCN                          WAITCN
     I              BZSYCD                          WASYCD
     I              BZITC5                          WAITC5
     I              BZSZCD                          WASZCD
     I              BZICN6                          WAICN6
     I              BZS0CD                          WAS0CD
     I              BZICN7                          WAICN7
     I              BZS1CD                          WAS1CD
     I              BZICN8                          WAICN8
     I              BZS2CD                          WAS2CD
     I              BZICN9                          WAICN9
     I              BZS3CD                          WAS3CD
     I              BZICN0                          WAICN0
     I              BZS4CD                          WAS4CD
     I              BZSFNB                          WASFNB
     I              BZA3WG                          WAA3WG
     I              BZSJNB                          WASJNB
     I              BZLLCD                          WALLCD
     I              BZLMCD                          WALMCD
     I              BZP3ST                          WAP3ST
     I              BZSKNB                          WASKNB
     I              BZSLNB                          WASLNB
     I              BZSMNB                          WASMNB
     I              BZP4ST                          WAP4ST
     I              BZCFNB                          WACFNB
     I              BZCGNB                          WACGNB
     I              BZILNB                          WAILNB
     I              BZCHNB                          WACHNB
     I              BZCINB                          WACINB
     I              BZCJNB                          WACJNB
     I              BZCMNB                          WACMNB
     I              BZCNNB                          WACNNB
     I              BZCRNB                          WACRNB
     I              BZCSNB                          WACSNB
     I              BZCVNB                          WACVNB
     I              BZCWNB                          WACWNB
     I              BZCXNB                          WACXNB
     I              BZCZNB                          WACZNB
     I              BZC0NB                          WAC0NB
     I              BZN1CD                          WAN1CD
     I              BZB4NB                          WAB4NB
     I              BZB5NB                          WAB5NB
     I              BZX5ST                          WAX5ST
     I              BZX6ST                          WAX6ST
     I              BZX7ST                          WAX7ST
     I              BZPCCT                          WAPCCT
     I              BZBDNB                          WABDNB
     I              BZBJNB                          WABJNB
     I              BZSUST                          WASUST
     I              BZSVST                          WASVST
     I              BZSYST                          WASYST
     I              BZSZST                          WASZST
     I              BZS1ST                          WAS1ST
     I              BZXRCD                          WAXRCD
     I              BZXTCD                          WAXTCD
     I              BZXUCD                          WAXUCD
     I              BZF5WG                          WAF5WG
     I              BZF6WG                          WAF6WG
     I              BZF7WG                          WAF7WG
     I              BZBLNB                          WABLNB
     I              BZBNNB                          WABNNB
     I              BZS2ST                          WAS2ST
     I              BZS4ST                          WAS4ST
     I              BZS5ST                          WAS5ST
     I              BZS6ST                          WAS6ST
     I              BZS8ST                          WAS8ST
     I              BZS9ST                          WAS9ST
     I              BZTCST                          WATCST
     I              BZTDST                          WATDST
     I              BZUVST                          WAUVST
     I              BZUWST                          WAUWST
     I              BZUXST                          WAUXST
     I              BZVSST                          WAVSST
     I              BZAATM                          WAAATM
     I              BZAYNA                          WAAYNA
     I              BZA0NA                          WAA0NA
     I              BZAXDT                          WAAXDT
      *
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WBAJCD
     I              ADF8NA                          WBF8NA
     I              ADACNA                          WBACNA
     I              ADADNA                          WBADNA
     I              ADAENA                          WBAENA
     I              ADAJNA                          WBAJNA
     I              ADBTTX                          WBBTTX
     I              ADAOCD                          WBAOCD
     I              ADBGCD                          WBBGCD
     I              ADVHST                          WBVHST
     I              ADMPNA                          WBMPNA
     I              ADWPST                          WBWPST
     I              ADXUST                          WBXUST
     I              ADT0ST                          WBT0ST
     I              ADT1ST                          WBT1ST
     I              ADDBNB                          WBDBNB
     I              ADT2ST                          WBT2ST
     I              ADT3ST                          WBT3ST
     I              ADT4ST                          WBT4ST
     I              ADT6ST                          WBT6ST
     I              ADBWC3                          WBBWC3
     I              ADBTC3                          WBBTC3
     I              ADBUC3                          WBBUC3
     I              ADBVC3                          WBBVC3
     I              ADFCAA                          WBFCAA
     I              ADRQSX                          WBRQSX
     I              ADRRSX                          WBRRSX
     I              ADRSSX                          WBRSSX
     I              ADRTSX                          WBRTSX
     I              ADT7ST                          WBT7ST
     I              ADT8ST                          WBT8ST
     I              ADRNSX                          WBRNSX
     I              ADROSX                          WBROSX
     I              ADRPSX                          WBRPSX
     I              ADUVST                          WBUVST
     I              ADUWST                          WBUWST
     I              ADUXST                          WBUXST
     I              ADVSST                          WBVSST
     I              ADAATM                          WBAATM
     I              ADAYNA                          WBAYNA
     I              ADA0NA                          WBA0NA
     I              ADAXDT                          WBAXDT
      *
     I@IOREA4
      * Item Bill Of Material     Co/Item/CItem StrWgtYld
      * Renamed input format fields
     I              IOAIC3                          WCAIC3
     I              IOHGCD                          WCHGCD
     I              IOC9NB                          WCC9NB
     I              IOV2ST                          WCV2ST
     I              IOBOPR                          WCBOPR
     I              IOBPPR                          WCBPPR
     I              IOHGQT                          WCHGQT
     I              IOHHCD                          WCHHCD
     I              IOYAST                          WCYAST
     I              IOCNSM                          WCCNSM
     I              IOBMY1                          WCBMY1
     I              IOBMY2                          WCBMY2
     I              IOIXQT                          WCIXQT
     I              IOIYQT                          WCIYQT
     I              IORSST                          WCRSST
     I              IORTST                          WCRTST
     I              IOUVST                          WCUVST
     I              IOUWST                          WCUWST
     I              IOUXST                          WCUXST
     I              IOVSST                          WCVSST
     I              IOAATM                          WCAATM
     I              IOAYNA                          WCAYNA
     I              IOA0NA                          WCA0NA
     I              IOAXDT                          WCAXDT
      *
     I@I8CPUS
      * PS Prod Item Schedule     Retrieval index
      * Renamed input format fields
     I              I8AIC3                          WDAIC3
     I              I8V5ST                          WDV5ST
     I              I8ELDT                          WDELDT
     I              I8HGCD                          WDHGCD
     I              I8AJCD                          WDAJCD
     I              I8GPDT                          WDGPDT
     I              I8WTSP                          WDWTSP
     I              I8QTSP                          WDQTSP
     I              I8DJPC                          WDDJPC
     I              I8F8WG                          WDF8WG
     I              I8WTIN                          WDWTIN
     I              I8D5NB                          WDD5NB
     I              I8DXWG                          WDDXWG
     I              I8B2NB                          WDB2NB
     I              I8WTCN                          WDWTCN
     I              I8PSCV                          WDPSCV
     I              I8SAWT                          WDSAWT
     I              I8B9NB                          WDB9NB
     I              I8D1WG                          WDD1WG
     I              I8CBNB                          WDCBNB
     I              I8EZWG                          WDEZWG
     I              I8CCNB                          WDCCNB
     I              I8E0WG                          WDE0WG
     I              I8D6NB                          WDD6NB
     I              I8OAWT                          WDOAWT
     I              I8CDNB                          WDCDNB
     I              I8UNW2                          WDUNW2
     I              I8CENB                          WDCENB
     I              I8F9WG                          WDF9WG
     I              I8BPNB                          WDBPNB
     I              I8GAWG                          WDGAWG
     I              I8BQNB                          WDBQNB
     I              I8GBWG                          WDGBWG
     I              I8BRNB                          WDBRNB
     I              I8GCWG                          WDGCWG
     I              I8BSNB                          WDBSNB
     I              I8GDWG                          WDGDWG
     I              I8BWNB                          WDBWNB
     I              I8GEWG                          WDGEWG
     I              I8PS6U                          WDPS6U
     I              I8WCST                          WDWCST
     I              I8WPST                          WDWPST
     I              I8B5ST                          WDB5ST
     I              I8TFST                          WDTFST
     I              I8TEST                          WDTEST
     I              I8THST                          WDTHST
     I              I8UDST                          WDUDST
     I              I8UFST                          WDUFST
     I              I8UGST                          WDUGST
     I              I8UHST                          WDUHST
     I              I8B6ST                          WDB6ST
     I              I8B7ST                          WDB7ST
     I              I8DVWG                          WDDVWG
     I              I8D7NB                          WDD7NB
     I              I8FCAD                          WDFCAD
     I              I8D9NB                          WDD9NB
     I              I8DWWG                          WDDWWG
     I              I8EANB                          WDEANB
     I              I8SHWT                          WDSHWT
     I              I8EBNB                          WDEBNB
     I              I8AVWT                          WDAVWT
     I              I8ECNB                          WDECNB
     I              I8WTON                          WDWTON
     I              I8EDNB                          WDEDNB
     I              I8FNWT                          WDFNWT
     I              I8EENB                          WDEENB
     I              I8QTAS                          WDQTAS
     I              I8EFNB                          WDEFNB
     I              I8WAIO                          WDWAIO
     I              I8EGNB                          WDEGNB
     I              I8R3CD                          WDR3CD
     I              I8RGNB                          WDRGNB
     I              I8RHNB                          WDRHNB
     I              I8RINB                          WDRINB
     I              I8XRCD                          WDXRCD
     I              I8UVST                          WDUVST
     I              I8UWST                          WDUWST
     I              I8UXST                          WDUXST
     I              I8VSST                          WDVSST
     I              I8AATM                          WDAATM
     I              I8AYNA                          WDAYNA
     I              I8A0NA                          WDA0NA
     I              I8AXDT                          WDAXDT
      *
     I@I8CPUR
      * PS Prod Item Schedule     Update index
      * Renamed input format fields
     I              I8AIC3                          WEAIC3
     I              I8V5ST                          WEV5ST
     I              I8ELDT                          WEELDT
     I              I8HGCD                          WEHGCD
     I              I8AJCD                          WEAJCD
     I              I8GPDT                          WEGPDT
     I              I8WTSP                          WEWTSP
     I              I8QTSP                          WEQTSP
     I              I8DJPC                          WEDJPC
     I              I8F8WG                          WEF8WG
     I              I8WTIN                          WEWTIN
     I              I8D5NB                          WED5NB
     I              I8DXWG                          WEDXWG
     I              I8B2NB                          WEB2NB
     I              I8WTCN                          WEWTCN
     I              I8PSCV                          WEPSCV
     I              I8SAWT                          WESAWT
     I              I8B9NB                          WEB9NB
     I              I8D1WG                          WED1WG
     I              I8CBNB                          WECBNB
     I              I8EZWG                          WEEZWG
     I              I8CCNB                          WECCNB
     I              I8E0WG                          WEE0WG
     I              I8D6NB                          WED6NB
     I              I8OAWT                          WEOAWT
     I              I8CDNB                          WECDNB
     I              I8UNW2                          WEUNW2
     I              I8CENB                          WECENB
     I              I8F9WG                          WEF9WG
     I              I8BPNB                          WEBPNB
     I              I8GAWG                          WEGAWG
     I              I8BQNB                          WEBQNB
     I              I8GBWG                          WEGBWG
     I              I8BRNB                          WEBRNB
     I              I8GCWG                          WEGCWG
     I              I8BSNB                          WEBSNB
     I              I8GDWG                          WEGDWG
     I              I8BWNB                          WEBWNB
     I              I8GEWG                          WEGEWG
     I              I8PS6U                          WEPS6U
     I              I8WCST                          WEWCST
     I              I8WPST                          WEWPST
     I              I8B5ST                          WEB5ST
     I              I8TFST                          WETFST
     I              I8TEST                          WETEST
     I              I8THST                          WETHST
     I              I8UDST                          WEUDST
     I              I8UFST                          WEUFST
     I              I8UGST                          WEUGST
     I              I8UHST                          WEUHST
     I              I8B6ST                          WEB6ST
     I              I8B7ST                          WEB7ST
     I              I8DVWG                          WEDVWG
     I              I8D7NB                          WED7NB
     I              I8FCAD                          WEFCAD
     I              I8D9NB                          WED9NB
     I              I8DWWG                          WEDWWG
     I              I8EANB                          WEEANB
     I              I8SHWT                          WESHWT
     I              I8EBNB                          WEEBNB
     I              I8AVWT                          WEAVWT
     I              I8ECNB                          WEECNB
     I              I8WTON                          WEWTON
     I              I8EDNB                          WEEDNB
     I              I8FNWT                          WEFNWT
     I              I8EENB                          WEEENB
     I              I8QTAS                          WEQTAS
     I              I8EFNB                          WEEFNB
     I              I8WAIO                          WEWAIO
     I              I8EGNB                          WEEGNB
     I              I8R3CD                          WER3CD
     I              I8RGNB                          WERGNB
     I              I8RHNB                          WERHNB
     I              I8RINB                          WERINB
     I              I8XRCD                          WEXRCD
     I              I8UVST                          WEUVST
     I              I8UWST                          WEUWST
     I              I8UXST                          WEUXST
     I              I8VSST                          WEVSST
     I              I8AATM                          WEAATM
     I              I8AYNA                          WEAYNA
     I              I8A0NA                          WEA0NA
     I              I8AXDT                          WEAXDT
      *
     I@ADRET1
      * Warehouse                 Active records only
      * Renamed input format fields
     I              ADAJCD                          WFAJCD
     I              ADF8NA                          WFF8NA
     I              ADACNA                          WFACNA
     I              ADADNA                          WFADNA
     I              ADAENA                          WFAENA
     I              ADAJNA                          WFAJNA
     I              ADBTTX                          WFBTTX
     I              ADAOCD                          WFAOCD
     I              ADBGCD                          WFBGCD
     I              ADVHST                          WFVHST
     I              ADMPNA                          WFMPNA
     I              ADWPST                          WFWPST
     I              ADXUST                          WFXUST
     I              ADT0ST                          WFT0ST
     I              ADT1ST                          WFT1ST
     I              ADDBNB                          WFDBNB
     I              ADT2ST                          WFT2ST
     I              ADT3ST                          WFT3ST
     I              ADT4ST                          WFT4ST
     I              ADT6ST                          WFT6ST
     I              ADBWC3                          WFBWC3
     I              ADBTC3                          WFBTC3
     I              ADBUC3                          WFBUC3
     I              ADBVC3                          WFBVC3
     I              ADFCAA                          WFFCAA
     I              ADRQSX                          WFRQSX
     I              ADRRSX                          WFRRSX
     I              ADRSSX                          WFRSSX
     I              ADRTSX                          WFRTSX
     I              ADT7ST                          WFT7ST
     I              ADT8ST                          WFT8ST
     I              ADRNSX                          WFRNSX
     I              ADROSX                          WFROSX
     I              ADRPSX                          WFRPSX
     I              ADUVST                          WFUVST
     I              ADUWST                          WFUWST
     I              ADUXST                          WFUXST
     I              ADVSST                          WFVSST
     I              ADAATM                          WFAATM
     I              ADAYNA                          WFAYNA
     I              ADA0NA                          WFA0NA
     I              ADAXDT                          WFAXDT
      *
     I@AFREBE
      * Calendar                  Retrieval index       NV
      * Renamed input format fields
     I              AFAIC3                          WGAIC3
     I              AFBCDT                          WGBCDT
     I              AFCQNB                          WGCQNB
     I              AFESNB                          WGESNB
     I              AFETNB                          WGETNB
     I              AFBZNB                          WGBZNB
     I              AFA9ST                          WGA9ST
     I              AFEINB                          WGEINB
     I              AFC5ST                          WGC5ST
     I              AFAQNB                          WGAQNB
     I              AFCMST                          WGCMST
     I              AFV9ST                          WGV9ST
     I              AFWAST                          WGWAST
     I              AFX2ST                          WGX2ST
     I              AFOJDT                          WGOJDT
     I              AFNQNX                          WGNQNX
     I              AFNRNX                          WGNRNX
     I              AFI9SX                          WGI9SX
     I              AFJASX                          WGJASX
     I              AFOKDT                          WGOKDT
     I              AFOLDT                          WGOLDT
     I              AFUVST                          WGUVST
     I              AFUWST                          WGUWST
     I              AFUXST                          WGUXST
     I              AFAATM                          WGAATM
     I              AFAYNA                          WGAYNA
     I              AFA0NA                          WGA0NA
     I              AFAXDT                          WGAXDT
      *
     I@IOREGB
      * Item Bill Of Material     Co/Itm/Typ/CPty/CItm Mt
      * Renamed input format fields
     I              IOAIC3                          WHAIC3
     I              IOHGCD                          WHHGCD
     I              IOC9NB                          WHC9NB
     I              IOV2ST                          WHV2ST
     I              IOBOPR                          WHBOPR
     I              IOBPPR                          WHBPPR
     I              IOHGQT                          WHHGQT
     I              IOHHCD                          WHHHCD
     I              IOYAST                          WHYAST
     I              IOCNSM                          WHCNSM
     I              IOBMY1                          WHBMY1
     I              IOBMY2                          WHBMY2
     I              IOIXQT                          WHIXQT
     I              IOIYQT                          WHIYQT
     I              IORSST                          WHRSST
     I              IORTST                          WHRTST
     I              IOUVST                          WHUVST
     I              IOUWST                          WHUWST
     I              IOUXST                          WHUXST
     I              IOVSST                          WHVSST
     I              IOAATM                          WHAATM
     I              IOAYNA                          WHAYNA
     I              IOA0NA                          WHA0NA
     I              IOAXDT                          WHAXDT
      *
     I@I7CPBK
      * PS Production Capability  Co/Dept/EftDte(d)
      * Renamed input format fields
     I              I7AIC3                          WIAIC3
     I              I7R3CD                          WIR3CD
     I              I7GJDT                          WIGJDT
     I              I7V3ST                          WIV3ST
     I              I7HPSH                          WIHPSH
     I              I7PIPH                          WIPIPH
     I              I7DQWG                          WIDQWG
     I              I7PPDA                          WIPPDA
     I              I7DRWG                          WIDRWG
     I              I7EOPC                          WIEOPC
     I              I7EPPC                          WIEPPC
     I              I7EQPC                          WIEQPC
     I              I7ERPC                          WIERPC
     I              I7A8NB                          WIA8NB
     I              I7BBNB                          WIBBNB
     I              I7A9NB                          WIA9NB
     I              I7BCNB                          WIBCNB
     I              I7UVST                          WIUVST
     I              I7UWST                          WIUWST
     I              I7UXST                          WIUXST
     I              I7VSST                          WIVSST
     I              I7AATM                          WIAATM
     I              I7AYNA                          WIAYNA
     I              I7A0NA                          WIA0NA
     I              I7AXDT                          WIAXDT
      *
     I@I8CPXP
      * PS Prod Item Schedule     Co/Itm/Whs/PrdDte/Typ
      * Renamed input format fields
     I              I8AIC3                          WJAIC3
     I              I8V5ST                          WJV5ST
     I              I8ELDT                          WJELDT
     I              I8HGCD                          WJHGCD
     I              I8AJCD                          WJAJCD
     I              I8GPDT                          WJGPDT
     I              I8WTSP                          WJWTSP
     I              I8QTSP                          WJQTSP
     I              I8DJPC                          WJDJPC
     I              I8F8WG                          WJF8WG
     I              I8WTIN                          WJWTIN
     I              I8D5NB                          WJD5NB
     I              I8DXWG                          WJDXWG
     I              I8B2NB                          WJB2NB
     I              I8WTCN                          WJWTCN
     I              I8PSCV                          WJPSCV
     I              I8SAWT                          WJSAWT
     I              I8B9NB                          WJB9NB
     I              I8D1WG                          WJD1WG
     I              I8CBNB                          WJCBNB
     I              I8EZWG                          WJEZWG
     I              I8CCNB                          WJCCNB
     I              I8E0WG                          WJE0WG
     I              I8D6NB                          WJD6NB
     I              I8OAWT                          WJOAWT
     I              I8CDNB                          WJCDNB
     I              I8UNW2                          WJUNW2
     I              I8CENB                          WJCENB
     I              I8F9WG                          WJF9WG
     I              I8BPNB                          WJBPNB
     I              I8GAWG                          WJGAWG
     I              I8BQNB                          WJBQNB
     I              I8GBWG                          WJGBWG
     I              I8BRNB                          WJBRNB
     I              I8GCWG                          WJGCWG
     I              I8BSNB                          WJBSNB
     I              I8GDWG                          WJGDWG
     I              I8BWNB                          WJBWNB
     I              I8GEWG                          WJGEWG
     I              I8PS6U                          WJPS6U
     I              I8WCST                          WJWCST
     I              I8WPST                          WJWPST
     I              I8B5ST                          WJB5ST
     I              I8TFST                          WJTFST
     I              I8TEST                          WJTEST
     I              I8THST                          WJTHST
     I              I8UDST                          WJUDST
     I              I8UFST                          WJUFST
     I              I8UGST                          WJUGST
     I              I8UHST                          WJUHST
     I              I8B6ST                          WJB6ST
     I              I8B7ST                          WJB7ST
     I              I8DVWG                          WJDVWG
     I              I8D7NB                          WJD7NB
     I              I8FCAD                          WJFCAD
     I              I8D9NB                          WJD9NB
     I              I8DWWG                          WJDWWG
     I              I8EANB                          WJEANB
     I              I8SHWT                          WJSHWT
     I              I8EBNB                          WJEBNB
     I              I8AVWT                          WJAVWT
     I              I8ECNB                          WJECNB
     I              I8WTON                          WJWTON
     I              I8EDNB                          WJEDNB
     I              I8FNWT                          WJFNWT
     I              I8EENB                          WJEENB
     I              I8QTAS                          WJQTAS
     I              I8EFNB                          WJEFNB
     I              I8WAIO                          WJWAIO
     I              I8EGNB                          WJEGNB
     I              I8R3CD                          WJR3CD
     I              I8RGNB                          WJRGNB
     I              I8RHNB                          WJRHNB
     I              I8RINB                          WJRINB
     I              I8XRCD                          WJXRCD
     I              I8UVST                          WJUVST
     I              I8UWST                          WJUWST
     I              I8UXST                          WJUXST
     I              I8VSST                          WJVSST
     I              I8AATM                          WJAATM
     I              I8AYNA                          WJAYNA
     I              I8A0NA                          WJA0NA
     I              I8AXDT                          WJAXDT
      *
     I@LMCPO1
      * PS Prod Dept Schedule     Retrieval index
      * Renamed input format fields
     I              LMAIC3                          WKAIC3
     I              LMV5ST                          WKV5ST
     I              LMELDT                          WKELDT
     I              LMR3CD                          WKR3CD
     I              LMRMPA                          WKRMPA
     I              LMGFWG                          WKGFWG
     I              LMGGWG                          WKGGWG
     I              LMCLNB                          WKCLNB
     I              LMGHWG                          WKGHWG
     I              LMDVNB                          WKDVNB
     I              LMGNWG                          WKGNWG
     I              LMDZNB                          WKDZNB
     I              LMGOWG                          WKGOWG
     I              LMD0NB                          WKD0NB
     I              LMGPWG                          WKGPWG
     I              LMD1NB                          WKD1NB
     I              LMGQWG                          WKGQWG
     I              LMD4NB                          WKD4NB
     I              LMGRWG                          WKGRWG
     I              LMTKST                          WKTKST
     I              LMTLST                          WKTLST
     I              LMTNST                          WKTNST
     I              LMCD3S                          WKCD3S
     I              LMTVST                          WKTVST
     I              LMTWST                          WKTWST
     I              LMUVST                          WKUVST
     I              LMUWST                          WKUWST
     I              LMUXST                          WKUXST
     I              LMVSST                          WKVSST
     I              LMAATM                          WKAATM
     I              LMAYNA                          WKAYNA
     I              LMA0NA                          WKA0NA
     I              LMAXDT                          WKAXDT
      *
     I@BZRESG
      * Company Item              Co/Dept/ExpDom
      * Renamed input format fields
     I              BZAIC3                          WLAIC3
     I              BZHGCD                          WLHGCD
     I              BZAVNA                          WLAVNA
     I              BZAWNA                          WLAWNA
     I              BZL7NA                          WLL7NA
     I              BZL8NA                          WLL8NA
     I              BZL6NA                          WLL6NA
     I              BZMFNA                          WLMFNA
     I              BZADCD                          WLADCD
     I              BZAWPC                          WLAWPC
     I              BZLXST                          WLLXST
     I              BZAECD                          WLAECD
     I              BZAXPC                          WLAXPC
     I              BZLYST                          WLLYST
     I              BZAFCD                          WLAFCD
     I              BZAICD                          WLAICD
     I              BZAIWG                          WLAIWG
     I              BZHICD                          WLHICD
     I              BZRBCD                          WLRBCD
     I              BZFZST                          WLFZST
     I              BZAVST                          WLAVST
     I              BZCZWG                          WLCZWG
     I              BZC0WG                          WLC0WG
     I              BZURTN                          WLURTN
     I              BZAJC8                          WLAJC8
     I              BZRINB                          WLRINB
     I              BZRHNB                          WLRHNB
     I              BZRGNB                          WLRGNB
     I              BZLNCD                          WLLNCD
     I              BZTFNB                          WLTFNB
     I              BZN0CD                          WLN0CD
     I              BZX4ST                          WLX4ST
     I              BZTMVA                          WLTMVA
     I              BZTNVA                          WLTNVA
     I              BZBLPR                          WLBLPR
     I              BZBMPR                          WLBMPR
     I              BZLRCD                          WLLRCD
     I              BZU9ST                          WLU9ST
     I              BZCMCO                          WLCMCO
     I              BZQ1CD                          WLQ1CD
     I              BZQ8CD                          WLQ8CD
     I              BZCHTM                          WLCHTM
     I              BZQZCD                          WLQZCD
     I              BZXWST                          WLXWST
     I              BZXXST                          WLXXST
     I              BZVMST                          WLVMST
     I              BZSWGH                          WLSWGH
     I              BZPPHE                          WLPPHE
     I              BZR3CD                          WLR3CD
     I              BZSDCD                          WLSDCD
     I              BZICN1                          WLICN1
     I              BZSVCD                          WLSVCD
     I              BZICN2                          WLICN2
     I              BZSWCD                          WLSWCD
     I              BZV2NB                          WLV2NB
     I              BZSXCD                          WLSXCD
     I              BZITCN                          WLITCN
     I              BZSYCD                          WLSYCD
     I              BZITC5                          WLITC5
     I              BZSZCD                          WLSZCD
     I              BZICN6                          WLICN6
     I              BZS0CD                          WLS0CD
     I              BZICN7                          WLICN7
     I              BZS1CD                          WLS1CD
     I              BZICN8                          WLICN8
     I              BZS2CD                          WLS2CD
     I              BZICN9                          WLICN9
     I              BZS3CD                          WLS3CD
     I              BZICN0                          WLICN0
     I              BZS4CD                          WLS4CD
     I              BZSFNB                          WLSFNB
     I              BZA3WG                          WLA3WG
     I              BZSJNB                          WLSJNB
     I              BZLLCD                          WLLLCD
     I              BZLMCD                          WLLMCD
     I              BZP3ST                          WLP3ST
     I              BZSKNB                          WLSKNB
     I              BZSLNB                          WLSLNB
     I              BZSMNB                          WLSMNB
     I              BZP4ST                          WLP4ST
     I              BZCFNB                          WLCFNB
     I              BZCGNB                          WLCGNB
     I              BZILNB                          WLILNB
     I              BZCHNB                          WLCHNB
     I              BZCINB                          WLCINB
     I              BZCJNB                          WLCJNB
     I              BZCMNB                          WLCMNB
     I              BZCNNB                          WLCNNB
     I              BZCRNB                          WLCRNB
     I              BZCSNB                          WLCSNB
     I              BZCVNB                          WLCVNB
     I              BZCWNB                          WLCWNB
     I              BZCXNB                          WLCXNB
     I              BZCZNB                          WLCZNB
     I              BZC0NB                          WLC0NB
     I              BZN1CD                          WLN1CD
     I              BZB4NB                          WLB4NB
     I              BZB5NB                          WLB5NB
     I              BZX5ST                          WLX5ST
     I              BZX6ST                          WLX6ST
     I              BZX7ST                          WLX7ST
     I              BZPCCT                          WLPCCT
     I              BZBDNB                          WLBDNB
     I              BZBJNB                          WLBJNB
     I              BZSUST                          WLSUST
     I              BZSVST                          WLSVST
     I              BZSYST                          WLSYST
     I              BZSZST                          WLSZST
     I              BZS1ST                          WLS1ST
     I              BZXRCD                          WLXRCD
     I              BZXTCD                          WLXTCD
     I              BZXUCD                          WLXUCD
     I              BZF5WG                          WLF5WG
     I              BZF6WG                          WLF6WG
     I              BZF7WG                          WLF7WG
     I              BZBLNB                          WLBLNB
     I              BZBNNB                          WLBNNB
     I              BZS2ST                          WLS2ST
     I              BZS4ST                          WLS4ST
     I              BZS5ST                          WLS5ST
     I              BZS6ST                          WLS6ST
     I              BZS8ST                          WLS8ST
     I              BZS9ST                          WLS9ST
     I              BZTCST                          WLTCST
     I              BZTDST                          WLTDST
     I              BZUVST                          WLUVST
     I              BZUWST                          WLUWST
     I              BZUXST                          WLUXST
     I              BZVSST                          WLVSST
     I              BZAATM                          WLAATM
     I              BZAYNA                          WLAYNA
     I              BZA0NA                          WLA0NA
     I              BZAXDT                          WLAXDT
      *
     I@AFREH3
      * Calendar                  Co/Year/Week#/Date
      * Renamed input format fields
     I              AFAIC3                          WMAIC3
     I              AFBCDT                          WMBCDT
     I              AFCQNB                          WMCQNB
     I              AFESNB                          WMESNB
     I              AFETNB                          WMETNB
     I              AFBZNB                          WMBZNB
     I              AFA9ST                          WMA9ST
     I              AFEINB                          WMEINB
     I              AFC5ST                          WMC5ST
     I              AFAQNB                          WMAQNB
     I              AFCMST                          WMCMST
     I              AFV9ST                          WMV9ST
     I              AFWAST                          WMWAST
     I              AFX2ST                          WMX2ST
     I              AFOJDT                          WMOJDT
     I              AFNQNX                          WMNQNX
     I              AFNRNX                          WMNRNX
     I              AFI9SX                          WMI9SX
     I              AFJASX                          WMJASX
     I              AFOKDT                          WMOKDT
     I              AFOLDT                          WMOLDT
     I              AFUVST                          WMUVST
     I              AFUWST                          WMUWST
     I              AFUXST                          WMUXST
     I              AFAATM                          WMAATM
     I              AFAYNA                          WMAYNA
     I              AFA0NA                          WMA0NA
     I              AFAXDT                          WMAXDT
      *
     I@I8CPDZ
      * PS Prod Item Schedule     Co/Itm/Whs/ShpDte/Typ
      * Renamed input format fields
     I              I8AIC3                          WOAIC3
     I              I8V5ST                          WOV5ST
     I              I8ELDT                          WOELDT
     I              I8HGCD                          WOHGCD
     I              I8AJCD                          WOAJCD
     I              I8GPDT                          WOGPDT
     I              I8WTSP                          WOWTSP
     I              I8QTSP                          WOQTSP
     I              I8DJPC                          WODJPC
     I              I8F8WG                          WOF8WG
     I              I8WTIN                          WOWTIN
     I              I8D5NB                          WOD5NB
     I              I8DXWG                          WODXWG
     I              I8B2NB                          WOB2NB
     I              I8WTCN                          WOWTCN
     I              I8PSCV                          WOPSCV
     I              I8SAWT                          WOSAWT
     I              I8B9NB                          WOB9NB
     I              I8D1WG                          WOD1WG
     I              I8CBNB                          WOCBNB
     I              I8EZWG                          WOEZWG
     I              I8CCNB                          WOCCNB
     I              I8E0WG                          WOE0WG
     I              I8D6NB                          WOD6NB
     I              I8OAWT                          WOOAWT
     I              I8CDNB                          WOCDNB
     I              I8UNW2                          WOUNW2
     I              I8CENB                          WOCENB
     I              I8F9WG                          WOF9WG
     I              I8BPNB                          WOBPNB
     I              I8GAWG                          WOGAWG
     I              I8BQNB                          WOBQNB
     I              I8GBWG                          WOGBWG
     I              I8BRNB                          WOBRNB
     I              I8GCWG                          WOGCWG
     I              I8BSNB                          WOBSNB
     I              I8GDWG                          WOGDWG
     I              I8BWNB                          WOBWNB
     I              I8GEWG                          WOGEWG
     I              I8PS6U                          WOPS6U
     I              I8WCST                          WOWCST
     I              I8WPST                          WOWPST
     I              I8B5ST                          WOB5ST
     I              I8TFST                          WOTFST
     I              I8TEST                          WOTEST
     I              I8THST                          WOTHST
     I              I8UDST                          WOUDST
     I              I8UFST                          WOUFST
     I              I8UGST                          WOUGST
     I              I8UHST                          WOUHST
     I              I8B6ST                          WOB6ST
     I              I8B7ST                          WOB7ST
     I              I8DVWG                          WODVWG
     I              I8D7NB                          WOD7NB
     I              I8FCAD                          WOFCAD
     I              I8D9NB                          WOD9NB
     I              I8DWWG                          WODWWG
     I              I8EANB                          WOEANB
     I              I8SHWT                          WOSHWT
     I              I8EBNB                          WOEBNB
     I              I8AVWT                          WOAVWT
     I              I8ECNB                          WOECNB
     I              I8WTON                          WOWTON
     I              I8EDNB                          WOEDNB
     I              I8FNWT                          WOFNWT
     I              I8EENB                          WOEENB
     I              I8QTAS                          WOQTAS
     I              I8EFNB                          WOEFNB
     I              I8WAIO                          WOWAIO
     I              I8EGNB                          WOEGNB
     I              I8R3CD                          WOR3CD
     I              I8RGNB                          WORGNB
     I              I8RHNB                          WORHNB
     I              I8RINB                          WORINB
     I              I8XRCD                          WOXRCD
     I              I8UVST                          WOUVST
     I              I8UWST                          WOUWST
     I              I8UXST                          WOUXST
     I              I8VSST                          WOVSST
     I              I8AATM                          WOAATM
     I              I8AYNA                          WOAYNA
     I              I8A0NA                          WOA0NA
     I              I8AXDT                          WOAXDT
      *
     I@BGWKYG
      * Order Detail              Co/Itm/Whs/SSD(d)/Om CCC
      * Renamed input format fields
     I              OMAIC3                          WSAIC3
     I              OMC4NB                          WSC4NB
     I              OMDPNB                          WSDPNB
     I              OMUENB                          WSUENB
     I              OMHGCD                          WSHGCD
     I              OMAJCD                          WSAJCD
     I              OMBKC7                          WSBKC7
     I              OMCFC7                          WSCFC7
     I              OMGMST                          WSGMST
     I              OMGNST                          WSGNST
     I              OMMAVA                          WSMAVA
     I              OMKDVA                          WSKDVA
     I              OML8VA                          WSL8VA
     I              OML9VA                          WSL9VA
     I              OMGTST                          WSGTST
     I              OMGVST                          WSGVST
     I              OMGUST                          WSGUST
     I              OMQFST                          WSQFST
     I              OMAYVA                          WSAYVA
     I              OMEXDT                          WSEXDT
     I              OMLQCD                          WSLQCD
     I              OMRDCD                          WSRDCD
     I              OMQ7CD                          WSQ7CD
     I              OMBZPR                          WSBZPR
     I              OML6NB                          WSL6NB
     I              OMU1ST                          WSU1ST
     I              OMGIDT                          WSGIDT
     I              OMCRCD                          WSCRCD
     I              OMAGCD                          WSAGCD
     I              OMRZST                          WSRZST
     I              OMR0ST                          WSR0ST
     I              OMR1ST                          WSR1ST
     I              OMG7NA                          WSG7NA
     I              OMG8NA                          WSG8NA
     I              OMRPCD                          WSRPCD
     I              OMVEST                          WSVEST
     I              OMVGST                          WSVGST
     I              OMAVST                          WSAVST
     I              OMU0ST                          WSU0ST
     I              OMRFCD                          WSRFCD
     I              OMFZST                          WSFZST
     I              OMR1NB                          WSR1NB
     I              OMAVQT                          WSAVQT
     I              OMD0WG                          WSD0WG
     I              OMCCQT                          WSCCQT
     I              OMAUWG                          WSAUWG
     I              OMCBQT                          WSCBQT
     I              OMATWG                          WSATWG
     I              OMAQCS                          WSAQCS
     I              OMAGCS                          WSAGCS
     I              OMAKPR                          WSAKPR
     I              OMALPR                          WSALPR
     I              OMAUPR                          WSAUPR
     I              OMAVWG                          WSAVWG
     I              OMA4WG                          WSA4WG
     I              OMA5DT                          WSA5DT
     I              OMAODT                          WSAODT
     I              OMGNDT                          WSGNDT
     I              OMAMST                          WSAMST
     I              OMANST                          WSANST
     I              OMVAST                          WSVAST
     I              OMRGNB                          WSRGNB
     I              OMRHNB                          WSRHNB
     I              OMRINB                          WSRINB
     I              OMRBCD                          WSRBCD
     I              OMHICD                          WSHICD
     I              OMRNCD                          WSRNCD
     I              OMROCD                          WSROCD
     I              OMCXDT                          WSCXDT
     I              OMAJVN                          WSAJVN
     I              OMKXCD                          WSKXCD
     I              OMJPCD                          WSJPCD
     I              OMCQCD                          WSCQCD
     I              OMR4CD                          WSR4CD
     I              OMZ1ST                          WSZ1ST
     I              OMZ3ST                          WSZ3ST
     I              OMZ4ST                          WSZ4ST
     I              OMDUPR                          WSDUPR
     I              OMB6VL                          WSB6VL
     I              OMA1AA                          WSA1AA
     I              OMFZSX                          WSFZSX
     I              OMF0SX                          WSF0SX
     I              OMF1SX                          WSF1SX
     I              OMF2SX                          WSF2SX
     I              OMF3SX                          WSF3SX
     I              OMF4SX                          WSF4SX
     I              OMF5SX                          WSF5SX
     I              OMF6SX                          WSF6SX
     I              OMF7SX                          WSF7SX
     I              OMNTDT                          WSNTDT
     I              OMNUDT                          WSNUDT
     I              OMNVDT                          WSNVDT
     I              OMNWDT                          WSNWDT
     I              OMNXDT                          WSNXDT
     I              OMBUTM                          WSBUTM
     I              OMBVTM                          WSBVTM
     I              OMBWTM                          WSBWTM
     I              OMBXTM                          WSBXTM
     I              OMBYTM                          WSBYTM
     I              OMH5NX                          WSH5NX
     I              OMH6NX                          WSH6NX
     I              OMH7NX                          WSH7NX
     I              OMH8NX                          WSH8NX
     I              OMH9NX                          WSH9NX
     I              OMDVPR                          WSDVPR
     I              OMDWPR                          WSDWPR
     I              OMDXPR                          WSDXPR
     I              OMDYPR                          WSDYPR
     I              OMDZPR                          WSDZPR
     I              OMGSPR                          WSGSPR
     I              OMGTPR                          WSGTPR
     I              OMGUPR                          WSGUPR
     I              OMHOST                          WSHOST
     I              OMHPST                          WSHPST
     I              OMIOST                          WSIOST
     I              OMPEWG                          WSPEWG
     I              OMRINY                          WSRINY
     I              OMTIDT                          WSTIDT
     I              OMTJDT                          WSTJDT
     I              OMH2ST                          WSH2ST
     I              OMH0ST                          WSH0ST
     I              OMH1ST                          WSH1ST
     I              OMTKDT                          WSTKDT
     I              OMTLDT                          WSTLDT
     I              OMTMDT                          WSTMDT
     I              OMUVST                          WSUVST
     I              OMUWST                          WSUWST
     I              OMUXST                          WSUXST
     I              OMAATM                          WSAATM
     I              OMAYNA                          WSAYNA
     I              OMA0NA                          WSA0NA
     I              OMAXDT                          WSAXDT
      *
     I@BECPFK
      * Order Header TRG          Retrieval index       NV
      * Renamed input format fields
     I              BEAIC3                          WTAIC3
     I              BEC4NB                          WTC4NB
     I              BEJNCD                          WTJNCD
     I              BEANC7                          WTANC7
     I              BEBKC7                          WTBKC7
     I              BEBRTX                          WTBRTX
     I              BEHMNA                          WTHMNA
     I              BEHONA                          WTHONA
     I              BEHPNA                          WTHPNA
     I              BEHNNA                          WTHNNA
     I              BEDBCD                          WTDBCD
     I              BECKTX                          WTCKTX
     I              BEB0C7                          WTB0C7
     I              BEAETX                          WTAETX
     I              BEB1NA                          WTB1NA
     I              BEB3NA                          WTB3NA
     I              BEB4NA                          WTB4NA
     I              BEB2NA                          WTB2NA
     I              BEBHCD                          WTBHCD
     I              BEC8TX                          WTC8TX
     I              BEBCNA                          WTBCNA
     I              BEA0DT                          WTA0DT
     I              BEA5DT                          WTA5DT
     I              BEGNDT                          WTGNDT
     I              BEACDT                          WTACDT
     I              BEAQCD                          WTAQCD
     I              BEB6NA                          WTB6NA
     I              BEBYNA                          WTBYNA
     I              BEBZNA                          WTBZNA
     I              BEGTST                          WTGTST
     I              BEGVST                          WTGVST
     I              BEGUST                          WTGUST
     I              BEQFST                          WTQFST
     I              BECQCD                          WTCQCD
     I              BEGJST                          WTGJST
     I              BEGWST                          WTGWST
     I              BEGXST                          WTGXST
     I              BEGYST                          WTGYST
     I              BEAODT                          WTAODT
     I              BEAIVN                          WTAIVN
     I              BECXDT                          WTCXDT
     I              BEJZVA                          WTJZVA
     I              BEA1WG                          WTA1WG
     I              BEXIST                          WTXIST
     I              BEXJST                          WTXJST
     I              BEXKST                          WTXKST
     I              BEEIDT                          WTEIDT
     I              BEAFTM                          WTAFTM
     I              BEE8CD                          WTE8CD
     I              BEE9CD                          WTE9CD
     I              BERMNB                          WTRMNB
     I              BETBNB                          WTTBNB
     I              BER1NB                          WTR1NB
     I              BEPJST                          WTPJST
     I              BEU0ST                          WTU0ST
     I              BEU1ST                          WTU1ST
     I              BEQ2CD                          WTQ2CD
     I              BEU2ST                          WTU2ST
     I              BEVEST                          WTVEST
     I              BEVFST                          WTVFST
     I              BEVGST                          WTVGST
     I              BERPCD                          WTRPCD
     I              BERNNB                          WTRNNB
     I              BEVDST                          WTVDST
     I              BEATIN                          WTATIN
     I              BEU4ST                          WTU4ST
     I              BEU5ST                          WTU5ST
     I              BERSRN                          WTRSRN
     I              BEMHNA                          WTMHNA
     I              BEMINA                          WTMINA
     I              BEWBST                          WTWBST
     I              BER4CD                          WTR4CD
     I              BEBFCD                          WTBFCD
     I              BEQ4CD                          WTQ4CD
     I              BET3NB                          WTT3NB
     I              BESICD                          WTSICD
     I              BECONB                          WTCONB
     I              BECEST                          WTCEST
     I              BEAWDT                          WTAWDT
     I              BEJPCD                          WTJPCD
     I              BEXUST                          WTXUST
     I              BEZ1ST                          WTZ1ST
     I              BEVRVA                          WTVRVA
     I              BEOBST                          WTOBST
     I              BEBCST                          WTBCST
     I              BEBDST                          WTBDST
     I              BEB7VL                          WTB7VL
     I              BEGASX                          WTGASX
     I              BEGBSX                          WTGBSX
     I              BEGCSX                          WTGCSX
     I              BEGDSX                          WTGDSX
     I              BEFNSX                          WTFNSX
     I              BEFOSX                          WTFOSX
     I              BEFPSX                          WTFPSX
     I              BEFQSX                          WTFQSX
     I              BEFRSX                          WTFRSX
     I              BEFSSX                          WTFSSX
     I              BEFTSX                          WTFTSX
     I              BEFUSX                          WTFUSX
     I              BEFVSX                          WTFVSX
     I              BEFWSX                          WTFWSX
     I              BEFXSX                          WTFXSX
     I              BEFYSX                          WTFYSX
     I              BENODT                          WTNODT
     I              BENPDT                          WTNPDT
     I              BENQDT                          WTNQDT
     I              BENRDT                          WTNRDT
     I              BENSDT                          WTNSDT
     I              BEBPTM                          WTBPTM
     I              BEBQTM                          WTBQTM
     I              BEBRTM                          WTBRTM
     I              BEBSTM                          WTBSTM
     I              BEBTTM                          WTBTTM
     I              BEH0NX                          WTH0NX
     I              BEH1NX                          WTH1NX
     I              BEH2NX                          WTH2NX
     I              BEH3NX                          WTH3NX
     I              BEH4NX                          WTH4NX
     I              BEC0C7                          WTC0C7
     I              BEUVST                          WTUVST
     I              BEUWST                          WTUWST
     I              BEUXST                          WTUXST
     I              BEAATM                          WTAATM
     I              BEAYNA                          WTAYNA
     I              BEA0NA                          WTA0NA
     I              BEAXDT                          WTAXDT
      *
     I@AFREQ0
      * Calendar                  RSQ Co/Yr/Period/Week/Da
      * Renamed input format fields
     I              AFAIC3                          WVAIC3
     I              AFBCDT                          WVBCDT
     I              AFCQNB                          WVCQNB
     I              AFESNB                          WVESNB
     I              AFETNB                          WVETNB
     I              AFBZNB                          WVBZNB
     I              AFA9ST                          WVA9ST
     I              AFEINB                          WVEINB
     I              AFC5ST                          WVC5ST
     I              AFAQNB                          WVAQNB
     I              AFCMST                          WVCMST
     I              AFV9ST                          WVV9ST
     I              AFWAST                          WVWAST
     I              AFX2ST                          WVX2ST
     I              AFOJDT                          WVOJDT
     I              AFNQNX                          WVNQNX
     I              AFNRNX                          WVNRNX
     I              AFI9SX                          WVI9SX
     I              AFJASX                          WVJASX
     I              AFOKDT                          WVOKDT
     I              AFOLDT                          WVOLDT
     I              AFUVST                          WVUVST
     I              AFUWST                          WVUWST
     I              AFUXST                          WVUXST
     I              AFAATM                          WVAATM
     I              AFAYNA                          WVAYNA
     I              AFA0NA                          WVA0NA
     I              AFAXDT                          WVAXDT
      *
     I@KNCPHO
      * Order Detail Schedule     Retrieval index
      * Renamed input format fields
     I              KNAIC3                          WWAIC3
     I              KNC4NB                          WWC4NB
     I              KNDPNB                          WWDPNB
     I              KNUENB                          WWUENB
     I              KNJGDT                          WWJGDT
     I              KNAODT                          WWAODT
     I              KNAJCD                          WWAJCD
     I              KNAYAA                          WWAYAA
     I              KNHGCD                          WWHGCD
     I              KNIGQT                          WWIGQT
     I              KNFLWG                          WWFLWG
     I              KNIUQT                          WWIUQT
     I              KNF3WG                          WWF3WG
     I              KNIVQT                          WWIVQT
     I              KNF4WG                          WWF4WG
     I              KNP7ST                          WWP7ST
     I              KNP8ST                          WWP8ST
     I              KNQAST                          WWQAST
     I              KNUVST                          WWUVST
     I              KNUWST                          WWUWST
     I              KNUXST                          WWUXST
     I              KNVSST                          WWVSST
     I              KNAATM                          WWAATM
     I              KNAYNA                          WWAYNA
     I              KNA0NA                          WWA0NA
     I              KNAXDT                          WWAXDT
      *
     I@KNCPZ7
      * Order Detail Schedule     Co/Item/Whse/SchdDte
      * Renamed input format fields
     I              KNAIC3                          WXAIC3
     I              KNC4NB                          WXC4NB
     I              KNDPNB                          WXDPNB
     I              KNUENB                          WXUENB
     I              KNJGDT                          WXJGDT
     I              KNAODT                          WXAODT
     I              KNAJCD                          WXAJCD
     I              KNAYAA                          WXAYAA
     I              KNHGCD                          WXHGCD
     I              KNIGQT                          WXIGQT
     I              KNFLWG                          WXFLWG
     I              KNIUQT                          WXIUQT
     I              KNF3WG                          WXF3WG
     I              KNIVQT                          WXIVQT
     I              KNF4WG                          WXF4WG
     I              KNP7ST                          WXP7ST
     I              KNP8ST                          WXP8ST
     I              KNQAST                          WXQAST
     I              KNUVST                          WXUVST
     I              KNUWST                          WXUWST
     I              KNUXST                          WXUXST
     I              KNVSST                          WXVSST
     I              KNAATM                          WXAATM
     I              KNAYNA                          WXAYNA
     I              KNA0NA                          WXA0NA
     I              KNAXDT                          WXAXDT
      *
     I@KNCPHN
      * Order Detail Schedule     Update index
      * Renamed input format fields
     I              KNAIC3                          WYAIC3
     I              KNC4NB                          WYC4NB
     I              KNDPNB                          WYDPNB
     I              KNUENB                          WYUENB
     I              KNJGDT                          WYJGDT
     I              KNAODT                          WYAODT
     I              KNAJCD                          WYAJCD
     I              KNAYAA                          WYAYAA
     I              KNHGCD                          WYHGCD
     I              KNIGQT                          WYIGQT
     I              KNFLWG                          WYFLWG
     I              KNIUQT                          WYIUQT
     I              KNF3WG                          WYF3WG
     I              KNIVQT                          WYIVQT
     I              KNF4WG                          WYF4WG
     I              KNP7ST                          WYP7ST
     I              KNP8ST                          WYP8ST
     I              KNQAST                          WYQAST
     I              KNUVST                          WYUVST
     I              KNUWST                          WYUWST
     I              KNUXST                          WYUXST
     I              KNVSST                          WYVSST
     I              KNAATM                          WYAATM
     I              KNAYNA                          WYAYNA
     I              KNA0NA                          WYA0NA
     I              KNAXDT                          WYAXDT
      *
     I@BFCPY2
      * Order Header TRG          Ord-D/Co
      * Renamed input format fields
     I              BEAIC3                          TAAIC3
     I              BEC4NB                          TAC4NB
     I              BEJNCD                          TAJNCD
     I              BEANC7                          TAANC7
     I              BEBKC7                          TABKC7
     I              BEBRTX                          TABRTX
     I              BEHMNA                          TAHMNA
     I              BEHONA                          TAHONA
     I              BEHPNA                          TAHPNA
     I              BEHNNA                          TAHNNA
     I              BEDBCD                          TADBCD
     I              BECKTX                          TACKTX
     I              BEB0C7                          TAB0C7
     I              BEAETX                          TAAETX
     I              BEB1NA                          TAB1NA
     I              BEB3NA                          TAB3NA
     I              BEB4NA                          TAB4NA
     I              BEB2NA                          TAB2NA
     I              BEBHCD                          TABHCD
     I              BEC8TX                          TAC8TX
     I              BEBCNA                          TABCNA
     I              BEA0DT                          TAA0DT
     I              BEA5DT                          TAA5DT
     I              BEGNDT                          TAGNDT
     I              BEACDT                          TAACDT
     I              BEAQCD                          TAAQCD
     I              BEB6NA                          TAB6NA
     I              BEBYNA                          TABYNA
     I              BEBZNA                          TABZNA
     I              BEGTST                          TAGTST
     I              BEGVST                          TAGVST
     I              BEGUST                          TAGUST
     I              BEQFST                          TAQFST
     I              BECQCD                          TACQCD
     I              BEGJST                          TAGJST
     I              BEGWST                          TAGWST
     I              BEGXST                          TAGXST
     I              BEGYST                          TAGYST
     I              BEAODT                          TAAODT
     I              BEAIVN                          TAAIVN
     I              BECXDT                          TACXDT
     I              BEJZVA                          TAJZVA
     I              BEA1WG                          TAA1WG
     I              BEXIST                          TAXIST
     I              BEXJST                          TAXJST
     I              BEXKST                          TAXKST
     I              BEEIDT                          TAEIDT
     I              BEAFTM                          TAAFTM
     I              BEE8CD                          TAE8CD
     I              BEE9CD                          TAE9CD
     I              BERMNB                          TARMNB
     I              BETBNB                          TATBNB
     I              BER1NB                          TAR1NB
     I              BEPJST                          TAPJST
     I              BEU0ST                          TAU0ST
     I              BEU1ST                          TAU1ST
     I              BEQ2CD                          TAQ2CD
     I              BEU2ST                          TAU2ST
     I              BEVEST                          TAVEST
     I              BEVFST                          TAVFST
     I              BEVGST                          TAVGST
     I              BERPCD                          TARPCD
     I              BERNNB                          TARNNB
     I              BEVDST                          TAVDST
     I              BEATIN                          TAATIN
     I              BEU4ST                          TAU4ST
     I              BEU5ST                          TAU5ST
     I              BERSRN                          TARSRN
     I              BEMHNA                          TAMHNA
     I              BEMINA                          TAMINA
     I              BEWBST                          TAWBST
     I              BER4CD                          TAR4CD
     I              BEBFCD                          TABFCD
     I              BEQ4CD                          TAQ4CD
     I              BET3NB                          TAT3NB
     I              BESICD                          TASICD
     I              BECONB                          TACONB
     I              BECEST                          TACEST
     I              BEAWDT                          TAAWDT
     I              BEJPCD                          TAJPCD
     I              BEXUST                          TAXUST
     I              BEZ1ST                          TAZ1ST
     I              BEVRVA                          TAVRVA
     I              BEOBST                          TAOBST
     I              BEBCST                          TABCST
     I              BEBDST                          TABDST
     I              BEB7VL                          TAB7VL
     I              BEGASX                          TAGASX
     I              BEGBSX                          TAGBSX
     I              BEGCSX                          TAGCSX
     I              BEGDSX                          TAGDSX
     I              BEFNSX                          TAFNSX
     I              BEFOSX                          TAFOSX
     I              BEFPSX                          TAFPSX
     I              BEFQSX                          TAFQSX
     I              BEFRSX                          TAFRSX
     I              BEFSSX                          TAFSSX
     I              BEFTSX                          TAFTSX
     I              BEFUSX                          TAFUSX
     I              BEFVSX                          TAFVSX
     I              BEFWSX                          TAFWSX
     I              BEFXSX                          TAFXSX
     I              BEFYSX                          TAFYSX
     I              BENODT                          TANODT
     I              BENPDT                          TANPDT
     I              BENQDT                          TANQDT
     I              BENRDT                          TANRDT
     I              BENSDT                          TANSDT
     I              BEBPTM                          TABPTM
     I              BEBQTM                          TABQTM
     I              BEBRTM                          TABRTM
     I              BEBSTM                          TABSTM
     I              BEBTTM                          TABTTM
     I              BEH0NX                          TAH0NX
     I              BEH1NX                          TAH1NX
     I              BEH2NX                          TAH2NX
     I              BEH3NX                          TAH3NX
     I              BEH4NX                          TAH4NX
     I              BEC0C7                          TAC0C7
     I              BEUVST                          TAUVST
     I              BEUWST                          TAUWST
     I              BEUXST                          TAUXST
     I              BEAATM                          TAAATM
     I              BEAYNA                          TAAYNA
     I              BEA0NA                          TAA0NA
     I              BEAXDT                          TAAXDT
      *
     I@B6CPAG
      * Order Detail Sched-Consmd Co/Ord/PrdDt/Cns/Itm/Seq
      * Renamed input format fields
     I              B6AIC3                          TBAIC3
     I              B6C4NB                          TBC4NB
     I              B6DPNB                          TBDPNB
     I              B6UENB                          TBUENB
     I              B6JGDT                          TBJGDT
     I              B6OONY                          TBOONY
     I              B6AODT                          TBAODT
     I              B6AJCD                          TBAJCD
     I              B6NUDT                          TBNUDT
     I              B6HGCD                          TBHGCD
     I              B6IGQT                          TBIGQT
     I              B6FLWG                          TBFLWG
     I              B6NSQT                          TBNSQT
     I              B6JQWG                          TBJQWG
     I              B6NVDT                          TBNVDT
     I              B6BUTM                          TBBUTM
     I              B6UVST                          TBUVST
     I              B6UWST                          TBUWST
     I              B6UXST                          TBUXST
     I              B6VSST                          TBVSST
     I              B6AATM                          TBAATM
     I              B6AYNA                          TBAYNA
     I              B6A0NA                          TBA0NA
     I              B6AXDT                          TBAXDT
      *
     I@B6CPNB
      * Order Detail Sched-Consmd Retrieval index
      * Renamed input format fields
     I              B6AIC3                          TCAIC3
     I              B6C4NB                          TCC4NB
     I              B6DPNB                          TCDPNB
     I              B6UENB                          TCUENB
     I              B6JGDT                          TCJGDT
     I              B6OONY                          TCOONY
     I              B6AODT                          TCAODT
     I              B6AJCD                          TCAJCD
     I              B6NUDT                          TCNUDT
     I              B6HGCD                          TCHGCD
     I              B6IGQT                          TCIGQT
     I              B6FLWG                          TCFLWG
     I              B6NSQT                          TCNSQT
     I              B6JQWG                          TCJQWG
     I              B6NVDT                          TCNVDT
     I              B6BUTM                          TCBUTM
     I              B6UVST                          TCUVST
     I              B6UWST                          TCUWST
     I              B6UXST                          TCUXST
     I              B6VSST                          TCVSST
     I              B6AATM                          TCAATM
     I              B6AYNA                          TCAYNA
     I              B6A0NA                          TCA0NA
     I              B6AXDT                          TCAXDT
      *
     I@B6CPNA
      * Order Detail Sched-Consmd Update index
      * Renamed input format fields
     I              B6AIC3                          TDAIC3
     I              B6C4NB                          TDC4NB
     I              B6DPNB                          TDDPNB
     I              B6UENB                          TDUENB
     I              B6JGDT                          TDJGDT
     I              B6OONY                          TDOONY
     I              B6AODT                          TDAODT
     I              B6AJCD                          TDAJCD
     I              B6NUDT                          TDNUDT
     I              B6HGCD                          TDHGCD
     I              B6IGQT                          TDIGQT
     I              B6FLWG                          TDFLWG
     I              B6NSQT                          TDNSQT
     I              B6JQWG                          TDJQWG
     I              B6NVDT                          TDNVDT
     I              B6BUTM                          TDBUTM
     I              B6UVST                          TDUVST
     I              B6UWST                          TDUWST
     I              B6UXST                          TDUXST
     I              B6VSST                          TDVSST
     I              B6AATM                          TDAATM
     I              B6AYNA                          TDAYNA
     I              B6A0NA                          TDA0NA
     I              B6AXDT                          TDAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IQPDI81    E DSPDI8CPL0
      * UPD : PS Prod Item Schedule     Update index
      * Renamed input format fields
     I              I8AIC3                          WEAIC3
     I              I8V5ST                          WEV5ST
     I              I8ELDT                          WEELDT
     I              I8HGCD                          WEHGCD
     I              I8AJCD                          WEAJCD
     I              I8GPDT                          WEGPDT
     I              I8WTSP                          WEWTSP
     I              I8QTSP                          WEQTSP
     I              I8DJPC                          WEDJPC
     I              I8F8WG                          WEF8WG
     I              I8WTIN                          WEWTIN
     I              I8D5NB                          WED5NB
     I              I8DXWG                          WEDXWG
     I              I8B2NB                          WEB2NB
     I              I8WTCN                          WEWTCN
     I              I8PSCV                          WEPSCV
     I              I8SAWT                          WESAWT
     I              I8B9NB                          WEB9NB
     I              I8D1WG                          WED1WG
     I              I8CBNB                          WECBNB
     I              I8EZWG                          WEEZWG
     I              I8CCNB                          WECCNB
     I              I8E0WG                          WEE0WG
     I              I8D6NB                          WED6NB
     I              I8OAWT                          WEOAWT
     I              I8CDNB                          WECDNB
     I              I8UNW2                          WEUNW2
     I              I8CENB                          WECENB
     I              I8F9WG                          WEF9WG
     I              I8BPNB                          WEBPNB
     I              I8GAWG                          WEGAWG
     I              I8BQNB                          WEBQNB
     I              I8GBWG                          WEGBWG
     I              I8BRNB                          WEBRNB
     I              I8GCWG                          WEGCWG
     I              I8BSNB                          WEBSNB
     I              I8GDWG                          WEGDWG
     I              I8BWNB                          WEBWNB
     I              I8GEWG                          WEGEWG
     I              I8PS6U                          WEPS6U
     I              I8WCST                          WEWCST
     I              I8WPST                          WEWPST
     I              I8B5ST                          WEB5ST
     I              I8TFST                          WETFST
     I              I8TEST                          WETEST
     I              I8THST                          WETHST
     I              I8UDST                          WEUDST
     I              I8UFST                          WEUFST
     I              I8UGST                          WEUGST
     I              I8UHST                          WEUHST
     I              I8B6ST                          WEB6ST
     I              I8B7ST                          WEB7ST
     I              I8DVWG                          WEDVWG
     I              I8D7NB                          WED7NB
     I              I8FCAD                          WEFCAD
     I              I8D9NB                          WED9NB
     I              I8DWWG                          WEDWWG
     I              I8EANB                          WEEANB
     I              I8SHWT                          WESHWT
     I              I8EBNB                          WEEBNB
     I              I8AVWT                          WEAVWT
     I              I8ECNB                          WEECNB
     I              I8WTON                          WEWTON
     I              I8EDNB                          WEEDNB
     I              I8FNWT                          WEFNWT
     I              I8EENB                          WEEENB
     I              I8QTAS                          WEQTAS
     I              I8EFNB                          WEEFNB
     I              I8WAIO                          WEWAIO
     I              I8EGNB                          WEEGNB
     I              I8R3CD                          WER3CD
     I              I8RGNB                          WERGNB
     I              I8RHNB                          WERHNB
     I              I8RINB                          WERINB
     I              I8XRCD                          WEXRCD
     I              I8UVST                          WEUVST
     I              I8UWST                          WEUWST
     I              I8UXST                          WEUXST
     I              I8VSST                          WEVSST
     I              I8AATM                          WEAATM
     I              I8AYNA                          WEAYNA
     I              I8A0NA                          WEA0NA
     I              I8AXDT                          WEAXDT
      *
     IYARDCS      DS                            326
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
     IYBRDCS      DS                            326
     IYD01        DS
     I                                        1   70YI0101
     I                                        8  120YI01
      *
     IYM01        DS                        100
     I                                        1   70WRJODT
     I                                        8  140WRGXDT
     I                                       15  201WRQINV
     I                                       21  261WRWPRD
     I                                       27  321WRQSSH
     I                                       33  381WRWSLS
     I                                       39  441WRQAVL
     I                                       45  45 WRG2SX
      *
     IYW01        DS
     I                                        1   70XAJODT
     I                                        8  140XAGXDT
     I                                       15  201XAQINV
     I                                       21  261XAWPRD
     I                                       27  321XAQSSH
     I                                       33  381XAWSLS
     I                                       39  441XAQAVL
     I                                       45  45 XAG2SX
      *
     IQPDKN1    E DSPDKNCPL0
      * UPD : Order Detail Schedule     Update index
      * Renamed input format fields
     I              KNAIC3                          WYAIC3
     I              KNC4NB                          WYC4NB
     I              KNDPNB                          WYDPNB
     I              KNUENB                          WYUENB
     I              KNJGDT                          WYJGDT
     I              KNAODT                          WYAODT
     I              KNAJCD                          WYAJCD
     I              KNAYAA                          WYAYAA
     I              KNHGCD                          WYHGCD
     I              KNIGQT                          WYIGQT
     I              KNFLWG                          WYFLWG
     I              KNIUQT                          WYIUQT
     I              KNF3WG                          WYF3WG
     I              KNIVQT                          WYIVQT
     I              KNF4WG                          WYF4WG
     I              KNP7ST                          WYP7ST
     I              KNP8ST                          WYP8ST
     I              KNQAST                          WYQAST
     I              KNUVST                          WYUVST
     I              KNUWST                          WYUWST
     I              KNUXST                          WYUXST
     I              KNVSST                          WYVSST
     I              KNAATM                          WYAATM
     I              KNAYNA                          WYAYNA
     I              KNA0NA                          WYA0NA
     I              KNAXDT                          WYAXDT
      *
     IYCRDCS      DS                            100
     IYDRDCS      DS                            326
     IQPOB61    E DSPOB6CPL0
      * UPD : Order Detail Sched-Consmd Update index
      * Renamed input format fields
     I              B6AIC3                          TDAIC3
     I              B6C4NB                          TDC4NB
     I              B6DPNB                          TDDPNB
     I              B6UENB                          TDUENB
     I              B6JGDT                          TDJGDT
     I              B6OONY                          TDOONY
     I              B6AODT                          TDAODT
     I              B6AJCD                          TDAJCD
     I              B6NUDT                          TDNUDT
     I              B6HGCD                          TDHGCD
     I              B6IGQT                          TDIGQT
     I              B6FLWG                          TDFLWG
     I              B6NSQT                          TDNSQT
     I              B6JQWG                          TDJQWG
     I              B6NVDT                          TDNVDT
     I              B6BUTM                          TDBUTM
     I              B6UVST                          TDUVST
     I              B6UWST                          TDUWST
     I              B6UXST                          TDUXST
     I              B6VSST                          TDVSST
     I              B6AATM                          TDAATM
     I              B6AYNA                          TDAYNA
     I              B6A0NA                          TDA0NA
     I              B6AXDT                          TDAXDT
      *
     IYERDCS      DS                             91
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * I :  Company Number
     I                                    P   1   20P1AIC3
      * I :  Production Date
     I                                    P   3   60P1ELDT
      * I :  Item Code
     I                                    P   7  100P1HGCD
      * I :  Warehouse Code
     I                                       11  13 P1AJCD
      * I :  PS Adjustment Quantity
     I                                    P  14  160P1PIAD
      * I :  ATS Adj Type USR
     I                                       17  18 P1ZLST
      * N :  PSAA Program Name
     I                                       19  28 P1BXVN
      * N :  Unit Weight
     I                                    P  29  342P1AIWG
      * N :  PSAA Weight Adjusted
     I                                    P  35  402P1EWWG
      * N :  PSAA Quantity Adjusted
     I                                    P  41  462P1H4QT
      * I :  Production Type
     I                                       47  47 P1V5ST
      * N :  Production Yield
     I                                    P  48  502P1BPPR
      * N :  Record Found USR
     I                                       51  51 P1WXST
      * N :  Percent 7.4 USR
     I                                    P  52  554P1D4PC
      * N :  Weight UPS USR
     I                                    P  56  602P1WTUP
      * I :  PS Adjustment Number
     I                                    P  61  630P1PSAN
      * O :  Return Code ATS USR
     I                                       64  66 P1RCAU
     IP2PARM      DS
      * FLD: Company Item
      * N :  UOM Primary
     I                                        1   2 P2ADCD
      * N :  Fresh Chilling Time
     I                                    P   3   52P2CHTM
      * N :  Piece Count Item
     I                                        6   6 P2PCCT
      * N :  Pieces Per Bag
     I                                    P   7  100P2BDNB
      * N :  Bags Per Unit
     I                                    P  11  140P2BJNB
     IP3PARM      DS
      * N :  Pieces Adjusted
     I                                    P   1   40P3PIAJ
     IP4PARM      DS
      * FLD: Warehouse
      * N :  Warehouse Type
     I                                        1   2 P4WPST
      * N :  Warehouse Std Chill Time
     I                                        3   3 P4T1ST
      * N :  Warehouse Chill Time
     I                                    P   4   62P4DBNB
     IP5PARM      DS
      * N :  ATS Adj Type USR 2
     I                                        1   2 P5QJST
     IP6PARM      DS
      * N :  Chilling Time USR
     I                                    P   1   32P6CHMT
     IP7PARM      DS
      * FLD: *Arrays
      * N :  ATS Weight Available USR
     I                                    P   1   62P7EOWG
      * N :  ATS Pieces Available USR
     I                                    P   7  100P7EWNB
     IP8PARM      DS
      * N :  PS Avg Piece Wgt
     I                                    P   1   52P8F8WG
     IP9PARM      DS
      * N :  Pieces Adjusted  USR
     I                                    P   1   40P9PAUS
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1ELDT    PARM           WP0002  70       Production Date
     C           P1HGCD    PARM           WP0003  70       Item Code
     C           P1AJCD    PARM           WP0004  3        Warehouse Code
     C           P1PIAD    PARM           WP0005  50       PS Adjustment Q
     C           P1ZLST    PARM           WP0006  2        ATS Adj Type US
     C           P1V5ST    PARM           WP0007  1        Production Type
     C           P1PSAN    PARM           WP0008  50       PS Adjustment N
     C           P1RCAU    PARM P1RCAU    WP0009  3        Return Code ATS
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * UPD Avail-To-Sell  SCH XF
      * ***** Change Log and comments
     C                     EXSR UASUBR                     ***** Change Lo
      * BPS Setup Item Info   IF
      *
     C                     Z-ADD*ZERO     WN0001 155       System Value Nu
      *
      * UPS Rtv Company/Item  IF
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0001           Company Number
     C                     Z-ADDP1HGCD    WL0002           Item Code
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    WUAVNA    P      Description Lin
     C                     MOVELWL0004    WUADCD    P      UOM Primary
     C                     Z-ADDWL0005    P1AIWG           Unit Weight
     C                     Z-ADDWL0006    WURINB           Item Structure
     C                     Z-ADDWL0007    WURHNB           Item Structure
     C                     Z-ADDWL0008    WURGNB           Item Structure
     C                     MOVELWL0009    WUN0CD    P      Item Type Code
     C                     MOVELWL0010    WUQ1CD    P      Default Warehou
     C                     Z-ADDWL0011    P2CHTM           Fresh Chilling
     C                     MOVELWL0012    WUQZCD    P      Base_Conv_Loss
     C                     MOVELWL0013    WUXWST    P      Variety_Rendere
     C                     MOVELWL0014    WUVMST    P      Credit Item Sta
     C                     Z-ADDWL0015    WUSWGH           Std Weight_Head
     C                     Z-ADDWL0016    WUPPHE           Pieces Per Head
     C                     MOVELWL0017    WUR3CD    P      Department Code
     C                     MOVELWL0018    WUSDCD    P      Group for Packa
     C                     MOVELWL0019    WUX5ST    P      Seconds Item
     C                     MOVELWL0020    P2PCCT    P      Piece Count Ite
     C                     Z-ADDWL0021    P2BDNB           Pieces Per Bag
     C                     Z-ADDWL0022    P2BJNB           Bags Per Unit
     C                     MOVELWL0023    WUSUST    P      Export_Domestic
     C                     MOVELWL0024    WUSVST    P      Print On Schedu
     C                     MOVELWL0025    WUSYST    P      Fresh Inv Alloc
     C                     MOVELWL0026    WUSZST    P      Fresh Sched As
     C                     MOVELWL0027    WUS1ST    P      Frozen Inv Allo
     C                     MOVELWL0028    WUXRCD    P      Primal Group Co
      * BPS Rtv Whs Info      RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP1AJCD    WL0029    P      Warehouse Code
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0030    WUWPST    P      Warehouse Type
     C                     MOVELWL0031    WUXUST    P      Trans Contol AS
     C                     MOVELWL0032    WUT0ST    P      Warehouse Locat
     C                     MOVELWL0033    P4T1ST    P      Warehouse Std C
     C                     Z-ADDWL0034    P4DBNB           Warehouse Chill
      * BPS Set Up Item Id    IF
      * CASE: PAR.Item Type Code is Raw Materials
     C           WUN0CD    IFEQ 'RM'                       *IF
     C                     MOVEL'RMB'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Seconds Item is Yes
     C           WUX5ST    IFEQ 'Y'                        *IF
     C                     MOVEL'FSC'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Variety/Rendered/Cut is Variety
     C           WUXWST    IFEQ 'V'                        *IF
     C                     MOVEL'FVR'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Variety/Rendered/Cut is Rendered
     C           WUXWST    IFEQ 'R'                        *IF
     C                     MOVEL'FRD'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Variety/Rendered/Cut is Cut
     C           WUXWST    IFEQ 'C'                        *IF
      * Base/Converted/Fabricated
      * CASE: PAR.Credit Item Status is yes
     C           WUVMST    IFEQ 'Y'                        *IF
      * Setup Base/Converted/Fabricated Credit
      * CASE: PAR.Converted/Base Item is Base
     C           WUQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'FBC'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Converted
     C           WUQZCD    IFEQ 'C'                        *IF
     C                     MOVEL'FCC'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Fabricated
     C           WUQZCD    IFEQ 'F'                        *IF
     C                     MOVEL'FFC'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Loss
     C           WUQZCD    IFEQ 'L'                        *IF
     C                     MOVEL'FLC'     WUWCST           PS Item Id
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup Base/Converted/Fabricated
      * CASE: PAR.Converted/Base Item is Base
     C           WUQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'FGB'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Converted
     C           WUQZCD    IFEQ 'C'                        *IF
     C                     MOVEL'FCV'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Fabricated
     C           WUQZCD    IFEQ 'F'                        *IF
     C                     MOVEL'FFB'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Loss
     C           WUQZCD    IFEQ 'L'                        *IF
     C                     MOVEL'FLS'     WUWCST           PS Item Id
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDP1PIAD    P1H4QT           PSAA Quantity A
     C           P1PIAD    MULT P1AIWG    P1EWWG           PSAA Weight Adj
      * Pieces Adjusted
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Adjusted
      * PAR.Pieces Adjusted =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.PSAA Quantity Adjusted
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           P1H4QT    MULT P2BDNB    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    P3PIAJ           Pieces Adjusted
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     P3PIAJ           Pieces Adjusted
     C                     END                             *FI
      * Rtv Item Prd Yld SWYG RT - Item Bill Of Material  * 
     C                     EXSR SCRVGN
      * CASE: PAR.ATS Adj Type USR is Schedule Adjust No BOM
     C           P1ZLST    IFEQ 'SB'                       *IF
      * 04/08/08 PKD This is only applicable when the Production
      *              is adjusted on the Order Detail Schedule
      * UPD Schedule Adj      RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0035           Company Number
     C                     MOVELP1V5ST    WL0036    P      Production Type
     C                     Z-ADDP1ELDT    WL0037           Production Date
     C                     Z-ADDP1HGCD    WL0038           Item Code
     C                     MOVELP1AJCD    WL0039    P      Warehouse Code
     C                     Z-ADDP1EWWG    WL0040           PS Weight Prod
     C                     Z-ADDP3PIAJ    WL0041           PS Pieces Prod
     C                     MOVELP1ZLST    WL0042    P      ATS Adj Type US
     C                     EXSR SDRVGN
     C                     ELSE
      * CASE: PAR.ATS Adj Type USR is Schedule Override
     C           P1ZLST    IFEQ 'SV'                       *IF
      * UPD Schedule Adj      RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0035           Company Number
     C                     MOVELP1V5ST    WL0036    P      Production Type
     C                     Z-ADDP1ELDT    WL0037           Production Date
     C                     Z-ADDP1HGCD    WL0038           Item Code
     C                     MOVELP1AJCD    WL0039    P      Warehouse Code
     C                     Z-ADDP1EWWG    WL0040           PS Weight Prod
     C                     Z-ADDP3PIAJ    WL0041           PS Pieces Prod
     C                     MOVELP1ZLST    WL0042    P      ATS Adj Type US
     C                     EXSR SDRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * Allocate standard and add adjustment to item
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Record Found USR is Record Not Found
      *   |- c2    : PAR.Production Yield is LE Zero
      *   '-
     C           P1WXST    IFEQ 'N'                        *IF
     C           P1BPPR    ORLE *ZERO                      *OR
      * UPD Schedule Adj      RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0035           Company Number
     C                     MOVELP1V5ST    WL0036    P      Production Type
     C                     Z-ADDP1ELDT    WL0037           Production Date
     C                     Z-ADDP1HGCD    WL0038           Item Code
     C                     MOVELP1AJCD    WL0039    P      Warehouse Code
     C                     Z-ADDP1EWWG    WL0040           PS Weight Prod
     C                     Z-ADDP3PIAJ    WL0041           PS Pieces Prod
     C                     MOVELP1ZLST    WL0042    P      ATS Adj Type US
     C                     EXSR SDRVGN
     C                     MOVEL'BNF'     P1RCAU           Return Code ATS
     C                     ELSE
      * CASE: *OTHERWISE
      * Weight Need
      * PAR.Weight UPS USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.PSAA Weight Adjusted
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Production Yield
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           P1BPPR    DIV  100       W0WB01    H      *Synon (15,5) w
     C           P1EWWG    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    P1WTUP           Weight UPS USR
      * If piece count item check piece deallocate/allocate, else weight
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Setup allocate or deallocate for item.
      * CASE: PAR.Pieces Adjusted is GT Zero
     C           P3PIAJ    IFGT *ZERO                      *IF
     C                     MOVEL'OA'      P5QJST           ATS Adj Type US
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'OD'      P5QJST           ATS Adj Type US
     C           P3PIAJ    MULT -1        WUPIAJ           Pieces Adjusted
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P4T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP4DBNB    P6CHMT           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    P6CHMT           Chilling Time U
     C                     END                             *FI
      * Rtv AvgPcWgt/Prd/PrdAl RT - PS Prod Item Schedule  * 
     C                     EXSR SJRVGN
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.ATS Pieces Available USR LT WRK.Pieces Adjusted
      *   |- c2    : PAR.ATS Pieces Available USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P7EWNB    IFLT WUPIAJ                     *IF
     C           P7EWNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           P7EWNB    MULT -1        P3PIAJ           Pieces Adjusted
     C           P3PIAJ    MULT P8F8WG    P1WTUP           Weight UPS USR
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup allocate or deallocate for item.
      * CASE: PAR.Weight UPS USR is GT Zero
     C           P1WTUP    IFGT *ZERO                      *IF
     C                     MOVEL'OA'      P5QJST           ATS Adj Type US
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'OD'      P5QJST           ATS Adj Type US
     C                     END                             *FI
     C                     END                             *FI
      * If Deallocate and no production then don't deallocate
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.ATS Adj Type USR 2 is Order Deallocate
      *   |- c2    : PAR.ATS Pieces Available USR is LE Zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P5QJST    IFEQ 'OD'                       *IF
     C           P7EWNB    IFLE *ZERO                      *IF
     C           P2PCCT    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP3PIAJ    P9PAUS           Pieces Adjusted
      * ** 06/24/2014 JJH E3160 - Logic changed in this function to
      * ** only process Item Bill of Material records with Upd Standard
      * ** Production = Blank(Yes).
      * Upd Alloc Std for Adj  RT - Item Bill Of Material  * 
     C                     EXSR SKRVGN
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         NARVGN    BEGSR
      *================================================================
      * RTV Company for Ord   RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN TAC4NB    WQNA01           Order Number
      * Define keylist
     C           KRSNA     KLIST
     C                     KFLD           WQNA01           Order Number
      * Setup key
     C                     Z-ADDWL0248    WQNA01           Order Number
      * Establish starting position
     C           KRSNA     SETLL@BFCPY2                    *
     C           KRSNA     READE@BFCPY2                  90*
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDTAAIC3    WL0247           Company Number
     C           KRSNA     READE@BFCPY2                  90*
     C                     ENDDO
      *================================================================
     CSR         NAEXIT    ENDSR
      /EJECT
     CSR         NBRVGN    BEGSR
      *================================================================
      * Rtv Next Seq for Ord/ItRT - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD0         WL0254           ODS Sequence Nu
      * Declare restrictor key work fields
     C           *LIKE     DEFN TBAIC3    WQNB01           Company Number
     C           *LIKE     DEFN TBC4NB    WQNB02           Order Number
     C           *LIKE     DEFN TBDPNB    WQNB03           Order Sequence
     C           *LIKE     DEFN TBUENB    WQNB04           Order Secondary
     C           *LIKE     DEFN TBJGDT    WQNB05           OD Production D
     C           *LIKE     DEFN TBNUDT    WQNB06           Consumed Item C
     C           *LIKE     DEFN TBHGCD    WQNB07           Item Code
      * Define keylist
     C           KRSNB     KLIST
     C                     KFLD           WQNB01           Company Number
     C                     KFLD           WQNB02           Order Number
     C                     KFLD           WQNB03           Order Sequence
     C                     KFLD           WQNB04           Order Secondary
     C                     KFLD           WQNB05           OD Production D
     C                     KFLD           WQNB06           Consumed Item C
     C                     KFLD           WQNB07           Item Code
      * Setup key
     C                     Z-ADDWL0249    WQNB01           Company Number
     C                     Z-ADDWL0250    WQNB02           Order Number
     C                     Z-ADDWL0251    WQNB03           Order Sequence
     C                     Z-ADDWL0252    WQNB04           Order Secondary
     C                     Z-ADDWL0253    WQNB05           OD Production D
     C                     Z-ADDWL0255    WQNB06           Consumed Item C
     C                     Z-ADDWL0256    WQNB07           Item Code
      * Establish starting position
     C           KRSNB     SETLL@B6CPAG                    *
     C           KRSNB     READE@B6CPAG                  90*
      * Data record not found
     C   90                MOVEL'USR3152' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDTBOONY    WL0254           ODS Sequence Nu
     C           KRSNB     READE@B6CPAG                  90*
     C                     ENDDO
      *================================================================
     CSR         NBEXIT    ENDSR
      /EJECT
     CSR         NCRVGN    BEGSR
      *================================================================
      * Rtv Next Seq for Key  RT - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0262           ODS Sequence Nu
      * Declare restrictor key work fields
     C           *LIKE     DEFN TCAIC3    WQNC01           Company Number
     C           *LIKE     DEFN TCC4NB    WQNC02           Order Number
     C           *LIKE     DEFN TCDPNB    WQNC03           Order Sequence
     C           *LIKE     DEFN TCUENB    WQNC04           Order Secondary
     C           *LIKE     DEFN TCJGDT    WQNC05           OD Production D
      * Define keylist
     C           KRSNC     KLIST
     C                     KFLD           WQNC01           Company Number
     C                     KFLD           WQNC02           Order Number
     C                     KFLD           WQNC03           Order Sequence
     C                     KFLD           WQNC04           Order Secondary
     C                     KFLD           WQNC05           OD Production D
      * Setup key
     C                     Z-ADDWL0257    WQNC01           Company Number
     C                     Z-ADDWL0258    WQNC02           Order Number
     C                     Z-ADDWL0259    WQNC03           Order Sequence
     C                     Z-ADDWL0260    WQNC04           Order Secondary
     C                     Z-ADDWL0261    WQNC05           OD Production D
      * Establish starting position
     C           KRSNC     SETLL@B6CPNB                    *
     C           KRSNC     READE@B6CPNB                  90*
      * Data record not found
     C   90                MOVEL'USR3152' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDTCOONY    WL0262           ODS Sequence Nu
     C           KRSNC     READE@B6CPNB                  90*
     C                     ENDDO
      * USER: Exit processing
     C                     ADD  1         WL0262           ODS Sequence Nu
      *================================================================
     CSR         NCEXIT    ENDSR
      /EJECT
     CSR         NDRVGN    BEGSR
      *================================================================
      * Upd OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0716  1        EDI Status 1
     C                     MOVEL*BLANK    WN0717  1        EDI Status 2
     C                     MOVEL*BLANK    WN0718  1        EDI Status 3
     C                     MOVEL*BLANK    WN0719  1        Record Status
     C                     Z-ADD*ZERO     WN0720  60       Job Time
     C                     MOVEL*BLANK    WN0721 10        User Id
     C                     MOVEL*BLANK    WN0722 10        Job Name
     C                     Z-ADD*ZERO     WN0723  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSND     KLIST
     C                     KFLD           TCAIC3           Company Number
     C                     KFLD           TCC4NB           Order Number
     C                     KFLD           TCDPNB           Order Sequence
     C                     KFLD           TCUENB           Order Secondary
     C                     KFLD           TCJGDT           OD Production D
     C                     KFLD           TCOONY           ODS Sequence Nu
      * Setup key
     C                     Z-ADDWL0263    TCAIC3           Company Number
     C                     Z-ADDWL0264    TCC4NB           Order Number
     C                     Z-ADDWL0265    TCDPNB           Order Sequence
     C                     Z-ADDWL0266    TCUENB           Order Secondary
     C                     Z-ADDWL0267    TCJGDT           OD Production D
     C                     Z-ADDWL0268    TCOONY           ODS Sequence Nu
      * Establish starting position
     C           KRSND     CHAIN@B6CPNB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3152' W0RTN   7
      * USER: Processing if Data record not found
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.OD Pieces Scheduled is Greater than zero
      *   |- c2    : PAR.OD Weight Scheduled is Greater than zero
      *   '-
     C           WL0273    IFGT 0                          *IF
     C           WL0274    ORGT 0                          *OR
      * Crt OrdDtl Sch-Consmd CR - Order Detail Sched-Consmd  * 
     C                     EXSR NECRRC
     C                     END                             *FI
     C                     GOTO NDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           TCFLWG    ADD  WL0274    YL0014           OD Weight Sched
     C           TCIGQT    ADD  WL0273    YL0015           OD Qty/Cnsmd Pi
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.OD Pieces Scheduled is Less than or equal zero
      *   |- c2    : LCL.OD Weight Scheduled is Less than or equal zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0015    IFLE 0                          *IF
     C           YL0014    IFLE 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Del OrdDtl Sch-Consmd DL - Order Detail Sched-Consmd  * 
     C                     EXSR NFDLRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Chg OrdDtl Sch-Consmd CH - Order Detail Sched-Consmd  * 
     C                     EXSR NGCHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         NDEXIT    ENDSR
      /EJECT
     CSR         NECRRC    BEGSR
      *================================================================
      * Crt OrdDtl Sch-Consmd CR - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @B6CPNA
     C                     Z-ADDWL0263    TDAIC3           Company Number
     C                     Z-ADDWL0264    TDC4NB           Order Number
     C                     Z-ADDWL0265    TDDPNB           Order Sequence
     C                     Z-ADDWL0266    TDUENB           Order Secondary
     C                     Z-ADDWL0267    TDJGDT           OD Production D
     C                     Z-ADDWL0268    TDOONY           ODS Sequence Nu
     C                     Z-ADDWL0269    TDAODT           Scheduled Ship
     C                     MOVELWL0270    TDAJCD           Warehouse Code
     C                     Z-ADDWL0271    TDNUDT           Consumed Item C
     C                     Z-ADDWL0272    TDHGCD           Item Code
     C                     Z-ADDWL0273    TDIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0274    TDFLWG           OD Weight Sched
     C                     Z-ADDWL0275    TDNSQT           ODS Quantity Sh
     C                     Z-ADDWL0276    TDJQWG           ODS Weight Shor
     C                     Z-ADDWL0277    TDNVDT           Deadline Depart
     C                     Z-ADDWL0278    TDBUTM           Deadline Depart
     C                     MOVELWN0716    TDUVST           EDI Status 1
     C                     MOVELWN0717    TDUWST           EDI Status 2
     C                     MOVELWN0718    TDUXST           EDI Status 3
     C                     MOVELWN0719    TDVSST           Record Status
     C                     Z-ADDWN0720    TDAATM           Job Time
     C                     MOVELWN0721    TDAYNA           User Id
     C                     MOVELWN0722    TDA0NA           Job Name
     C                     Z-ADDWN0723    TDAXDT           Job Date
      *
      * USER: Processing before Data update
      * SET Record Stamp CRTOB IF
     C                     MOVEL'A'       TDVSST           Record Status
     C                     Z-ADD##JTM     TDAATM           Job Time
     C                     MOVEL##USR     TDAYNA           User Id
     C                     MOVEL##PGM     TDA0NA           Job Name
     C                     Z-ADD##JDT     TDAXDT           Job Date
     C           KLCRNE    KLIST
     C                     KFLD           TDAIC3           Company Number
     C                     KFLD           TDC4NB           Order Number
     C                     KFLD           TDDPNB           Order Sequence
     C                     KFLD           TDUENB           Order Secondary
     C                     KFLD           TDJGDT           OD Production D
     C                     KFLD           TDOONY           ODS Sequence Nu
      * Check for duplicate primary key
     C           KLCRNE    SETLL@B6CPNA                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3153' W0RTN   7
      * Send message 'Order Detail Sched-Con EX'
     C                     MOVEL'USR3153' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO NEEXIT
     C                     ENDIF
      *
     C                     WRITE@B6CPNA                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         NEEXIT    ENDSR
      /EJECT
     CSR         NFDLRC    BEGSR
      *================================================================
      * Del OrdDtl Sch-Consmd DL - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @B6CPNA
     C                     Z-ADDTCAIC3    TDAIC3           Company Number
     C                     Z-ADDTCC4NB    TDC4NB           Order Number
     C                     Z-ADDTCDPNB    TDDPNB           Order Sequence
     C                     Z-ADDTCUENB    TDUENB           Order Secondary
     C                     Z-ADDTCJGDT    TDJGDT           OD Production D
     C                     Z-ADDTCOONY    TDOONY           ODS Sequence Nu
      *
     C           KLDLNF    KLIST
     C                     KFLD           TDAIC3           Company Number
     C                     KFLD           TDC4NB           Order Number
     C                     KFLD           TDDPNB           Order Sequence
     C                     KFLD           TDUENB           Order Secondary
     C                     KFLD           TDJGDT           OD Production D
     C                     KFLD           TDOONY           ODS Sequence Nu
     C           KLDLNF    CHAIN@B6CPNA              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB6CPL0'MDACP
     C                     MOVEL'@B6CPNA' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL006.
     C                     MOVEL'LBL006'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO NFEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO NFEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@B6CPNA                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         NFEXIT    ENDSR
      /EJECT
     CSR         NGCHRC    BEGSR
      *================================================================
      * Chg OrdDtl Sch-Consmd CH - Order Detail Sched-Consmd  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0724  1        EDI Status 1
     C                     MOVEL*BLANK    WN0725  1        EDI Status 2
     C                     MOVEL*BLANK    WN0726  1        EDI Status 3
     C                     MOVEL*BLANK    WN0727  1        Record Status
     C                     Z-ADD*ZERO     WN0728  60       Job Time
     C                     MOVEL*BLANK    WN0729 10        User Id
     C                     MOVEL*BLANK    WN0730 10        Job Name
     C                     Z-ADD*ZERO     WN0731  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YERDC   1
      *
      * Move key fields to @B6CPNA
     C                     Z-ADDTCAIC3    TDAIC3           Company Number
     C                     Z-ADDTCC4NB    TDC4NB           Order Number
     C                     Z-ADDTCDPNB    TDDPNB           Order Sequence
     C                     Z-ADDTCUENB    TDUENB           Order Secondary
     C                     Z-ADDTCJGDT    TDJGDT           OD Production D
     C                     Z-ADDTCOONY    TDOONY           ODS Sequence Nu
      *
     C           KLCHNG    KLIST
     C                     KFLD           TDAIC3           Company Number
     C                     KFLD           TDC4NB           Order Number
     C                     KFLD           TDDPNB           Order Sequence
     C                     KFLD           TDUENB           Order Secondary
     C                     KFLD           TDJGDT           OD Production D
     C                     KFLD           TDOONY           ODS Sequence Nu
     C           KLCHNG    CHAIN@B6CPNA              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB6CPL0'MDACP
     C                     MOVEL'@B6CPNA' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL007.
     C                     MOVEL'LBL007'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO NGEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO NGEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPOB61    YERDCS
      * Move non-key fields to @B6CPNA
     C                     Z-ADDWL0269    TDAODT           Scheduled Ship
     C                     MOVELWL0270    TDAJCD    P      Warehouse Code
     C                     Z-ADDWL0271    TDNUDT           Consumed Item C
     C                     Z-ADDWL0272    TDHGCD           Item Code
     C                     Z-ADDYL0015    TDIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADDYL0014    TDFLWG           OD Weight Sched
     C                     Z-ADDTCNSQT    TDNSQT           ODS Quantity Sh
     C                     Z-ADDTCJQWG    TDJQWG           ODS Weight Shor
     C                     Z-ADD*ZERO     TDNVDT           Deadline Depart
     C                     Z-ADD*ZERO     TDBUTM           Deadline Depart
      *
      * Set PGM.*Record Data Changed flag
     C           QPOB61    IFNE YERDCS
     C           YERDC     ANDNE'N'
     C                     MOVE 'Y'       YERDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     TDAATM           Job Time
     C                     MOVEL##USR     TDAYNA           User Id
     C                     MOVEL##JOB     TDA0NA           Job Name
     C                     Z-ADD##JDT     TDAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPOB61    IFNE YERDCS
     C           YERDC     ANDNE'N'
     C                     MOVE 'Y'       YERDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YERDC     IFEQ 'Y'
     C                     UPDAT@B6CPNA                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPOB6CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         NGEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WAHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0001    WAAIC3           Company Number
     C                     Z-ADDWL0002    WAHGCD           Item Code
      * Establish starting position
     C           KRSSA     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0003           Description Lin
     C                     MOVEL*BLANK    WL0004           UOM Primary
     C                     Z-ADD*ZERO     WL0005           Unit Weight
     C                     Z-ADD*ZERO     WL0006           Item Structure
     C                     Z-ADD*ZERO     WL0007           Item Structure
     C                     Z-ADD*ZERO     WL0008           Item Structure
     C                     MOVEL*BLANK    WL0009           Item Type Code
     C                     MOVEL*BLANK    WL0010           Default Warehou
     C                     Z-ADD*ZERO     WL0011           Fresh Chilling
     C                     MOVEL*BLANK    WL0012           Base_Conv_Loss
     C                     MOVEL*BLANK    WL0013           Variety_Rendere
     C                     MOVEL*BLANK    WL0014           Credit Item Sta
     C                     Z-ADD*ZERO     WL0015           Std Weight_Head
     C                     Z-ADD*ZERO     WL0016           Pieces Per Head
     C                     MOVEL*BLANK    WL0017           Department Code
     C                     MOVEL*BLANK    WL0018           Group for Packa
     C                     MOVEL*BLANK    WL0019           Seconds Item
     C                     MOVEL*BLANK    WL0020           Piece Count Ite
     C                     Z-ADD*ZERO     WL0021           Pieces Per Bag
     C                     Z-ADD*ZERO     WL0022           Bags Per Unit
     C                     MOVEL*BLANK    WL0023           Export_Domestic
     C                     MOVEL*BLANK    WL0024           Print On Schedu
     C                     MOVEL*BLANK    WL0025           Fresh Inv Alloc
     C                     MOVEL*BLANK    WL0026           Fresh Sched As
     C                     MOVEL*BLANK    WL0027           Frozen Inv Allo
     C                     MOVEL*BLANK    WL0028           Primal Group Co
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAAVNA    WL0003           Description Lin
     C                     MOVELWAADCD    WL0004           UOM Primary
     C                     Z-ADDWAAIWG    WL0005           Unit Weight
     C                     Z-ADDWARINB    WL0006           Item Structure
     C                     Z-ADDWARHNB    WL0007           Item Structure
     C                     Z-ADDWARGNB    WL0008           Item Structure
     C                     MOVELWAN0CD    WL0009           Item Type Code
     C                     MOVELWAQ1CD    WL0010           Default Warehou
     C                     Z-ADDWACHTM    WL0011           Fresh Chilling
     C                     MOVELWAQZCD    WL0012           Base_Conv_Loss
     C                     MOVELWAXWST    WL0013           Variety_Rendere
     C                     MOVELWAVMST    WL0014           Credit Item Sta
     C                     Z-ADDWASWGH    WL0015           Std Weight_Head
     C                     Z-ADDWAPPHE    WL0016           Pieces Per Head
     C                     MOVELWAR3CD    WL0017           Department Code
     C                     MOVELWASDCD    WL0018           Group for Packa
     C                     MOVELWAX5ST    WL0019           Seconds Item
     C                     MOVELWAPCCT    WL0020           Piece Count Ite
     C                     Z-ADDWABDNB    WL0021           Pieces Per Bag
     C                     Z-ADDWABJNB    WL0022           Bags Per Unit
     C                     MOVELWASUST    WL0023           Export_Domestic
     C                     MOVELWASVST    WL0024           Print On Schedu
     C                     MOVELWASYST    WL0025           Fresh Inv Alloc
     C                     MOVELWASZST    WL0026           Fresh Sched As
     C                     MOVELWAS1ST    WL0027           Frozen Inv Allo
     C                     MOVELWAXRCD    WL0028           Primal Group Co
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * BPS Rtv Whs Info      RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0029    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSB     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0030           Warehouse Type
     C                     MOVEL*BLANK    WL0031           Trans Contol AS
     C                     MOVEL*BLANK    WL0032           Warehouse Locat
     C                     MOVEL*BLANK    WL0033           Warehouse Std C
     C                     Z-ADD*ZERO     WL0034           Warehouse Chill
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBWPST    WL0030           Warehouse Type
     C                     MOVELWBXUST    WL0031           Trans Contol AS
     C                     MOVELWBT0ST    WL0032           Warehouse Locat
     C                     MOVELWBT1ST    WL0033           Warehouse Std C
     C                     Z-ADDWBDBNB    WL0034           Warehouse Chill
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Item Prd Yld SWYG RT - Item Bill Of Material  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     P1BPPR           Production Yiel
     C                     MOVEL*BLANK    P1WXST           Record Found US
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCAIC3    WQSC01           Company Number
     C           *LIKE     DEFN WCHGCD    WQSC02           Item Code
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           Company Number
     C                     KFLD           WQSC02           Item Code
      * Setup key
     C                     Z-ADDP1AIC3    WQSC01           Company Number
     C                     Z-ADDP1HGCD    WQSC02           Item Code
      * Establish starting position
     C           KRSSC     SETLL@IOREA4                    *
     C           KRSSC     READE@IOREA4                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1679' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       P1WXST           Record Found US
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  WCBPPR    P1BPPR           Production Yiel
     C                     MOVEL'Y'       P1WXST           Record Found US
     C           KRSSC     READE@IOREA4                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * UPD Schedule Adj      RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0002  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0003  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0004  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0005  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0006  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0007  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0008  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0009  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0010  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0011  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0012  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0013  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0014  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0015  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0016  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0017  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0018  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0019  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0020  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0021  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0022  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0023 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0024  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0025 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0026  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0027 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0028  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0029 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0030  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0031 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0032  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0033 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0034  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0035  3        PS Item Id
     C                     MOVEL*BLANK    WN0036  2        Warehouse Type
     C                     MOVEL*BLANK    WN0037  1        PS Lock Status
     C                     MOVEL*BLANK    WN0038  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0039  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0040  1        PS Piece Count
     C                     MOVEL*BLANK    WN0041  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0042  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0043  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0044  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0045  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0046  3        PS Production W
     C                     Z-ADD*ZERO     WN0047  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0048  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0049  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0050  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0051  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0052  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0053  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0054  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0055  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0056  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0057  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0058  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0059  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0060  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0061  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0062  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0063  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0064  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0065  6        Department Code
     C                     Z-ADD*ZERO     WN0066  30       Item Structure
     C                     Z-ADD*ZERO     WN0067  30       Item Structure
     C                     Z-ADD*ZERO     WN0068  30       Item Structure
     C                     MOVEL*BLANK    WN0069  6        Primal Group Co
     C                     MOVEL*BLANK    WN0070  1        EDI Status 1
     C                     MOVEL*BLANK    WN0071  1        EDI Status 2
     C                     MOVEL*BLANK    WN0072  1        EDI Status 3
     C                     MOVEL*BLANK    WN0073  1        Record Status
     C                     Z-ADD*ZERO     WN0074  60       Job Time
     C                     MOVEL*BLANK    WN0075 10        User Id
     C                     MOVEL*BLANK    WN0076 10        Job Name
     C                     Z-ADD*ZERO     WN0077  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WDAIC3           Company Number
     C                     KFLD           WDV5ST           Production Type
     C                     KFLD           WDELDT           Production Date
     C                     KFLD           WDHGCD           Item Code
     C                     KFLD           WDAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0035    WDAIC3           Company Number
     C                     MOVELWL0036    WDV5ST           Production Type
     C                     Z-ADDWL0037    WDELDT           Production Date
     C                     Z-ADDWL0038    WDHGCD           Item Code
     C                     MOVELWL0039    WDAJCD           Warehouse Code
      * Establish starting position
     C           KRSSD     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * 04/09/08 PKD Added condition for Freezer Transfer to update
      *              new bucket
      * 02/05/09 RMC FP1054 Added condition for Schedule override to upda
      *              standard weight and pieces
      * If forecast adjustment type do not allow negatives
      * CASE: PAR.ATS Adj Type USR is Schedule Adjust Forecast
     C           WL0042    IFEQ 'SF'                       *IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.PS Weight Prod Adj is GT Zero
      *   |- c2    : PAR.PS Pieces Prod Adj is GT Zero
      *   '-
     C           WL0040    IFGT 0                          *IF
     C           WL0041    ORGT 0                          *OR
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0035    WL0043           Company Number
     C                     MOVELWL0036    WL0044    P      Production Type
     C                     Z-ADDWL0037    WL0045           Production Date
     C                     Z-ADDWL0038    WL0046           Item Code
     C                     MOVELWL0039    WL0047    P      Warehouse Code
     C                     Z-ADDWN0002    WL0048           PS Available Sh
     C                     Z-ADDWN0003    WL0049           PS Weight Plann
     C                     Z-ADDWN0004    WL0050           PS Pieces Plann
     C                     Z-ADDWN0005    WL0051           PS Pct of Carca
     C                     Z-ADDWN0006    WL0052           PS Avg Piece Wg
     C                     Z-ADDWN0007    WL0053           PS Weight Inv O
     C                     Z-ADDWN0008    WL0054           PS Pieces Inv O
     C                     Z-ADDWN0009    WL0055           PS Weight Stand
     C                     Z-ADDWN0010    WL0056           PS Pieces Stand
     C                     Z-ADDWN0011    WL0057           PS Weight Conve
     C                     Z-ADDWN0012    WL0058           PS Pieces Conve
     C                     Z-ADDWN0013    WL0059           PS Weight Shipp
     C                     Z-ADDWN0014    WL0060           PS Pieces Shipp
     C                     Z-ADDWL0040    WL0061           PS Weight Prod
     C                     Z-ADDWL0041    WL0062           PS Pieces Prod
     C                     Z-ADDWN0015    WL0063           PS Weight Inv A
     C                     Z-ADDWN0016    WL0064           PS Pieces Inv A
     C                     Z-ADDWN0017    WL0065           PS Weight Ship
     C                     Z-ADDWN0018    WL0066           PS Pieces Ship
     C                     Z-ADDWN0019    WL0067           PS Weight Prod
     C                     Z-ADDWN0020    WL0068           PS Pieces Prod
     C                     Z-ADDWN0021    WL0069           PS Weight Inv A
     C                     Z-ADDWN0022    WL0070           PS Pieces Inv A
     C                     Z-ADDWN0023    WL0071           PS Unit Weight
     C                     Z-ADDWN0024    WL0072           PS Pieces Whs T
     C                     Z-ADDWN0025    WL0073           PS Weight Whs T
     C                     Z-ADDWN0026    WL0074           PS Pieces Unuse
     C                     Z-ADDWN0027    WL0075           PS Weight Unuse
     C                     Z-ADDWN0028    WL0076           PS Pieces Unuse
     C                     Z-ADDWN0029    WL0077           PS Weight Unuse
     C                     Z-ADDWN0030    WL0078           PS Pieces Unuse
     C                     Z-ADDWN0031    WL0079           PS Weight Unuse
     C                     Z-ADDWN0032    WL0080           PS Pieces Unuse
     C                     Z-ADDWN0033    WL0081           PS Weight Unuse
     C                     Z-ADDWN0034    WL0082           PS Pieces Unuse
     C                     MOVELWN0035    WL0083    P      PS Item Id
     C                     MOVELWN0036    WL0084    P      Warehouse Type
     C                     MOVELWN0037    WL0085    P      PS Lock Status
     C                     MOVELWN0038    WL0086    P      PS Export/Domes
     C                     MOVELWN0039    WL0087    P      PS Print On Sch
     C                     MOVELWN0040    WL0088    P      PS Piece Count
     C                     MOVELWN0041    WL0089    P      PS Unused Sts 1
     C                     MOVELWN0042    WL0090    P      PS Unused Sts 2
     C                     MOVELWN0043    WL0091    P      PS Unused Sts 3
     C                     MOVELWN0044    WL0092    P      PS Unused Sts 4
     C                     MOVELWN0045    WL0093    P      PS Item Sched N
     C                     MOVELWN0046    WL0094    P      PS Production W
     C                     Z-ADDWN0047    WL0095           PS Weight Order
     C                     Z-ADDWN0048    WL0096           PS Pieces Order
     C                     Z-ADDWN0049    WL0097           PS Weight FC Ad
     C                     Z-ADDWN0050    WL0098           PS Pieces FC Ad
     C                     Z-ADDWN0051    WL0099           PS Weight FX Ad
     C                     Z-ADDWN0052    WL0100           PS Pieces FX Ad
     C                     Z-ADDWN0053    WL0101           PS Weight Sched
     C                     Z-ADDWN0054    WL0102           PS Pieces Sched
     C                     Z-ADDWN0055    WL0103           PS Weight Avail
     C                     Z-ADDWN0056    WL0104           PS Pieces Avail
     C                     Z-ADDWN0057    WL0105           PS Weight Produ
     C                     Z-ADDWN0058    WL0106           PS Pieces Produ
     C                     Z-ADDWN0059    WL0107           PS Weight Fab N
     C                     Z-ADDWN0060    WL0108           PS Pieces Fab N
     C                     Z-ADDWN0061    WL0109           PS Weight Sched
     C                     Z-ADDWN0062    WL0110           PS Pieces Sched
     C                     Z-ADDWN0063    WL0111           PS Weight Sched
     C                     Z-ADDWN0064    WL0112           PS Pieces Sched
     C                     MOVELWN0065    WL0113    P      Department Code
     C                     Z-ADDWN0066    WL0114           Item Structure
     C                     Z-ADDWN0067    WL0115           Item Structure
     C                     Z-ADDWN0068    WL0116           Item Structure
     C                     MOVELWN0069    WL0117    P      Primal Group Co
     C                     MOVELWN0070    WL0118    P      EDI Status 1
     C                     MOVELWN0071    WL0119    P      EDI Status 2
     C                     MOVELWN0072    WL0120    P      EDI Status 3
     C                     MOVELWN0073    WL0121    P      Record Status
     C                     Z-ADDWN0074    WL0122           Job Time
     C                     MOVELWN0075    WL0123    P      User Id
     C                     MOVELWN0076    WL0124    P      Job Name
     C                     Z-ADDWN0077    WL0125           Job Date
     C                     EXSR SECRRC
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.ATS Adj Type USR is Freezer Transfer
     C           WL0042    IFEQ 'FT'                       *IF
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0035    WL0043           Company Number
     C                     MOVELWL0036    WL0044    P      Production Type
     C                     Z-ADDWL0037    WL0045           Production Date
     C                     Z-ADDWL0038    WL0046           Item Code
     C                     MOVELWL0039    WL0047    P      Warehouse Code
     C                     Z-ADDWN0002    WL0048           PS Available Sh
     C                     Z-ADDWN0003    WL0049           PS Weight Plann
     C                     Z-ADDWN0004    WL0050           PS Pieces Plann
     C                     Z-ADDWN0005    WL0051           PS Pct of Carca
     C                     Z-ADDWN0006    WL0052           PS Avg Piece Wg
     C                     Z-ADDWN0007    WL0053           PS Weight Inv O
     C                     Z-ADDWN0008    WL0054           PS Pieces Inv O
     C                     Z-ADDWN0009    WL0055           PS Weight Stand
     C                     Z-ADDWN0010    WL0056           PS Pieces Stand
     C                     Z-ADDWN0011    WL0057           PS Weight Conve
     C                     Z-ADDWN0012    WL0058           PS Pieces Conve
     C                     Z-ADDWN0013    WL0059           PS Weight Shipp
     C                     Z-ADDWN0014    WL0060           PS Pieces Shipp
     C                     Z-ADD*ZERO     WL0061           PS Weight Prod
     C                     Z-ADD*ZERO     WL0062           PS Pieces Prod
     C                     Z-ADDWN0015    WL0063           PS Weight Inv A
     C                     Z-ADDWN0016    WL0064           PS Pieces Inv A
     C                     Z-ADDWN0017    WL0065           PS Weight Ship
     C                     Z-ADDWN0018    WL0066           PS Pieces Ship
     C                     Z-ADDWN0019    WL0067           PS Weight Prod
     C                     Z-ADDWN0020    WL0068           PS Pieces Prod
     C                     Z-ADDWN0021    WL0069           PS Weight Inv A
     C                     Z-ADDWN0022    WL0070           PS Pieces Inv A
     C                     Z-ADDWN0023    WL0071           PS Unit Weight
     C                     Z-ADDWL0041    WL0072           PS Pieces Whs T
     C                     Z-ADDWL0040    WL0073           PS Weight Whs T
     C                     Z-ADDWN0026    WL0074           PS Pieces Unuse
     C                     Z-ADDWN0027    WL0075           PS Weight Unuse
     C                     Z-ADDWN0028    WL0076           PS Pieces Unuse
     C                     Z-ADDWN0029    WL0077           PS Weight Unuse
     C                     Z-ADDWN0030    WL0078           PS Pieces Unuse
     C                     Z-ADDWN0031    WL0079           PS Weight Unuse
     C                     Z-ADDWN0032    WL0080           PS Pieces Unuse
     C                     Z-ADDWN0033    WL0081           PS Weight Unuse
     C                     Z-ADDWN0034    WL0082           PS Pieces Unuse
     C                     MOVELWN0035    WL0083    P      PS Item Id
     C                     MOVELWN0036    WL0084    P      Warehouse Type
     C                     MOVELWN0037    WL0085    P      PS Lock Status
     C                     MOVELWN0038    WL0086    P      PS Export/Domes
     C                     MOVELWN0039    WL0087    P      PS Print On Sch
     C                     MOVELWN0040    WL0088    P      PS Piece Count
     C                     MOVELWN0041    WL0089    P      PS Unused Sts 1
     C                     MOVELWN0042    WL0090    P      PS Unused Sts 2
     C                     MOVELWN0043    WL0091    P      PS Unused Sts 3
     C                     MOVELWN0044    WL0092    P      PS Unused Sts 4
     C                     MOVELWN0045    WL0093    P      PS Item Sched N
     C                     MOVELWN0046    WL0094    P      PS Production W
     C                     Z-ADDWN0047    WL0095           PS Weight Order
     C                     Z-ADDWN0048    WL0096           PS Pieces Order
     C                     Z-ADDWN0049    WL0097           PS Weight FC Ad
     C                     Z-ADDWN0050    WL0098           PS Pieces FC Ad
     C                     Z-ADDWN0051    WL0099           PS Weight FX Ad
     C                     Z-ADDWN0052    WL0100           PS Pieces FX Ad
     C                     Z-ADDWN0053    WL0101           PS Weight Sched
     C                     Z-ADDWN0054    WL0102           PS Pieces Sched
     C                     Z-ADDWN0055    WL0103           PS Weight Avail
     C                     Z-ADDWN0056    WL0104           PS Pieces Avail
     C                     Z-ADDWN0057    WL0105           PS Weight Produ
     C                     Z-ADDWN0058    WL0106           PS Pieces Produ
     C                     Z-ADDWN0059    WL0107           PS Weight Fab N
     C                     Z-ADDWN0060    WL0108           PS Pieces Fab N
     C                     Z-ADDWN0061    WL0109           PS Weight Sched
     C                     Z-ADDWN0062    WL0110           PS Pieces Sched
     C                     Z-ADDWN0063    WL0111           PS Weight Sched
     C                     Z-ADDWN0064    WL0112           PS Pieces Sched
     C                     MOVELWN0065    WL0113    P      Department Code
     C                     Z-ADDWN0066    WL0114           Item Structure
     C                     Z-ADDWN0067    WL0115           Item Structure
     C                     Z-ADDWN0068    WL0116           Item Structure
     C                     MOVELWN0069    WL0117    P      Primal Group Co
     C                     MOVELWN0070    WL0118    P      EDI Status 1
     C                     MOVELWN0071    WL0119    P      EDI Status 2
     C                     MOVELWN0072    WL0120    P      EDI Status 3
     C                     MOVELWN0073    WL0121    P      Record Status
     C                     Z-ADDWN0074    WL0122           Job Time
     C                     MOVELWN0075    WL0123    P      User Id
     C                     MOVELWN0076    WL0124    P      Job Name
     C                     Z-ADDWN0077    WL0125           Job Date
     C                     EXSR SECRRC
     C                     ELSE
      * CASE: PAR.ATS Adj Type USR is Schedule Override
     C           WL0042    IFEQ 'SV'                       *IF
      * output par.adj weight and pieces as standard weight and pieces
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0035    WL0043           Company Number
     C                     MOVELWL0036    WL0044    P      Production Type
     C                     Z-ADDWL0037    WL0045           Production Date
     C                     Z-ADDWL0038    WL0046           Item Code
     C                     MOVELWL0039    WL0047    P      Warehouse Code
     C                     Z-ADDWN0002    WL0048           PS Available Sh
     C                     Z-ADDWN0003    WL0049           PS Weight Plann
     C                     Z-ADDWN0004    WL0050           PS Pieces Plann
     C                     Z-ADDWN0005    WL0051           PS Pct of Carca
     C                     Z-ADDWN0006    WL0052           PS Avg Piece Wg
     C                     Z-ADDWN0007    WL0053           PS Weight Inv O
     C                     Z-ADDWN0008    WL0054           PS Pieces Inv O
     C                     Z-ADDWL0040    WL0055           PS Weight Stand
     C                     Z-ADDWL0041    WL0056           PS Pieces Stand
     C                     Z-ADDWN0011    WL0057           PS Weight Conve
     C                     Z-ADDWN0012    WL0058           PS Pieces Conve
     C                     Z-ADDWN0013    WL0059           PS Weight Shipp
     C                     Z-ADDWN0014    WL0060           PS Pieces Shipp
     C                     Z-ADD*ZERO     WL0061           PS Weight Prod
     C                     Z-ADD*ZERO     WL0062           PS Pieces Prod
     C                     Z-ADDWN0015    WL0063           PS Weight Inv A
     C                     Z-ADDWN0016    WL0064           PS Pieces Inv A
     C                     Z-ADDWN0017    WL0065           PS Weight Ship
     C                     Z-ADDWN0018    WL0066           PS Pieces Ship
     C                     Z-ADDWN0019    WL0067           PS Weight Prod
     C                     Z-ADDWN0020    WL0068           PS Pieces Prod
     C                     Z-ADDWN0021    WL0069           PS Weight Inv A
     C                     Z-ADDWN0022    WL0070           PS Pieces Inv A
     C                     Z-ADDWN0023    WL0071           PS Unit Weight
     C                     Z-ADDWL0041    WL0072           PS Pieces Whs T
     C                     Z-ADDWL0040    WL0073           PS Weight Whs T
     C                     Z-ADDWN0026    WL0074           PS Pieces Unuse
     C                     Z-ADDWN0027    WL0075           PS Weight Unuse
     C                     Z-ADDWN0028    WL0076           PS Pieces Unuse
     C                     Z-ADDWN0029    WL0077           PS Weight Unuse
     C                     Z-ADDWN0030    WL0078           PS Pieces Unuse
     C                     Z-ADDWN0031    WL0079           PS Weight Unuse
     C                     Z-ADDWN0032    WL0080           PS Pieces Unuse
     C                     Z-ADDWN0033    WL0081           PS Weight Unuse
     C                     Z-ADDWN0034    WL0082           PS Pieces Unuse
     C                     MOVELWN0035    WL0083    P      PS Item Id
     C                     MOVELWN0036    WL0084    P      Warehouse Type
     C                     MOVELWN0037    WL0085    P      PS Lock Status
     C                     MOVELWN0038    WL0086    P      PS Export/Domes
     C                     MOVELWN0039    WL0087    P      PS Print On Sch
     C                     MOVELWN0040    WL0088    P      PS Piece Count
     C                     MOVELWN0041    WL0089    P      PS Unused Sts 1
     C                     MOVELWN0042    WL0090    P      PS Unused Sts 2
     C                     MOVELWN0043    WL0091    P      PS Unused Sts 3
     C                     MOVELWN0044    WL0092    P      PS Unused Sts 4
     C                     MOVELWN0045    WL0093    P      PS Item Sched N
     C                     MOVELWN0046    WL0094    P      PS Production W
     C                     Z-ADDWN0047    WL0095           PS Weight Order
     C                     Z-ADDWN0048    WL0096           PS Pieces Order
     C                     Z-ADDWN0049    WL0097           PS Weight FC Ad
     C                     Z-ADDWN0050    WL0098           PS Pieces FC Ad
     C                     Z-ADDWN0051    WL0099           PS Weight FX Ad
     C                     Z-ADDWN0052    WL0100           PS Pieces FX Ad
     C                     Z-ADDWN0053    WL0101           PS Weight Sched
     C                     Z-ADDWN0054    WL0102           PS Pieces Sched
     C                     Z-ADDWN0055    WL0103           PS Weight Avail
     C                     Z-ADDWN0056    WL0104           PS Pieces Avail
     C                     Z-ADDWN0057    WL0105           PS Weight Produ
     C                     Z-ADDWN0058    WL0106           PS Pieces Produ
     C                     Z-ADDWN0059    WL0107           PS Weight Fab N
     C                     Z-ADDWN0060    WL0108           PS Pieces Fab N
     C                     Z-ADDWN0061    WL0109           PS Weight Sched
     C                     Z-ADDWN0062    WL0110           PS Pieces Sched
     C                     Z-ADDWN0063    WL0111           PS Weight Sched
     C                     Z-ADDWN0064    WL0112           PS Pieces Sched
     C                     MOVELWN0065    WL0113    P      Department Code
     C                     Z-ADDWN0066    WL0114           Item Structure
     C                     Z-ADDWN0067    WL0115           Item Structure
     C                     Z-ADDWN0068    WL0116           Item Structure
     C                     MOVELWN0069    WL0117    P      Primal Group Co
     C                     MOVELWN0070    WL0118    P      EDI Status 1
     C                     MOVELWN0071    WL0119    P      EDI Status 2
     C                     MOVELWN0072    WL0120    P      EDI Status 3
     C                     MOVELWN0073    WL0121    P      Record Status
     C                     Z-ADDWN0074    WL0122           Job Time
     C                     MOVELWN0075    WL0123    P      User Id
     C                     MOVELWN0076    WL0124    P      Job Name
     C                     Z-ADDWN0077    WL0125           Job Date
     C                     EXSR SECRRC
     C                     ELSE
      * CASE: *OTHERWISE
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0035    WL0043           Company Number
     C                     MOVELWL0036    WL0044    P      Production Type
     C                     Z-ADDWL0037    WL0045           Production Date
     C                     Z-ADDWL0038    WL0046           Item Code
     C                     MOVELWL0039    WL0047    P      Warehouse Code
     C                     Z-ADDWN0002    WL0048           PS Available Sh
     C                     Z-ADDWN0003    WL0049           PS Weight Plann
     C                     Z-ADDWN0004    WL0050           PS Pieces Plann
     C                     Z-ADDWN0005    WL0051           PS Pct of Carca
     C                     Z-ADDWN0006    WL0052           PS Avg Piece Wg
     C                     Z-ADDWN0007    WL0053           PS Weight Inv O
     C                     Z-ADDWN0008    WL0054           PS Pieces Inv O
     C                     Z-ADDWN0009    WL0055           PS Weight Stand
     C                     Z-ADDWN0010    WL0056           PS Pieces Stand
     C                     Z-ADDWN0011    WL0057           PS Weight Conve
     C                     Z-ADDWN0012    WL0058           PS Pieces Conve
     C                     Z-ADDWN0013    WL0059           PS Weight Shipp
     C                     Z-ADDWN0014    WL0060           PS Pieces Shipp
     C                     Z-ADDWL0040    WL0061           PS Weight Prod
     C                     Z-ADDWL0041    WL0062           PS Pieces Prod
     C                     Z-ADDWN0015    WL0063           PS Weight Inv A
     C                     Z-ADDWN0016    WL0064           PS Pieces Inv A
     C                     Z-ADDWN0017    WL0065           PS Weight Ship
     C                     Z-ADDWN0018    WL0066           PS Pieces Ship
     C                     Z-ADDWN0019    WL0067           PS Weight Prod
     C                     Z-ADDWN0020    WL0068           PS Pieces Prod
     C                     Z-ADDWN0021    WL0069           PS Weight Inv A
     C                     Z-ADDWN0022    WL0070           PS Pieces Inv A
     C                     Z-ADDWN0023    WL0071           PS Unit Weight
     C                     Z-ADDWN0024    WL0072           PS Pieces Whs T
     C                     Z-ADDWN0025    WL0073           PS Weight Whs T
     C                     Z-ADDWN0026    WL0074           PS Pieces Unuse
     C                     Z-ADDWN0027    WL0075           PS Weight Unuse
     C                     Z-ADDWN0028    WL0076           PS Pieces Unuse
     C                     Z-ADDWN0029    WL0077           PS Weight Unuse
     C                     Z-ADDWN0030    WL0078           PS Pieces Unuse
     C                     Z-ADDWN0031    WL0079           PS Weight Unuse
     C                     Z-ADDWN0032    WL0080           PS Pieces Unuse
     C                     Z-ADDWN0033    WL0081           PS Weight Unuse
     C                     Z-ADDWN0034    WL0082           PS Pieces Unuse
     C                     MOVELWN0035    WL0083    P      PS Item Id
     C                     MOVELWN0036    WL0084    P      Warehouse Type
     C                     MOVELWN0037    WL0085    P      PS Lock Status
     C                     MOVELWN0038    WL0086    P      PS Export/Domes
     C                     MOVELWN0039    WL0087    P      PS Print On Sch
     C                     MOVELWN0040    WL0088    P      PS Piece Count
     C                     MOVELWN0041    WL0089    P      PS Unused Sts 1
     C                     MOVELWN0042    WL0090    P      PS Unused Sts 2
     C                     MOVELWN0043    WL0091    P      PS Unused Sts 3
     C                     MOVELWN0044    WL0092    P      PS Unused Sts 4
     C                     MOVELWN0045    WL0093    P      PS Item Sched N
     C                     MOVELWN0046    WL0094    P      PS Production W
     C                     Z-ADDWN0047    WL0095           PS Weight Order
     C                     Z-ADDWN0048    WL0096           PS Pieces Order
     C                     Z-ADDWN0049    WL0097           PS Weight FC Ad
     C                     Z-ADDWN0050    WL0098           PS Pieces FC Ad
     C                     Z-ADDWN0051    WL0099           PS Weight FX Ad
     C                     Z-ADDWN0052    WL0100           PS Pieces FX Ad
     C                     Z-ADDWN0053    WL0101           PS Weight Sched
     C                     Z-ADDWN0054    WL0102           PS Pieces Sched
     C                     Z-ADDWN0055    WL0103           PS Weight Avail
     C                     Z-ADDWN0056    WL0104           PS Pieces Avail
     C                     Z-ADDWN0057    WL0105           PS Weight Produ
     C                     Z-ADDWN0058    WL0106           PS Pieces Produ
     C                     Z-ADDWN0059    WL0107           PS Weight Fab N
     C                     Z-ADDWN0060    WL0108           PS Pieces Fab N
     C                     Z-ADDWN0061    WL0109           PS Weight Sched
     C                     Z-ADDWN0062    WL0110           PS Pieces Sched
     C                     Z-ADDWN0063    WL0111           PS Weight Sched
     C                     Z-ADDWN0064    WL0112           PS Pieces Sched
     C                     MOVELWN0065    WL0113    P      Department Code
     C                     Z-ADDWN0066    WL0114           Item Structure
     C                     Z-ADDWN0067    WL0115           Item Structure
     C                     Z-ADDWN0068    WL0116           Item Structure
     C                     MOVELWN0069    WL0117    P      Primal Group Co
     C                     MOVELWN0070    WL0118    P      EDI Status 1
     C                     MOVELWN0071    WL0119    P      EDI Status 2
     C                     MOVELWN0072    WL0120    P      EDI Status 3
     C                     MOVELWN0073    WL0121    P      Record Status
     C                     Z-ADDWN0074    WL0122           Job Time
     C                     MOVELWN0075    WL0123    P      User Id
     C                     MOVELWN0076    WL0124    P      Job Name
     C                     Z-ADDWN0077    WL0125           Job Date
     C                     EXSR SECRRC
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * 02/05/09 FP1054 RMC Added Schedule Override adj-> type = SV
      * 04/09/08 PKD Added Freezer Transfer update
      * CASE: PAR.ATS Adj Type USR is Schedule Override
     C           WL0042    IFEQ 'SV'                       *IF
      * CASE: PAR.PS Pieces Prod Adj is NE Zeros
     C           WL0041    IFNE 0                          *IF
     C           WL0040    DIV  WL0041    YL0002           PS Avg Piece Wg
      * CASE: LCL.PS Avg Piece Wgt is LT Zero
     C           YL0002    IFLT 0                          *IF
     C                     MULT -1        YL0002           PS Avg Piece Wg
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     YL0002           PS Avg Piece Wg
     C                     END                             *FI
      * Chg Schedule Prd      CH - PS Prod Item Schedule  * 
     C                     EXSR SHCHRC
     C                     ELSE
      * CASE: *OTHERWISE
     C           WDD1WG    ADD  WL0040    YL0003           PS Weight Prod
     C           WDCBNB    ADD  WL0041    YL0004           PS Pieces Prod
      * If forecast adjustment type do not allow negatives
      * CASE: PAR.ATS Adj Type USR is Schedule Adjust Forecast
     C           WL0042    IFEQ 'SF'                       *IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.PS Weight Prod Adj is LT Zero
      *   |- c2    : LCL.PS Pieces Prod Adj is LT Zeros
      *   '-
     C           YL0003    IFLT 0                          *IF
     C           YL0004    ORLT 0                          *OR
     C                     Z-ADD*ZERO     YL0003           PS Weight Prod
     C                     Z-ADD*ZERO     YL0004           PS Pieces Prod
     C                     END                             *FI
     C                     END                             *FI
      * Chg Schedule Adj      CH - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWDAIC3    WL0130           Company Number
     C                     MOVELWDV5ST    WL0131    P      Production Type
     C                     Z-ADDWDELDT    WL0132           Production Date
     C                     Z-ADDWDHGCD    WL0133           Item Code
     C                     MOVELWDAJCD    WL0134    P      Warehouse Code
     C                     Z-ADDYL0003    WL0135           PS Weight Prod
     C                     Z-ADDYL0004    WL0136           PS Pieces Prod
     C                     Z-ADDWDBPNB    WL0137           PS Pieces Whs T
     C                     Z-ADDWDGAWG    WL0138           PS Weight Whs T
     C                     EXSR SICHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SECRRC    BEGSR
      *================================================================
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @I8CPUR
     C                     Z-ADDWL0043    WEAIC3           Company Number
     C                     MOVELWL0044    WEV5ST           Production Type
     C                     Z-ADDWL0045    WEELDT           Production Date
     C                     Z-ADDWL0046    WEHGCD           Item Code
     C                     MOVELWL0047    WEAJCD           Warehouse Code
     C                     Z-ADDWL0048    WEGPDT           PS Available Sh
     C                     Z-ADDWL0049    WEWTSP           PS Weight Plann
     C                     Z-ADDWL0050    WEQTSP           PS Pieces Plann
     C                     Z-ADDWL0051    WEDJPC           PS Pct of Carca
     C                     Z-ADDWL0052    WEF8WG           PS Avg Piece Wg
     C                     Z-ADDWL0053    WEWTIN           PS Weight Inv O
     C                     Z-ADDWL0054    WED5NB           PS Pieces Inv O
     C                     Z-ADDWL0055    WEDXWG           PS Weight Stand
     C                     Z-ADDWL0056    WEB2NB           PS Pieces Stand
     C                     Z-ADDWL0057    WEWTCN           PS Weight Conve
     C                     Z-ADDWL0058    WEPSCV           PS Pieces Conve
     C                     Z-ADDWL0059    WESAWT           PS Weight Shipp
     C                     Z-ADDWL0060    WEB9NB           PS Pieces Shipp
     C                     Z-ADDWL0061    WED1WG           PS Weight Prod
     C                     Z-ADDWL0062    WECBNB           PS Pieces Prod
     C                     Z-ADDWL0063    WEEZWG           PS Weight Inv A
     C                     Z-ADDWL0064    WECCNB           PS Pieces Inv A
     C                     Z-ADDWL0065    WEE0WG           PS Weight Ship
     C                     Z-ADDWL0066    WED6NB           PS Pieces Ship
     C                     Z-ADDWL0067    WEOAWT           PS Weight Prod
     C                     Z-ADDWL0068    WECDNB           PS Pieces Prod
     C                     Z-ADDWL0069    WEUNW2           PS Weight Inv A
     C                     Z-ADDWL0070    WECENB           PS Pieces Inv A
     C                     Z-ADDWL0071    WEF9WG           PS Unit Weight
     C                     Z-ADDWL0072    WEBPNB           PS Pieces Whs T
     C                     Z-ADDWL0073    WEGAWG           PS Weight Whs T
     C                     Z-ADDWL0074    WEBQNB           PS Pieces Unuse
     C                     Z-ADDWL0075    WEGBWG           PS Weight Unuse
     C                     Z-ADDWL0076    WEBRNB           PS Pieces Unuse
     C                     Z-ADDWL0077    WEGCWG           PS Weight Unuse
     C                     Z-ADDWL0078    WEBSNB           PS Pieces Unuse
     C                     Z-ADDWL0079    WEGDWG           PS Weight Unuse
     C                     Z-ADDWL0080    WEBWNB           PS Pieces Unuse
     C                     Z-ADDWL0081    WEGEWG           PS Weight Unuse
     C                     Z-ADDWL0082    WEPS6U           PS Pieces Unuse
     C                     MOVELWL0083    WEWCST           PS Item Id
     C                     MOVELWL0084    WEWPST           Warehouse Type
     C                     MOVELWL0085    WEB5ST           PS Lock Status
     C                     MOVELWL0086    WETFST           PS Export/Domes
     C                     MOVELWL0087    WETEST           PS Print On Sch
     C                     MOVELWL0088    WETHST           PS Piece Count
     C                     MOVELWL0089    WEUDST           PS Unused Sts 1
     C                     MOVELWL0090    WEUFST           PS Unused Sts 2
     C                     MOVELWL0091    WEUGST           PS Unused Sts 3
     C                     MOVELWL0092    WEUHST           PS Unused Sts 4
     C                     MOVELWL0093    WEB6ST           PS Item Sched N
     C                     MOVELWL0094    WEB7ST           PS Production W
     C                     Z-ADDWL0095    WEDVWG           PS Weight Order
     C                     Z-ADDWL0096    WED7NB           PS Pieces Order
     C                     Z-ADDWL0097    WEFCAD           PS Weight FC Ad
     C                     Z-ADDWL0098    WED9NB           PS Pieces FC Ad
     C                     Z-ADDWL0099    WEDWWG           PS Weight FX Ad
     C                     Z-ADDWL0100    WEEANB           PS Pieces FX Ad
     C                     Z-ADDWL0101    WESHWT           PS Weight Sched
     C                     Z-ADDWL0102    WEEBNB           PS Pieces Sched
     C                     Z-ADDWL0103    WEAVWT           PS Weight Avail
     C                     Z-ADDWL0104    WEECNB           PS Pieces Avail
     C                     Z-ADDWL0105    WEWTON           PS Weight Produ
     C                     Z-ADDWL0106    WEEDNB           PS Pieces Produ
     C                     Z-ADDWL0107    WEFNWT           PS Weight Fab N
     C                     Z-ADDWL0108    WEEENB           PS Pieces Fab N
     C                     Z-ADDWL0109    WEQTAS           PS Weight Sched
     C                     Z-ADDWL0110    WEEFNB           PS Pieces Sched
     C                     Z-ADDWL0111    WEWAIO           PS Weight Sched
     C                     Z-ADDWL0112    WEEGNB           PS Pieces Sched
     C                     MOVELWL0113    WER3CD           Department Code
     C                     Z-ADDWL0114    WERGNB           Item Structure
     C                     Z-ADDWL0115    WERHNB           Item Structure
     C                     Z-ADDWL0116    WERINB           Item Structure
     C                     MOVELWL0117    WEXRCD           Primal Group Co
     C                     MOVELWL0118    WEUVST           EDI Status 1
     C                     MOVELWL0119    WEUWST           EDI Status 2
     C                     MOVELWL0120    WEUXST           EDI Status 3
     C                     MOVELWL0121    WEVSST           Record Status
     C                     Z-ADDWL0122    WEAATM           Job Time
     C                     MOVELWL0123    WEAYNA           User Id
     C                     MOVELWL0124    WEA0NA           Job Name
     C                     Z-ADDWL0125    WEAXDT           Job Date
      *
      * USER: Processing before Data update
      * BPS Setup Item Info   IF
      *
     C                     Z-ADD*ZERO     WN0078 155       System Value Nu
      *
      * UPS Rtv Company/Item  IF
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWEAIC3    WL0001           Company Number
     C                     Z-ADDWEHGCD    WL0002           Item Code
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    WUAVNA    P      Description Lin
     C                     MOVELWL0004    WUADCD    P      UOM Primary
     C                     Z-ADDWL0005    WUAIWG           Unit Weight
     C                     Z-ADDWL0006    WERINB           Item Structure
     C                     Z-ADDWL0007    WERHNB           Item Structure
     C                     Z-ADDWL0008    WERGNB           Item Structure
     C                     MOVELWL0009    WUN0CD    P      Item Type Code
     C                     MOVELWL0010    WUQ1CD    P      Default Warehou
     C                     Z-ADDWL0011    WUCHTM           Fresh Chilling
     C                     MOVELWL0012    WUQZCD    P      Base_Conv_Loss
     C                     MOVELWL0013    WUXWST    P      Variety_Rendere
     C                     MOVELWL0014    WUVMST    P      Credit Item Sta
     C                     Z-ADDWL0015    WUSWGH           Std Weight_Head
     C                     Z-ADDWL0016    WUPPHE           Pieces Per Head
     C                     MOVELWL0017    WER3CD    P      Department Code
     C                     MOVELWL0018    WUSDCD    P      Group for Packa
     C                     MOVELWL0019    WUX5ST    P      Seconds Item
     C                     MOVELWL0020    WETHST    P      Piece Count Ite
     C                     Z-ADDWL0021    WUBDNB           Pieces Per Bag
     C                     Z-ADDWL0022    WUBJNB           Bags Per Unit
     C                     MOVELWL0023    WETFST    P      Export_Domestic
     C                     MOVELWL0024    WETEST    P      Print On Schedu
     C                     MOVELWL0025    WUSYST    P      Fresh Inv Alloc
     C                     MOVELWL0026    WUSZST    P      Fresh Sched As
     C                     MOVELWL0027    WUS1ST    P      Frozen Inv Allo
     C                     MOVELWL0028    WEXRCD    P      Primal Group Co
      * BPS Rtv Whs Info      RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWEAJCD    WL0029    P      Warehouse Code
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0030    WEWPST    P      Warehouse Type
     C                     MOVELWL0031    WUXUST    P      Trans Contol AS
     C                     MOVELWL0032    WUT0ST    P      Warehouse Locat
     C                     MOVELWL0033    WUT1ST    P      Warehouse Std C
     C                     Z-ADDWL0034    WUDBNB           Warehouse Chill
      * BPS Set Up Item Id    IF
      * CASE: PAR.Item Type Code is Raw Materials
     C           WUN0CD    IFEQ 'RM'                       *IF
     C                     MOVEL'RMB'     WEWCST           PS Item Id
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Seconds Item is Yes
     C           WUX5ST    IFEQ 'Y'                        *IF
     C                     MOVEL'FSC'     WEWCST           PS Item Id
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Variety/Rendered/Cut is Variety
     C           WUXWST    IFEQ 'V'                        *IF
     C                     MOVEL'FVR'     WEWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Variety/Rendered/Cut is Rendered
     C           WUXWST    IFEQ 'R'                        *IF
     C                     MOVEL'FRD'     WEWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Variety/Rendered/Cut is Cut
     C           WUXWST    IFEQ 'C'                        *IF
      * Base/Converted/Fabricated
      * CASE: PAR.Credit Item Status is yes
     C           WUVMST    IFEQ 'Y'                        *IF
      * Setup Base/Converted/Fabricated Credit
      * CASE: PAR.Converted/Base Item is Base
     C           WUQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'FBC'     WEWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Converted
     C           WUQZCD    IFEQ 'C'                        *IF
     C                     MOVEL'FCC'     WEWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Fabricated
     C           WUQZCD    IFEQ 'F'                        *IF
     C                     MOVEL'FFC'     WEWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Loss
     C           WUQZCD    IFEQ 'L'                        *IF
     C                     MOVEL'FLC'     WEWCST           PS Item Id
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup Base/Converted/Fabricated
      * CASE: PAR.Converted/Base Item is Base
     C           WUQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'FGB'     WEWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Converted
     C           WUQZCD    IFEQ 'C'                        *IF
     C                     MOVEL'FCV'     WEWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Fabricated
     C           WUQZCD    IFEQ 'F'                        *IF
     C                     MOVEL'FFB'     WEWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Loss
     C           WUQZCD    IFEQ 'L'                        *IF
     C                     MOVEL'FLS'     WEWCST           PS Item Id
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Output PS Prod Warehouse
      * Rtv Productin Whs     RT - Warehouse  * 
     C                     EXSR SFRVGN
      * Available Ship Date
      * CASE: WRK.Warehouse Std Chill Time is yes
     C           WUT1ST    IFEQ 'Y'                        *IF
      * UPS Clc Avail Shp Dte RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWEAIC3    WL0126           Company Number
     C                     Z-ADDWL0045    WL0127           Post to G/L Dat
     C                     Z-ADDWUDBNB    WL0128           Fresh Chilling
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0129    WEGPDT           PS Available Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * UPS Clc Avail Shp Dte RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWEAIC3    WL0126           Company Number
     C                     Z-ADDWL0045    WL0127           Post to G/L Dat
     C                     Z-ADDWUCHTM    WL0128           Fresh Chilling
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0129    WEGPDT           PS Available Sh
     C                     END                             *FI
      * Average Piece Weight
      * CASE: PAR.PS Pieces Planned Prod is GT Zero
     C           WL0050    IFGT 0                          *IF
     C           WL0049    DIV  WL0050    WEF8WG           PS Avg Piece Wg
     C                     END                             *FI
      * UPS CRTOBJ Stamp      IF
     C                     MOVEL'A'       WEVSST           Record Status
     C                     Z-ADD##JTM     WEAATM           Job Time
     C                     MOVEL##USR     WEAYNA           User Id
     C                     MOVEL##PGM     WEA0NA           Job Name
     C                     Z-ADD##JDT     WEAXDT           Job Date
     C                     MOVEL'N'       WEB5ST           PS Lock Status
     C           KLCRSE    KLIST
     C                     KFLD           WEAIC3           Company Number
     C                     KFLD           WEV5ST           Production Type
     C                     KFLD           WEELDT           Production Date
     C                     KFLD           WEHGCD           Item Code
     C                     KFLD           WEAJCD           Warehouse Code
      * Check for duplicate primary key
     C           KLCRSE    SETLL@I8CPUR                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR1764' W0RTN   7
      * Send message 'PS Prod Item Schedule  EX'
     C                     MOVEL'USR1764' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C                     WRITE@I8CPUR                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Productin Whs     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WFAJCD           Warehouse Code
      * Setup key
     C                     MOVELWEAJCD    WFAJCD           Warehouse Code
      * Establish starting position
     C           KRSSF     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WEB7ST           Production Ware
     C                     Z-ADD*ZERO     YL0001           Accounting Comp
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWFAOCD    WEB7ST           Production Ware
     C                     Z-ADDWFBTC3    YL0001           Accounting Comp
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * UPS Clc Avail Shp Dte RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WGAIC3    WQSG01           Company Number
      * Define keylist
     C           KPSSG     KLIST
     C                     KFLD           WQSG01           Company Number
     C                     KFLD           WGBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Company Number
      * Setup key
     C                     Z-ADDWL0126    WQSG01           Company Number
     C                     Z-ADDWL0127    WGBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSG     SETLL@AFREBE                    *
     C           KRSSG     READE@AFREBE                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.Count USR EQ PAR.Chilling Time
     C           WUCNTU    IFEQ WL0128                     *IF
     C                     Z-ADDWGBCDT    WL0129           PS Available Sh
     C                     GOTO SGEXIT                     *QUIT
     C                     END                             *FI
      * Skip Saturday
      * CASE: DB1.Day of Week is Saturday
     C           WGA9ST    IFEQ '7'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C           KRSSG     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHCHRC    BEGSR
      *================================================================
      * Chg Schedule Prd      CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0079  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0080  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0081  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0082  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0083  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0084  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0085  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0086  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0087  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0088  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0089  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0090  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0091  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0092  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0093  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0094  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0095  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0096  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0097  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0098  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0099 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0100  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0101 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0102  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0103 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0104  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0105 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0106  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0107 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0108  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0109 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0110  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0111  3        PS Item Id
     C                     MOVEL*BLANK    WN0112  2        Warehouse Type
     C                     MOVEL*BLANK    WN0113  1        PS Lock Status
     C                     MOVEL*BLANK    WN0114  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0115  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0116  1        PS Piece Count
     C                     MOVEL*BLANK    WN0117  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0118  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0119  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0120  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0121  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0122  3        PS Production W
     C                     Z-ADD*ZERO     WN0123  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0124  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0125  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0126  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0127  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0128  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0129  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0130  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0131  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0132  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0133  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0134  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0135  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0136  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0137  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0138  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0139  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0140  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0141  6        Department Code
     C                     Z-ADD*ZERO     WN0142  30       Item Structure
     C                     Z-ADD*ZERO     WN0143  30       Item Structure
     C                     Z-ADD*ZERO     WN0144  30       Item Structure
     C                     MOVEL*BLANK    WN0145  6        Primal Group Co
     C                     MOVEL*BLANK    WN0146  1        EDI Status 1
     C                     MOVEL*BLANK    WN0147  1        EDI Status 2
     C                     MOVEL*BLANK    WN0148  1        EDI Status 3
     C                     MOVEL*BLANK    WN0149  1        Record Status
     C                     Z-ADD*ZERO     WN0150  60       Job Time
     C                     MOVEL*BLANK    WN0151 10        User Id
     C                     MOVEL*BLANK    WN0152 10        Job Name
     C                     Z-ADD*ZERO     WN0153  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWDAIC3    WEAIC3           Company Number
     C                     MOVELWDV5ST    WEV5ST    P      Production Type
     C                     Z-ADDWDELDT    WEELDT           Production Date
     C                     Z-ADDWDHGCD    WEHGCD           Item Code
     C                     MOVELWDAJCD    WEAJCD    P      Warehouse Code
      *
     C           KLCHSH    KLIST
     C                     KFLD           WEAIC3           Company Number
     C                     KFLD           WEV5ST           Production Type
     C                     KFLD           WEELDT           Production Date
     C                     KFLD           WEHGCD           Item Code
     C                     KFLD           WEAJCD           Warehouse Code
     C           KLCHSH    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SHEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YARDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDYL0002    WEF8WG           PS Avg Piece Wg
     C                     Z-ADDWL0040    WEDXWG           PS Weight Stand
     C                     Z-ADDWL0041    WEB2NB           PS Pieces Stand
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Record Stamp CHGOB IF
     C                     Z-ADD##JTM     WEAATM           Job Time
     C                     MOVEL##USR     WEAYNA           User Id
     C                     MOVEL##PGM     WEA0NA           Job Name
     C                     Z-ADD##JDT     WEAXDT           Job Date
     C                     MOVEL##PGM     WEA0NA           Job Name
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SICHRC    BEGSR
      *================================================================
      * Chg Schedule Adj      CH - PS Prod Item Schedule  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0154  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0155  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0156  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0157  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0158  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0159  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0160  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0161  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0162  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0163  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0164  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0165  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0166  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0167  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0168  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0169  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0170  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0171  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0172  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0173  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0174  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0175 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0176  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0177 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0178  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0179 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0180  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0181 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0182  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0183 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0184  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0185  3        PS Item Id
     C                     MOVEL*BLANK    WN0186  2        Warehouse Type
     C                     MOVEL*BLANK    WN0187  1        PS Lock Status
     C                     MOVEL*BLANK    WN0188  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0189  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0190  1        PS Piece Count
     C                     MOVEL*BLANK    WN0191  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0192  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0193  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0194  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0195  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0196  3        PS Production W
     C                     Z-ADD*ZERO     WN0197  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0198  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0199  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0200  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0201  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0202  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0203  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0204  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0205  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0206  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0207  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0208  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0209  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0210  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0211  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0212  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0213  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0214  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0215  6        Department Code
     C                     Z-ADD*ZERO     WN0216  30       Item Structure
     C                     Z-ADD*ZERO     WN0217  30       Item Structure
     C                     Z-ADD*ZERO     WN0218  30       Item Structure
     C                     MOVEL*BLANK    WN0219  6        Primal Group Co
     C                     MOVEL*BLANK    WN0220  1        EDI Status 1
     C                     MOVEL*BLANK    WN0221  1        EDI Status 2
     C                     MOVEL*BLANK    WN0222  1        EDI Status 3
     C                     MOVEL*BLANK    WN0223  1        Record Status
     C                     Z-ADD*ZERO     WN0224  60       Job Time
     C                     MOVEL*BLANK    WN0225 10        User Id
     C                     MOVEL*BLANK    WN0226 10        Job Name
     C                     Z-ADD*ZERO     WN0227  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YBRDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWL0130    WEAIC3           Company Number
     C                     MOVELWL0131    WEV5ST    P      Production Type
     C                     Z-ADDWL0132    WEELDT           Production Date
     C                     Z-ADDWL0133    WEHGCD           Item Code
     C                     MOVELWL0134    WEAJCD    P      Warehouse Code
      *
     C           KLCHSI    KLIST
     C                     KFLD           WEAIC3           Company Number
     C                     KFLD           WEV5ST           Production Type
     C                     KFLD           WEELDT           Production Date
     C                     KFLD           WEHGCD           Item Code
     C                     KFLD           WEAJCD           Warehouse Code
     C           KLCHSI    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL002.
     C                     MOVEL'LBL002'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SIEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YBRDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWL0135    WED1WG           PS Weight Prod
     C                     Z-ADDWL0136    WECBNB           PS Pieces Prod
     C                     Z-ADDWL0137    WEBPNB           PS Pieces Whs T
     C                     Z-ADDWL0138    WEGAWG           PS Weight Whs T
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Record Stamp CHGOB IF
     C                     Z-ADD##JTM     WEAATM           Job Time
     C                     MOVEL##USR     WEAYNA           User Id
     C                     MOVEL##PGM     WEA0NA           Job Name
     C                     Z-ADD##JDT     WEAXDT           Job Date
     C                     MOVEL##PGM     WEA0NA           Job Name
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv AvgPcWgt/Prd/PrdAl RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WDAIC3           Company Number
     C                     KFLD           WDV5ST           Production Type
     C                     KFLD           WDELDT           Production Date
     C                     KFLD           WDHGCD           Item Code
     C                     KFLD           WDAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDP1AIC3    WDAIC3           Company Number
     C                     MOVELP1V5ST    WDV5ST           Production Type
     C                     Z-ADDP1ELDT    WDELDT           Production Date
     C                     Z-ADDP1HGCD    WDHGCD           Item Code
     C                     MOVELP1AJCD    WDAJCD           Warehouse Code
      * Establish starting position
     C           KRSSJ     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     P7EOWG           PS Weight Plann
     C                     Z-ADD*ZERO     P7EWNB           PS Pieces Plann
     C                     Z-ADD*ZERO     P8F8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WUOAWT           PS Weight Prod
     C                     Z-ADD*ZERO     WUCDNB           PS Pieces Prod
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWDWTSP    P7EOWG           PS Weight Plann
     C                     Z-ADDWDQTSP    P7EWNB           PS Pieces Plann
     C                     Z-ADDWDF8WG    P8F8WG           PS Avg Piece Wg
     C                     Z-ADDWDOAWT    WUOAWT           PS Weight Prod
     C                     Z-ADDWDCDNB    WUCDNB           PS Pieces Prod
      * Total Production Weight
      * PAR.PS Weight Planned Prod =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whs Tfr Adj
     C           WDDXWG    ADD  WDD1WG    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WDWTCN    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WDGAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    P7EOWG           PS Weight Plann
      * Total Production Pieces
      * PAR.PS Pieces Planned Prod =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whs Tfr Adj
     C           WDB2NB    ADD  WDCBNB    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WDPSCV    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WDBPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    P7EWNB           PS Pieces Plann
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Upd Alloc Std for Adj  RT - Item Bill Of Material  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0228 112       Unit Weight
     C                     Z-ADD*ZERO     WN0229  70       Pieces Per Bag
     C                     Z-ADD*ZERO     WN0230  70       Bags Per Unit
     C                     Z-ADD*ZERO     WN0231 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0232 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0233  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0234  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0235  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0236  52       Export Pass Rat
     C                     Z-ADD*ZERO     WN0237  70       CDS CV Pieces A
     C                     Z-ADD*ZERO     WN0238 112       CDS CV Weight A
     C                     Z-ADD*ZERO     WN0239  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0240  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0241  70       SM Pieces Remai
     C                     Z-ADD*ZERO     WN0242 112       SM Weight Remai
     C                     Z-ADD*ZERO     WN0243  70       RM Pieces Avail
     C                     Z-ADD*ZERO     WN0244 112       RM Weight Avail
     C                     Z-ADD*ZERO     WN0245  70       RM Pieces Need
     C                     Z-ADD*ZERO     WN0246 112       RM Weight Need
     C                     Z-ADD*ZERO     WN0247  70       RM Pieces Alloc
     C                     Z-ADD*ZERO     WN0248 112       RM Weight Alloc
     C                     Z-ADD*ZERO     WN0249  70       Pieces Schedule
     C                     Z-ADD*ZERO     WN0250 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0251  70       Pieces Schedule
     C                     Z-ADD*ZERO     WN0252 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0253  70       Pieces Need USR
     C                     Z-ADD*ZERO     WN0254 112       Weight Need USR
     C                     Z-ADD*ZERO     WN0255  70       Pieces Consumed
     C                     Z-ADD*ZERO     WN0256 112       Weight Consumed
     C                     Z-ADD*ZERO     WN0257  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0258  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0259  70       Pieces Per Head
     C                     MOVEL*BLANK    WN0260  6        Department Code
     C                     MOVEL*BLANK    WN0261  1        Export_Domestic
     C                     MOVEL*BLANK    WN0262  1        Piece Count Ite
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WN0255           Pieces Consumed
     C                     Z-ADD*ZERO     WN0256           Weight Consumed
      * If order is allocate then check export pass rate
      * CASE: PAR.ATS Adj Type USR 2 is Order Allocate
     C           P5QJST    IFEQ 'OA'                       *IF
      * Rtv Export/Department RT - Company Item  * 
     C                     EXSR SLRVGN
      * Rtv Export Pass Rate  RT - PS Production Capability  * 
     C                     EXSR SMRVGN
      * Export Item & Department Pass Rate NE 0 then calc Export Availabi
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Export Pass Rate is not equal to zeros
      *   |- c2    : PAR.Export/Domestic is Export
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0236    IFNE 0                          *IF
     C           WN0261    IFEQ 'E'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
     C                     EXSR SNRVGN
      * RTV Conv Dept Total   RT - PS Prod Dept Schedule  * 
     C                     EXSR SPRVGN
      * Clc Dept Pass Weight Aval
      * PAR.ATS Weight Available USR =
      *    *COMPUTE (x1 * (x2 / x3))
      * x1    : PAR.CDS CV Weight Available
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Export Pass Rate
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           WN0236    DIV  100       W0WD01           *Synon (17,7) w
     C           WN0238    MULT W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0232           ATS Weight Avai
      * Clc Dept Pass Pieces Aval
      * PAR.ATS Pieces Available USR =
      *    *COMPUTE (x1 * (x2 / x3))
      * x1    : PAR.CDS CV Pieces Available
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Export Pass Rate
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           WN0236    DIV  100       W0WD01           *Synon (17,7) w
     C           WN0237    MULT W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0233           ATS Pieces Avai
      * Rtv Total Prod Dpt/Exp RT - Company/Item  * 
     C                     EXSR SQRVGN
     C           WN0233    SUB  WN0249    WN0241           SM Pieces Remai
     C           WN0232    SUB  WN0250    WN0242           SM Weight Remai
      * If piece count item, test pieces else test weight
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * If Pieces Remain LT 0, then Pieces Need = 0, Else test againts ne
      * CASE: PAR.SM Pieces Remain USR is LT Zeros
     C           WN0241    IFLT 0                          *IF
     C                     Z-ADD*ZERO     P3PIAJ           SM Pieces Need
     C                     Z-ADD*ZERO     P1WTUP           SM Weight Need
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.SM Pieces Need USR GT PAR.SM Pieces Remain USR
     C           P3PIAJ    IFGT WN0241                     *IF
     C                     Z-ADDWN0241    P3PIAJ           SM Pieces Need
      * Weight Need
      * PAR.SM Weight Need USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.SM Pieces Need USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           P3PIAJ    MULT WN0257    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P1WTUP           SM Weight Need
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * If Weight Remain LT 0, Then Weight Need = 0, Else test against ne
      * CASE: PAR.SM Weight Remain USR is Less than zero
     C           WN0242    IFLT 0                          *IF
     C                     Z-ADD*ZERO     P1WTUP           SM Weight Need
     C                     Z-ADD*ZERO     P3PIAJ           SM Pieces Need
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.SM Weight Need USR GT PAR.SM Weight Remain USR
     C           P1WTUP    IFGT WN0242                     *IF
     C                     Z-ADDWN0242    P1WTUP           SM Weight Need
     C                     Z-ADD*ZERO     P3PIAJ           SM Pieces Need
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDP1WTUP    WN0246           RM Weight Need
     C                     Z-ADDP3PIAJ    WN0245           RM Pieces Need
     C                     Z-ADDP1WTUP    WN0248           RM Weight Alloc
     C                     Z-ADDP3PIAJ    WN0247           RM Pieces Alloc
      * Declare restrictor key work fields
     C           *LIKE     DEFN WHAIC3    WQSK01           Company Number
     C           *LIKE     DEFN WHHGCD    WQSK02           Item Code
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Company Number
     C                     KFLD           WQSK02           Item Code
      * Setup key
     C                     Z-ADDP1AIC3    WQSK01           Company Number
     C                     Z-ADDP1HGCD    WQSK02           Item Code
      * Establish starting position
     C           KRSSK     SETLL@IOREGB                    *
     C           KRSSK     READE@IOREGB                  90*
      * Data record not found
     C   90                MOVEL'USR1679' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Consumed Items
      * CASE: DB1.BOM Type is Consumed - Meat
     C           WHV2ST    IFEQ 'C'                        *IF
      * BPS Setup Item Info   IF
      *
     C                     Z-ADD*ZERO     WN0276 155       System Value Nu
      *
      * UPS Rtv Company/Item  IF
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAIC3    WL0001           Company Number
     C                     Z-ADDWHC9NB    WL0002           Item Code
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    WUAVNA    P      Description Lin
     C                     MOVELWL0004    WUADCD    P      UOM Primary
     C                     Z-ADDWL0005    WN0228           Unit Weight
     C                     Z-ADDWL0006    WURINB           Item Structure
     C                     Z-ADDWL0007    WURHNB           Item Structure
     C                     Z-ADDWL0008    WURGNB           Item Structure
     C                     MOVELWL0009    WUN0CD    P      Item Type Code
     C                     MOVELWL0010    WUQ1CD    P      Default Warehou
     C                     Z-ADDWL0011    WUCHTM           Fresh Chilling
     C                     MOVELWL0012    WUQZCD    P      Base_Conv_Loss
     C                     MOVELWL0013    WUXWST    P      Variety_Rendere
     C                     MOVELWL0014    WUVMST    P      Credit Item Sta
     C                     Z-ADDWL0015    WUSWGH           Std Weight_Head
     C                     Z-ADDWL0016    WN0259           Pieces Per Head
     C                     MOVELWL0017    WUR3CD    P      Department Code
     C                     MOVELWL0018    WUSDCD    P      Group for Packa
     C                     MOVELWL0019    WUX5ST    P      Seconds Item
     C                     MOVELWL0020    WN0262    P      Piece Count Ite
     C                     Z-ADDWL0021    WN0229           Pieces Per Bag
     C                     Z-ADDWL0022    WN0230           Bags Per Unit
     C                     MOVELWL0023    WUSUST    P      Export_Domestic
     C                     MOVELWL0024    WUSVST    P      Print On Schedu
     C                     MOVELWL0025    WUSYST    P      Fresh Inv Alloc
     C                     MOVELWL0026    WUSZST    P      Fresh Sched As
     C                     MOVELWL0027    WUS1ST    P      Frozen Inv Allo
     C                     MOVELWL0028    WUXRCD    P      Primal Group Co
      * BPS Rtv Whs Info      RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP1AJCD    WL0029    P      Warehouse Code
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0030    WUWPST    P      Warehouse Type
     C                     MOVELWL0031    WUXUST    P      Trans Contol AS
     C                     MOVELWL0032    WUT0ST    P      Warehouse Locat
     C                     MOVELWL0033    WUT1ST    P      Warehouse Std C
     C                     Z-ADDWL0034    WUDBNB           Warehouse Chill
      * BPS Set Up Item Id    IF
      * CASE: PAR.Item Type Code is Raw Materials
     C           WUN0CD    IFEQ 'RM'                       *IF
     C                     MOVEL'RMB'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Seconds Item is Yes
     C           WUX5ST    IFEQ 'Y'                        *IF
     C                     MOVEL'FSC'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Variety/Rendered/Cut is Variety
     C           WUXWST    IFEQ 'V'                        *IF
     C                     MOVEL'FVR'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Variety/Rendered/Cut is Rendered
     C           WUXWST    IFEQ 'R'                        *IF
     C                     MOVEL'FRD'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Variety/Rendered/Cut is Cut
     C           WUXWST    IFEQ 'C'                        *IF
      * Base/Converted/Fabricated
      * CASE: PAR.Credit Item Status is yes
     C           WUVMST    IFEQ 'Y'                        *IF
      * Setup Base/Converted/Fabricated Credit
      * CASE: PAR.Converted/Base Item is Base
     C           WUQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'FBC'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Converted
     C           WUQZCD    IFEQ 'C'                        *IF
     C                     MOVEL'FCC'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Fabricated
     C           WUQZCD    IFEQ 'F'                        *IF
     C                     MOVEL'FFC'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Loss
     C           WUQZCD    IFEQ 'L'                        *IF
     C                     MOVEL'FLC'     WUWCST           PS Item Id
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup Base/Converted/Fabricated
      * CASE: PAR.Converted/Base Item is Base
     C           WUQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'FGB'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Converted
     C           WUQZCD    IFEQ 'C'                        *IF
     C                     MOVEL'FCV'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Fabricated
     C           WUQZCD    IFEQ 'F'                        *IF
     C                     MOVEL'FFB'     WUWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Loss
     C           WUQZCD    IFEQ 'L'                        *IF
     C                     MOVEL'FLS'     WUWCST           PS Item Id
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Chilling Time
      * CASE: WRK.Warehouse Std Chill Time is yes
     C           WUT1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDWUDBNB    WN0258           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWUCHTM    WN0258           Chilling Time U
     C                     END                             *FI
      * Rtv Avail Prod/Convert RT - PS Prod Item Schedule  * 
     C                     EXSR SSRVGN
     C                     MULT -1        WN0239           PS Weight Conve
     C                     MULT -1        WN0240           PS Pieces Conve
      * Setup PA Array & retrieve available for production date
      *
     C                     MOVEL*BLANK    WN0287  1        Production Type
     C                     Z-ADD*ZERO     WN0288  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0289  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0290  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0291  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0292  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0293  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0294  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0295  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0296  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0297  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0298  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0299  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0300  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0301  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0302  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0303  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0304  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0305  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0306  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0307  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0308  70       Avail Ship Date
     C                     Z-ADD*ZERO     WN0309  70       USR Day 1
     C                     Z-ADD*ZERO     WN0310  70       USR Day 2
     C                     Z-ADD*ZERO     WN0311  70       USR Day 3
     C                     Z-ADD*ZERO     WN0312  70       USR Day 4
     C                     Z-ADD*ZERO     WN0313  70       USR Day 5
     C                     Z-ADD*ZERO     WN0314  70       USR Day 6
     C                     Z-ADD*ZERO     WN0315  70       USR Day 7
     C                     Z-ADD*ZERO     WN0316  70       USR Day 8
     C                     Z-ADD*ZERO     WN0317  70       USR Day 9
     C                     Z-ADD*ZERO     WN0318  70       USR Day 10
     C                     Z-ADD*ZERO     WN0319  70       USR Day 11
     C                     Z-ADD*ZERO     WN0320  70       USR Day 12
     C                     Z-ADD*ZERO     WN0321  70       USR Day 13
     C                     Z-ADD*ZERO     WN0322  70       USR Day 14
     C                     Z-ADD*ZERO     WN0323  70       USR Day 15
     C                     Z-ADD*ZERO     WN0324  70       USR Day 16
     C                     Z-ADD*ZERO     WN0325  70       USR Day 17
     C                     Z-ADD*ZERO     WN0326  70       USR Day 18
     C                     Z-ADD*ZERO     WN0327  70       USR Day 19
     C                     Z-ADD*ZERO     WN0328  70       USR Day 20
     C                     Z-ADD*ZERO     WN0329  70       USR Day 21
     C                     Z-ADD*ZERO     WN0330  61       Day 1 Inventory
     C                     Z-ADD*ZERO     WN0331  61       Day 2 Inventory
     C                     Z-ADD*ZERO     WN0332  61       Day 3 Inventory
     C                     Z-ADD*ZERO     WN0333  61       Day 4 Inventory
     C                     Z-ADD*ZERO     WN0334  61       Day 5 Inventory
     C                     Z-ADD*ZERO     WN0335  61       Day 6 Inventory
     C                     Z-ADD*ZERO     WN0336  61       Day 7 Inventory
     C                     Z-ADD*ZERO     WN0337  61       Day 8 Inventory
     C                     Z-ADD*ZERO     WN0338  61       Day 9 Inventory
     C                     Z-ADD*ZERO     WN0339  61       Day 10 Inventor
     C                     Z-ADD*ZERO     WN0340  61       Day 11 Inventor
     C                     Z-ADD*ZERO     WN0341  61       Day 12 Inventor
     C                     Z-ADD*ZERO     WN0342  61       Day 13 Inventor
     C                     Z-ADD*ZERO     WN0343  61       Day 14 Inventor
     C                     Z-ADD*ZERO     WN0344  61       Day 1 Productio
     C                     Z-ADD*ZERO     WN0345  61       Day 2 Productio
     C                     Z-ADD*ZERO     WN0346  61       Day 3 Productio
     C                     Z-ADD*ZERO     WN0347  61       Day 4 Productio
     C                     Z-ADD*ZERO     WN0348  61       Day 5 Productio
     C                     Z-ADD*ZERO     WN0349  61       Day 6 Productio
     C                     Z-ADD*ZERO     WN0350  61       Day 7 Productio
     C                     Z-ADD*ZERO     WN0351  61       Day 8 Productio
     C                     Z-ADD*ZERO     WN0352  61       Day 9 Productio
     C                     Z-ADD*ZERO     WN0353  61       Day 10 Producti
     C                     Z-ADD*ZERO     WN0354  61       Day 11 Producti
     C                     Z-ADD*ZERO     WN0355  61       Day 12 Producti
     C                     Z-ADD*ZERO     WN0356  61       Day 13 Producti
     C                     Z-ADD*ZERO     WN0357  61       Day 14 Producti
     C                     Z-ADD*ZERO     WN0358  61       Day 15 Producti
     C                     Z-ADD*ZERO     WN0359  61       Day 16 Producti
     C                     Z-ADD*ZERO     WN0360  61       Day 17 Producti
     C                     Z-ADD*ZERO     WN0361  61       Day 18 Producti
     C                     Z-ADD*ZERO     WN0362  61       Day 19 Producti
     C                     Z-ADD*ZERO     WN0363  61       Day 20 Producti
     C                     Z-ADD*ZERO     WN0364  61       Day 21 Producti
     C                     Z-ADD*ZERO     WN0365  61       Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0366  61       Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0367  61       Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0368  61       Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0369  61       Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0370  61       Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0371  61       Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0372  61       Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0373  61       Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0374  61       Day 10 Sales US
     C                     Z-ADD*ZERO     WN0375  61       Day 11 Sales US
     C                     Z-ADD*ZERO     WN0376  61       Day 12 Sales US
     C                     Z-ADD*ZERO     WN0377  61       Day 13 Sales US
     C                     Z-ADD*ZERO     WN0378  61       Day 14 Sales US
     C                     Z-ADD*ZERO     WN0379  61       Day 15 Sales US
     C                     Z-ADD*ZERO     WN0380  61       Day 16 Sales US
     C                     Z-ADD*ZERO     WN0381  61       Day 17 Sales US
     C                     Z-ADD*ZERO     WN0382  61       Day 18 Sales US
     C                     Z-ADD*ZERO     WN0383  61       Day 19 Sales US
     C                     Z-ADD*ZERO     WN0384  61       Day 20 Sales US
     C                     Z-ADD*ZERO     WN0385  61       Day 21 Sales US
     C                     Z-ADD*ZERO     WN0386  61       Day 1 Availabil
     C                     Z-ADD*ZERO     WN0387  61       Day 2 Availabil
     C                     Z-ADD*ZERO     WN0388  61       Day 3 Availabil
     C                     Z-ADD*ZERO     WN0389  61       Day 4 Availabil
     C                     Z-ADD*ZERO     WN0390  61       Day 5 Availabil
     C                     Z-ADD*ZERO     WN0391  61       Day 6 Availabil
     C                     Z-ADD*ZERO     WN0392  61       Day 7 Availabil
     C                     Z-ADD*ZERO     WN0393  61       Day 8 Availabil
     C                     Z-ADD*ZERO     WN0394  61       Day 9 Availabil
     C                     Z-ADD*ZERO     WN0395  61       Day 10 Availabi
     C                     Z-ADD*ZERO     WN0396  61       Day 11 Availabi
     C                     Z-ADD*ZERO     WN0397  61       Day 12 Availabi
     C                     Z-ADD*ZERO     WN0398  61       Day 13 Availabi
     C                     Z-ADD*ZERO     WN0399  61       Day 14 Availabi
     C                     Z-ADD*ZERO     WN0400  61       Day 15 Availabi
     C                     Z-ADD*ZERO     WN0401  61       Day 16 Availabi
     C                     Z-ADD*ZERO     WN0402  61       Day 17 Availabi
     C                     Z-ADD*ZERO     WN0403  61       Day 18 Availabi
     C                     Z-ADD*ZERO     WN0404  61       Day 19 Availabi
     C                     Z-ADD*ZERO     WN0405  61       Day 20 Availabi
     C                     Z-ADD*ZERO     WN0406  61       Day 21 Availabi
     C                     Z-ADD*ZERO     WN0407  61       Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0408  61       Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0409  61       Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0410  61       Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0411  61       Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0412  61       Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0413  61       Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0414  61       Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0415  61       Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0416  61       Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0417  61       Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0418  61       Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0419  61       Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0420  61       Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0421  61       Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0422  61       Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0423  61       Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0424  61       Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0425  61       Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0426  61       Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0427  61       Day 21 Sched Sh
     C                     MOVEL*BLANK    WN0428  1        Day 1 Rsrvd Oth
     C                     MOVEL*BLANK    WN0429  1        Day 2 Rsrvd Oth
     C                     MOVEL*BLANK    WN0430  1        Day 3 Rsrvd Oth
     C                     MOVEL*BLANK    WN0431  1        Day 4 Rsrvd Oth
     C                     MOVEL*BLANK    WN0432  1        Day 5 Rsrvd Oth
     C                     MOVEL*BLANK    WN0433  1        Day 6 Rsrvd Oth
     C                     MOVEL*BLANK    WN0434  1        Day 7 Rsrvd Oth
     C                     MOVEL*BLANK    WN0435  1        Day 8 Rsrvd Oth
     C                     MOVEL*BLANK    WN0436  1        Day 9 Rsrvd Oth
     C                     MOVEL*BLANK    WN0437  1        Day 10 Rsrv Oth
     C                     MOVEL*BLANK    WN0438  1        Day 11 Rsrv Oth
     C                     MOVEL*BLANK    WN0439  1        Day 12 Rsrv Oth
     C                     MOVEL*BLANK    WN0440  1        Day 13 Rsrv Oth
     C                     MOVEL*BLANK    WN0441  1        Day 14 Rsrv Oth
     C                     MOVEL*BLANK    WN0442  1        Day 15 Rsrv Oth
     C                     MOVEL*BLANK    WN0443  1        Day 16 Rsrv Oth
     C                     MOVEL*BLANK    WN0444  1        Day 17 Rsrv Oth
     C                     MOVEL*BLANK    WN0445  1        Day 18 Rsrv Oth
     C                     MOVEL*BLANK    WN0446  1        Day 19 Rsrv Oth
     C                     MOVEL*BLANK    WN0447  1        Day 20 Rsrv Oth
     C                     MOVEL*BLANK    WN0448  1        Day 21 Rsrv Oth
     C                     Z-ADD*ZERO     WN0449  50       Order Hold Over
     C                     Z-ADD*ZERO     WN0450  50       Order Hold Over
     C                     Z-ADD*ZERO     WN0451 112       Unit Weight
     C                     Z-ADD*ZERO     WN0452  52       Fresh Chilling
     C                     MOVEL*BLANK    WN0453  1        Piece Count Ite
     C                     Z-ADD*ZERO     WN0454  70       Pieces Per Bag
     C                     Z-ADD*ZERO     WN0455  70       Bags Per Unit
     C                     MOVEL*BLANK    WN0456  3        Production Ware
     C                     MOVEL*BLANK    WN0457  1        Lot Tracking Fl
     C                     MOVEL*BLANK    WN0458  1        Warehouse Std C
     C                     Z-ADD*ZERO     WN0459  52       Warehouse Chill
     C                     Z-ADD*ZERO     WN0460  50       Aging Day
     C                     Z-ADD*ZERO     WN0461  70       Week End Date
     C                     Z-ADD*ZERO     WN0462 112       Total Alloc/Ord
     C                     Z-ADD*ZERO     WN0463  70       Date Mon USR
     C                     Z-ADD*ZERO     WN0464  40       Accounting Year
     C                     Z-ADD*ZERO     WN0465  20       Accounting Peri
     C                     Z-ADD*ZERO     WN0466  20       Week Number
      *
      * Upd Alloc Order/Prod  IF
      * RTV Mon-Sat Dates      IF
      * Rtv Week Number       RT - Calendar  * 
     C                     EXSR STRVGN
      * RTV Mon-Sat w/Wk#      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0146           Company Number
     C                     Z-ADDWUESNB    WL0147           Accounting Year
     C                     Z-ADDWUEINB    WL0148           Week Number
     C                     MOVEL'Y'       WL0156    P      First Time Flag
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0149    WN0463           Date Mon USR
     C                     Z-ADDWL0150    WUJIDT           Date Tue USR
     C                     Z-ADDWL0151    WUJJDT           Date Wed USR
     C                     Z-ADDWL0152    WUJKDT           Date Thu USR
     C                     Z-ADDWL0153    WUJLDT           Date Fri USR
     C                     Z-ADDWL0154    WUJMDT           Date Sat USR
     C                     Z-ADDWL0155    WUJNDT           Date Sun USR
      * CASE: If any of the dates are zero
      *  - c1 OR c2 OR c3 OR c4 OR c5 OR c6
      *   |- c1    : PAR.Date Mon USR EQ WRK.ZERO
      *   |- c2    : PAR.Date Tue USR EQ WRK.ZERO
      *   |- c3    : PAR.Date Wed USR EQ WRK.ZERO
      *   |- c4    : PAR.Date Thu USR EQ WRK.ZERO
      *   |- c5    : PAR.Date Fri USR EQ WRK.ZERO
      *   |- c6    : PAR.Date Sat USR EQ WRK.ZERO
      *   '-
     C           WN0463    IFEQ WUW0NB                     *IF
     C           WUJIDT    OREQ WUW0NB                     *OR
     C           WUJJDT    OREQ WUW0NB                     *OR
     C           WUJKDT    OREQ WUW0NB                     *OR
     C           WUJLDT    OREQ WUW0NB                     *OR
     C           WUJMDT    OREQ WUW0NB                     *OR
      * And the Week is 52 or 53
      * CASE: PAR.Week Number is Year End
     C           WUEINB    IFGE 52                         *IF
     C           WUEINB    ANDLE53
     C                     ADD  1         WUESNB           Accounting Year
      * RTV Mon-Sat w/Wk#      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0146           Company Number
     C                     Z-ADDWUESNB    WL0147           Accounting Year
     C                     Z-ADD1         WL0148           Week Number
     C                     MOVEL'N'       WL0156    P      First Time Flag
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0149    WN0463           Date Mon USR
     C                     Z-ADDWL0150    WUJIDT           Date Tue USR
     C                     Z-ADDWL0151    WUJJDT           Date Wed USR
     C                     Z-ADDWL0152    WUJKDT           Date Thu USR
     C                     Z-ADDWL0153    WUJLDT           Date Fri USR
     C                     Z-ADDWL0154    WUJMDT           Date Sat USR
     C                     Z-ADDWL0155    WUJNDT           Date Sun USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  -1        WUESNB           Accounting Year
      * RTV Mon-Sat w/Wk#      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0146           Company Number
     C                     Z-ADDWUESNB    WL0147           Accounting Year
     C                     Z-ADD53        WL0148           Week Number
     C                     MOVEL'N'       WL0156    P      First Time Flag
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0149    WN0463           Date Mon USR
     C                     Z-ADDWL0150    WUJIDT           Date Tue USR
     C                     Z-ADDWL0151    WUJJDT           Date Wed USR
     C                     Z-ADDWL0152    WUJKDT           Date Thu USR
     C                     Z-ADDWL0153    WUJLDT           Date Fri USR
     C                     Z-ADDWL0154    WUJMDT           Date Sat USR
     C                     Z-ADDWL0155    WUJNDT           Date Sun USR
     C                     END                             *FI
     C                     END                             *FI
      * Rtv PA Shipdate-21+SunRT - Calendar  * 
     C                     EXSR SVRVGN
      *
     C                     Z-ADD*ZERO     WN0547 155       System Value Nu
      *
      * UPS Rtv Company/Item  IF
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0001           Company Number
     C                     Z-ADDWHC9NB    WL0002           Item Code
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    WUAVNA    P      Description Lin
     C                     MOVELWL0004    WUADCD    P      UOM Primary
     C                     Z-ADDWL0005    WN0451           Unit Weight
     C                     Z-ADDWL0006    WURINB           Item Structure
     C                     Z-ADDWL0007    WURHNB           Item Structure
     C                     Z-ADDWL0008    WURGNB           Item Structure
     C                     MOVELWL0009    WUN0CD    P      Item Type Code
     C                     MOVELWL0010    WUQ1CD    P      Default Warehou
     C                     Z-ADDWL0011    WN0452           Fresh Chilling
     C                     MOVELWL0012    YL0005    P      Base_Conv_Loss
     C                     MOVELWL0013    WUXWST    P      Variety_Rendere
     C                     MOVELWL0014    WUVMST    P      Credit Item Sta
     C                     Z-ADDWL0015    WUSWGH           Std Weight_Head
     C                     Z-ADDWL0016    WUPPHE           Pieces Per Head
     C                     MOVELWL0017    WUR3CD    P      Department Code
     C                     MOVELWL0018    WUSDCD    P      Group for Packa
     C                     MOVELWL0019    WUX5ST    P      Seconds Item
     C                     MOVELWL0020    WN0453    P      Piece Count Ite
     C                     Z-ADDWL0021    WN0454           Pieces Per Bag
     C                     Z-ADDWL0022    WN0455           Bags Per Unit
     C                     MOVELWL0023    WUSUST    P      Export_Domestic
     C                     MOVELWL0024    WUSVST    P      Print On Schedu
     C                     MOVELWL0025    WUSYST    P      Fresh Inv Alloc
     C                     MOVELWL0026    WUSZST    P      Fresh Sched As
     C                     MOVELWL0027    WUS1ST    P      Frozen Inv Allo
     C                     MOVELWL0028    WUXRCD    P      Primal Group Co
      * BPS Rtv Whs Info      RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP1AJCD    WL0029    P      Warehouse Code
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0030    WUWPST    P      Warehouse Type
     C                     MOVELWL0031    WUXUST    P      Trans Contol AS
     C                     MOVELWL0032    WUT0ST    P      Warehouse Locat
     C                     MOVELWL0033    WN0458    P      Warehouse Std C
     C                     Z-ADDWL0034    WN0459           Warehouse Chill
      * Rtv First Consumed Itm XF - Item Bill Of Material  * 
     C                     CALL 'POP1XFR'              90  Rtv First Consu
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0001  30       Company Number
     C                     PARM WHC9NB    WQ0002  70       Item Code
     C           YL0006    PARM *ZERO     WQ0003  70       Component Item
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POP1XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           WN0458    IFEQ 'Y'                        *IF
     C                     Z-ADDWN0459    WN0452           Fresh Chilling
     C                     END                             *FI
      * Rtv Prod Whse/Lot Trck RT - Warehouse  * 
     C                     EXSR SWRVGN
      * Rtv PA Inv/Hold Overs XF - PS Prod Item Schedule  * 
     C                     CALL 'PDS0XFR'              90  Rtv PA Inv/Hold
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0004  30       Company Number
     C                     PARM WHC9NB    WQ0005  70       Item Code
     C                     PARM P1AJCD    WQ0006  3        Warehouse Code
     C                     PARM WN0451    WQ0007 112       Unit Weight
     C                     PARM WN0452    WQ0008  52       Fresh Chilling
     C                     PARM WN0453    WQ0009  1        Piece Count Ite
     C                     PARM WN0454    WQ0010  70       Pieces Per Bag
     C                     PARM WN0455    WQ0011  70       Bags Per Unit
     C                     PARM WN0288    WQ0012  70       Avail Ship Date
     C                     PARM WN0289    WQ0013  70       Avail Ship Date
     C                     PARM WN0290    WQ0014  70       Avail Ship Date
     C                     PARM WN0291    WQ0015  70       Avail Ship Date
     C                     PARM WN0292    WQ0016  70       Avail Ship Date
     C                     PARM WN0293    WQ0017  70       Avail Ship Date
     C                     PARM WN0294    WQ0018  70       Avail Ship Date
     C                     PARM WN0295    WQ0019  70       Avail Ship Date
     C                     PARM WN0296    WQ0020  70       Avail Ship Date
     C                     PARM WN0297    WQ0021  70       Avail Ship Date
     C                     PARM WN0298    WQ0022  70       Avail Ship Date
     C                     PARM WN0299    WQ0023  70       Avail Ship Date
     C                     PARM WN0300    WQ0024  70       Avail Ship Date
     C                     PARM WN0301    WQ0025  70       Avail Ship Date
     C           WN0330    PARM WN0330    WQ0026  61       Day 1 Inventory
     C           WN0331    PARM WN0331    WQ0027  61       Day 2 Inventory
     C           WN0332    PARM WN0332    WQ0028  61       Day 3 Inventory
     C           WN0333    PARM WN0333    WQ0029  61       Day 4 Inventory
     C           WN0334    PARM WN0334    WQ0030  61       Day 5 Inventory
     C           WN0335    PARM WN0335    WQ0031  61       Day 6 Inventory
     C           WN0336    PARM WN0336    WQ0032  61       Day 7 Inventory
     C           WN0337    PARM WN0337    WQ0033  61       Day 8 Inventory
     C           WN0338    PARM WN0338    WQ0034  61       Day 9 Inventory
     C           WN0339    PARM WN0339    WQ0035  61       Day 10 Inventor
     C           WN0340    PARM WN0340    WQ0036  61       Day 11 Inventor
     C           WN0341    PARM WN0341    WQ0037  61       Day 12 Inventor
     C           WN0342    PARM WN0342    WQ0038  61       Day 13 Inventor
     C           WN0343    PARM WN0343    WQ0039  61       Day 14 Inventor
     C           WN0365    PARM WN0365    WQ0040  61       Day 1 Sales USR
     C           WN0366    PARM WN0366    WQ0041  61       Day 2 Sales USR
     C           WN0367    PARM WN0367    WQ0042  61       Day 3 Sales USR
     C           WN0368    PARM WN0368    WQ0043  61       Day 4 Sales USR
     C           WN0369    PARM WN0369    WQ0044  61       Day 5 Sales USR
     C           WN0370    PARM WN0370    WQ0045  61       Day 6 Sales USR
     C           WN0371    PARM WN0371    WQ0046  61       Day 7 Sales USR
     C           WN0449    PARM WN0449    WQ0047  50       Order Hold Over
     C           WN0450    PARM WN0450    WQ0048  50       Order Hold Over
     C                     PARM WN0457    WQ0049  1        Lot Tracking Fl
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDS0XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Rtv PA Production     RT - PS Prod Item Schedule  * 
     C                     EXSR SXRVGN
      * Create array to be used for PA Calc when orders are processed.
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Clear PA Array
      * Del PA Work Array Roll RT - *Arrays  * 
     C                     EXSR SYRVGN
      * Day 1 Available
      * PAR.Day 1 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 1 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 1 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 1 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 1 Sales USR
     C           WN0330    ADD  WN0344    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0407    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0365    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0386           Day 1 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0288    WL0157           Avail Ship Date
     C                     Z-ADDWN0309    WL0158           Production Date
     C                     Z-ADDWN0330    WL0159           Quantity Invent
     C                     Z-ADDWN0344    WL0160           Quantity Produc
     C                     Z-ADDWN0407    WL0161           Quantity Sched
     C                     Z-ADDWN0365    WL0162           Quantity Sales
     C                     Z-ADDWN0386    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 2 Available
      * PAR.Day 2 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 2 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 2 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 2 Sales USR
     C           WN0331    ADD  WN0345    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0408    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0366    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0387           Day 2 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0289    WL0157           Avail Ship Date
     C                     Z-ADDWN0310    WL0158           Production Date
     C                     Z-ADDWN0331    WL0159           Quantity Invent
     C                     Z-ADDWN0345    WL0160           Quantity Produc
     C                     Z-ADDWN0408    WL0161           Quantity Sched
     C                     Z-ADDWN0366    WL0162           Quantity Sales
     C                     Z-ADDWN0387    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 3 Available
      * PAR.Day 3 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 3 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 3 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 3 Sales USR
     C           WN0332    ADD  WN0346    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0409    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0367    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0388           Day 3 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0290    WL0157           Avail Ship Date
     C                     Z-ADDWN0311    WL0158           Production Date
     C                     Z-ADDWN0332    WL0159           Quantity Invent
     C                     Z-ADDWN0346    WL0160           Quantity Produc
     C                     Z-ADDWN0409    WL0161           Quantity Sched
     C                     Z-ADDWN0367    WL0162           Quantity Sales
     C                     Z-ADDWN0388    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 4 Available
      * PAR.Day 4 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 4 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 4 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 4 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Sales USR
     C           WN0333    ADD  WN0347    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0410    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0368    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0389           Day 4 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0291    WL0157           Avail Ship Date
     C                     Z-ADDWN0312    WL0158           Production Date
     C                     Z-ADDWN0333    WL0159           Quantity Invent
     C                     Z-ADDWN0347    WL0160           Quantity Produc
     C                     Z-ADDWN0410    WL0161           Quantity Sched
     C                     Z-ADDWN0368    WL0162           Quantity Sales
     C                     Z-ADDWN0389    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 5 Available
      * PAR.Day 5 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 5 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 5 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 5 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 5 Sales USR
     C           WN0334    ADD  WN0348    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0411    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0369    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0390           Day 5 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0292    WL0157           Avail Ship Date
     C                     Z-ADDWN0313    WL0158           Production Date
     C                     Z-ADDWN0334    WL0159           Quantity Invent
     C                     Z-ADDWN0348    WL0160           Quantity Produc
     C                     Z-ADDWN0411    WL0161           Quantity Sched
     C                     Z-ADDWN0369    WL0162           Quantity Sales
     C                     Z-ADDWN0390    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 6 Available
      * PAR.Day 6 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 6 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 6 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 6 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 6 Sales USR
     C           WN0335    ADD  WN0349    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0412    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0370    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0391           Day 6 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0293    WL0157           Avail Ship Date
     C                     Z-ADDWN0314    WL0158           Production Date
     C                     Z-ADDWN0335    WL0159           Quantity Invent
     C                     Z-ADDWN0349    WL0160           Quantity Produc
     C                     Z-ADDWN0412    WL0161           Quantity Sched
     C                     Z-ADDWN0370    WL0162           Quantity Sales
     C                     Z-ADDWN0391    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 7 Available
      * PAR.Day 7 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 7 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 7 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 7 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 7 Sales USR
     C           WN0336    ADD  WN0350    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0413    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0371    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0392           Day 7 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0294    WL0157           Avail Ship Date
     C                     Z-ADDWN0315    WL0158           Production Date
     C                     Z-ADDWN0336    WL0159           Quantity Invent
     C                     Z-ADDWN0350    WL0160           Quantity Produc
     C                     Z-ADDWN0413    WL0161           Quantity Sched
     C                     Z-ADDWN0371    WL0162           Quantity Sales
     C                     Z-ADDWN0392    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 8 Available
      * PAR.Day 8 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 8 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 8 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 8 Sales USR
     C           WN0351    SUB  WN0414    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0372    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0393           Day 8 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0295    WL0157           Avail Ship Date
     C                     Z-ADDWN0316    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0351    WL0160           Quantity Produc
     C                     Z-ADDWN0414    WL0161           Quantity Sched
     C                     Z-ADDWN0372    WL0162           Quantity Sales
     C                     Z-ADDWN0393    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 9 Available
      * PAR.Day 9 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 9 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 9 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 9 Sales USR
     C           WN0352    SUB  WN0415    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0373    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0394           Day 9 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0296    WL0157           Avail Ship Date
     C                     Z-ADDWN0317    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0352    WL0160           Quantity Produc
     C                     Z-ADDWN0415    WL0161           Quantity Sched
     C                     Z-ADDWN0373    WL0162           Quantity Sales
     C                     Z-ADDWN0394    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 10 Available
      * PAR.Day 10 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 10 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 10 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 10 Sales USR
     C           WN0353    SUB  WN0416    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0374    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0395           Day 10 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0297    WL0157           Avail Ship Date
     C                     Z-ADDWN0318    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0353    WL0160           Quantity Produc
     C                     Z-ADDWN0416    WL0161           Quantity Sched
     C                     Z-ADDWN0374    WL0162           Quantity Sales
     C                     Z-ADDWN0395    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 11 Available
      * PAR.Day 11 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 11 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 11 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 11 Sales USR
     C           WN0354    SUB  WN0417    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0375    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0396           Day 11 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0298    WL0157           Avail Ship Date
     C                     Z-ADDWN0319    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0354    WL0160           Quantity Produc
     C                     Z-ADDWN0417    WL0161           Quantity Sched
     C                     Z-ADDWN0375    WL0162           Quantity Sales
     C                     Z-ADDWN0396    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 12 Available
      * PAR.Day 12 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 12 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 12 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 12 Sales USR
     C           WN0355    SUB  WN0418    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0376    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0397           Day 12 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0299    WL0157           Avail Ship Date
     C                     Z-ADDWN0320    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0355    WL0160           Quantity Produc
     C                     Z-ADDWN0418    WL0161           Quantity Sched
     C                     Z-ADDWN0376    WL0162           Quantity Sales
     C                     Z-ADDWN0397    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 13 Available
      * PAR.Day 13 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 13 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 13 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 13 Sales USR
     C           WN0356    SUB  WN0419    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0377    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0398           Day 13 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0300    WL0157           Avail Ship Date
     C                     Z-ADDWN0321    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0356    WL0160           Quantity Produc
     C                     Z-ADDWN0419    WL0161           Quantity Sched
     C                     Z-ADDWN0377    WL0162           Quantity Sales
     C                     Z-ADDWN0398    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 14 Available
      * PAR.Day 14 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 14 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 14 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 14 Sales USR
     C           WN0357    SUB  WN0420    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0378    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0399           Day 14 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0301    WL0157           Avail Ship Date
     C                     Z-ADDWN0322    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0357    WL0160           Quantity Produc
     C                     Z-ADDWN0420    WL0161           Quantity Sched
     C                     Z-ADDWN0378    WL0162           Quantity Sales
     C                     Z-ADDWN0399    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 15 Available
      * PAR.Day 15 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 15 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 15 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 15 Sales USR
     C           WN0358    SUB  WN0421    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0379    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0400           Day 15 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0302    WL0157           Avail Ship Date
     C                     Z-ADDWN0323    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0358    WL0160           Quantity Produc
     C                     Z-ADDWN0421    WL0161           Quantity Sched
     C                     Z-ADDWN0379    WL0162           Quantity Sales
     C                     Z-ADDWN0400    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 16 Available
      * PAR.Day 16 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 16 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 16 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 16 Sales USR
     C           WN0359    SUB  WN0422    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0380    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0401           Day 16 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0303    WL0157           Avail Ship Date
     C                     Z-ADDWN0324    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0359    WL0160           Quantity Produc
     C                     Z-ADDWN0422    WL0161           Quantity Sched
     C                     Z-ADDWN0380    WL0162           Quantity Sales
     C                     Z-ADDWN0401    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 17 Available
      * PAR.Day 17 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 17 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 17 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 17 Sales USR
     C           WN0360    SUB  WN0423    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0381    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0402           Day 17 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0304    WL0157           Avail Ship Date
     C                     Z-ADDWN0325    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0360    WL0160           Quantity Produc
     C                     Z-ADDWN0423    WL0161           Quantity Sched
     C                     Z-ADDWN0381    WL0162           Quantity Sales
     C                     Z-ADDWN0402    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 18 Available
      * PAR.Day 18 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 18 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 18 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 18 Sales USR
     C           WN0361    SUB  WN0424    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0382    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0403           Day 18 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0305    WL0157           Avail Ship Date
     C                     Z-ADDWN0326    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0361    WL0160           Quantity Produc
     C                     Z-ADDWN0424    WL0161           Quantity Sched
     C                     Z-ADDWN0382    WL0162           Quantity Sales
     C                     Z-ADDWN0403    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 19 Available
      * PAR.Day 19 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 19 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 19 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 19 Sales USR
     C           WN0362    SUB  WN0425    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0383    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0404           Day 19 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0306    WL0157           Avail Ship Date
     C                     Z-ADDWN0327    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0362    WL0160           Quantity Produc
     C                     Z-ADDWN0425    WL0161           Quantity Sched
     C                     Z-ADDWN0383    WL0162           Quantity Sales
     C                     Z-ADDWN0404    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 20 Available
      * PAR.Day 20 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 20 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 20 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 20 Sales USR
     C           WN0363    SUB  WN0426    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0384    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0405           Day 20 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0307    WL0157           Avail Ship Date
     C                     Z-ADDWN0328    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0363    WL0160           Quantity Produc
     C                     Z-ADDWN0426    WL0161           Quantity Sched
     C                     Z-ADDWN0384    WL0162           Quantity Sales
     C                     Z-ADDWN0405    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
      * Day 21 Available
      * PAR.Day 21 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 21 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 21 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 21 Sales USR
     C           WN0364    SUB  WN0427    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0385    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0406           Day 21 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0308    WL0157           Avail Ship Date
     C                     Z-ADDWN0329    WL0158           Production Date
     C                     Z-ADDWUQINV    WL0159           Quantity Invent
     C                     Z-ADDWN0364    WL0160           Quantity Produc
     C                     Z-ADDWN0427    WL0161           Quantity Sched
     C                     Z-ADDWN0385    WL0162           Quantity Sales
     C                     Z-ADDWN0406    WL0163           Quantity Availa
     C                     MOVEL'N'       WL0164    P      Reserved for Ot
     C                     EXSR TACRRC
     C                     END                             *FI
      * Rtv Sched Ship/Clc PA RT - PD Order Detail  * 
     C                     EXSR TBRVGN
      * If this is a production whse, then reserve other whse orders.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Production Warehouse Code EQ PAR.Warehouse Code
      *   |- c2    : PAR.Production Warehouse Code is Warehouse Code Blan
      *   '-
     C           WN0456    IFEQ P1AJCD                     *IF
     C           WN0456    OREQ *BLANK                     *OR
      * Rtv Rsrvd Other Whse  RT - PD Order Detail Schedule  * 
     C                     EXSR TORVGN
     C                     END                             *FI
      * Once PA has been calculated, allocate order if called from alloca
      * CASE: PAR.Allocate Order/Prod Sts is Allocate Order
     C           'PROD'    IFEQ 'ALLOC'                    *IF
      * Retrieve Week End date for *JOB DATE
      * Determine production type
      * CASE: PAR.Scheduled Ship Date EQ JOB.*Job date
     C           WUAODT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0287           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0287           Production Type
     C                     END                             *FI
      * Rtv Production Date   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0165           Company Number
     C                     MOVELWN0287    WL0166    P      Production Type
     C                     Z-ADDWHC9NB    WL0168           Item Code
     C                     MOVELP1AJCD    WL0169    P      Warehouse Code
     C                     Z-ADDWUAODT    WL0170           PS Available Sh
     C                     EXSR TDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0167    YL0010           Production Date
      * RTV Day/Wk/Prd/Yr      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0171           Company Number
     C                     Z-ADD##JDT     WL0172           Post to G/L Dat
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0173    WUCQNB           Julian Date
     C                     Z-ADDWL0174    WN0464           Accounting Year
     C                     Z-ADDWL0175    WN0465           Accounting Peri
     C                     Z-ADDWL0176    WUBZNB           OM Week
     C                     MOVELWL0177    WUA9ST    P      Day of Week
     C                     Z-ADDWL0178    WN0466           Week Number
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0179           Company Number
     C                     Z-ADDWN0464    WL0181           Accounting Year
     C                     Z-ADDWN0465    WL0182           Accounting Peri
     C                     MOVEL'7'       WL0183    P      Day of Week
     C                     Z-ADDWN0466    WL0184           Week Number
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0180    WN0461           Post to G/L Dat
      * DOC: 04/11/07 Change Log
     C                     EXSR UFSUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: PAR.Age Code is A: 0 Day
     C           WURPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0460           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           WURPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0460           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           WURPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0460           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           WURPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0460           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           WURPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0460           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           WURPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0460           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           WURPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0460           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0460           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Clc Allocate Order INV RT - *Arrays  * 
     C                     EXSR TRRVGN
      * Set age code to specific day by number
      * CASE: PAR.Age Code is A: 0 Day
     C           WURPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0460           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           WURPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0460           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           WURPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0460           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           WURPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0460           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           WURPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0460           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           WURPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0460           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           WURPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0460           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0460           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Clc Allocate Order PRD RT - *Arrays  * 
     C                     EXSR TWRVGN
      * Calculate weight scheduled and need.
     C           WUCCQT    MULT WN0451    WUAUWG           Weight Schedule
     C           WUHWQT    MULT WN0451    WUENWG           ATS Weight Need
     C                     END                             *FI
      * Rtv Avail for Prod Dt RT - *Arrays  * 
     C                     EXSR TXRVGN
      * Peices Available
      * PAR.RM Pieces Avail USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.ATS Quantity Avail USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0231    MULT WN0229    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT WN0230    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0243           RM Pieces Avail
      * Weight Available
      * PAR.RM Weight Avail USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.ATS Quantity Avail USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
     C           WN0231    MULT WN0228    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0244           RM Weight Avail
      * Allocate consumed items or Deallocate consumed items.
      * CASE: PAR.ATS Adj Type USR 2 is Order Allocate
     C           P5QJST    IFEQ 'OA'                       *IF
     C                     Z-ADD*ZERO     WN0251           Pieces Schedule
     C                     Z-ADD*ZERO     WN0252           Weight Schedule
      * Changed to process the Consumption based on Pieces Per Head of
      * the Component Item Code.  Mark Arensberg  9/11/97
      * Process by Pieces Per Head from Component Item
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Pieces Per Head is GT Zero
      *   |- c2    : PAR.Piece Count Item USR is yes
      *   '-
     C           WN0259    IFGT 0                          *IF
     C           WN0262    OREQ 'Y'                        *OR
      * CASE: PAR.RM Pieces Need USR is GT Zero
     C           WN0245    IFGT 0                          *IF
      * Process by Consume Priority % using Pieces
      * CASE: DB1.Consume Priority % is Equal to 100 Pct
     C           WHBMY1    IFEQ 100                        *IF
      * Consume item by total weight needed if priority is 99999
      * CASE: DB1.Consume Priority is 99999
     C           WHCNSM    IFEQ 99999                      *IF
     C                     Z-ADDP3PIAJ    WN0253           Pieces Need USR
      * Weight Need
      * PAR.Weight Need USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Need USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0253    MULT WN0257    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0254           Weight Need USR
      * Pieces/Weight Scheduled
      * CASE: PAR.Pieces Need USR GT PAR.RM Pieces Avail USR
     C           WN0253    IFGT WN0243                     *IF
     C                     Z-ADDWN0243    WN0251           Pieces Schedule
     C                     Z-ADDWN0244    WN0252           Weight Schedule
     C                     Z-ADDWN0243    WN0245           RM Pieces Need
     C                     Z-ADDWN0244    WN0246           RM Weight Need
     C                     ELSE
      * CASE: PAR.Pieces Need USR LE PAR.RM Pieces Avail USR
     C           WN0253    IFLE WN0243                     *IF
     C                     Z-ADDWN0253    WN0251           Pieces Schedule
     C                     Z-ADDWN0254    WN0252           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0245    WN0253           Pieces Need USR
      * Weight Need
      * PAR.Weight Need USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Need USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0253    MULT WN0257    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0254           Weight Need USR
      * Pieces/Weight Scheduled
      * CASE: PAR.Pieces Need USR GT PAR.RM Pieces Avail USR
     C           WN0253    IFGT WN0243                     *IF
     C                     Z-ADDWN0243    WN0251           Pieces Schedule
     C                     Z-ADDWN0244    WN0252           Weight Schedule
     C                     SUB  WN0243    WN0245           RM Pieces Need
     C                     SUB  WN0244    WN0246           RM Weight Need
     C                     SUB  WN0243    WN0247           RM Pieces Alloc
     C                     SUB  WN0244    WN0248           RM Weight Alloc
     C                     ELSE
      * CASE: PAR.Pieces Need USR LE PAR.RM Pieces Avail USR
     C           WN0253    IFLE WN0243                     *IF
     C                     Z-ADDWN0253    WN0251           Pieces Schedule
     C                     Z-ADDWN0254    WN0252           Weight Schedule
     C                     SUB  WN0253    WN0245           RM Pieces Need
     C                     SUB  WN0254    WN0246           RM Weight Need
     C                     SUB  WN0253    WN0247           RM Pieces Alloc
     C                     SUB  WN0254    WN0248           RM Weight Alloc
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.Consume Priority % is Not Equal to 100 PCt
     C           WHBMY1    IFNE 100                        *IF
      * Consume item by total weight needed if priority is 99999
      * CASE: DB1.Consume Priority is 99999
     C           WHCNSM    IFEQ 99999                      *IF
      * Pieces Need
      * PAR.Pieces Need USR =
      *    *COMPUTE (x1 * (x2 / x3))
      * x1    : PAR.RM Pieces Need USR
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : DB1.Consume Priority Percent
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           WHBMY1    DIV  100       W0WB01    H      *Synon (15,5) w
     C           WN0245    MULT W0WB01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0253           Pieces Need USR
      * Weight Need
      * PAR.Weight Need USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Need USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0253    MULT WN0257    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0254           Weight Need USR
      * Pieces/Weight Scheduled
      * CASE: PAR.Pieces Need USR GT PAR.RM Pieces Avail USR
     C           WN0253    IFGT WN0243                     *IF
     C                     Z-ADDWN0243    WN0251           Pieces Schedule
     C                     Z-ADDWN0244    WN0252           Weight Schedule
     C                     ELSE
      * CASE: PAR.Pieces Need USR LE PAR.RM Pieces Avail USR
     C           WN0253    IFLE WN0243                     *IF
     C                     Z-ADDWN0253    WN0251           Pieces Schedule
     C                     Z-ADDWN0254    WN0252           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Pieces Need
      * PAR.Pieces Need USR =
      *    *COMPUTE (x1 * (x2 / x3))
      * x1    : PAR.RM Pieces Alloc USR
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : DB1.Consume Priority Percent
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           WHBMY1    DIV  100       W0WB01    H      *Synon (15,5) w
     C           WN0247    MULT W0WB01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0253           Pieces Need USR
      * Weight Need
      * PAR.Weight Need USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Need USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0253    MULT WN0257    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0254           Weight Need USR
      * Pieces/Weight Scheduled
      * CASE: PAR.Pieces Need USR GT PAR.RM Pieces Avail USR
     C           WN0253    IFGT WN0243                     *IF
     C                     Z-ADDWN0243    WN0251           Pieces Schedule
     C                     Z-ADDWN0244    WN0252           Weight Schedule
     C                     SUB  WN0243    WN0245           RM Pieces Need
     C                     SUB  WN0244    WN0246           RM Weight Need
     C                     ELSE
      * CASE: PAR.Pieces Need USR LE PAR.RM Pieces Avail USR
     C           WN0253    IFLE WN0243                     *IF
     C                     Z-ADDWN0253    WN0251           Pieces Schedule
     C                     Z-ADDWN0254    WN0252           Weight Schedule
     C                     SUB  WN0253    WN0245           RM Pieces Need
     C                     SUB  WN0254    WN0246           RM Weight Need
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.RM Weight Need USR is Greater than zero
     C           WN0246    IFGT 0                          *IF
      * Process by Consume Priority % using Weight
      * CASE: DB1.Consume Priority % is Equal to 100 Pct
     C           WHBMY1    IFEQ 100                        *IF
      * Consume item by total weight needed if priority is 99999
      * CASE: DB1.Consume Priority is 99999
     C           WHCNSM    IFEQ 99999                      *IF
     C                     Z-ADDP1WTUP    WN0254           Weight Need USR
      * Pieces Need
      * CASE: PAR.PS Avg Piece Wgt is GT Zero
     C           WN0257    IFGT 0                          *IF
      * Pieces Need USR
      * PAR.Pieces Need USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Need USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0254    DIV  WN0257    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0253           Pieces Need USR
     C                     END                             *FI
      * Pieces/Weight Scheduled
      * CASE: PAR.Pieces Need USR GT PAR.RM Pieces Avail USR
     C           WN0253    IFGT WN0243                     *IF
     C                     Z-ADDWN0243    WN0251           Pieces Schedule
     C                     Z-ADDWN0244    WN0252           Weight Schedule
     C                     Z-ADDWN0243    WN0245           RM Pieces Need
     C                     Z-ADDWN0244    WN0246           RM Weight Need
     C                     ELSE
      * CASE: PAR.Pieces Need USR LE PAR.RM Pieces Avail USR
     C           WN0253    IFLE WN0243                     *IF
     C                     Z-ADDWN0253    WN0251           Pieces Schedule
     C                     Z-ADDWN0254    WN0252           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0246    WN0254           Weight Need USR
      * Pieces Need
      * CASE: PAR.PS Avg Piece Wgt is GT Zero
     C           WN0257    IFGT 0                          *IF
      * Pieces Need USR
      * PAR.Pieces Need USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Need USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0254    DIV  WN0257    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0253           Pieces Need USR
     C                     END                             *FI
      * Pieces/Weight Scheduled
      * CASE: PAR.Weight Need USR GT PAR.RM Weight Avail USR
     C           WN0254    IFGT WN0244                     *IF
     C                     Z-ADDWN0243    WN0251           Pieces Schedule
     C                     Z-ADDWN0244    WN0252           Weight Schedule
     C                     SUB  WN0243    WN0245           RM Pieces Need
     C                     SUB  WN0244    WN0246           RM Weight Need
     C                     SUB  WN0243    WN0247           RM Pieces Alloc
     C                     SUB  WN0244    WN0248           RM Weight Alloc
     C                     ELSE
      * CASE: PAR.Weight Need USR LE PAR.RM Weight Avail USR
     C           WN0254    IFLE WN0244                     *IF
     C                     Z-ADDWN0253    WN0251           Pieces Schedule
     C                     Z-ADDWN0254    WN0252           Weight Schedule
     C                     SUB  WN0253    WN0245           RM Pieces Need
     C                     SUB  WN0254    WN0246           RM Weight Need
     C                     SUB  WN0253    WN0247           RM Pieces Alloc
     C                     SUB  WN0254    WN0248           RM Weight Alloc
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.Consume Priority % is Not Equal to 100 PCt
     C           WHBMY1    IFNE 100                        *IF
      * Consume item by total weight needed if priority is 99999
      * CASE: DB1.Consume Priority is 99999
     C           WHCNSM    IFEQ 99999                      *IF
      * Weight Need
      * PAR.Weight Need USR =
      *    *COMPUTE (x1 * (x2 / x3))
      * x1    : PAR.RM Weight Need USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : DB1.Consume Priority Percent
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           WHBMY1    DIV  100       W0WB01    H      *Synon (15,5) w
     C           WN0246    MULT W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0254           Weight Need USR
      * Pieces Need
      * CASE: PAR.PS Avg Piece Wgt is GT Zero
     C           WN0257    IFGT 0                          *IF
      * Pieces Need
      * PAR.Pieces Need USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Need USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0254    DIV  WN0257    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0253           Pieces Need USR
     C                     END                             *FI
      * Pieces/Weight Scheduled
      * CASE: PAR.Pieces Need USR GT PAR.RM Pieces Avail USR
     C           WN0253    IFGT WN0243                     *IF
     C                     Z-ADDWN0243    WN0251           Pieces Schedule
     C                     Z-ADDWN0244    WN0252           Weight Schedule
     C                     ELSE
      * CASE: PAR.Pieces Need USR LE PAR.RM Pieces Avail USR
     C           WN0253    IFLE WN0243                     *IF
     C                     Z-ADDWN0253    WN0251           Pieces Schedule
     C                     Z-ADDWN0254    WN0252           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Weight Need
      * PAR.Weight Need USR =
      *    *COMPUTE (x1 * (x2 / x3))
      * x1    : PAR.RM Weight Alloc USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : DB1.Consume Priority Percent
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           WHBMY1    DIV  100       W0WB01    H      *Synon (15,5) w
     C           WN0248    MULT W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0254           Weight Need USR
      * Pieces Need
      * CASE: PAR.PS Avg Piece Wgt is GT Zero
     C           WN0257    IFGT 0                          *IF
      * Pieces Need
      * PAR.Pieces Need USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Need USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0254    DIV  WN0257    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0253           Pieces Need USR
     C                     END                             *FI
      * Pieces/Weight Scheduled
      * CASE: PAR.Weight Need USR GT PAR.RM Weight Avail USR
     C           WN0254    IFGT WN0244                     *IF
     C                     Z-ADDWN0243    WN0251           Pieces Schedule
     C                     Z-ADDWN0244    WN0252           Weight Schedule
     C                     SUB  WN0243    WN0245           RM Pieces Need
     C                     SUB  WN0244    WN0246           RM Weight Need
     C                     ELSE
      * CASE: PAR.Weight Need USR LE PAR.RM Weight Avail USR
     C           WN0254    IFLE WN0244                     *IF
     C                     Z-ADDWN0253    WN0251           Pieces Schedule
     C                     Z-ADDWN0254    WN0252           Weight Schedule
     C                     SUB  WN0253    WN0245           RM Pieces Need
     C                     SUB  WN0254    WN0246           RM Weight Need
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Add up consumed for (100% & priority 99999) or priority not 99999
      * CASE:
      *  - (c1 AND c2) OR c3
      *   |- c1    : DB1.Consume Priority % is Equal to 100 Pct
      *   |- c2    : DB1.Consume Priority is 99999
      *   |- c3    : DB1.Consume Priority is NE 99999
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WHBMY1    IFEQ 100                        *IF
     C           WHCNSM    IFEQ 99999                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           WHCNSM    IFNE 99999                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  WN0251    WN0255           Pieces Consumed
     C                     ADD  WN0252    WN0256           Weight Consumed
     C                     END                             *FI
      * **UPDATE**
      * BPS Upd Pcs/Wgt Conv  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0236           Company Number
     C                     MOVELP1V5ST    WL0237    P      Production Type
     C                     Z-ADDP1ELDT    WL0238           Production Date
     C                     Z-ADDWHC9NB    WL0239           Item Code
     C                     MOVELP1AJCD    WL0240    P      Warehouse Code
     C                     Z-ADDWN0251    WL0241           Pieces Schedule
     C                     Z-ADDWN0252    WL0242           Weight Schedule
     C                     Z-ADD*ZERO     WL0243           Order Number
     C                     Z-ADD*ZERO     WL0244           Order Sequence
     C                     Z-ADD*ZERO     WL0245           Order Secondary
     C                     Z-ADD*ZERO     WL0246           Item Code USR
     C                     EXSR TYRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0251           Pieces Schedule
     C                     Z-ADD*ZERO     WN0252           Weight Schedule
      * Changed to process the Consumption based on Pieces Per Head of
      * the Component Item Code.  Mark Arensberg  9/11/97
      * Process by Pieces Per Head from Component Item
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Pieces Per Head is GT Zero
      *   |- c2    : PAR.Piece Count Item USR is yes
      *   '-
     C           WN0259    IFGT 0                          *IF
     C           WN0262    OREQ 'Y'                        *OR
      * CASE: PAR.RM Pieces Need USR is LT Zeros
     C           WN0245    IFLT 0                          *IF
      * Process by Consume Priority % using Pieces
      * CASE:
      *  - c1 AND (c2 OR c3)
      *   |- c1    : DB1.Consume Priority % is Equal to 100 Pct
      *   |- c2    : PAR.RM Pieces Alloc USR is LT Zeros
      *   |- c3    : PAR.RM Weight Alloc USR is Less than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WHBMY1    IFEQ 100                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WN0247    IFLT 0                          *IF
     C           WN0248    ORLT 0                          *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Deallocate all of the converted item or what can be deallocated
      * CASE: PAR.PS Pieces Converted LE PAR.RM Pieces Alloc USR
     C           WN0240    IFLE WN0247                     *IF
     C                     Z-ADDWN0247    WN0251           Pieces Schedule
      * Weight Need
      * PAR.Weight Scheduled USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Scheduled USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0251    MULT WN0257    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0252           Weight Schedule
     C                     Z-ADD*ZERO     WN0247           RM Pieces Alloc
     C                     Z-ADD*ZERO     WN0248           RM Weight Alloc
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0240    WN0251           Pieces Schedule
      * Weight Need
      * PAR.Weight Scheduled USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Scheduled USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0251    MULT WN0257    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0252           Weight Schedule
     C                     SUB  WN0251    WN0247           RM Pieces Alloc
     C                     SUB  WN0252    WN0248           RM Weight Alloc
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.Consume Priority % is Not Equal to 100 PCt
     C           WHBMY1    IFNE 100                        *IF
      * Consume the total pieces or weight needed for priority 99999
      * CASE: DB1.Consume Priority is 99999
     C           WHCNSM    IFEQ 99999                      *IF
      * Pieces Need
      * PAR.Pieces Scheduled USR =
      *    *COMPUTE (x1 * (x2 / x3))
      * x1    : PAR.RM Pieces Need USR
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : DB1.Consume Priority Percent
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           WHBMY1    DIV  100       W0WB01    H      *Synon (15,5) w
     C           WN0245    MULT W0WB01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0251           Pieces Schedule
      * Weight Need
      * PAR.Weight Scheduled USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Scheduled USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0251    MULT WN0257    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0252           Weight Schedule
     C                     ELSE
      * CASE: *OTHERWISE
      * Pieces Need
      * PAR.Pieces Scheduled USR =
      *    *COMPUTE (x1 * (x2 / x3))
      * x1    : PAR.RM Pieces Alloc USR
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : DB1.Consume Priority Percent
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           WHBMY1    DIV  100       W0WB01    H      *Synon (15,5) w
     C           WN0247    MULT W0WB01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0251           Pieces Schedule
      * Weight Need
      * PAR.Weight Scheduled USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Scheduled USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0251    MULT WN0257    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0252           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.RM Weight Need USR is Less than zero
     C           WN0246    IFLT 0                          *IF
      * Process by Consume Priority % using Weight
      * CASE:
      *  - c1 AND (c2 OR c3)
      *   |- c1    : DB1.Consume Priority % is Equal to 100 Pct
      *   |- c2    : PAR.RM Weight Alloc USR is Less than zero
      *   |- c3    : PAR.RM Pieces Alloc USR is LT Zeros
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WHBMY1    IFEQ 100                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WN0248    IFLT 0                          *IF
     C           WN0247    ORLT 0                          *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Deallocate all of the converted item or what can be deallocated
      * CASE: PAR.PS Weight Converted LE PAR.RM Weight Alloc USR
     C           WN0239    IFLE WN0248                     *IF
     C                     Z-ADDWN0248    WN0252           Weight Schedule
      * Pieces Need
      * CASE: PAR.PS Avg Piece Wgt is GT Zero
     C           WN0257    IFGT 0                          *IF
      * Pieces Need USR
      * PAR.Pieces Scheduled USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0252    DIV  WN0257    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0251           Pieces Schedule
     C                     END                             *FI
     C                     Z-ADD*ZERO     WN0247           RM Pieces Alloc
     C                     Z-ADD*ZERO     WN0248           RM Weight Alloc
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0239    WN0252           Weight Schedule
      * Pieces Need
      * CASE: PAR.PS Avg Piece Wgt is GT Zero
     C           WN0257    IFGT 0                          *IF
      * Pieces Need USR
      * PAR.Pieces Scheduled USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0252    DIV  WN0257    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0251           Pieces Schedule
     C                     END                             *FI
     C                     SUB  WN0251    WN0247           RM Pieces Alloc
     C                     SUB  WN0252    WN0248           RM Weight Alloc
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.Consume Priority % is Not Equal to 100 PCt
     C           WHBMY1    IFNE 100                        *IF
      * Consume the total pieces or weight needed for priority 99999
      * CASE: DB1.Consume Priority is 99999
     C           WHCNSM    IFEQ 99999                      *IF
      * Weight Need
      * PAR.Weight Scheduled USR =
      *    *COMPUTE (x1 * (x2 / x3))
      * x1    : PAR.RM Weight Need USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : DB1.Consume Priority Percent
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           WHBMY1    DIV  100       W0WB01    H      *Synon (15,5) w
     C           WN0246    MULT W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0252           Weight Schedule
      * Pieces Need
      * CASE: PAR.PS Avg Piece Wgt is GT Zero
     C           WN0257    IFGT 0                          *IF
      * Pieces Need
      * PAR.Pieces Scheduled USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0252    DIV  WN0257    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0251           Pieces Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Weight Need
      * PAR.Weight Scheduled USR =
      *    *COMPUTE (x1 * (x2 / x3))
      * x1    : PAR.RM Weight Alloc USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : DB1.Consume Priority Percent
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           WHBMY1    DIV  100       W0WB01    H      *Synon (15,5) w
     C           WN0248    MULT W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0252           Weight Schedule
      * Pieces Need
      * CASE: PAR.PS Avg Piece Wgt is GT Zero
     C           WN0257    IFGT 0                          *IF
      * Pieces Need
      * PAR.Pieces Scheduled USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0252    DIV  WN0257    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0251           Pieces Schedule
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Add up consumed for (100% & priority 99999) or priority not 99999
      * CASE:
      *  - (c1 AND c2) OR c3
      *   |- c1    : DB1.Consume Priority % is Equal to 100 Pct
      *   |- c2    : DB1.Consume Priority is 99999
      *   |- c3    : DB1.Consume Priority is NE 99999
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WHBMY1    IFEQ 100                        *IF
     C           WHCNSM    IFEQ 99999                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           WHCNSM    IFNE 99999                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  WN0251    WN0255           Pieces Consumed
     C                     ADD  WN0252    WN0256           Weight Consumed
     C                     END                             *FI
      * **UPDATE**
      * BPS Upd Pcs/Wgt Conv  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0236           Company Number
     C                     MOVELP1V5ST    WL0237    P      Production Type
     C                     Z-ADDP1ELDT    WL0238           Production Date
     C                     Z-ADDWHC9NB    WL0239           Item Code
     C                     MOVELP1AJCD    WL0240    P      Warehouse Code
     C                     Z-ADDWN0251    WL0241           Pieces Schedule
     C                     Z-ADDWN0252    WL0242           Weight Schedule
     C                     Z-ADD*ZERO     WL0243           Order Number
     C                     Z-ADD*ZERO     WL0244           Order Sequence
     C                     Z-ADD*ZERO     WL0245           Order Secondary
     C                     Z-ADD*ZERO     WL0246           Item Code USR
     C                     EXSR TYRVGN
     C                     END                             *FI
     C                     END                             *FI
      * ** 06/24/2014 JJH E3160
      * ** Changed the definition of the "Average if WPA" field to "Upd
      * ** Standard Production".  Include Item Bill of Material records
      * ** with Upd Standard Production = Blank(yes).
      * Produced Item
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : DB1.BOM Type is Produced - Meat
      *   |- c2    : DB1.Production Yield is not equal to zeros
      *   |- c3    : DB1.Upd Standard Production is blank
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WHV2ST    IFEQ 'P'                        *IF
     C           WHBPPR    IFNE 0                          *IF
     C           WHYAST    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * FP1054 RMC 5/14/09 chg above CASE to ne 0, it was GT 0
      * If adjustment type is not forecast then allocate total need
      * CASE: PAR.ATS Adj Type USR is Schedule Adjust Forecast
     C           P1ZLST    IFEQ 'SF'                       *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1WTUP    WN0256           Weight Consumed
     C                     Z-ADDP3PIAJ    WN0255           Pieces Consumed
     C                     END                             *FI
      * Weight Scheduled
      * PAR.Weight Scheduled USR =
      *    *COMPUTE (x1 * (x2 / x3))
      * x1    : PAR.Weight Consumed USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : DB1.Production Yield
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           WHBPPR    DIV  100       W0WB01    H      *Synon (15,5) w
     C           WN0256    MULT W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0252           Weight Schedule
      * The number of Pieces Scheduled for a Produced Item is based
      * on the Piece Count Item sts of the Component Item Code.
      * Pieces Scheduled
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
     C                     Z-ADDWN0255    WN0251           Pieces Schedule
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0251           Pieces Schedule
     C                     END                             *FI
      * **UPDATE**
      * UPD Schedule Adj      RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0035           Company Number
     C                     MOVELP1V5ST    WL0036    P      Production Type
     C                     Z-ADDP1ELDT    WL0037           Production Date
     C                     Z-ADDWHC9NB    WL0038           Item Code
     C                     MOVELP1AJCD    WL0039    P      Warehouse Code
     C                     Z-ADDWN0252    WL0040           PS Weight Prod
     C                     Z-ADDWN0251    WL0041           PS Pieces Prod
     C                     MOVELP1ZLST    WL0042    P      ATS Adj Type US
     C                     EXSR SDRVGN
     C                     END                             *FI
     C           KRSSK     READE@IOREGB                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Rtv Export/Department RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WAHGCD           Item Code
      * Setup key
     C                     Z-ADDP1AIC3    WAAIC3           Company Number
     C                     Z-ADDP1HGCD    WAHGCD           Item Code
      * Establish starting position
     C           KRSSL     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WN0260           Department Code
     C                     MOVEL*BLANK    WN0261           Export_Domestic
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAR3CD    WN0260           Department Code
     C                     MOVELWASUST    WN0261           Export_Domestic
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv Export Pass Rate  RT - PS Production Capability  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WIAIC3    WQSM01           Company Number
     C           *LIKE     DEFN WIR3CD    WQSM02           Department Code
      * Define keylist
     C           KPSSM     KLIST
     C                     KFLD           WQSM01           Company Number
     C                     KFLD           WQSM02           Department Code
     C                     KFLD           WIGJDT           Effective Produ
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           WQSM01           Company Number
     C                     KFLD           WQSM02           Department Code
      * Setup key
     C                     Z-ADDP1AIC3    WQSM01           Company Number
     C                     MOVELWN0260    WQSM02           Department Code
     C                     Z-ADD9999999   WIGJDT           Effective Produ
      * Establish starting position
     C           KPSSM     SETLL@I7CPBK                    *
     C           KRSSM     READE@I7CPBK                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1761' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0236           Export Pass Rat
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWIEPPC    WN0236           Export Pass Rat
     C                     GOTO SMEXIT                     *QUIT
     C           KRSSM     READE@I7CPBK                  90*
     C                     ENDDO
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0263  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0264  70       PS Pieces Ship
     C                     MOVEL*BLANK    WN0265  1        Piece Count Ite
     C                     Z-ADD*ZERO     WN0266  70       Pieces Per Bag
     C                     Z-ADD*ZERO     WN0267  70       Bags Per Unit
     C                     Z-ADD*ZERO     WN0268  92       Weight Producti
     C                     Z-ADD*ZERO     WN0269  70       Pieces Producti
     C                     Z-ADD*ZERO     WN0270 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0271 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0272  70       Pieces Allocate
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0257           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0263           PS Weight Ship
     C                     Z-ADD*ZERO     WN0264           PS Pieces Ship
     C                     Z-ADD*ZERO     WUENNB           ATS Weight Avai
     C                     Z-ADD*ZERO     WUEMNB           ATS Pieces Avai
     C                     MOVEL*BLANK    WN0265           Piece Count Ite
     C                     Z-ADD*ZERO     WN0266           Pieces Per Bag
     C                     Z-ADD*ZERO     WN0267           Bags Per Unit
     C                     Z-ADD*ZERO     WN0268           Weight Producti
     C                     Z-ADD*ZERO     WN0269           Pieces Producti
     C                     Z-ADD*ZERO     WN0270           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0271           OD Weight Sched
     C                     Z-ADD*ZERO     WN0272           Pieces Allocate
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WDAIC3           Company Number
     C                     KFLD           WDV5ST           Production Type
     C                     KFLD           WDELDT           Production Date
     C                     KFLD           WDHGCD           Item Code
     C                     KFLD           WDAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDP1AIC3    WDAIC3           Company Number
     C                     MOVELP1V5ST    WDV5ST           Production Type
     C                     Z-ADDP1ELDT    WDELDT           Production Date
     C                     Z-ADDP1HGCD    WDHGCD           Item Code
     C                     MOVELP1AJCD    WDAJCD           Warehouse Code
      * Establish starting position
     C           KRSSN     CHAIN@I8CPUS              90    *
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * FP1054 06/02/06 add planned prod wt and pieces to Weight Prod & P
      * so calc is: Production = Planned Prod + Standard + Prod Adj - Con
      *  instead of:
      * Production = Standard + Prod Adj - Converted
      * Prod Avail = Production + Ship Cut Adj + Ship Adj - Prod Alloc
      * CASE: DB1.PS Lock Status is NOT LOCKED
     C           WDB5ST    IFEQ 'N'                        *IF
      * Ship Cut Adjust
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Chilling Time USR is GT Zero
      *   |- c2    : DB1.Production Date EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0258    IFGT 0                          *IF
     C           WDELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Ship Cut Adjust   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWDAIC3    WL0139           Company Number
     C                     MOVEL'P'       WL0140    P      Production Type
     C                     Z-ADDWDGPDT    WL0141           Production Date
     C                     Z-ADDWDHGCD    WL0142           Item Code
     C                     MOVELWDAJCD    WL0143    P      Warehouse Code
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0144    WN0263           PS Weight Ship
     C                     Z-ADDWL0145    WN0264           PS Pieces Ship
     C                     END                             *FI
      * FP1054 06/02/06 add planned prod wt and pieces to Weight Prod & P
      * Weight Production
      * PAR.Weight Production USR =
      *    *COMPUTE (x5+ x1 + x2 - x3 - x4)
      * x5    : DB1.PS Weight Planned Prod
      * +     : PGM.*Synon (15,2) work field
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whs Tfr Adj
     C           WDWTSP    ADD  WDDXWG    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WDD1WG    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WDWTCN    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WDGAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0268           Weight Producti
      * Pieces Production
      * PAR.Pieces Production USR =
      *    *COMPUTE (x5+ x1 + x2 - x3 - x4)
      * x5    : DB1.PS Pieces Planned Prod
      * +     : PGM.*Synon (15,0) work field
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whs Tfr Adj
     C           WDQTSP    ADD  WDB2NB    W0WJ03           *Synon (15,0) w
     C           W0WJ03    ADD  WDCBNB    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WDPSCV    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WDBPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0269           Pieces Producti
      * Weight Available
      * PAR.ATS Weight Available USR =
      *    *COMPUTE (x1 + x2 + x3 - x4)
      * x1    : PAR.Weight Production USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Shipping Adj
      * -     : PGM.*Synon (15,2) work field
      * x4    : DB1.PS Weight Prod Allocated
     C           WN0268    ADD  WN0263    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WDSAWT    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WDOAWT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WUENNB           ATS Weight Avai
      * Pieces Available
      * PAR.ATS Pieces Available USR =
      *    *COMPUTE (x1 + x2 + x3 - x4)
      * x1    : PAR.Pieces Production USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * +     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Shipping Adj
      * -     : PGM.*Synon (15,0) work field
      * x4    : DB1.PS Pieces Prod Allocated
     C           WN0269    ADD  WN0264    W0WJ02           *Synon (15,0) w
     C           W0WJ02    ADD  WDB9NB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WDCDNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WUEMNB           ATS Pieces Avai
      * Weight Avail E1971 RMC   2/27/12 change to leave pieces if > 0
      * CASE: PAR.ATS Weight Available USR is Less than zero
     C           WUENNB    IFLT 0                          *IF
      * CASE: PAR.ATS Pieces Available USR is LE Zero
     C           WUEMNB    IFLE 0                          *IF
     C                     Z-ADD*ZERO     WUENNB           ATS Weight Avai
     C                     Z-ADD*ZERO     WUEMNB           ATS Pieces Avai
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWDF8WG    WN0257           PS Avg Piece Wg
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * Rtv Ship Cut Adjust   RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WJAIC3    WQSO01           Company Number
     C           *LIKE     DEFN WJHGCD    WQSO02           Item Code
     C           *LIKE     DEFN WJAJCD    WQSO03           Warehouse Code
     C           *LIKE     DEFN WJELDT    WQSO04           Production Date
     C           *LIKE     DEFN WJV5ST    WQSO05           Production Type
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           WQSO01           Company Number
     C                     KFLD           WQSO02           Item Code
     C                     KFLD           WQSO03           Warehouse Code
     C                     KFLD           WQSO04           Production Date
     C                     KFLD           WQSO05           Production Type
      * Setup key
     C                     Z-ADDWL0139    WQSO01           Company Number
     C                     Z-ADDWL0142    WQSO02           Item Code
     C                     MOVELWL0143    WQSO03           Warehouse Code
     C                     Z-ADDWL0141    WQSO04           Production Date
     C                     MOVELWL0140    WQSO05           Production Type
      * Establish starting position
     C           KRSSO     SETLL@I8CPXP                    *
     C           KRSSO     READE@I8CPXP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0144           PS Weight Ship
     C                     Z-ADD*ZERO     WL0145           PS Pieces Ship
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWJE0WG    WL0144           PS Weight Ship
     C                     Z-ADDWJD6NB    WL0145           PS Pieces Ship
     C           KRSSO     READE@I8CPXP                  90*
     C                     ENDDO
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * RTV Conv Dept Total   RT - PS Prod Dept Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           WKAIC3           Company Number
     C                     KFLD           WKV5ST           Production Type
     C                     KFLD           WKELDT           Production Date
     C                     KFLD           WKR3CD           Department Code
      * Setup key
     C                     Z-ADDP1AIC3    WKAIC3           Company Number
     C                     MOVELP1V5ST    WKV5ST           Production Type
     C                     Z-ADDP1ELDT    WKELDT           Production Date
     C                     MOVELWN0260    WKR3CD           Department Code
      * Establish starting position
     C           KRSSP     CHAIN@LMCPO1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2507' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0237           CDS CV Pieces A
     C                     Z-ADD*ZERO     WN0238           CDS CV Weight A
     C                     GOTO SPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWKCLNB    WN0237           CDS CV Pieces A
     C                     Z-ADDWKGHWG    WN0238           CDS CV Weight A
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * Rtv Total Prod Dpt/Exp RT - Company/Item  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0273  92       Weight Producti
     C                     Z-ADD*ZERO     WN0274  70       Pieces Producti
     C                     MOVEL*BLANK    WN0275  3        PS Production W
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0249           Pieces Schedule
     C                     Z-ADD*ZERO     WN0250           Weight Schedule
     C                     Z-ADD*ZERO     WN0273           Weight Producti
     C                     Z-ADD*ZERO     WN0274           Pieces Producti
     C                     MOVEL*BLANK    WN0275           PS Production W
      * Declare restrictor key work fields
     C           *LIKE     DEFN WLAIC3    WQSQ01           Company Number
     C           *LIKE     DEFN WLR3CD    WQSQ02           Department Code
     C           *LIKE     DEFN WLSUST    WQSQ03           Export_Domestic
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WQSQ01           Company Number
     C                     KFLD           WQSQ02           Department Code
     C                     KFLD           WQSQ03           Export_Domestic
      * Setup key
     C                     Z-ADDP1AIC3    WQSQ01           Company Number
     C                     MOVELWN0260    WQSQ02           Department Code
     C                     MOVELWN0261    WQSQ03           Export_Domestic
      * Establish starting position
     C           KRSSQ     SETLL@BZRESG                    *
     C           KRSSQ     READE@BZRESG                  90*
      * Data record not found
     C   90                MOVEL'USR0326' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Retrieve total production for a department for export items.
      * Rtv Production        RT - PS Prod Item Schedule  * 
     C                     EXSR SRRVGN
     C                     ADD  WN0274    WN0249           Pieces Schedule
     C                     ADD  WN0273    WN0250           Weight Schedule
     C           KRSSQ     READE@BZRESG                  90*
     C                     ENDDO
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * Rtv Production        RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           WDAIC3           Company Number
     C                     KFLD           WDV5ST           Production Type
     C                     KFLD           WDELDT           Production Date
     C                     KFLD           WDHGCD           Item Code
     C                     KFLD           WDAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWLAIC3    WDAIC3           Company Number
     C                     MOVELP1V5ST    WDV5ST           Production Type
     C                     Z-ADDP1ELDT    WDELDT           Production Date
     C                     Z-ADDWLHGCD    WDHGCD           Item Code
     C                     MOVELP1AJCD    WDAJCD           Warehouse Code
      * Establish starting position
     C           KRSSR     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0273           Weight Producti
     C                     Z-ADD*ZERO     WN0274           Pieces Producti
     C                     MOVEL*BLANK    WN0275           PS Production W
     C                     GOTO SREXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * Weight Production
      * PAR.Weight Production USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whs Tfr Adj
     C           WDDXWG    ADD  WDD1WG    W0WA02           *Synon (15,2) w
     C           W0WA02    SUB  WDWTCN    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WDGAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0273           Weight Producti
      * Pieces Production
      * PAR.Pieces Production USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whs Tfr Adj
     C           WDB2NB    ADD  WDCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WDPSCV    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WDBPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0274           Pieces Producti
     C                     MOVELWDB7ST    WN0275           PS Production W
     C                     ENDIF
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * Rtv Avail Prod/Convert RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0277  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0278  70       PS Pieces Ship
     C                     MOVEL*BLANK    WN0279  1        Piece Count Ite
     C                     Z-ADD*ZERO     WN0280  70       Pieces Per Bag
     C                     Z-ADD*ZERO     WN0281  70       Bags Per Unit
     C                     Z-ADD*ZERO     WN0282  92       Weight Producti
     C                     Z-ADD*ZERO     WN0283  70       Pieces Producti
     C                     Z-ADD*ZERO     WN0284 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0285 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0286  70       Pieces Allocate
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0257           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0239           PS Weight Conve
     C                     Z-ADD*ZERO     WN0240           PS Pieces Conve
     C                     Z-ADD*ZERO     WN0277           PS Weight Ship
     C                     Z-ADD*ZERO     WN0278           PS Pieces Ship
     C                     Z-ADD*ZERO     WUENNB           ATS Weight Avai
     C                     Z-ADD*ZERO     WUEMNB           ATS Pieces Avai
     C                     MOVEL*BLANK    WN0279           Piece Count Ite
     C                     Z-ADD*ZERO     WN0280           Pieces Per Bag
     C                     Z-ADD*ZERO     WN0281           Bags Per Unit
     C                     Z-ADD*ZERO     WN0282           Weight Producti
     C                     Z-ADD*ZERO     WN0283           Pieces Producti
     C                     Z-ADD*ZERO     WN0284           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0285           OD Weight Sched
     C                     Z-ADD*ZERO     WN0286           Pieces Allocate
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           WDAIC3           Company Number
     C                     KFLD           WDV5ST           Production Type
     C                     KFLD           WDELDT           Production Date
     C                     KFLD           WDHGCD           Item Code
     C                     KFLD           WDAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWHAIC3    WDAIC3           Company Number
     C                     MOVELP1V5ST    WDV5ST           Production Type
     C                     Z-ADDP1ELDT    WDELDT           Production Date
     C                     Z-ADDWHC9NB    WDHGCD           Item Code
     C                     MOVELP1AJCD    WDAJCD           Warehouse Code
      * Establish starting position
     C           KRSSS     CHAIN@I8CPUS              90    *
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * Production = Standard + Prod Adj - Converted
      * Prod Avail = Production + Ship Cut Adj + Ship Adj - Prod Alloc
      * CASE: DB1.PS Lock Status is NOT LOCKED
     C           WDB5ST    IFEQ 'N'                        *IF
      * Ship Cut Adjust
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Chilling Time USR is GT Zero
      *   |- c2    : DB1.Production Date EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0258    IFGT 0                          *IF
     C           WDELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Ship Cut Adjust   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWDAIC3    WL0139           Company Number
     C                     MOVEL'P'       WL0140    P      Production Type
     C                     Z-ADDWDGPDT    WL0141           Production Date
     C                     Z-ADDWDHGCD    WL0142           Item Code
     C                     MOVELWDAJCD    WL0143    P      Warehouse Code
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0144    WN0277           PS Weight Ship
     C                     Z-ADDWL0145    WN0278           PS Pieces Ship
     C                     END                             *FI
      * Weight Production
      * PAR.Weight Production USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whs Tfr Adj
     C           WDDXWG    ADD  WDD1WG    W0WA02           *Synon (15,2) w
     C           W0WA02    SUB  WDWTCN    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WDGAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0282           Weight Producti
      * Pieces Production
      * PAR.Pieces Production USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whs Tfr Adj
     C           WDB2NB    ADD  WDCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WDPSCV    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WDBPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0283           Pieces Producti
      * Weight Available
      * PAR.ATS Weight Available USR =
      *    *COMPUTE (x1 + x2 + x3 - x4)
      * x1    : PAR.Weight Production USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Shipping Adj
      * -     : PGM.*Synon (15,2) work field
      * x4    : DB1.PS Weight Prod Allocated
     C           WN0282    ADD  WN0277    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WDSAWT    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WDOAWT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WUENNB           ATS Weight Avai
      * Pieces Available
      * PAR.ATS Pieces Available USR =
      *    *COMPUTE (x1 + x2 + x3 - x4)
      * x1    : PAR.Pieces Production USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * +     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Shipping Adj
      * -     : PGM.*Synon (15,0) work field
      * x4    : DB1.PS Pieces Prod Allocated
     C           WN0283    ADD  WN0278    W0WJ02           *Synon (15,0) w
     C           W0WJ02    ADD  WDB9NB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WDCDNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WUEMNB           ATS Pieces Avai
      * Weight Avail
      * CASE: PAR.ATS Weight Available USR is Less than zero
     C           WUENNB    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WUENNB           ATS Weight Avai
     C                     Z-ADD*ZERO     WUEMNB           ATS Pieces Avai
     C                     END                             *FI
     C                     Z-ADDWDF8WG    WN0257           PS Avg Piece Wg
     C                     Z-ADDWDWTCN    WN0239           PS Weight Conve
     C                     Z-ADDWDPSCV    WN0240           PS Pieces Conve
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * Rtv Week Number       RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSST     KLIST
     C                     KFLD           WGAIC3           Company Number
     C                     KFLD           WGBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDP1AIC3    WGAIC3           Company Number
     C                     Z-ADD##JDT     WGBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSST     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUESNB           Accounting Year
     C                     Z-ADD*ZERO     WUEINB           Week Number
     C                     GOTO STEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWGESNB    WUESNB           Accounting Year
     C                     Z-ADDWGEINB    WUEINB           Week Number
     C                     ENDIF
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SURVGN    BEGSR
      *================================================================
      * RTV Mon-Sat w/Wk#      RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * CASE: PAR.First Time Flag is Yes
     C           WL0156    IFEQ 'Y'                        *IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0149           Date Mon USR
     C                     Z-ADD*ZERO     WL0150           Date Tue USR
     C                     Z-ADD*ZERO     WL0151           Date Wed USR
     C                     Z-ADD*ZERO     WL0152           Date Thu USR
     C                     Z-ADD*ZERO     WL0153           Date Fri USR
     C                     Z-ADD*ZERO     WL0154           Date Sat USR
     C                     Z-ADD*ZERO     WL0155           Date Sun USR
     C                     END                             *FI
      * Declare restrictor key work fields
     C           *LIKE     DEFN WMAIC3    WQSU01           Company Number
     C           *LIKE     DEFN WMESNB    WQSU02           Accounting Year
     C           *LIKE     DEFN WMEINB    WQSU03           Week Number
      * Define keylist
     C           KRSSU     KLIST
     C                     KFLD           WQSU01           Company Number
     C                     KFLD           WQSU02           Accounting Year
     C                     KFLD           WQSU03           Week Number
      * Setup key
     C                     Z-ADDWL0146    WQSU01           Company Number
     C                     Z-ADDWL0147    WQSU02           Accounting Year
     C                     Z-ADDWL0148    WQSU03           Week Number
      * Establish starting position
     C           KRSSU     SETLL@AFREH3                    *
     C           KRSSU     READE@AFREH3                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0149           Date Mon USR
     C                     Z-ADD*ZERO     WL0150           Date Tue USR
     C                     Z-ADD*ZERO     WL0151           Date Wed USR
     C                     Z-ADD*ZERO     WL0152           Date Thu USR
     C                     Z-ADD*ZERO     WL0153           Date Fri USR
     C                     Z-ADD*ZERO     WL0154           Date Sat USR
     C                     Z-ADD*ZERO     WL0155           Date Sun USR
     C                     GOTO SUEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Day of Week is Sunday
     C           WMA9ST    IFEQ '1'                        *IF
     C                     Z-ADDWMBCDT    WL0155           Date Sun USR
     C                     ELSE
      * CASE: DB1.Day of Week is Monday
     C           WMA9ST    IFEQ '2'                        *IF
     C                     Z-ADDWMBCDT    WL0149           Date Mon USR
     C                     ELSE
      * CASE: DB1.Day of Week is Tuesday
     C           WMA9ST    IFEQ '3'                        *IF
     C                     Z-ADDWMBCDT    WL0150           Date Tue USR
     C                     ELSE
      * CASE: DB1.Day of Week is Wednesday
     C           WMA9ST    IFEQ '4'                        *IF
     C                     Z-ADDWMBCDT    WL0151           Date Wed USR
     C                     ELSE
      * CASE: DB1.Day of Week is Thursday
     C           WMA9ST    IFEQ '5'                        *IF
     C                     Z-ADDWMBCDT    WL0152           Date Thu USR
     C                     ELSE
      * CASE: DB1.Day of Week is Friday
     C           WMA9ST    IFEQ '6'                        *IF
     C                     Z-ADDWMBCDT    WL0153           Date Fri USR
     C                     ELSE
      * CASE: DB1.Day of Week is Saturday
     C           WMA9ST    IFEQ '7'                        *IF
     C                     Z-ADDWMBCDT    WL0154           Date Sat USR
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSU     READE@AFREH3                  90*
     C                     ENDDO
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVRVGN    BEGSR
      *================================================================
      * Rtv PA Shipdate-21+SunRT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD1         WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WGAIC3    WQSV01           Company Number
      * Define keylist
     C           KPSSV     KLIST
     C                     KFLD           WQSV01           Company Number
     C                     KFLD           WGBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSV     KLIST
     C                     KFLD           WQSV01           Company Number
      * Setup key
     C                     Z-ADDP1AIC3    WQSV01           Company Number
     C                     Z-ADDWN0463    WGBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSV     SETLL@AFREBE                    *
     C           KRSSV     READE@AFREBE                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.Count USR is GT 21
     C           WUCNTU    IFGT 21                         *IF
     C                     GOTO SVEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Date
      * CASE: WRK.Count USR is One
     C           WUCNTU    IFEQ 1                          *IF
      *
     C                     MOVEL*BLANK    WN0467  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0468  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0469  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0470  2        Month (Char) US
     C                     MOVEL*BLANK    WN0471  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0468           Date (Alpha) US
     C                     MOVELWGBCDT    WN0468           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0468:ZQ WN0469    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0468:ZQ WN0470    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0468:ZQ WN0471    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0470    CAT  WN0471:ZQ WN0467    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0467    CAT  WN0469:ZQ WN0467    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0467    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUMWTX           Generic Heading
     C                     MOVELWUCLC6    WUMWTX           Generic Heading
     C                     Z-ADDWGBCDT    WN0288           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUMXTX           Generic Heading
     C                     MOVEL'Total'   WUMXTX           Generic Heading
     C                     Z-ADD*ZERO     WN0289           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Two
     C           WUCNTU    IFEQ 2                          *IF
      *
     C                     MOVEL*BLANK    WN0472  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0473  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0474  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0475  2        Month (Char) US
     C                     MOVEL*BLANK    WN0476  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0473           Date (Alpha) US
     C                     MOVELWGBCDT    WN0473           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0473:ZQ WN0474    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0473:ZQ WN0475    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0473:ZQ WN0476    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0475    CAT  WN0476:ZQ WN0472    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0472    CAT  WN0474:ZQ WN0472    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0472    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUMXTX           Generic Heading
     C                     MOVELWUCLC6    WUMXTX           Generic Heading
     C                     Z-ADDWGBCDT    WN0289           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUMYTX           Generic Heading
     C                     MOVEL'Total'   WUMYTX           Generic Heading
     C                     Z-ADD*ZERO     WN0290           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Three
     C           WUCNTU    IFEQ 3                          *IF
      *
     C                     MOVEL*BLANK    WN0477  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0478  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0479  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0480  2        Month (Char) US
     C                     MOVEL*BLANK    WN0481  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0478           Date (Alpha) US
     C                     MOVELWGBCDT    WN0478           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0478:ZQ WN0479    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0478:ZQ WN0480    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0478:ZQ WN0481    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0480    CAT  WN0481:ZQ WN0477    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0477    CAT  WN0479:ZQ WN0477    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0477    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUMYTX           Generic Heading
     C                     MOVELWUCLC6    WUMYTX           Generic Heading
     C                     Z-ADDWGBCDT    WN0290           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUMZTX           Generic Heading
     C                     MOVEL'Total'   WUMZTX           Generic Heading
     C                     Z-ADD*ZERO     WN0291           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Four
     C           WUCNTU    IFEQ 4                          *IF
      *
     C                     MOVEL*BLANK    WN0482  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0483  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0484  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0485  2        Month (Char) US
     C                     MOVEL*BLANK    WN0486  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0483           Date (Alpha) US
     C                     MOVELWGBCDT    WN0483           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0483:ZQ WN0484    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0483:ZQ WN0485    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0483:ZQ WN0486    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0485    CAT  WN0486:ZQ WN0482    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0482    CAT  WN0484:ZQ WN0482    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0482    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUMZTX           Generic Heading
     C                     MOVELWUCLC6    WUMZTX           Generic Heading
     C                     Z-ADDWGBCDT    WN0291           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM0TX           Generic Heading
     C                     MOVEL'Total'   WUM0TX           Generic Heading
     C                     Z-ADD*ZERO     WN0292           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Five
     C           WUCNTU    IFEQ 5                          *IF
      *
     C                     MOVEL*BLANK    WN0487  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0488  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0489  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0490  2        Month (Char) US
     C                     MOVEL*BLANK    WN0491  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0488           Date (Alpha) US
     C                     MOVELWGBCDT    WN0488           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0488:ZQ WN0489    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0488:ZQ WN0490    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0488:ZQ WN0491    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0490    CAT  WN0491:ZQ WN0487    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0487    CAT  WN0489:ZQ WN0487    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0487    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM0TX           Generic Heading
     C                     MOVELWUCLC6    WUM0TX           Generic Heading
     C                     Z-ADDWGBCDT    WN0292           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM1TX           Generic Heading
     C                     MOVEL'Total'   WUM1TX           Generic Heading
     C                     Z-ADD*ZERO     WN0293           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Six
     C           WUCNTU    IFEQ 6                          *IF
      *
     C                     MOVEL*BLANK    WN0492  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0493  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0494  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0495  2        Month (Char) US
     C                     MOVEL*BLANK    WN0496  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0493           Date (Alpha) US
     C                     MOVELWGBCDT    WN0493           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0493:ZQ WN0494    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0493:ZQ WN0495    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0493:ZQ WN0496    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0495    CAT  WN0496:ZQ WN0492    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0492    CAT  WN0494:ZQ WN0492    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0492    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM1TX           Generic Heading
     C                     MOVELWUCLC6    WUM1TX           Generic Heading
     C                     Z-ADDWGBCDT    WN0293           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM2TX           Generic Heading
     C                     MOVEL'Total'   WUM2TX           Generic Heading
     C                     Z-ADD*ZERO     WN0294           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Seven
     C           WUCNTU    IFEQ 7                          *IF
      *
     C                     MOVEL*BLANK    WN0497  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0498  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0499  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0500  2        Month (Char) US
     C                     MOVEL*BLANK    WN0501  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0498           Date (Alpha) US
     C                     MOVELWGBCDT    WN0498           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0498:ZQ WN0499    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0498:ZQ WN0500    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0498:ZQ WN0501    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0500    CAT  WN0501:ZQ WN0497    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0497    CAT  WN0499:ZQ WN0497    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0497    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM2TX           Generic Heading
     C                     MOVELWUCLC6    WUM2TX           Generic Heading
     C                     Z-ADDWGBCDT    WN0294           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM3TX           Generic Heading
     C                     MOVEL'Total'   WUM3TX           Generic Heading
     C                     Z-ADD*ZERO     WN0295           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Eight
     C           WUCNTU    IFEQ 8                          *IF
      *
     C                     MOVEL*BLANK    WN0502  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0503  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0504  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0505  2        Month (Char) US
     C                     MOVEL*BLANK    WN0506  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0503           Date (Alpha) US
     C                     MOVELWGBCDT    WN0503           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0503:ZQ WN0504    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0503:ZQ WN0505    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0503:ZQ WN0506    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0505    CAT  WN0506:ZQ WN0502    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0502    CAT  WN0504:ZQ WN0502    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0502    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM3TX           Generic Heading
     C                     MOVELWUCLC6    WUM3TX           Generic Heading
     C                     Z-ADDWGBCDT    WN0295           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM4TX           Generic Heading
     C                     MOVEL'Total'   WUM4TX           Generic Heading
     C                     Z-ADD*ZERO     WN0296           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Nine
     C           WUCNTU    IFEQ 9                          *IF
      *
     C                     MOVEL*BLANK    WN0507  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0508  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0509  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0510  2        Month (Char) US
     C                     MOVEL*BLANK    WN0511  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0508           Date (Alpha) US
     C                     MOVELWGBCDT    WN0508           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0508:ZQ WN0509    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0508:ZQ WN0510    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0508:ZQ WN0511    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0510    CAT  WN0511:ZQ WN0507    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0507    CAT  WN0509:ZQ WN0507    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0507    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM4TX           Generic Heading
     C                     MOVELWUCLC6    WUM4TX           Generic Heading
     C                     Z-ADDWGBCDT    WN0296           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM5TX           Generic Heading
     C                     MOVEL'Total'   WUM5TX           Generic Heading
     C                     Z-ADD*ZERO     WN0297           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Ten
     C           WUCNTU    IFEQ 10                         *IF
      *
     C                     MOVEL*BLANK    WN0512  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0513  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0514  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0515  2        Month (Char) US
     C                     MOVEL*BLANK    WN0516  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0513           Date (Alpha) US
     C                     MOVELWGBCDT    WN0513           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0513:ZQ WN0514    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0513:ZQ WN0515    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0513:ZQ WN0516    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0515    CAT  WN0516:ZQ WN0512    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0512    CAT  WN0514:ZQ WN0512    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0512    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM5TX           Generic Heading
     C                     MOVELWUCLC6    WUM5TX           Generic Heading
     C                     Z-ADDWGBCDT    WN0297           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM6TX           Generic Heading
     C                     MOVEL'Total'   WUM6TX           Generic Heading
     C                     Z-ADD*ZERO     WN0298           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Eleven
     C           WUCNTU    IFEQ 11                         *IF
      *
     C                     MOVEL*BLANK    WN0517  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0518  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0519  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0520  2        Month (Char) US
     C                     MOVEL*BLANK    WN0521  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0518           Date (Alpha) US
     C                     MOVELWGBCDT    WN0518           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0518:ZQ WN0519    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0518:ZQ WN0520    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0518:ZQ WN0521    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0520    CAT  WN0521:ZQ WN0517    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0517    CAT  WN0519:ZQ WN0517    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0517    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM6TX           Generic Heading
     C                     MOVELWUCLC6    WUM6TX           Generic Heading
     C                     Z-ADDWGBCDT    WN0298           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM7TX           Generic Heading
     C                     MOVEL'Total'   WUM7TX           Generic Heading
     C                     Z-ADD*ZERO     WN0299           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Twelve
     C           WUCNTU    IFEQ 12                         *IF
      *
     C                     MOVEL*BLANK    WN0522  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0523  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0524  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0525  2        Month (Char) US
     C                     MOVEL*BLANK    WN0526  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0523           Date (Alpha) US
     C                     MOVELWGBCDT    WN0523           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0523:ZQ WN0524    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0523:ZQ WN0525    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0523:ZQ WN0526    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0525    CAT  WN0526:ZQ WN0522    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0522    CAT  WN0524:ZQ WN0522    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0522    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM7TX           Generic Heading
     C                     MOVELWUCLC6    WUM7TX           Generic Heading
     C                     Z-ADDWGBCDT    WN0299           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM8TX           Generic Heading
     C                     MOVEL'Total'   WUM8TX           Generic Heading
     C                     Z-ADD*ZERO     WN0300           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Thirteen
     C           WUCNTU    IFEQ 13                         *IF
      *
     C                     MOVEL*BLANK    WN0527  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0528  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0529  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0530  2        Month (Char) US
     C                     MOVEL*BLANK    WN0531  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0528           Date (Alpha) US
     C                     MOVELWGBCDT    WN0528           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0528:ZQ WN0529    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0528:ZQ WN0530    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0528:ZQ WN0531    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0530    CAT  WN0531:ZQ WN0527    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0527    CAT  WN0529:ZQ WN0527    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0527    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM8TX           Generic Heading
     C                     MOVELWUCLC6    WUM8TX           Generic Heading
     C                     Z-ADDWGBCDT    WN0300           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM9TX           Generic Heading
     C                     MOVEL'Total'   WUM9TX           Generic Heading
     C                     Z-ADD*ZERO     WN0301           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Fourteen
     C           WUCNTU    IFEQ 14                         *IF
      *
     C                     MOVEL*BLANK    WN0532  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0533  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0534  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0535  2        Month (Char) US
     C                     MOVEL*BLANK    WN0536  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0533           Date (Alpha) US
     C                     MOVELWGBCDT    WN0533           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0533:ZQ WN0534    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0533:ZQ WN0535    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0533:ZQ WN0536    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0535    CAT  WN0536:ZQ WN0532    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0532    CAT  WN0534:ZQ WN0532    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0532    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM9TX           Generic Heading
     C                     MOVELWUCLC6    WUM9TX           Generic Heading
     C                     Z-ADDWGBCDT    WN0301           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUY5TX           Generic Heading
     C                     MOVEL'Total'   WUY5TX           Generic Heading
     C                     Z-ADD*ZERO     WN0302           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Fifteen
     C           WUCNTU    IFEQ 15                         *IF
      *
     C                     MOVEL*BLANK    WN0537  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0538  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0539  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0540  2        Month (Char) US
     C                     MOVEL*BLANK    WN0541  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0538           Date (Alpha) US
     C                     MOVELWGBCDT    WN0538           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0538:ZQ WN0539    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0538:ZQ WN0540    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0538:ZQ WN0541    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0540    CAT  WN0541:ZQ WN0537    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0537    CAT  WN0539:ZQ WN0537    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0537    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUY5TX           Generic Heading
     C                     MOVELWUCLC6    WUY5TX           Generic Heading
     C                     Z-ADDWGBCDT    WN0302           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           WGA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUY6TX           Generic Heading
     C                     MOVEL'Total'   WUY6TX           Generic Heading
     C                     Z-ADD*ZERO     WN0303           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Sixteen
     C           WUCNTU    IFEQ 16                         *IF
      *
     C                     MOVEL*BLANK    WN0542  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0543  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0544  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0545  2        Month (Char) US
     C                     MOVEL*BLANK    WN0546  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0543           Date (Alpha) US
     C                     MOVELWGBCDT    WN0543           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0543:ZQ WN0544    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0543:ZQ WN0545    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0543:ZQ WN0546    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0545    CAT  WN0546:ZQ WN0542    P      Date (Char-6) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0542    CAT  WN0544:ZQ WN0542    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0542    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUY6TX           Generic Heading
     C                     MOVELWUCLC6    WUY6TX           Generic Heading
     C                     Z-ADDWGBCDT    WN0303           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Seventeen
     C           WUCNTU    IFEQ 17                         *IF
     C                     Z-ADDWGBCDT    WN0304           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Eighteen
     C           WUCNTU    IFEQ 18                         *IF
     C                     Z-ADDWGBCDT    WN0305           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Nineteen
     C           WUCNTU    IFEQ 19                         *IF
     C                     Z-ADDWGBCDT    WN0306           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Twenty
     C           WUCNTU    IFEQ 20                         *IF
     C                     Z-ADDWGBCDT    WN0307           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Twenty One
     C           WUCNTU    IFEQ 21                         *IF
     C                     Z-ADDWGBCDT    WN0308           Avail Ship Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C           KRSSV     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWRVGN    BEGSR
      *================================================================
      * Rtv Prod Whse/Lot Trck RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSW     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVELP1AJCD    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSW     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WN0456           Production Ware
     C                     MOVEL*BLANK    WN0457           Lot Tracking Fl
     C                     GOTO SWEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBAOCD    WN0456           Production Ware
     C                     MOVELWBVHST    WN0457           Lot Tracking Fl
     C                     ENDIF
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         SXRVGN    BEGSR
      *================================================================
      * Rtv PA Production     RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0548  61       Quantity Sched
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WOAIC3    WQSX01           Company Number
     C           *LIKE     DEFN WOHGCD    WQSX02           Item Code
     C           *LIKE     DEFN WOAJCD    WQSX03           Warehouse Code
      * Define keylist
     C           KPSSX     KLIST
     C                     KFLD           WQSX01           Company Number
     C                     KFLD           WQSX02           Item Code
     C                     KFLD           WQSX03           Warehouse Code
     C                     KFLD           WOGPDT           PS Available Sh
      * Define keylist
     C           KRSSX     KLIST
     C                     KFLD           WQSX01           Company Number
     C                     KFLD           WQSX02           Item Code
     C                     KFLD           WQSX03           Warehouse Code
      * Setup key
     C                     Z-ADDP1AIC3    WQSX01           Company Number
     C                     Z-ADDWHC9NB    WQSX02           Item Code
     C                     MOVELP1AJCD    WQSX03           Warehouse Code
     C                     Z-ADD##JDT     WOGPDT           PS Available Sh
      * Establish starting position
     C           KPSSX     SETLL@I8CPDZ                    *
     C           KRSSX     READE@I8CPDZ                  90*
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Is it time to Quit ??
      * CASE: DB1.PS Available Ship Date GT PAR.Avail Ship Date 21 USR
     C           WOGPDT    IFGT WN0308                     *IF
     C                     GOTO SXEXIT                     *QUIT
     C                     END                             *FI
      * CASE: DB1.PA Available Ship Date GE JOB.*Job date
     C           WOGPDT    IFGE ##JDT                      *IF
      * Calculate Production based on Unit Weight or Pieces
      * CASE: (Unit Weight > 0  OR Piece count item
      *  - c2 OR c3
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C           WN0451    IFGT 0                          *IF
     C           WN0453    OREQ 'Y'                        *OR
      * Retrieve production according to day
      * CASE: PAR.Avail Ship Date 1 USR EQ DB1.PA Available Ship Date
     C           WN0288    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0288    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0288    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0344           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0344           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0344    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0344           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0309           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ DB1.PA Available Ship Date
     C           WN0289    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0289    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0289    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0345           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0345           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0345    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0345           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0310           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ DB1.PA Available Ship Date
     C           WN0290    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0290    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0290    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0346           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0346           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0346    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0346           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0311           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ DB1.PA Available Ship Date
     C           WN0291    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0291    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0291    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0347           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0347           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0347    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0347           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0312           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ DB1.PA Available Ship Date
     C           WN0292    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0292    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0292    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0348           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0348           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0348    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0348           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0313           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ DB1.PA Available Ship Date
     C           WN0293    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0293    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0293    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0349           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0349           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0349    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0349           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0314           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ DB1.PA Available Ship Date
     C           WN0294    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0294    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0294    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0350           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0350           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0350    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0350           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0315           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 8 USR EQ DB1.PA Available Ship Date
     C           WN0295    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0295    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0295    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0351           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0351           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0351    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0351           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0316           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 9 USR EQ DB1.PA Available Ship Date
     C           WN0296    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0296    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0296    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0352           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0352           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0352    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0352           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0317           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 10 USR EQ DB1.PA Available Ship Date
     C           WN0297    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0297    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0297    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0353           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0353           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0353    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0353           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0318           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 11 USR EQ DB1.PA Available Ship Date
     C           WN0298    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0298    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0298    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0354           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0354           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0354    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0354           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0319           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 12 USR EQ DB1.PA Available Ship Date
     C           WN0299    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0299    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0299    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0355           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0355           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0355    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0355           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0320           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 13 USR EQ DB1.PA Available Ship Date
     C           WN0300    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0300    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0300    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0356           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0356           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0356    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0356           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0321           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 14 USR EQ DB1.PA Available Ship Date
     C           WN0301    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0301    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0301    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0357           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0357           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0357    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0357           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0322           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 15 USR EQ DB1.PS Available Ship Date
     C           WN0302    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0302    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0302    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0358           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0358           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0358    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0358           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0323           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 16 USR EQ DB1.PS Available Ship Date
     C           WN0303    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0303    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0303    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0359           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0359           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0359    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0359           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0324           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 17 USR EQ DB1.PS Available Ship Date
     C           WN0304    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0304    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0304    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0360           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0360           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0360    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0360           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0325           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 18 USR EQ DB1.PS Available Ship Date
     C           WN0305    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0305    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0305    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0361           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0361           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0361    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0361           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0326           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 19 USR EQ DB1.PS Available Ship Date
     C           WN0306    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0306    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0306    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0362           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0362           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0362    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0362           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0327           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 20 USR EQ DB1.PS Available Ship Date
     C           WN0307    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0307    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0307    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0363           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0363           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0363    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0363           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0328           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 21 USR EQ DB1.PS Available Ship Date
     C           WN0308    IFEQ WOGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFEQ ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0452    IFGT 0                          *IF
     C           WN0308    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WOV5ST    IFEQ 'P'                        *IF
     C           WN0452    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WOELDT    IFLT ##JDT                      *IF
     C           WN0308    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WOV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ *BLANK                     *IF
     C           WN0453    OREQ 'N'
     C           WN0451    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WODXWG    ADD  WOD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WOWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WOGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WN0451    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0364           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0453    IFEQ 'Y'                        *IF
     C           WN0454    IFGT 0                          *IF
     C           WN0455    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WOB2NB    ADD  WOCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WOPSCV    W0WD01           *Synon (17,7) w
     C           WN0454    MULT WN0455    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0364           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WN0364    IFLT 0                          *IF
     C                     Z-ADD*ZERO     WN0364           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWOELDT    WN0329           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSX     READE@I8CPDZ                  90*
     C                     ENDDO
      *================================================================
     CSR         SXEXIT    ENDSR
      /EJECT
     CSR         SYRVGN    BEGSR
      *================================================================
      * Del PA Work Array Roll RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD1         Y       50
     C           YL01      IFGT 0
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
     C                     ELSE
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
      * Del PA Work Array Roll DL - *Arrays  * 
     C                     EXSR SZDLRC
     C                     ADD  1         YR01
     C                     ENDDO
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         SZDLRC    BEGSR
      *================================================================
      * Del PA Work Array Roll DL - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWRJODT    YI0101           Avail Ship Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WRJODT
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SZEXIT
     C                     ENDIF
     C                     ENDIF
      *
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDLEYD01
     C                     SUB  1         YR01    50
     C                     ENDIF
      *
      * Initialize keys in array but retain index to MODS for later reuse
     C                     Z-ADDYI01      YISAV   50
     C                     MOVEL*LOVAL    YD01
     C                     Z-ADDYISAV     YI01
     C                     MOVELYD01      YK01,Y
      * Sort array to compress out deleted element
     C                     SORTAYK01
      * Adjust number of elements currently in array
     C                     SUB  1         YL01
      *================================================================
     CSR         SZEXIT    ENDSR
      /EJECT
     CSR         TACRRC    BEGSR
      *================================================================
      * CRT PA Work Array     CR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL01      IFEQ 100
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO TAEXIT
     C                     ENDIF
      *
     C                     Z-ADD*ZERO     XAJODT           Avail Ship Date
     C                     Z-ADD*ZERO     XAGXDT           Production Date
     C                     Z-ADD*ZERO     XAQINV           Quantity Invent
     C                     Z-ADD*ZERO     XAWPRD           Quantity Produc
     C                     Z-ADD*ZERO     XAQSSH           Quantity Sched
     C                     Z-ADD*ZERO     XAWSLS           Quantity Sales
     C                     Z-ADD*ZERO     XAQAVL           Quantity Availa
     C                     MOVEL*BLANK    XAG2SX           Reserved for Ot
      * Move all fields to PA Work Array for Roll
     C                     Z-ADDWL0157    XAJODT           Avail Ship Date
     C                     Z-ADDWL0158    XAGXDT           Production Date
     C                     Z-ADDWL0159    XAQINV           Quantity Invent
     C                     Z-ADDWL0160    XAWPRD           Quantity Produc
     C                     Z-ADDWL0161    XAQSSH           Quantity Sched
     C                     Z-ADDWL0162    XAWSLS           Quantity Sales
     C                     Z-ADDWL0163    XAQAVL           Quantity Availa
     C                     MOVELWL0164    XAG2SX           Reserved for Ot
      *
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDXAJODT    YI0101           Avail Ship Date
      *
      * Check for duplicate primary key
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFEQ XAJODT
      * Array element already exists
     C                     MOVEL'Y2U0003' W0RTN   7
     C                     GOTO TAEXIT
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Insert after last used element
     C           YL01      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK01,Y    IFNE *LOVAL
      * If so, reuse MODS index
     C                     MOVELYK01,Y    YD01
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI01
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDXAJODT    YI0101           Avail Ship Date
      *
     C                     MOVELYD01      YK01,Y
     C           YI01      OCUR YM01
      * Update MODS fields
     C                     Z-ADDXAJODT    WRJODT           Avail Ship Date
     C                     Z-ADDXAGXDT    WRGXDT           Production Date
     C                     Z-ADDXAQINV    WRQINV           Quantity Invent
     C                     Z-ADDXAWPRD    WRWPRD           Quantity Produc
     C                     Z-ADDXAQSSH    WRQSSH           Quantity Sched
     C                     Z-ADDXAWSLS    WRWSLS           Quantity Sales
     C                     Z-ADDXAQAVL    WRQAVL           Quantity Availa
     C                     MOVELXAG2SX    WRG2SX           Reserved for Ot
      * Only sort if element is out of position
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDLTYD01
     C                     ADD  1         YR01    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK01
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL01
      *================================================================
     CSR         TAEXIT    ENDSR
      /EJECT
     CSR         TBRVGN    BEGSR
      *================================================================
      * Rtv Sched Ship/Clc PA RT - PD Order Detail  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0549  1        Header Status
     C                     Z-ADD*ZERO     WN0550  50       Aging Day
     C                     Z-ADD*ZERO     WN0551  70       Week End Date
     C                     Z-ADD*ZERO     WN0552 112       Qty Not Alloc o
     C                     Z-ADD*ZERO     WN0553 112       ATS Quantity Ne
     C                     Z-ADD*ZERO     WN0554  40       Accounting Year
     C                     Z-ADD*ZERO     WN0555  20       Accounting Peri
     C                     Z-ADD*ZERO     WN0556  20       Week Number
     C                     MOVEL*BLANK    WN0557  1        Production Type
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WSAIC3    WQTB01           Company Number
     C           *LIKE     DEFN WSHGCD    WQTB02           Item Code
     C           *LIKE     DEFN WSAJCD    WQTB03           Warehouse Code
      * Define keylist
     C           KPSTB     KLIST
     C                     KFLD           WQTB01           Company Number
     C                     KFLD           WQTB02           Item Code
     C                     KFLD           WQTB03           Warehouse Code
     C                     KFLD           WSAODT           Scheduled Ship
      * Define keylist
     C           KRSTB     KLIST
     C                     KFLD           WQTB01           Company Number
     C                     KFLD           WQTB02           Item Code
     C                     KFLD           WQTB03           Warehouse Code
      * Setup key
     C                     Z-ADDP1AIC3    WQTB01           Company Number
     C                     Z-ADDWHC9NB    WQTB02           Item Code
     C                     MOVELP1AJCD    WQTB03           Warehouse Code
     C                     Z-ADD##JDT     WSAODT           Scheduled Ship
      * Establish starting position
     C           KPSTB     SETLL@BGWKYG                    *
     C           KRSTB     READE@BGWKYG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
     C                     EXSR TCRVGN
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Header Status is Not Comp/Canc/Conf
      *   |- c2    : PAR.Order Number NE DB1.Order Number
      *   |- c3    : LCL.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0549    IFEQ 'L'                        *IF
     C           WN0549    OREQ 'A'
     C           WN0549    OREQ 'E'
     C           WN0549    OREQ 'H'
     C           WUC4NB    IFNE WSC4NB                     *IF
     C           YL0007    IFEQ '1'                        *IF
     C           YL0007    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Is it time to Quit ??
      * CASE: DB1.Scheduled Ship Date GT PAR.Avail Ship Date 21 USR
     C           WSAODT    IFGT WN0308                     *IF
     C                     GOTO TBEXIT                     *QUIT
     C                     END                             *FI
      * Retrieve Week End date for *JOB DATE
      * Determine production type
      * CASE: DB1.Scheduled Ship Date EQ JOB.*Job date
     C           WSAODT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0557           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0557           Production Type
     C                     END                             *FI
      * Rtv Production Date   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAIC3    WL0165           Company Number
     C                     MOVELWN0557    WL0166    P      Production Type
     C                     Z-ADDWSHGCD    WL0168           Item Code
     C                     MOVELWSAJCD    WL0169    P      Warehouse Code
     C                     Z-ADDWSAODT    WL0170           PS Available Sh
     C                     EXSR TDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0167    YL0008           Production Date
      * RTV Day/Wk/Prd/Yr      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0171           Company Number
     C                     Z-ADD##JDT     WL0172           Post to G/L Dat
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0173    WUCQNB           Julian Date
     C                     Z-ADDWL0174    WN0554           Accounting Year
     C                     Z-ADDWL0175    WN0555           Accounting Peri
     C                     Z-ADDWL0176    WUBZNB           OM Week
     C                     MOVELWL0177    WUA9ST    P      Day of Week
     C                     Z-ADDWL0178    WN0556           Week Number
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0179           Company Number
     C                     Z-ADDWN0554    WL0181           Accounting Year
     C                     Z-ADDWN0555    WL0182           Accounting Peri
     C                     MOVEL'7'       WL0183    P      Day of Week
     C                     Z-ADDWN0556    WL0184           Week Number
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0180    WN0551           Post to G/L Dat
      * DOC: 04/11/07 Change Log
     C                     EXSR UBSUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: DB1.Age Code is A: 0 Day
     C           WSRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is B: 1 Day
     C           WSRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is C: 2 Day
     C           WSRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is D: 3 Day
     C           WSRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is E: 4 Day
     C           WSRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is F: 5 Day
     C           WSRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is G: 6 Day
     C           WSRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0550           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0550           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If warehouse is not a production whse, rtv sched qty from prod wh
      * CASE: DB1.Warehouse Code NE PAR.Production Warehouse Code
     C           WSAJCD    IFNE WN0456                     *IF
      * Rtv Qty for Prod Whse  RT - PD Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAIC3    WL0185           Company Number
     C                     Z-ADDWSC4NB    WL0186           Order Number
     C                     Z-ADDWSDPNB    WL0187           Order Sequence
     C                     Z-ADDWSUENB    WL0188           Order Secondary
     C                     Z-ADDWN0552    WL0189           OD Qty/Cnsmd Pi
     C                     EXSR TGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0189    WN0552           OD Qty/Cnsmd Pi
     C           WSCCQT    SUB  WN0552    WN0553           ATS Quantity Ne
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0552           Qty Not Alloc o
     C                     Z-ADDWSCCQT    WN0553           ATS Quantity Ne
     C                     END                             *FI
      * Clc Alloc Inv for PA RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAODT    WL0190           Avail Ship Date
     C                     Z-ADDWN0550    WL0191           Aging Day
     C                     Z-ADDWN0551    WL0192           Week End Date
     C                     Z-ADDWN0552    WL0193           Qty Not Alloc o
     C                     Z-ADDWN0553    WL0194           ATS Quantity Ne
     C                     Z-ADDWSCCQT    WL0195           Quantity Schedu
     C                     Z-ADDWSAODT    WL0196           Scheduled Ship
     C                     MOVELWN0457    WL0197    P      Lot Tracking Fl
     C                     Z-ADDYL0008    WL0198           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0191    WN0550           Aging Day
     C                     Z-ADDWL0193    WN0552           Qty Not Alloc o
     C                     Z-ADDWL0194    WN0553           ATS Quantity Ne
     C                     MOVELWL0199    YL0009    P      Order Scheduled
      * If order was not scheduled, then schedule
      * CASE: LCL.Order Scheduled Today USR is no
     C           YL0009    IFEQ 'N'                        *IF
      * Rtv Change Sched Ship  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAODT    WL0212           Avail Ship Date
     C                     Z-ADDWSCCQT    WL0213           Quantity Sched
     C                     EXSR TLRVGN
     C                     END                             *FI
      * DOC: 04/11/07 Change Log
     C                     EXSR UCSUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: DB1.Age Code is A: 0 Day
     C           WSRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is B: 1 Day
     C           WSRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is C: 2 Day
     C           WSRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is D: 3 Day
     C           WSRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is E: 4 Day
     C           WSRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is F: 5 Day
     C           WSRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is G: 6 Day
     C           WSRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0550           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0550           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Clc Alloc Prod for PA RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAODT    WL0214           Avail Ship Date
     C                     Z-ADDWN0550    WL0215           Aging Day
     C                     Z-ADDWN0551    WL0216           Week End Date
     C                     Z-ADDWN0552    WL0217           Qty Not Alloc o
     C                     Z-ADDWN0553    WL0218           ATS Quantity Ne
     C                     Z-ADDWSCCQT    WL0219           Quantity Schedu
     C                     Z-ADDWSAODT    WL0220           Scheduled Ship
     C                     MOVELWN0457    WL0221    P      Lot Tracking Fl
     C                     EXSR TMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0215    WN0550           Aging Day
     C                     Z-ADDWL0217    WN0552           Qty Not Alloc o
      * Change allocation for schedule shipments not scheduled on ship da
      * CASE: PAR.Qty Not Alloc on Ship Dt is Greater than zero
     C           WN0552    IFGT 0                          *IF
      * Rtv Change Allocation  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAODT    WL0222           Avail Ship Date
     C                     Z-ADDWN0552    WL0223           Qty Not Alloc o
     C                     EXSR TNRVGN
     C                     END                             *FI
     C                     END                             *FI
     C           KRSTB     READE@BGWKYG                  90*
     C                     ENDDO
      * USER: Exit processing
      * Retrieve Week End date for *JOB DATE
      * Determine production type
      * CASE: DB1.Scheduled Ship Date EQ JOB.*Job date
     C           WSAODT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0557           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0557           Production Type
     C                     END                             *FI
      * Rtv Production Date   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAIC3    WL0165           Company Number
     C                     MOVELWN0557    WL0166    P      Production Type
     C                     Z-ADDWSHGCD    WL0168           Item Code
     C                     MOVELWSAJCD    WL0169    P      Warehouse Code
     C                     Z-ADDWSAODT    WL0170           PS Available Sh
     C                     EXSR TDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0167    YL0008           Production Date
      * RTV Day/Wk/Prd/Yr     RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0171           Company Number
     C                     Z-ADD##JDT     WL0172           Post to G/L Dat
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0173    WUCQNB           Julian Date
     C                     Z-ADDWL0174    WN0554           Accounting Year
     C                     Z-ADDWL0175    WN0555           Accounting Peri
     C                     Z-ADDWL0176    WUBZNB           OM Week
     C                     MOVELWL0177    WUA9ST    P      Day of Week
     C                     Z-ADDWL0178    WN0556           Week Number
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0179           Company Number
     C                     Z-ADDWN0554    WL0181           Accounting Year
     C                     Z-ADDWN0555    WL0182           Accounting Peri
     C                     MOVEL'7'       WL0183    P      Day of Week
     C                     Z-ADDWN0556    WL0184           Week Number
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0180    WN0551           Post to G/L Dat
      * DOC: 04/11/07 Change Log
     C                     EXSR UDSUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: DB1.Age Code is A: 0 Day
     C           WSRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is B: 1 Day
     C           WSRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is C: 2 Day
     C           WSRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is D: 3 Day
     C           WSRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is E: 4 Day
     C           WSRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is F: 5 Day
     C           WSRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is G: 6 Day
     C           WSRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0550           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0550           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If warehouse is not a production whse, rtv sched qty from prod wh
      * CASE: DB1.Warehouse Code NE PAR.Production Warehouse Code
     C           WSAJCD    IFNE WN0456                     *IF
      * Rtv Qty for Prod Whse  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAIC3    WL0185           Company Number
     C                     Z-ADDWSC4NB    WL0186           Order Number
     C                     Z-ADDWSDPNB    WL0187           Order Sequence
     C                     Z-ADDWSUENB    WL0188           Order Secondary
     C                     Z-ADDWN0552    WL0189           OD Qty/Cnsmd Pi
     C                     EXSR TGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0189    WN0552           OD Qty/Cnsmd Pi
     C           WSCCQT    SUB  WN0552    WN0553           ATS Quantity Ne
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0552           Qty Not Alloc o
     C                     Z-ADDWSCCQT    WN0553           ATS Quantity Ne
     C                     END                             *FI
      * Clc Alloc Inv for PA RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAODT    WL0190           Avail Ship Date
     C                     Z-ADDWN0550    WL0191           Aging Day
     C                     Z-ADDWN0551    WL0192           Week End Date
     C                     Z-ADDWN0552    WL0193           Qty Not Alloc o
     C                     Z-ADDWN0553    WL0194           ATS Quantity Ne
     C                     Z-ADDWSCCQT    WL0195           Quantity Schedu
     C                     Z-ADDWSAODT    WL0196           Scheduled Ship
     C                     MOVELWN0457    WL0197    P      Lot Tracking Fl
     C                     Z-ADDYL0008    WL0198           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0191    WN0550           Aging Day
     C                     Z-ADDWL0193    WN0552           Qty Not Alloc o
     C                     Z-ADDWL0194    WN0553           ATS Quantity Ne
     C                     MOVELWL0199    YL0009    P      Order Scheduled
      * If order was not scheduled, then schedule
      * CASE: LCL.Order Scheduled Today USR is no
     C           YL0009    IFEQ 'N'                        *IF
      * Rtv Change Sched Ship  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAODT    WL0212           Avail Ship Date
     C                     Z-ADDWSCCQT    WL0213           Quantity Sched
     C                     EXSR TLRVGN
     C                     END                             *FI
      * DOC: 04/11/07 Change Log
     C                     EXSR UESUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: DB1.Age Code is A: 0 Day
     C           WSRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is B: 1 Day
     C           WSRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is C: 2 Day
     C           WSRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is D: 3 Day
     C           WSRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is E: 4 Day
     C           WSRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is F: 5 Day
     C           WSRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0550           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is G: 6 Day
     C           WSRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0550           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0550           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Clc Alloc Prod for PA RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAODT    WL0214           Avail Ship Date
     C                     Z-ADDWN0550    WL0215           Aging Day
     C                     Z-ADDWN0551    WL0216           Week End Date
     C                     Z-ADDWN0552    WL0217           Qty Not Alloc o
     C                     Z-ADDWN0553    WL0218           ATS Quantity Ne
     C                     Z-ADDWSCCQT    WL0219           Quantity Schedu
     C                     Z-ADDWSAODT    WL0220           Scheduled Ship
     C                     MOVELWN0457    WL0221    P      Lot Tracking Fl
     C                     EXSR TMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0215    WN0550           Aging Day
     C                     Z-ADDWL0217    WN0552           Qty Not Alloc o
      * Change allocation for schedule shipments not scheduled on ship da
      * CASE: PAR.Qty Not Alloc on Ship Dt is Greater than zero
     C           WN0552    IFGT 0                          *IF
      * Rtv Change Allocation  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAODT    WL0222           Avail Ship Date
     C                     Z-ADDWN0552    WL0223           Qty Not Alloc o
     C                     EXSR TNRVGN
     C                     END                             *FI
      *================================================================
     CSR         TBEXIT    ENDSR
      /EJECT
     CSR         TCRVGN    BEGSR
      *================================================================
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTC     KLIST
     C                     KFLD           WTAIC3           Company Number
     C                     KFLD           WTC4NB           Order Number
      * Setup key
     C                     Z-ADDWSAIC3    WTAIC3           Company Number
     C                     Z-ADDWSC4NB    WTC4NB           Order Number
      * Establish starting position
     C           KRSTC     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO TCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWTGWST    WN0549           Header Status
     C                     MOVELWTOBST    YL0007           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         TCEXIT    ENDSR
      /EJECT
     CSR         TDRVGN    BEGSR
      *================================================================
      * Rtv Production Date   RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WOAIC3    WQTD01           Company Number
     C           *LIKE     DEFN WOHGCD    WQTD02           Item Code
     C           *LIKE     DEFN WOAJCD    WQTD03           Warehouse Code
     C           *LIKE     DEFN WOGPDT    WQTD04           PS Available Sh
     C           *LIKE     DEFN WOV5ST    WQTD05           Production Type
      * Define keylist
     C           KRSTD     KLIST
     C                     KFLD           WQTD01           Company Number
     C                     KFLD           WQTD02           Item Code
     C                     KFLD           WQTD03           Warehouse Code
     C                     KFLD           WQTD04           PS Available Sh
     C                     KFLD           WQTD05           Production Type
      * Setup key
     C                     Z-ADDWL0165    WQTD01           Company Number
     C                     Z-ADDWL0168    WQTD02           Item Code
     C                     MOVELWL0169    WQTD03           Warehouse Code
     C                     Z-ADDWL0170    WQTD04           PS Available Sh
     C                     MOVELWL0166    WQTD05           Production Type
      * Establish starting position
     C           KRSTD     SETLL@I8CPDZ                    *
     C           KRSTD     READE@I8CPDZ                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0167           Production Date
     C                     GOTO TDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWOELDT    WL0167           Production Date
     C                     GOTO TDEXIT                     *QUIT
     C           KRSTD     READE@I8CPDZ                  90*
     C                     ENDDO
      *================================================================
     CSR         TDEXIT    ENDSR
      /EJECT
     CSR         TERVGN    BEGSR
      *================================================================
      * RTV Day/Wk/Prd/Yr      RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTE     KLIST
     C                     KFLD           WGAIC3           Company Number
     C                     KFLD           WGBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0171    WGAIC3           Company Number
     C                     Z-ADDWL0172    WGBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSTE     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0173           Julian Date
     C                     Z-ADD*ZERO     WL0174           Accounting Year
     C                     Z-ADD*ZERO     WL0175           Accounting Peri
     C                     Z-ADD*ZERO     WL0176           OM Week
     C                     MOVEL*BLANK    WL0177           Day of Week
     C                     Z-ADD*ZERO     WL0178           Week Number
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO TEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWGCQNB    WL0173           Julian Date
     C                     Z-ADDWGESNB    WL0174           Accounting Year
     C                     Z-ADDWGETNB    WL0175           Accounting Peri
     C                     Z-ADDWGBZNB    WL0176           OM Week
     C                     MOVELWGA9ST    WL0177           Day of Week
     C                     Z-ADDWGEINB    WL0178           Week Number
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         TEEXIT    ENDSR
      /EJECT
     CSR         TFRVGN    BEGSR
      *================================================================
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WVAIC3    WQTF01           Company Number
     C           *LIKE     DEFN WVESNB    WQTF02           Accounting Year
     C           *LIKE     DEFN WVETNB    WQTF03           Accounting Peri
     C           *LIKE     DEFN WVEINB    WQTF04           Week Number
     C           *LIKE     DEFN WVA9ST    WQTF05           Day of Week
      * Define keylist
     C           KRSTF     KLIST
     C                     KFLD           WQTF01           Company Number
     C                     KFLD           WQTF02           Accounting Year
     C                     KFLD           WQTF03           Accounting Peri
     C                     KFLD           WQTF04           Week Number
     C                     KFLD           WQTF05           Day of Week
      * Setup key
     C                     Z-ADDWL0179    WQTF01           Company Number
     C                     Z-ADDWL0181    WQTF02           Accounting Year
     C                     Z-ADDWL0182    WQTF03           Accounting Peri
     C                     Z-ADDWL0184    WQTF04           Week Number
     C                     MOVELWL0183    WQTF05           Day of Week
      * Establish starting position
     C           KRSTF     SETLL@AFREQ0                    *
     C           KRSTF     READE@AFREQ0                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWVBCDT    WL0180           Post to G/L Dat
     C           KRSTF     READE@AFREQ0                  90*
     C                     ENDDO
      *================================================================
     CSR         TFEXIT    ENDSR
      /EJECT
     CSR         TGRVGN    BEGSR
      *================================================================
      * Rtv Qty for Prod Whse  RT - PD Order Detail Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0189           OD Qty/Cnsmd Pi
      * Declare restrictor key work fields
     C           *LIKE     DEFN WWAIC3    WQTG01           Company Number
     C           *LIKE     DEFN WWC4NB    WQTG02           Order Number
     C           *LIKE     DEFN WWDPNB    WQTG03           Order Sequence
     C           *LIKE     DEFN WWUENB    WQTG04           Order Secondary
      * Define keylist
     C           KRSTG     KLIST
     C                     KFLD           WQTG01           Company Number
     C                     KFLD           WQTG02           Order Number
     C                     KFLD           WQTG03           Order Sequence
     C                     KFLD           WQTG04           Order Secondary
      * Setup key
     C                     Z-ADDWL0185    WQTG01           Company Number
     C                     Z-ADDWL0186    WQTG02           Order Number
     C                     Z-ADDWL0187    WQTG03           Order Sequence
     C                     Z-ADDWL0188    WQTG04           Order Secondary
      * Establish starting position
     C           KRSTG     SETLL@KNCPHO                    *
     C           KRSTG     READE@KNCPHO                  90*
      * Data record not found
     C   90                MOVEL'USR2238' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Warehouse Code NE DB1.Order From Warehouse
     C           WWAJCD    IFNE WWAYAA                     *IF
     C                     ADD  WWIGQT    WL0189           OD Qty/Cnsmd Pi
     C                     END                             *FI
     C           KRSTG     READE@KNCPHO                  90*
     C                     ENDDO
      *================================================================
     CSR         TGEXIT    ENDSR
      /EJECT
     CSR         THRVGN    BEGSR
      *================================================================
      * Clc Alloc Inv for PA RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0558 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0559  70       Quantity Sched
     C                     Z-ADD*ZERO     WN0560 112       Quantity Availa
     C                     Z-ADD*ZERO     WN0561 112       Total Quantity
     C                     Z-ADD*ZERO     WN0562  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0563  81       Total Availabil
     C                     MOVEL*BLANK    WN0564  1        First Time Flag
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'Y'       WN0564           First Time Flag
     C                     MOVEL'N'       WL0199           Order Scheduled
     C                     Z-ADDWL0194    WN0559           Quantity Sched
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0190    YI0101           Avail Ship Date
      *
      *
      *
      *
      *
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
     C                     Z-ADD*ZERO     WN0558           Quantity Alloca
      * If age day is zero or order has been allocated, then QUIT
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Aging Day is equal to zero
      *   |- c2    : PAR.Quantity Sched 1 USR is LE Zero
      *   '-
     C           WL0191    IFEQ 0                          *IF
     C           WN0559    ORLE 0                          *OR
     C                     Z-ADDWN0559    WL0194           ATS Quantity Ne
      * CASE: PAR.First Time Flag is Yes
     C           WN0564    IFEQ 'Y'                        *IF
      * If ord ship is this day, updt Sched Ship/Avail
      * CASE: DB1.Avail Ship Date USR EQ PAR.Scheduled Ship Date
     C           WRJODT    IFEQ WL0196                     *IF
     C           WRQSSH    ADD  WL0195    WN0562           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WRQINV    ADD  WRWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0562    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WRWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0563           Total Availabil
      * Chg SchdShp/Avail      CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWRJODT    WL0200           Avail Ship Date
     C                     Z-ADDWN0562    WL0201           Quantity Sched
     C                     Z-ADDWN0563    WL0202           Quantity Availa
     C                     EXSR TICHRC
     C                     MOVEL'N'       WN0564           First Time Flag
     C                     MOVEL'Y'       WL0199           Order Scheduled
     C                     END                             *FI
     C                     END                             *FI
     C                     GOTO THEXIT                     *QUIT
     C                     END                             *FI
      * Calc new avail with inv if current week, else calc with no inv
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Production Date LE PAR.Week End Date        USR
      *   |- c2    : PAR.Lot Tracking Flag is yes
      *   '-
     C           WL0198    IFLE WL0192                     *IF
     C           WL0197    OREQ 'Y'                        *OR
      * Avail with inventory
      * PAR.Quantity Available    SUM =
      *    *COMPUTE (x1 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WRQINV    SUB  WRQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WRWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0560           Quantity Availa
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0560           Quantity Availa
     C                     END                             *FI
      * Allocate Order
      * CASE: PAR.Quantity Available    SUM is GT Zero
     C           WN0560    IFGT 0                          *IF
      * CASE: PAR.Quantity Available    SUM GE PAR.Quantity Sched 1 USR
     C           WN0560    IFGE WN0559                     *IF
     C                     Z-ADDWN0559    WN0558           Quantity Alloca
     C                     Z-ADD*ZERO     WN0559           Quantity Sched
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0560    WN0558           Quantity Alloca
     C                     SUB  WN0560    WN0559           Quantity Sched
     C                     END                             *FI
      * If ord ship is this day, updt Sched Ship/Alloc/Avail, else Alloc/
      * CASE: DB1.Avail Ship Date USR EQ PAR.Scheduled Ship Date
     C           WRJODT    IFEQ WL0196                     *IF
     C                     Z-ADDWRWSLS    WN0561           Total Quantity
     C           WRQSSH    ADD  WL0195    WN0562           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WRQINV    ADD  WRWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0562    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0561    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0563           Total Availabil
      * Chg SchdShp/Allc/Avail CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWRJODT    WL0203           Avail Ship Date
     C                     Z-ADDWN0562    WL0204           Quantity Sched
     C                     Z-ADDWN0561    WL0205           Quantity Sales
     C                     Z-ADDWN0563    WL0206           Quantity Availa
     C                     MOVELWRG2SX    WL0207    P      Reserved for Ot
     C                     EXSR TJCHRC
     C                     MOVEL'Y'       WL0199           Order Scheduled
     C                     ELSE
      * CASE: *OTHERWISE
     C           WRWSLS    ADD  WN0558    WN0561           Total Quantity
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WRQINV    ADD  WRWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WRQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0561    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0563           Total Availabil
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DB1) WRG2SX' defaulted for 'Reserved for Other Whse'.
      * Chg Alloc/Avail       CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWRJODT    WL0208           Avail Ship Date
     C                     Z-ADDWN0561    WL0209           Quantity Sales
     C                     Z-ADDWN0563    WL0210           Quantity Availa
     C                     MOVELWRG2SX    WL0211    P      Reserved for Ot
     C                     EXSR TKCHRC
     C                     ADD  WN0558    WL0193           Qty Not Alloc o
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  1         WL0191           Aging Day
     C                     MOVEL'N'       WN0564           First Time Flag
     C                     ADD  1         YR01
     C                     ENDDO
     C                     ENDIF
      * USER: Exit processing
     C                     Z-ADDWN0559    WL0194           ATS Quantity Ne
      *================================================================
     CSR         THEXIT    ENDSR
      /EJECT
     CSR         TICHRC    BEGSR
      *================================================================
      * Chg SchdShp/Avail      CH - *Arrays  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0565  70       Production Date
     C                     Z-ADD*ZERO     WN0566  61       Quantity Invent
     C                     Z-ADD*ZERO     WN0567  61       Quantity Produc
     C                     Z-ADD*ZERO     WN0568  61       Quantity Sales
     C                     MOVEL*BLANK    WN0569  1        Reserved for Ot
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0200    YI0101           Avail Ship Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0200
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO TIEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to PA Work Array for Roll
     C                     Z-ADDWL0200    WRJODT           Avail Ship Date
     C                     Z-ADDWL0201    WRQSSH           Quantity Sched
     C                     Z-ADDWL0202    WRQAVL           Quantity Availa
      *
      *
      *================================================================
     CSR         TIEXIT    ENDSR
      /EJECT
     CSR         TJCHRC    BEGSR
      *================================================================
      * Chg SchdShp/Allc/Avail CH - *Arrays  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0570  70       Production Date
     C                     Z-ADD*ZERO     WN0571  61       Quantity Invent
     C                     Z-ADD*ZERO     WN0572  61       Quantity Produc
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0203    YI0101           Avail Ship Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0203
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO TJEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to PA Work Array for Roll
     C                     Z-ADDWL0203    WRJODT           Avail Ship Date
     C                     Z-ADDWL0204    WRQSSH           Quantity Sched
     C                     Z-ADDWL0205    WRWSLS           Quantity Sales
     C                     Z-ADDWL0206    WRQAVL           Quantity Availa
     C                     MOVELWL0207    WRG2SX    P      Reserved for Ot
      *
      *
      *================================================================
     CSR         TJEXIT    ENDSR
      /EJECT
     CSR         TKCHRC    BEGSR
      *================================================================
      * Chg Alloc/Avail       CH - *Arrays  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0573  70       Production Date
     C                     Z-ADD*ZERO     WN0574  61       Quantity Invent
     C                     Z-ADD*ZERO     WN0575  61       Quantity Produc
     C                     Z-ADD*ZERO     WN0576  61       Quantity Sched
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0208    YI0101           Avail Ship Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0208
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO TKEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to PA Work Array for Roll
     C                     Z-ADDWL0208    WRJODT           Avail Ship Date
     C                     Z-ADDWL0209    WRWSLS           Quantity Sales
     C                     Z-ADDWL0210    WRQAVL           Quantity Availa
     C                     MOVELWL0211    WRG2SX    P      Reserved for Ot
      *
      *
      *================================================================
     CSR         TKEXIT    ENDSR
      /EJECT
     CSR         TLRVGN    BEGSR
      *================================================================
      * Rtv Change Sched Ship  RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0577  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0578  81       Total Availabil
      *
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0212    YI0101           Avail Ship Date
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0212
      *
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
     C           WRQSSH    ADD  WL0213    WN0577           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WRQINV    ADD  WRWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0577    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WRWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0578           Total Availabil
      * Chg SchdShp/Avail      CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWRJODT    WL0200           Avail Ship Date
     C                     Z-ADDWN0577    WL0201           Quantity Sched
     C                     Z-ADDWN0578    WL0202           Quantity Availa
     C                     EXSR TICHRC
     C                     ENDIF
      *================================================================
     CSR         TLEXIT    ENDSR
      /EJECT
     CSR         TMRVGN    BEGSR
      *================================================================
      * Clc Alloc Prod for PA RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0579 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0580  70       Quantity Sched
     C                     Z-ADD*ZERO     WN0581 112       Quantity Availa
     C                     Z-ADD*ZERO     WN0582 112       Total Quantity
     C                     Z-ADD*ZERO     WN0583  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0584  81       Total Availabil
     C                     MOVEL*BLANK    WN0585  1        First Time Flag
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADDWL0218    WN0580           Quantity Sched
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0214    YI0101           Avail Ship Date
      *
      *
      *
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
     C                     Z-ADD*ZERO     WN0579           Quantity Alloca
      * If age day is zero or order has been allocated, then QUIT
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Aging Day is equal to zero
      *   |- c2    : PAR.Quantity Sched 1 USR is LE Zero
      *   '-
     C           WL0215    IFEQ 0                          *IF
     C           WN0580    ORLE 0                          *OR
     C                     GOTO TMEXIT                     *QUIT
     C                     END                             *FI
      * Avail with no inventory
      * PAR.Quantity Available    SUM =
      *    *COMPUTE (x2 - x3 - x4)
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WRWPRD    SUB  WRQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WRWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0581           Quantity Availa
      * Allocate Order
      * CASE: PAR.Quantity Available    SUM is GT Zero
     C           WN0581    IFGT 0                          *IF
      * CASE: PAR.Quantity Available    SUM GE PAR.Quantity Sched 1 USR
     C           WN0581    IFGE WN0580                     *IF
     C                     Z-ADDWN0580    WN0579           Quantity Alloca
     C                     Z-ADD*ZERO     WN0580           Quantity Sched
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0581    WN0579           Quantity Alloca
     C                     SUB  WN0581    WN0580           Quantity Sched
     C                     END                             *FI
      * If ord ship is this day, updt Sched Ship/Alloc/Avail, else Alloc/
      * CASE: DB1.Avail Ship Date USR EQ PAR.Scheduled Ship Date
     C           WRJODT    IFEQ WL0220                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C           WRWSLS    ADD  WN0579    WN0582           Total Quantity
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WRQINV    ADD  WRWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WRQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0582    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0584           Total Availabil
      * Chg Alloc/Avail       CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWRJODT    WL0208           Avail Ship Date
     C                     Z-ADDWN0582    WL0209           Quantity Sales
     C                     Z-ADDWN0584    WL0210           Quantity Availa
     C                     MOVELWRG2SX    WL0211    P      Reserved for Ot
     C                     EXSR TKCHRC
     C                     ADD  WN0579    WL0217           Qty Not Alloc o
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  1         WL0215           Aging Day
     C                     MOVEL'N'       WN0585           First Time Flag
     C                     ADD  1         YR01
     C                     ENDDO
     C                     ENDIF
      *================================================================
     CSR         TMEXIT    ENDSR
      /EJECT
     CSR         TNRVGN    BEGSR
      *================================================================
      * Rtv Change Allocation  RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0586 112       Total Quantity
     C                     Z-ADD*ZERO     WN0587  81       Total Availabil
      *
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0222    YI0101           Avail Ship Date
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0222
      *
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
     C           WRWSLS    SUB  WL0223    WN0586           Total Quantity
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WRQINV    ADD  WRWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WRQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0586    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0587           Total Availabil
      * Chg Alloc/Avail       CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWRJODT    WL0208           Avail Ship Date
     C                     Z-ADDWN0586    WL0209           Quantity Sales
     C                     Z-ADDWN0587    WL0210           Quantity Availa
     C                     MOVELWRG2SX    WL0211    P      Reserved for Ot
     C                     EXSR TKCHRC
     C                     ENDIF
      *================================================================
     CSR         TNEXIT    ENDSR
      /EJECT
     CSR         TORVGN    BEGSR
      *================================================================
      * Rtv Rsrvd Other Whse  RT - PD Order Detail Schedule  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0588  1        Header Status
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WXAIC3    WQTO01           Company Number
     C           *LIKE     DEFN WXHGCD    WQTO02           Item Code
     C           *LIKE     DEFN WXAJCD    WQTO03           Warehouse Code
      * Define keylist
     C           KPSTO     KLIST
     C                     KFLD           WQTO01           Company Number
     C                     KFLD           WQTO02           Item Code
     C                     KFLD           WQTO03           Warehouse Code
     C                     KFLD           WXAODT           Scheduled Ship
      * Define keylist
     C           KRSTO     KLIST
     C                     KFLD           WQTO01           Company Number
     C                     KFLD           WQTO02           Item Code
     C                     KFLD           WQTO03           Warehouse Code
      * Setup key
     C                     Z-ADDP1AIC3    WQTO01           Company Number
     C                     Z-ADDWHC9NB    WQTO02           Item Code
     C                     MOVELP1AJCD    WQTO03           Warehouse Code
     C                     Z-ADD##JDT     WXAODT           Scheduled Ship
      * Establish starting position
     C           KPSTO     SETLL@KNCPZ7                    *
     C           KRSTO     READE@KNCPZ7                  90*
      * Data record not found
     C   90                MOVEL'USR2238' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Header Status      RT - PD Order Header  * 
     C                     EXSR TPRVGN
      * CASE: PAR.Header Status is Not Comp/Canc/Conf
     C           WN0588    IFEQ 'L'                        *IF
     C           WN0588    OREQ 'A'
     C           WN0588    OREQ 'E'
     C           WN0588    OREQ 'H'
      * Is it time to Quit ??
      * CASE: DB1.Scheduled Ship Date GT PAR.Avail Ship Date 21 USR
     C           WXAODT    IFGT WN0308                     *IF
     C                     GOTO TOEXIT                     *QUIT
     C                     END                             *FI
      * If warehouse ordered not equal to warehouse scheduled, then reser
      * CASE: DB1.Warehouse Code NE DB1.Order From Warehouse
     C           WXAJCD    IFNE WXAYAA                     *IF
      * Rtv Add to Allocation  RT - *Arrays  * 
     C                     EXSR TQRVGN
     C                     END                             *FI
     C                     END                             *FI
     C           KRSTO     READE@KNCPZ7                  90*
     C                     ENDDO
      *================================================================
     CSR         TOEXIT    ENDSR
      /EJECT
     CSR         TPRVGN    BEGSR
      *================================================================
      * RTV Header Status      RT - PD Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTP     KLIST
     C                     KFLD           WTAIC3           Company Number
     C                     KFLD           WTC4NB           Order Number
      * Setup key
     C                     Z-ADDWXAIC3    WTAIC3           Company Number
     C                     Z-ADDWXC4NB    WTC4NB           Order Number
      * Establish starting position
     C           KRSTP     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO TPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWTGWST    WN0588           Header Status
     C                     ENDIF
      *================================================================
     CSR         TPEXIT    ENDSR
      /EJECT
     CSR         TQRVGN    BEGSR
      *================================================================
      * Rtv Add to Allocation  RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0589 112       Total Quantity
     C                     Z-ADD*ZERO     WN0590  81       Total Availabil
      *
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWXAODT    YI0101           Avail Ship Date
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WXAODT
      *
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
     C           WRWSLS    ADD  WXIGQT    WN0589           Total Quantity
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WRQINV    ADD  WRWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WRQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0589    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0590           Total Availabil
      * Chg Alloc/Avail       CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWRJODT    WL0208           Avail Ship Date
     C                     Z-ADDWN0589    WL0209           Quantity Sales
     C                     Z-ADDWN0590    WL0210           Quantity Availa
     C                     MOVEL'Y'       WL0211    P      Reserved for Ot
     C                     EXSR TKCHRC
     C                     ENDIF
      *================================================================
     CSR         TQEXIT    ENDSR
      /EJECT
     CSR         TRRVGN    BEGSR
      *================================================================
      * Clc Allocate Order INV RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0591 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0592  70       Quantity Sched
     C                     Z-ADD*ZERO     WN0593 112       Quantity Availa
     C                     Z-ADD*ZERO     WN0594 112       Total Quantity
     C                     Z-ADD*ZERO     WN0595  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0596  81       Total Availabil
     C                     Z-ADD*ZERO     WN0597  92       Weight Allocate
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADDWUHWQT    WN0592           Quantity Sched
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWUAODT    YI0101           Avail Ship Date
      *
      *
      *
      *
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
     C                     Z-ADD*ZERO     WN0591           Quantity Alloca
      * If age day is zero or order has been allocated, then QUIT
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Aging Day is equal to zero
      *   |- c2    : PAR.Quantity Sched 1 USR is Equal to Zero
      *   '-
     C           WN0460    IFEQ 0                          *IF
     C           WN0592    OREQ 0                          *OR
     C                     Z-ADDWN0592    WUHWQT           ATS Quantity Ne
     C                     GOTO TREXIT                     *QUIT
     C                     END                             *FI
      * Calc new avail with inv if current week, else calc with no inv
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Production Date LE PAR.Week End Date        USR
      *   |- c2    : PAR.Lot Tracking Flag is yes
      *   '-
     C           YL0010    IFLE WN0461                     *IF
     C           WN0457    OREQ 'Y'                        *OR
      * Avail with inventory
      * PAR.Quantity Available    SUM =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WRQINV    ADD  WRWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WRQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WRWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0593           Quantity Availa
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0593           Quantity Availa
     C                     END                             *FI
      * Allocate Order
      * CASE: PAR.Quantity Available    SUM is GT Zero
     C           WN0593    IFGT 0                          *IF
      * CASE: PAR.Quantity Available    SUM GE PAR.Quantity Sched 1 USR
     C           WN0593    IFGE WN0592                     *IF
     C                     Z-ADDWN0592    WN0591           Quantity Alloca
     C                     Z-ADD*ZERO     WN0592           Quantity Sched
     C                     ADD  WN0591    WUCCQT           Quantity Schedu
     C           WN0591    MULT WN0451    WN0597           Weight Allocate
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0224           Company Number
     C                     Z-ADDWUC4NB    WL0225           Order Number
     C                     Z-ADDWUDPNB    WL0226           Order Sequence
     C                     Z-ADDWUUENB    WL0227           Order Secondary
     C                     Z-ADDWRGXDT    WL0228           OD Production D
     C                     Z-ADDWRJODT    WL0229           Scheduled Ship
     C                     MOVELP1AJCD    WL0230    P      Warehouse Code
     C                     MOVELWUAYAA    WL0231    P      Order From Ware
     C                     Z-ADDWHC9NB    WL0232           Item Code
     C                     Z-ADDWN0597    WL0233           Weight Allocate
     C                     Z-ADDWN0591    WL0234           Quantity Alloca
     C                     MOVELYL0005    WL0235    P      Base_Conv_Loss
     C                     EXSR TSRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0593    WN0591           Quantity Alloca
     C                     SUB  WN0593    WN0592           Quantity Sched
     C                     ADD  WN0591    WUCCQT           Quantity Schedu
     C           WN0591    MULT WN0451    WN0597           Weight Allocate
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0224           Company Number
     C                     Z-ADDWUC4NB    WL0225           Order Number
     C                     Z-ADDWUDPNB    WL0226           Order Sequence
     C                     Z-ADDWUUENB    WL0227           Order Secondary
     C                     Z-ADDWRGXDT    WL0228           OD Production D
     C                     Z-ADDWRJODT    WL0229           Scheduled Ship
     C                     MOVELP1AJCD    WL0230    P      Warehouse Code
     C                     MOVELWUAYAA    WL0231    P      Order From Ware
     C                     Z-ADDWHC9NB    WL0232           Item Code
     C                     Z-ADDWN0597    WL0233           Weight Allocate
     C                     Z-ADDWN0591    WL0234           Quantity Alloca
     C                     MOVELYL0005    WL0235    P      Base_Conv_Loss
     C                     EXSR TSRVGN
     C                     END                             *FI
      * If ord ship is this day, updt Sched Ship/Alloc/Avail, else Alloc/
      * CASE: DB1.Avail Ship Date USR EQ PAR.Scheduled Ship Date
     C           WRJODT    IFEQ WUAODT                     *IF
     C                     Z-ADDWRWSLS    WN0594           Total Quantity
     C           WRQSSH    ADD  WN0591    WN0595           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WRQINV    ADD  WRWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0595    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0594    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0596           Total Availabil
      * Chg SchdShp/Allc/Avail CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWRJODT    WL0203           Avail Ship Date
     C                     Z-ADDWN0595    WL0204           Quantity Sched
     C                     Z-ADDWN0594    WL0205           Quantity Sales
     C                     Z-ADDWN0596    WL0206           Quantity Availa
     C                     MOVELWRG2SX    WL0207    P      Reserved for Ot
     C                     EXSR TJCHRC
     C                     ELSE
      * CASE: *OTHERWISE
     C           WRWSLS    ADD  WN0591    WN0594           Total Quantity
     C           WRQSSH    ADD  WN0591    WN0595           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WRQINV    ADD  WRWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0595    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0594    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0596           Total Availabil
      * Chg SchdShp/Allc/Avail CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWRJODT    WL0203           Avail Ship Date
     C                     Z-ADDWN0595    WL0204           Quantity Sched
     C                     Z-ADDWN0594    WL0205           Quantity Sales
     C                     Z-ADDWN0596    WL0206           Quantity Availa
     C                     MOVELWRG2SX    WL0207    P      Reserved for Ot
     C                     EXSR TJCHRC
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  1         WN0460           Aging Day
     C                     ADD  1         YR01
     C                     ENDDO
     C                     ENDIF
      * USER: Exit processing
     C                     Z-ADDWN0592    WUHWQT           ATS Quantity Ne
      *================================================================
     CSR         TREXIT    ENDSR
      /EJECT
     CSR         TSRVGN    BEGSR
      *================================================================
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0598 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0599 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0600 112       OD Quantity Inv
     C                     Z-ADD*ZERO     WN0601 112       OD Weight Inv S
     C                     Z-ADD*ZERO     WN0602 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0603 112       OD Unused weigh
     C                     MOVEL*BLANK    WN0604  1        OD Added to Sch
     C                     MOVEL*BLANK    WN0605  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0606  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0607  1        EDI Status 1
     C                     MOVEL*BLANK    WN0608  1        EDI Status 2
     C                     MOVEL*BLANK    WN0609  1        EDI Status 3
     C                     MOVEL*BLANK    WN0610  1        Record Status
     C                     Z-ADD*ZERO     WN0611  60       Job Time
     C                     MOVEL*BLANK    WN0612 10        User Id
     C                     MOVEL*BLANK    WN0613 10        Job Name
     C                     Z-ADD*ZERO     WN0614  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTS     KLIST
     C                     KFLD           WWAIC3           Company Number
     C                     KFLD           WWC4NB           Order Number
     C                     KFLD           WWDPNB           Order Sequence
     C                     KFLD           WWUENB           Order Secondary
     C                     KFLD           WWJGDT           OD Production D
      * Setup key
     C                     Z-ADDWL0224    WWAIC3           Company Number
     C                     Z-ADDWL0225    WWC4NB           Order Number
     C                     Z-ADDWL0226    WWDPNB           Order Sequence
     C                     Z-ADDWL0227    WWUENB           Order Secondary
     C                     Z-ADDWL0228    WWJGDT           OD Production D
      * Establish starting position
     C           KRSTS     CHAIN@KNCPHO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2238' W0RTN   7
      * USER: Processing if Data record not found
      * CRT Ord Detail Sched   CR - Order Detail Schedule  * 
     C                     EXSR TTCRRC
     C                     GOTO TSEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WWIGQT    ADD  WL0234    WN0598           OD Qty/Cnsmd Pi
     C           WWFLWG    ADD  WL0233    WN0599           OD Weight Sched
     C                     MOVELWWP7ST    YL0011           OD Added to Sch
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           WL0235    IFEQ 'C'                        *IF
     C           WL0235    OREQ 'F'
      * CASE: PAR.OD Production Date EQ JOB.*Job date
     C           WL0228    IFEQ ##JDT                      *IF
     C                     MOVEL'Y'       YL0011           OD Added to Sch
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PAR.OD Quantity Scheduled is Greater than zero
     C           WN0598    IFGT 0                          *IF
      * CHG Qty/Wgt Scheduled  CH - Order Detail Schedule  * 
     C                     EXSR TUCHRC
     C                     ELSE
      * CASE: *OTHERWISE
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
     C                     EXSR TVDLRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         TSEXIT    ENDSR
      /EJECT
     CSR         TTCRRC    BEGSR
      *================================================================
      * CRT Ord Detail Sched   CR - Order Detail Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @KNCPHN
     C                     Z-ADDWL0224    WYAIC3           Company Number
     C                     Z-ADDWL0225    WYC4NB           Order Number
     C                     Z-ADDWL0226    WYDPNB           Order Sequence
     C                     Z-ADDWL0227    WYUENB           Order Secondary
     C                     Z-ADDWL0228    WYJGDT           OD Production D
     C                     Z-ADDWL0229    WYAODT           Scheduled Ship
     C                     MOVELWL0230    WYAJCD           Warehouse Code
     C                     MOVELWL0231    WYAYAA           Order From Ware
     C                     Z-ADDWL0232    WYHGCD           Item Code
     C                     Z-ADDWL0234    WYIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0233    WYFLWG           OD Weight Sched
     C                     Z-ADDWN0600    WYIUQT           OD Quantity Inv
     C                     Z-ADDWN0601    WYF3WG           OD Weight Inv S
     C                     Z-ADDWN0602    WYIVQT           OD Quantity Unu
     C                     Z-ADDWN0603    WYF4WG           OD Unused weigh
     C                     MOVELWN0604    WYP7ST           OD Added to Sch
     C                     MOVELWN0605    WYP8ST           OD Reallocate S
     C                     MOVELWN0606    WYQAST           OD Status Unuse
     C                     MOVELWN0607    WYUVST           EDI Status 1
     C                     MOVELWN0608    WYUWST           EDI Status 2
     C                     MOVELWN0609    WYUXST           EDI Status 3
     C                     MOVELWN0610    WYVSST           Record Status
     C                     Z-ADDWN0611    WYAATM           Job Time
     C                     MOVELWN0612    WYAYNA           User Id
     C                     MOVELWN0613    WYA0NA           Job Name
     C                     Z-ADDWN0614    WYAXDT           Job Date
      *
      * USER: Processing before Data update
      * SET Record Stamp CRTOB IF
     C                     MOVEL'A'       WYVSST           Record Status
     C                     Z-ADD##JTM     WYAATM           Job Time
     C                     MOVEL##USR     WYAYNA           User Id
     C                     MOVEL##PGM     WYA0NA           Job Name
     C                     Z-ADD##JDT     WYAXDT           Job Date
     C           KLCRTT    KLIST
     C                     KFLD           WYAIC3           Company Number
     C                     KFLD           WYC4NB           Order Number
     C                     KFLD           WYDPNB           Order Sequence
     C                     KFLD           WYUENB           Order Secondary
     C                     KFLD           WYJGDT           OD Production D
      * Check for duplicate primary key
     C           KLCRTT    SETLL@KNCPHN                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR2239' W0RTN   7
      * Send message 'Order Detail Schedule  EX'
     C                     MOVEL'USR2239' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO TTEXIT
     C                     ENDIF
      *
     C                     WRITE@KNCPHN                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         TTEXIT    ENDSR
      /EJECT
     CSR         TUCHRC    BEGSR
      *================================================================
      * CHG Qty/Wgt Scheduled  CH - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0615  70       Scheduled Ship
     C                     MOVEL*BLANK    WN0616  3        Warehouse Code
     C                     MOVEL*BLANK    WN0617  3        Order From Ware
     C                     Z-ADD*ZERO     WN0618  70       Item Code
     C                     Z-ADD*ZERO     WN0619 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0620 112       OD Unused weigh
     C                     MOVEL*BLANK    WN0621  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0622  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0623  1        EDI Status 1
     C                     MOVEL*BLANK    WN0624  1        EDI Status 2
     C                     MOVEL*BLANK    WN0625  1        EDI Status 3
     C                     MOVEL*BLANK    WN0626  1        Record Status
     C                     Z-ADD*ZERO     WN0627  60       Job Time
     C                     MOVEL*BLANK    WN0628 10        User Id
     C                     MOVEL*BLANK    WN0629 10        Job Name
     C                     Z-ADD*ZERO     WN0630  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YCRDC   1
      *
      * Move key fields to @KNCPHN
     C                     Z-ADDWWAIC3    WYAIC3           Company Number
     C                     Z-ADDWWC4NB    WYC4NB           Order Number
     C                     Z-ADDWWDPNB    WYDPNB           Order Sequence
     C                     Z-ADDWWUENB    WYUENB           Order Secondary
     C                     Z-ADDWWJGDT    WYJGDT           OD Production D
      *
     C           KLCHTU    KLIST
     C                     KFLD           WYAIC3           Company Number
     C                     KFLD           WYC4NB           Order Number
     C                     KFLD           WYDPNB           Order Sequence
     C                     KFLD           WYUENB           Order Secondary
     C                     KFLD           WYJGDT           OD Production D
     C           KLCHTU    CHAIN@KNCPHN              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL003.
     C                     MOVEL'LBL003'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TUEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TUEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDKN1    YCRDCS
      * Move non-key fields to @KNCPHN
     C                     Z-ADDWN0598    WYIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADDWN0599    WYFLWG           OD Weight Sched
     C                     Z-ADDWWIUQT    WYIUQT           OD Quantity Inv
     C                     Z-ADDWWF3WG    WYF3WG           OD Weight Inv S
     C                     MOVELYL0011    WYP7ST    P      OD Added to Sch
      *
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YCRDCS
     C           YCRDC     ANDNE'N'
     C                     MOVE 'Y'       YCRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Record Stamp CHGOB IF
     C                     Z-ADD##JTM     WYAATM           Job Time
     C                     MOVEL##USR     WYAYNA           User Id
     C                     MOVEL##PGM     WYA0NA           Job Name
     C                     Z-ADD##JDT     WYAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YCRDCS
     C           YCRDC     ANDNE'N'
     C                     MOVE 'Y'       YCRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YCRDC     IFEQ 'Y'
     C                     UPDAT@KNCPHN                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDKNCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TUEXIT    ENDSR
      /EJECT
     CSR         TVDLRC    BEGSR
      *================================================================
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @KNCPHN
     C                     Z-ADDWWAIC3    WYAIC3           Company Number
     C                     Z-ADDWWC4NB    WYC4NB           Order Number
     C                     Z-ADDWWDPNB    WYDPNB           Order Sequence
     C                     Z-ADDWWUENB    WYUENB           Order Secondary
     C                     Z-ADDWWJGDT    WYJGDT           OD Production D
      *
     C           KLDLTV    KLIST
     C                     KFLD           WYAIC3           Company Number
     C                     KFLD           WYC4NB           Order Number
     C                     KFLD           WYDPNB           Order Sequence
     C                     KFLD           WYUENB           Order Secondary
     C                     KFLD           WYJGDT           OD Production D
     C           KLDLTV    CHAIN@KNCPHN              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL004.
     C                     MOVEL'LBL004'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TVEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TVEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@KNCPHN                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         TVEXIT    ENDSR
      /EJECT
     CSR         TWRVGN    BEGSR
      *================================================================
      * Clc Allocate Order PRD RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0631 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0632  70       Quantity Sched
     C                     Z-ADD*ZERO     WN0633 112       Quantity Availa
     C                     Z-ADD*ZERO     WN0634 112       Total Quantity
     C                     Z-ADD*ZERO     WN0635  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0636  81       Total Availabil
     C                     Z-ADD*ZERO     WN0637  92       Weight Allocate
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADDWUHWQT    WN0632           Quantity Sched
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWUAODT    YI0101           Avail Ship Date
      *
      *
      *
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
     C                     Z-ADD*ZERO     WN0631           Quantity Alloca
      * If age day is zero or order has been allocated, then QUIT
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Aging Day is equal to zero
      *   |- c2    : PAR.Quantity Sched 1 USR is Equal to Zero
      *   '-
     C           WN0460    IFEQ 0                          *IF
     C           WN0632    OREQ 0                          *OR
     C                     Z-ADDWN0632    WUHWQT           ATS Quantity Ne
     C                     GOTO TWEXIT                     *QUIT
     C                     END                             *FI
      * Avail with no inventory
      * PAR.Quantity Available    SUM =
      *    *COMPUTE (x2 - x3 - x4)
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WRWPRD    SUB  WRQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WRWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0633           Quantity Availa
      * Allocate Order
      * CASE: PAR.Quantity Available    SUM is GT Zero
     C           WN0633    IFGT 0                          *IF
      * CASE: PAR.Quantity Available    SUM GE PAR.Quantity Sched 1 USR
     C           WN0633    IFGE WN0632                     *IF
     C                     Z-ADDWN0632    WN0631           Quantity Alloca
     C                     Z-ADD*ZERO     WN0632           Quantity Sched
     C                     ADD  WN0631    WUCCQT           Quantity Schedu
     C           WN0631    MULT WN0451    WN0637           Weight Allocate
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0224           Company Number
     C                     Z-ADDWUC4NB    WL0225           Order Number
     C                     Z-ADDWUDPNB    WL0226           Order Sequence
     C                     Z-ADDWUUENB    WL0227           Order Secondary
     C                     Z-ADDWRGXDT    WL0228           OD Production D
     C                     Z-ADDWRJODT    WL0229           Scheduled Ship
     C                     MOVELP1AJCD    WL0230    P      Warehouse Code
     C                     MOVELWUAYAA    WL0231    P      Order From Ware
     C                     Z-ADDWHC9NB    WL0232           Item Code
     C                     Z-ADDWN0637    WL0233           Weight Allocate
     C                     Z-ADDWN0631    WL0234           Quantity Alloca
     C                     MOVELYL0005    WL0235    P      Base_Conv_Loss
     C                     EXSR TSRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0633    WN0631           Quantity Alloca
     C                     SUB  WN0633    WN0632           Quantity Sched
     C                     ADD  WN0631    WUCCQT           Quantity Schedu
     C           WN0631    MULT WN0451    WN0637           Weight Allocate
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0224           Company Number
     C                     Z-ADDWUC4NB    WL0225           Order Number
     C                     Z-ADDWUDPNB    WL0226           Order Sequence
     C                     Z-ADDWUUENB    WL0227           Order Secondary
     C                     Z-ADDWRGXDT    WL0228           OD Production D
     C                     Z-ADDWRJODT    WL0229           Scheduled Ship
     C                     MOVELP1AJCD    WL0230    P      Warehouse Code
     C                     MOVELWUAYAA    WL0231    P      Order From Ware
     C                     Z-ADDWHC9NB    WL0232           Item Code
     C                     Z-ADDWN0637    WL0233           Weight Allocate
     C                     Z-ADDWN0631    WL0234           Quantity Alloca
     C                     MOVELYL0005    WL0235    P      Base_Conv_Loss
     C                     EXSR TSRVGN
     C                     END                             *FI
      * If ord ship is this day, updt Sched Ship/Alloc/Avail, else Alloc/
      * CASE: DB1.Avail Ship Date USR EQ PAR.Scheduled Ship Date
     C           WRJODT    IFEQ WUAODT                     *IF
     C                     Z-ADDWRWSLS    WN0634           Total Quantity
     C           WRQSSH    ADD  WN0631    WN0635           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WRQINV    ADD  WRWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0635    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0634    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0636           Total Availabil
      * Chg SchdShp/Allc/Avail CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWRJODT    WL0203           Avail Ship Date
     C                     Z-ADDWN0635    WL0204           Quantity Sched
     C                     Z-ADDWN0634    WL0205           Quantity Sales
     C                     Z-ADDWN0636    WL0206           Quantity Availa
     C                     MOVELWRG2SX    WL0207    P      Reserved for Ot
     C                     EXSR TJCHRC
     C                     ELSE
      * CASE: *OTHERWISE
     C           WRWSLS    ADD  WN0631    WN0634           Total Quantity
     C           WRQSSH    ADD  WN0631    WN0635           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WRQINV    ADD  WRWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0635    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0634    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0636           Total Availabil
      * Chg SchdShp/Allc/Avail CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWRJODT    WL0203           Avail Ship Date
     C                     Z-ADDWN0635    WL0204           Quantity Sched
     C                     Z-ADDWN0634    WL0205           Quantity Sales
     C                     Z-ADDWN0636    WL0206           Quantity Availa
     C                     MOVELWRG2SX    WL0207    P      Reserved for Ot
     C                     EXSR TJCHRC
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  1         WN0460           Aging Day
     C                     ADD  1         YR01
     C                     ENDDO
     C                     ENDIF
      * USER: Exit processing
     C                     Z-ADDWN0632    WUHWQT           ATS Quantity Ne
      *================================================================
     CSR         TWEXIT    ENDSR
      /EJECT
     CSR         TXRVGN    BEGSR
      *================================================================
      * Rtv Avail for Prod Dt RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD1         Y       50
     C           YL01      IFGT 0
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
     C                     ELSE
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
      * CASE: DB1.Production Date USR EQ PAR.Production Date USR
     C           WRGXDT    IFEQ P1ELDT                     *IF
      * Cacl Qty Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sales USR
     C           WRWPRD    SUB  WRQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WRWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0231           Quantity Availa
     C                     Z-ADDWRJODT    WUJODT           Avail Ship Date
     C                     GOTO TXEXIT                     *QUIT
     C                     END                             *FI
     C                     ADD  1         YR01
     C                     ENDDO
      *================================================================
     CSR         TXEXIT    ENDSR
      /EJECT
     CSR         TYRVGN    BEGSR
      *================================================================
      * BPS Upd Pcs/Wgt Conv  RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0638  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0639  70       PS Pieces Conve
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTY     KLIST
     C                     KFLD           WDAIC3           Company Number
     C                     KFLD           WDV5ST           Production Type
     C                     KFLD           WDELDT           Production Date
     C                     KFLD           WDHGCD           Item Code
     C                     KFLD           WDAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0236    WDAIC3           Company Number
     C                     MOVELWL0237    WDV5ST           Production Type
     C                     Z-ADDWL0238    WDELDT           Production Date
     C                     Z-ADDWL0239    WDHGCD           Item Code
     C                     MOVELWL0240    WDAJCD           Warehouse Code
      * Establish starting position
     C           KRSTY     CHAIN@I8CPUS              90    *
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WDPSCV    ADD  WL0241    WN0639           PS Pieces Conve
     C           WDWTCN    ADD  WL0242    WN0638           PS Weight Conve
      * If weight OR pieces converted is LT 0 then make zero
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.PS Weight Converted is LT Zero
      *   |- c2    : PAR.PS Pieces Converted is LT Zeros
      *   '-
     C           WN0638    IFLT 0                          *IF
     C           WN0639    ORLT 0                          *OR
     C                     Z-ADD*ZERO     WN0638           PS Weight Conve
     C                     Z-ADD*ZERO     WN0639           PS Pieces Conve
     C                     END                             *FI
      * BPS Chg Pcs/Wgt Conv  CH - PS Prod Item Schedule  * 
     C                     EXSR TZCHRC
      * FP1054 create consumed records   -- 10/05/2020 WITH SHIPP CO ON O
      * Create/update/delete Order Detail Sched-Consmd (POB6CPP)
      * CASE: PAR.Order Number is Greater then zero
     C           WL0243    IFGT 0                          *IF
      * WAS UPD WITH PAR.COMPANY NUMBER WHICH IS THE ACCTNG CO 10-05-2020
      * RTV Company for Ord   RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0243    WL0248           Order Number
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0247    YL0012           Company Number
      * Rtv Next Seq for Ord/ItRT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0012    WL0249           Company Number
     C                     Z-ADDWL0243    WL0250           Order Number
     C                     Z-ADDWL0244    WL0251           Order Sequence
     C                     Z-ADDWL0245    WL0252           Order Secondary
     C                     Z-ADDWDELDT    WL0253           OD Production D
     C                     Z-ADDYL0013    WL0254           ODS Sequence Nu
     C                     Z-ADDWL0239    WL0255           Consumed Item C
     C                     Z-ADDWL0246    WL0256           Item Code
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0254    YL0013           ODS Sequence Nu
      * CASE: LCL.ODS Sequence Number is zero
     C           YL0013    IFEQ 0                          *IF
      * Rtv Next Seq for Key  RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0012    WL0257           Company Number
     C                     Z-ADDWL0243    WL0258           Order Number
     C                     Z-ADDWL0244    WL0259           Order Sequence
     C                     Z-ADDWL0245    WL0260           Order Secondary
     C                     Z-ADDWDELDT    WL0261           OD Production D
     C                     Z-ADDYL0013    WL0262           ODS Sequence Nu
     C                     EXSR NCRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    YL0013           ODS Sequence Nu
     C                     END                             *FI
      * Upd OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0012    WL0263           Company Number
     C                     Z-ADDWL0243    WL0264           Order Number
     C                     Z-ADDWL0244    WL0265           Order Sequence
     C                     Z-ADDWL0245    WL0266           Order Secondary
     C                     Z-ADDWDELDT    WL0267           OD Production D
     C                     Z-ADDYL0013    WL0268           ODS Sequence Nu
     C                     Z-ADD*ZERO     WL0269           Scheduled Ship
     C                     MOVELWDAJCD    WL0270    P      Warehouse Code
     C                     Z-ADDWL0239    WL0271           Consumed Item C
     C                     Z-ADDWL0246    WL0272           Item Code
     C                     Z-ADDWL0241    WL0273           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0242    WL0274           OD Weight Sched
     C                     Z-ADD*ZERO     WL0275           ODS Quantity Sh
     C                     Z-ADD*ZERO     WL0276           ODS Weight Shor
     C                     Z-ADD*ZERO     WL0277           Deadline Depart
     C                     Z-ADD*ZERO     WL0278           Deadline Depart
     C                     EXSR NDRVGN
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         TYEXIT    ENDSR
      /EJECT
     CSR         TZCHRC    BEGSR
      *================================================================
      * BPS Chg Pcs/Wgt Conv  CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0640  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0641  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0642  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0643  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0644  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0645  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0646  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0647  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0648  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0649  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0650  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0651  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0652  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0653  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0654  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0655  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0656  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0657  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0658  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0659  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0660  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0661 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0662  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0663 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0664  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0665 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0666  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0667 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0668  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0669 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0670  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0671 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0672  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0673  3        PS Item Id
     C                     MOVEL*BLANK    WN0674  2        Warehouse Type
     C                     MOVEL*BLANK    WN0675  1        PS Lock Status
     C                     MOVEL*BLANK    WN0676  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0677  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0678  1        PS Piece Count
     C                     MOVEL*BLANK    WN0679  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0680  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0681  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0682  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0683  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0684  3        PS Production W
     C                     Z-ADD*ZERO     WN0685  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0686  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0687  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0688  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0689  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0690  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0691  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0692  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0693  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0694  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0695  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0696  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0697  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0698  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0699  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0700  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0701  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0702  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0703  6        Department Code
     C                     Z-ADD*ZERO     WN0704  30       Item Structure
     C                     Z-ADD*ZERO     WN0705  30       Item Structure
     C                     Z-ADD*ZERO     WN0706  30       Item Structure
     C                     MOVEL*BLANK    WN0707  6        Primal Group Co
     C                     MOVEL*BLANK    WN0708  1        EDI Status 1
     C                     MOVEL*BLANK    WN0709  1        EDI Status 2
     C                     MOVEL*BLANK    WN0710  1        EDI Status 3
     C                     MOVEL*BLANK    WN0711  1        Record Status
     C                     Z-ADD*ZERO     WN0712  60       Job Time
     C                     MOVEL*BLANK    WN0713 10        User Id
     C                     MOVEL*BLANK    WN0714 10        Job Name
     C                     Z-ADD*ZERO     WN0715  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YDRDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWDAIC3    WEAIC3           Company Number
     C                     MOVELWDV5ST    WEV5ST    P      Production Type
     C                     Z-ADDWDELDT    WEELDT           Production Date
     C                     Z-ADDWDHGCD    WEHGCD           Item Code
     C                     MOVELWDAJCD    WEAJCD    P      Warehouse Code
      *
     C           KLCHTZ    KLIST
     C                     KFLD           WEAIC3           Company Number
     C                     KFLD           WEV5ST           Production Type
     C                     KFLD           WEELDT           Production Date
     C                     KFLD           WEHGCD           Item Code
     C                     KFLD           WEAJCD           Warehouse Code
     C           KLCHTZ    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL005.
     C                     MOVEL'LBL005'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TZEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TZEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YDRDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWN0638    WEWTCN           PS Weight Conve
     C                     Z-ADDWN0639    WEPSCV           PS Pieces Conve
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YDRDCS
     C           YDRDC     ANDNE'N'
     C                     MOVE 'Y'       YDRDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WEAATM           Job Time
     C                     MOVEL##USR     WEAYNA           User Id
     C                     MOVEL##PGM     WEA0NA           Job Name
     C                     Z-ADD##JDT     WEAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YDRDCS
     C           YDRDC     ANDNE'N'
     C                     MOVE 'Y'       YDRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YDRDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TZEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ***** Change Log and comments
      *================================================================
      * FP1054 Created new condition to override whats in pdi8cpp
      *         ATS Adj Type USR:   CND Schedule Override  = SV
      * ** 06/24/2014 JJH E3160
      * ** Changed the definition of the "Average if WPA" field to "Upd
      * ** Standard Production".  This field is used to NOT increase
      * ** by-product production if Upd Standard Production = N(no).
      * ** Initially added logic to NOT process 61210 and 64210.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1BXVN           PSAA Program Na
     C                     Z-ADD*ZERO     P1AIWG           Unit Weight
     C                     Z-ADD*ZERO     P1EWWG           PSAA Weight Adj
     C                     Z-ADD*ZERO     P1H4QT           PSAA Quantity A
     C                     Z-ADD*ZERO     P1BPPR           Production Yiel
     C                     MOVEL*BLANK    P1WXST           Record Found US
     C                     Z-ADD*ZERO     P1D4PC           Percent 7.4 USR
     C                     Z-ADD*ZERO     P1WTUP           Weight UPS USR
     C                     MOVEL*BLANK    P2ADCD           UOM Primary
     C                     Z-ADD*ZERO     P2CHTM           Fresh Chilling
     C                     MOVEL*BLANK    P2PCCT           Piece Count Ite
     C                     Z-ADD*ZERO     P2BDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     P2BJNB           Bags Per Unit
     C                     Z-ADD*ZERO     P3PIAJ           Pieces Adjusted
     C                     MOVEL*BLANK    P4WPST           Warehouse Type
     C                     MOVEL*BLANK    P4T1ST           Warehouse Std C
     C                     Z-ADD*ZERO     P4DBNB           Warehouse Chill
     C                     MOVEL*BLANK    P5QJST           ATS Adj Type US
     C                     Z-ADD*ZERO     P6CHMT           Chilling Time U
     C                     Z-ADD*ZERO     P7EOWG           ATS Weight Avai
     C                     Z-ADD*ZERO     P7EWNB           ATS Pieces Avai
     C                     Z-ADD*ZERO     P8F8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     P9PAUS           Pieces Adjusted
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description Line One
     C                     MOVEL*BLANK    WUAVNA 30
      * Define work field UOM Primary
     C                     MOVEL*BLANK    WUADCD  2
      * Define work field Item Structure Class Code
     C                     Z-ADD*ZERO     WURINB  30
      * Define work field Item Structure Group Code
     C                     Z-ADD*ZERO     WURHNB  30
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field Item Type Code
     C                     MOVEL*BLANK    WUN0CD  3
      * Define work field Default Warehouse
     C                     MOVEL*BLANK    WUQ1CD  3
      * Define work field Base_Conv_Loss Item
     C                     MOVEL*BLANK    WUQZCD  2
      * Define work field Variety_Rendered_Cut
     C                     MOVEL*BLANK    WUXWST  1
      * Define work field Credit Item Status
     C                     MOVEL*BLANK    WUVMST  1
      * Define work field Std Weight_Head_Var_Ren
     C                     Z-ADD*ZERO     WUSWGH 112
      * Define work field Pieces Per Head
     C                     Z-ADD*ZERO     WUPPHE  70
      * Define work field Department Code
     C                     MOVEL*BLANK    WUR3CD  6
      * Define work field Group for Packaging
     C                     MOVEL*BLANK    WUSDCD  1
      * Define work field Seconds Item
     C                     MOVEL*BLANK    WUX5ST  1
      * Define work field Export_Domestic
     C                     MOVEL*BLANK    WUSUST  1
      * Define work field Print On Schedule
     C                     MOVEL*BLANK    WUSVST  1
      * Define work field Fresh Inv Allocation Seq
     C                     MOVEL*BLANK    WUSYST  1
      * Define work field Fresh Sched As Ordered
     C                     MOVEL*BLANK    WUSZST  1
      * Define work field Frozen Inv Allocation Seq
     C                     MOVEL*BLANK    WUS1ST  1
      * Define work field Primal Group Code
     C                     MOVEL*BLANK    WUXRCD  6
      * Define work field Warehouse Type
     C                     MOVEL*BLANK    WUWPST  2
      * Define work field Trans Contol AS400_Plant
     C                     MOVEL*BLANK    WUXUST  1
      * Define work field Warehouse Location
     C                     MOVEL*BLANK    WUT0ST  1
      * Define work field PS Item Id
     C                     MOVEL*BLANK    WUWCST  3
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAHGCD           Item Code
     C                     Z-ADD*ZERO     WAAWPC           Conversion Fact
     C                     Z-ADD*ZERO     WAAXPC           Conversion Fact
     C                     Z-ADD*ZERO     WAAIWG           Unit Weight
     C                     Z-ADD*ZERO     WACZWG           Minimum Weight
     C                     Z-ADD*ZERO     WAC0WG           Maximum Weight
     C                     Z-ADD*ZERO     WAURTN           Number Cases On
     C                     Z-ADD*ZERO     WAAJC8           Vendor Item Def
     C                     Z-ADD*ZERO     WARINB           Item Structure
     C                     Z-ADD*ZERO     WARHNB           Item Structure
     C                     Z-ADD*ZERO     WARGNB           Item Structure
     C                     Z-ADD*ZERO     WATFNB           Transportation
     C                     Z-ADD*ZERO     WATMVA           Maximum Audit V
     C                     Z-ADD*ZERO     WATNVA           Minimum Audit V
     C                     Z-ADD*ZERO     WABLPR           Market Overage
     C                     Z-ADD*ZERO     WABMPR           Standard Overag
     C                     Z-ADD*ZERO     WACMCO           Item Pricing Co
     C                     Z-ADD*ZERO     WACHTM           Fresh Chilling
     C                     Z-ADD*ZERO     WASWGH           Std Weight_Head
     C                     Z-ADD*ZERO     WAPPHE           Pieces Per Head
     C                     Z-ADD*ZERO     WAICN1           Item Category N
     C                     Z-ADD*ZERO     WAICN2           Item Category N
     C                     Z-ADD*ZERO     WAV2NB           Item Category N
     C                     Z-ADD*ZERO     WAITCN           Item Category N
     C                     Z-ADD*ZERO     WAITC5           Item Category N
     C                     Z-ADD*ZERO     WAICN6           Item Category N
     C                     Z-ADD*ZERO     WAICN7           Item Category N
     C                     Z-ADD*ZERO     WAICN8           Item Category N
     C                     Z-ADD*ZERO     WAICN9           Item Category N
     C                     Z-ADD*ZERO     WAICN0           Item Category N
     C                     Z-ADD*ZERO     WASFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     WAA3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     WASJNB           Production Lead
     C                     Z-ADD*ZERO     WASKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WASLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WASMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WACFNB           PM Pounds per H
     C                     Z-ADD*ZERO     WACGNB           Item Frt Overag
     C                     Z-ADD*ZERO     WAILNB           Packages per ca
     C                     Z-ADD*ZERO     WACHNB           Use_Freeze_Sell
     C                     Z-ADD*ZERO     WACINB           PM Batch Size
     C                     Z-ADD*ZERO     WACJNB           Package Level s
     C                     Z-ADD*ZERO     WACMNB           Partial Item Co
     C                     Z-ADD*ZERO     WACNNB           WIP Item Code
     C                     Z-ADD*ZERO     WACRNB           WIP Reject Code
     C                     Z-ADD*ZERO     WACSNB           Std Costing Uni
     C                     Z-ADD*ZERO     WACVNB           FP Std Green We
     C                     Z-ADD*ZERO     WACWNB           PM Std LBS Man
     C                     Z-ADD*ZERO     WACXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     WACZNB           PM Formula LBS
     C                     Z-ADD*ZERO     WAC0NB           PM Finished LBS
     C                     Z-ADD*ZERO     WAB4NB           PM Raw Material
     C                     Z-ADD*ZERO     WAB5NB           PM Line Number
     C                     Z-ADD*ZERO     WABDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WABJNB           Bags Per Unit
     C                     Z-ADD*ZERO     WAF5WG           Item Target Pri
     C                     Z-ADD*ZERO     WAF6WG           Minimum Piece W
     C                     Z-ADD*ZERO     WAF7WG           Maximum Piece W
     C                     Z-ADD*ZERO     WABLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     WABNNB           Production Qty
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WBBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WBBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WBBUC3           WHS Sched Prod
     C                     Z-ADD*ZERO     WBBVC3           WHS Inventory C
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCHGCD           Item Code
     C                     Z-ADD*ZERO     WCC9NB           Component Item
     C                     Z-ADD*ZERO     WCBOPR           Sales Yield
     C                     Z-ADD*ZERO     WCBPPR           Production Yiel
     C                     Z-ADD*ZERO     WCHGQT           Packaging Quant
     C                     Z-ADD*ZERO     WCCNSM           Consume Priorit
     C                     Z-ADD*ZERO     WCBMY1           Consume Priorit
     C                     Z-ADD*ZERO     WCBMY2           BOM Pumped Perc
     C                     Z-ADD*ZERO     WCIXQT           BOM Meat Cost C
     C                     Z-ADD*ZERO     WCIYQT           BOM Off Line Yi
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDELDT           Production Date
     C                     Z-ADD*ZERO     WDHGCD           Item Code
     C                     Z-ADD*ZERO     WDGPDT           PS Available Sh
     C                     Z-ADD*ZERO     WDWTSP           PS Weight Plann
     C                     Z-ADD*ZERO     WDQTSP           PS Pieces Plann
     C                     Z-ADD*ZERO     WDDJPC           PS Pct of Carca
     C                     Z-ADD*ZERO     WDF8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WDWTIN           PS Weight Inv O
     C                     Z-ADD*ZERO     WDD5NB           PS Pieces Inv O
     C                     Z-ADD*ZERO     WDDXWG           PS Weight Stand
     C                     Z-ADD*ZERO     WDB2NB           PS Pieces Stand
     C                     Z-ADD*ZERO     WDWTCN           PS Weight Conve
     C                     Z-ADD*ZERO     WDPSCV           PS Pieces Conve
     C                     Z-ADD*ZERO     WDSAWT           PS Weight Shipp
     C                     Z-ADD*ZERO     WDB9NB           PS Pieces Shipp
     C                     Z-ADD*ZERO     WDD1WG           PS Weight Prod
     C                     Z-ADD*ZERO     WDCBNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WDEZWG           PS Weight Inv A
     C                     Z-ADD*ZERO     WDCCNB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WDE0WG           PS Weight Ship
     C                     Z-ADD*ZERO     WDD6NB           PS Pieces Ship
     C                     Z-ADD*ZERO     WDOAWT           PS Weight Prod
     C                     Z-ADD*ZERO     WDCDNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WDUNW2           PS Weight Inv A
     C                     Z-ADD*ZERO     WDCENB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WDF9WG           PS Unit Weight
     C                     Z-ADD*ZERO     WDBPNB           PS Pieces Whs T
     C                     Z-ADD*ZERO     WDGAWG           PS Weight Whs T
     C                     Z-ADD*ZERO     WDBQNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WDGBWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WDBRNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WDGCWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WDBSNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WDGDWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WDBWNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WDGEWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WDPS6U           PS Pieces Unuse
     C                     Z-ADD*ZERO     WDDVWG           PS Weight Order
     C                     Z-ADD*ZERO     WDD7NB           PS Pieces Order
     C                     Z-ADD*ZERO     WDFCAD           PS Weight FC Ad
     C                     Z-ADD*ZERO     WDD9NB           PS Pieces FC Ad
     C                     Z-ADD*ZERO     WDDWWG           PS Weight FX Ad
     C                     Z-ADD*ZERO     WDEANB           PS Pieces FX Ad
     C                     Z-ADD*ZERO     WDSHWT           PS Weight Sched
     C                     Z-ADD*ZERO     WDEBNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WDAVWT           PS Weight Avail
     C                     Z-ADD*ZERO     WDECNB           PS Pieces Avail
     C                     Z-ADD*ZERO     WDWTON           PS Weight Produ
     C                     Z-ADD*ZERO     WDEDNB           PS Pieces Produ
     C                     Z-ADD*ZERO     WDFNWT           PS Weight Fab N
     C                     Z-ADD*ZERO     WDEENB           PS Pieces Fab N
     C                     Z-ADD*ZERO     WDQTAS           PS Weight Sched
     C                     Z-ADD*ZERO     WDEFNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WDWAIO           PS Weight Sched
     C                     Z-ADD*ZERO     WDEGNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WDRGNB           Item Structure
     C                     Z-ADD*ZERO     WDRHNB           Item Structure
     C                     Z-ADD*ZERO     WDRINB           Item Structure
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Define work field Unit Weight
     C                     Z-ADD*ZERO     WUAIWG 112
      * Define work field Fresh Chilling Time
     C                     Z-ADD*ZERO     WUCHTM  52
      * Define work field Pieces Per Bag
     C                     Z-ADD*ZERO     WUBDNB  70
      * Define work field Bags Per Unit
     C                     Z-ADD*ZERO     WUBJNB  70
      * Define work field Warehouse Std Chill Time
     C                     MOVEL*BLANK    WUT1ST  1
      * Define work field Warehouse Chill Time
     C                     Z-ADD*ZERO     WUDBNB  52
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WGAIC3           Company Number
     C                     Z-ADD*ZERO     WGBCDT           Post to G/L Dat
     C                     Z-ADD*ZERO     WGCQNB           Julian Date
     C                     Z-ADD*ZERO     WGESNB           Accounting Year
     C                     Z-ADD*ZERO     WGETNB           Accounting Peri
     C                     Z-ADD*ZERO     WGBZNB           OM Week
     C                     Z-ADD*ZERO     WGEINB           Week Number
     C                     Z-ADD*ZERO     WGAQNB           Billing Cycle
     C                     Z-ADD*ZERO     WGOJDT           HPS PIC Date
     C                     Z-ADD*ZERO     WGNQNX           HPS Calendar Ye
     C                     Z-ADD*ZERO     WGNRNX           HPS Calendar We
     C                     Z-ADD*ZERO     WGOKDT           Calendar Unused
     C                     Z-ADD*ZERO     WGOLDT           Calendar Unused
     C                     Z-ADD*ZERO     WGAATM           Job Time
     C                     Z-ADD*ZERO     WGAXDT           Job Date
      * Define work field Count USR
     C                     Z-ADD*ZERO     WUCNTU  50
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Pieces Adjusted
     C                     Z-ADD*ZERO     WUPIAJ  70
      * Define work field PS Weight Prod Allocated
     C                     Z-ADD*ZERO     WUOAWT  92
      * Define work field PS Pieces Prod Allocated
     C                     Z-ADD*ZERO     WUCDNB  70
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WIAIC3           Company Number
     C                     Z-ADD*ZERO     WIGJDT           Effective Produ
     C                     Z-ADD*ZERO     WIV3ST           Shifts Per Day
     C                     Z-ADD*ZERO     WIHPSH           Work Hours Per
     C                     Z-ADD*ZERO     WIPIPH           Pieces Per Hour
     C                     Z-ADD*ZERO     WIDQWG           Weight Per Hour
     C                     Z-ADD*ZERO     WIPPDA           Pieces Per Day
     C                     Z-ADD*ZERO     WIDRWG           Weight Per Day
     C                     Z-ADD*ZERO     WIEOPC           Boning Rate
     C                     Z-ADD*ZERO     WIEPPC           Export Pass Rat
     C                     Z-ADD*ZERO     WIEQPC           CAP Percent Unu
     C                     Z-ADD*ZERO     WIERPC           CAP Percent Unu
     C                     Z-ADD*ZERO     WIA8NB           CAP Weight Unus
     C                     Z-ADD*ZERO     WIBBNB           CAP Pieces Unus
     C                     Z-ADD*ZERO     WIA9NB           CAP Weight Unus
     C                     Z-ADD*ZERO     WIBCNB           CAP Pieces Unus
     C                     Z-ADD*ZERO     WIAATM           Job Time
     C                     Z-ADD*ZERO     WIAXDT           Job Date
      * Define work field RM Weight Avail USR
     C                     Z-ADD*ZERO     WUENNB 112
      * Define work field RM Pieces Avail USR
     C                     Z-ADD*ZERO     WUEMNB  70
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WKAIC3           Company Number
     C                     Z-ADD*ZERO     WKELDT           Production Date
     C                     Z-ADD*ZERO     WKRMPA           CDS RM Pieces A
     C                     Z-ADD*ZERO     WKGFWG           CDS RM Weight A
     C                     Z-ADD*ZERO     WKGGWG           CDS Average Pie
     C                     Z-ADD*ZERO     WKCLNB           CDS CV Pieces A
     C                     Z-ADD*ZERO     WKGHWG           CDS CV Weight A
     C                     Z-ADD*ZERO     WKDVNB           CDS Pieces Unus
     C                     Z-ADD*ZERO     WKGNWG           CDS Weight Unus
     C                     Z-ADD*ZERO     WKDZNB           CDS Pieces Unus
     C                     Z-ADD*ZERO     WKGOWG           CDS Weight Unus
     C                     Z-ADD*ZERO     WKD0NB           CDS Pieces Unus
     C                     Z-ADD*ZERO     WKGPWG           CDS Weight Unus
     C                     Z-ADD*ZERO     WKD1NB           CDS Pieces Unus
     C                     Z-ADD*ZERO     WKGQWG           CDS Weight Unus
     C                     Z-ADD*ZERO     WKD4NB           CDS Pieces Unus
     C                     Z-ADD*ZERO     WKGRWG           CDS Weight Unus
     C                     Z-ADD*ZERO     WKAATM           Job Time
     C                     Z-ADD*ZERO     WKAXDT           Job Date
      * Define work field Order From Warehouse
     C                     MOVEL*BLANK    WUAYAA  3
      * Define work field ATS Weight Need USR
     C                     Z-ADD*ZERO     WUENWG 112
      * Define work field ATS Quantity Need USR
     C                     Z-ADD*ZERO     WUHWQT 112
      * Define work field Order Number
     C                     Z-ADD*ZERO     WUC4NB  70
      * Define work field Order Sequence Number
     C                     Z-ADD*ZERO     WUDPNB  30
      * Define work field Order Secondary Line Seq
     C                     Z-ADD*ZERO     WUUENB  30
      * Define work field Age Code
     C                     MOVEL*BLANK    WURPCD  1
      * Define work field Quantity Scheduled
     C                     Z-ADD*ZERO     WUCCQT 112
      * Define work field Weight Scheduled
     C                     Z-ADD*ZERO     WUAUWG 112
      * Define work field Scheduled Ship Date
     C                     Z-ADD*ZERO     WUAODT  70
      * Define work field Accounting Year Code
     C                     Z-ADD*ZERO     WUESNB  40
      * Define work field Week Number
     C                     Z-ADD*ZERO     WUEINB  20
      * Define work field Date Tue USR
     C                     Z-ADD*ZERO     WUJIDT  70
      * Define work field Date Wed USR
     C                     Z-ADD*ZERO     WUJJDT  70
      * Define work field Date Thu USR
     C                     Z-ADD*ZERO     WUJKDT  70
      * Define work field Date Fri USR
     C                     Z-ADD*ZERO     WUJLDT  70
      * Define work field Date Sat USR
     C                     Z-ADD*ZERO     WUJMDT  70
      * Define work field Date Sun USR
     C                     Z-ADD*ZERO     WUJNDT  70
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Generic Heading 1
     C                     MOVEL*BLANK    WUMWTX  8
      * Define work field Generic Heading 2
     C                     MOVEL*BLANK    WUMXTX  8
      * Define work field Generic Heading 3
     C                     MOVEL*BLANK    WUMYTX  8
      * Define work field Generic Heading 4
     C                     MOVEL*BLANK    WUMZTX  8
      * Define work field Generic Heading 5
     C                     MOVEL*BLANK    WUM0TX  8
      * Define work field Generic Heading 6
     C                     MOVEL*BLANK    WUM1TX  8
      * Define work field Generic Heading 7
     C                     MOVEL*BLANK    WUM2TX  8
      * Define work field Generic Heading 8
     C                     MOVEL*BLANK    WUM3TX  8
      * Define work field Generic Heading 9
     C                     MOVEL*BLANK    WUM4TX  8
      * Define work field Generic Heading 10
     C                     MOVEL*BLANK    WUM5TX  8
      * Define work field Generic Heading 11
     C                     MOVEL*BLANK    WUM6TX  8
      * Define work field Generic Heading 12
     C                     MOVEL*BLANK    WUM7TX  8
      * Define work field Generic Heading 13
     C                     MOVEL*BLANK    WUM8TX  8
      * Define work field Generic Heading 14
     C                     MOVEL*BLANK    WUM9TX  8
      * Define work field Generic Heading 15
     C                     MOVEL*BLANK    WUY5TX  8
      * Define work field Generic Heading 16
     C                     MOVEL*BLANK    WUY6TX  8
      * Define work field @Calc 6,0
     C                     Z-ADD*ZERO     WUCLC6  60
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*LOVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01    50
     C                     Z-ADD1         Y       50
     C                     ENDIF
      *
      * Define work field Quantity Inventory USR
     C                     Z-ADD*ZERO     WUQINV  61
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WSAIC3           Company Number
     C                     Z-ADD*ZERO     WSC4NB           Order Number
     C                     Z-ADD*ZERO     WSDPNB           Order Sequence
     C                     Z-ADD*ZERO     WSUENB           Order Secondary
     C                     Z-ADD*ZERO     WSHGCD           Item Code
     C                     Z-ADD*ZERO     WSBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WSCFC7           Order Group Cod
     C                     Z-ADD*ZERO     WSMAVA           Billing Detail
     C                     Z-ADD*ZERO     WSKDVA           Billing Detail
     C                     Z-ADD*ZERO     WSL8VA           Billing Detail
     C                     Z-ADD*ZERO     WSL9VA           Quantity to Sub
     C                     Z-ADD*ZERO     WSAYVA           Extended Amount
     C                     Z-ADD*ZERO     WSEXDT           Market Pricing
     C                     Z-ADD*ZERO     WSBZPR           Price Overage O
     C                     Z-ADD*ZERO     WSL6NB           Contract Number
     C                     Z-ADD*ZERO     WSGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WSR1NB           Rated Freight
     C                     Z-ADD*ZERO     WSAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WSD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WSCCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WSAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WSCBQT           Quantity Shippe
     C                     Z-ADD*ZERO     WSATWG           Weight Shipped
     C                     Z-ADD*ZERO     WSAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WSAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WSAKPR           Unit Price
     C                     Z-ADD*ZERO     WSALPR           Unit Price - Cr
     C                     Z-ADD*ZERO     WSAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WSAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WSA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WSA5DT           Requested Ship
     C                     Z-ADD*ZERO     WSAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WSGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WSRGNB           Item Structure
     C                     Z-ADD*ZERO     WSRHNB           Item Structure
     C                     Z-ADD*ZERO     WSRINB           Item Structure
     C                     Z-ADD*ZERO     WSCXDT           Date of Origina
     C                     Z-ADD*ZERO     WSDUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WSB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WSA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WSNTDT           Warehouse Palle
     C                     Z-ADD*ZERO     WSNUDT           Consumed Item C
     C                     Z-ADD*ZERO     WSNVDT           Deadline Depart
     C                     Z-ADD*ZERO     WSNWDT           OD Price Type R
     C                     Z-ADD*ZERO     WSNXDT           OD Firm Date
     C                     Z-ADD*ZERO     WSBUTM           Deadline Depart
     C                     Z-ADD*ZERO     WSBVTM           Price Code
     C                     Z-ADD*ZERO     WSBWTM           Maximum Net Wei
     C                     Z-ADD*ZERO     WSBXTM           Substitution Li
     C                     Z-ADD*ZERO     WSBYTM           Max Qty to sche
     C                     Z-ADD*ZERO     WSH5NX           Warehouse Palle
     C                     Z-ADD*ZERO     WSH6NX           Warehouse Avg P
     C                     Z-ADD*ZERO     WSH7NX           OD Item Target
     C                     Z-ADD*ZERO     WSH8NX           OD Estimated Gr
     C                     Z-ADD*ZERO     WSH9NX           OD Maximum Unit
     C                     Z-ADD*ZERO     WSDVPR           Order Gate/Fina
     C                     Z-ADD*ZERO     WSDWPR           OD Ceiling Pric
     C                     Z-ADD*ZERO     WSDXPR           OD Gate/Final P
     C                     Z-ADD*ZERO     WSDYPR           OD Weighted Avg
     C                     Z-ADD*ZERO     WSDZPR           OD Original Ord
     C                     Z-ADD*ZERO     WSGSPR           OD Cancel Date
     C                     Z-ADD*ZERO     WSGTPR           OD Unused Prc 7
     C                     Z-ADD*ZERO     WSGUPR           OD Unused Prc 8
     C                     Z-ADD*ZERO     WSPEWG           Weight Amount E
     C                     Z-ADD*ZERO     WSRINY           Item Age Days
     C                     Z-ADD*ZERO     WSTIDT           Production Ovr
     C                     Z-ADD*ZERO     WSTJDT           Production Ovr
     C                     Z-ADD*ZERO     WSTKDT           OD Market Begin
     C                     Z-ADD*ZERO     WSTLDT           OD Market Endin
     C                     Z-ADD*ZERO     WSTMDT           OD Atch to Ord
     C                     Z-ADD*ZERO     WSAATM           Job Time
     C                     Z-ADD*ZERO     WSAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WTAIC3           Company Number
     C                     Z-ADD*ZERO     WTC4NB           Order Number
     C                     Z-ADD*ZERO     WTANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WTBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WTB0C7           Bill to Custome
     C                     Z-ADD*ZERO     WTA0DT           Order Date
     C                     Z-ADD*ZERO     WTA5DT           Requested Ship
     C                     Z-ADD*ZERO     WTGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WTACDT           Cancel Date
     C                     Z-ADD*ZERO     WTAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WTCXDT           Date of Origina
     C                     Z-ADD*ZERO     WTJZVA           Order Value Tot
     C                     Z-ADD*ZERO     WTA1WG           Order Weight To
     C                     Z-ADD*ZERO     WTEIDT           Requested Deliv
     C                     Z-ADD*ZERO     WTAFTM           Requested Deliv
     C                     Z-ADD*ZERO     WTRMNB           Load ID
     C                     Z-ADD*ZERO     WTTBNB           Absorbed Freigh
     C                     Z-ADD*ZERO     WTR1NB           Rated Freight
     C                     Z-ADD*ZERO     WTRNNB           Reefer Temperat
     C                     Z-ADD*ZERO     WTATIN           Attach to Invoi
     C                     Z-ADD*ZERO     WTRSRN           Resell Referenc
     C                     Z-ADD*ZERO     WTT3NB           Attach to Order
     C                     Z-ADD*ZERO     WTCONB           Invoice Number
     C                     Z-ADD*ZERO     WTAWDT           Invoice Date
     C                     Z-ADD*ZERO     WTVRVA           A/R order Value
     C                     Z-ADD*ZERO     WTB7VL           Invoice Order V
     C                     Z-ADD*ZERO     WTNODT           OH Appt Confirm
     C                     Z-ADD*ZERO     WTNPDT           JPN Invoice Iss
     C                     Z-ADD*ZERO     WTNQDT           Load Actual Shi
     C                     Z-ADD*ZERO     WTNRDT           Load BOL Comple
     C                     Z-ADD*ZERO     WTNSDT           Load Truck Depa
     C                     Z-ADD*ZERO     WTBPTM           Maximum Gross W
     C                     Z-ADD*ZERO     WTBQTM           Time of Origina
     C                     Z-ADD*ZERO     WTBRTM           OH Appt Confirm
     C                     Z-ADD*ZERO     WTBSTM           Load BOL Comple
     C                     Z-ADD*ZERO     WTBTTM           Load Truck Depa
     C                     Z-ADD*ZERO     WTH0NX           Act Frt Referen
     C                     Z-ADD*ZERO     WTH1NX           Act Non-Ref Frt
     C                     Z-ADD*ZERO     WTH2NX           OH Fuel Surchar
     C                     Z-ADD*ZERO     WTH3NX           OH Total Non-Re
     C                     Z-ADD*ZERO     WTH4NX           OH Total Ref Fr
     C                     Z-ADD*ZERO     WTC0C7           Claim Number
     C                     Z-ADD*ZERO     WTAATM           Job Time
     C                     Z-ADD*ZERO     WTAXDT           Job Date
      * Define work field Julian Date
     C                     Z-ADD*ZERO     WUCQNB  50
      * Define work field OM Week
     C                     Z-ADD*ZERO     WUBZNB  30
      * Define work field Day of Week
     C                     MOVEL*BLANK    WUA9ST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WWAIC3           Company Number
     C                     Z-ADD*ZERO     WWC4NB           Order Number
     C                     Z-ADD*ZERO     WWDPNB           Order Sequence
     C                     Z-ADD*ZERO     WWUENB           Order Secondary
     C                     Z-ADD*ZERO     WWJGDT           OD Production D
     C                     Z-ADD*ZERO     WWAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WWHGCD           Item Code
     C                     Z-ADD*ZERO     WWIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WWFLWG           OD Weight Sched
     C                     Z-ADD*ZERO     WWIUQT           OD Quantity Inv
     C                     Z-ADD*ZERO     WWF3WG           OD Weight Inv S
     C                     Z-ADD*ZERO     WWIVQT           OD Quantity Unu
     C                     Z-ADD*ZERO     WWF4WG           OD Unused weigh
     C                     Z-ADD*ZERO     WWAATM           Job Time
     C                     Z-ADD*ZERO     WWAXDT           Job Date
      * Define work field Avail Ship Date USR
     C                     Z-ADD*ZERO     WUJODT  70
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     TBAIC3           Company Number
     C                     Z-ADD*ZERO     TBC4NB           Order Number
     C                     Z-ADD*ZERO     TBDPNB           Order Sequence
     C                     Z-ADD*ZERO     TBUENB           Order Secondary
     C                     Z-ADD*ZERO     TBJGDT           OD Production D
     C                     Z-ADD*ZERO     TBOONY           ODS Sequence Nu
     C                     Z-ADD*ZERO     TBAODT           Scheduled Ship
     C                     Z-ADD*ZERO     TBNUDT           Consumed Item C
     C                     Z-ADD*ZERO     TBHGCD           Item Code
     C                     Z-ADD*ZERO     TBIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     TBFLWG           OD Weight Sched
     C                     Z-ADD*ZERO     TBNSQT           ODS Quantity Sh
     C                     Z-ADD*ZERO     TBJQWG           ODS Weight Shor
     C                     Z-ADD*ZERO     TBNVDT           Deadline Depart
     C                     Z-ADD*ZERO     TBBUTM           Deadline Depart
     C                     Z-ADD*ZERO     TBAATM           Job Time
     C                     Z-ADD*ZERO     TBAXDT           Job Date
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WB01 155       *Synon (15,5) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA03 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WJ03 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SARVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003 30
     C                     MOVEL*BLANK    WL0004  2
     C                     Z-ADD*ZERO     WL0005 112
     C                     Z-ADD*ZERO     WL0006  30
     C                     Z-ADD*ZERO     WL0007  30
     C                     Z-ADD*ZERO     WL0008  30
     C                     MOVEL*BLANK    WL0009  3
     C                     MOVEL*BLANK    WL0010  3
     C                     Z-ADD*ZERO     WL0011  52
     C                     MOVEL*BLANK    WL0012  2
     C                     MOVEL*BLANK    WL0013  1
     C                     MOVEL*BLANK    WL0014  1
     C                     Z-ADD*ZERO     WL0015 112
     C                     Z-ADD*ZERO     WL0016  70
     C                     MOVEL*BLANK    WL0017  6
     C                     MOVEL*BLANK    WL0018  1
     C                     MOVEL*BLANK    WL0019  1
     C                     MOVEL*BLANK    WL0020  1
     C                     Z-ADD*ZERO     WL0021  70
     C                     Z-ADD*ZERO     WL0022  70
     C                     MOVEL*BLANK    WL0023  1
     C                     MOVEL*BLANK    WL0024  1
     C                     MOVEL*BLANK    WL0025  1
     C                     MOVEL*BLANK    WL0026  1
     C                     MOVEL*BLANK    WL0027  1
     C                     MOVEL*BLANK    WL0028  6
      * Define local variables for subroutine SBRVGN.
     C                     MOVEL*BLANK    WL0029  3
     C                     MOVEL*BLANK    WL0030  2
     C                     MOVEL*BLANK    WL0031  1
     C                     MOVEL*BLANK    WL0032  1
     C                     MOVEL*BLANK    WL0033  1
     C                     Z-ADD*ZERO     WL0034  52
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0035  30
     C                     MOVEL*BLANK    WL0036  1
     C                     Z-ADD*ZERO     WL0037  70
     C                     Z-ADD*ZERO     WL0038  70
     C                     MOVEL*BLANK    WL0039  3
     C                     Z-ADD*ZERO     WL0040  92
     C                     Z-ADD*ZERO     WL0041  70
     C                     MOVEL*BLANK    WL0042  2
      * Define local variables for subroutine SECRRC.
     C                     Z-ADD*ZERO     WL0043  30
     C                     MOVEL*BLANK    WL0044  1
     C                     Z-ADD*ZERO     WL0045  70
     C                     Z-ADD*ZERO     WL0046  70
     C                     MOVEL*BLANK    WL0047  3
     C                     Z-ADD*ZERO     WL0048  70
     C                     Z-ADD*ZERO     WL0049  92
     C                     Z-ADD*ZERO     WL0050  70
     C                     Z-ADD*ZERO     WL0051  72
     C                     Z-ADD*ZERO     WL0052  92
     C                     Z-ADD*ZERO     WL0053  92
     C                     Z-ADD*ZERO     WL0054  70
     C                     Z-ADD*ZERO     WL0055  92
     C                     Z-ADD*ZERO     WL0056  70
     C                     Z-ADD*ZERO     WL0057  92
     C                     Z-ADD*ZERO     WL0058  70
     C                     Z-ADD*ZERO     WL0059  92
     C                     Z-ADD*ZERO     WL0060  70
     C                     Z-ADD*ZERO     WL0061  92
     C                     Z-ADD*ZERO     WL0062  70
     C                     Z-ADD*ZERO     WL0063  92
     C                     Z-ADD*ZERO     WL0064  70
     C                     Z-ADD*ZERO     WL0065  92
     C                     Z-ADD*ZERO     WL0066  70
     C                     Z-ADD*ZERO     WL0067  92
     C                     Z-ADD*ZERO     WL0068  70
     C                     Z-ADD*ZERO     WL0069  92
     C                     Z-ADD*ZERO     WL0070  70
     C                     Z-ADD*ZERO     WL0071 112
     C                     Z-ADD*ZERO     WL0072  70
     C                     Z-ADD*ZERO     WL0073 112
     C                     Z-ADD*ZERO     WL0074  70
     C                     Z-ADD*ZERO     WL0075 112
     C                     Z-ADD*ZERO     WL0076  70
     C                     Z-ADD*ZERO     WL0077 112
     C                     Z-ADD*ZERO     WL0078  70
     C                     Z-ADD*ZERO     WL0079 112
     C                     Z-ADD*ZERO     WL0080  70
     C                     Z-ADD*ZERO     WL0081 112
     C                     Z-ADD*ZERO     WL0082  70
     C                     MOVEL*BLANK    WL0083  3
     C                     MOVEL*BLANK    WL0084  2
     C                     MOVEL*BLANK    WL0085  1
     C                     MOVEL*BLANK    WL0086  1
     C                     MOVEL*BLANK    WL0087  1
     C                     MOVEL*BLANK    WL0088  1
     C                     MOVEL*BLANK    WL0089  1
     C                     MOVEL*BLANK    WL0090  1
     C                     MOVEL*BLANK    WL0091  1
     C                     MOVEL*BLANK    WL0092  1
     C                     MOVEL*BLANK    WL0093  2
     C                     MOVEL*BLANK    WL0094  3
     C                     Z-ADD*ZERO     WL0095  92
     C                     Z-ADD*ZERO     WL0096  70
     C                     Z-ADD*ZERO     WL0097  92
     C                     Z-ADD*ZERO     WL0098  70
     C                     Z-ADD*ZERO     WL0099  92
     C                     Z-ADD*ZERO     WL0100  70
     C                     Z-ADD*ZERO     WL0101  92
     C                     Z-ADD*ZERO     WL0102  70
     C                     Z-ADD*ZERO     WL0103  92
     C                     Z-ADD*ZERO     WL0104  70
     C                     Z-ADD*ZERO     WL0105  92
     C                     Z-ADD*ZERO     WL0106  70
     C                     Z-ADD*ZERO     WL0107  92
     C                     Z-ADD*ZERO     WL0108  70
     C                     Z-ADD*ZERO     WL0109  92
     C                     Z-ADD*ZERO     WL0110  70
     C                     Z-ADD*ZERO     WL0111  92
     C                     Z-ADD*ZERO     WL0112  70
     C                     MOVEL*BLANK    WL0113  6
     C                     Z-ADD*ZERO     WL0114  30
     C                     Z-ADD*ZERO     WL0115  30
     C                     Z-ADD*ZERO     WL0116  30
     C                     MOVEL*BLANK    WL0117  6
     C                     MOVEL*BLANK    WL0118  1
     C                     MOVEL*BLANK    WL0119  1
     C                     MOVEL*BLANK    WL0120  1
     C                     MOVEL*BLANK    WL0121  1
     C                     Z-ADD*ZERO     WL0122  60
     C                     MOVEL*BLANK    WL0123 10
     C                     MOVEL*BLANK    WL0124 10
     C                     Z-ADD*ZERO     WL0125  70
      * Define local variables for subroutine SGRVGN.
     C                     Z-ADD*ZERO     WL0126  30
     C                     Z-ADD*ZERO     WL0127  70
     C                     Z-ADD*ZERO     WL0128  52
     C                     Z-ADD*ZERO     WL0129  70
      * Define local variables for subroutine SICHRC.
     C                     Z-ADD*ZERO     WL0130  30
     C                     MOVEL*BLANK    WL0131  1
     C                     Z-ADD*ZERO     WL0132  70
     C                     Z-ADD*ZERO     WL0133  70
     C                     MOVEL*BLANK    WL0134  3
     C                     Z-ADD*ZERO     WL0135  92
     C                     Z-ADD*ZERO     WL0136  70
     C                     Z-ADD*ZERO     WL0137  70
     C                     Z-ADD*ZERO     WL0138 112
      * Define local variables for subroutine SORVGN.
     C                     Z-ADD*ZERO     WL0139  30
     C                     MOVEL*BLANK    WL0140  1
     C                     Z-ADD*ZERO     WL0141  70
     C                     Z-ADD*ZERO     WL0142  70
     C                     MOVEL*BLANK    WL0143  3
     C                     Z-ADD*ZERO     WL0144  92
     C                     Z-ADD*ZERO     WL0145  70
      * Define local variables for subroutine SURVGN.
     C                     Z-ADD*ZERO     WL0146  30
     C                     Z-ADD*ZERO     WL0147  40
     C                     Z-ADD*ZERO     WL0148  20
     C                     Z-ADD*ZERO     WL0149  70
     C                     Z-ADD*ZERO     WL0150  70
     C                     Z-ADD*ZERO     WL0151  70
     C                     Z-ADD*ZERO     WL0152  70
     C                     Z-ADD*ZERO     WL0153  70
     C                     Z-ADD*ZERO     WL0154  70
     C                     Z-ADD*ZERO     WL0155  70
     C                     MOVEL*BLANK    WL0156  1
      * Define local variables for subroutine TACRRC.
     C                     Z-ADD*ZERO     WL0157  70
     C                     Z-ADD*ZERO     WL0158  70
     C                     Z-ADD*ZERO     WL0159  61
     C                     Z-ADD*ZERO     WL0160  61
     C                     Z-ADD*ZERO     WL0161  61
     C                     Z-ADD*ZERO     WL0162  61
     C                     Z-ADD*ZERO     WL0163  61
     C                     MOVEL*BLANK    WL0164  1
      * Define local variables for subroutine TDRVGN.
     C                     Z-ADD*ZERO     WL0165  30
     C                     MOVEL*BLANK    WL0166  1
     C                     Z-ADD*ZERO     WL0167  70
     C                     Z-ADD*ZERO     WL0168  70
     C                     MOVEL*BLANK    WL0169  3
     C                     Z-ADD*ZERO     WL0170  70
      * Define local variables for subroutine TERVGN.
     C                     Z-ADD*ZERO     WL0171  30
     C                     Z-ADD*ZERO     WL0172  70
     C                     Z-ADD*ZERO     WL0173  50
     C                     Z-ADD*ZERO     WL0174  40
     C                     Z-ADD*ZERO     WL0175  20
     C                     Z-ADD*ZERO     WL0176  30
     C                     MOVEL*BLANK    WL0177  1
     C                     Z-ADD*ZERO     WL0178  20
      * Define local variables for subroutine TFRVGN.
     C                     Z-ADD*ZERO     WL0179  30
     C                     Z-ADD*ZERO     WL0180  70
     C                     Z-ADD*ZERO     WL0181  40
     C                     Z-ADD*ZERO     WL0182  20
     C                     MOVEL*BLANK    WL0183  1
     C                     Z-ADD*ZERO     WL0184  20
      * Define local variables for subroutine TGRVGN.
     C                     Z-ADD*ZERO     WL0185  30
     C                     Z-ADD*ZERO     WL0186  70
     C                     Z-ADD*ZERO     WL0187  30
     C                     Z-ADD*ZERO     WL0188  30
     C                     Z-ADD*ZERO     WL0189 112
      * Define local variables for subroutine THRVGN.
     C                     Z-ADD*ZERO     WL0190  70
     C                     Z-ADD*ZERO     WL0191  50
     C                     Z-ADD*ZERO     WL0192  70
     C                     Z-ADD*ZERO     WL0193 112
     C                     Z-ADD*ZERO     WL0194 112
     C                     Z-ADD*ZERO     WL0195 112
     C                     Z-ADD*ZERO     WL0196  70
     C                     MOVEL*BLANK    WL0197  1
     C                     Z-ADD*ZERO     WL0198  70
     C                     MOVEL*BLANK    WL0199  1
      * Define local variables for subroutine TICHRC.
     C                     Z-ADD*ZERO     WL0200  70
     C                     Z-ADD*ZERO     WL0201  61
     C                     Z-ADD*ZERO     WL0202  61
      * Define local variables for subroutine TJCHRC.
     C                     Z-ADD*ZERO     WL0203  70
     C                     Z-ADD*ZERO     WL0204  61
     C                     Z-ADD*ZERO     WL0205  61
     C                     Z-ADD*ZERO     WL0206  61
     C                     MOVEL*BLANK    WL0207  1
      * Define local variables for subroutine TKCHRC.
     C                     Z-ADD*ZERO     WL0208  70
     C                     Z-ADD*ZERO     WL0209  61
     C                     Z-ADD*ZERO     WL0210  61
     C                     MOVEL*BLANK    WL0211  1
      * Define local variables for subroutine TLRVGN.
     C                     Z-ADD*ZERO     WL0212  70
     C                     Z-ADD*ZERO     WL0213  70
      * Define local variables for subroutine TMRVGN.
     C                     Z-ADD*ZERO     WL0214  70
     C                     Z-ADD*ZERO     WL0215  50
     C                     Z-ADD*ZERO     WL0216  70
     C                     Z-ADD*ZERO     WL0217 112
     C                     Z-ADD*ZERO     WL0218 112
     C                     Z-ADD*ZERO     WL0219 112
     C                     Z-ADD*ZERO     WL0220  70
     C                     MOVEL*BLANK    WL0221  1
      * Define local variables for subroutine TNRVGN.
     C                     Z-ADD*ZERO     WL0222  70
     C                     Z-ADD*ZERO     WL0223 112
      * Define local variables for subroutine TSRVGN.
     C                     Z-ADD*ZERO     WL0224  30
     C                     Z-ADD*ZERO     WL0225  70
     C                     Z-ADD*ZERO     WL0226  30
     C                     Z-ADD*ZERO     WL0227  30
     C                     Z-ADD*ZERO     WL0228  70
     C                     Z-ADD*ZERO     WL0229  70
     C                     MOVEL*BLANK    WL0230  3
     C                     MOVEL*BLANK    WL0231  3
     C                     Z-ADD*ZERO     WL0232  70
     C                     Z-ADD*ZERO     WL0233  92
     C                     Z-ADD*ZERO     WL0234 112
     C                     MOVEL*BLANK    WL0235  2
      * Define local variables for subroutine TYRVGN.
     C                     Z-ADD*ZERO     WL0236  30
     C                     MOVEL*BLANK    WL0237  1
     C                     Z-ADD*ZERO     WL0238  70
     C                     Z-ADD*ZERO     WL0239  70
     C                     MOVEL*BLANK    WL0240  3
     C                     Z-ADD*ZERO     WL0241  70
     C                     Z-ADD*ZERO     WL0242 112
     C                     Z-ADD*ZERO     WL0243  70
     C                     Z-ADD*ZERO     WL0244  30
     C                     Z-ADD*ZERO     WL0245  30
     C                     Z-ADD*ZERO     WL0246  70
      * Define local variables for subroutine NARVGN.
     C                     Z-ADD*ZERO     WL0247  30
     C                     Z-ADD*ZERO     WL0248  70
      * Define local variables for subroutine NBRVGN.
     C                     Z-ADD*ZERO     WL0249  30
     C                     Z-ADD*ZERO     WL0250  70
     C                     Z-ADD*ZERO     WL0251  30
     C                     Z-ADD*ZERO     WL0252  30
     C                     Z-ADD*ZERO     WL0253  70
     C                     Z-ADD*ZERO     WL0254  30
     C                     Z-ADD*ZERO     WL0255  70
     C                     Z-ADD*ZERO     WL0256  70
      * Define local variables for subroutine NCRVGN.
     C                     Z-ADD*ZERO     WL0257  30
     C                     Z-ADD*ZERO     WL0258  70
     C                     Z-ADD*ZERO     WL0259  30
     C                     Z-ADD*ZERO     WL0260  30
     C                     Z-ADD*ZERO     WL0261  70
     C                     Z-ADD*ZERO     WL0262  30
      * Define local variables for subroutine NDRVGN.
     C                     Z-ADD*ZERO     WL0263  30
     C                     Z-ADD*ZERO     WL0264  70
     C                     Z-ADD*ZERO     WL0265  30
     C                     Z-ADD*ZERO     WL0266  30
     C                     Z-ADD*ZERO     WL0267  70
     C                     Z-ADD*ZERO     WL0268  30
     C                     Z-ADD*ZERO     WL0269  70
     C                     MOVEL*BLANK    WL0270  3
     C                     Z-ADD*ZERO     WL0271  70
     C                     Z-ADD*ZERO     WL0272  70
     C                     Z-ADD*ZERO     WL0273 112
     C                     Z-ADD*ZERO     WL0274 112
     C                     Z-ADD*ZERO     WL0275  50
     C                     Z-ADD*ZERO     WL0276  92
     C                     Z-ADD*ZERO     WL0277  70
     C                     Z-ADD*ZERO     WL0278  60
      * Define local work field Accounting Company
     C                     Z-ADD*ZERO     YL0001  30
      * Define local work field PS Avg Piece Wgt
     C                     Z-ADD*ZERO     YL0002  92
      * Define local work field PS Weight Prod Adj
     C                     Z-ADD*ZERO     YL0003  92
      * Define local work field PS Pieces Prod Adj
     C                     Z-ADD*ZERO     YL0004  70
      * Define local work field Base_Conv_Loss Item
     C                     MOVEL*BLANK    YL0005  2
      * Define local work field Component Item Code
     C                     Z-ADD*ZERO     YL0006  70
      * Define local work field Billing Activity Type
     C                     MOVEL*BLANK    YL0007  1
      * Define local work field Production Date
     C                     Z-ADD*ZERO     YL0008  70
      * Define local work field Order Scheduled Today USR
     C                     MOVEL*BLANK    YL0009  1
      * Define local work field Production Date
     C                     Z-ADD*ZERO     YL0010  70
      * Define local work field OD Added to Sched Today
     C                     MOVEL*BLANK    YL0011  1
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0012  30
      * Define local work field ODS Sequence Number
     C                     Z-ADD*ZERO     YL0013  30
      * Define local work field OD Weight Scheduled
     C                     Z-ADD*ZERO     YL0014 112
      * Define local work field OD Qty/Cnsmd Pieces Sched
     C                     Z-ADD*ZERO     YL0015 112
      *================================================================
     CSR         ZZEXIT    ENDSR
