// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKO5DFR
// ?Date: 14.08.2025 Time: 02:50:01
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//? 7/02/2021 JBB WHD80995 - Increase rollover values for BO#
//?                          Recompile only after changing the
//?                          RTVOBJ-Rtv Crt Next BOH      RT to
//?                          rollover when the BO# reaches 999999,
//?                          instead of 99999.
//?SLM 9/5/2017 allow STF OR ALL to see the source
//?Due to source types for STF. ALLOW user to see this information
//?RMC 05/26/04 Comment the COPY option
//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
ENDDO;

// PAR.Display Print Prompt  Usr = CND.Prompt is to be displayed
PAR.Display_Print_Prompt_Usr = 'Y';

//?                      length from 5 to 7.
//?USER: Initialize subfile control

// CTL.Head Total USR = CON.*ZERO
CTL.Head_Total_USR = *ZERO;

//?USER: Initialize subfile record from DBF record

//?Add source code to screen for new pricing information - STF
CASE;

// IF DB1.BOH MPR Purchase Type is *ALL values
IF DB1.BOH_MPR_Purchase_Type = '01'/'02'/'03'/'04'/'05'/'06'/'07'/'08'/'09'/'10'/'11';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv Prdcr Vend#,M3,MPRRT) TYPE(RTVOBJ) FILE(PKACREP)           AB1341003;
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(NLL.PD_VND_Address_Number);
PARAMETER(RCD.Source_Code_USR);
PARAMETER(NLL.M3_Supplier_ID);
PARAMETER(LCL.MPR_Purchase_Type_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 EXECUTE FUNCTION(Rtv Producer EXT2     RT) TYPE(RTVOBJ) FILE(PLB4REP)           AB1322079;
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(PAR.M3_Supplier_ID);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV MPR Prdcr Purch TpRT) TYPE(RTVOBJ) FILE(PKE3CPP)           AB1235599;
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(PAR.MPR_Purchase_Type_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 QUIT;

}


// RCD.BOH MPR Purchase Type = CVTVAR(LCL.MPR Purchase Type Code)
RCD.BOH_MPR_Purchase_Type = CVTVAR(LCL.MPR_Purchase_Type_Code);

ENDIF;

EXECUTE FUNCTION(Calc BO No of Head    RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1101147;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.Head_BO_USR);
{
 //?USER: Process Data record

 // PAR.Head BO USR = PAR.Head BO USR + DB1.BOL Pln Head Delv
 PAR.Head_BO_USR = PAR.Head_BO_USR + DB1.BOL_Pln_Head_Delv;

}


//?USER: Process subfile control (Pre-confirm)

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?CMD Key 06: Create Buy Order
CASE;

// IF CTL.*CMD key is Create
IF CTL.*CMD_key = '06';

EXECUTE FUNCTION(Rtv/Upd Next BO       RT) TYPE(RTVOBJ) FILE(PKAZREP)           AB1100930;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(WRK.BOH_Buy_Order_Number);
{
 //?USER: Initialize routine

 //?Modification history
 DO;

 //? 7/02/2021 JBB WHD80995 - Increase rollover from 99999 to 9999999
 ENDDO;

 //?USER: Process Data record

 // PAR.BOH Buy Order Number = DB1.Next Buy Order Number
 PAR.BOH_Buy_Order_Number = DB1.Next_Buy_Order_Number;

 CASE;

 // IF DB1.Next Buy Order Number is EQ 9999999
 IF DB1.Next_Buy_Order_Number = 9999999;

 EXECUTE FUNCTION(Chg Next BO           CH) TYPE(CHGOBJ) FILE(PKAZREP)           AB1100933;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(10000);
 PARAMETER(DB1.Last_Tattoo_Nbr);
 PARAMETER(DB1.Current_Production_Date);
 PARAMETER(DB1.Next_Production_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Next Buy Order Number = DB1.Next Buy Order Number + CON.1
 WRK.Next_Buy_Order_Number = DB1.Next_Buy_Order_Number + 1;

 EXECUTE FUNCTION(Chg Next BO           CH) TYPE(CHGOBJ) FILE(PKAZREP)           AB1100933;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(WRK.Next_Buy_Order_Number);
 PARAMETER(DB1.Last_Tattoo_Nbr);
 PARAMETER(DB1.Current_Production_Date);
 PARAMETER(DB1.Next_Production_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

}


// Call program Crt BOH/BOL           PV.
CALL PROGRAM(Crt BOH/BOL           PV) ('PKPWPVR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(WRK.BOH_Buy_Order_Number);
PARAMETER(CTL.BOH_Kill_Date);
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(CTL.CW_Year);
PARAMETER(CTL.CW_Week_Number);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?Option 2:  Edit Buy Order
CASE;

// IF RCD.*SFLSEL is *Revise
IF RCD.*SFLSEL = '2';

// Call program Edt Buy Order and Load ET.
CALL PROGRAM(Edt Buy Order and Load ET) ('PKAOETR');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.Head_BO_USR);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?Option 7:  Edit Comments
CASE;

// IF RCD.*SFLSEL is *Option 7 (Reusable)
IF RCD.*SFLSEL = '7';

// Call program Edt BO Comments       EF.
CALL PROGRAM(Edt BO Comments       EF) ('PKASEFR');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

ENDIF;

//?Option 4:  Delete Buy Order
CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4';

CASE;

// IF RCD.BOH Status is Locked
IF RCD.BOH_Status = 'L';

// Send error message - 'Delete is not allowed'
ERROR(PRK0282);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Return_code = *BLANK;

EXECUTE FUNCTION(Chk Buy Order Dtl     RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1130232;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(PGM.*Return_code);
{
 //?USER: Processing if Data record not found

 // PAR.*Return code = CND.*Normal
 PAR.*Return_code = *BLANK;

 //?USER: Process Data record

 // PAR.*Return code = CND.Record Found
 PAR.*Return_code = 999;

 QUIT;

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Defer_confirm = 'N';

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Delete is not allowed'
ERROR(PRK0282);
MSGPARM(RCD.*SFLSEL);

ENDIF;

ENDIF;

ENDIF;

//?Option 6:  Print Buy Order Information (I.S. Report Only)
CASE;

// IF RCD.*SFLSEL is *Print
IF RCD.*SFLSEL = '6';

//?Print Prompt
CASE;

// IF PAR.Display Print Prompt  Usr is Prompt is to be displayed
IF PAR.Display_Print_Prompt_Usr = 'Y';

// Call program Pmt Print Options Size XF.
CALL PROGRAM(Pmt Print Options Size XF) ('PDV8PVR');
PARAMETER('Buy Order - I.S Only');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER('N');
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Oms_Application_Code);
PARAMETER(2);

// PAR.Display Print Prompt  Usr = CND.Do not display prompt
PAR.Display_Print_Prompt_Usr = 'N';

ENDIF;

//?Submit Print
CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

//?Submit Print
// IF *OTHERWISE
IF *OTHERWISE;

// Execute command - 'Print Payment test info'
EXECUTE COMMAND(PRK0671);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);

ENDIF;

// RCD.*SFLSEL = CND.*Reset to blanks
RCD.*SFLSEL = *BLANK;

ENDIF;

//?Option 9:  Edit MPR Reporting
CASE;

// IF RCD.*SFLSEL is *Option 9 (Reusable)
IF RCD.*SFLSEL = '9';

// Call program Pmt Chg MPR Reporting PV.
CALL PROGRAM(Pmt Chg MPR Reporting PV) ('PLITPVR');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOH_Kill_Date);
PARAMETER(RCD.BOH_MPR_Reporting_Date);
PARAMETER(RCD.BOH_MPR_Reporting_Time);
PARAMETER(RCD.BOH_MPR_Purchase_Type);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Final processing (Pre-confirm)

// PAR.Display Print Prompt  Usr = CND.Prompt is to be displayed
PAR.Display_Print_Prompt_Usr = 'Y';

//?USER: Process subfile record (Post-confirm)

CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4';

EXECUTE FUNCTION(Dlt Buy Order Header  DL) TYPE(DLTOBJ) FILE(PKAWCPP)           AB1100516;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

