// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKAEEFR
// ?Date: 14.08.2025 Time: 02:48:42
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize subfile header

EXECUTE FUNCTION(Rtv Producer Name     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1101542;
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(WRK.PD_Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// *MO.VE             1183529*Bu = ilt. in functions
CTL.Producer_Name_17_USR = WRK.PD_Name;

EXECUTE FUNCTION(Rtv Pdctn Loc Name    RT) TYPE(RTVOBJ) FILE(PKAFREP)           AB1101543;
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PL_Location_Code);
PARAMETER(WRK.PL_Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// *MO.VE             1183529*Bu = ilt. in functions
CTL.PL_Name_Usr_17 = WRK.PL_Name;

//?USER: Initialize subfile record (new record)

// *MO.VE             1183529*Bu = ilt. in functions
WRK.Display_Field_Usr = *NO;

//?USER: Validate subfile record fields

//?Validate Effective Kill Date
CASE;

// IF RCD.PSDS Effective Kill Date LT JOB.*Job date
IF RCD.PSDS_Effective_Kill_Date < JOB.*Job_date;

// Send error message - 'Efctv kill date &1 must be later than today.'
ERROR(PRK0244);
MSGPARM(RCD.PSDS_Effective_Kill_Date);

ENDIF;

//?Validate Head
CASE;

// IF RCD.CP Period Code is Individual Days
IF RCD.CP_Period_Code = 'ID';

CASE;

// IF RCD.PSDS Head Est NE WRK.Zero USR
IF RCD.PSDS_Head_Est <> WRK.Zero_USR;

// Send error message - 'Head not valid with period &1. Use option 2.'
ERROR(PRK0249);
MSGPARM(RCD.CP_Period_Code);

QUIT;

ENDIF;

//?Validate Head
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF RCD.PSDS Head Est EQ WRK.Zero USR
IF RCD.PSDS_Head_Est = WRK.Zero_USR;

// Send error message - 'Head required for period &1'
ERROR(PRK0250);
MSGPARM(RCD.CP_Period_Code);

QUIT;

ENDIF;

ENDIF;

//?Validate Option 2=Edt Indv Days
CASE;

// IF RCD.*SFLSEL is *Revise request
IF RCD.*SFLSEL = '2'/'2';

CASE;

// IF RCD.CP Period Code is Individual Days
IF RCD.CP_Period_Code = 'ID';

// Call program Zzz Std Delv Days     EF.
CALL PROGRAM(Zzz Std Delv Days     EF) ('PKATEFR');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PSDS_Effective_Kill_Date);

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Defer_confirm = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Option 2 only valid for period ID.'
ERROR(PRK0246);

ENDIF;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(Crt Standard Delv     CR) TYPE(CRTOBJ) FILE(PKAMCPP)           AB1100379;
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PSDS_Effective_Kill_Date);
PARAMETER(RCD.PSDS_Head_Est);
PARAMETER(RCD.CP_Period_Code);
PARAMETER(RCD.RS_User_Changed);
PARAMETER(RCD.RS_Date_Changed);
PARAMETER(RCD.RS_Time_Changed);
PARAMETER(RCD.RS_Record_Status);
PARAMETER(RCD.RS_Job);
PARAMETER(RCD.RS_Program);
PARAMETER(RCD.RS_User_Added);
PARAMETER(RCD.RS_Date_Added);
PARAMETER(RCD.RS_Time_Added);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


//?USER: Delete DBF record

EXECUTE FUNCTION(Dlt Std Delv Sch/Days DL) TYPE(DLTOBJ) FILE(PKAMCPP)           AB1121838;
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PSDS_Effective_Kill_Date);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv/Dlt Std Dlv Days  RT) TYPE(RTVOBJ) FILE(PKANCPP)           AB1121770;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PL_Location_Code);
 PARAMETER(PAR.PSDS_Effective_Kill_Date);
 {
  //?USER: Processing if Data record not found

  // *MO.VE             1183529*Bu = ilt. in functions
  PGM.*Return_code = *BLANK;

  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Std Delv Days     DL) TYPE(DLTOBJ) FILE(PKANCPP)           AB1100763;
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.PSDS_Effective_Kill_Date);
  PARAMETER(DB1.PSDD_Delv_Day_Of_Week);
 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg Standard Delv     CH) TYPE(CHGOBJ) FILE(PKAMCPP)           AB1100380;
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PSDS_Effective_Kill_Date);
PARAMETER(RCD.PSDS_Head_Est);
PARAMETER(RCD.CP_Period_Code);
PARAMETER(RCD.RS_User_Changed);
PARAMETER(RCD.RS_Date_Changed);
PARAMETER(RCD.RS_Time_Changed);
PARAMETER(RCD.RS_Record_Status);
PARAMETER(RCD.RS_Job);
PARAMETER(RCD.RS_Program);
PARAMETER(RCD.RS_User_Added);
PARAMETER(RCD.RS_Date_Added);
PARAMETER(RCD.RS_Time_Added);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


//?USER: Extra processing after DBF update

//?Individual days processing
CASE;

// IF RCD.CP Period Code is Individual Days
IF RCD.CP_Period_Code = 'ID';

// AND PGM.*Program mode is *ADD
AND PGM.*Program_mode = 'ADD';

// Call program Zzz Std Delv Days     EF.
CALL PROGRAM(Zzz Std Delv Days     EF) ('PKATEFR');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PSDS_Effective_Kill_Date);

ENDIF;

