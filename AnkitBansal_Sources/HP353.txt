      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     Workfile: BGF-to-GF Transfers--Sow/Sire Summary
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     12/16/02
      *
      * FUNCTION:    This function builds the summarized sow/sire line records for each
      *              Grow Finish group that received pigs directly from a BGF farm...no
      *              nursery groups were involved!
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 01/27/05  LeAnne Fedor
      *           Recompile only. Two new fields (sire line company, prime line)
      *           added to Sire Line file.
      *
      * 06/28/05  LeAnne Fedor
      *           Rewrote. The input file is a new file (HSP3311) instead of the
      *           old file HSP351.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl3311a  if   e           k disk
      *  Workfile: BGF-to-GF Transfers--Sow/sire Detail
      *
      *
     Fhsp353    uf a e           k disk
      *  Workfile: BGF-to-GF Transfers--sow/sire summary
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svdnhgsn        s                   like(wgdnhgsn)
     D svdnhgcd        s                   like(wgdnhgcd)
     D svdnppcd        s                   like(wgdnppcd)
     D svdnfscd        s                   like(wgdnfscd)
     D svdncell        s                   like(wgdncell)
     D svorfscd        s                   like(wgorfscd)
     D svsicd          s                   like(wgsicd)
     D svgg0           s                   like(wggg0)
      *
      *
      * Workfields
      *
     D wkrchd          s                   like(wgrchd)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Process each record in the workfile BGF-to-GF Transfers: Sow/Sire Detail
      *
     C     *loval        setll     hsl3311a
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      hsl3311a                               90
     C                   if        *in90 = *off                                 If not EOF
      *
      * First time
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   exsr      $save
      *
      * Write a record for each destination group/origin farm/sire line
      *
     C                   when      wgdnhgsn <> svdnhgsn
     C                   exsr      $wrt353
      *
     C                   when      wgorfscd <> svorfscd or
     C                             wgsicd   <> svsicd
     C                   exsr      $wrt353
     C                   endsl
      *
      * Detail processing: Accumulate Received Head
      *
     C                   add       wgrchd        wkrchd
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      * Last record processing
      *
     C                   if        first = no
     C                   exsr      $wrt353
     C                   endif
      *
      * EOF Processing
      *
     C                   seton                                        lr
      /eject
      *----------------------------------------------------------------------------------
      * Update/write a record in the BGF-to-GF Transfers: Sow/Sire Summary
      *----------------------------------------------------------------------------------
      *
     C     $wrt353       begsr
      *
      *
     C     key01         chain     hsp353                             92
     C                   if        *in92 = *off                                 If exists
      * Update a record
     C                   add       wkrchd        wdrchd
     C                   update    wdrec
     C                   else
      *
      * Write a record
     C                   z-add     svdnhgsn      wdhgsn
     C                   move      svdnhgcd      wdhgcd
     C                   move      svdnppcd      wdppcd
     C                   z-add     svdnfscd      wdfscd
     C                   z-add     svdncell      wdcell
      *
     C                   z-add     svorfscd      wdorfscd
     C                   move      svsicd        wdsicd
     C                   move      svgg0         wdgg0
     C                   z-add     wkrchd        wdrchd
     C                   write     wdrec
     C                   clear                   wdrec
     C                   endif                                                  If exists
      *
      * Save fields
     C                   exsr      $save
      *
     C                   z-add     0             wkrchd
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Save control fields
      *----------------------------------------------------------------
      *
     C     $save         begsr
      *
     C                   z-add     wgdnhgsn      svdnhgsn
     C                   z-add     wgorfscd      svorfscd
     C                   move      wgsicd        svsicd
     C                   move      wgdnhgcd      svdnhgcd
     C                   move      wgdnppcd      svdnppcd
     C                   z-add     wgdnfscd      svdnfscd
     C                   z-add     wgdncell      svdncell
     C                   move      wggg0         svgg0
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    svdnhgsn
     C                   kfld                    svsicd
     C                   kfld                    svorfscd
      *
     C                   endsr
      /EJECT
