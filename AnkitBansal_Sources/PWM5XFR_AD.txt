// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWM5XFR
// ?Date: 14.08.2025 Time: 02:57:00
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Rtv Unpay Tattoos     RT) TYPE(RTVOBJ) FILE(PWAXCPP)           AB1366662;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.TRH_Repayment_ID);
PARAMETER(PAR.TRH_Payment_Date);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 //?If Tattoo Record in a status of Created, unpay the Tattoo
 CASE;

 // IF DB1.TRD Repayment Status is Created
 IF DB1.TRD_Repayment_Status = 'C';

 EXECUTE FUNCTION(Upd Tattoo for Repay  RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1366666;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.TRH_Repayment_ID);
 PARAMETER(LCL.TRD_Payment_Sts);
 PARAMETER(LCL.TRD_Process_Code);
 PARAMETER(LCL.TRD_Trucker_Payment_Sts);
 {
  //?USER: Process Data record

  //?Update Payment Status based on current Payment Status
  CASE;

  // IF DB1.TH Payment Sts is Paid Live
  IF DB1.TH_Payment_Sts = 'PL';

  // LCL.TH Payment Sts = CND.Select Live
  LCL.TH_Payment_Sts = 'SL';

  //?Update Payment Status based on current Payment Status
  // IF DB1.TH Payment Sts is PD Carcass Merit
  IF DB1.TH_Payment_Sts = 'PC';

  // LCL.TH Payment Sts = CND.Sl Carcass Merit
  LCL.TH_Payment_Sts = 'SC';

  //?Update Payment Status based on current Payment Status
  // IF DB1.TH Payment Sts is Post Int Carc
  IF DB1.TH_Payment_Sts = 'NC';

  // LCL.TH Payment Sts = CND.Sl Int Carc
  LCL.TH_Payment_Sts = 'IC';

  //?Update Payment Status based on current Payment Status
  // IF DB1.TH Payment Sts is Post Int Live
  IF DB1.TH_Payment_Sts = 'NL';

  // LCL.TH Payment Sts = CND.Sl Int Live
  LCL.TH_Payment_Sts = 'IL';

  //?Update Payment Status based on current Payment Status
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.TH Payment Sts = DB1.TH Payment Sts
  LCL.TH_Payment_Sts = DB1.TH_Payment_Sts;

  ENDIF;

  // PAR.TRD Payment Sts = LCL.TH Payment Sts
  PAR.TRD_Payment_Sts = LCL.TH_Payment_Sts;

  // LCL.THP Process Code = CND.Slaughter
  LCL.THP_Process_Code = 'SLG';

  // PAR.TRD Process Code = LCL.THP Process Code
  PAR.TRD_Process_Code = LCL.THP_Process_Code;

  EXECUTE FUNCTION(Rtv Buy Order Load    RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1192881;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(NLL.BOL_Kill_Date);
  PARAMETER(NLL.BOL_Pln_Delv_Start_Time);
  PARAMETER(NLL.BOL_Pln_Delv_End_Time);
  PARAMETER(NLL.BOL_Pln_Head_Delv);
  PARAMETER(NLL.BOL_Shipped_Wgt);
  PARAMETER(NLL.BOL_Pln_Delv_Date);
  PARAMETER(NLL.BOL_Freight_UOM);
  PARAMETER(NLL.BOL_Freight_Unit_Amt);
  PARAMETER(NLL.BOL_Freight_Amt);
  PARAMETER(NLL.BOL_Freight_Allocation);
  PARAMETER(NLL.BOL_Head_Received);
  PARAMETER(NLL.BOL_Live_Wgt_Received);
  PARAMETER(PAR.TRD_Trucker_Payment_Sts);
  PARAMETER(NLL.BOL_Trucker_Check_Number);
  PARAMETER(NLL.BOL_Trucker_Check_Date);
  PARAMETER(NLL.BOL_AP_Voucher);
  PARAMETER(NLL.BOL_Trailer);
  PARAMETER(NLL.BOL_Freight_Exp_Paid_By);
  PARAMETER(NLL.BOL_Scheduled_Kill_Shift);
  PARAMETER(NLL.BOL_Truck_Scale_Weigh_Sts);
  PARAMETER(NLL.Reported_to_USDA);
  PARAMETER(NLL.BOL_MPR_Prior_Day_Prch);
  PARAMETER(NLL.BOL_Violated_Auth_Tme_Sts);
  PARAMETER(NLL.TRK_Trucker_Code);
  PARAMETER(NLL.PD_Producer_Code);
  PARAMETER(NLL.PL_Location_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  EXECUTE FUNCTION(Chg Pymt Sts/Process  CH) TYPE(CHGOBJ) FILE(PWAXCPP)           AB1367631;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.TRH_Repayment_ID);
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(LCL.TH_Payment_Sts);
  PARAMETER(LCL.THP_Process_Code);
  PARAMETER(LCL.BOL_Trucker_Payment_Sts);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  //?If Process Code is PAYMNT, Unpay the Tattoo
  CASE;

  // IF DB1.THP Process Code is Payment
  IF DB1.THP_Process_Code = 'PAYMNT';

  EXECUTE FUNCTION(Chg Paid Info 4 Repay RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1369566;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(LCL.TH_Payment_Sts);
  PARAMETER(LCL.THP_Process_Code);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Chg Paid Info 4 Repay CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1369567;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.TH_AP_Voucher_Document#);
   PARAMETER(PAR.TH_Payment_Sts);
   PARAMETER(DB1.TH_Voucher_Payment_Date);
   PARAMETER(*ZERO);
   PARAMETER(PAR.THP_Process_Code);
   PARAMETER(JOB.*USER);
   PARAMETER(JOB.*Job_date);
   PARAMETER(JOB.*Job_time);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?USER: Processing before Data read

    EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
    {
     //?Execute internal function

     //?1/10/96  HPE056   Allow payment type to be update based on
     //?                  what the payment status is at the time this
     //?                  tattoo is being updated
    }

    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    {
     //?Execute internal function

     // PAR.RS User Changed = JOB.*USER
     PAR.RS_User_Changed = JOB.*USER;

     // PAR.RS Date Changed = JOB.*Job date
     PAR.RS_Date_Changed = JOB.*Job_date;

     // PAR.RS Time Changed = JOB.*Job time
     PAR.RS_Time_Changed = JOB.*Job_time;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

    }

    EXECUTE FUNCTION(Chg/Crt Tatto/Spc Flds IF) TYPE(EXCINTFUN)                     AB1189848;
    PARAMETER(DB1.TH_Payment_Sts);
    PARAMETER(DB1.TH_Payment_Type);
    {
     //?Execute internal function

     EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
     {
      //?Execute internal function

      //?1/10/96  HPE056   Allow payment type to be update based on
      //?                  what the payment status is at the time this
      //?                  tattoo is being updated
     }

     //?Function Description:  If there are any fields that need to be
     //?Changed/Created during the Change functions or Create function
     //?Presently: Payment Type
     //?Add this routine to all of the change objects and create object
     //?that update the Payment Type
     CASE;

     // IF PAR.TH Payment Sts is Live anything
     IF PAR.TH_Payment_Sts = 'ML'/'PL'/'NL'/'SL'/'IL';

     // PAR.TH Payment Type = CND.Live
     PAR.TH_Payment_Type = 'L';

     // IF *OTHERWISE
     IF *OTHERWISE;

     // PAR.TH Payment Type = CND.Carcass Merit
     PAR.TH_Payment_Type = 'C';

     ENDIF;

    }

   }

  }

  EXECUTE FUNCTION(Chg BOH Status-Repay  CH) TYPE(CHGOBJ) FILE(PKAWCPP)           AB1347375;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER('O');
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  //?Add Tattoo Repayment Comment specifying BOH Status is Open
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Buy Order Number Alpha = CVTVAR(DB1.BOH Buy Order Number)
  LCL.Buy_Order_Number_Alpha = CVTVAR(DB1.BOH_Buy_Order_Number);

  // LCL.TRC Comment = CONCAT(CON.Buy Order Status changed,CON.to Open for BO#,CND.*One)
  LCL.TRC_Comment = 'Buy Order Status changed' + 'to Open for BO#' (1);

  // LCL.TRC Comment = CONCAT(LCL.TRC Comment,LCL.Buy Order Number Alpha,CND.*One)
  LCL.TRC_Comment = LCL.TRC_Comment + LCL.Buy_Order_Number_Alpha (1);

  ENDIF;

  EXECUTE FUNCTION(Dlt Ttt D/A excpt FRT RT) TYPE(RTVOBJ) FILE(PKCDCPP)           AB1346412;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  {
   //?USER: Process Data record

   //?If D/A Code <> FRT, delete the record
   CASE;

   // IF NOT DB1.DED D/A Code is Freight
   IF ! DB1.DED_D_A_Code = 'FRT';

   EXECUTE FUNCTION(Delete Tattoo Deduction) TYPE(DLTOBJ) FILE(PKCDCPP)            AB1107819;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.DED_D_A_Code);
   ENDIF;

  }

  EXECUTE FUNCTION(Dlt CrcsDtl By BoLdTatto) TYPE(RTVOBJ) FILE(PKB1CPP)           AB1323942;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Dlt Carcass Detail    DL) TYPE(DLTOBJ) FILE(PKB1CPP)           AB1104739;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.CD_Scale_Sequence_Number);
   PARAMETER(DB1.CD_Carcass_Number);
   PARAMETER(DB1.CD_Carcass_Number_Insert);
  }

  ENDIF;

 }

 EXECUTE FUNCTION(Chg Tattoo Repay Dtl  CH) TYPE(CHGOBJ) FILE(PWAXCPP)           AB1364796;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.TRH_Repayment_ID);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.Transfer_Buy_Order_Number);
 PARAMETER(DB1.Transfer_Buy_Order_Load);
 PARAMETER(DB1.Transfer_Tattoo_Number);
 PARAMETER(DB1.Transfer_Kill_Date);
 PARAMETER(DB1.Transfer_Site_ID);
 PARAMETER(DB1.Transfer_Subsidiary_Code);
 PARAMETER(DB1.Transfer_State_Code);
 PARAMETER('U');
 PARAMETER(DB1.TRD_Pen_Head);
 PARAMETER(DB1.TRD_Payment_Sts);
 PARAMETER(DB1.TRD_Process_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PS_Site_ID);
 PARAMETER(DB1.TRD_Trucker_Payment_Sts);
 PARAMETER(DB1.SR_Source_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(DB1.PC_Contract_Code);
 PARAMETER(DB1.PSC_Sub_Contract_Code);
 PARAMETER(DB1.RS_Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 // LCL.Tattoo Number Alpha = CVTVAR(DB1.TH Tattoo Number)
 LCL.Tattoo_Number_Alpha = CVTVAR(DB1.TH_Tattoo_Number);

 // LCL.TRC Comment = CONCAT(CON.Tattoo,LCL.Tattoo Number Alpha,CND.*One)
 LCL.TRC_Comment = 'Tattoo' + LCL.Tattoo_Number_Alpha (1);

 // LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON.unpaid.,CND.*One)
 LCL.TRC_Comment = LCL.TRC_Comment + 'unpaid.' (1);

 EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.TRH_Repayment_ID);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(LCL.TRC_Comment);
 PARAMETER('S');
 {
  //?USER: Processing before Data update

  //?Make sure BOH Company Number is populated
  CASE;

  // IF PAR.BOH Company Number is *ZERO
  IF PAR.BOH_Company_Number = *ZERO;

  // DB1.BOH Company Number = PAR.CC Company Number
  DB1.BOH_Company_Number = PAR.CC_Company_Number;

  ENDIF;

  EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.TRH_Repayment_ID);
  PARAMETER(DB1.TRC_Sequence);
  {
   //?USER: Processing if Data record not found

   // PAR.TRC Sequence = CON.1
   PAR.TRC_Sequence = 1;

   //?USER: Process Data record

   // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
   PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

}


EXECUTE FUNCTION(Chg PPP for Repay     CH) TYPE(CHGOBJ) FILE(PKC4REP)           AB1367554;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.TRH_Payment_Date);
PARAMETER(1);
PARAMETER('N');
PARAMETER('Y');
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


