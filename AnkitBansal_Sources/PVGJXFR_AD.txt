// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PVGJXFR
// ?Date: 14.08.2025 Time: 03:52:10
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Rtv All details        RT) TYPE(RTVOBJ) FILE(PVCFCPP)          AC2229472;
PARAMETER(PAR.SPA_Authorization_Process);
PARAMETER(PAR.SPA_Process_Environment);
PARAMETER(PAR.SPA_Authorization_Command);
PARAMETER(NLL.SPA_Command_Type);
PARAMETER(PAR.SPA_User_ID);
PARAMETER(LCL.SPA_Password);
PARAMETER(PAR.SPA_IP_Address);
PARAMETER(NLL.Record_Status);
PARAMETER(NLL.Create_Date_Timestamp);
PARAMETER(NLL.Create_User_ID);
PARAMETER(NLL.Create_Program_Name);
PARAMETER(NLL.Update_Date_Timestamp);
PARAMETER(NLL.Update_User_Id);
PARAMETER(NLL.Update_Program_Name);
PARAMETER(LCL.SPA_Encr_Decr_key);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 // PAR.SPA Encr/Decr key = CND.Not Entered
 PAR.SPA_Encr_Decr_key = *BLANK;

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 MOVE *ALL (To: PAR From: DB1);

 EXECUTE FUNCTION(RTV All Secu Encr/Decr RT) TYPE(RTVOBJ) FILE(PVCGREP)          AC2229132;
 PARAMETER(DB1.SPA_Authorization_Process);
 PARAMETER(DB1.SPA_Process_Environment);
 PARAMETER(LCL.SPA_Encr_Decr_key);
 PARAMETER(LCL.Record_Status);
 PARAMETER(NLL.Create_Date_Timestamp);
 PARAMETER(NLL.Create_User_ID);
 PARAMETER(NLL.Create_Program_Name);
 PARAMETER(NLL.Update_Date_Timestamp);
 PARAMETER(NLL.Update_User_Id);
 PARAMETER(NLL.Update_Program_Name);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Record Status is Active
 IF LCL.Record_Status = 'A';

 // PAR.SPA Encr/Decr key = LCL.SPA Encr/Decr key
 PAR.SPA_Encr_Decr_key = LCL.SPA_Encr_Decr_key;

 ENDIF;

 ENDIF;

}


CASE;

// IF LCL.SPA Password is Entered
IF LCL.SPA_Password <> *BLANK;

// Call program Paswrd Encrypt/Decrypt UP.
CALL PROGRAM(Paswrd Encrypt/Decrypt UP) ('PVGIUPR');
PARAMETER('D');
PARAMETER(LCL.SPA_Password);
PARAMETER(LCL.SPA_Encr_Decr_key);
PARAMETER(PAR.SPA_Password);

ENDIF;

