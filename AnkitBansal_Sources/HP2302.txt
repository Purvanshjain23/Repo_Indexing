      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HPS Data Mart
      * PROGRAM:     HP2302 - Roll-up Workfile Records
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     08/16/04
      *
      * Function:    For Datamart, we need 1 record for each:
      *                      farm/budget item/week/creation schedule
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
      *
     Fhsl8302a  if   e           k disk
      *  DataMart BUD: Workfile Quantities
      *
      *
     Fhsp8193   o    e           k disk
      *  DataMart BUD: Weekly Orders
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * CONSTANTS
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *---------------------------------------------------------------
      * STANDALONE FIELDS
      *---------------------------------------------------------------
      *
      * Control fields
      *
     D first           s              1    inz('Y')
      *
     D svfscd          s                   like(w3fscd)
     D svbgit          s                   like(w3bgit)
     D svcscd          s                   like(w3cscd)
     D svwedt          s                   like(w3wedt)
      *
      *
      * Workfields
      *
     D wkbgqt          s                   like(w3bgqt)
     D wkrqqt          s                   like(w3rqqt)
     D wkapqt          s                   like(w3apqt)
     D wkusqt          s                   like(w3usqt)
      *
     D wkbgam          s                   like(d1bgam)
     D wkusam          s                   like(w3usam)
      *
     D wkover          s                   like(w3over)
      *
      *
      * Parms
      *
     D xxccyymmdd      s                   like(d180wedt)
     D xxacyr          s                   like(d1acyr)
     D xxacpe          s                   like(d1acpe)
     D xxacqr          s                   like(d1acqr)
     D xxacwk          s                   like(d1acwk)
     D xxpicdt         s                   like(d1picdt)
     D xxcdyr          s                   like(d1cdyr)
     D xxcdwk          s                   like(d1cdwk)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Roll-up workfile records
      *
     C     *loval        setll     hsl8302a
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsl8302a                               90
     C                   if        *in90 = *off                                 If not EOF
      * Control break
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   exsr      $date
     C                   exsr      $save
      *
     C                   when      w3fscd <> svfscd or
     C                             w3cscd <> svcscd or
     C                             w3bgit <> svbgit or
     C                             w3wedt <> svwedt
     C                   exsr      $wrt193
      *
     C                   if        w3wedt <> svwedt
     C                   exsr      $date
     C                   endif
      *
     C                   exsr      $save
     C                   endsl
      *
      * Accumulate quantities for the roll-up
      *
     C                   add       w3bgqt        wkbgqt
     C                   add       w3rqqt        wkrqqt
     C                   add       w3apqt        wkapqt
     C                   add       w3usqt        wkusqt
      *
     C                   add       w3fbam        wkbgam
     C                   add       w3usam        wkusam
     C                   add       w3over        wkover
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      * Last-record processing
     C                   if        first = no
     C                   exsr      $wrt193
     C                   endif
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Save control fields
      *---------------------------------------------------------------
      *
     C     $save         begsr
      *
     C                   z-add     w3fscd        svfscd
     C                   move      w3bgit        svbgit
     C                   move      w3cscd        svcscd
     C                   z-add     w3wedt        svwedt
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Get all the Calendar stuff associated with the Week-ending date
      *----------------------------------------------------------------
      *
     C     $date         begsr
      *
     C                   call      'HP8017'
     C                   parm      w3wedt        xxccyymmdd
     C                   parm      0             xxacyr
     C                   parm      0             xxacpe
     C                   parm      0             xxacqr
     C                   parm      0             xxacwk
     C                   parm      0             xxpicdt
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Write a Datamart record
      *----------------------------------------------------------------
      *
     C     $wrt193       begsr
      *
      * Data from the control break fields
      *
     C                   z-add     svfscd        d1fscd
     C                   z-add     svwedt        d180wedt
     C                   movel     svwedt        d1wedt
     C                   movel     svcscd        d1cscd
     C                   movel     svbgit        d1bgit
      *
      * Date stuff associated with the week-ending date
      *
     C                   z-add     xxcdyr        d1cdyr
     C                   z-add     xxcdwk        d1cdwk
     C                   z-add     xxpicdt       d1picdt
     C                   z-add     xxacyr        d1acyr
     C                   z-add     xxacpe        d1acpe
     C                   z-add     xxacqr        d1acqr
     C                   z-add     xxacwk        d1acwk
      *
      * Accumulated data
     C                   z-add     wkbgqt        d1bgqt
     C                   z-add     wkrqqt        d1rqqt
     C                   z-add     wkapqt        d1apqt
     C                   z-add     wkusqt        d1usqt
      *
     C                   z-add     wkbgam        d1bgam
     C                   z-add     wkusam        d1usam
     C                   z-add     wkover        d1over
      *
     C                   write     d1rec
     C                   clear                   d1rec
      *
      * Clear accumulators
      *
     C                   exsr      $clear
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Clear accumulators
      *---------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   z-add     0             wkbgqt
     C                   z-add     0             wkrqqt
     C                   z-add     0             wkapqt
     C                   z-add     0             wkusqt
      *
     C                   z-add     0             wkbgam
     C                   z-add     0             wkusam
     C                   z-add     0             wkover
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C                   endsr
      /eject
