      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP1083
      * TITLE:       Revise Quarterly Prediction Values
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     01/30/02
      *
      *
      * FUNCTION: Uses an edit record format to add/change/delete records.
      *
      *           This program is called from HP4083 - Work with Quarterly Prediction Values.
      *
      *           The field 'mode' contains the value passed into
      *           this program from the calling program.  The field
      *           'd1mode' is the screen field that displays the
      *           value of 'mode'.  Mode will be CREATE, REVISE or
      *           DELETE.           Once in the program, mode and
      *           d1mode will never change.  However, the action
      *           being performed can change depending on the function
      *           keys the user takes.
      *
      *           The user may delete an existing record by taking
      *           F11=DELETE from this program or option 4=DELETE
      *           from the WORK WITH. If the user is deleting with
      *           4=DELETE, no panel will be displayed from this program
      *           unless there is an error on the attempted deletion.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 06/11/02  LeAnne Fedor
      *           Added a new output only column showing Actual Quarterly Averages
      *           for the 'most recent' quarter----for comparison purposes.
      *           Also added a function key to take you to a new view function to see
      *           Quarterly Averages data per farm in the selected year/quarter/cell/group type.
      *
      * 10/09/07  LeAnne Ramsey
      *           Recompiled only. File HSJ100B had no object in Production--
      *           only in Test. So, we recompiled the file. As far as we can
      *           tell, this function has not been used since 2005.
      *
      * 11/10/10  LeAnne Ramsey (E1151)
      *           Recompile only. Increased 'total born alive' in HSP100 to 6,0.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd1083   cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhsl018j   if   e           k disk
      *    Farm site
      *
      *
     Fhsp025    if   e           k disk
      *    Group type
      *
      *
     Fhsp083    uf a e           k disk
      *    Quarterly prediction values
      *
      *
     Fhsj100b   if   e           k disk
      *    Quarterly averages + farm site
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D view            c                   'VIEW  '
     D select          c                   'SELECT'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D action          s                   like(mode)
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Control fields
      *
     D svcdyr          s                   like(d1cdyr)
     D svcdqr          s                   like(d1cdqr)
     D svcell          s                   like(d1cell)
     D svgtcd          s                   like(d1gtcd)
      *
      *
      * Parm fields
      *
     D xxalphcell      s              2
     D xxgtcd          s                   like(gtgtcd)
     D xxgtds          s                   like(gtgtds)
      *
      *
     D xxrsgrsv        s              9  0
     D xxrpgrhd        s              9  0
     D xxfsgrhd        s              9  0
     D xxfpgrhd        s              9  0
     D xxrfgrhd        s              9  0
     D xxtolt          s              9  0
     D xxbahd          s              9  0
     D xxpmhd          s              9  0
     D xxnrmhd         s              9  0
     D xxnajtihd       s              9  0
     D xxfrmhd         s              9  0
     D xxfajtihd       s              9  0
      *
     D xxltbahd        s              5  2
     D xxcrpr          s              5  2
     D xxfrpr          s              5  2
     D xxfopr          s              5  2
     D xxpmpr          s              5  2
     D xxnrmpr         s              5  2
     D xxfrmpr         s              5  2
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     update        $upd1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Clear some fields on display panel if creating
      *
     C                   select
     C                   when      mode = create                                WH create
     C                   z-add     0             d1cell
     C                   move      *blank        d1gtcd
     C                   move      *blank        d1gtds
      *
      * If incoming mode is REVISE or DELETE, then retrieve the database
      * record.  Do not lock the record.  Typically, in DELETE mode, these
      * values will not be displayed. However, if there is an error on the
      * delete action, the panel will be displayed with messages.
      *
     C                   when      mode = revise or mode = delete               WH revise/delete
     C     key01         chain(n)  hsp083                             92
     C                   if        *in92 = *off                                 If found
     C                   exsr      $fill1
     C                   else
      *
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
      *
     C                   endif                                                  If found
     C                   endsl
      *
      * If the user is deleting and there were no errors when retrieving the
      * record, go on to the update routine without displaying the screen.
      * Otherwise, display the screen.
      *
     C                   if        error = 0 and action = delete                If no error
     C                   eval      routne = update
     C                   else
     C                   eval      routne = scrn1
     C                   endif                                                  If no error
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Fill the fields on screen 1
      *----------------------------------------------------------------
      *
     C     $fill1        begsr
      *
     C                   z-add     qpltosv       d1ltosv
     C                   z-add     qphtosv       d1htosv
     C                   z-add     qpotosv       d1otosv
      *
     C                   z-add     qplcrpr       d1lcrpr
     C                   z-add     qphcrpr       d1hcrpr
     C                   z-add     qpocrpr       d1ocrpr
      *
     C                   z-add     qplfrpr       d1lfrpr
     C                   z-add     qphfrpr       d1hfrpr
     C                   z-add     qpofrpr       d1ofrpr
      *
     C                   z-add     qplfopr       d1lfopr
     C                   z-add     qphfopr       d1hfopr
     C                   z-add     qpofopr       d1ofopr
      *
     C                   z-add     qplltbahd     d1lltbahd
     C                   z-add     qphltbahd     d1hltbahd
     C                   z-add     qpoltbahd     d1oltbahd
      *
     C                   z-add     qplpmpr       d1lpmpr
     C                   z-add     qphpmpr       d1hpmpr
     C                   z-add     qpopmpr       d1opmpr
      *
     C                   z-add     qplnrmpr      d1lnrmpr
     C                   z-add     qphnrmpr      d1hnrmpr
     C                   z-add     qponrmpr      d1onrmpr
      *
     C                   z-add     qplfrmpr      d1lfrmpr
     C                   z-add     qphfrmpr      d1hfrmpr
     C                   z-add     qpofrmpr      d1ofrmpr
      *
     C                   z-add     qplgspr       d1lgspr
     C                   z-add     qphgspr       d1hgspr
     C                   z-add     qpogspr       d1ogspr
      *
     C                   z-add     qplsopr       d1lsopr
     C                   z-add     qphsopr       d1hsopr
     C                   z-add     qposopr       d1osopr
      *
      * Retrieve the Group Type Description
      *
     C     d1gtcd        chain     hsp025                             92
     C                   if        *in92 = *off                                 If found
     C                   move      gtgtds        d1gtds
     C                   else
     C                   move      *blank        d1gtds
     C                   endif                                                  If found
      *
      * Find the 'most recent' actual Quarterly Averages to display for
      * comparison purposes.
      *
     C                   exsr      $recent
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Set indicators to control input/output fields and available
      * function keys.
      *
     c                   select
     C                   when      mode = revise
     C                   seton                                        60
      *
     C                   when      mode = create
     C                   seton                                        61
      *
     C                   when      mode = delete
     C                   seton                                        62
     c                   endsl
      *
      * Write screen 1 to CRT
      *
     C                   write     hp1083k1
     C                   write     hp1083ec
     C                   exfmt     hp1083r1
      *
      * Clear messages
      *
     C                   exsr      $clmsg
      *
      * Reset action to be equal to the incoming mode.  This is required
      * in case the user took F11-Delete and got an error on the
      * deletion and now needs to be able to change the record and take
      * an action other than delete
      *
     C                   eval      action = mode
      *
      * Get user's input and set routine
      *
     C                   select
      *
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4=prompt
     C                   exsr      $f4s1
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      routne = set1
      *
     C                   when      *in09 = *on                                  F9=accept
     C                   exsr      $edit1
     C                   if        error = 0
     C                   exsr      $upd1
     C                   endif
      *
     C                   when      *in11 = *on or mode = delete                 F11-delete
     C                   eval      action = delete
     C                   eval      routne = update
      *
     C                   when      *in13 = *on                                  F13-View Farm
     C                   call      'HP7083'
     C                   parm                    d1qacyr
     C                   parm                    d1cdqr
     C                   parm                    d1cell
     C                   parm                    d1gtcd
     C                   parm                    d1qtosv
     C                   parm                    d1qcrpr
     C                   parm                    d1qfrpr
     C                   parm                    d1qfopr
     C                   parm                    d1qltbahd
     C                   parm                    d1qpmpr
     C                   parm                    d1qnrmpr
     C                   parm                    d1qfrmpr
      *
     C                   eval      routne = scrn1
     C                   other
      *
      * User has pressed enter
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit input fields for screen 1
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * *IN62 will be on if the record the user is trying to access has
      * been deleted by another user.  So, only perform the edits for the
      * fields on the screen if the indicator is off
      *
     C                   if        *in62 = *off                                 If here
      *
      * If creating a new record, validate:
      *   1) calendar year
      *   2) calendar quarter
      *   3) cell
      *   4) group type
      *   5) that no record already exists for the key fields
      *
     C                   if        action = create                              If create
     C                   exsr      $cdyr
     C                   exsr      $cdqr
     C                   exsr      $cell
     C                   exsr      $gtcd
      *
     C                   if        error = 0
     C                   exsr      $exist
     C                   endif
      *
      * If error is zero and any of the four pieces of info have changed, then
      * you have to retrieve/repopulate the actual 'quarterly averages' output fields
      * with the 'MOST RECENT' data.
      *
     C                   if        error = 0 and
     C                             (svcdyr <> d1cdyr or
     C                              svcdqr <> d1cdqr or
     C                              svcell <> d1cell or
     C                              svgtcd <> d1gtcd)
     C                   exsr      $recent
     C                   z-add     d1cdyr        svcdyr
     C                   z-add     d1cdqr        svcdqr
     C                   z-add     d1cell        svcell
     C                   move      d1gtcd        svgtcd
     C                   endif
     C                   endif                                                  If create
      *
      * Always validate all the other fields on the screen
      * 1)  total services
      * 2)  conception rate
      * 3)  fall-out rate
      * 4)  born alive per litter
      * 5)  piglet mortality percent
      * 6)  nursery removal rate
      * 7)  finisher removal rate
      * 8)  genetic selection rate
      * 9)  sort-off rate
      *
     C                   exsr      $tosv
     C                   exsr      $crpr
     C                   exsr      $frpr
     C                   exsr      $fopr
     C                   exsr      $bahd
     C                   exsr      $pmpr
     C                   exsr      $nrmpr
     C                   exsr      $frmpr
     C                   exsr      $gspr
     C                   exsr      $sopr
     C                   endif                                                  If here
      *
      * Always redisplay screen so user can Accept
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate year (only in create mode)
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) cannot be negative
      *
      *
     C     $cdyr         begsr
      *
     C                   select
     C                   when      d1cdyr = 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1cdyr < 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
      *
     C                   when      d1cdyr < 1998
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09028'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate quarter (only in create mode)
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) must be 1 thur 4
      *
      *
     C     $cdqr         begsr
      *
     C                   select
     C                   when      d1cdqr >= 1 and d1cdqr <= 4
      *
     C                   when      d1cdqr = 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1cdqr < 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09172'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate cell (in create mode only)
      *---------------------------------------------------------------
      *
     C     $cell         begsr
      *
     C                   select
     C                   when      d1cell = 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
      *
     C                   when      d1cell < 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1cell        chain     hsl018j                            92
     C                   if        *in92 = *on                                  If not assigned
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01163'     mgid(e)
     C                   clear                   mgw
     C                   move      d1cell        xxalphcell
     C                   movea     xxalphcell    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If bad farm
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Group Type (in Create mode only)
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) must be valid in Group Type Master
      *
     C     $gtcd         begsr
      *
     C                   eval      d1gtds = *blank
      *
     C                   select
     C                   when      d1gtcd = *blank
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     MGID(E)
     C                   endif
     C                   other
      *
     C     d1gtcd        chain     hsp025                             92
     C                   if        *in92 = *off                                 If valid type
     C                   move      gtgtds        d1gtds
     C                   else
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00137'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1gtcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If valid type
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------
      * Validate that no record  already exists for key fields (create mode only)
      *----------------------------------------------------------------------------
      *
     C     $exist        begsr
      *
     C     key01         chain(n)  hsp083                             92
     C                   if        *in92 = *off                                 If found
     C                   seton                                        313233
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01164'     mgid(e)
     C                   endif
     C                   endif                                                  If found
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Total Services
      *---------------------------------------------------------------
      *
     C     $tosv         begsr
      *
      * Low
     C                   if        d1ltosv < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * High
     C                   if        d1htosv < 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * Override
     C                   if        d1otosv < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Conception Rate
      *---------------------------------------------------------------
      *
     C     $crpr         begsr
      *
      * Low
     C                   if        d1lcrpr < 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * High
     C                   if        d1hcrpr < 0
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * Override
     C                   if        d1ocrpr < 0
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Farrowing Rate
      *---------------------------------------------------------------
      *
     C     $frpr         begsr
      *
      * Low
     C                   if        d1lfrpr < 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * High
     C                   if        d1hfrpr < 0
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * Override
     C                   if        d1ofrpr < 0
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Fall-out Rate
      *---------------------------------------------------------------
      *
     C     $fopr         begsr
      *
      * Low
     C                   if        d1lfopr < 0
     C                   seton                                        73
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * High
     C                   if        d1hfopr < 0
     C                   seton                                        74
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * Override
     C                   if        d1ofopr < 0
     C                   seton                                        75
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Born Alive Per Litter
      *---------------------------------------------------------------
      *
     C     $bahd         begsr
      *
      * Low
     C                   if        d1lltbahd < 0
     C                   seton                                        76
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * High
     C                   if        d1hltbahd < 0
     C                   seton                                        77
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * Override
     C                   if        d1oltbahd < 0
     C                   seton                                        78
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Piglet Mortality Rate
      *---------------------------------------------------------------
      *
     C     $pmpr         begsr
      *
      * Low
     C                   if        d1lpmpr < 0
     C                   seton                                        79
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * High
     C                   if        d1hpmpr < 0
     C                   seton                                        80
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * Override
     C                   if        d1opmpr < 0
     C                   seton                                        81
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Nursery Removal Rate
      *---------------------------------------------------------------
      *
     C     $nrmpr        begsr
      *
      * Low
     C                   if        d1lnrmpr < 0
     C                   seton                                        82
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * High
     C                   if        d1hnrmpr < 0
     C                   seton                                        83
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * Override
     C                   if        d1onrmpr < 0
     C                   seton                                        84
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Finisher Removal Rate
      *---------------------------------------------------------------
      *
     C     $frmpr        begsr
      *
      * Low
     C                   if        d1lfrmpr < 0
     C                   seton                                        85
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * High
     C                   if        d1hfrmpr < 0
     C                   seton                                        86
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * Override
     C                   if        d1ofrmpr < 0
     C                   seton                                        87
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Genetic Selection Rate
      *---------------------------------------------------------------
      *
     C     $gspr         begsr
      *
      * Low
     C                   if        d1lgspr < 0
     C                   seton                                        88
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * High
     C                   if        d1hgspr < 0
     C                   seton                                        89
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * Override
     C                   if        d1ogspr < 0
     C                   seton                                        90
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Sort-Off Rate
      *---------------------------------------------------------------
      *
     C     $sopr         begsr
      *
      * Low
     C                   if        d1lsopr < 0
     C                   seton                                        40
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * High
     C                   if        d1hsopr < 0
     C                   seton                                        41
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      * Override
     C                   if        d1osopr < 0
     C                   seton                                        42
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Group type
     C                   select
     C                   when      fld = 'D1GTCD'
     C                   call      'HP531'
     C                   parm      *blank        xxgtcd
     C                   parm      *blank        xxgtds
     C                   seton                                        54
     C                   if        xxgtcd <> *blank
     C                   move      xxgtcd        d1gtcd
     C                   move      xxgtds        d1gtds
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Write/update/delete record in database file
      *----------------------------------------------------------------
      *
     C     $upd1         begsr
      *
      * If the user is deleting,
      *   perform deletion integrity checks
      *
      *
      * If user action is revising or deleting, determine that the
      * record he is accessing still exists prior to attempting to
      * update.  Lock the record for update.
      *
     C                   if        error = 0 and                                If OK
     C                             (action = delete or action = revise)
      *
     C     key01         chain     hsp083                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
      *
     C                   endif                                                  If not found
     C                   endif                                                  If OK
      *
      * If there are no errors, delete, revise or create the record.
      *
     C                   if        error = 0                                    If no error
      *
     c                   select
     C                   when      action = delete
     C                   delete    qprec
     C                   other
      *
      * Move DSPF fields to database file fields
      *
     C                   z-add     d1cdyr        qpcdyr
     C                   z-add     d1cdqr        qpcdqr
     C                   z-add     d1cell        qpcell
     C                   move      d1gtcd        qpgtcd
      *
     C                   z-add     d1ltosv       qpltosv
     C                   z-add     d1htosv       qphtosv
     C                   z-add     d1otosv       qpotosv
      *
     C                   z-add     d1lcrpr       qplcrpr
     C                   z-add     d1hcrpr       qphcrpr
     C                   z-add     d1ocrpr       qpocrpr
      *
     C                   z-add     d1lfrpr       qplfrpr
     C                   z-add     d1hfrpr       qphfrpr
     C                   z-add     d1ofrpr       qpofrpr
      *
     C                   z-add     d1lfopr       qplfopr
     C                   z-add     d1hfopr       qphfopr
     C                   z-add     d1ofopr       qpofopr
      *
     C                   z-add     d1lltbahd     qplltbahd
     C                   z-add     d1hltbahd     qphltbahd
     C                   z-add     d1oltbahd     qpoltbahd
      *
     C                   z-add     d1lpmpr       qplpmpr
     C                   z-add     d1hpmpr       qphpmpr
     C                   z-add     d1opmpr       qpopmpr
      *
     C                   z-add     d1lnrmpr      qplnrmpr
     C                   z-add     d1hnrmpr      qphnrmpr
     C                   z-add     d1onrmpr      qponrmpr
      *
     C                   z-add     d1lfrmpr      qplfrmpr
     C                   z-add     d1hfrmpr      qphfrmpr
     C                   z-add     d1ofrmpr      qpofrmpr
      *
     C                   z-add     d1lgspr       qplgspr
     C                   z-add     d1hgspr       qphgspr
     C                   z-add     d1ogspr       qpogspr
      *
     C                   z-add     d1lsopr       qplsopr
     C                   z-add     d1hsopr       qphsopr
     C                   z-add     d1osopr       qposopr
      *
     C                   if        action = create                              If create
     C                   write     qprec
     C                   else
     C                   update    qprec
     C                   endif                                                  If create
     C                   endsl
     C                   endif                                                  If no error
      *
      * Set next routine
      *
     C                   select
     C                   when      mode = create                                Wh creating
     C                   if        error = 0
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09040'
     C                   eval      routne = set1
     c                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      error <> 0                                   Wh errors
     C                   eval      routne = scrn1
     C                   other
      *
     C                   eval      routne = exit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        lr
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Find the 'most recent' same quarter
      *---------------------------------------------------------------
      *
     C     $recent       begsr
      *
      * Clear the screen fields for the 'Actuals' column
      *
     C                   z-add     0             d1qtosv
     C                   z-add     0             d1qacyr
     C                   z-add     0             d1qltbahd
     C                   z-add     0             d1qcrpr
     C                   z-add     0             d1qfrpr
     C                   z-add     0             d1qfopr
     C                   z-add     0             d1qpmpr
      *
      * Per Alice, find the MOST RECENT SAME QUARTER in the Quarterly Averages
      * file for the same cell/group type.
      *
     C     key02         setgt     hsj100b
      *
     C                   dou       *in92 = *on or d1qacyr <> 0
     C                   readp     hsj100b                                92
     C                   if        *in92 = *off and qaacqr = d1cdqr and
     C                             fscell = d1cell and fsgtcd = d1gtcd
     C                   z-add     qaacyr        d1qacyr
     C                   endif
     C                   enddo
      *
      * Now, you need to go retrieve Quarterly Averages records for this
      * Most Recent year/period/cell/group type. Make the calcs and put the
      * values in the output only fields on the screen.
      *
     C                   if        d1qacyr <> 0
     C                   exsr      $actuals
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve actual quarterly averages values
      *---------------------------------------------------------------
      *
     C     $actuals      begsr
      *
      * Clear the parms that will be passed to the generic calculation program.
      *
     C                   z-add     0             xxrsgrsv
     C                   z-add     0             xxrpgrhd
     C                   z-add     0             xxfsgrhd
     C                   z-add     0             xxfpgrhd
     C                   z-add     0             xxrfgrhd
     C                   z-add     0             xxtolt
     C                   z-add     0             xxbahd
     C                   z-add     0             xxpmhd
     C                   z-add     0             xxnrmhd
     C                   z-add     0             xxnajtihd
     C                   z-add     0             xxfrmhd
     C                   z-add     0             xxfajtihd
      *
      * Position in the join logical of Quarterly Averages and Farm Site
      *
     C     key03         setgt     hsj100b
      *
     C                   dou       *in92
     C     key03         readpe    hsj100b                                92
     C                   if        *in92 = *off and
     C                             fscell = d1cell and fsgtcd = d1gtcd
     C                   add       qatosv        d1qtosv
     C                   add       qarsgrsv      xxrsgrsv
     C                   add       qarpgrhd      xxrpgrhd
     C                   add       qafsgrhd      xxfsgrhd
     C                   add       qafpgrhd      xxfpgrhd
     C                   add       qarfgrhd      xxrfgrhd
     C                   add       qatolt        xxtolt
     C                   add       qabahd        xxbahd
     C                   add       qapmhd        xxpmhd
     C                   add       qanrmhd       xxnrmhd
     C                   add       qanajtihd     xxnajtihd
     C                   add       qafrmhd       xxfrmhd
     C                   add       qafajtihd     xxfajtihd
     C                   endif
     C                   enddo
      *
      * Call the generic program that does the calculations.
      *
     C                   call      'HP8009'
      * Totals input
     C                   parm                    xxrsgrsv
     C                   parm                    xxrpgrhd
     C                   parm                    xxfsgrhd
     C                   parm                    xxfpgrhd
     C                   parm                    xxrfgrhd
     C                   parm                    xxtolt
     C                   parm                    xxbahd
     C                   parm                    xxpmhd
     C                   parm                    xxnrmhd
     C                   parm                    xxnajtihd
     C                   parm                    xxfrmhd
     C                   parm                    xxfajtihd
      * Output
     C     d1qltbahd     parm      0             xxltbahd
     C     d1qcrpr       parm      0             xxcrpr
     C     d1qfrpr       parm      0             xxfrpr
     C     d1qfopr       parm      0             xxfopr
     C     d1qpmpr       parm      0             xxpmpr
     C     d1qnrmpr      parm      0             xxnrmpr
     C     d1qfrmpr      parm      0             xxfrmpr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm Lists
      *
     C     *entry        plist
     C     d1mode        parm                    mode
     C     svcdyr        parm                    d1cdyr
     C     svcdqr        parm                    d1cdqr
     C     svcell        parm                    d1cell
     C     svgtcd        parm                    d1gtcd
     C                   parm                    rtncd
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    d1cdyr
     C                   kfld                    d1cdqr
     C                   kfld                    d1cell
     C                   kfld                    d1gtcd
      *
     C     key02         klist
     C                   kfld                    d1cdyr
     C                   kfld                    d1cdqr
      *
     C     key03         klist
     C                   kfld                    d1qacyr
     C                   kfld                    d1cdqr
      *
     C                   eval      action = mode
      *
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
