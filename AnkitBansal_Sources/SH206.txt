      *****************  RPG PROGRAM HEADING  ************************
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Datamart--Sales
      * PROGRAM:     SH206 - Datamart Sales: Build Market
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     12/31/07
      *
      * FUNCTION: This program builds a Market Master file from
      *           the OMS-Order Management System "Customer Market" file.
      *
      *           This file in the Data Mart will be re-created with
      *           each load of the Data Mart.
      *
      ****************************************************************
      * Date      Programmer
      *
      * 01/17/08  LeAnne Ramsey
      *           Changed doc/text only. File PMDDREP is now called "Sales Market"
      *           instead of "customer market".
      *
      * 10/21/08  LeAnne Ramsey
      *           Recompile only. New field "Commission Schedule" added to PMDDREP.
      *
      * 10/30/08  LeAnne Ramsey
      *           Added 2 fields to Datamart: Market file:
      *             1) Market Type
      *             2) Broker Name
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fpmddrep   if   e             disk
      *  Sales market
      *
      *
     Fpoc5rel1  if   e           k disk
      *  Broker
      *
      *
     Fshp206    o    e           k disk
      *  Datamart: Market
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *---------------------------------------------------------------
      * Standalone fields
      *---------------------------------------------------------------
      *
      * Parms
      *
     D xxcorg          s                   like(mkcorg)
      *
      *
      ****************************************************************
      * Data Structures
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read each record in the OMS Sales Market file.
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      pmddrep                                90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   clear                   mkrec
      *
     C                   move      xxcorg        mkcorg
     C                   movel     ddisaa        mkmkcd
     C                   movel     ddr3na        mkmkds
     C                   movel     ddrsty        mkmktype
     C                   movel     ddbccd        mkspcd
     C                   movel     ddhhaa        mkbkcd
     C                   movel     ddvsst        mkstatus
      *
      * Retrieve Broker Name
      *
     C                   if        mkbkcd <> *blank
     C     mkbkcd        chain     poc5rel1                           92
     C                   if        *in92 = *off
     C                   eval      mkbknm = c5c4t1
     C                   endif
     C                   endif
      *
      *
     C                   write     mkrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      *  Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     *entry        plist
     C                   parm                    xxcorg
      *
     C                   endsr
      /EJECT
