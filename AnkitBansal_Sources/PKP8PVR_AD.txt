// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKP8PVR
// ?Date: 14.08.2025 Time: 02:52:29
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//?                      length from 5 to 7.
ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(WRK.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?USER: Load screen

MOVE *ALL (To: DTL From: PAR);

//?USER: Process command keys

// Execute function Time Out Exit         US.
EXECUTE FUNCTION(Time Out Exit         US) TYPE(EXCUSRSRC) ('PKP6UFR');
{
 C           @#STCD    IFEQ 1331
 C                     EXSR ZXEXPG
 C                     END
}


//?USER: Validate fields

//?F12
CASE;

// IF DTL.*CMD key is CF12
IF DTL.*CMD_key = '12';

CASE;

// IF DTL.BOLW Weight Type is In (En)
IF DTL.BOLW_Weight_Type = 'I';

// DTL.BOLW Scale Weight = CON.50000
DTL.BOLW_Scale_Weight = 50000;

// IF DTL.BOLW Weight Type is Out (Fuera)
IF DTL.BOLW_Weight_Type = 'O';

// DTL.BOLW Scale Weight = CON.8000
DTL.BOLW_Scale_Weight = 8000;

ENDIF;

ENDIF;

//?USER: User defined action

//?F22
CASE;

// IF DTL.*CMD key is CF22
IF DTL.*CMD_key = '22';

CASE;

// IF DTL.BOLW Weight Type is Out (Fuera)
IF DTL.BOLW_Weight_Type = 'O';

EXECUTE FUNCTION(Rtv Buy Order Load    RT) TYPE(RTVOBJ) FILE(PKEJCPP)           AB1214079;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.BOLW_Movement_Number);
PARAMETER('I');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

CASE;

// IF DTL.BOLW Scale Weight is Greater then Zero
IF DTL.BOLW_Scale_Weight > *ZERO;

EXECUTE FUNCTION(Crt Scale BOL Weight  CR) TYPE(CRTOBJ) FILE(PKEJCPP)           AB1213976;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.BOLW_Movement_Number);
PARAMETER(DTL.BOLW_Weight_Type);
PARAMETER(DTL.BOLW_Scale_Weight);
PARAMETER(DTL.BOLW_Scale_Weight_Date);
PARAMETER(DTL.BOLW_Scale_Weight_Time);
PARAMETER(DTL.BOLW_Spread_Status);
PARAMETER(DTL.BOLW_Unused_Sts_1);
PARAMETER(DTL.BOLW_Unused_Sts_2);
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(DTL.RS_User_Changed);
PARAMETER(DTL.RS_Date_Changed);
PARAMETER(DTL.RS_Time_Changed);
PARAMETER(DTL.RS_Record_Status);
PARAMETER(DTL.RS_Job);
PARAMETER(DTL.RS_Program);
PARAMETER(DTL.RS_User_Added);
PARAMETER(DTL.RS_Date_Added);
PARAMETER(DTL.RS_Time_Added);
PARAMETER(PAR.Scheduled_Kill_Date_USR);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(LCL.SR_Type);
PARAMETER(LCL.Truck_Auth_Entry_Time_USR);
{
 //?USER: Processing before Data update

 //?E2423 Mtech Live or Not Live *** Interfaces to HPS ***
 //?Get the MTech Live Yes or No
 DO;

 //?Mtech Live Yes or no
 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER('MTECHLIVE');
 PARAMETER(WRK.System_Value_Alpha_USR);

 // LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
 LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

 ENDDO;

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

 // Call program Rtv System Date       UP.
 CALL PROGRAM(Rtv System Date       UP) ('PKPSUPR');
 PARAMETER(WRK.System_Value_Numeric_USR);

 // Execute function Rtv Current Time      US.
 EXECUTE FUNCTION(Rtv Current Time      US) TYPE(EXCUSRSRC) ('PKM1UFR');
 PARAMETER(DB1.RS_Time_Added);
 {
  C                     TIME           #OA1TM
 }

 // DB1.BOLW Scale Weight Date = WRK.System Value Numeric  USR
 DB1.BOLW_Scale_Weight_Date = WRK.System_Value_Numeric_USR;

 // DB1.RS Date Added = WRK.System Value Numeric  USR
 DB1.RS_Date_Added = WRK.System_Value_Numeric_USR;

 // DB1.BOLW Scale Weight Time = DB1.RS Time Added
 DB1.BOLW_Scale_Weight_Time = DB1.RS_Time_Added;

 CASE;

 // IF PAR.BOLW Weight Type is In
 IF PAR.BOLW_Weight_Type = 'I';

 //?*-----------------------------------------------------------*
 //?* 01/23/03 PKD PK0495-Retrieve the Buy Order and Load Number
 //?               the Delivery Schedule Detail File instead of the
 //?               next available load.
 //?* 03/23/04 PKD TFHPE - If Producer Code is Seaboard, then retrieve
 //?                the Buy Order Load from the Delivery Schedule
 //?                Detail, otherwise retrieve from Buy Order Load.
 CASE;

 // IF PAR.SR Type is Internal
 IF PAR.SR_Type = 'I';

 //?Bring back farm
 EXECUTE FUNCTION(Rtv Buy Order LoadFarmRT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1313314;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.BOLW_Movement_Number);
 PARAMETER(LCL.Return_Code_USR);
 PARAMETER(LCL.DSH_Kill_Date);
 PARAMETER(LCL.DSD_Farm_Site_Code);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PAR.Return Code USR = CND.*Record does not exist
  PAR.Return_Code_USR = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PAR.Return Code USR = CND.*Normal
  PAR.Return_Code_USR = *BLANK;

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 // DB1.BOH Company Number = PAR.CC Company Number
 DB1.BOH_Company_Number = PAR.CC_Company_Number;

 // LCL.Load Number 2.0 USR = PAR.BOLW Movement Number
 LCL.Load_Number_2_0_USR = PAR.BOLW_Movement_Number;

 // DB1.BOL Load Number = LCL.Load Number 2.0 USR
 DB1.BOL_Load_Number = LCL.Load_Number_2_0_USR;

 // DB1.BOH Buy Order Number
 DB1.BOH_Buy_Order_Number = PAR.BOLW_Movement_Number / 100;

 ENDIF;

 EXECUTE FUNCTION(Upd Trk Scl Weigh Sts RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1214077;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER('I');
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.BOL Truck Scale Weigh Sts is Respread
  IF PAR.BOL_Truck_Scale_Weigh_Sts = 'R';

  // AND DB1.BOL Truck Scale Weigh Sts is Not Spread
  AND DB1.BOL_Truck_Scale_Weigh_Sts = 'I'/'N'/*BLANK/'O'/'R'/'A'/'C';

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Chg Trk Scl Weigh Sts CH) TYPE(CHGOBJ) FILE(PKAXCPP)           AB1214078;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(PAR.BOL_Truck_Scale_Weigh_Sts);
  PARAMETER(DB1.BOL_Shipped_Head);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  ENDIF;

  CASE;

  // IF PAR.BOL Truck Scale Weigh Sts is Respread
  IF PAR.BOL_Truck_Scale_Weigh_Sts = 'R';

  EXECUTE FUNCTION(Upd Hdr/Bal Status    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1230832;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER('E');
  PARAMETER('E');
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.TH Hog Class Type is Not Resale
   IF DB1.TH_Hog_Class_Type = 'M'/'S';

   EXECUTE FUNCTION(Chg Hdr/Bal Status    CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1230833;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(PAR.TH_Header_Error_Sts);
   PARAMETER(PAR.TH_Kill_Balancing_Sts);
   ENDIF;

  }

  ENDIF;

 }

 //?E3503 JJH 11/29/14 - Create Buy Order Load Comment - In
 // Call program Crt BOL System Comment XF.
 CALL PROGRAM(Crt BOL System Comment XF) ('PLVZXFR');
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER('Truck In');
 PARAMETER(*BLANK);
 PARAMETER('N');
 PARAMETER(PAR.Truck_Auth_Entry_Time_USR);

 // IF PAR.BOLW Weight Type is Out
 IF PAR.BOLW_Weight_Type = 'O';

 CASE;

 // IF PAR.SR Type is Internal
 IF PAR.SR_Type = 'I';

 CASE;

 // IF LCL.MTech Live Yes or No is No MTech not Live
 IF LCL.MTech_Live_Yes_or_No = 'N';

 //?11/8/2021 only need documentation
 //?This will not happen due to internal is live
 //?E2423 Mtech Live will not use the HPS program
 // Call program Z1v HPS Farm Info     UP.
 CALL PROGRAM(Z1v HPS Farm Info     UP) ('HP249');
 PARAMETER(PGM.*Return_code);
 PARAMETER(PAR.BOLW_Movement_Number);
 PARAMETER(WRK.Farm_site_Name_f_HPS_USR);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(PAR.HPS_FS_Comp_Relation_USR);
 PARAMETER(WRK.State);

 // IF LCL.MTech Live Yes or No is Yes MTech is Live
 IF LCL.MTech_Live_Yes_or_No = 'Y';

 //?E2423 Mtech Live will use pgm by farm site
 //?Leanne  crt new program to get farm information by farm site
 // WRK.Farm Site USR = LCL.DSD Farm Site Code
 WRK.Farm_Site_USR = LCL.DSD_Farm_Site_Code;

 // Call program Rtv HPS Farm Inf-Mtech UP.
 CALL PROGRAM(Rtv HPS Farm Inf-Mtech UP) ('HP293');
 PARAMETER(PGM.*Return_code);
 PARAMETER(WRK.Farm_site_Name_f_HPS_USR);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(PAR.HPS_FS_Comp_Relation_USR);
 PARAMETER(WRK.State);
 PARAMETER(WRK.HPS_Farm_County);
 PARAMETER(WRK.HPS_Cell_Manager_Code_USR);
 PARAMETER(WRK.HPS_Cell_Manager_Nm_USR);
 PARAMETER(NLL.MTech_Farm_Site_Ref);
 PARAMETER(NLL.MTech_Cell_Manager_Ref);

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.HPS FS Comp Relation USR = WRK.Blank USR
 PAR.HPS_FS_Comp_Relation_USR = WRK.Blank_USR;

 ENDIF;

 //?BOL Truck Scale Weight Status
 CASE;

 // IF PAR.HPS FS Comp Relation USR is Contract
 IF PAR.HPS_FS_Comp_Relation_USR = 'CON';

 //?do this for contract too .....per jancie 8/24/05
 // PAR.BOL Truck Scale Weigh Sts = CND.Out
 PAR.BOL_Truck_Scale_Weigh_Sts = 'O';

 //?BOL Truck Scale Weight Status
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.BOL Truck Scale Weigh Sts = CND.Out
 PAR.BOL_Truck_Scale_Weigh_Sts = 'O';

 ENDIF;

 EXECUTE FUNCTION(Upd Trk Scl Weigh Sts RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1214077;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.BOL_Truck_Scale_Weigh_Sts);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.BOL Truck Scale Weigh Sts is Respread
  IF PAR.BOL_Truck_Scale_Weigh_Sts = 'R';

  // AND DB1.BOL Truck Scale Weigh Sts is Not Spread
  AND DB1.BOL_Truck_Scale_Weigh_Sts = 'I'/'N'/*BLANK/'O'/'R'/'A'/'C';

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Chg Trk Scl Weigh Sts CH) TYPE(CHGOBJ) FILE(PKAXCPP)           AB1214078;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(PAR.BOL_Truck_Scale_Weigh_Sts);
  PARAMETER(DB1.BOL_Shipped_Head);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  ENDIF;

  CASE;

  // IF PAR.BOL Truck Scale Weigh Sts is Respread
  IF PAR.BOL_Truck_Scale_Weigh_Sts = 'R';

  EXECUTE FUNCTION(Upd Hdr/Bal Status    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1230832;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER('E');
  PARAMETER('E');
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.TH Hog Class Type is Not Resale
   IF DB1.TH_Hog_Class_Type = 'M'/'S';

   EXECUTE FUNCTION(Chg Hdr/Bal Status    CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1230833;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(PAR.TH_Header_Error_Sts);
   PARAMETER(PAR.TH_Kill_Balancing_Sts);
   ENDIF;

  }

  ENDIF;

 }

 ENDIF;

 //?USER: Processing after Data update

 // PAR.Buy Order Number = DB1.BOH Buy Order Number
 PAR.Buy_Order_Number = DB1.BOH_Buy_Order_Number;

 // PAR.Load Number = DB1.BOL Load Number
 PAR.Load_Number = DB1.BOL_Load_Number;

}


// Call program Acpt Scale Weight WDW CL.
CALL PROGRAM(Acpt Scale Weight WDW CL) ('PKQEUPC');

ENDIF;

//?F22
// IF DTL.*CMD key is CF12
IF DTL.*CMD_key = '12';

CASE;

// IF DTL.BOLW Weight Type is Out (Fuera)
IF DTL.BOLW_Weight_Type = 'O';

EXECUTE FUNCTION(Rtv Buy Order Load    RT) TYPE(RTVOBJ) FILE(PKEJCPP)           AB1214079;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.BOLW_Movement_Number);
PARAMETER('I');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

CASE;

// IF DTL.BOLW Scale Weight is Greater then Zero
IF DTL.BOLW_Scale_Weight > *ZERO;

EXECUTE FUNCTION(Crt Scale BOL Weight  CR) TYPE(CRTOBJ) FILE(PKEJCPP)           AB1213976;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.BOLW_Movement_Number);
PARAMETER(DTL.BOLW_Weight_Type);
PARAMETER(DTL.BOLW_Scale_Weight);
PARAMETER(DTL.BOLW_Scale_Weight_Date);
PARAMETER(DTL.BOLW_Scale_Weight_Time);
PARAMETER(DTL.BOLW_Spread_Status);
PARAMETER(DTL.BOLW_Unused_Sts_1);
PARAMETER(DTL.BOLW_Unused_Sts_2);
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(DTL.RS_User_Changed);
PARAMETER(DTL.RS_Date_Changed);
PARAMETER(DTL.RS_Time_Changed);
PARAMETER(DTL.RS_Record_Status);
PARAMETER(DTL.RS_Job);
PARAMETER(DTL.RS_Program);
PARAMETER(DTL.RS_User_Added);
PARAMETER(DTL.RS_Date_Added);
PARAMETER(DTL.RS_Time_Added);
PARAMETER(PAR.Scheduled_Kill_Date_USR);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(LCL.SR_Type);
PARAMETER(LCL.Truck_Auth_Entry_Time_USR);
{
 //?USER: Processing before Data update

 //?E2423 Mtech Live or Not Live *** Interfaces to HPS ***
 //?Get the MTech Live Yes or No
 DO;

 //?Mtech Live Yes or no
 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER('MTECHLIVE');
 PARAMETER(WRK.System_Value_Alpha_USR);

 // LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
 LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

 ENDDO;

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

 // Call program Rtv System Date       UP.
 CALL PROGRAM(Rtv System Date       UP) ('PKPSUPR');
 PARAMETER(WRK.System_Value_Numeric_USR);

 // Execute function Rtv Current Time      US.
 EXECUTE FUNCTION(Rtv Current Time      US) TYPE(EXCUSRSRC) ('PKM1UFR');
 PARAMETER(DB1.RS_Time_Added);
 {
  C                     TIME           #OA1TM
 }

 // DB1.BOLW Scale Weight Date = WRK.System Value Numeric  USR
 DB1.BOLW_Scale_Weight_Date = WRK.System_Value_Numeric_USR;

 // DB1.RS Date Added = WRK.System Value Numeric  USR
 DB1.RS_Date_Added = WRK.System_Value_Numeric_USR;

 // DB1.BOLW Scale Weight Time = DB1.RS Time Added
 DB1.BOLW_Scale_Weight_Time = DB1.RS_Time_Added;

 CASE;

 // IF PAR.BOLW Weight Type is In
 IF PAR.BOLW_Weight_Type = 'I';

 //?*-----------------------------------------------------------*
 //?* 01/23/03 PKD PK0495-Retrieve the Buy Order and Load Number
 //?               the Delivery Schedule Detail File instead of the
 //?               next available load.
 //?* 03/23/04 PKD TFHPE - If Producer Code is Seaboard, then retrieve
 //?                the Buy Order Load from the Delivery Schedule
 //?                Detail, otherwise retrieve from Buy Order Load.
 CASE;

 // IF PAR.SR Type is Internal
 IF PAR.SR_Type = 'I';

 //?Bring back farm
 EXECUTE FUNCTION(Rtv Buy Order LoadFarmRT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1313314;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.BOLW_Movement_Number);
 PARAMETER(LCL.Return_Code_USR);
 PARAMETER(LCL.DSH_Kill_Date);
 PARAMETER(LCL.DSD_Farm_Site_Code);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PAR.Return Code USR = CND.*Record does not exist
  PAR.Return_Code_USR = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PAR.Return Code USR = CND.*Normal
  PAR.Return_Code_USR = *BLANK;

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 // DB1.BOH Company Number = PAR.CC Company Number
 DB1.BOH_Company_Number = PAR.CC_Company_Number;

 // LCL.Load Number 2.0 USR = PAR.BOLW Movement Number
 LCL.Load_Number_2_0_USR = PAR.BOLW_Movement_Number;

 // DB1.BOL Load Number = LCL.Load Number 2.0 USR
 DB1.BOL_Load_Number = LCL.Load_Number_2_0_USR;

 // DB1.BOH Buy Order Number
 DB1.BOH_Buy_Order_Number = PAR.BOLW_Movement_Number / 100;

 ENDIF;

 EXECUTE FUNCTION(Upd Trk Scl Weigh Sts RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1214077;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER('I');
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.BOL Truck Scale Weigh Sts is Respread
  IF PAR.BOL_Truck_Scale_Weigh_Sts = 'R';

  // AND DB1.BOL Truck Scale Weigh Sts is Not Spread
  AND DB1.BOL_Truck_Scale_Weigh_Sts = 'I'/'N'/*BLANK/'O'/'R'/'A'/'C';

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Chg Trk Scl Weigh Sts CH) TYPE(CHGOBJ) FILE(PKAXCPP)           AB1214078;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(PAR.BOL_Truck_Scale_Weigh_Sts);
  PARAMETER(DB1.BOL_Shipped_Head);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  ENDIF;

  CASE;

  // IF PAR.BOL Truck Scale Weigh Sts is Respread
  IF PAR.BOL_Truck_Scale_Weigh_Sts = 'R';

  EXECUTE FUNCTION(Upd Hdr/Bal Status    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1230832;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER('E');
  PARAMETER('E');
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.TH Hog Class Type is Not Resale
   IF DB1.TH_Hog_Class_Type = 'M'/'S';

   EXECUTE FUNCTION(Chg Hdr/Bal Status    CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1230833;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(PAR.TH_Header_Error_Sts);
   PARAMETER(PAR.TH_Kill_Balancing_Sts);
   ENDIF;

  }

  ENDIF;

 }

 //?E3503 JJH 11/29/14 - Create Buy Order Load Comment - In
 // Call program Crt BOL System Comment XF.
 CALL PROGRAM(Crt BOL System Comment XF) ('PLVZXFR');
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER('Truck In');
 PARAMETER(*BLANK);
 PARAMETER('N');
 PARAMETER(PAR.Truck_Auth_Entry_Time_USR);

 // IF PAR.BOLW Weight Type is Out
 IF PAR.BOLW_Weight_Type = 'O';

 CASE;

 // IF PAR.SR Type is Internal
 IF PAR.SR_Type = 'I';

 CASE;

 // IF LCL.MTech Live Yes or No is No MTech not Live
 IF LCL.MTech_Live_Yes_or_No = 'N';

 //?11/8/2021 only need documentation
 //?This will not happen due to internal is live
 //?E2423 Mtech Live will not use the HPS program
 // Call program Z1v HPS Farm Info     UP.
 CALL PROGRAM(Z1v HPS Farm Info     UP) ('HP249');
 PARAMETER(PGM.*Return_code);
 PARAMETER(PAR.BOLW_Movement_Number);
 PARAMETER(WRK.Farm_site_Name_f_HPS_USR);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(PAR.HPS_FS_Comp_Relation_USR);
 PARAMETER(WRK.State);

 // IF LCL.MTech Live Yes or No is Yes MTech is Live
 IF LCL.MTech_Live_Yes_or_No = 'Y';

 //?E2423 Mtech Live will use pgm by farm site
 //?Leanne  crt new program to get farm information by farm site
 // WRK.Farm Site USR = LCL.DSD Farm Site Code
 WRK.Farm_Site_USR = LCL.DSD_Farm_Site_Code;

 // Call program Rtv HPS Farm Inf-Mtech UP.
 CALL PROGRAM(Rtv HPS Farm Inf-Mtech UP) ('HP293');
 PARAMETER(PGM.*Return_code);
 PARAMETER(WRK.Farm_site_Name_f_HPS_USR);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(PAR.HPS_FS_Comp_Relation_USR);
 PARAMETER(WRK.State);
 PARAMETER(WRK.HPS_Farm_County);
 PARAMETER(WRK.HPS_Cell_Manager_Code_USR);
 PARAMETER(WRK.HPS_Cell_Manager_Nm_USR);
 PARAMETER(NLL.MTech_Farm_Site_Ref);
 PARAMETER(NLL.MTech_Cell_Manager_Ref);

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.HPS FS Comp Relation USR = WRK.Blank USR
 PAR.HPS_FS_Comp_Relation_USR = WRK.Blank_USR;

 ENDIF;

 //?BOL Truck Scale Weight Status
 CASE;

 // IF PAR.HPS FS Comp Relation USR is Contract
 IF PAR.HPS_FS_Comp_Relation_USR = 'CON';

 //?do this for contract too .....per jancie 8/24/05
 // PAR.BOL Truck Scale Weigh Sts = CND.Out
 PAR.BOL_Truck_Scale_Weigh_Sts = 'O';

 //?BOL Truck Scale Weight Status
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.BOL Truck Scale Weigh Sts = CND.Out
 PAR.BOL_Truck_Scale_Weigh_Sts = 'O';

 ENDIF;

 EXECUTE FUNCTION(Upd Trk Scl Weigh Sts RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1214077;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.BOL_Truck_Scale_Weigh_Sts);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.BOL Truck Scale Weigh Sts is Respread
  IF PAR.BOL_Truck_Scale_Weigh_Sts = 'R';

  // AND DB1.BOL Truck Scale Weigh Sts is Not Spread
  AND DB1.BOL_Truck_Scale_Weigh_Sts = 'I'/'N'/*BLANK/'O'/'R'/'A'/'C';

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Chg Trk Scl Weigh Sts CH) TYPE(CHGOBJ) FILE(PKAXCPP)           AB1214078;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(PAR.BOL_Truck_Scale_Weigh_Sts);
  PARAMETER(DB1.BOL_Shipped_Head);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  ENDIF;

  CASE;

  // IF PAR.BOL Truck Scale Weigh Sts is Respread
  IF PAR.BOL_Truck_Scale_Weigh_Sts = 'R';

  EXECUTE FUNCTION(Upd Hdr/Bal Status    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1230832;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER('E');
  PARAMETER('E');
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.TH Hog Class Type is Not Resale
   IF DB1.TH_Hog_Class_Type = 'M'/'S';

   EXECUTE FUNCTION(Chg Hdr/Bal Status    CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1230833;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(PAR.TH_Header_Error_Sts);
   PARAMETER(PAR.TH_Kill_Balancing_Sts);
   ENDIF;

  }

  ENDIF;

 }

 ENDIF;

 //?USER: Processing after Data update

 // PAR.Buy Order Number = DB1.BOH Buy Order Number
 PAR.Buy_Order_Number = DB1.BOH_Buy_Order_Number;

 // PAR.Load Number = DB1.BOL Load Number
 PAR.Load_Number = DB1.BOL_Load_Number;

}


// Send status message - 'The Truck Weight was accepted. Thank you. El peso del carro aceptado. Grac
MESSAGE(PRK0852 *STATUS);

ENDIF;

//?F22
// IF *OTHERWISE
IF *OTHERWISE;

// Send information message - '500 The Truck Weight was not accepted, please retry.  El peso del car
MESSAGE(PRK0851 *INFO);

ENDIF;

PGM.*Return_code = *BLANK;

RETURN;

