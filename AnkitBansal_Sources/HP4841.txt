      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production
      * PROGRAM:     HP4841
      * TITLE:       Build workfile for sales movement/check spreadsheet
      * PROGRAMMER:  Brad Baden
      * CREATED:      7/12/2019
      *
      *  FUNCTION:   This batch program copies the records in file
      *              QTEMP/HSP384 to file QTEMP/HSP4841.  Each copied
      *              record is counted.  A flag value is refurned to
      *              the calling program based on the record count.
      *              If there are no records copied, the flag value is
      *              'Z'.  If more that 66,000 records are copied, the
      *              flag value is set to 'T'.  Otherwise, the returned
      *              flag value will be blank.
      *
      ****************************************************************
      * Modifications:
      ****************************************************************
      * Date      Programmer
      *  8/15/19  Brad Baden     E15323
      *           Modify program to only have one premium code and
      *           premium amount column.  Also, only 1 Ded/ADD code
      *           column and 1 Ded/Add amount column.  Then write
      *           a record for each premium and ded/add values.
      *
      ****************************************************************
      /eject
      ****************************************************************
      * File Specifications
      ****************************************************************
      *
     FHSP011    IF   E           K DISK
      *   PRODUCTION PHASE
      *
      *
     FHSL034D   IF   E           K DISK
      *    HOG GROUP
      *
      *
     FHSL064C   IF   E           K DISK
      *    CHECK DETAIL        (records selected in OPNQRY)
      *
      *
     FHSL065C   IF   E           K DISK
      *    CHECK ADJUSTMENTS
      *
      *
     FHSP066    IF   E           K DISK
      *   SALE TYPE CODES
      *
      *
     Fhsp384    if   e           k disk
      *    Workfile: Sales Movement/Check
      *
      *
     Fhsp4841   o    e           k disk    prefix(p1_) rename(wfrec:wsrec)
      *    Workfile: Sales Movement/Check emailed spreadsheet
      *
      *
      /EJECT
      ****************************************************************
      * Definition Specifications
      ****************************************************************
      *
      *---------------------------------------------------------------
      * PROCEDURE PROTOTYPE
      *---------------------------------------------------------------
     D CpyHSP384       PR                  EXTPGM('HP4841')
     D   pFlag                        1A
      *
      *---------------------------------------------------------------
      * PROCEDURE INTERFACE
      *---------------------------------------------------------------
     D CpyHSP384       PI
     D   pFlag                        1A
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      *  DEDUCTION/ADD-ON CODES AND AMOUNTS FROM CHECK DETAIL
      *  PREMIUM/DISCOUNTS CODES AND AMOUNTS FROM CHECK DETAIL
      *---------------------------------------------------------------
      *
     D DD              S              5    DIM(20)                              DED/ADD AMOUNT
     D DA              S              7  2 DIM(20)
     D PD              S              5    DIM(20)                              PRM/DIS AMOUNT
     D PA              S              7  2 DIM(20)
      *
      *---------------------------------------------------------------
      *  TOTAL DEDUCTIONS/ADD-ONS PER FARM SITE.
      *  TOTAL PREMIUMS/DISCOUNTS PER FARM SITE.
      *---------------------------------------------------------------
      *
     D FDD             S              5    DIM(20)                              DED/ADD AMOUNT
     D FDA             S              9  2 DIM(20)
     D FPD             S              5    DIM(20)                              PRM/DIS AMOUNT
     D FPA             S              9  2 DIM(20)
      *
      *---------------------------------------------------------------
      *  TOTAL DEDUCTIONS/ADD-ONS PER SALES TYPE
      *  TOTAL PREMIUMS/DISCOUNTS PER SALES TYPE.
      *---------------------------------------------------------------
      *
     D SDD             S              5    DIM(20)                              DED/ADD AMOUNT
     D SDA             S              9  2 DIM(20)
     D SPD             S              5    DIM(20)                              PRM/DIS AMOUNT
     D SPA             S              9  2 DIM(20)
      *
      *---------------------------------------------------------------
      *  TOTAL DEDUCTIONS/ADD-ONS PER PHASE.
      *  TOTAL PREMIUMS/DISCOUNTS PER PHASE.
      *---------------------------------------------------------------
      *
     D PDD             S              5    DIM(20)                              DED/ADD AMOUNT
     D PDA             S              9  2 DIM(20)
     D PPD             S              5    DIM(20)                              PRM/DIS AMOUNT
     D PPA             S              9  2 DIM(20)
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS (REQUIRED IN BATCH FOR JDE CUSTOMER)
      *---------------------------------------------------------------
     D MGW             S              1    DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      * THE FOLLOWING ERROR MESSAGE DATA STRUCTURES ARE REQUIRED IN
      * THIS BATCH PROGRAM BECAUSE THEY ARE USED AS STANDARD INPUT
      * PARMS TO THE GENERIC PROGRAM THAT RETRIEVES THE JDE CUSTOMER
      * NAME.
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
      *---------------------------------------------------------------
      *  Local Data Area
      *---------------------------------------------------------------
      *
     D                uds
     D  ldfsbo                 1      5                                         Biz Office
     D  ldfymd                36     43  0                                      From Date yyyymmdd
     D  ldfmdy                44     49  0                                      From Date mmddyy
     D  ldtymd                50     57  0                                      To Date yyyymmdd
     D  ldtmdy                58     63  0                                      To Date mmddyy
      *
     D  ldptcd                64     68                                         Prod Type selected
     D  ldppcd                79     83                                         Prod Phase selected
     D  ldstcd               114    118                                         Sales Type selected
     D  ldfscd               149    153  0                                      Farm Site selected
     D  ldcvno               179    186  0                                      Customer# selected
     D  ldhgsn               217    223  0                                      Hog Group number
     D  ldhgcd               224    230                                         Hog Group selected
     D  ldbscd               231    235                                         Breed Stock selected
      *
     D  ldemail              256    305
      *
     D  ldfsboe              468    472                                         Biz Office for email
     D  ldptcde              514    518                                         Prod Type for email
     D  ldppcde              527    531                                         Prod Phase for email
     D  ldstcde              545    549                                         Sales Type for email
     D  ldfscde              557    561                                         Farm Site for email
     D  ldcvnoe              569    575                                         Customer# for email
     D  ldbscde              585    589                                         Breed Stock for emai
     D  ldhgcde              598    604                                         Hog Group for email
      *
     D  ldsel                451    604
      *
     D  counter        S              7  0 inz(0)
     D  flag           S              1    inz(' ')
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    Externally defines as utpgfr (record format: pgmdsr)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      *  Work fields
      *---------------------------------------------------------------
      *
      * Index fields for arrays
     D d               s              2  0
     D f               s              2  0
     D p               s              2  0
     D q               s              2  0
     D a               s              2  0
     D b               s              2  0
     D m               s              2  0
     D n               s              2  0
     D g               s              2  0
     D h               s              2  0
     D idx             s              2  0
      *
      * J.D. Edwards parms
     D jdefl           s              1a                                        JDE Error flag
     D inat1           s              3a   inz('C  ')                           JDE Address type
     D inajd           s                   like(cjcvno)                         JDE Address number
     D oualph          s             40a                                        JDE Customer name
      *
      * J.D. Edwards parms
     D dtcdydhd        s                   like(cdcdhd)                         Cndm/yard dead head
     D dtcdydlb        s                   like(cdcdlb)                         Cndm/yard dead wgt
     D dtrcdt          s                   like(ldfmdy)                         Customer name
     D dtcnam          s              8a                                        do not need?
     D dtdaam          s                   like(cdgram)                         Deduction/Add xfoot
     D dtpdam          s                   like(cdgram)                         Prem/Discount xfoot
     D dtntam          s              9  2                                      Net amount
     D dthgcd          s                   like(hghgcd)                         Hog group
     D dtbscd          s                   like(hgbscd)                         Breed
      *
     D wfcdydhd        s                   like(p1_wfcdydhd)
     D wfcdydlb        s                   like(p1_wfcdydlb)
     D wfdads          s                   like(p1_wfdads)
     D wfdaam          s                   like(p1_wfdaam)
     D wfdohd          s                   like(p1_wfdohd)
     D wfdolb          s                   like(p1_wfdolb)
     D wfntam          s                   like(p1_wfntam)
     D wfprds          s                   like(p1_wfprds)
     D wfpram          s                   like(p1_wfpram)
      *
      *---------------------------------------------------------------
      *  Named constants
      *---------------------------------------------------------------
      *
     D yes             c                   const('Y')
     D no              c                   const('N')
     D carc            c                   const('CARCASS PAYMENT')
     D live            c                   const('LIVE PAYMENT')
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read each Workfile: Sales Movement/Check Report
      *
     C     *loval        setll     hsp384
      *
     C                   dou       %eof(hsp384)                                 dou %eof
     C                   read      hsp384
     C                   if        not %eof(hsp384)                             if not %eof
      *
      * Retrieve and validate the customer name
     C                   exsr      $cust
      *
      * Retrieve production phase
     C                   exsr      $ppds
      *
      * Retrieve check adjustments
     C                   exsr      $check

      *
      * Load values to file hsp4841
     C                   exsr      $load

     C                   write     wsrec
     C                   if        pd(2) <> *blanks or dd(2) <> *blanks
     C                   exsr      $load2
     C                   endif

     C                   eval      counter += 1
     C                   endif                                                  fi not %eof
      *
     C                   enddo                                                  uod %eof
      *
      ****************************************************************
      * EOF processing
      ****************************************************************
      *
      * When counter = 0, no records found
      * When counter >= 66000, too many records for spreadsheet
     C                   select
     C                   when      counter = 0
     C                   eval      pflag = 'Z'
      *
     C                   when      counter >= 66000
     C                   eval      pflag = 'T'
     C                   endsl
      *
     C                   eval      *inlr = *on
     C                   return
      /EJECT
      *----------------------------------------------------------------
      * $cust - Retrieve customer/vendor name from the JDE system
      *----------------------------------------------------------------
      *
     C     $cust         begsr
      *
     C                   z-add     wfcvno        inajd
     C                   exsr      $jdev
      *
     C     jdefl         ifeq      yes
     C                   eval      dtcnam = 'UNKNOWN'
     C                   else
     C                   eval      dtcnam = oualph
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $ppds - Retrieve production phase description
      *----------------------------------------------------------------
      *
     C     $ppds         begsr
      *
     C     wfppcd        chain     hsp011
     C                   if        %found(hsp011)
     C                   eval      hpppds = ppppds
     C                   else
     C                   eval      hpppds = 'UNKNOWN'
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $stds - Retrieve sales type code description
      *----------------------------------------------------------------
      *
     C     $stds         begsr
      *
     C     wfstcd        chain     hsp066
     C                   if        %found(hsp066)
     C                   eval      hdstds = ststds
     C                   else
     C                   eval      hdstds = 'UNKNOWN'
     C                   endif
      *
      * Type of payment
     C                   select
     C                   when      wfstcd = 'CULLS'
     C                   when      wfstcd = 'FPS  '
     C                   eval      hdtpds = *blanks
      *
     C                   when      wftpcd = 'C'
     C                   eval      hdtpds = carc
      *
     C                   when      wftpcd = 'L'
     C                   eval      hdtpds = LIVE
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $jdev - Subroutine to call the external program to validate JDE
      *         address numbers.
      *----------------------------------------------------------------
      *
     C     $jdev         begsr
      *
     C                   movel     no            jdefl                          jde error flag
      *
     C                   call      'HPJDEV'
     C                   parm                    mgi                            msg id's
     C                   parm                    mgd                            msg data fld
     C                   parm                    error                          # err msgs
     C                   parm                    inajd                          jde addr #
     C                   parm                    inat1                          jde addr type = C
     C                   parm                    jdefl                          jde error flag
     C                   parm      *blanks       oualph                         jde customer name
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $check - Retrieve check adjustments
      *----------------------------------------------------------------
      *
     C     $check        begsr
      *
     C     k2l064        chain     hsl064c
     C                   if        %found(hsl064c)                              if %found
      *
      *  Load deduction/add-ons and premium/discounts into arrays
      *
     C                   exsr      $totda
      *
      * calculate net amount
      *
     C                   eval      dtntam = cdgram + dtdaam
      *
      * Sum condemned and yard dead head and pounds
      *
     C     cdcdhd        add       cdydhd        wfcdydhd
     C     cdcdhd        add       cdydhd        dtcdydhd
     C                   add       dtcdydhd      tpcdydhd
     C                   add       dtcdydhd      tscdydhd
     C                   add       dtcdydhd      tfcdydhd
      *
     C     cdcdlb        add       cdydlb        wfcdydlb
     C     cdcdlb        add       cdydlb        dtcdydlb
     C                   add       dtcdydlb      tpcdydlb
     C                   add       dtcdydlb      tscdydlb
     C                   add       dtcdydlb      tfcdydlb
      *
      *
      * Accumulate DOA head and pounds
      *
     C                   add       cddohd        wfdohd
     C                   add       cddohd        tpdohd
     C                   add       cddohd        tsdohd
     C                   add       cddohd        tfdohd
      *
     C                   add       cddolb        wfdolb
     C                   add       cddolb        tpdolb
     C                   add       cddolb        tsdolb
     C                   add       cddolb        tfdolb
      *
      * Accumulate live head and pounds
      *
     C                   add       cdlvhd        tplvhd
     C                   add       cdlvhd        tslvhd
     C                   add       cdlvhd        tflvhd
      *
     C                   add       cdlvlb        tplvlb
     C                   add       cdlvlb        tslvlb
     C                   add       cdlvlb        tflvlb
      *
      *  ADD CHECK VALUES TO PRODUCTION PHASE TOTALS
      *
     C                   add       CDCRLB        TPCRLB
     C                   add       CDBAAM        TPBAAM
     C                   add       CDGRAM        TPGRAM
     C                   add       DTNTAM        TPNTAM
     C                   add       DTDAAM        TPDAAM
     C                   add       DTPDAM        TPPDAM
      *
      *  ADD CHECK VALUES TO SALES TYPE TOTALS
      *
     C                   add       CDCRLB        TSCRLB
     C                   add       CDBAAM        TSBAAM
     C                   add       CDGRAM        TSGRAM
     C                   add       DTNTAM        TSNTAM
     C                   add       DTDAAM        TSDAAM
     C                   add       DTPDAM        TSPDAM
      *
      *  ADD CHECK VALUES TO FARM TOTALS
      *
     C                   add       CDCRLB        TFCRLB
     C                   add       CDBAAM        TFBAAM
     C                   add       CDGRAM        TFGRAM
     C                   add       DTNTAM        TFNTAM
     C                   add       DTDAAM        TFDAAM
     C                   add       DTPDAM        TFPDAM
      *
      * RETRIEVE HOG GROUP DATA
      *
     C     cdhgsn        chain     hsl034d                            92
     C                   if        %found(hsl034d)
     C                   eval      dthgcd = hghgcd
     C                   eval      dtbscd = hgbscd
     C                   endif
      *
     C                   endif                                                  fi %found
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $totda - Build array of deduction/adds and premium discounts
      *----------------------------------------------------------------
      *
     C     $totda        begsr
      *
     C                   eval      dd = *blanks
     C                   eval      da = 0
     C                   eval      f  = 0
      *
     C                   eval      pd = *blanks
     C                   eval      pa = 0
     C                   eval      q  = 0
      *
     C     k1l065        setll     hsl065c
     C                   if        %found(hsl065c)                              if %found
     C                   dou       %eof(hsl065c)                                dou %eof
     C     k1l065        reade     hsl065c                                70
     C                   if        not %eof(hsl065c)                            if not %eof
      *
      *----------------------------------------------------
      * Load detail time arrays
      *----------------------------------------------------
      * Load deductions/Add-ons in detail array (da)
      *
     C                   if        cjcjfl = 'D'                                 if deduction
     C                   eval      d = 1
     C     cjcjcd        lookup    dd(d)                                  50
     C                   if        %equal                                       if da found
     C                   eval      f += 1
     C                   eval      dd(f) = cjcjcd
     C                   eval      da(f) = cjcjam
     C                   else
     C                   eval      f += 1
     C                   eval      dd(f) = cjcjcd
     C                   eval      da(f) = cjcjam
     C                   endif                                                  fi da found
     C                   else
      *
      * Load premium/discounts into array (pa)
      *
     C                   eval      p = 1
     C     cjcjcd        lookup    pd(p)                                  50
     C                   if        %found                                       if pd found
     C                   eval      q += 1
     C                   eval      pd(q) = cjcjcd
     C                   eval      pa(q) = cjcjam
     C                   else
     C                   eval      q += 1
     C                   eval      pd(p) = cjcjcd
     C                   eval      pa(p) = cjcjam
     C                   endif                                                  fi pd found
     C                   endif                                                  fi deduction
      *
      *----------------------------------------------------------------
      * Load total arrays for farm, sales type, phase
      *---------------------------------------------------------------
      *
     C*                  exsr      $tfarr
     C*                  exsr      $tsarr
     C*                  exsr      $tparr
      *
     C                   endif                                                  fi not %eof
     C                   enddo                                                  uod %eof
     C                   endif                                                  fi %eof
      *
     C                   XFOOT     DA            DTDAAM
     C                   XFOOT     PA            DTPDAM
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $tfarr - Load farm total arrays
      *----------------------------------------------------------------
      *
      * Arrays for Deduction/Add-ons and premiums/discounts
      *
     C     $tfarr        begsr
      *
     C                   if        cjcjfl = 'D'                                 if farm deduction
     C                   eval      d = 1
     C     cjcjcd        lookup    fdd(d)                                 50
     C                   if        %equal                                       if farm da
     C                   eval      a += 1
     C                   eval      fdd(a) = cjcjcd
     C                   eval      fda(a) = cjcjam
     C                   else
     C                   eval      a += 1
     C                   eval      fda(a) = cjcjam
     C                   endif                                                  fi farm da
     C                   else
      *
      * Load premium/discounts into array
      *
     C                   eval      p = 1
     C     cjcjcd        lookup    fpd(p)                                 50
     C                   if        %equal                                       if farm pd
     C                   eval      b += 1
     C                   eval      fpd(b) = cjcjcd
     C                   eval      fpa(b) = cjcjam
     C                   else
     C                   eval      fpa(p) = cjcjam
     C                   endif                                                  fi farm pd
     C                   endif                                                  fi farm deduction
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $tsarr - Load array for sales type totals
      *----------------------------------------------------------------
      *
      * Arrays for deductions/Add-ons and premiums/discounts
      *
     C     $tsarr        begsr
      *
     C                   if        cjcjfl = 'D'                                 if deduction
     C                   eval      D = 1
     C     cjcjcd        lookup    sdd(d)                                 50
     C                   if        %equal                                       if found (not)
     C                   eval      m += 1
     C                   eval      sdd(m) = cjcjcd
     C                   eval      sda(m) = cjcjam
     C                   else
     C                   eval      sda(d) = cjcjam
     C                   endif                                                  fi found
     C                   else
      *
      * Load premium/discounts into array
      *
     C                   eval      p = 1
     C     cjcjcd        lookup    spd(p)                                 50
     C                   if        %equal                                       if prem/disc
     C                   eval      n += 1
     C                   eval      spd(n) = cjcjcd
     C                   eval      spa(n) = cjcjam
     C                   else
     C                   eval      spa(p) = cjcjam
     C                   endif                                                  fi prem/disc
     C                   endif                                                  f1 deduction
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $tparr - Load array for phase totals
      *----------------------------------------------------------------
      *
      * Arrays for Deductions/Add-ons and premiums/discounts
      *
     C     $tparr        begsr
      *
     C                   if        cjcjfl = 'D'                                 if deduction
     C                   eval      d = 1
     C     cjcjcd        lookup    pdd(d)                                 50
     C                   if        %equal                                       if found (not)
     C                   eval      g += 1
     C                   eval      pdd(g) = cjcjcd
     C                   eval      pda(g) = cjcjam
     C                   else
     C                   eval      pda(d) = cjcjam
     C                   endif                                                  fi found
     C                   else
      *
      * Load premium/discounts into array
      *
     C                   eval      p = 1
     C     cjcjcd        lookup    ppd(p)                                 50
     C                   if        %equal                                       if prem/disc
     C                   eval      h += 1
     C                   eval      ppd(h) = cjcjcd
     C                   eval      ppa(h) = cjcjam
     C                   else
     C                   eval      ppa(p) = cjcjam
     C                   endif                                                  fi prem/disc
     C                   endif                                                  fi deduction
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $load - Load file hsp4841 values
      *----------------------------------------------------------------
      *
     C     $load         begsr
      *
      * Move HSP384 fields to HSP4841 fields
     C                   eval      p1_wfmvsn   = wfmvsn                         database fields
     C                   eval      p1_wfstcd   = wfstcd
     C                   eval      p1_wftpcd   = wftpcd
     C                   eval      p1_wfrcdt   = wfrcdt
     C                   eval      p1_wffsbo   = wffsbo
     C                   eval      p1_wffscd   = wffscd
     C                   eval      p1_wfcvno   = wfcvno
     C                   eval      p1_wfchno   = wfchno
     C                   eval      p1_wfchdt   = wfchdt
     C                   eval      p1_wflnno   = wflnno
     C                   eval      p1_wfptcd   = wfptcd
     C                   eval      p1_wfppcd   = wfppcd
     C                   eval      p1_wfalph   = oualph                         Calc fields
     C                   eval      p1_wftano   = cdtano
     C                   eval      p1_wfhgsn   = hghgsn
     C                   eval      p1_wfhgcd   = hghgcd
     C                   eval      p1_wfbscd   = hgbscd
     C                   eval      p1_wflvhd   = cdlvhd
     C                   eval      p1_wflvlb   = cdlvlb
     C                   eval      p1_wfdohd   = cddohd
     C                   eval      p1_wfdolb   = cddolb
     C                   eval      p1_wfcdydhd = wfcdydhd
     C                   eval      p1_wfcdydlb = wfcdydlb
     C                   eval      p1_wfcrlb   = cdcrlb
     C                   eval      p1_wfbaam   = cdbaam
     C                   eval      p1_wfprds   = pd(1)
     C                   eval      p1_wfpram   = pa(1)
     C                   eval      p1_wfgram   = cdgram
     C                   eval      p1_wfdads   = dd(1)
     C                   eval      p1_wfdaam   = da(1)
     C                   eval      p1_wfntam   = dtntam
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $load2 - Load file hsp4841 values for additional premiums and Ded/Adds
      *----------------------------------------------------------------
      *
     C     $load2        begsr
      *
     C                   eval      idx = 2
     C                   dou       pd(idx) = *blanks and
     C                             dd(idx) = *blanks
     C
     C                   if        pd(idx) <> *blanks or
     C                             dd(idx) <> *blanks
      *
      * Move HSP384 fields to HSP4841 fields
     C                   eval      p1_wfmvsn   = wfmvsn                         database fields
     C                   eval      p1_wfstcd   = wfstcd
     C                   eval      p1_wftpcd   = wftpcd
     C                   eval      p1_wfrcdt   = wfrcdt
     C                   eval      p1_wffsbo   = wffsbo
     C                   eval      p1_wffscd   = wffscd
     C                   eval      p1_wfcvno   = wfcvno
     C                   eval      p1_wfchno   = wfchno
     C                   eval      p1_wfchdt   = wfchdt
     C                   eval      p1_wflnno   = wflnno
     C                   eval      p1_wfptcd   = wfptcd
     C                   eval      p1_wfppcd   = wfppcd
     C                   eval      p1_wfalph   = oualph                         Calc fields
     C                   eval      p1_wftano   = cdtano
     C                   eval      p1_wfhgsn   = hghgsn
     C                   eval      p1_wfhgcd   = hghgcd
     C                   eval      p1_wfbscd   = hgbscd
     C                   eval      p1_wflvhd   = cdlvhd
     C                   eval      p1_wflvlb   = cdlvlb
     C                   eval      p1_wfdohd   = cddohd
     C                   eval      p1_wfdolb   = cddolb
     C                   eval      p1_wfcdydhd = wfcdydhd
     C                   eval      p1_wfcdydlb = wfcdydlb
     C                   eval      p1_wfcrlb   = cdcrlb
     C                   eval      p1_wfbaam   = cdbaam
     C                   eval      p1_wfprds   = pd(idx)
     C                   eval      p1_wfpram   = pa(idx)
     C                   eval      p1_wfgram   = cdgram
     C                   eval      p1_wfdads   = dd(idx)
     C                   eval      p1_wfdaam   = da(idx)
     C                   eval      p1_wfntam   = dtntam
      *
     C                   write     wsrec
      *
     C                   eval      idx +=1
     C                   endif
     C                   enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * *inzsr - Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key values for file HSL065 - Check Adjustments
     C     k1l065        klist
     C                   kfld                    cdchdt
     C                   kfld                    cdcvno
     C                   kfld                    cdchno
     C                   kfld                    cdlnno
      *
     C     k2l064        klist
     C                   kfld                    wfmvsn
     C                   kfld                    wfcvno
     C                   kfld                    wfchno
     C                   kfld                    wfchdt
     C                   kfld                    wflnno
      *
      * PRINT FIELDS FOR THE DETAIL LINE
      *
      * PRINT FIELD FOR HEADINGS
      *
     C     *LIKE         DEFINE    PPPPDS        HPPPDS
     C     *LIKE         DEFINE    STSTDS        HDSTDS
     C                   MOVE      *BLANK        HDTPDS           15
      *
      * PRINT FIELDS FOR THE PRODUCTION PHASE TOTAL LINE
      *
     C                   Z-ADD     0             tpdohd            9 0
     C                   Z-ADD     0             tplvhd            9 0
     C                   Z-ADD     0             tpcdydhd          9 0
      *
     C                   Z-ADD     0             tpdolb           11 0
     C                   Z-ADD     0             tplvlb           11 0
     C                   Z-ADD     0             tpcdydlb         11 0
      *
     C                   Z-ADD     0             TPCRLB           11 0
     C                   Z-ADD     0             TPBAAM           11 2
     C                   Z-ADD     0             TPGRAM           11 2
     C                   Z-ADD     0             TPNTAM           11 2
     C                   Z-ADD     0             TPDAAM           11 2
     C                   Z-ADD     0             TPPDAM           11 2
      *
      * PRINT FIELDS FOR THE SALES TYPE TOTAL LINE
      *
     C     *LIKE         DEFINE    tpdohd        tsdohd
     C     *LIKE         DEFINE    tplvhd        tslvhd
     C     *LIKE         DEFINE    tpcdydhd      tscdydhd
      *
     C     *LIKE         DEFINE    tpdolb        tsdolb
     C     *LIKE         DEFINE    tplvlb        tslvlb
     C     *LIKE         DEFINE    tpcdydlb      tscdydlb
      *
     C     *LIKE         DEFINE    TPCRLB        TSCRLB
     C     *LIKE         DEFINE    TPBAAM        TSBAAM
     C     *LIKE         DEFINE    TPGRAM        TSGRAM
     C     *LIKE         DEFINE    TPNTAM        TSNTAM
     C     *LIKE         DEFINE    TPDAAM        TSDAAM
     C     *LIKE         DEFINE    TPPDAM        TSPDAM
      *
      * PRINT FIELDS FOR THE FARM TOTAL LINE
      *
     C     *LIKE         DEFINE    tpdohd        tfdohd
     C     *LIKE         DEFINE    tplvhd        tflvhd
     C     *LIKE         DEFINE    tpcdydhd      tfcdydhd
      *
     C     *LIKE         DEFINE    tpdolb        tfdolb
     C     *LIKE         DEFINE    tplvlb        tflvlb
     C     *LIKE         DEFINE    tpcdydlb      tfcdydlb
      *
     C     *LIKE         DEFINE    TPCRLB        TFCRLB
     C     *LIKE         DEFINE    TPBAAM        TFBAAM
     C     *LIKE         DEFINE    TPGRAM        TFGRAM
     C     *LIKE         DEFINE    TPNTAM        TFNTAM
     C     *LIKE         DEFINE    TPDAAM        TFDAAM
     C     *LIKE         DEFINE    TPPDAM        TFPDAM
      *
      *  setup the user selections in the email
      *
     C                   if        ldfsbo = *blank
     C                   eval      ldfsboe = 'ALL  '
     C*                  else
     C*                  eval      ldfsboe = ldfsbo
     C                   endif
      *
     C                   if        ldppcd = *blank
     C                   eval      ldppcde = 'ALL  '
     C*                  else
     C*                  eval      ldppcde = ldppcd
     C                   endif
      *
     C                   if        ldptcd = *blank
     C                   eval      ldptcde = 'ALL  '
     C*                  else
     C*                  eval      ldptcde = ldptcd
     C                   endif
      *
     C                   if        ldstcd = *blank
     C                   eval      ldstcde = 'ALL  '
     C*                  else
     C*                  eval      ldstcde = ldstcd
     C                   endif
      *
     C                   if        ldfscd = *zero
     C                   eval      ldfscde = 'ALL  '
     C*                  else
     C*                  eval      ldfscde = %char(ldfscd)
     C                   endif
      *
     C                   if        ldbscd = *blank
     C                   eval      ldbscde = 'ALL  '
     C*                  else
     C*                  eval      ldbscde = ldbscd
     C                   endif
      *
     C                   if        ldhgcd = *blank
     C                   eval      ldhgcde = 'ALL    '
     C*                  else
     C*                  eval      ldhgcde = ldhgcd
     C                   endif
      *
     C                   if        ldcvno = *zero
     C                   eval      ldcvnoe = 'ALL    '
     C*                  else
     C*                  eval      ldcvnoe = %char(ldcvno)
     C                   endif
      *
      * SET UP A FIRST TIME FLAG
      * SET UP A DASHED LINE FOR UNDERLINING THE HEADING
      * RETRIEVE TIME FOR REPORT HEADING
      * INITIALIZE DATE FIELD
      *
     C                   MOVE      YES           FIRST             1
     C                   MOVEL     *ALL'-'       DASH            198
     C                   TIME                    RTIME             6 0
     C                   Z-ADD     0             WKCYMD            8 0
      *
     C                   ENDSR
      /EJECT
