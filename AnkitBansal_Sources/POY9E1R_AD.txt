// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POY9E1R
// ?Date: 14.08.2025 Time: 03:39:37
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?SDN440 added to get M3LIVE flag
// Call program RTV Default Co No App XF.
CALL PROGRAM(RTV Default Co No App XF) ('PMD4XFR');
PARAMETER(*MISSING);
PARAMETER(LCL.Company_Number_Alpha);

// LCL.Company Number = CVTVAR(LCL.Company Number Alpha)
LCL.Company_Number = CVTVAR(LCL.Company_Number_Alpha);

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(LCL.Company_Number);
PARAMETER('M3LIVE');
PARAMETER(LCL.Live_with_M3);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Initialize detail screen (new record)

// DTL.Payee Type = CND.Broker
DTL.Payee_Type = 'BR';

// DTL.Condition Desc. 1  USR = Condition name of DTL.Payee Type
DTL.Condition_Desc_1_USR = RTVCND(DTL.Payee_Type);

//?USER: Initialize detail screen (existing record)

// Call program Get Vendor Address    RT.
CALL PROGRAM(Get Vendor Address    RT) ('VNDFAXR');
PARAMETER(WRK.*Return_code);
PARAMETER(DTL.Broker_G_L_Vendor_Number);
PARAMETER(DTL.Pass_Name);
PARAMETER(WRK.Address_1);
PARAMETER(WRK.Address_2);
PARAMETER(WRK.Address_3);
PARAMETER(WRK.VND_City);
PARAMETER(WRK.VND_State);
PARAMETER(WRK.VND_Zip);
PARAMETER(WRK.Area_Code);
PARAMETER(WRK.Telephone);
PARAMETER(WRK.Fax_Area_Code_#);
PARAMETER(WRK.Fax_Telephone);
PARAMETER(WRK.Fax_Area_Code_#_2);
PARAMETER(WRK.Fax_Telephone_2);
PARAMETER(WRK.Vendor_1099);
PARAMETER(WRK.Vendor_Tax_Id);
PARAMETER(WRK.VND_Country);
PARAMETER(WRK.Status_Y_or_N);

EXECUTE FUNCTION(Sales Route Desc      DRV) TYPE(DRVFLD)                        AC1575490;
PARAMETER(DTL.Sales_Route_Desc_DRV);
PARAMETER(DTL.Salesperson_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1270614;
 PARAMETER(PAR.Sales_Route_Code);
 PARAMETER(PAR.Sales_Route_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// DTL.Description 21A Usr = Condition name of DTL.Broker Fax/Email Inv
DTL.Description_21A_Usr = RTVCND(DTL.Broker_Fax_Email_Inv);

// DTL.Description. . . . . . . = Condition name of DTL.Record Status
DTL.Description = RTVCND(DTL.Record_Status);

// DTL.Condition Desc. 1  USR = Condition name of DTL.Payee Type
DTL.Condition_Desc_1_USR = RTVCND(DTL.Payee_Type);

// DTL.Text USR 6 = DB1.Broker EDI Trade Partner
DTL.Text_USR_6 = DB1.Broker_EDI_Trade_Partner;

// DTL.Text USR 20 = CON.*BLANK
DTL.Text_USR_20 = *BLANK;

//?Val Record Status Change
CASE;

// IF DTL.Record Status is Inactive
IF DTL.Record_Status = 'I';

// LCL.Record Status = CND.Inactive
LCL.Record_Status = 'I';

// Call program Del Verification      XF.
CALL PROGRAM(Del Verification      XF) ('PPIVXFR');
PARAMETER(DTL.Broker_Code);
PARAMETER(LCL.Record_Status);

CASE;

// IF LCL.Record Status is Inactive
IF LCL.Record_Status = 'I';

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Text USR 20 = CON.Record Sts must ="A"
DTL.Text_USR_20 = 'Record Sts must ="A"';

ENDIF;

ENDIF;

//?T8763 01/21/17 DN  - Save M3 Supplier ID & Populate It on Screen.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.M3 Supplier ID = DTL.Broker M3 Supplier
DTL.M3_Supplier_ID = DTL.Broker_M3_Supplier;

// PAR.M3 Supplier ID = DTL.M3 Supplier ID
PAR.M3_Supplier_ID = DTL.M3_Supplier_ID;

ENDIF;

//?USER: Validate detail screen fields

//?F4=Prompt
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.Broker State
IF PGM.*Cursor_field = DTL.Broker_State;

// Call program SEL State              SR.
CALL PROGRAM(SEL State              SR) ('CAAHSRR');
PARAMETER(DTL.Broker_State);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> DTL.Broker G/L Vendor Number
IF PGM.*Cursor_field = DTL.Broker_G_L_Vendor_Number;

// Call program Sel Vendor Address Acc UP.
CALL PROGRAM(Sel Vendor Address Acc UP) ('VNDACCS');
PARAMETER(WRK.*Return_code);
PARAMETER(DTL.Broker_G_L_Vendor_Number);
PARAMETER(WRK.Pass_Name);
PARAMETER(WRK.Address_1);
PARAMETER(WRK.Address_2);
PARAMETER(WRK.Address_3);
PARAMETER(WRK.VND_City);
PARAMETER(WRK.VND_State);
PARAMETER(WRK.VND_Zip);
PARAMETER(WRK.Area_Code);
PARAMETER(WRK.Telephone);
PARAMETER(WRK.Fax_Area_Code_#);
PARAMETER(WRK.Fax_Telephone);
PARAMETER(WRK.Fax_Area_Code_#_2);
PARAMETER(WRK.Fax_Telephone_2);
PARAMETER(WRK.Vendor_1099);
PARAMETER(WRK.Vendor_Tax_Id);
PARAMETER(WRK.VND_Country);
PARAMETER(WRK.Status_Y_or_N);

ENDIF;

ENDIF;

// DTL.Description 21A Usr = Condition name of DTL.Broker Fax/Email Inv
DTL.Description_21A_Usr = RTVCND(DTL.Broker_Fax_Email_Inv);

// DTL.Description. . . . . . . = Condition name of DTL.Record Status
DTL.Description = RTVCND(DTL.Record_Status);

// DTL.Condition Desc. 1  USR = Condition name of DTL.Payee Type
DTL.Condition_Desc_1_USR = RTVCND(DTL.Payee_Type);

//?Val State
CASE;

// IF DTL.Broker State is *Not Blank
IF DTL.Broker_State <> *BLANK;

EXECUTE FUNCTION(RTV Val State Cd,rtn   RT) TYPE(RTVOBJ) FILE(CAACREP)          AC1573109;
PARAMETER(DTL.Broker_State);
PARAMETER(WRK.*Return_code);
{
 //?USER: Processing if Data record not found

 // PAR.*Return code = CND.*Record does not exist
 PAR.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PAR.*Return code = CND.*Normal
 PAR.*Return_code = *BLANK;

 QUIT;

}


CASE;

// IF WRK.*Return code is *Normal
IF WRK.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Invalid State &1'
ERROR(USR3299);
MSGPARM(DTL.Broker_State);

ENDIF;

ENDIF;

//?Val G/L Vendor
CASE;

// IF DTL.Broker G/L Vendor Number is Entered
IF DTL.Broker_G_L_Vendor_Number <> *ZERO;

// Call program Get Vendor Address    RT.
CALL PROGRAM(Get Vendor Address    RT) ('VNDFAXR');
PARAMETER(WRK.*Return_code);
PARAMETER(DTL.Broker_G_L_Vendor_Number);
PARAMETER(DTL.Pass_Name);
PARAMETER(WRK.Address_1);
PARAMETER(WRK.Address_2);
PARAMETER(WRK.Address_3);
PARAMETER(WRK.VND_City);
PARAMETER(WRK.VND_State);
PARAMETER(WRK.VND_Zip);
PARAMETER(WRK.Area_Code);
PARAMETER(WRK.Telephone);
PARAMETER(WRK.Fax_Area_Code_#);
PARAMETER(WRK.Fax_Telephone);
PARAMETER(WRK.Fax_Area_Code_#_2);
PARAMETER(WRK.Fax_Telephone_2);
PARAMETER(WRK.Vendor_1099);
PARAMETER(WRK.Vendor_Tax_Id);
PARAMETER(WRK.VND_Country);
PARAMETER(WRK.Status_Y_or_N);

CASE;

// IF WRK.*Return code is *Normal
IF WRK.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Invalid G/L Vendor Nbr &1'
ERROR(USR3298);
MSGPARM(DTL.Broker_G_L_Vendor_Number);

ENDIF;

ENDIF;

//?Val Record Status Change
CASE;

// IF DTL.Record Status is Inactive
IF DTL.Record_Status = 'I';

// LCL.Record Status = CND.Inactive
LCL.Record_Status = 'I';

// Call program Del Verification      XF.
CALL PROGRAM(Del Verification      XF) ('PPIVXFR');
PARAMETER(DTL.Broker_Code);
PARAMETER(LCL.Record_Status);

CASE;

// IF LCL.Record Status is Inactive
IF LCL.Record_Status = 'I';

// IF *OTHERWISE
IF *OTHERWISE;

//?Change to use this message go record status is RI
// Send error message - 'Record Sts must be "A"'
ERROR(USR4167);
MSGPARM(DTL.Record_Status);

ENDIF;

ENDIF;

//?CALC: Detail screen function fields

EXECUTE FUNCTION(Sales Route Desc      DRV) TYPE(DRVFLD)                        AC1575490;
PARAMETER(DTL.Sales_Route_Desc_DRV);
PARAMETER(DTL.Salesperson_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1270614;
 PARAMETER(PAR.Sales_Route_Code);
 PARAMETER(PAR.Sales_Route_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Validate detail screen relations

// DTL.Broker EDI Trade Partner = DTL.Text USR 6
DTL.Broker_EDI_Trade_Partner = DTL.Text_USR_6;

//?T8763 01/21/17 DN  - Process M3 Supplier Search Request/Validate.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.M3 Supplier ID Chgd? USR = CND.no
PAR.M3_Supplier_ID_Chgd_USR = 'N';

//?F4=M3 Supplier ID.
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.M3 Supplier ID
AND PGM.*Cursor_field = DTL.M3_Supplier_ID;

// Call program Sel M3 Supplier       SL.
CALL PROGRAM(Sel M3 Supplier       SL) ('PLV2SRR');
PARAMETER(DTL.M3_Supplier_ID);
PARAMETER(PAR.M3_Supplier_Name);
PARAMETER(PAR.M3_Address_Line_1);
PARAMETER(PAR.M3_Address_Line_2);
PARAMETER(PAR.M3_Address_Line_3);
PARAMETER(PAR.M3_Address_Line_4);
PARAMETER(PAR.M3_City);
PARAMETER(PAR.M3_State);
PARAMETER(PAR.M3_Postal_Code);
PARAMETER(PAR.M3_Telephone_No_1);
PARAMETER(PAR.M3_Telephone_No_2);
PARAMETER(PAR.M3_Fax_Telephone);
PARAMETER(PAR.M3_Supplier_Tax_ID);
PARAMETER(PAR.M3_Country_Code);
PARAMETER(PAR.M3_Supplier_Group);
PARAMETER(PAR.M3_Supplier_Division);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?Validate if M3 Supplier ID Changed.
CASE;

// IF DTL.M3 Supplier ID NE PAR.M3 Supplier ID
IF DTL.M3_Supplier_ID <> PAR.M3_Supplier_ID;

CASE;

// IF DTL.M3 Supplier ID is Entered
IF DTL.M3_Supplier_ID <> *BLANK;

//?Call HPE Cross Model Program to Validate.
// Call program Exc Chk Suplr/Div ExistXF.
CALL PROGRAM(Exc Chk Suplr/Div ExistXF) ('PWA1XFR');
PARAMETER(DTL.M3_Supplier_ID);
PARAMETER(*BLANK);
PARAMETER(LCL.M3_Supplier_ID_Exist_USR);
PARAMETER(LCL.M3_Division_Match_USR);

//?Check if M3 Supplier ID exist. If not, send error msg.
CASE;

// IF LCL.M3 Supplier ID Exist USR is yes
IF LCL.M3_Supplier_ID_Exist_USR = 'Y';

//?Set Flag to Update.
// PAR.M3 Supplier ID Chgd? USR = CND.yes
PAR.M3_Supplier_ID_Chgd_USR = 'Y';

//?Check if M3 Supplier ID exist. If not, send error msg.
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'M3 Supplier ID &1 not found.'
ERROR(USR4971);
MSGPARM(DTL.M3_Supplier_ID);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

//?M3 Supplier ID Changed to Blank, Set Flag to Update.
// PAR.M3 Supplier ID Chgd? USR = CND.yes
PAR.M3_Supplier_ID_Chgd_USR = 'Y';

ENDIF;

ENDIF;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(Crt Broker            CR) TYPE(CRTOBJ) FILE(POC5REP)           AC1675583;
PARAMETER(DTL.Broker_Code);
PARAMETER(DTL.Broker_Name);
PARAMETER(DTL.Broker_Address_Line_1);
PARAMETER(DTL.Broker_Address_Line_2);
PARAMETER(DTL.Broker_City);
PARAMETER(DTL.Broker_State);
PARAMETER(DTL.Broker_Zip);
PARAMETER(DTL.Broker_Office_Manager);
PARAMETER(DTL.Broker_Telephone_Number);
PARAMETER(DTL.Broker_Fax_Number);
PARAMETER(DTL.Broker_Email_Address);
PARAMETER(DTL.Broker_G_L_Vendor_Number);
PARAMETER(DTL.Broker_unused_txt_1);
PARAMETER(DTL.M3_Supplier_ID);
PARAMETER(DTL.Broker_EDI_Trade_Partner);
PARAMETER(DTL.Broker_Fax_Email_Inv);
PARAMETER(DTL.Broker_Fax_Email_Prc_Sht);
PARAMETER(DTL.Payee_Type);
PARAMETER(DTL.Broker_unused_sts_4);
PARAMETER(DTL.Salesperson_Code);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Job_Time);
PARAMETER(DTL.User_Id);
PARAMETER(DTL.Job_Name);
PARAMETER(DTL.Job_Date);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg Broker            CH) TYPE(CHGOBJ) FILE(POC5REP)           AC1675584;
PARAMETER(DTL.Broker_Code);
PARAMETER(DTL.Broker_Name);
PARAMETER(DTL.Broker_Address_Line_1);
PARAMETER(DTL.Broker_Address_Line_2);
PARAMETER(DTL.Broker_City);
PARAMETER(DTL.Broker_State);
PARAMETER(DTL.Broker_Zip);
PARAMETER(DTL.Broker_Office_Manager);
PARAMETER(DTL.Broker_Telephone_Number);
PARAMETER(DTL.Broker_Fax_Number);
PARAMETER(DTL.Broker_Email_Address);
PARAMETER(DTL.Broker_G_L_Vendor_Number);
PARAMETER(DTL.Broker_unused_txt_1);
PARAMETER(DTL.M3_Supplier_ID);
PARAMETER(DTL.Broker_EDI_Trade_Partner);
PARAMETER(DTL.Broker_Fax_Email_Inv);
PARAMETER(DTL.Broker_Fax_Email_Prc_Sht);
PARAMETER(DTL.Payee_Type);
PARAMETER(DTL.Broker_unused_sts_4);
PARAMETER(DTL.Salesperson_Code);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Job_Time);
PARAMETER(DTL.User_Id);
PARAMETER(DTL.Job_Name);
PARAMETER(DTL.Job_Date);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


