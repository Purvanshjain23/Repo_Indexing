// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMHTE1R
// ?Date: 14.08.2025 Time: 03:43:09
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Rtv Default Print Opt RT) TYPE(RTVOBJ) FILE(CADRREP)           AC1277460;
PARAMETER(JOB.*USER);
PARAMETER(PAR.Default_Printer);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PGM.*Program mode = PAR.*Program mode
PGM.*Program_mode = PAR.*Program_mode;

CASE;

// IF PAR.*Program mode is *ADD
IF PAR.*Program_mode = 'ADD';

// KEY.Company Number = CND.Equal to zero
KEY.Company_Number = *ZERO;

// KEY.CDD Type = CND.Not Entered
KEY.CDD_Type = *BLANK;

// KEY.CDD Department Code = CND.Not Entered
KEY.CDD_Department_Code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// KEY.Company Number = PAR.Company Number
KEY.Company_Number = PAR.Company_Number;

// KEY.CDD Type = PAR.CDD Type
KEY.CDD_Type = PAR.CDD_Type;

// KEY.CDD Department Code = PAR.CDD Department Code
KEY.CDD_Department_Code = PAR.CDD_Department_Code;

ENDIF;

//?USER: Initialize key screen

CASE;

// IF KEY.*CMD key is *Prompt
IF KEY.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> KEY.Company Number
IF PGM.*Cursor_field = KEY.Company_Number;

// Call program SEL Company - plants   SR.
CALL PROGRAM(SEL Company - plants   SR) ('PPF2SRR');
PARAMETER(KEY.Company_Number);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// IF PGM.*Cursor field <IS> KEY.CDD Type
IF PGM.*Cursor_field = KEY.CDD_Type;

// Call program SEL Co Doc-Typ/Dpt pop SL.
CALL PROGRAM(SEL Co Doc-Typ/Dpt pop SL) ('PMHWSRR');
PARAMETER(LCL.Company_Number);
PARAMETER(KEY.CDD_Type);
PARAMETER(LCL.CDD_Department_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// IF PGM.*Cursor field <IS> KEY.CDD Department Code
IF PGM.*Cursor_field = KEY.CDD_Department_Code;

// Call program SEL Co Doc-Typ/Dpt pop SL.
CALL PROGRAM(SEL Co Doc-Typ/Dpt pop SL) ('PMHWSRR');
PARAMETER(LCL.Company_Number);
PARAMETER(LCL.CDD_Type);
PARAMETER(KEY.CDD_Department_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

ENDIF;

//?USER: Initialize detail screen (new record)

// DTL.Record Status = CND.Active
DTL.Record_Status = 'A';

// DTL.Hold File = CND.*YES
DTL.Hold_File = *YES;

// DTL.Output Queue = PAR.Default Printer
DTL.Output_Queue = PAR.Default_Printer;

// DTL.Source Drawer = CON.1
DTL.Source_Drawer = 1;

// DTL.Page Rotation = CND.*AUTO
DTL.Page_Rotation = *AUTO;

// DTL.Save File = CND.*NO
DTL.Save_File = *NO;

//?USER: Delete DBF record

EXECUTE FUNCTION(DLT Co Documnt Defts   DL) TYPE(DLTOBJ) FILE(PPAQREP)          AC1716928;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.CDD_Type);
PARAMETER(DTL.CDD_Department_Code);

//?USER: Validate detail screen fields

//?** Page Rotation cannot be blanks
CASE;

// IF DTL.Page Rotation is *Blanks
IF DTL.Page_Rotation = *BLANK;

// Send error message - 'Field cannot be blank'
ERROR(USR3741);
MSGPARM(DTL.Page_Rotation);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?** F4 on Overlay name
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.CDD Name of Overlay
IF PGM.*Cursor_field = DTL.CDD_Name_of_Overlay;

//?** F4 on Program or Printer File Name, fill in both
// Call program Zzz CoDocOverlay popup SL.
CALL PROGRAM(Zzz CoDocOverlay popup SL) ('PMHZSRR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.CDD_Type);
PARAMETER(DTL.CDD_Department_Code);
PARAMETER(DTL.CDD_Name_of_Overlay);
PARAMETER(LCL.CDD_Program_Name);
PARAMETER(LCL.CDD_Printer_File_Name);
PARAMETER(DTL.CDD_Additional_Object);
PARAMETER(DTL.CDD_Sender_Phone);
PARAMETER(DTL.CDD_Sender_Fax);
PARAMETER(DTL.Output_Queue);
PARAMETER(DTL.Hold_File);
PARAMETER(DTL.Save_File);
PARAMETER(DTL.Source_Drawer);
PARAMETER(DTL.Printer_Device_Type);
PARAMETER(DTL.Page_Length_2);
PARAMETER(DTL.Page_Width_2);
PARAMETER(DTL.Page_LPI);
PARAMETER(DTL.Page_CPI);
PARAMETER(DTL.Page_Overflow);
PARAMETER(DTL.Page_Rotation);
PARAMETER(DTL.CDD_Comment_1);
PARAMETER(DTL.CDD_Comment_2);
PARAMETER(DTL.CDD_Comment_3);
PARAMETER(DTL.CDD_Comment_4);
PARAMETER(DTL.CDD_Comment_5);
PARAMETER(LCL.Record_Status);

// IF PGM.*Cursor field <IS> DTL.CDD Program Name
IF PGM.*Cursor_field = DTL.CDD_Program_Name;

// OR PGM.*Cursor field <IS> DTL.CDD Printer File Name
OR PGM.*Cursor_field = DTL.CDD_Printer_File_Name;

//?** F4 on Overlay Name
// Call program Zzz CoDocOverlay popup SL.
CALL PROGRAM(Zzz CoDocOverlay popup SL) ('PMHZSRR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.CDD_Type);
PARAMETER(DTL.CDD_Department_Code);
PARAMETER(LCL.CDD_Name_of_Overlay);
PARAMETER(DTL.CDD_Program_Name);
PARAMETER(DTL.CDD_Printer_File_Name);
PARAMETER(DTL.CDD_Additional_Object);
PARAMETER(DTL.CDD_Sender_Phone);
PARAMETER(DTL.CDD_Sender_Fax);
PARAMETER(DTL.Output_Queue);
PARAMETER(DTL.Hold_File);
PARAMETER(DTL.Save_File);
PARAMETER(DTL.Source_Drawer);
PARAMETER(DTL.Printer_Device_Type);
PARAMETER(DTL.Page_Length_2);
PARAMETER(DTL.Page_Width_2);
PARAMETER(DTL.Page_LPI);
PARAMETER(DTL.Page_CPI);
PARAMETER(DTL.Page_Overflow);
PARAMETER(DTL.Page_Rotation);
PARAMETER(DTL.CDD_Comment_1);
PARAMETER(DTL.CDD_Comment_2);
PARAMETER(DTL.CDD_Comment_3);
PARAMETER(DTL.CDD_Comment_4);
PARAMETER(DTL.CDD_Comment_5);
PARAMETER(LCL.Record_Status);

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(CRT Co Documnt Defts   CR) TYPE(CRTOBJ) FILE(PPAQREP)          AC1716926;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.CDD_Type);
PARAMETER(DTL.CDD_Department_Code);
PARAMETER(DTL.CDD_Name_of_Overlay);
PARAMETER(DTL.CDD_Program_Name);
PARAMETER(DTL.CDD_Printer_File_Name);
PARAMETER(DTL.CDD_Additional_Object);
PARAMETER(DTL.CDD_Sender_Phone);
PARAMETER(DTL.CDD_Sender_Fax);
PARAMETER(DTL.Output_Queue);
PARAMETER(DTL.Hold_File);
PARAMETER(DTL.Save_File);
PARAMETER(DTL.Source_Drawer);
PARAMETER(DTL.Printer_Device_Type);
PARAMETER(DTL.Page_Length_2);
PARAMETER(DTL.Page_Width_2);
PARAMETER(DTL.Page_LPI);
PARAMETER(DTL.Page_CPI);
PARAMETER(DTL.Page_Overflow);
PARAMETER(DTL.Page_Rotation);
PARAMETER(DTL.CDD_Valid_Name_1_Unused);
PARAMETER(DTL.CDD_Valid_Name_2_Unused);
PARAMETER(DTL.CDD_Valid_Name_3_Unused);
PARAMETER(DTL.CDD_Copies);
PARAMETER(DTL.CDD_Number_2_Unused_3_0);
PARAMETER(DTL.CDD_Number_3_Unused_3_0);
PARAMETER(DTL.CDD_Number_4_Unused_5_0);
PARAMETER(DTL.CDD_Number_5_Unused_5_0);
PARAMETER(DTL.CDD_Comment_1);
PARAMETER(DTL.CDD_Comment_2);
PARAMETER(DTL.CDD_Comment_3);
PARAMETER(DTL.CDD_Comment_4);
PARAMETER(DTL.CDD_Comment_5);
PARAMETER(DTL.CDD_Unused_Sts_1_1);
PARAMETER(DTL.CDD_Unused_Sts_1_2);
PARAMETER(DTL.CDD_Unused_Sts_2_1);
PARAMETER(DTL.CDD_Unused_Sts_2_2);
PARAMETER(DTL.CDD_Unused_Text_1);
PARAMETER(DTL.CDD_Unused_Text_2);
PARAMETER(DTL.CDD_Unused_Text_3);
PARAMETER(DTL.CDD_Unused_Text_4);
PARAMETER(DTL.CDD_Unused_Text_5);
PARAMETER(DTL.CDD_Unused_Date_1);
PARAMETER(DTL.CDD_Unused_Date_2);
PARAMETER(DTL.CDD_Unused_Date_3);
PARAMETER(DTL.CDD_Unused_Time_1);
PARAMETER(DTL.CDD_Unused_Time_2);
PARAMETER(DTL.CDD_Unused_Time_3);
PARAMETER(DTL.Record_Status);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Create_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(CHG Co Documnt Defts   CH) TYPE(CHGOBJ) FILE(PPAQREP)          AC1716927;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.CDD_Type);
PARAMETER(DTL.CDD_Department_Code);
PARAMETER(DTL.CDD_Name_of_Overlay);
PARAMETER(DTL.CDD_Program_Name);
PARAMETER(DTL.CDD_Printer_File_Name);
PARAMETER(DTL.CDD_Additional_Object);
PARAMETER(DTL.CDD_Sender_Phone);
PARAMETER(DTL.CDD_Sender_Fax);
PARAMETER(DTL.Output_Queue);
PARAMETER(DTL.Hold_File);
PARAMETER(DTL.Save_File);
PARAMETER(DTL.Source_Drawer);
PARAMETER(DTL.Printer_Device_Type);
PARAMETER(DTL.Page_Length_2);
PARAMETER(DTL.Page_Width_2);
PARAMETER(DTL.Page_LPI);
PARAMETER(DTL.Page_CPI);
PARAMETER(DTL.Page_Overflow);
PARAMETER(DTL.Page_Rotation);
PARAMETER(DTL.CDD_Valid_Name_1_Unused);
PARAMETER(DTL.CDD_Valid_Name_2_Unused);
PARAMETER(DTL.CDD_Valid_Name_3_Unused);
PARAMETER(DTL.CDD_Copies);
PARAMETER(DTL.CDD_Number_2_Unused_3_0);
PARAMETER(DTL.CDD_Number_3_Unused_3_0);
PARAMETER(DTL.CDD_Number_4_Unused_5_0);
PARAMETER(DTL.CDD_Number_5_Unused_5_0);
PARAMETER(DTL.CDD_Comment_1);
PARAMETER(DTL.CDD_Comment_2);
PARAMETER(DTL.CDD_Comment_3);
PARAMETER(DTL.CDD_Comment_4);
PARAMETER(DTL.CDD_Comment_5);
PARAMETER(DTL.CDD_Unused_Sts_1_1);
PARAMETER(DTL.CDD_Unused_Sts_1_2);
PARAMETER(DTL.CDD_Unused_Sts_2_1);
PARAMETER(DTL.CDD_Unused_Sts_2_2);
PARAMETER(DTL.CDD_Unused_Text_1);
PARAMETER(DTL.CDD_Unused_Text_2);
PARAMETER(DTL.CDD_Unused_Text_3);
PARAMETER(DTL.CDD_Unused_Text_4);
PARAMETER(DTL.CDD_Unused_Text_5);
PARAMETER(DTL.CDD_Unused_Date_1);
PARAMETER(DTL.CDD_Unused_Date_2);
PARAMETER(DTL.CDD_Unused_Date_3);
PARAMETER(DTL.CDD_Unused_Time_1);
PARAMETER(DTL.CDD_Unused_Time_2);
PARAMETER(DTL.CDD_Unused_Time_3);
PARAMETER(DTL.Record_Status);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 PARAMETER(DB1.Change_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


