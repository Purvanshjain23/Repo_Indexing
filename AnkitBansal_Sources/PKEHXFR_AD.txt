// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKEHXFR
// ?Date: 14.08.2025 Time: 02:51:29
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//?length from 5 to 7.
ENDDO;

// PAR.Held Over Records Y/N = CND.No
PAR.Held_Over_Records_Y_N = 'N';

// PAR.Tattoo is paid Usr = CND.No
PAR.Tattoo_is_paid_Usr = 'N';

// PAR.Tot Frt Spdb aft pay Usr = CON.*ZERO
PAR.Tot_Frt_Spdb_aft_pay_Usr = *ZERO;

// PAR.Frt Amt spread Usr = CON.*ZERO
PAR.Frt_Amt_spread_Usr = *ZERO;

EXECUTE FUNCTION(Rtv Frt Alloc Fields  RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1183717;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.BOL_Freight_UOM);
PARAMETER(PAR.BOL_Freight_Unit_Amt);
PARAMETER(PAR.BOL_Freight_Amt);
PARAMETER(PAR.BOL_Freight_Allocation);
PARAMETER(PAR.BOL_Head_Received);
PARAMETER(PAR.BOL_Live_Wgt_Received);
PARAMETER(PAR.BOL_Head_Received_Market);
PARAMETER(PAR.Tattoo_is_paid_Usr);
PARAMETER(PAR.Held_Over_Records_Y_N);
PARAMETER(PAR.Tot_Frt_Spdb_aft_pay_Usr);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 EXECUTE FUNCTION(Chk tatto Paid for Bol RT) TYPE(RTVOBJ) FILE(PKA1CPP)          AB1183687;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(PAR.Tattoo_is_paid_Usr);
 PARAMETER(PAR.Held_Over_Records_Y_N);
 PARAMETER(PAR.Tot_Frt_Spdb_aft_pay_Usr);
 {
  //?USER: Initialize routine

  // PAR.Tot Frt Spdb aft pay Usr = CON.*ZERO
  PAR.Tot_Frt_Spdb_aft_pay_Usr = *ZERO;

  // PAR.Held Over Records Y/N = CND.No
  PAR.Held_Over_Records_Y_N = 'N';

  // PAR.Tattoo is paid Usr = CND.No
  PAR.Tattoo_is_paid_Usr = 'N';

  //?USER: Process Data record

  //?If one tattoo is paid but freight was spread then accumulate
  //?what is paid, for held over respread problem
  //?when this probelm goes away, then just flag that there is one paid
  CASE;

  // IF DB1.TH Payment Sts is Paid Anything
  IF DB1.TH_Payment_Sts = 'PL'/'PC'/'NC'/'NL';

  //?CHECK IF FREIGHT AMOUNT IS IN RECORD
  CASE;

  // IF DB1.TH Freight Amount is Not Zeros
  IF DB1.TH_Freight_Amount <> *ZERO;

  // PAR.Tattoo is paid Usr = CND.Yes
  PAR.Tattoo_is_paid_Usr = 'Y';

  ENDIF;

  // PAR.Tot Frt Spdb aft pay Usr = PAR.Tot Frt Spdb aft pay Usr + DB1.TH Freight Amo
  PAR.Tot_Frt_Spdb_aft_pay_Usr = PAR.Tot_Frt_Spdb_aft_pay_Usr + DB1.TH_Freight_Amount;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?CHECK FOR HELD OVER RECORD
  CASE;

  // IF DB1.TH Held Over Record is Yes
  IF DB1.TH_Held_Over_Record = 'Y';

  // OR DB1.TH Held Over is greater than 0
  OR DB1.TH_Held_Over > *ZERO;

  // PAR.Held Over Records Y/N = CND.Yes
  PAR.Held_Over_Records_Y_N = 'Y';

  ENDIF;

  ENDIF;

 }

}


CASE;

// IF PAR.BOL Freight Allocation is Freight is not Allocated
IF PAR.BOL_Freight_Allocation = *BLANK;

// IF PAR.Tattoo is paid Usr is No
IF PAR.Tattoo_is_paid_Usr = 'N';

// IF PAR.Held Over Records Y/N is Yes
IF PAR.Held_Over_Records_Y_N = 'Y';

// AND PAR.Tot Frt Spdb aft pay Usr is Not Zeros
AND PAR.Tot_Frt_Spdb_aft_pay_Usr <> *ZERO;

//?*If allocated and a tattoo is paid for this load and frt is spread on
//?*the wrong tattoo then we need to respread until fix in held overs
//?Correction held over and then you can remove this section
//?Correction to freight: Frt in Held over is not getting corrected
//?on using the correct percent or something in old record vs new held over
//?In some cases you could have all of the freight on the org
//?and none on the new
//?or you could have the higher in the ord with lower in the head recv
// PAR.Frt Amt spread Usr = PAR.BOL Freight Amt - PAR.Tot Frt Spdb aft pay Usr
PAR.Frt_Amt_spread_Usr = PAR.BOL_Freight_Amt - PAR.Tot_Frt_Spdb_aft_pay_Usr;

// WRK.BOL Freight Amt = PAR.BOL Freight Amt
WRK.BOL_Freight_Amt = PAR.BOL_Freight_Amt;

// WRK.BOL Freight UOM = PAR.BOL Freight UOM
WRK.BOL_Freight_UOM = PAR.BOL_Freight_UOM;

// Call program Clc Frght Allctn/UnAl  XF.
CALL PROGRAM(Clc Frght Allctn/UnAl  XF) ('PKQ6XFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(WRK.BOL_Freight_UOM);
PARAMETER(WRK.BOL_Freight_Unit_Amt);
PARAMETER(PAR.Frt_Amt_spread_Usr);
PARAMETER(PAR.BOL_Freight_Allocation);
PARAMETER(PAR.BOL_Head_Received);
PARAMETER(PAR.BOL_Live_Wgt_Received);
PARAMETER(PAR.BOL_Head_Received_Market);
PARAMETER('Y');

ENDIF;

