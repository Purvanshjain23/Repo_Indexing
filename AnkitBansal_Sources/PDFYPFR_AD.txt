// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDFYPFR
// ?Date: 14.08.2025 Time: 12:03:50
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?*** Modification Log ***
//?TPA071607 - Authorized Salesperson no longer used in this file
//?Field R8CD and associated description removed from detail format.
EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

//?USER: Record selection processing

//?Validate Salesperson if selected
CASE;

// IF PAR.Salesperson Code is entered
IF PAR.Salesperson_Code <> *BLANK;

CASE;

// IF PAR.Salesperson Code NE DB1.Salesperson Code
IF PAR.Salesperson_Code <> DB1.Salesperson_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Validate Manager Level if selected
CASE;

// IF PAR.Manager Level Code is Entered
IF PAR.Manager_Level_Code <> *BLANK;

CASE;

// IF PAR.Manager Level Code NE DB1.Manager Level Code
IF PAR.Manager_Level_Code <> DB1.Manager_Level_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Validate VP Level if selected
CASE;

// IF PAR.VP Level Code is Entered
IF PAR.VP_Level_Code <> *BLANK;

CASE;

// IF PAR.VP Level Code NE DB1.VP Level Code
IF PAR.VP_Level_Code <> DB1.VP_Level_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Validate Position Level if selected
CASE;

// IF PAR.Position Level is Valid Entries
IF PAR.Position_Level = 'M'/'S'/'V';

CASE;

// IF PAR.Position Level NE DB1.Position Level
IF PAR.Position_Level <> DB1.Position_Level;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Validate Record Status if selected
CASE;

// IF PAR.Record Status is Valid Entries
IF PAR.Record_Status = 'A'/'D'/'I';

CASE;

// IF PAR.Record Status NE DB1.Record Status
IF PAR.Record_Status <> DB1.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: On print of first page format

// 1PG.Salesperson Code = PAR.Salesperson Code
X1PG_Salesperson_Code = PAR.Salesperson_Code;

EXECUTE FUNCTION(RTV Salesperson Name   RT) TYPE(RTVOBJ) FILE(CAAPREP)          AC1111501;
PARAMETER(X1PG_Salesperson_Code);
PARAMETER(X1PG_Salesperson_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// 1PG.Manager Level Code = PAR.Manager Level Code
X1PG_Manager_Level_Code = PAR.Manager_Level_Code;

EXECUTE FUNCTION(RTV Manager Descript   RT) TYPE(RTVOBJ) FILE(CAALREP)          AC1160582;
PARAMETER(X1PG_Manager_Level_Code);
PARAMETER(X1PG_Manager_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// 1PG.VP Level Code = PAR.VP Level Code
X1PG_VP_Level_Code = PAR.VP_Level_Code;

EXECUTE FUNCTION(RTV VP Level Descript  RT) TYPE(RTVOBJ) FILE(PDIFREP)          AC1275069;
PARAMETER(X1PG_VP_Level_Code);
PARAMETER(X1PG_VP_Level_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// 1PG.Position Level = PAR.Position Level
X1PG_Position_Level = PAR.Position_Level;

// 1PG.USR Description - 15 = Condition name of 1PG.Position Level
X1PG_USR_Description_15 = RTVCND(X1PG_Position_Level);

// 1PG.Record Status = PAR.Record Status
X1PG_Record_Status = PAR.Record_Status;

// 1PG.Status Description = Condition name of 1PG.Record Status
X1PG_Status_Description = RTVCND(X1PG_Record_Status);

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: On print of detail format

EXECUTE FUNCTION(RTV Salesperson Name   RT) TYPE(RTVOBJ) FILE(CAAPREP)          AC1111501;
PARAMETER(CUR.Salesperson_Code);
PARAMETER(CUR.Salesperson_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Manager Descript   RT) TYPE(RTVOBJ) FILE(CAALREP)          AC1160582;
PARAMETER(CUR.Manager_Level_Code);
PARAMETER(CUR.USR_Description_20);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV VP Level Descript  RT) TYPE(RTVOBJ) FILE(PDIFREP)          AC1275069;
PARAMETER(CUR.VP_Level_Code);
PARAMETER(CUR.VP_Level_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?TPA071607 - Authorized Salesperson removed from report
// CUR.USR Shortened name = Condition name of CUR.Position Level
CUR.USR_Shortened_name = RTVCND(CUR.Position_Level);

