// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDX3XFR
// ?Date: 14.08.2025 Time: 03:36:30
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?** Execute a CLRPFM PDNGCPP command
// Execute command - 'Clear Late Laods File'
EXECUTE COMMAND(USR2892);

//?** Build 12 weeks in the Late Loads for the Internet
EXECUTE FUNCTION(Bld Late Ld Intrnt Dts RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1574036;
PARAMETER(PAR.Company_Number);
PARAMETER(JOB.*Job_date);
{
 //?USER: Initialize routine

 // PAR.Count USR = CON.12
 PAR.Count_USR = 12;

 //?USER: Process Data record

 //?If twelve weeks have been built then quit
 CASE;

 // IF PAR.Count USR is Zero
 IF PAR.Count_USR = *ZERO;

 QUIT;

 ENDIF;

 CASE;

 // IF DB1.Day of Week is Saturday
 IF DB1.Day_of_Week = '7';

 // PAR.Week End Date        USR = DB1.Post to G/L Date
 PAR.Week_End_Date_USR = DB1.Post_to_G_L_Date;

 ENDIF;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // AND PAR.Week End Date        USR is entered
 AND PAR.Week_End_Date_USR <> *ZERO;

 EXECUTE FUNCTION(Crt Late Loads Internt CR) TYPE(CRTOBJ) FILE(PDNGCPP)          AC1574022;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(PAR.Week_End_Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 // PAR.Count USR = PAR.Count USR - CON.1
 PAR.Count_USR = PAR.Count_USR - 1;

 ENDIF;

}


EXECUTE FUNCTION(Bld Late Loads Internt RT) TYPE(RTVOBJ) FILE(PDNGCPP)          AC1574047;
PARAMETER(PAR.Company_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Late Loads Internt RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1574048;
 PARAMETER(DB1.Week_Begin_Date);
 PARAMETER(DB1.Week_End_Date);
 PARAMETER(PAR.Total_Loads);
 PARAMETER(PAR.Late_Loads);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?***** Change Log and Comments
  DO;

  //?** 06/29/2006 LJB TRF001
  //?** Select only Prepaid (ship method = PT or PR) and Load type
  //?** = Regular. If the On Time Y/N flag = N then add one to the
  //?** late loads counter.
  //?** The function Prt Late Deliv/Perf IF is no longer being used.
  ENDDO;

  //?USER: Process Data record

  //?If scheduled ship date GT than Week end date then QUIT
  CASE;

  // IF DB1.Scheduled Ship Date GT PAR.Week End Date
  IF DB1.Scheduled_Ship_Date > PAR.Week_End_Date;

  QUIT;

  ENDIF;

  //?** Select Load Type of Regular and Ship Method of Prepaid only
  CASE;

  // IF DB1.Load Type is Regular
  IF DB1.Load_Type = 'R';

  // AND DB1.Shipping Method is Prepaid
  AND DB1.Shipping_Method = 'PR'/'PT';

  // PAR.Total Loads = PAR.Total Loads + CON.1
  PAR.Total_Loads = PAR.Total_Loads + 1;

  //?** Count the On Time - Y/N = No records
  CASE;

  // IF DB1.On Time - (Y/N) is no
  IF DB1.On_Time_Y_N = 'N';

  // PAR.Late Loads = PAR.Late Loads + CON.1
  PAR.Late_Loads = PAR.Late_Loads + 1;

  ENDIF;

  ENDIF;

 }

 //?Calculate 'Percent On Time'
 CASE;

 // IF PAR.Total Loads NE WRK.ZERO
 IF PAR.Total_Loads <> WRK.ZERO;

 // Calc "Total On Time"
 PAR.Percent_On_Time_Loads = ( ( PAR.Total_Loads - PAR.Late_Loads ) / PAR.Total_Loads 'H' )
 * 100;

 ENDIF;

 EXECUTE FUNCTION(Chg Late Loads Internt CH) TYPE(CHGOBJ) FILE(PDNGCPP)          AC1574023;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Week_Begin_Date);
 PARAMETER(DB1.Week_End_Date);
 PARAMETER(PAR.Total_Loads);
 PARAMETER(PAR.Late_Loads);
 PARAMETER(PAR.Percent_On_Time_Loads);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


