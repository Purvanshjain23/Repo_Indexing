      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP252 - EDIT KILL DATA TO COPY TO HOG PRODUCTION
      *                      FROM HOG PROCUREMENT AND EVALUATION SYSTEM
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     09/06/95
      *
      * FUNCTION: THIS PROGRAM INTERFACES THE HOG PROCUREMENT AND
      *           EVALUATION SYSTEM TO THE HOG PRODUCTION SYSTEM.
      *
      *           ITS PURPOSE IS TO EDIT THE KILL DATA IN THE HOG
      *           PROCUREMENT AND EVALUATION SYSTEM PRIOR TO THE COPY
      *           OF THAT DATA TO THE HOG PRODUCTION SYSTEM.
      *
      *           ONLY KILL DATA FOR HOGS SENT TO THE GUYMON PROCESSING
      *           PLANT FROM SEABOARD'S OWN FARMS IS COPIED OVER.
      *
      *           THIS PROGRAM IS SUBMITTED BY HP453CL WHICH IS CALLED
      *           FROM HP453 THROUGH QCMDEXC.
      *
      *           IF THIS PROGRAM FINDS ANY ERRORS, AN LDA ERROR FLAG
      *           IS SET AND LOGIC IN HP453CL WILL TERMINATE THE COPY
      *           FUNCTION.
      *
      *           A LISTING IS GENERATED OF ALL RECORDS READ AND ERROR
      *           MESSAGES ARE PRINTED WHERE APPROPRIATE.
      *
      *  ERROR MESSAGES
      *
      *           ERROR MESSAGES ARE PRINTED FOR EACH RECORD THAT
      *           WILL PREVENT THE PERIOD FROM BEING CLOSED.
      *           THE MESSAGES ARE RETRIEVED THROUGH A
      *           CALL TO CLP UT80046A USING THE SAME USER MESSAGE
      *           FILE, ARRAYS AND ARRAY LOGIC AS IN THE INTERACTIVE
      *           PROGRAMS.  HOWEVER, THEY ARE PRINTED FROM THE CL
      *           USING THE COMMAND 'CLPRINT' THAT WAS CREATED BY
      *           ERNIE WALLACE.
      *
      *           QPRINT IS USED FOR THE OUTPUT FILE SINCE THE
      *           COMMAND 'CLPRINT' PRINTS TO QPRINT.
      *           QPRINT IS OVERRIDDEN IN THE SUBMISSION CLP
      *           TO 'SHARE = YES' TO ALLOW BOTH THIS RPG PROGRAM AND
      *           CLP UT80046A TO WRITE TO THE SAME PRINT FILE.
      *
      *           SINCE THE 'CLPRINT' COMMAND LOGIC IN UT80046A IS NOT
      *           BEING USED TO PRINT HEADINGS, COUNT LINES OR PAGE
      *           BREAK, THESE FUNCTIONS ARE CONTROLLED FROM THIS RPG
      *           PROGRAM BY COUNTING THE LINES.
      /EJECT
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/06/96  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELD 'BOL PRINTED COUNT' ADDED
      *           TO SALES MOVEMENT HEADER FILE.
      *
      * 06/05/96  LEANNE FEDOR
      *           REMOVED EDIT THAT REQUIRED THE PRODUCTION PHASE OF
      *           THE GROUP TO BE 'GROW FINISH'. ALL GROUPS ARE NOW
      *           VALID--NURSERY, GROW FINISH, BGF.
      *
      * 07/03/96  LEANNE FEDOR
      *           MARGIE ALLEN REQUESTED THAT, FOR HOLDOVERS, NO
      *           RECORDS WILL BE COPIED TO HPS FROM HPES UNTIL ALL THE
      *           HOLDOVERS ARE COMPLETED. SO, I ADDED LOGIC TO
      *           PREVENT PROCESSING OF RECORDS THAT HAVE HOLDOVER
      *           HEAD BUT NO HOLDOVER COMPLETED DATE.
      *
      * 06/03/97  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELDS 'PURGE FLAG' AND 'DATE OF
      *           FIRST PURGE' ADDED TO HOG GROUP FILE.
      *
      * 02/04/98  LEANNE FEDOR
      *           Recompile only. Select changed on SYNON
      *           tattoo header file.
      *
      * 02/23/98  LeAnne Fedor
      *           Recompile only. Added the following fields to the
      *           database for sales movement detail and check detail:
      *                     condemned head and pounds
      *                     yard dead head and pounds
      *
      * 01/11/99  LeAnne Fedor
      *           Recompile only. New field 'scheduled kill date' added
      *           to sales movement header file.
      *
      * 03/16/99  LeAnne Fedor
      *           Checks were coming over from HPE with no check number
      *           and an invalid date. Added edit on check number.
      *
      * 11/03/99  LeAnne Fedor
      *           Recompile only. Changes were made to the tattoo
      *           header file.
      *
      * 12/08/99  LeAnne Fedor
      *           Added logic to split HPE records into multiple records--
      *           one for each group on the HPS movement.
      *
      * 08/02/00  LeAnne Fedor
      *           Records were coming over from HPE with 'hot weight' greater
      *           than 'live' weight.  Added edit.
      *
      * 09/12/00  LeAnne Fedor
      *           Records existed in HPS that had no kill date and no tattoo.
      *           I'm not sure if they came over from HPE that way or not.
      *           Purva expects these fields to always be populated in HPE.
      *           So, I added edits that both fields have to be populated
      *           before the record can be brought into HPS....if they're
      *           not populated, there's a problem in HPE.  (Once they are in
      *           HPS, only records paid as 'carcass merit' require kill dates
      *           and tattoos.)
      *
      * 10/17/00  LeAnne Fedor
      *           Recompile only. New field 'load type' added to the sales
      *           movement head file.
      *
      * 06/28/01  LeAnne Fedor
      *           Recompile only.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 05/27/04  LeAnne Fedor
      *           Added code to the 'split' logic. Now, if a group did not get any 'head'
      *           on the 'head' split, we do not perform the 'deductions' split for the group.
      *
      *           Also, I now do a preliminary check of the HPE deduction codes coming over.
      *           If any are missing from HPS, I print the codes with a message telling the
      *           users to enter the codes into HPS and exit the program.
      *
      *           Also, for FINAL runs, we added a call to a new program (HP255) that finds
      *           movement workfile records with no 'live pounds' and combines them with
      *           their corresponding 'live pounds' records.
      *
      * 06/01/04  LeAnne Fedor
      *           Pulled the 'split' logic added in 1999 into a separate program (HP243).
      *
      * 06/24/08  LeAnne Ramsey
      *           Jancie is on vacation and we have 1 HPE record where 'hot weight'
      *           is greater than 'live weight'. This does not pass our edit. So,
      *           we will temporarily remove the edit so that Jessica LePlatt can
      *           get the HPE data into HPS. Then, we will DBU/fix the record.
      *           Then, we will reinstate the edit.
      *
      * 06/24/08  LeAnne Ramsey
      *           Reinstated the Hot Weight/Live Weight edit.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 09/26/11  LeAnne Ramsey  (E1757)
      *           The HPE data for 1 record (ie: 1 hog) had Live Lbs greater than Carcass
      *           Lbs. This is, in reality, impossible. But, Jancie Glover explained to
      *           Susan Mason and I that the Live Lbs was the average for the entire Tattoo.
      *           Jancie would not authorize Susan Mason to change the 1 Tattoo Header record.
      *           So, I have commented out the call to subroutine $weight....which is issuing
      *           the error message that is preventing the interface.
      *
      * 07/06/09  Brad Baden    E010812
      *      NOTE: This program only processes company 360 at this time.
      *           1. Bring in Plant Code through the LDA.
      *           2. Replace Tattoo Header file PKA1CPL4 file with Kill Data for Business
      *              Office file HSL3101A.
      *           3. Retrieve Plant Name from the Company Name and Address file CAABREL1.
      *              The Plant Name will be placed on the report.
      *           4. Reftrieve the Business Office description from the Business Office
      *              file to the top of the report and break when the Business Office changes.
      *
      * 11/02/20  ISE           H16853
      *                         Recompile only. Increased the length of     ss Office changes.
      *                         Buy Order Number field from 5 to 7.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     F*PKA1CPL4  IF   E           K DISK
      *  Tattoo Header (records selected by OPNQRY)
      *
      *
     Fhsl3101a  IF   E           K DISK
      *  Kill Data for Business Office   (Key: Business Office)
      *
      *
     Fcaabrel3  if   E           K DISK
      *    Company Name and Address
      *
      *
     Fhsp009    if   E           K DISK
      *    Business Office
      *
      *
     Fpkaxcpl1  if   e           k disk
      *    Buy Order Load
      *
      *
     FHSL034D   IF   E           K DISK
      *    HOG GROUP
      *
      *
     Fhsp044    if   e           k disk
      *    Deduction/Add-on codes
      *
      *
     FHSP084    IF   E           K DISK
      *  SALES MOVEMENT HEADER
      *
      *
     FHSP310    IF   E           K DISK
      *    Workfile: Groups on Movements
      *
      *
     FHSP311    uf a E           K DISK
      *    Workfile: Movement Detail
      *
      *
     FHSP312    UF A E           K DISK
      *    Workfile: Tattoo Detail
      *
      *
     FHSl312a   if   e           k disk    rename(wtrec:wtreca)
      *    Workfile: Tattoo Detail
      *
      *
     FHSP313    uf a E           K DISK
      *    Workfile: Deduction/Add-on
      *
      *
     FQPRINT    O    F  198        PRINTER OFLIND(*INOF)
      *
      /EJECT
      ****************************************************************
      * Definition Specifications
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      *  LOCAL DATA AREA
      *---------------------------------------------------------------
      *
     D                UDS
     D  LDKLDT                 1     08  0
     D  LD0YMD                 9     15  0
     D  LDMDY                 16     21  0
     D  LDEFFL                22     22
     D  LDEFDS                23     32
     D  LDCONO                33     35  0
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * DATA STRUCTURE FOR MATCHING DATE FORMATS BETWEEN THE
      * HOG PRODUCTION SYSTEM AND THE HOG PROCUREMENT AND EVALUATION
      * SYSTEM
      *---------------------------------------------------------------
      *
      * DATES IN THE HOG PRODUCTION SYSTEM ARE STORED AS CCYYMMDD.
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      * HOG PROCUREMENT AND EVALUATION DATES ARE STORED AS CYYMMDD.
      *
     D                 DS
     D  WK0YMD                 1      7  0
     D  WKCC                   1      1  0
     D  WKYY                   2      3  0
     D  WKMM                   4      5  0
     D  WKDD                   6      7  0
      *
      * DATE FORMAT FOR PRINTING (MMDDYY)
      *
     D                 DS
     D  WKMDY                  1      6  0
     D  WKM                    1      2  0
     D  WKD                    3      4  0
     D  WKY                    5      6  0
      *
      *---------------------------------------------------------------
      * STAND ALONE FIELDS
      *---------------------------------------------------------------
      *
     Dwkkilldt         s              7  0
     Dwkbocd           s              5
     Dwk1stpg          s              1
     Dsvbocd           s              5
     D errortype       s              1
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D movementerror   C                   CONST('M')
     D othererror      C                   CONST('O')
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Check that each HPE deduction/add-on code used on the HPE records exists
      * in HPS. If HPS is missing any codes, print them on the report and set
      * the error flag so that the mainline logic does not execute.
      *
     C                   exsr      $missing
     C                   if        wkerr = no                                   If no missing
     C                   exsr      $read3101
     C                   endif                                                  If no missing
      *
     C                   except    endrpt
      *
     C                   seton                                        LR
      /EJECT
      *---------------------------------------------------------------
      * Perform mainline logic
      *---------------------------------------------------------------
      *
     C     $read3101     begsr
      *
      * PROCESS EACH RECORD FROM THE 'TATTOO HEADER' FILE IN THE
      * HOG PROCUREMENT AND EVALUATION SYSTEM. (RECORDS ARE SELECTED
      * USING OPEN QUERY).
      * WE ARE NO LONGER USING THE TATTOO HEADER FILE.  NOW USING THE
      * SALES HEADER WITH THE RECORDS SELECTED IN THE OPNQRYF.
      *
     C**** *loval        setll     pka1cpl4
     C     *loval        setll     hsl3101a
      *
     C     *IN90         DOUEQ     *ON                                          MAIN DO
     C***************    READ      PKA1CPL4                               90
     C                   READ      hsl3101a                               90
     C     *IN90         IFEQ      *OFF                                         IF NOT EOF
      *
      * Save the Business Office to check for breaks.
      * Print the first page header lines.
      *
     C                   if        wk1stpg = yes
     C                   eval      wk1stpg = no
     C                   eval      svbocd = w1bocd
      *
     C                   exsr      $bodesc
     C                   exsr      $hrhdr
     C                   endif
      *
      * If Business Office changes, skip to a new page.
      *
     C                   if        w1bocd <> svbocd
     C                   eval      svbocd = w1bocd
     C                   exsr      $bodesc
     C                   exsr      $hrhdr
     C                   endif
      *
      * DON'T PROCESS A RECORD THAT HAS HELDOVER HEAD BUT
      * ZERO FOR A HELDOVER COMPLETED DATE.
      *
     C     w1hldovr      IFNE      0                                            IF HELDOVER
     C     w1hlovcdt     ANDEQ     0
     C                   ELSE
      *
     C                   MOVEL     NO            FIRST
      *
      * PUT THE KILL DATE FROM THE HOG PROCUREMENT AND
      * EVALUATION SYSTEM INTO A PRINT FIELD IN THE FORMAT
      * MMDDYY. STRIP OFF THE LEADING DIGIT WHICH IS A
      * A CENTURY INDICATOR.
      *
     C*                  Z-ADD     A1B0DT        WK0YMD
     C*                  Z-ADD     WKYY          WKY
     C*                  Z-ADD     WKMM          WKM
     C*                  Z-ADD     WKDD          WKD
      * Use new Kill Date value from HSL3101A
     C                   Z-ADD     W1KLDT        WKCYMD
     C                   Z-ADD     WKYER         WKY
     C                   Z-ADD     WKMON         WKM
     C                   Z-ADD     WKDAY         WKD
     C                   Z-ADD     WKMDY         DTKMDY
      *
      * Convert Kill Date value from ccyymmdd to cyymmdd
     C                   Z-ADD     W1KLDT        WKCYMD
     C                   IF        WKCEN = 19
     C                   EVAL      WKCC = 0
     C                   ELSE
     C                   EVAL      WKCC = 1
     C                   ENDIF
     C                   Z-ADD     WKYER         WKYY
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WK0YMD        wkkilldt
      *
      * Retrieve hog group code and print HPE detail line
      *
     C                   EXSR      $GROUP
      *
      * Determine if there are multiple groups on this movement and
      * write movement detail workfile records. Also, print HPS detail
      * line(s).
      *
     C                   exsr      $multgroup
      *
      * Validate:
      *   1) movement
      *   2) check number
      *   3) weight
      *   4) buy order load
     C                   EXSR      $MOVE
     C                   EXSR      $CHECK
     C****************** EXSR      $WEIGHT ******See E1757 on 09/26/11 in the Modifications.
     C                   exsr      $buyordld
     C                   EXSR      $TATTOO
      *
      * PRINT ANY REMAINING MESSAGES FOR THIS DETAIL RECORD
      *
     C     ERROR         IFNE      0
     C                   EXSR      $WRMSG
     C                   Z-ADD     0             ERROR
     C                   EXSR      $CLMSG
     C                   ENDIF
      *
     C                   ENDIF                                                  IF HELDOVER
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  MAIN DO
      *
      *----------------
      * EOF processing
      *----------------
      * (Note: If there were missing deduct/add-on codes, you won't come
      *  through this code.)
      *
      * IF NO ERRORS WERE ENCOUNTERED IN THE DATA,
      *     PRINT A MESSAGE THAT NO ERRORS WERE ENCOUNTERED
      *     AND, IF THE USER SELECTED FINAL, CALL THE PROGRAM TO COPY
      *
     C                   SELECT
     C     FIRST         WHENEQ    YES
     C                   EXCEPT    NODATA
     C                   eval      errortype = othererror
      *
     C     WKERR         WHENEQ    NO
     C                   EXCEPT    NOERR
      *
     C     LDEFFL        IFEQ      'F'
     C                   CALL      'HP255'
     C                   CALL      'HP253'
     C                   ENDIF
      *
      * If here, WKERR = YES
     C                   other
     C                   if        errortype <> movementerror
     C                   eval      errortype = othererror
     C                   endif
      *
     C                   ENDSL
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * RETRIEVE HOG GROUP CODE
      *---------------------------------------------------------------
      *
     C     $GROUP        BEGSR
      *
      * CLEAR PRINT FIELDS. (NOTE: DO NOT CLEAR THESE PRINT FIELDS
      * USING THE 'BLANK AFTER' CODE ON THE O-SPEC.  THE ERROR
      * MESSAGES ARE PRINTED AFTER THE DETAIL LINE; AND SOME OF THE
      * MESSAGES USE THESE PRINT FIELD VALUES.)
      *
     C                   MOVE      *BLANK        DTHGCD
     C                   MOVE      *BLANK        DTBLCD
     C                   MOVE      *BLANK        DTRMCD
     C                   Z-ADD     0             DTHGSN
      *
      * EXTRACT THE NUMERIC HOG GROUP CODE FROM A 10-ALPHA FIELD IN
      * THE HOG PROCUREMENT AND EVALUATION SYSTEM. THE 7,0 NUMERIC
      * CODE IS SUPPOSED TO BE IN THE RIGHT-MOST 7 POSITIONS.
      *
     C                   MOVE      w1grpref      WKFLD
     C                   TESTN                   WKFLD                92
     C     *IN92         IFEQ      *ON                                          IF NUMERIC
     C                   MOVE      WKFLD         DTHGSN
     C                   ELSE
     C                   Z-ADD     0             DTHGSN
     C                   ENDIF                                                  IF NUMERIC
      *
      * NOW, USING THE NUMERIC HOG GROUP NUMBER JUST
      * EXTRACTED, RETRIEVE THE 7-ALPHA HOG GROUP CODE.
      *
     C     DTHGSN        IFNE      0                                            IF NUMERIC
     C     DTHGSN        CHAIN     HSL034D                            92
     C     *IN92         IFEQ      *OFF                                         IF GOOD GRP
     C                   MOVEL     HGHGCD        DTHGCD
     C                   MOVEL     HGBLCD        DTBLCD
     C                   MOVEL     HGRMCD        DTRMCD
     C                   ELSE
     C                   MOVEL     'UNKNOWN'     DTHGCD
     C                   MOVE      *blank        DTBLCD
     C                   MOVE      *blank        DTRMCD
     C                   ENDIF                                                  IF GOOD GRP
     C                   ENDIF                                                  IF NUMERIC
      *
      * NOW THAT YOU HAVE THE ALPHA HOG GROUP CODE, PRINT
      * THE DETAIL RECORD THAT YOU ARE ABOUT TO EDIT.
      * IF OVERFLOW, PRINT REPORT HEADINGS
      *
     C     WKCURL        IFGT      WKOVFL
     C                   EXSR      $HRHDR
     C                   ENDIF
     C                   EXCEPT    DTLINE1
     C                   ADD       2             WKCURL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * VALIDATE MOVEMENT
      *---------------------------------------------------------------
      *
     C     $MOVE         BEGSR
      *
      * PERFORM THE FOLLOWING EDITS FOR THE MOVEMENT HEADER:
      *    MOVEMENT NUMBER CANNOT BE ZERO
      *    MUST BE A SALES MOVEMENT
      *    MUST BE A SALES TYPE OF MARKET
      *    MUST HAVE A KILL DATE GREATER THAN ZERO
      *    MUST HAVE A SHIPPED DATE ON OR BEFORE THE KILL DATE
      *    MUST HAVE A RECEIVED DATE ON OR BEFORE THE KILL DATE
      *    MUST HAVE A STATUS OF SHIPPED OR PARTIALLY PAID
      *
     C     w1mvsn        IFEQ      0                                            IF NO MOVE
     C                   eval      errortype = movementerror
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00716'     MGID(E)
     C                   ENDIF
      *
     C     ERROR         IFEQ      20
     C                   EXSR      $WRMSG
     C                   Z-ADD     0             ERROR
     C                   EXSR      $CLMSG
     C                   ENDIF
     C                   ELSE
      *
      * MOVEMENT NUMBER IS NOT ZERO
      *
     C     w1mvsn        CHAIN     HSP084                             92
     C     *IN92         IFEQ      *ON                                          IF BAD MOVE
     C                   eval      errortype = movementerror
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00709'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     w1mvsn        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C     ERROR         IFEQ      20
     C                   EXSR      $WRMSG
     C                   Z-ADD     0             ERROR
     C                   EXSR      $CLMSG
     C                   ENDIF
     C                   ELSE
      *
      * THIS SALES MOVEMENT MUST BE FOR MARKET HOGS
      *
     C     SHSTCD        IFNE      'MRKTS'                                      IF NOT MRKT
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00717'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     w1mvsn        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     SHSTCD        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C     ERROR         IFEQ      20
     C                   EXSR      $WRMSG
     C                   Z-ADD     0             ERROR
     C                   EXSR      $CLMSG
     C                   ENDIF
     C                   ENDIF                                                  IF NOT MRKT
      *
      *
      * KILL DATE MUST BE POPULATED
      *
     C     w1kldt        IFEQ      0                                            If no kill
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00778'     MGID(E)
     C                   ENDIF
      *
     C     ERROR         IFEQ      20
     C                   EXSR      $WRMSG
     C                   Z-ADD     0             ERROR
     C                   EXSR      $CLMSG
     C                   ENDIF
     C                   ENDIF                                                  If no kill
      *
      *
      * CONVERT THE 'KILL DATE' FROM THE HOG PROCUREMENT AND
      * EVALUATION SYSTEM TO A FORMAT THAT MATCHES THE HOG
      * PRODUCTION SYSTEM. THE HOG PRODUCTION SYSTEM CARRIES
      * DATES IN THE FORMAT OF CCYYMMDD.
      * THE HOG PROCUREMENT AND EVALUATION SYSTEM CARRIES
      * DATES AS 7,0 NUMERIC FIELDS WITH THE FIRST DIGIT BEING
      * 0=20TH CENTURY OR 1=21ST CENTURY.
      * EXAMPLE: 0951225 FOR CHRISTMAS IN 1995 AND
      *          1951225 FOR CHRISTMAS IN 2095
      *
     C*                  Z-ADD     A1B0DT        WK0YMD
     C                   Z-ADD     w1kldt        WKCYMD
     C*                  Z-ADD     WKYY          WKYER
     C*                  Z-ADD     WKMM          WKMON
     C*                  Z-ADD     WKDD          WKDAY
     C*    WKCC          IFEQ      0
     C*                  Z-ADD     19            WKCEN
     C*                  ELSE
     C*                  Z-ADD     20            WKCEN
     C*                  ENDIF
      *
      * SHIPPED DATE CANNOT BE AFTER KILL DATE
      *
     C     SHSHDT        IFGT      WKCYMD                                       IF SHIP DATE
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00710'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     SHMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEL     SHSHDT        XXCYMD
     C                   MOVEA     XXCYMD        MGW(8)
     C                   MOVEL     w1kldt        XXCYMD
     C                   MOVEA     XXCYMD        MGW(16)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C     ERROR         IFEQ      20
     C                   EXSR      $WRMSG
     C                   Z-ADD     0             ERROR
     C                   EXSR      $CLMSG
     C                   ENDIF
     C                   ENDIF                                                  IF SHIP DATE
      *
      * RECEIVED DATE CANNOT BE AFTER KILL DATE
      *
     C     SHRCDT        IFGT      w1kldt                                       IF RECD DATE
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00711'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     SHMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEL     SHRCDT        XXCYMD
     C                   MOVEA     XXCYMD        MGW(8)
     C                   MOVEL     w1kldt        XXCYMD
     C                   MOVEA     XXCYMD        MGW(16)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C     ERROR         IFEQ      20
     C                   EXSR      $WRMSG
     C                   Z-ADD     0             ERROR
     C                   EXSR      $CLMSG
     C                   ENDIF
     C                   ENDIF                                                  IF RECD DATE
      *
      * MOVEMENT STATUS MUST BE SHIPPED OR PARTIALLY PAID
      *
     C     SHMSCD        IFNE      'SH'                                         IF BAD STAT
     C     SHMSCD        ANDNE     'NC'
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00712'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     SHMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     SHMSCD        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C     ERROR         IFEQ      20
     C                   EXSR      $WRMSG
     C                   Z-ADD     0             ERROR
     C                   EXSR      $CLMSG
     C                   ENDIF
     C                   ENDIF                                                  IF BAD STAT
      *
      * CUSTOMER MUST BE 'GUYMON PROCESSING PLANT'. (WE
      * HARD-CODE THE CUSTOMER NUMBER FOR GUYMON TO DO THIS
      * CHECK.)
      *
     C     SHCVNO        IFNE      360516                                       IF BAD CUST
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00713'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     SHMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEL     SHCVNO        XXCVNO
     C                   MOVEA     XXCVNO        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C     ERROR         IFEQ      20
     C                   EXSR      $WRMSG
     C                   Z-ADD     0             ERROR
     C                   EXSR      $CLMSG
     C                   ENDIF
     C                   ENDIF                                                  IF BAD CUST
      *
     C                   ENDIF                                                  IF BAD MOVE
     C                   ENDIF                                                  IF NO MOVE
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * Validate check number
      *---------------------------------------------------------------
      *
      * Validations:
      *   1) check number cannot be zero or negative
      *
     C     $check        begsr
      *
     C                   if        w1vchrdoc <= 0                               If bad number
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00350'     MGID(E)
     C                   ENDIF
      *
     C     ERROR         IFEQ      20
     C                   EXSR      $WRMSG
     C                   Z-ADD     0             ERROR
     C                   EXSR      $CLMSG
     C                   ENDIF
     C                   endif                                                  If bad number
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Buy Order Load
      *---------------------------------------------------------------
      *
      * Validations:
      *   1) Buy Order Load exists in PKAXCPL1
      *
     C     $buyordld     begsr
      *
     C     key01         chain     pkaxcpl1
     C                   if        not %found(pkaxcpl1)                         if not %found
      *
     C                   if        error < maxmsg                               if error < maxmsg
     C                   add       1             error
     C                   movel     'HS09269'     mgid(e)
     C                   endif                                                  f1 error < maxmsg
      *
     C                   if        error = 20                                   if error = 20
     C                   exsr      $wrmsg
     C                   z-add     0             error
     C                   exsr      $clmsg
     C                   endif                                                  fi error = 20
     C                   endif                                                  fi not %found
      *
     C                   endsr
      *
      /EJECT
      *---------------------------------------------------------------
      * Validate weight
      *---------------------------------------------------------------
      *
      * Validations:
      *   1) hot weight cannot be greater than live weight
      *
     C     $weight       begsr
      *
     C                   if        w1hotwgt > w1livwgt                          If hot
      *
     C*                  if        error < maxmsg
     C*                  add       1             error
     C*                  movel     'HS00354'     mgid(e)
     C*                  endif
      *
     C                   if        error = 20
     C                   exsr      $wrmsg
     C                   z-add     0             error
     C                   exsr      $clmsg
     C                   endif
     C                   endif                                                  If hot
      *
     C                   endsr
      *
      /EJECT
      *---------------------------------------------------------------
      * Validate tattoo
      *---------------------------------------------------------------
      *
      * Validations:
      *   1) tattoo cannot be zero
      *
      *
     C     $TATTOO       BEGSR
      *
      *
     C     w1tattoo      IFEQ      0                                            If no tattoo
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00779'     MGID(E)
     C                   ENDIF
      *
     C     ERROR         IFEQ      20
     C                   EXSR      $WRMSG
     C                   Z-ADD     0             ERROR
     C                   EXSR      $CLMSG
     C                   ENDIF
     C                   ENDIF                                                  If no tattoo
      *
     C                   ENDSR
      /EJECT
      *-------------------------------------------------------------------------
      * Determine if there are multiple groups on this HPS movement
      *-------------------------------------------------------------------------
      *
      * This subroutine controls the writing of workfile records for both a) movement
      * detail info and b) deduction/add-on info.
      *
      * If there is only one group on the HPS movement, a single detail record is
      * written.  If there are multiple groups on a movement, the HPE values must
      * be split out into multiple detail records.
      *
     C     $multgroup    begsr
      *
      * Clear movement detail workfile record and accumulator fields.
      *
     C                   clear                   wdrec
     C                   z-add     0             wkcwnb
     C                   z-add     0             wkcxnb
     C                   z-add     0             wkfcnb
     C                   z-add     0             wkfdnb
     C                   z-add     0             wkcynb
     C                   z-add     0             wke0nb
     C                   z-add     0             wkanpr
     C                   z-add     0             wkayva
     C                   z-add     0             wkawva
     C                   z-add     0             wkaxva
     C                   z-add     0             wkcbpr
     C                   z-add     0             wkccpr
      *
      *
      * Set up fields for the movement detail record that come from the HPE record
      * and do not change regardless of whether you write one record or write split records.
      *
     C                   exsr      $defaults
      *
      * Read/process each record for this movement in the Group Workfile.
      * (This record will tell you what percent of the HPE values to distribute
      *  to the group.)
      *
     C                   z-add     0             count
     C     w1mvsn        setll     hsp310
      *
     C                   dou       *in91 = *on                                  Do split loop
     C     w1mvsn        reade     hsp310                                 91
     C                   if        *in91 = *off                                 If more
     C                   add       1             count
      *
     C                   z-add     wghgsn        wdhgsn
     C                   move      wghgcd        wdhgcd
     C                   move      wgblcd        wdblcd
     C                   move      wgrmcd        wdrmcd
      *
      *
      * For the last group on the movement (or if there is only one group),
      * dump in all the remaining HPE values.
      *
     C                   select
     C                   when      wgcount = count
     C                   exsr      $lastdtl
     C                   exsr      $lastded
     C                   other
      *
      * This is not a) the last group in the movement or b) the only group
      * on the movement, so give this group a percentage of the HPE values.
      *
     C                   exsr      $splitdtl
      *
      * Do not 'split' deductions unless the group got some 'head' on the
      * detail split.
     C                   if        wdcwnb <> 0 or                               If live/doa head
     C                             wdcxnb <> 0
     C                   exsr      $splitded
     C                   endif
     C                   endsl
      *
     C                   endif                                                  If more
     C                   enddo                                                  Do split loop
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Set up default values from the HPE record
      *---------------------------------------------------------------
      *
      * For the movement detail workfile record:
      * Set up fields that come from the HPE record and are the same regardless
      * of whether you write one record or write split records.
      *
     C     $defaults     begsr
      *
      * Company number
      * Buy order number
      * Load number
      *
     C                   z-add     w1comp#       wdhmnb
     C                   z-add     w1bono        wdbnnb
     C                   z-add     w1boldno      wdbonb
      *
      * Voucher document number
      * Voucher payment date (CYYMMDD)
      * Payment type
      *
     C                   z-add     w1vchrdoc     wdlpnb
     C                   z-add     w1vchpydt     wdbydt
     C                   move      w1pmttyp      wdj9st
      *
      * Movement reference number
      * Tattoo number
      * Tattoo reference number
      *
     C                   z-add     w1mvsn        wdoxnb
     C                   z-add     w1tattoo      wdcvnb
     C                   move      w1grpref      wdbicd
      *
      * Kill date (MCYYMMDD)
     C*                  z-add     w1kldt        wdb0dt
      *
      ** Since this program now uses file HSP3101, the kill date
      ** must be converted to CYYMMDD format.
      /free
        wdb0dt = %dec(%char(%date(w1kldt:*iso):*cymd0):7:0);
      /end-free
      *
      *
      * Average live weight
      * Average lean percent
      * Average loin eye depth
      * Average backfat
      *
     C                   z-add     w1avlvwgt     wdf7nb
     C                   z-add     w1avglean     wdf4nb
     C                   z-add     w1avgloin     wdf3nb
     C                   z-add     w1avgbkft     wdf2nb
      *
      * Defect code
      * Class code
     C                   move      w1dfctcd      wdbdcd
     C                   move      w1clascd      wdbecd
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------
      * Write workfile detail record distributing all remaining values
      *---------------------------------------------------------------------------
      *
      * For the last group on the movement (or if there is only one group),
      * dump in all the remaining HPE values.
      *
     C     $lastdtl      begsr
      *
      * Head:
      *  Received
      *  DOA
      *  Yard dead
      *  Condemned
      *
     C     w1hdrcvd      sub       wkcwnb        wdcwnb
     C     w1hddoa       sub       wkcxnb        wdcxnb
     C     w1yrddead     sub       wkfcnb        wdfcnb
     C     w1hdcndm      sub       wkfdnb        wdfdnb
      *
      * Weight:
      *  Live
      *  Hot
     C     w1livwgt      sub       wkcynb        wdcynb
     C     w1hotwgt      sub       wke0nb        wde0nb
      *
      *
      * Amounts:
      *  Base market price amount
      *  Sort discount amount
      *  Yield gain/loss amount
      *  Lean addon/deduct amount
      *  Payment gross
      *  Payment net
      *
     C     w1bsmkt$      sub       wkanpr        wdanpr
     C     w1sortdsc     sub       wkayva        wdayva
     C     w1yldgnls     sub       wkawva        wdawva
     C     w1adonded     sub       wkaxva        wdaxva
     C     w1pymtgrs     sub       wkcbpr        wdcbpr
     C     w1pymtnet     sub       wkccpr        wdccpr
      *
     C                   write     wdrec
      *
     C                   exsr      $prtdtl2
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------------
      * Write workfile deduction/add-on record distributing all remaining values
      *------------------------------------------------------------------------------------
      *
      * For the last group on the movement (or if there is only one group),
      * dump in all the remaining HPE values.
      *
     C     $lastded      begsr
      *
     C                   clear                   warec
     C                   z-add     w1comp#       wahmnb
     C                   z-add     w1bono        wabnnb
     C                   z-add     w1boldno      wabonb
     C                   z-add     w1tattoo      wacvnb
     C                   z-add     wkkilldt      wab0dt
     C                   z-add     wdhgsn        wahgsn
      *
     C     key02         setll     hsp312
      *
     C                   dou       *in93 = *on                                  Do loop
     C     key02         reade     hsp312                                 93
     C                   if        *in93 = *off                                 If not EOF
     C                   movel     wtbqcd        wabqcd
     C                   z-add     wta0va        waa0va
     C                   write     warec
     C                   sub       wta0va        wta0va
     C                   update    wtrec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write movement detail record for a split
      *---------------------------------------------------------------
      *
      * This is not a) the last group on the movement or b) the only group
      * on the movement, so give this group a percentage of the HPE values.
      *
     C     $splitdtl     begsr
      *
      * Head:
      *  Received
      *  DOA
      *  Yard dead
      *  Condemned
      *
     C     w1hdrcvd      mult      wgpr          wdcwnb
     C                   add       wdcwnb        wkcwnb
      *
     C     w1hddoa       mult      wgpr          wdcxnb
     C                   add       wdcxnb        wkcxnb
      *
     C     w1yrddead     mult      wgpr          wdfcnb
     C                   add       wdfcnb        wkfcnb
      *
     C     w1hdcndm      mult      wgpr          wdfdnb
     C                   add       wdfdnb        wkfdnb
      *
     C                   if        wdcwnb <> 0 or                               If live/doa head
     C                             wdcxnb <> 0
      * Weight:
      *  Live
      *  Hot
     C     w1livwgt      mult      wgpr          wdcynb
     C                   add       wdcynb        wkcynb
      *
     C     w1hotwgt      mult      wgpr          wde0nb
     C                   add       wde0nb        wke0nb
      *
      *
      * Amounts:
      *  Base market price amount
      *  Gross amount
      *  Sort discount amount
      *  Yield gain/loss amount
      *  Lean addon/deduct amount
      *  Net amount
      *
     C     w1bsmkt$      mult      wgpr          wdanpr
     C                   add       wdanpr        wkanpr
      *
     C     w1pymtgrs     mult      wgpr          wdcbpr
     C                   add       wdcbpr        wkcbpr
      *
     C     w1sortdsc     mult      wgpr          wdayva
     C                   add       wdayva        wkayva
      *
     C     w1yldgnls     mult      wgpr          wdawva
     C                   add       wdawva        wkawva
      *
     C     w1adonded     mult      wgpr          wdaxva
     C                   add       wdaxva        wkaxva
      *
     C     w1pymtnet     mult      wgpr          wdccpr
     C                   add       wdccpr        wkccpr
      *
     C                   write     wdrec
     C                   exsr      $prtdtl2
     C                   endif                                                  If live/doa head
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------------
      * Write workfile deduction/add-on record for split
      *------------------------------------------------------------------------------------
      *
      * This is not a) the last group on the movement or b) the only group
      * on the movement, so give this group a percentage of the HPE values.
      *
     C     $splitded     begsr
      *
     C                   clear                   warec
     C                   z-add     w1comp#       wahmnb
     C                   z-add     w1bono        wabnnb
     C                   z-add     w1boldno      wabonb
     C                   z-add     w1tattoo      wacvnb
     C                   z-add     wkkilldt      wab0dt
     C                   z-add     wdhgsn        wahgsn
      *
     C     key02         setll     hsp312
      *
     C                   dou       *in93 = *on                                  Do loop
     C     key02         reade     hsp312                                 93
     C                   if        *in93 = *off                                 If not EOF
     C                   movel     wtbqcd        wabqcd
     C     wgpr          mult      wta0va        waa0va
     C                   write     warec
     C                   sub       waa0va        wta0va
     C                   update    wtrec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Get Business Office description
      *---------------------------------------------------------------
      *
     C     $bodesc       begsr
      *
      * Get Business Office Description
     C     w1bocd        chain     hsp009
     C                   if        not %found
     C                   eval      bobods = *blanks
     C                   endif
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * Print report headings
      *---------------------------------------------------------------
      *
      * RESET THE CURRENT LINE TO ZERO
      * PRINT THE HEADING LINE
      * INCREMENT THE CURRENT LINE
      *
     C     $HRHDR        BEGSR
      *
     C                   Z-ADD     0             WKCURL
     C                   EXCEPT    HRHDR
     C                   ADD       9             WKCURL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * Print detail line 2
      *---------------------------------------------------------------
      *
     C     $prtdtl2      begsr
      *
     C                   if        wkcurl > wkovfl
     C                   exsr      $hrhdr
     C                   endif
     C                   except    dtline2
     C                   add       2             wkcurl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
      * IF OVERFLOW, PRINT REPORT HEADINGS
      *
     C     WKCURL        IFGT      WKOVFL                                       IF OVERFLOW
     C                   EXSR      $HRHDR
     C                   ELSE
      *
      * PROGRAM UT80046A DOES NOT PRINT HEADINGS OR CHECK FOR PAGE
      * BREAKS.  BEFORE CALLING UT80046A, DETERMINE IF ALL THE ERROR
      * MESSAGES CAN BE PRINTED ON THE CURRENT PAGE.
      * CALCULATE REMAINING PRINT LINES ON PAGE USING THE OVERFLOW LINE
      * AND THE CURRENT LINE.
      *
     C     WKOVFL        SUB       WKCURL        WKDIFL
      *
      * IF YOU HAVE MORE MESSAGES THAN WILL FIT ON THE PAGE, THEN
      * PAGE BREAK AND PRINT HEADINGS.
      *
     C     ERROR         IFGT      WKDIFL
     C                   EXSR      $HRHDR
     C                   ENDIF
     C                   ENDIF                                                  IF OVERFLOW
      *
      *
      * INCREMENT THE CURRENT LINE BY THE NUMBER OF ERROR MESSAGES
      * YOU WILL BE PRINTING IN UT80046A PLUS ONE FOR THE SPACE AFTER.
      * THIS SETS THE CURRENT LINE NUMBER PROPERLY FOR WHEN YOU
      * RETURN FROM UT80046A.
      *
     C     WKCURL        ADD       ERROR         WKCURL
     C                   ADD       1             WKCURL
      *
     C                   CALL      'UT80046A'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      MSGFIL        MSGFL
      *
     C                   MOVEL     YES           WKERR
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80046A'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZERO         ERROR
     C                   PARM      MSGFIL        MSGFL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * Check for HPE deduction/add-on codes that are missing from HPS
      *---------------------------------------------------------------
      *
     C     $missing      begsr
      *
     C     *loval        setll     hsl312a
      *
     C                   dou       *in91 = *on                                  Do loop
     C                   read      hsl312a                                91
     C                   if        *in91 = *off                                 If read
      *
      * For each new HPE code that you encounter, see if it exists in HPS.
      *
     C                   if        wtbqcd <> svdacd                             If new
      *
     C     wtbqcd        chain     hsp044                             92
     C                   if        *in92 = *on                                  If not found
      *
      * Print the report headings, and then the first 'missing' message.
      * Printing 'missing' message on the first 'missing' code that you
      * find.
     C                   if        firstmiss = yes
     C                   exsr      $hrhdr
     C                   except    missingmsg
     C                   move      no            firstmiss
     C                   move      yes           wkerr
     C                   endif
      *
      * Print the Code
     C                   except    missingdtl
      *
      * Save HPE code
     C                   move      wtbqcd        svdacd
     C                   endif                                                  If not found
     C                   endif                                                  If new
      *
     C                   endif                                                  If read
     C                   enddo                                                  Do loop
      *
      ** Printing End of Report because the program will end if it finds
      ** errors here.
      *
     C*                  except    endrpt
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * Parm lists:
      *
     C     *entry        plist
     C                   parm                    errortype
      *
      * Key lists:
      *
     C     key01         klist
     C                   kfld                    w1comp#
     C                   kfld                    w1bono
     C                   kfld                    w1boldno
      *
     C     KEY02         KLIST
     C                   KFLD                    w1comp#
     C                   KFLD                    w1bono
     C                   KFLD                    w1boldno
     C                   KFLD                    w1tattoo
     C                   KFLD                    wkkilldt
      *
      * WORKFIELDS
      *
     C     *like         define    w1bsmkt$      wkanpr
     C     *like         define    w1sortdsc     wkayva
     C     *like         define    w1yldgnls     wkawva
     C     *like         define    w1adonded     wkaxva
     C     *like         define    w1pymtgrs     wkcbpr
     C     *like         define    w1pymtnet     wkccpr
     C     *like         define    w1hdrcvd      wkcwnb
     C     *like         define    w1hddoa       wkcxnb
     C     *like         define    w1yrddead     wkfcnb
     C     *like         define    w1hdcndm      wkfdnb
     C     *like         define    w1livwgt      wkcynb
     C     *like         define    w1hotwgt      wke0nb
      *
     C     *LIKE         DEFINE    HGHGCD        WKFLD
     C                   Z-ADD     0             count             3 0
     C                   Z-ADD     0             y                 3 0
      *
      * PRINT FIELDS FOR DETAIL LINE
      *
     C     *LIKE         DEFINE    HGHGSN        DTHGSN
     C     *LIKE         DEFINE    HGHGCD        DTHGCD
     C     *LIKE         DEFINE    HGBLCD        DTBLCD
     C     *LIKE         DEFINE    HGRMCD        DTRMCD
     C                   Z-ADD     0             DTKMDY            6 0
      *
      * ALPHA FIELDS FOR MESSAGES
      *
     C                   MOVE      *BLANK        XXCYMD            8
     C                   MOVE      *BLANK        XXCVNO            8
      *
      * Save fields
      *
     C     *like         define    wabqcd        svdacd
      *
      * SET UP CONTROL FLAGS
      * SET UP A DASHED LINE FOR UNDERLINING THE HEADING
      * RETRIEVE TIME FOR REPORT HEADING
      *
     C                   MOVEL     YES           FIRSTMISS         1
     C                   MOVEL     YES           FIRST             1
     C                   MOVEL     NO            WKERR             1
      *
     C                   MOVEL     *ALL'-'       DASH            198
     C                   TIME                    RTIME             6 0
      *
      * DEFINE WORK FIELDS USED IN CONTROLLING LINE COUNTS FOR
      * PRINTING SINCE DETAIL LINES ARE PRINTED FROM THIS RPG PROGRAM
      * AND ERROR MESSAGES ARE PRINTED FROM CLP UT80046A.
      *
     C                   Z-ADD     0             WKDIFL            3 0          LINES LEFT
     C                   Z-ADD     60            WKOVFL            3 0          OVERFLOW LIN
     C                   Z-ADD     0             WKCURL            3 0          CURRENT LINE
      *
      * MESSAGE PARMS
     C                   MOVE      *BLANK        MSGFL            10            MESSAGE FILE
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVE      *BLANK        XXMVSN            7
      *
      * Get Company Number name
      *
     C     LDCONO        chain     caabrel3
      *
      * PRINT REPORT HEADINGS
      *
     C*                  EXSR      $HRHDR
     C                   eval      errortype = *blank
     C                   eval      wk1stpg = yes
      *
     C                   ENDSR
      /EJECT
      *-------------------------------------------------------------
      * REPORT HEADING LINES
      *-------------------------------------------------------------
      *
     OQPRINT    E            HRHDR          1 01
     O                       SDPGM               10
     O                                          103 'HOG PRODUCTION SYSTEM'
     O                                          188 'DATE'
     O                       UDATE         Y    198
      *
     O          E            HRHDR          1
     O                       SDUSR               10
     O                                           67 'LISTING OF KILL DATA TO '
     O                                         +  0 'COPY FROM THE HOG PROC'
     O                                         +  0 'UREMENT AND EVALUATION '
     O                                         +  0 'SYSTEM TO THE HOG PROD'
     O                                         +  0 'UCTION SYSTEM'
      *
     O                                          188 'TIME'
     O                       RTIME              198 '  :  :  '
      *
     O          E            HRHDR          1
     O                                           20 'PLANT CODE .........'
     O                       LDCONO              24
     O                       ABADTX              36
     O                                          188 'PAGE'
     O                       PAGE          Z    198
      *
     O          E            HRHDR          1
     O                                           20 'CUT-OFF KILL DATE ..'
     O                       LDMDY         Y     30
      *
     O          E            HRHDR          1
     O                                           20 'EDIT OR FINAL ......'
     O                       LDEFDS              32
      *
     O          E            HRHDR          2
     O                                           20 'BUSINESS OFFICE ....'
     O                       W1BOCD              27
     O                       BOBODS              59
      *
      *-------------------------------------------------------------
      * COLUMN HEADINGS
      *-------------------------------------------------------------
      *
     O          E            HRHDR          1
     O                                           93 'YARD'
      *
     O          E            HRHDR          1
     O                                            8 'MOVEMENT'
     O                                           14 'PAY'
     O                                           22 'CHECK'
     O                                           39 'GROUP'
     O                                           50 'GROUP'
     O                                           73 'LIVE'
     O                                           83 'DOA'
     O                                           93 'DEAD'
     O                                          105 'CONDEMNED'
     O                                          117 'LIVE'
     O                                          131 'CARCASS'
     O                                          143 'BASE'
     O                                          155 'GROSS'
     O                                          166 'GRADE'
     O                                          177 'SORT'
     O                                          188 'YIELD'
     O                                          196 'KILL'
      *
     O          E            HRHDR          1
     O                                            8 'NUMBER'
     O                                           14 'TYPE'
     O                                           23 'NUMBER'
     O                                           32 'TATTOO'
     O                                           38 'CODE'
     O                                           50 'NUMBER'
     O                                           56 'BLDG'
     O                                           63 'ROOM'
     O                                           73 'HEAD'
     O                                           83 'HEAD'
     O                                           93 'HEAD'
     O                                          102 'HEAD'
     O                                          117 'POUNDS'
     O                                          131 'POUNDS'
     O                                          143 'AMOUNT'
     O                                          155 'AMOUNT'
     O                                          166 'AMOUNT'
     O                                          177 'AMOUNT'
     O                                          188 'AMOUNT'
     O                                          196 'DATE'
      *
     O          E            HRHDR          1
     O                       DASH               198
      *
      *-------------------------------------------------------------
      * DETAIL LINE 1 --- Data from HPE
      *-------------------------------------------------------------
      *
     O          E            DTLINE1     1  1
      *
      * MOVEMENT NUMBER
     O*                      A1OXNB        Z      8
     O                       w1mvsn        Z      8
      * PAYMENT TYPE
     O*                      A1J9ST              12
     O                       w1pmttyp            12
      * CHECK NUMBER
     O*                      A1LPNB        Z     23
     O                       w1vchrdoc     Z     23
      * TATTOO NUMBER
     O*                      A1CVNB        Z     32
     O                       w1tattoo      Z     32
      *
      * ALPHA HOG GROUP CODE
     O                       DTHGCD              41
      *
      * SYSTEM ASSIGNED HOG GROUP NUMBER
      *
     O                       DTHGSN        Z     50
      * BUILDING
     O                       DTBLCD              57
      * ROOM
     O                       DTRMCD              64
      * LIVE HEAD
     O*                      A1CWNB        K     74
     O                       w1hdrcvd      K     74
      * DOA HEAD
     O*                      A1CXNB        K     84
     O                       w1hddoa       K     84
      * YARD DEAD HEAD
     O*                      A1FCNB        K     94
     O                       w1yrddead     K     94
      * CONDEMNED HEAD
     O*                      A1FDNB        K    103
     O                       w1hdcndm      K    103
      * LIVE POUNDS
     O*                      A1CYNB        K    118
     O                       w1livwgt      K    118
      * CARCASS POUNDS
     O*                      A1E0NB        K    132
     O                       w1hotwgt      K    132
      * BASE AMOUNT
     O*                      A1ANPR        K    144
     O                       w1bsmkt$      K    144
      * GROSS AMOUNT
     O*                      A1CBPR        K    156
     O                       w1pymtgrs     K    156
      * GRADE AMOUNT
     O*                      A1AXVA        K    167
     O                       w1adonded     K    167
      * SORT AMOUNT
     O*                      A1AYVA        K    178
     O                       w1sortdsc     K    178
      * YIELD AMOUNT
     O*                      A1AWVA        K    189
     O                       w1yldgnls     K    189
      * KILL DATE
     O                       DTKMDY        Y    198
      *
      *
      *-------------------------------------------------------------
      * DETAIL LINE 2 --- Data as it will be split in HPS
      *-------------------------------------------------------------
      *
     O          E            DTLINE2     1  1
      *
     O                                           32 'HPS Values:'
      *
      * ALPHA HOG GROUP CODE
     O                       WDHGCD              41
      *
      * SYSTEM ASSIGNED HOG GROUP NUMBER
      *
     O                       WDHGSN        Z     50
      * BUILDING
     O                       WDBLCD              57
      * ROOM
     O                       WDRMCD              64
      * LIVE HEAD
     O                       WDCWNB        K     74
      * DOA HEAD
     O                       WDCXNB        K     84
      * YARD DEAD HEAD
     O                       WDFCNB        K     94
      * CONDEMNED HEAD
     O                       WDFDNB        K    103
      * LIVE POUNDS
     O                       WDCYNB        K    118
      * CARCASS POUNDS
     O                       WDE0NB        K    132
      * BASE AMOUNT
     O                       WDANPR        K    144
      * GROSS AMOUNT
     O                       WDCBPR        K    156
      * GRADE AMOUNT
     O                       WDAXVA        K    167
      * SORT AMOUNT
     O                       WDAYVA        K    178
      * YIELD AMOUNT
     O                       WDAWVA        K    189
      * KILL DATE
     O                       DTKMDY        Y    198
      *
      *-------------------------------------------------------------
      * NO ERROR MESSAGE LINE
      *-------------------------------------------------------------
      *
     O          E            NOERR       2
     O                                           20 'NO ERRORS WERE FOUND'
      *
      *-------------------------------------------------------------
      * NO DATA MESSAGE LINE
      *-------------------------------------------------------------
      *
     O          E            NODATA         1
     O                                           19 'NO DATA MEETS YOUR'
     O                                           38 'SELECTION CRITERIA'
      *
      *-------------------------------------------------------------
      * Detail line for missing deduction/add-on codes
      *-------------------------------------------------------------
      *
     O          e            missingmsg  2  2
     O                                           26 'You cannot interface until'
     O                                           52 ' you set up the HPE codes '
     O                                           78 'listed below in the HPS De'
     O                                           98 'duction/Add-on File.'
      *
      *-------------------------------------------------------------
      * Detail line for missing deduction/add-on codes
      *-------------------------------------------------------------
      *
     O          e            missingdtl     1
     O                       wtbqcd              10
      *
      *-------------------------------------------------------------
      * End-of-Report
      *-------------------------------------------------------------
      *
     O          e            endrpt      1
     O                                              '***** END OF REPORT *****'
