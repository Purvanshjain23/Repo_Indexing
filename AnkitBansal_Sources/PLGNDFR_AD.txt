// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLGNDFR
// ?Date: 14.08.2025 Time: 02:54:13
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?WHD72337 JBB  7/23/21 - [ME] Copy Function for Site Information
//?- Added new subfile option 3=Copy.  This will call new function
//?  "Cpy Site ID to ProducerPV".
//?E11445 JJH 08/10/17 - Producer Site modifications for 440
//?- Display SR Source Code
//?- Add option 5=Display
//?- Do not allow 2=Edit if Producer's Source Code = TO (Triumph
//?  Member Only).  These are maintained by Triumph Foods via entry
//?  of Producer Site/Producer Site Mileage for 961.
//?E3814 JJH 10/05/15 - Display PS Premisses ID
ENDDO;

// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


// LCL.First Time Flag Usr = CND.Yes
LCL.First_Time_Flag_Usr = 'Y';

//?USER: Initialize subfile control

CASE;

// IF LCL.First Time Flag Usr is Yes
IF LCL.First_Time_Flag_Usr = 'Y';

// CTL.RS Record Status = CND.Active
CTL.RS_Record_Status = 'A';

// LCL.First Time Flag Usr = CND.No
LCL.First_Time_Flag_Usr = 'N';

ENDIF;

EXECUTE FUNCTION(Producer Name         DRV) TYPE(DRVFLD)                        AB1100361;
PARAMETER(CTL.Producer_Name_DRV);
PARAMETER(CTL.PD_Producer_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Producer Name     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1101542;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.Producer_Name_DRV);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?E11445 JJH 08/10/17 - Display SR Source Code and Description
// CTL.SR Source Code = PAR.SR Source Code
CTL.SR_Source_Code = PAR.SR_Source_Code;

EXECUTE FUNCTION(Rtv Source Desc       RT) TYPE(RTVOBJ) FILE(PKAAREP)           AB1124642;
PARAMETER(CTL.SR_Source_Code);
PARAMETER(CTL.SR_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Initialize subfile record from DBF record

//?** Check to see if a mileage record exists. Update Rec Found
EXECUTE FUNCTION(Val Mileage Found     RT) TYPE(RTVOBJ) FILE(PLASREP)           AB1267801;
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PS_Site_ID);
PARAMETER(RCD.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 QUIT;

}


//?USER: Process subfile control (Pre-confirm)

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?E11445 JJH 08/10/17 - Do not allow F6=Create if SR Source Code=TO
//?  TO is maintained by Triumph Foods with Company 961.
//?F6=Create
CASE;

// IF CTL.*CMD key is *Create
IF CTL.*CMD_key = '06';

CASE;

// IF CTL.SR Source Code is Triumph Member (Owner)
IF CTL.SR_Source_Code = 'TO';

// Send error message - 'F6=Create is not allowed for Source Code = TO.  This Producer Site is maint
ERROR(PRK1461);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Edt Site Information  ET.
CALL PROGRAM(Edt Site Information  ET) ('PLGMETR');
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PS_Site_ID);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

ENDIF;

//?F21=Print List
CASE;

// IF CTL.*CMD key is Print List
IF CTL.*CMD_key = '21';

// LCL.PRT Night Queue Run Sts = CND.No
LCL.PRT_Night_Queue_Run_Sts = 'N';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Print Producer Site List');
PARAMETER(LCL.PRT_Printer_Device);
PARAMETER(LCL.PRT_Hold_Output_Sts);
PARAMETER(LCL.PRT_Save_Output_Sts);
PARAMETER(LCL.PRT_Copies);
PARAMETER(LCL.PRT_Night_Queue_Run_Sts);
PARAMETER(LCL.PRT_Night_Queue);
PARAMETER('HPE');

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Execute command - 'SBM Prt Prod Site List'
EXECUTE COMMAND(PRK1222);
PARAMETER(LCL.PRT_Printer_Device);
PARAMETER(LCL.PRT_Hold_Output_Sts);
PARAMETER(LCL.PRT_Save_Output_Sts);
PARAMETER(LCL.PRT_Copies);
PARAMETER(LCL.PRT_Night_Queue);
PARAMETER(CTL.RS_Record_Status);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(CTL.PD_Producer_Code);

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?E11445 JJH 08/10/17 - Do not allow if SR Source Code = TO
//?2=Edit Mileage
CASE;

// IF RCD.*SFLSEL is Edit
IF RCD.*SFLSEL = '2'/'2';

CASE;

// IF CTL.SR Source Code is Triumph Member (Owner)
IF CTL.SR_Source_Code = 'TO';

// Send error message - 'Option 2=Edit is not allowed for Source Code = TO.  This Producer Site is m
ERROR(PRK1460);

// RCD.*SFLSEL = CND.*Reset to blanks
RCD.*SFLSEL = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Edt Site Information  ET.
CALL PROGRAM(Edt Site Information  ET) ('PLGMETR');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PS_Site_ID);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?3=Copy
CASE;

// IF RCD.*SFLSEL is *Copy request
IF RCD.*SFLSEL = '3'/'3';

// Call program Cpy Site ID to Prodcr PV.
CALL PROGRAM(Cpy Site ID to Prodcr PV) ('PWNYPVR');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PS_Site_ID);
PARAMETER(PAR.Oms_System_Value_Alpha);

// RCD.*SFLSEL = CND.*Reset to blanks
RCD.*SFLSEL = *BLANK;

ENDIF;

//?E11445 JJH 08/10/17 - Add option 5=Display
//?5=Display
CASE;

// IF RCD.*SFLSEL is *Work With/Display
IF RCD.*SFLSEL = '5';

// Call program Dsp Site Information  ET.
CALL PROGRAM(Dsp Site Information  ET) ('PWEKETR');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PS_Site_ID);
PARAMETER(PAR.Oms_System_Value_Alpha);

// RCD.*SFLSEL = CND.*Reset to blanks
RCD.*SFLSEL = *BLANK;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

