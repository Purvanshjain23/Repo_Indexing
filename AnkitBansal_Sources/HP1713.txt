      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP1713
      * TITLE:       Change Farm Budget Dates
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     02/25/04
      *
      *
      * FUNCTION: Uses an edit record format to change the dates for a specific
      *           Farm Budget.
      *
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd1713   cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhsp183    if   e           k disk
      *    Creation schedule
      *
      *
     Fhsp184    if   e           k disk
      *  Budget availability
      *
      *
     Fhsp188    uf   e           k disk
      *    Farm budget header
      *
      *
     Fhsp191    if   e           k disk
      *  Farm budget status
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Workfields for date manipulation
      *
     D wkcymdiso       s               d   datfmt(*iso)
     D wksysdt         s              8  0
     D wkfcymd         s                   like(jhbfdt)
     D wktcymd         s                   like(jhbtdt)
      *
      *
      * Parm fields
      *
     D xxalphadt       s              8
     D xxfbscd         s                   like(sbfbscd)
     D xxccyymmdd      s                   like(jhbfdt)
     D xxname          s              9
     D xxabbrev        s              4
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     update        $upd1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      *
      * Verify that the record still exists.
      *
     C     d1fbsn        chain(n)  hsp188                             92
     C                   if        *in92 = *off                                 If found
      *
      * Flip dates from CCYYMMDD to MMDDYY.
      *
     C                   move      jhbfdt        wkcymdiso
     C     *mdy          move      wkcymdiso     d1fmdy
      *
     C                   if        jhbtdt <> 0
     C                   move      jhbtdt        wkcymdiso
     C     *mdy          move      wkcymdiso     d1tmdy
     C                   endif
      *
     C                   else
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
     C                   endif                                                  If found
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      *
      * Write screen 1 to CRT
      *
     C                   write     hp1713k1
     C                   write     hp1713ec
     C                   exfmt     hp1713r1
      *
      * Clear messages
      *
     C                   exsr      $clmsg
      *
      * Get user's input and set routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      routne = set1
     C                   other
      *
      * User has pressed enter
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit input fields for screen 1
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * *IN62 will be on if the record the user is trying to access has
      * been deleted by another user.  So, only perform the edits for the
      * fields on the screen if the indicator is off
      *
      * Validate:
      *   1) from date
      *   2) to date
     C                   if        *in62 = *off                                 If here
     C                   exsr      $fmdy
     C                   exsr      $tmdy
     C                   endif                                                  If here
      *
      * If there are no errors, attempt the write/update; otherwise,
      * redisplay the screen.  If a record has been deleted out from
      * under the user (*IN62 is ON), then the error message will be
      * issued in the update subroutine.  So, always perform this code.
      *
     C                   if        error = 0
     C                   exsr      $upd1
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate from date
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) cannot be negative
      *  3) must be a valid date
      *  4) must be a SUNDAY
      *
      *
     C     $fmdy         begsr
      *
     C                   select
     C                   when      d1fmdy = 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1fmdy < 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1fmdy                 92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      d1fmdy        wkcymdiso
     C                   move      wkcymdiso     wkfcymd
      *
      * Retrieve the 'day' of the week associated with the date. 'From' Date
      * must always be a SUNDAY.
      *
     C                   call      'HP8005'
     C                   parm                    wkfcymd
     C                   parm      *blank        xxname
     C                   parm      *blank        xxabbrev
      *
     C                   if        xxabbrev <> 'Sun'
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09074'
     C                   endif
     C                   endif
      *
     C                   endif                                                  If bad date
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate to date
      *----------------------------------------------------------------
      *
      *  1) required (except for Rotational)
      *  2) cannot be negative
      *  3) must be a valid date
      *  4) must be later than from date
      *  5) must be a future date
      *  6) must be a Saturday
      *
      *
     C     $tmdy         begsr
      *
     C                   z-add     0             wktcymd
      *
     C                   select
     C                   when      d1tmdy = 0 and d1cscd = 'R'
      *
     C                   when      d1tmdy = 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1tmdy < 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1tmdy                 92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      d1tmdy        wkcymdiso
     C                   move      wkcymdiso     wktcymd
     C                   endif                                                  If bad date
      *
      *
      * Retrieve the 'day' of the week associated with the date. 'TO' Date
      * must always be a SATURDAY.
      *
     C                   call      'HP8005'
     C                   parm                    wktcymd
     C                   parm      *blank        xxname
     C                   parm      *blank        xxabbrev
      *
     C                   if        xxabbrev <> 'Sat'
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09075'
     C                   endif
     C                   endif
     C                   endsl
      *
      * Now, if the TO date is OK so far, make 1 last edit that the
      * To date cannot be earlier than from date.
      *
     C                   if        *in33 = *off and
     C                             *in34 = *off and
     C                             wktcymd > 0 and
     C                             wktcymd < wkfcymd
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09009'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Write/update/delete record in database file
      *----------------------------------------------------------------
      *
     C     $upd1         begsr
      *
      * Retrieve/lock the Farm Budget Header record.
      *
     C                   if        error = 0                                    If OK
      *
     C     d1fbsn        chain     hsp188                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
     C                   endif                                                  If not found
     C                   endif                                                  If OK
      *
      * If there are no errors, revise the record.
      *
     C                   if        error = 0                                    If no error
     C                   z-add     wkfcymd       jhbfdt
     C                   z-add     wktcymd       jhbtdt
     C                   update    jhrec
     C                   endif                                                  If no error
      *
      * Set next routine
      *
     C                   if        error <> 0                                   Wh errors
     C                   eval      routne = scrn1
     C                   else
     C                   eval      routne = exit
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        lr
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm Lists
      *
     C     *entry        plist
     C                   parm                    d1fbsn
     C                   parm                    d1fscd
     C                   parm                    d1fsnm
     C                   parm                    d1btcd
     C                   parm                    d1btds
     C                   parm                    d1bacd
     C                   parm                    d1cscd
     C                   parm                    d1btwk
     C                   parm                    d1fmdy
     C                   parm                    d1tmdy
     C                   parm                    xxfbscd
     C                   parm                    rtncd
      *
      *
      * Retrieve Farm Budget Status Description
      *
     C     xxfbscd       chain     hsp191                             92
     C                   if        *in92 = *off
     C                   move      sbfbsds       d1fbsds
     C                   endif
      *
      * Retrieve Budget Availability Description
      *
     C     d1bacd        chain     hsp184                             92
     C                   if        *in92 = *off
     C                   move      babads        d1bads
     C                   endif
      *
      * Retrieve Creation Schedule Description
      *
     C     d1cscd        chain     hsp183                             92
     C                   if        *in92 = *off
     C                   move      cscsds        d1csds
     C                   endif
      *
      * Get the system date into CCYYMMDD format.
      *
     C     *mdy          move      udate         wkcymdiso
     C                   move      wkcymdiso     wksysdt
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
