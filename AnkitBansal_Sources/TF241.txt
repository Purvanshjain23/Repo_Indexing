      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF241 - Margin: Create Invoice Charge--Margin Adjustment
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     09/19/06
      *
      * Function:    This program writes a Invoice Charge records for Margin
      *              Adjustments when it is a Final run.
      *
      *              A "weekly" record is written for both MIX and VOLUME adjustments.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 11/06/06  LeAnne Ramsey
      *           The LDA in this program was not changed to match the LDA positions from
      *           the last round of Margin Adjustment changes. Because of this, the
      *           Invoice Date field was incorrect in the records. So, we have now changed
      *           the LDA in this program to match the LDA in the Margin Close submission
      *           program.
      *
      * 11/13/06  LeAnne Ramsey
      *           Changed logic to write a 'weekly' MIX record and a 'period' VOLUME record.
      *           Changed LDA positions.
      *
      * 02/15/07  LeAnne Ramsey
      *           Recompile only. "Other Cost" fields were added to "summary" files.
      *
      * 03/14/07  LeAnne Ramsey
      *           We are now calculating the "MIX" two ways:
      *             1) based on SALES data
      *             2) based on PRODUCTION data
      *           The Margin Close is, at present, hardcoded in the CL to be over
      *           PRODUCTION data. But, in case the users revert back to SALES data
      *           in the future, we set the S/P value in the LDA and accumulate based
      *           on that flag in this program.
      *
      * 07/05/07  Alice Brownfield           TFS037 project
      *           Changed to accomodate changes to the MIX
      *           amount changes in the files and to write a record
      *           for the Co-owned Transfer Product Cost
      *
      * 08/27/08  LeAnne Ramsey
      *           Removed "period" logic. Both the MIX and VOLUME are now "weekly".
      *           Removed "sales" logic; we will now only have "production" logic.
      *
      * 11/20/08  LeAnne Ramsey
      *           As a prep for synchronizing the TFS and Meat Cost LDAs, we
      *           removed the unused LDA fields.
      * 05/07/24  Santosh Patil P310149 - Field length is increased
      *           in TFP015. Function is recompiled only.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Ftfp005    if   e           k disk
      *    Charge codes
      *
      *
     Ftfl015a   if   e           k disk
      *    Mix summary--weekly
      *
      *
     Ftfl018a   if   e           k disk
      *    Volume summary--weekly
      *
      *
     Ftfp021    o    e           k disk
      *  Invoice charges
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
      *
      *
      * Workfields
      *
     D wkmixam         s                   like(mwslmixam)
     D wktrpam         s                   like(mwstrpam)
      *
     D wksvolam        s                   like(vwsvolam)
     D wktvolam        s                   like(vwtvolam)
      *
      *
      * Parms
      *
     D xxicsn          s                   like(icicsn)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      *  Local data area
      *---------------------------------------------------------------
      *
     d lda            uds                  dtaara(*lda)
     D  ldyr                   2      5  0
     D  ldwk                   6      7  0
      *
     D  ldwedt                29     36  0
      *
     D  ldpedt                67     74  0
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************************************8
      * Mainline
      ****************************************************************************************8
      *
      *--------------------------------------------
      * MIX--Weekly
      *--------------------------------------------
      * Read all records that have a blank in the Item Type Code (total records)
      * in the weekly Mix Summary file for this Year/Week accumulating
      * Seaboard and Triumph 'MIX' amounts.
      *
     C     key01         setll     tfl015a
     C                   dou       *in91 = *on                                  Do mix
     C     key01         reade     tfl015a                                91
     C                   if        *in91 = *off and mwitycd = ' '               If not EOF
      *
     C                   add       mwpumixam     wkmixam
     C                   add       mwstrpam      wktrpam
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do mix
      *
      * Write Invoice Charge record for Mix Adjustment for the Week.
      *
     C                   clear                   icrec
     C                   move      'MAMIXADJ  '  iccccd
     C                   z-add     ldwedt        icicdt
     C                   z-add     wkmixam       icicam
     C                   exsr      $wrt021
      *
      * Write an Invoice Charge record for Co-owned Transfer Product Cost
      *
     C                   if        wktrpam <> 0
     C                   clear                   icrec
     C                   move      'MACOTRSF  '  iccccd
     C                   z-add     ldpedt        icicdt
     C                   z-add     wktrpam       icicam
     C                   exsr      $wrt021
     C                   endif
      *
      *--------------------------------------------------------------------------------------
      * VOLUME--Weekly
      *--------------------------------------------------------------------------------------
      * Read all records in the weekly Volume Summary file for this Year/Week accumulating
      * Seaboard and Triumph 'VOLUME' amounts.
      *
      *
     C     key01         setll     tfl018a
     C                   dou       *in91 = *on                                  Do volume
     C     key01         reade     tfl018a                                91
     C                   if        *in91 = *off                                 If not EOF
     C                   add       vwsvolam      wksvolam
     C                   add       vwtvolam      wktvolam
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do volume
      *
      * Write an Invoice Charge record for Volume Adjustment.
      *
     C                   clear                   icrec
     C                   move      'MAVOLADJ  '  iccccd
     C                   z-add     ldpedt        icicdt
     C     wksvolam      sub       wktvolam      icicam
     C                   exsr      $wrt021
      *
      *-------------------
      * EOF processing
      *-------------------
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Write Invoice Charge record
      *---------------------------------------------------------------
      *
     C     $wrt021       begsr
      *
      * Set the System-generated Flag to Yes
      * Set the Invoice Status to Open
      * Set the Units field to 1
      *
     C                   move      yes           icsysfl
     C                   move      'O'           icinstcd
     C                   z-add     1             icunit
      *
      * Retrieve the Charge Code info.
      *
     C     iccccd        chain     tfp005                             92
     C                   if        *in92 = *off                                 If valid code
     C                   move      ccinfl        icinfl
     C                   move      ccsmcd        icsmcd
     C                   endif                                                  If valid code
      *
      * Get the next system-assigned 'Invoice Charge Number'.
      *
     C                   call      'TF807'
     C     icicsn        parm      0             xxicsn
      *
      * Write Invoice Charge record.
      *
     C                   write     icrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    ldyr
     C                   kfld                    ldwk
      *
     C                   endsr
      /eject
