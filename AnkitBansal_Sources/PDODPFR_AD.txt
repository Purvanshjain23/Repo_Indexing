// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDODPFR
// ?Date: 14.08.2025 Time: 12:04:12
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

// WRK.Print (Yes/No) USR = CND.Yes
WRK.Print_Yes_No_USR = 'Y';

// PAR.First Time Flag = CND.Yes
PAR.First_Time_Flag = 'Y';

//?USER: Process top of page

CASE;

// IF PAR.First Time Flag is Yes
IF PAR.First_Time_Flag = 'Y';

// TOP.Company Number = PAR.Company Number
TOP_Company_Number = PAR.Company_Number;

//?Get Company Name.
CASE;

// IF TOP.Company Number is Equal to zero
IF TOP_Company_Number = *ZERO;

// TOP.Company Name = CON.All Companies
TOP_Company_Name = 'All Companies';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(TOP_Company_Number);
PARAMETER(TOP_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Company Name = CON.company not found
TOP_Company_Name = 'company not found';

ENDIF;

ENDIF;

//?Format Date.
// PAR.Year  NBR USR = PAR.Date - ATR *YEAR
PAR.Year_NBR_USR = DATEDTLS(PAR.Date_ATR 'YR' 1111111 'NONE' 'N' 1);

// PAR.Month NBR USR = PAR.Date - ATR *MONTH
PAR.Month_NBR_USR = DATEDTLS(PAR.Date_ATR 'MO' 1111111 'NONE' 'N' 1);

// PAR.TXT Year Number       USR = CVTVAR(PAR.Year  NBR USR)
PAR.TXT_Year_Number_USR = CVTVAR(PAR.Year_NBR_USR);

// PAR.TXT Month Number      USR = CVTVAR(PAR.Month NBR USR)
PAR.TXT_Month_Number_USR = CVTVAR(PAR.Month_NBR_USR);

// TOP.TXT MM/YY             USR = CONCAT(PAR.TXT Month Number      USR,CON./,CON.*
TOP_TXT_MM_YY_USR = PAR.TXT_Month_Number_USR + '/' (*ZERO);

// TOP.TXT MM/YY             USR = CONCAT(TOP.TXT MM/YY             USR,PAR.TXT Yea
TOP_TXT_MM_YY_USR = TOP_TXT_MM_YY_USR + PAR.TXT_Year_Number_USR (*ZERO);

// TOP.USR Work Field 5A     USR = Condition name of PAR.Sale Type             USR
TOP_USR_Work_Field_5A_USR = RTVCND(PAR.Sale_Type_USR);

// TOP.USR Work Field 7A = Condition name of PAR.Report Type Both      USR
TOP_USR_Work_Field_7A = RTVCND(PAR.Report_Type_Both_USR);

// TOP.Print Yes/No          USR = PAR.Print Yes/No          USR
TOP_Print_Yes_No_USR = PAR.Print_Yes_No_USR;

// TOP.Parent Customer = PAR.Parent Customer
TOP_Parent_Customer = PAR.Parent_Customer;

//?Get Parent Customer Name.
CASE;

// IF TOP.Parent Customer is equal to zero
IF TOP_Parent_Customer = *ZERO;

// TOP.Name = CON.All Parent Customers
TOP_Name = 'All Parent Customers';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(TOP_Parent_Customer);
PARAMETER(TOP_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Name = CON.parent customer not found
TOP_Name = 'parent customer not found';

ENDIF;

ENDIF;

// TOP.A/R Customer Number = PAR.A/R Customer Number
TOP_AR_Customer_Number = PAR.AR_Customer_Number;

//?Get A/R Customer Name.
CASE;

// IF TOP.A/R Customer Number is equal to zero
IF TOP_AR_Customer_Number = *ZERO;

// TOP.A/R Customer Name = CON.All A/R Customers
TOP_AR_Customer_Name = 'All A/R Customers';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(TOP_AR_Customer_Number);
PARAMETER(TOP_AR_Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// TOP.A/R Customer Name = CON.A/R Customer not found
TOP_AR_Customer_Name = 'A/R Customer not found';

ENDIF;

ENDIF;

CASE;

// IF PAR.Ship To Customer is equal to zero
IF PAR.Ship_To_Customer = *ZERO;

// TOP.Ship To Name          DRV = CON.All Ship To Customers
TOP_Ship_To_Name_DRV = 'All Ship To Customers';

// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Ship To Customer = PAR.Ship To Customer
TOP_Ship_To_Customer = PAR.Ship_To_Customer;

EXECUTE FUNCTION(Ship To Name          DRV) TYPE(DRVFLD)                        AC1573561;
PARAMETER(TOP_Ship_To_Name_DRV);
PARAMETER(TOP_Ship_To_Customer);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Ship_To_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


ENDIF;

// TOP.Territory Code = PAR.Territory Code
TOP_Territory_Code = PAR.Territory_Code;

//?Get Territory Description.
CASE;

// IF TOP.Territory Code is *All
IF TOP_Territory_Code = *ALL;

// TOP.Territory Code = CON.*BLANK
TOP_Territory_Code = *BLANK;

// TOP.Territory Description = CON.All Territories
TOP_Territory_Description = 'All Territories';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV All                RT) TYPE(RTVOBJ) FILE(PDLVREP)          AC1489002;
PARAMETER(TOP_Territory_Code);
PARAMETER(TOP_Territory_Description);
PARAMETER(LCL.TER_Unused_Sts_1);
PARAMETER(LCL.TER_Unused_Sts_2);
PARAMETER(LCL.TER_Unused_Sts_3);
PARAMETER(LCL.TER_Unused_Sts_4);
PARAMETER(LCL.Regional_Salesperson_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Territory Description = CON.territory desc not found
TOP_Territory_Description = 'territory desc not found';

ENDIF;

ENDIF;

// TOP.Sales Route Code = PAR.Sales Route Code
TOP_Sales_Route_Code = PAR.Sales_Route_Code;

//?Get Sales Route Description.
CASE;

// IF TOP.Sales Route Code is *All
IF TOP_Sales_Route_Code = 'ALL';

// TOP.Sales Route Code = CON.*BLANK
TOP_Sales_Route_Code = *BLANK;

// TOP.Sales Route Description = CON.All Sales Route Codes
TOP_Sales_Route_Description = 'All Sales Route Codes';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1270614;
PARAMETER(TOP_Sales_Route_Code);
PARAMETER(TOP_Sales_Route_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Sales Route Description = CON.sale route desc not found
TOP_Sales_Route_Description = 'sale route desc not found';

ENDIF;

ENDIF;

//?Load Column Heading Fields.
CASE;

// IF PAR.Sale Type             USR is CWT
IF PAR.Sale_Type_USR = 'C';

// TOP.USR Work Field 5A ref USR = CON.  CWT
TOP_USR_Work_Field_5A_ref_USR = 'CWT';

// IF *OTHERWISE
IF *OTHERWISE;

// TOP.USR Work Field 5A ref USR = CON.Loads
TOP_USR_Work_Field_5A_ref_USR = 'Loads';

ENDIF;

// TOP.USR Work Field 5A ref3USR = TOP.USR Work Field 5A ref USR
TOP_USR_Work_Field_5A_ref3USR = TOP_USR_Work_Field_5A_ref_USR;

//?This Year.
// PAR.This Year (YYYY) USR = PAR.Date - ATR *YEAR
PAR.This_Year_YYYY_USR = DATEDTLS(PAR.Date_ATR 'YR' 1111111 'NONE' 'N' 1);

// PAR.Year Alpha (YYYY) USR = CVTVAR(PAR.This Year (YYYY) USR)
PAR.Year_Alpha_YYYY_USR = CVTVAR(PAR.This_Year_YYYY_USR);

// PAR.Year Alpha (YY) USR = SUBSTRING(PAR.Year Alpha (YYYY) USR,CON.3,CON.2)
PAR.Year_Alpha_YY_USR = SUBSTRING(PAR.Year_Alpha_YYYY_USR:3:2);

// TOP.USR Work Field 3A = CONCAT(CON.',PAR.Year Alpha (YY) USR,CON.*ZERO)
TOP_USR_Work_Field_3A = '''' + PAR.Year_Alpha_YY_USR (*ZERO);

// TOP.TXT MM/YY 2           USR = CONCAT(PAR.TXT Month Number      USR,CON./,CON.*
TOP_TXT_MM_YY_2_USR = PAR.TXT_Month_Number_USR + '/' (*ZERO);

// TOP.TXT MM/YY 2           USR = CONCAT(TOP.TXT MM/YY 2           USR,PAR.Year Al
TOP_TXT_MM_YY_2_USR = TOP_TXT_MM_YY_2_USR + PAR.Year_Alpha_YY_USR (*ZERO);

//?Last Year.
// PAR.Last Year (YYYY) USR = PAR.This Year (YYYY) USR - CON.1
PAR.Last_Year_YYYY_USR = PAR.This_Year_YYYY_USR - 1;

// PAR.Year Alpha (YYYY) USR = CVTVAR(PAR.Last Year (YYYY) USR)
PAR.Year_Alpha_YYYY_USR = CVTVAR(PAR.Last_Year_YYYY_USR);

// PAR.Year Alpha (YY) USR = SUBSTRING(PAR.Year Alpha (YYYY) USR,CON.3,CON.2)
PAR.Year_Alpha_YY_USR = SUBSTRING(PAR.Year_Alpha_YYYY_USR:3:2);

// TOP.Alpha Zeroes 3        USR = CONCAT(CON.',PAR.Year Alpha (YY) USR,CON.*ZERO)
TOP_Alpha_Zeroes_3_USR = '''' + PAR.Year_Alpha_YY_USR (*ZERO);

// TOP.TXT MM/YY 3           USR = CONCAT(PAR.TXT Month Number      USR,CON./,CON.*
TOP_TXT_MM_YY_3_USR = PAR.TXT_Month_Number_USR + '/' (*ZERO);

// TOP.TXT MM/YY 3           USR = CONCAT(TOP.TXT MM/YY 3           USR,PAR.Year Al
TOP_TXT_MM_YY_3_USR = TOP_TXT_MM_YY_3_USR + PAR.Year_Alpha_YY_USR (*ZERO);

ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: On print of detail format

//?Reset First Time Flag.
CASE;

// IF PAR.First Time Flag is Yes
IF PAR.First_Time_Flag = 'Y';

// PAR.First Time Flag = CND.NO
PAR.First_Time_Flag = 'N';

ENDIF;

CASE;

// IF WRK.Print (Yes/No) USR is Yes
IF WRK.Print_Yes_No_USR = 'Y';

// WRK.Print (Yes/No) USR = CND.No
WRK.Print_Yes_No_USR = 'N';

ENDIF;

CASE;

// IF CUR.Current YTD Weight is *Zero
IF CUR.Current_YTD_Weight = *ZERO;

// AND CUR.Last YTD Weight is *Zero
AND CUR.Last_YTD_Weight = *ZERO;

// AND CUR.Last year Month Change is equal to zero
AND CUR.Last_year_Month_Change = *ZERO;

// AND CUR.Current year Month Change is equal to zero
AND CUR.Current_year_Month_Change = *ZERO;

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Name.Address,Fax   RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1449132;
PARAMETER(CUR.Parent_Customer);
PARAMETER(CUR.USR_Customer_Short_Name);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

