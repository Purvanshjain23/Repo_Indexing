// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKWOXFR
// ?Date: 14.08.2025 Time: 02:53:10
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?E14675 JJH 03/20/19 - Update BOL
//?- Logic added in Step 2
//?- Update BOL Live Weight Received / BOL Head Received Market
//?- This is the same logic that occurs in Payment Producer Edit +XF
//?- This will allow Freight and Net Pay to be calculated the same
//?E12054 JJH 11/13/17 - Payment Edit Messages
//?- No Logic Changes.
//?- New output parameters in the PayEdt Chk For Errors RT are
//?  moved to NLL. In addition, this RTVOBK was already commented out.
ENDDO;

//?PK0254 -Run Steps 1,2, and 3 from current processing.
//?(New MPR Step) Build Prior Day Files from tattoos in balance.
EXECUTE FUNCTION(Rtv Payment Processing RT) TYPE(RTVOBJ) FILE(PKC4REP)          AB1147409;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.Pmt_Current_Payment_Date);
PARAMETER(WRK.Pmt_Current_Payment_Step);
PARAMETER(WRK.PP_Commission_Paym_Error);
PARAMETER(WRK.PP_Payment_Error);
PARAMETER(WRK.PP_Unused_Nbr_1);
PARAMETER(WRK.PP_Repayment_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

//?Validate if Market Price exist for calculating NPPC for Seaboard.
DO;

// Call program Clc Base Mkt Dollars  XF.
CALL PROGRAM(Clc Base Mkt Dollars  XF) ('PKBSE01');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.Pmt_Current_Payment_Date);
PARAMETER(100);
PARAMETER('NPPCI');
PARAMETER(LCL.Base_Mkt_Prc_Amt_Tot_USR);

CASE;

// IF LCL.Base Mkt Prc Amt Tot USR is Not Entered
IF LCL.Base_Mkt_Prc_Amt_Tot_USR = *ZERO;

// Retrieve message - 'WARNING: Cant calculate SBD NPPC. Check Mkt/Group and rerun Payment Edit for
LCL.Pager_Msg_USR = RTVMSG(PRK0990);
PARAMETER(PAR.CC_Company_Number);

EXECUTE FUNCTION(Snd Alpha Pager Msg   IF) TYPE(EXCINTFUN)                      AB1239371;
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPESBDNPPC');
PARAMETER(LCL.Pager_Msg_USR);
{
 //?Execute internal function

 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(PAR.Company_Number_USR);
 PARAMETER(PAR.Company_Value_Code_USR);
 PARAMETER(PAR.System_Value_Alpha_USR);

 // PAR.Pager Name USR = PAR.System Value Alpha    USR
 PAR.Pager_Name_USR = PAR.System_Value_Alpha_USR;

 CASE;

 // IF PAR.Pager Name USR is Not Entered
 IF PAR.Pager_Name_USR = *BLANK;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute command - 'SND Pager Message'
 EXECUTE COMMAND(PRK0991);
 PARAMETER(PAR.Pager_Msg_USR);
 PARAMETER(PAR.Pager_Name_USR);

 ENDIF;

}


ENDIF;

ENDDO;

//?PK0254 -- For MPR, dont check for Unbalanced Tattoos.
//?Step 1: Validate if all Tattoo's are balanced.
CASE;

// IF WRK.Pmt Current Payment Step is Less or Equal to Step 1
IF WRK.Pmt_Current_Payment_Step <= 00001;

//?Step 1  Validate that job may continue - Current Payment Date
DO;

// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

//?UPD:  Current Payment Step = 1
CASE;

// IF WRK.Pmt Current Payment Step is Less or Equal to Step 1
IF WRK.Pmt_Current_Payment_Step <= 00001;

// WRK.Pmt Current Payment Step = CON.00001
WRK.Pmt_Current_Payment_Step = 00001;

EXECUTE FUNCTION(Upd Paymnt Prc         CH) TYPE(CHGOBJ) FILE(PKC4REP)          AB1146820;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Step);
PARAMETER(WRK.PP_Commission_Paym_Error);
PARAMETER(WRK.PP_Payment_Error);
PARAMETER(WRK.PP_Unused_Nbr_1);
PARAMETER(WRK.PP_Repayment_Status);
{
 //?USER: Processing before Data read

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


ENDIF;

// LCL.Date Type USR = CND.Current Kill Date
LCL.Date_Type_USR = 'C';

//?PK0254 - Dont do this for MPR
ENDDO;

ENDIF;

//?Step 2 Create Carcass Detail Shell from Evaluation transaction
//?Update the Tattoo header for payment processed code, and R re-cal Net
//?Held over's are checked to see if they have been completed
//?If this needs to be rerun call IS Department to reset step to 1.
CASE;

// IF WRK.Pmt Current Payment Step is Less or Equal to Step 2
IF WRK.Pmt_Current_Payment_Step <= 00002;

//?Step 2 Create Carcass Records and Flag Tattoo Header for Payments
DO;

CASE;

// IF WRK.Pmt Current Payment Step is Less or Equal to Step 1
IF WRK.Pmt_Current_Payment_Step <= 00001;

// WRK.Pmt Current Payment Step = CON.00002
WRK.Pmt_Current_Payment_Step = 00002;

EXECUTE FUNCTION(Upd Paymnt Prc         CH) TYPE(CHGOBJ) FILE(PKC4REP)          AB1146820;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Step);
PARAMETER(WRK.PP_Commission_Paym_Error);
PARAMETER(WRK.PP_Payment_Error);
PARAMETER(WRK.PP_Unused_Nbr_1);
PARAMETER(WRK.PP_Repayment_Status);
{
 //?USER: Processing before Data read

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


ENDIF;

// Call program Prc Crt CDtl/Prc Flg  XF.
CALL PROGRAM(Prc Crt CDtl/Prc Flg  XF) ('PKPYXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.Pmt_Current_Payment_Date);
PARAMETER(PAR.Oms_System_Value_Alpha);

//?E14675 JJH 03/20/19 - Update BOL Live Wgt Received/Head Received
//?Check if Company updates BOL Weight prior to Step 3
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?Get Company Value HPEBOLLVWT to determine if the update should
//?occur for the Company.  This Company Value was put in place to
//?allow this process to run for companies 440, 960, and 961. Company
//?360 will not call the program to update the BOL Live Weight.
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPEBOLLVWT');
PARAMETER(LCL.Upd_BOL_Live_Wgt_Com_USR);

//?If Update Live BOL Wgt Company flag = Y, update weight
CASE;

// IF LCL.Upd BOL Live Wgt Com USR is Yes
IF LCL.Upd_BOL_Live_Wgt_Com_USR = 'Y';

//?The date that is retrieved from the Company Values file is used to
//?determine if the next program is called to update the BOL Live
//?Weight Received.  If the Payment Date being processed is on or
//?after the date retrieved, then the program is called. Otherwise
//?The program is not called.
// Call program Rtv Company Value Nbr XF.
CALL PROGRAM(Rtv Company Value Nbr XF) ('PDHGXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPEBOLLVDT');
PARAMETER(LCL.Upd_BOL_Live_Wgt_Dte_USR);

//?If current Payment Date >= HPEBOLLVDT, call pgm to update weight
CASE;

// IF WRK.Pmt Current Payment Date GE LCL.Upd BOL Live Wgt Dte USR
IF WRK.Pmt_Current_Payment_Date >= LCL.Upd_BOL_Live_Wgt_Dte_USR;

// Call program Upd BOL LivWgt/HdRcvd XF.
CALL PROGRAM(Upd BOL LivWgt/HdRcvd XF) ('PWGTXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Date);
PARAMETER(PAR.Oms_System_Value_Alpha);

ENDIF;

ENDIF;

ENDIF;

//?Step 2 ends
CASE;

// IF WRK.Pmt Current Payment Step is Less or Equal to Step 3
IF WRK.Pmt_Current_Payment_Step <= 00003;

// WRK.Pmt Current Payment Step = CON.00003
WRK.Pmt_Current_Payment_Step = 00003;

EXECUTE FUNCTION(Upd Paymnt Prc         CH) TYPE(CHGOBJ) FILE(PKC4REP)          AB1146820;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Step);
PARAMETER(WRK.PP_Commission_Paym_Error);
PARAMETER(WRK.PP_Payment_Error);
PARAMETER(WRK.PP_Unused_Nbr_1);
PARAMETER(WRK.PP_Repayment_Status);
{
 //?USER: Processing before Data read

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


ENDIF;

ENDDO;

ENDIF;

//?Step 3 Create Freight Allocation, D/A's and Net Pay
//?This step may be rerun as many time as need through and including
//?          Step 5.
CASE;

// IF WRK.Pmt Current Payment Step is Less or Equal to Step 5
IF WRK.Pmt_Current_Payment_Step <= 00005;

//?Step 3 Carcass Merit Pgm, Frt Allocation, D/A and Net
DO;

// Call program Prc Cmp/Frt/Da's/Net  XF.
CALL PROGRAM(Prc Cmp/Frt/Da's/Net  XF) ('PKSBXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Pmt_Current_Payment_Date);

ENDDO;

ENDIF;

