// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMBYPVR
// ?Date: 14.08.2025 Time: 03:42:34
// ?------------------------------------------------------------------------------------------------

//?USER: Load screen

// DTL.Warehouse 1 USR = DTL.Warehouse Code
DTL.Warehouse_1_USR = DTL.Warehouse_Code;

CASE;

// IF PAR.Destination City is Not Entered
IF PAR.Destination_City = *BLANK;

// DTL.Destination City = CON.*ALL
DTL.Destination_City = *ALL;

ENDIF;

EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(DTL.Warehouse_Code);
PARAMETER(DTL.Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


//?USER: Process command keys

//?F4=Prompt
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.Warehouse Code
IF PGM.*Cursor_field = DTL.Warehouse_Code;

// Call program SEL Prod Whse-No Sec   SR.
CALL PROGRAM(SEL Prod Whse-No Sec   SR) ('PMCLSRR');
PARAMETER(DTL.Warehouse_Code);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> DTL.Warehouse 1 USR
IF PGM.*Cursor_field = DTL.Warehouse_1_USR;

// Call program SEL Prod Whse-No Sec   SR.
CALL PROGRAM(SEL Prod Whse-No Sec   SR) ('PMCLSRR');
PARAMETER(DTL.Warehouse_1_USR);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> DTL.To State State Code
IF PGM.*Cursor_field = DTL.To_State_State_Code;

// Call program SEL State              SR.
CALL PROGRAM(SEL State              SR) ('CAAHSRR');
PARAMETER(DTL.To_State_State_Code);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> DTL.Shipping Company Number
IF PGM.*Cursor_field = DTL.Shipping_Company_Number;

// Call program SEL Company - plants   SR.
CALL PROGRAM(SEL Company - plants   SR) ('PPF2SRR');
PARAMETER(DTL.Shipping_Company_Number);

ENDIF;

ENDIF;

//?USER: Validate fields

CASE;

// IF DTL.Warehouse 1 USR is EQ Blank
IF DTL.Warehouse_1_USR = *BLANK;

// AND DTL.Shipping Company Number is Zeros
AND DTL.Shipping_Company_Number = *ZERO;

// AND DTL.Destination City is Not Entered
AND DTL.Destination_City = *BLANK;

// Send error message - 'To Company /Warehouse/OR City must be entered.'
ERROR(USR3674);
MSGPARM(DTL.Warehouse_1_USR);
MSGPARM(DTL.Shipping_Company_Number);

ENDIF;

CASE;

// IF DTL.Warehouse 1 USR is Entered
IF DTL.Warehouse_1_USR <> *BLANK;

EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(DTL.Warehouse_1_USR);
PARAMETER(DTL.Warehouse_Desc_DRV);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


CASE;

// IF DTL.Warehouse Desc DRV is equal to blank
IF DTL.Warehouse_Desc_DRV = *BLANK;

// Send error message - 'Warehouse Codes not found.'
ERROR(USR0007);
MSGPARM(DTL.Warehouse_1_USR);

ENDIF;

ENDIF;

//?Validate: Copy all rates from 1 warehouse to all actv whse for company
CASE;

// IF PAR.Destination City is Not Entered
IF PAR.Destination_City = *BLANK;

//?05/16/07 JRB Removed hard coded companies
EXECUTE FUNCTION(Rtv Plant Co Status   RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1761084;
PARAMETER(DTL.Shipping_Company_Number);
PARAMETER(LCL.Plant_Company_Sts);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Plant Company Sts is Plant Company
IF LCL.Plant_Company_Sts = 'P';

CASE;

// IF DTL.Warehouse 1 USR is EQ Blank
IF DTL.Warehouse_1_USR = *BLANK;

//?Copy to all active whses for the shipping company
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'To Company &2 & Warehouse &1 cannot both be entered.'
ERROR(USR3673);
MSGPARM(DTL.Warehouse_1_USR);
MSGPARM(DTL.Shipping_Company_Number);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF DTL.Shipping Company Number is Not Zeros
IF DTL.Shipping_Company_Number <> *ZERO;

// Send error message - 'Invalid Plant Company'
ERROR(USR3603);

SET CURSOR;

ENDIF;

ENDIF;

ENDIF;

//?Validate: Copy all rates from 1 warehouse to a different warehouse
CASE;

// IF PAR.Destination City is Not Entered
IF PAR.Destination_City = *BLANK;

CASE;

// IF DTL.Warehouse Code EQ DTL.Warehouse 1 USR
IF DTL.Warehouse_Code = DTL.Warehouse_1_USR;

// Send error message - 'To Warehouse &1 must be diff than from warehouse.'
ERROR(USR3654);
MSGPARM(DTL.Warehouse_1_USR);

ENDIF;

ENDIF;

//?To City and to state must be entered together
CASE;

// IF DTL.City is NE Blanks
IF ( DTL.City <> *BLANK;

// AND DTL.To State State Code is *Blanks
AND DTL.To_State_State_Code = *BLANK );

// OR DTL.City is Blank
OR ( DTL.City = *BLANK;

// AND DTL.To State State Code is State code not Blanks
AND DTL.To_State_State_Code <> *BLANK );

// Send error message - 'City & State must be entered together.'
ERROR(USR3655);
MSGPARM(DTL.City);
MSGPARM(DTL.To_State_State_Code);

ENDIF;

// Execute function CVT Str to Upper Alpha US.
EXECUTE FUNCTION(CVT Str to Upper Alpha US) TYPE(EXCUSRSRC) ('PDWEUFR');
PARAMETER(DTL.City);
PARAMETER(DTL.City);
{
 PDWEUFR:  PGM PARM(&STRIN &STROUT)

 CHGVAR VAR(&FLDOUT) VALUE('%XLATE(UPTEXT &STRIN)')
}


//?To city required
CASE;

// IF PAR.Destination City is Entered
IF PAR.Destination_City <> *BLANK;

// AND DTL.City is Blank
AND DTL.City = *BLANK;

// Send error message - 'City & State must be entered together.'
ERROR(USR3655);
MSGPARM(DTL.City);
MSGPARM(DTL.To_State_State_Code);

ENDIF;

//?USER: User defined action

CASE;

// IF DTL.*CMD key is *Exit
IF DTL.*CMD_key = '03';

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Zzz Cpy Carr/Whse Rts XF.
CALL PROGRAM(Zzz Cpy Carr/Whse Rts XF) ('PMBZXFR');
PARAMETER(DTL.Carrier_Code);
PARAMETER(DTL.Warehouse_Code);
PARAMETER(DTL.Destination_City);
PARAMETER(DTL.State_Code);
PARAMETER(DTL.Warehouse_1_USR);
PARAMETER(DTL.City);
PARAMETER(DTL.To_State_State_Code);
PARAMETER(DTL.Shipping_Company_Number);

ENDIF;

