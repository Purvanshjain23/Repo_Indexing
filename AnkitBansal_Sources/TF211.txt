      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF211 - Extract Claims from Claims System
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     03/30/05
      *
      * Function:    This program extracts Claims data and writes weekly records when:
      *                1) there are no errors from the edit
      *
      *              If it is a Final run, we update the AR Claim file.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 03/13/06  LeAnne Fedor
      *           Recompile only. "Floor" produced pounds and amount were added
      *           to file TFP010.
      *
      * 08/29/06  LeAnne Fedor
      *           Went to 2 scenarios for calculating amounts.
      *
      * 09/06/06  LeAnne Fedor
      *           We are having a problem on "claim sharing". When they enter a claim to
      *           adjust another claim, the week-ending dates (and therefore the %%) get
      *           messed up. We needed the "orignal invoice" to get the correct week-ending
      *           date of the original sale. So, we added more logic to attempt to find the
      *           original order.
      *
      * 09/20/06  LeAnne Fedor
      *           Changed one of the rules for the "new" scenario added on 8/29/06.
      *           Now, the "net claim price per pound" must be GREATER THAN zero instead
      *           of NOT EQUAL to zero.
      *
      * 11/29/06  LeAnne Ramsey
      *           Change all "date" logic to use Calendar file DMPCAL. And, we now
      *           format Synon dates to CCYYMMDD and MMDDYY formats using ILE date
      *           logic instead of calling a generic program to flip the date.
      *
      * 12/05/06  LeAnne Ramsey
      *           A new customer (Gordon Food Service) is demanding that all product be
      *           shipped to them from the Triumph (St. Joe) location. This has required
      *           the Synon Systems to have both an Accounting Company and a Shipping
      *           Company. For the TF system, we always want to use the Accounting Company.
      *           So, our new logic ferrets out the "accounting company" to use for our
      *           TF records/files.
      *
      * 02/14/07  LeAnne Ramsey
      *           Recompile only. New field "STD Other Cost/LB" was added to
      *           Weekly Product Revenue Detail file.
      *
      *
      * 04/16/07  LeAnne Ramsey
      *           Recompile only. Fields were added/changed in the Weekly
      *           Product Revenue file.
      *           Added:   Byproduct Mix Flag
      *                    Meat Cost Group Code
      *           Changed: Exclude from Mix Flag     to  Mix Flag
      *                    Exclude from Volume Flag  to  Volume Flag
      *                    Capability Flag           to  Inventory Flag
      *
      * 05/29/07  LeAnne Ramsey
      *           Added the following fields to the Weekly Product Revenue Detail file.
      *              TF Percent Owned
      *              Co-owned Flag
      *              Producing Company
      *
      * 08/13/07  LeAnne Ramsey
      *           We are now putting Work-in-Process items in file TFP010.
      *           Prior to this, we only had Finished Goods items in TFP010.
      *           So, we changed our logic here to process a logical file that
      *           selects Finished Goods only.
      *
      * 09/11/08  LeAnne Ramsey
      *           Recompile only. Export/Domestic Flag was added to TFP010-
      *           Weekly Product Revenue Detail file.
      *
      * 12/10/09  LeAnne Ramsey
      *           As a result of the Choice White Grease problem, I have changed our
      *           logic to set the Exempt/Not Exempt status based on the Item in the
      *           TFP010 file...if there is one.  Otherwise, revert back to the original
      *           logic of using the value from the Sales History recod.
      *
      * 01/05/11  LeAnne Ramsey (E1245)
      *           Tom Dye wants Claims for Affiliated Sales customers to be "shared" differently
      *           than anything we have done before. So, I added a new routine ($calc3) to do
      *           this. Claims for Affiliated Sales customers will have 'IS' in our new Customer
      *           Type field in TFP022-Claim Adjustments. This field will be blank for all other
      *           claims....this is our we can identify those Affiliated Sales Claims...since we
      *           don't carry 'customer' in our TFP022 file. We will populate this new field
      *           with the value from the OMS Sales History record.
      *
      * 01/31/17  Rose Centonze  S9047
      *           Usd Billing Detail Gross as Gross instead of Claim Item Amount. The revenue
      *           adjustment needs to be out of the amount for the Gross amt to be correct
      *
      * 06/29/17  Rose Centonze
      *           instead of omhstpl1 go to sales hist with claim order nmbr and no company
      *            using lf omhstpog
      *
      * 11/14/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Added 25 STF fields to TFP010 file.
      *           Added 2 fields to TFP022 file:
      *             CLXRPPC  - STF RESPONSIBILITY %
      *             CLXNCLAM - STF NET CLAIM AMT
      *           Added STF Calculations for Scenario 1.
      *           TF410CL was changed to select Company 440 in Open Query Logic.
      *           STF (Company 440) data will now be populated into it's own STF fields in
      *           TFP010 file in order to create new STF reports like the ones used in Fees
      *           & Payments system.
      *
      * 11/16/18  Rose Centonze (S13578 )
      *           stmt 932 - for STF pct update unused % field in pdmkcpp
      *                      scenario 2 - update clsnclam
      *
      * 07/23/19  Rose Centonze (S15250 ) for affiliated sales - Scenario 3 -- also init
      *             CLXRPPC  - STF RESPONSIBILITY %   to 0%
      *             CLXNCLAM - STF NET CLAIM AMT      to .00 amt  like TFs
      *
      * 05/17/22  Danny Nguyen  (DO2484 - WI 479 STF Variance Reporting)
      *           Recompile only. Added 2 STF fields to TFP010 file.
      *           PRXYPC   - STF STD YIELD %
      *           PRXPMPPC - STF PUMP %
      *
      * 10/10/22  R Centonze   W105621 - Increase price fields to handle > 999.99
      *                        CHANGE @@ANPRPR TO SIZE 10.6  --> pranprpr tfp010
      *                        CHANGE @@anprpr TO SIZE 10.6  --> clanprpr tfp022
      *                        CHANGE @@nclpr  TO SIZE 10.6  --> clnclpr  tfp022
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     F*omhstpl1  if   e           k disk
     Fomhstpog  if   e           k disk
      *    Sales history      key: f4c4nb  f4dpnb
      *
      *
     Fomhstpoa  if   e           k disk    prefix(p1)
      *    Sales history
      *
      *
     Fpdmkcpl7  uf   e           k disk
      *    AR claim
      *
      *
     Fpdmocpl1  if   e           k disk
      *    AR claim product
      *
      *
     Fppa3cpl1  if   e           k disk
      *    AR claim resale header
      *
      *
     Fpdmpcpl1  if   e           k disk
      *    AR claim resale products
      *
      *
     Ftfp007    if   e           k disk
      *    Exempt codes
      *
      *
     Ftfl010c   if   e           k disk
      *    Weekly product revenue detail
      *    (LF selects only Finished Goods)
      *
      *
     Ftfl010i   if   e           k disk    rename(prrec:prreci) prefix(p2)
      *    Weekly product revenue detail
      *
      *
     Ftfp022    o    e           k disk
      *  Claim adjustments
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D resalefl        s              1
     D calcfl          s              1
     D orderfl         s              1
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     d wksynasdt       s                   like(f4gndt)
      *
      *
      * Workfields
      *
     d wkorno          s                   like(clclorno)
      *
     D wkrcexfl        s                   like(prrcexfl)
     D wkprexfl        s                   like(prprexfl)
     D wkexemptfl      s                   like(prprexfl)
      *
      *
     d wkwedt          s                   like(closwedt)
     d wktam           s                   like(cltnclam)
     d wkaam           s                   like(clanclam)
     d wkexcd          s                   like(exexcd)
     D wkrate1         s              9  6
     D wkrate2         s              9  6
      *
     d wktnprpc        s                   like(prtnprpc)
     d wksnprpc        s                   like(prsnprpc)
12011d wkxnprpc        s                   like(prxnprpc)
     d wkam            s                   like(clagclam)
     d wkdiffam        s                   like(clagclam)
      *
      *
      * Parms
      *
     D xxdt            s              8  0
     D xxsatdt         s              8  0
     D xxyr            s              4  0
     D xxpe            s              2  0
     D xxwk            s              2  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     d lda            uds                  dtaara(*lda)
     D  ldyr                   1      4  0
     D  ldwk                   5      6  0
     D  ldwbdt                 7     14  0
     D  ldsynwbdt             15     21  0
     D  ldwedt                22     29  0
     D  ldsynwedt             30     36  0
     D  ldpfcd                37     37
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Process all records in the AR Claims Header file that:
      *   1) Have a Claim Status of Complete
      *   2) Have a Memo Post Date in the week being processed
      *   3) Have a TFS Process Status of Open or blank
      *
     C     ldsynwbdt     setll     pdmkcpl7
      *
     C                   dou       *in90 = *on or mkp6dt > ldsynwedt            Main do
     C                   read      pdmkcpl7                               90
     C                   if        *in90 = *off and                             If not EOF
     C                             mkcjsx = 'C' and
     C                             mkp6dt <= ldsynwedt and
     C                             (mkt5sx = 'O' or mkt5sx = ' ')
      * Process:
      *   1) Claims
      *   2) Resales
     C                   exsr      $claims
     C                   exsr      $resales
      *
      * If it is a FINAL run, update the Synon AR Claim record
      *
     C                   if        ldpfcd = 'F'
     C                   exsr      $updsyn
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      * EOF processing
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Process Claims
      *---------------------------------------------------------------
      *
     C     $claims       begsr
      *
     C                   move      no            resalefl
      *
      * Process all AR Claim Product records for this Claim Number.
      *
     C     mkc0c7        setll     pdmocpl1
      *
     C                   dou       *in91 = *on                                  Do loop
     C     mkc0c7        reade     pdmocpl1                               91
     C                   if        *in91 = *off                                 If not eof
     C                   z-add     moafnx        clcllnno
     C                   z-add     moafnx        clmmlnno
     C                   z-add     moytnx        clmmno
     C                   z-add     moalnx        clclorno
     C                   move      mofuaa        clrpdept
     C                   move      motnsx        clrpfl
     C                   move      mocqcd        clrscd
     C                   move      moqysx        clprrsty
     C                   z-add     moc1c7        clprcd
     C**    s9047        z-add     mobnvl        clagclam            billing dtl gross instead
      *
      * Retrieve Exempt Flags
      *
     C                   move      moq0sx        wkexcd
     C                   exsr      $exempt
      *
      * If Affect Sales Pounds is Yes,
      *    populate Aggregate Claim Pounds
      *
     C                   if        movast = yes
     C                   move      yes           clafslfl
     C                   z-add     mohhwg        clacllb
     C                   else
     C                   move      no            clafslfl
     C                   endif
      *
     C                   exsr      $wrt022
     C                   endif                                                  If not eof
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Process Resales
      *---------------------------------------------------------------
      *
     C     $resales      begsr
      *
     C                   move      yes           resalefl
      *
      * Process all Credit/Debit Memos from the AR Claim Resale file for this:
      *    1) claim number
      *
     C     mkc0c7        setll     ppa3cpl1
      *
     C                   dou       *in95 = *on                                  Do resales
     C     mkc0c7        reade     ppa3cpl1                               95
     C                   if        *in95 = *off                                 If not eof
      *
      *
      * Process all AR Claim Resale Product records for this:
      *    1) claim number
      *    2) ship to customer
      *
     C     key04         setll     pdmpcpl1
      *
     C                   dou       *in93 = *on                                  Do products
     C     key04         reade     pdmpcpl1                               93
     C                   if        *in93 = *off                                 If more
     C                   z-add     mpaknx        clcllnno
     C                   z-add     mpaknx        clmmlnno
     C                   move      mpfuaa        clrpdept
     C                   move      mpufsx        clrpfl
     C                   move      mpcqcd        clrscd
     C                   move      mpqvsx        clprrsty
     C                   z-add     mpc5c7        clprcd
     C**    s9047        z-add     mpbovl        clagclam            billing dtl gross instead
      *
      * Populate the Credit/Debit Memo Number with the value from the
      * AR Claim Resale file.
      *
     C                   z-add     a3yunx        clmmno
      *
      * Popluate Claim Order Number with the value from the AR Claim (Header)
      * file.
     C                   z-add     mkalnx        clclorno
      *
      * Retrieve Exempt Flags
      *
     C                   move      mpqxsx        wkexcd
     C                   exsr      $exempt
      *
      * If Affect Sales Pounds is Yes,
      *    populate Aggregate Claim Pounds
      *
     C                   if        mpvast = yes
     C                   move      yes           clafslfl
     C                   z-add     mphiwg        clacllb
     C                   else
     C                   move      no            clafslfl
     C                   endif
      *
      * Write Claim Adjustment record
      *
     C                   exsr      $wrt022
     C                   endif                                                  If more
     C                   enddo                                                  Do products
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do resales
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve Exempt Flags
      *---------------------------------------------------------------
      *
     C     $exempt       begsr
      *
      * Initialize Exempt Flags.
      *
     C                   move      *blank        wkrcexfl
     C                   move      *blank        wkprexfl
      *
      * We will make 3 attempts to determine the Exempt/Non-Exempt status of the Item:
      *   Attempt 1: Is there an Exempt Product record for this Week/Item in TFP010?
      *   Attempt 2: Is there a Non-Exempt Product record for this Week/Item in TFP010?
      *   Attempt 3: Use the value from the Claim record that you are processing
      *
      *
      * Attempt 1: Is there an Exempt Product record for this Week/Item in TFP010?
      *
     C                   move      yes           wkexemptfl
     C     key05         chain     tfl010i                            92
     C                   if        *in92 = *off
     C                   move      yes           wkprexfl
     C                   move      yes           wkrcexfl
     C                   endif
      *
      * Attempt 2: Is there a Non-Exempt Product record for this Week/Item in TFP010?
      *
     C                   if        wkprexfl = *blank                            If attempt 2
     C                   move      no            wkexemptfl
     C     key05         chain     tfl010i                            92
     C                   if        *in92 = *off
     C                   move      no            wkprexfl
     C                   move      no            wkrcexfl
     C                   endif
     C                   endif                                                  If attempt 2
      *
      * Attempt 3: Use the Claim record value
      *
     C                   if        wkprexfl = *blank                            If attempt 3
     C     wkexcd        chain     tfp007                             92
     C                   if        *in92 = *off
     C                   move      exrcexfl      wkrcexfl
     C                   move      exprexfl      wkprexfl
     C                   else
     C                   move      no            wkrcexfl
     C                   move      no            wkprexfl
     C                   endif
     C                   endif                                                  If attempt 3
      *
     C                   move      wkrcexfl      clrcexfl
     C                   move      wkprexfl      clprexfl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Claim Adjustment record
      *---------------------------------------------------------------
      *
     C     $wrt022       begsr
      *
      * The AR Claim Header holds "Shipping" Company. We want "Accounting" Company in
      * our "Company" field. So, we will attempt to retrieve a Sales History record
      * for the Claim Order Number. If we don't find a record, we will use the
      * "Shipping" Company from the AR Claim Header.
      *
     C     mkalnx        chain     omhstpoa                           92
     C                   if        *in92 = *off
     C                   z-add     p1f4aic3      clcono
     C                   else
     C                   z-add     mkbic3        clcono
     C                   endif
      *
      * Populate Claim Number with the AR Claim Header value.
      *
     C                   z-add     mkc0c7        clclno
      *
      *
      * Populate Week Beginning/Ending dates with LDA values.
      *
     C                   z-add     ldwbdt        clwbdt
     C                   z-add     ldwedt        clwedt
      *
      * Retrieve Sales info for original order
      *
     C                   exsr      $sales
      *
      * Retrieve Memo info from Sales History file
      *
     C                   exsr      $memo
      *
      * Aggregate net claim amount:
      *   aggregate gross claim amount - claim total sales expense amount
      *
     C     clagclam      sub       clclsxam      clanclam
      *
      *
      * Calculate the Net Claim Price per Pound:
      *    Aggregate Net Claim Amount divided by Aggregate Claim Pounds
      *
     C                   if        clacllb <> 0
     C     clanclam      div(h)    clacllb       clnclpr
     C                   endif
      *
      * Set "Sale Flag" value and come up with a "Rate" for the "Net Claim" calc.
      *
     C                   exsr      $saleflag
      *
      * We will calc the dollars/percents differently depending on whether this is
      * Scenario 1, Scenario 2 or Scenario 3. The original calcs were/are Scenario 1.
      * They are used most often. So, set a flag with the default of Scenario 1 and
      * then override this flag to Scenario 2 or Scenario 3 if necessary.
      *
     C                   move      '1'           calcfl
      *
      * We will override to Scenario 2 when:
      *    The claim is Company responsible
      *    The Affect Sales Pounds is Yes
      *    The Net Claim Price per Pound is greater than zero
      *    The Net Product Revenue Price per Pound is not zero
      *    The Net Product Revenue Price is different than the Claim Price
      *    This is a) not a Resale or
      *            b) it is a Resale with a Net Claim Price > the Net Prod Rev Price
      *    The Net Product Revenue Percent for the Claim Company is not 100%
      *
     C                   if        clrpfl = 'C' and                             If company
     C                             clafslfl = yes and
     C                             clnclpr   > 0 and
     C                             clanprpr <> 0 and
     C                             clanprpr <> clnclpr
      *
     C                   if        resalefl = no or                             If still go
     C                             (resalefl = yes and clnclpr > clanprpr)
      *
     C                   if        (clcono = 960 and wktnprpc <> 100) or        If not 100%
     C                             (clcono = 360 and wksnprpc <> 100)
     C                   move      '2'           calcfl
     C                   endif                                                  If not 100%
     C                   endif                                                  If still go
     C                   endif                                                  If company
      *
      *
      * We will override to Scenario 3 (added per Tom Dye in January 2011) when:
      *    The claim is for an Affiliated Sales Customer (customer type is IS)
      *    The claim is Shared
      *    The Affect Sales Pounds is No
      *
     C                   if        clcutycd = 'IS' and                          If affiliated
     C                             clrpfl = 'S' and
     C                             clafslfl = no
     C                   move      '3'           calcfl
     C                   endif                                                  If affiliated
      *
      * Now, execute the appropriate "calcs" depending on the flag value.
      *
     C                   select
     C                   when      calcfl = '1'
     C                   exsr      $calc1
      *
     C                   when      calcfl = '2'
     C                   exsr      $calc2
      *
     C                   when      calcfl = '3'
     C                   exsr      $calc3
     C                   endsl
      *
      *
      * Accumulate "absolute" values of "Net Claim Amounts" for later
      * updating of the AR Header record:
      *   1) Triumph amount
      *   2) Aggregate amount
      *
     C                   if        cltnclam < 0
     C                   sub       cltnclam      wktam
     C                   else
     C                   add       cltnclam      wktam
     C                   endif
      *
     C                   if        clanclam < 0
     C                   sub       clanclam      wkaam
     C                   else
     C                   add       clanclam      wkaam
     C                   endif
      *
      * Set the "data source" to C=Claims
      *
     C                   move      'C'           cldscd
      *
     C                   write     clrec
     C                   clear                   clrec
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------
      * Calculations for Scenario 1
      *----------------------------------------------------------------------------------
      *
      * These are the "original" calcs before we added new, conditional calcs for when
      * the claim is "C"ompany responsible AND the "Affect Sales Pounds" is YES, etc.
      *
     C     $calc1        begsr
      *
      * TF Net Claim Amount & Responsibility %
      *
      *  Shared
     C                   select
     C                   when      clrpfl = 'S'
     C                   eval(h)   cltnclam = clanclam * wkrate1
     C                   eval(h)   cltrppc = wkrate1 * 100
      *
      *  Triumph/not shared
     C                   when      clcono = 960 and clrpfl = 'C'
     C                   z-add     clanclam      cltnclam
     C                   z-add     100           cltrppc
     C                   endsl
      *
      * SBF Net Claim Amount & Responsibility %
      *
     C                   select
     C                   when      clrpfl = 'S'
     C                   eval      clsnclam = clanclam - cltnclam
     C                   eval      clsrppc = 100 - cltrppc
      *
     C                   when      clcono = 360 and clrpfl = 'C'
     C                   z-add     clanclam      clsnclam
     C                   z-add     100           clsrppc
     C                   endsl
      *
12011 * STF Net Claim Amount & Responsibility %
  |   *
  |  C                   select
  |  C                   when      clcono = 440 and clrpfl = 'C'
  |  C                   z-add     clanclam      clxnclam
  |  C                   z-add     100           clxrppc
12011C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------
      * Calculation for Scenario 2
      *----------------------------------------------------------------------------------
      *
      * These are the "new" calcs that we added in late August 2006 for when
      * the claim is "C"ompany responsible AND the "Affect Sales Pounds" is YES and etc.
      *
     C     $calc2        begsr
      *
      * Set the Percent fields in the Claim Adjustments record equal to the Percents from
      * the Weekly Product Revenue Detail file.
      *
     C                   z-add     wksnprpc      clsrppc
     C                   z-add     wktnprpc      cltrppc
12011C                   z-add     wkxnprpc      clxrppc
      *
      * Calculate initial Amount as:
      *   Aggregate Claim Pounds times Aggregate Net Product Revenue Price per Pound
      *
     C     clacllb       mult(h)   clanprpr      wkam
      *
      * Calculate the Difference as:
      *   Aggregate Net Claim Amount less the Initial Amount
      *
     C     clanclam      sub       wkam          wkdiffam
      *
      * Calculate the Percent of this Difference that goes to the Claim Company
      *
     C                   select
     C                   when      clcono = 360
     C                   eval      wkrate2 = clsrppc / 100
     C                   eval      wkam = wkam + (wkrate2 * wkdiffam)
     C                   if        (clanclam < 0 and wkam < clanclam) or
     C                             (clanclam > 0 and wkam > clanclam)
     C                   z-add     clanclam      clsnclam
     C                   z-add     0             cltnclam
     C                   else
     C                   z-add     wkam          clsnclam
     C     clanclam      sub       clsnclam      cltnclam
     C                   endif
     C
     C                   when      clcono = 960
     C                   eval      wkrate2 = cltrppc / 100
     C                   eval      wkam = wkam + (wkrate2 * wkdiffam)
     C                   if        (clanclam < 0 and wkam < clanclam) or
     C                             (clanclam > 0 and wkam > clanclam)
     C                   z-add     clanclam      cltnclam
     C                   z-add     0             clsnclam
     C                   else
     C                   z-add     wkam          cltnclam
     C     clanclam      sub       cltnclam      clsnclam
     C                   endif
      *
12011 * R12011-STF will always be 100%, added this 11.16.18  S13578
     c                   when      clcono = 440
  |  C                   z-add     clanclam      clxnclam
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------
      * Calculations for Scenario 3
      *----------------------------------------------------------------------------------
      *
      * This logic was added in January 2011 per Tom Dye. It kicks in when the Claim:
      *    1) is for an Affiliated Sales Customer (customer type is IS)
      *    2) is Shared
      *    3) has Affect Sales Pounds = No
      *
      * This seems a bit goofy. Tom D. wants the claim to be "shared", BUT
      * the 'share %' is ALWAYS 100% to Seaboard, 0% to Triumph...regardless of
      * which Company is the "claim company".
      *
     C     $calc3        begsr
      *
     C                   z-add     clanclam      clsnclam
     C                   z-add     100           clsrppc
     C                   z-add     0             cltnclam
     C                   z-add     0             cltrppc
     C                   z-add     0             clxnclam                    s15250 - for 440
     C                   z-add     0             clxrppc                     s15250 - for 440
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------
      * Value "Sale Flag" and come up with a "Rate" for the Net Claim Amount calc
      *----------------------------------------------------------------------------------
      *
     C     $saleflag     begsr
      *
      * Sales flag
      *   Y=Yes, record found in TFP010 for:
      *              product
      *              week-ending date associated with Actual Ship date of the Original Order
      *                   on this claim
      *              exempt record flag
      *              exempt product flag
      *          Calc TF Net Product Revenue rate from week-ending record
      *   N=No, no record found in TFP010
      *          Retrieve any TFP010 record prior to the week-ending date for this product
      *                Calc TF Net Product Revenue rate from week-ending record
      *          If there are no TFP010 records for this product prior to the week-ending date,
      *                Set the rate equivalent to 50%
      *
     C                   move      no            clsalefl
     C                   z-add     0             wksnprpc
     C                   z-add     0             wktnprpc
12011C                   z-add     0             wkxnprpc
      *
     C                   if        closwedt <> 0                                If orig sale
     C                   eval      wkwedt = closwedt
      *
     C     key01         chain     tfl010c                            92
     C                   if        *in92 = *off                                 If current
     C                   move      yes           clsalefl
     C                   eval      wkrate1 = prtnprpc / 100
     C                   z-add     pranprpr      clanprpr
     C                   z-add     prsnprpc      wksnprpc
     C                   z-add     prtnprpc      wktnprpc
12011C                   z-add     prxnprpc      wkxnprpc
     C                   endif                                                  If current
     C                   endif                                                  If orig sale
      *
     C                   if        clsalefl = no                                If NO
     C                   eval      wkwedt = ldwedt
     C     key01         setll     tfl010c
     C     clprcd        readpe    tfl010c                                92
     C                   if        *in92 = *off                                 If anything
     C                   eval      wkrate1 = prtnprpc / 100
     C                   z-add     pranprpr      clanprpr
     C                   z-add     prsnprpc      wksnprpc
     C                   z-add     prtnprpc      wktnprpc
12011C                   z-add     prxnprpc      wkxnprpc
     C                   else
      *
     C                   z-add     .5            wkrate1
     C                   endif                                                  If anything
     C                   endif                                                  If NO
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------
      * Retrieve Sale info for Original order
      *----------------------------------------------------------------------------------
      *
      * We are having a problem on "claim sharing". When they enter a claim to
      * adjust another claim, the week-ending dates (and therefore the %%) get
      * messed up. We need the "orignal invoice" to get the correct week-ending
      * date of the original sale. So, we added more logic to attempt to find the
      * original order.
      *
      * So, the logic now looks for an "OR" order type. If the record retrieved is not
      * "OR", the logic uses the "attach to order number" value from the retrieved
      * record to retrieve another record. This logic continues until you find the "OR"
      * record. If you never find an "OR", we use the Actual Ship Date from the last
      * record retrieved.
      *
      *
     C     $sales        begsr
      *
     C                   z-add     0             wksynasdt
     C                   move      no            orderfl
     C                   z-add     clclorno      wkorno
      *
      * Find an Original Order
      *
     C                   dou       *in94 = *on or orderfl = yes                 Do loop
     C**   key02         chain     omhstpl1                           94
     C     wkorno        chain     omhstpog                           94
     C                   if        *in94 = *off                                 If hit
     C                   z-add     f4gndt        wksynasdt
      *
     C                   if        f4jncd = 'OR'
     C                   move      yes           orderfl
     C                   else
     C                   z-add     f4t3nb        wkorno
     C                   endif
      *
     C                   endif                                                  If hit
     C                   enddo                                                  Do loop
      *
      *
      * Original Sale Week Ending Date:
      *      Find the Saturday week-ending date associated with the Actual
      *      Ship Date.
     C                   exsr      $wedt
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------
      * Retrieve MEMO info from the Sales History file
      *----------------------------------------------------------------------------------
      *
     C     $memo         begsr
      *
      * Retrieve Sales History record for the MEMO number being processed with key of:
      *          Company number
      *          Credit/debit memo number
      *          Claim line Number
      *
     C**   key03         chain     omhstpl1                           92
     C     key03         chain     omhstpog                           92
     C                   if        *in92 = *off                                 If hit
      *
      * Billing detail Gross Amount:    (S9047)
      *
     C                   z-add     f4kdva        clagclam
      *
      *
      * Claim Absorbed Freight Amount:
      *
     C                   z-add     f4ulva        clclafam
      *
      * Claim Broker Commission Amount:
      *
     C                   z-add     f4uova        clclbcam
      *
      * Claim Other sales expense amount:
      *                SUM of: trade fund accrual amount
      *                        financials amount spec
      *                        financials amount freight
      *
     C                   eval      clcloxam = f4unva + f4upva + f4uqva
      *
      * Claim Total Sales Expense Amount:
      *   absorbed freight + broker commission + other sales expenses
      *
     C                   eval      clclsxam = clclafam + clclbcam + clcloxam
      *
      *  MEMO Type
     C                   eval      clmmty = f4jncd
      *
      * If this is for an Affliated Sales Customer, populate the Customer Type.
      * (We want our Customer Type field to be blank if this is not an Affilated
      * Sales Customer.)
      *
     C                   if        f4bocd = 'IS'
     C                   move      f4bocd        clcutycd
     C                   endif
      *
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------
      * Find the Saturday Week-Ending date associated with the Actual Ship Date
      *----------------------------------------------------------------------------------
      *
     C     $wedt         begsr
      *
      * Get Synon Actual Ship Date into CCYYMMDD format
      *
     C     *cymd         test(d)                 wksynasdt              92
     C                   if        *in92 = *off                                 If OK date
     C     *cymd         move      wksynasdt     wkisodate
     C     *iso          move      wkisodate     xxdt
     C                   else
     C                   z-add     0             xxdt
     C                   endif                                                  If OK date
      *
      * Find subsequent Saturday using the generic program.
      *
     C                   call      'TF811'
     C                   parm                    xxdt
     C     closwedt      parm      0             xxsatdt
     C                   parm      0             xxyr
     C                   parm      0             xxpe
     C                   parm      0             xxwk
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Update the Synon AR Claim record
      *---------------------------------------------------------------
      *
     C     $updsyn       begsr
      *
     C                   z-add     ldsynwedt     mkysnx
     C                   move      'P'           mkt5sx
      *
      * When the Aggregate total is zero, give 100% to the Company.
      *
     C                   if        wkaam    = 0                                 If zero
      *
      *       Seaboard
     C                   select
     C                   when      clcono = 360
     C                   z-add     100           mkf8pc
      *       Triumph
     C                   when      clcono = 960
     C                   z-add     100           mkf7pc
12011 *       Seaboard Triumph Foods
  |  C                   when      clcono = 440
12011C***                z-add     100           mkf7pc                          S13578 11.16.18
12011C                   z-add     100           mkf9pc                       was unused % field
     C                   endsl
     C                   else
      *
      * When the Aggregate total is not zero:
      *
      *     Calculate: TF Responsiblity % as:
      *       TF total / Aggregate total
      *       Then, multiply the result times 100 to get the value into % format
      *
     C                   eval      mkf7pc = (wktam / wkaam) * 100
      *
      *     Calculate: SBF Responsiblity % as:
      *       100% - TF Responsiblity %
      *
     C     100           sub       mkf7pc        mkf8pc
     C                   endif                                                  If zero
      *
     C                   update    @mkcpyd
      *
     C                   z-add     0             wktam
     C                   z-add     0             wkaam
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    clprcd
     C                   kfld                    wkwedt
     C                   kfld                    clrcexfl
     C                   kfld                    clprexfl
      *
     C     key02         klist
     C                   kfld                    clcono
     C                   kfld                    wkorno
      *
     C     key03         klist
     C**                 kfld                    clcono
     C                   kfld                    clmmno
     C                   kfld                    clcllnno
      *
     C     key04         klist
     C                   kfld                    mkc0c7
     C                   kfld                    a3bkc7
      *
     C     key05         klist
     C                   kfld                    ldwedt
     C                   kfld                    wkexemptfl
     C                   kfld                    clprcd
      *
     C                   endsr
      /eject
