     H/TITLE Prt Condemned Rpt     PV  Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Prompt & validate record
      *
     H* Company       : HPEDEVMDL                     n
     H* System        : HPEDEVMDL
     H* User name     : ISSMASO
     H* Date          : 04/23/14  Time  : 13:23:22
     H* Copyright     : HPEDEVMDL                     n
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKOWPVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: Prt Condemned Rpt     PV  Prompt & validate record
      *
     FPKACREL1IF  E           K        DISK
      * RTV : Producer                  Retrieval index
      *
     FPKAFREL0IF  E           K        DISK
      * RTV : Producer Location         Retrieval index
      *
     FPKBRREL1IF  E           K        DISK
      * RTV : Loss Reason               Retrieval index
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
      * DETAIL Screen: Field position and name array
     E                    W0BEG   7 013  5 0A
     E                    W0END   7 013  5 0A
     E                    W0NAM   7 013 10
      * Long constants
     E                    @CN#    1  01  6   @CN    25
     I@ACREAI
      * Producer                  Retrieval index
      * Renamed input format fields
     I              ACABCD                          WAABCD
     I              ACAGTX                          WAAGTX
     I              ACALNB                          WAALNB
     I              ACAATH                          WAAATH
     I              ACAMNB                          WAAMNB
     I              ACIWST                          WAIWST
     I              ACAPST                          WAAPST
     I              ACGCNB                          WAGCNB
     I              ACGJNB                          WAGJNB
     I              ACC2TX                          WAC2TX
     I              ACAACD                          WAAACD
     I              ACACCD                          WAACCD
     I              ACADCD                          WAADCD
     I              ACAAVN                          WAAAVN
     I              ACAADT                          WAAADT
     I              ACAMTM                          WAAMTM
     I              ACAJST                          WAAJST
     I              ACAHVN                          WAAHVN
     I              ACAGVN                          WAAGVN
     I              ACABVN                          WAABVN
     I              ACABDT                          WAABDT
     I              ACABTM                          WAABTM
      *
     I@AFREAR
      * Producer Location         Retrieval index
      * Renamed input format fields
     I              AFABCD                          WBABCD
     I              AFAECD                          WBAECD
     I              AFA8TX                          WBA8TX
     I              AFGLNB                          WBGLNB
     I              AFATST                          WBATST
     I              AFASNB                          WBASNB
     I              AFAUST                          WBAUST
     I              AFQNST                          WBQNST
     I              AFQOST                          WBQOST
     I              AFQPST                          WBQPST
     I              AFQQST                          WBQQST
     I              AFQRST                          WBQRST
     I              AFN0TX                          WBN0TX
     I              AFQSST                          WBQSST
     I              AFQTST                          WBQTST
     I              AFQUST                          WBQUST
     I              AFQVST                          WBQVST
     I              AFR8ST                          WBR8ST
     I              AFR9ST                          WBR9ST
     I              AFSAST                          WBSAST
     I              AFSBST                          WBSBST
     I              AFSDST                          WBSDST
     I              AFSEST                          WBSEST
     I              AFSFST                          WBSFST
     I              AFHWNB                          WBHWNB
     I              AFFUCD                          WBFUCD
     I              AFAAVN                          WBAAVN
     I              AFAADT                          WBAADT
     I              AFAMTM                          WBAMTM
     I              AFAJST                          WBAJST
     I              AFAHVN                          WBAHVN
     I              AFAGVN                          WBAGVN
     I              AFABVN                          WBABVN
     I              AFABDT                          WBABDT
     I              AFABTM                          WBABTM
      *
     I@BRREFQ
      * Loss Reason               Retrieval index
      * Renamed input format fields
     I              BRBYCD                          WCBYCD
     I              BRBYTX                          WCBYTX
     I              BRAAVN                          WCAAVN
     I              BRAADT                          WCAADT
     I              BRAMTM                          WCAMTM
     I              BRAJST                          WCAJST
     I              BRAHVN                          WCAHVN
     I              BRAGVN                          WCAGVN
     I              BRABVN                          WCABVN
     I              BRABDT                          WCABDT
     I              BRABTM                          WCABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * N :  PRT Description
     I                                        1  25 P1ETTX
      * N :  PRT Printer Device
     I                                       26  35 P1ACVN
      * N :  PRT Hold Output Sts
     I                                       36  39 P1AKST
      * N :  PRT Save Output Sts
     I                                       40  43 P1AMST
      * N :  PRT Copies
     I                                       44  450P1AKNB
      * N :  PRT Night Queue Run Sts
     I                                       46  46 P1ALST
      * N :  PRT Night Queue
     I                                       47  56 P1AIVN
      * N :  Oms Application Code
     I                                       57  62 P1C7CD
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Oms Warehouse Code
     I                                        1   3 P2J8NB
      * N :  CC Company Number
     I                                    P   4   50P2HONB
      * N :  Oms SalesPerson Code
     I                                        6   8 P2C8CD
      * N :  Oms Allow Multi-Company
     I                                        9   9 P2G8ST
      * N :  Oms Default Printer
     I                                       10  19 P2G9ST
      * N :  Oms Name
     I                                       20  49 P2EUTX
      * N :  Oms System Value Alpha
     I                                       50  89 P2EVTX
      * N :  Oms Access Denied (Y/N)
     I                                       90  90 P2HAST
     IP3PARM      DS
      * N :  First Time Flag Usr
     I                                        1   1 P3HBST
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'SBM Prt Condemned Rpt'
      * Company Number Alpha Usr
     I                                        1   3 ZA0001
      * Date Alpha USR
     I                                        4  10 ZA0002
      * Date Alpha Usr 2
     I                                       11  17 ZA0003
      * LTN Source Type
     I                                       18  18 ZA0004
      * Reason Code Alpha 3 Usr
     I                                       19  21 ZA0005
      * LTN Shift
     I                                       22  22 ZA0006
      * PD Producer Code
     I                                       23  28 ZA0007
      * PL Location Code
     I                                       29  34 ZA0008
      * PRT Printer Device
     I                                       35  44 ZA0009
      * PRT Hold Output Sts
     I                                       45  48 ZA0010
      * PRT Save Output Sts
     I                                       49  52 ZA0011
      * PRT Copies
     I                                    P  53  540ZA0012
      * PRT Night Queue
     I                                       55  64 ZA0013
      * Oms System Value Alpha
     I                                       65 104 ZA0014
      * Message data for 'Invalid Company Number'
      * CC Company Number
     I                                    P   1   20ZA0015
      * Message data for 'Producer & Loc Required'
      * PD Producer Code
     I                                        1   6 ZA0016
      * PL Location Code
     I                                        7  12 ZA0017
      * *SFLSEL
     I                                       13  13 ZA0018
      * Message data for 'Producer & Loc Required'
      * PD Producer Code
     I                                        1   6 ZA0019
      * PL Location Code
     I                                        7  12 ZA0020
      * *SFLSEL
     I                                       13  13 ZA0021
      * Message data for 'Invalid Company Number'
      * CC Company Number
     I                                    P   1   20ZA0022
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSA1
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Enable PUTOVR
     C                     SETON                     86
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: User defined action
      * Pmt Print Options     XF - STR Order Management Sys  * 
     C                     CALL 'PDG0PVR'              90  Pmt Print Optio
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,001   WQ0001 25        PRT Description
     C           P1ACVN    PARM P1ACVN    WQ0002 10        PRT Printer Dev
     C           P1AKST    PARM P1AKST    WQ0003  4        PRT Hold Output
     C           P1AMST    PARM P1AMST    WQ0004  4        PRT Save Output
     C           P1AKNB    PARM P1AKNB    WQ0005  20       PRT Copies
     C           P1ALST    PARM P1ALST    WQ0006  1        PRT Night Queue
     C           P1AIVN    PARM P1AIVN    WQ0007 10        PRT Night Queue
     C                     PARM 'HPE'     WQ0008  6        Oms Application
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDG0PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    WUC3CD           Company Number
     C                     MOVEL#1HUNB    WUC3CD           Company Number
     C                     MOVEL*BLANK    WUCZCD           Date Alpha USR
     C                     MOVEL#DB3DT    WUCZCD           Date Alpha USR
     C                     MOVEL*BLANK    WUDHCD           Date Alpha Usr
     C                     MOVEL#DB4DT    WUDHCD           Date Alpha Usr
     C                     MOVEL*BLANK    WUY3TX           Reason Code Alp
     C                     MOVEL#1BYCD    WUY3TX           Reason Code Alp
      * Setup message data for message
     C                     MOVELWUC3CD    ZA0001           Company Number
     C                     MOVELWUCZCD    ZA0002           Date Alpha USR
     C                     MOVELWUDHCD    ZA0003           Date Alpha Usr
     C                     MOVEL#1SMST    ZA0004           LTN Source Type
     C                     MOVELWUY3TX    ZA0005           Reason Code Alp
     C                     MOVEL#1EBST    ZA0006           LTN Shift
     C                     MOVEL#DABCD    ZA0007           PD Producer Cod
     C                     MOVEL#DAECD    ZA0008           PL Location Cod
     C                     MOVELP1ACVN    ZA0009           PRT Printer Dev
     C                     MOVELP1AKST    ZA0010           PRT Hold Output
     C                     MOVELP1AMST    ZA0011           PRT Save Output
     C                     Z-ADDP1AKNB    ZA0012           PRT Copies
     C                     MOVELP1AIVN    ZA0013           PRT Night Queue
     C                     MOVELP2EVTX    ZA0014           Oms System Valu
      *
      * Execute message
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2EXMCC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'PRK0833' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN   7
     C                     END
      *
     C           W0RTN     IFNE *BLANK
      * Error detected during execution
     C                     SETON                     993435*
     C                     SETON                     3738  *
     C                     END
      *
     C                     END                             *FI
      * Request new transaction
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Validate Date From USR
      * External date
     C                     Z-ADDVDB3DT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     Z-ADDXDINDT    #DB3DT
      * Validate Date To   USR
      * External date
     C                     Z-ADDVDB4DT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9933  *
     C                     END
     C                     Z-ADDXDINDT    #DB4DT
      * Validate LTN Source Type
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#1SMST'  IFEQ YPMTFD
      * LTN Source Type
     C                     MOVEL#1SMST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHSMST
     C                     SELEC
     C           W0INVL    WHEQ 'E'                        E
     C                     Z-ADD1         ZHSMST
     C           W0INVL    WHEQ 'I'                        I
     C                     Z-ADD2         ZHSMST
     C                     ENDSL
     C                     EXFMTZGSMST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHSMST    WHEQ 1
     C                     MOVEL'E'       W0INVL           E
     C           ZHSMST    WHEQ 2
     C                     MOVEL'I'       W0INVL           I
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #1SMST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate LTN Shift
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#1EBST'  IFEQ YPMTFD
      * LTN Shift
     C                     MOVEL#1EBST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHEBST
     C                     SELEC
     C           W0INVL    WHEQ '1'                        1
     C                     Z-ADD1         ZHEBST
     C           W0INVL    WHEQ '2'                        2
     C                     Z-ADD2         ZHEBST
     C           W0INVL    WHEQ '3'                        3
     C                     Z-ADD3         ZHEBST
     C           W0INVL    WHEQ *BLANK                     *BLANK
     C                     Z-ADD4         ZHEBST
     C                     ENDSL
     C                     EXFMTZGEBST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHEBST    WHEQ 1
     C                     MOVEL'1'       W0INVL           1
     C           ZHEBST    WHEQ 2
     C                     MOVEL'2'       W0INVL           2
     C           ZHEBST    WHEQ 3
     C                     MOVEL'3'       W0INVL           3
     C           ZHEBST    WHEQ 4
     C                     MOVEL*BLANK    W0INVL           *BLANK
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #1EBST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate fields
      * Val Company Number    IF
      * Val Company Number    XF - STR Order Management Sys  * 
     C                     CALL 'PDGZXFR'              90  Val Company Num
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1HUNB    WQ0009  30       CC Company Numb
     C           #DLMTX    PARM *BLANK    WQ0010 30        Oms Name
     C           WUG3ST    PARM *BLANK    WQ0011  1        Invalid Y/N USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGZXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
      * CASE: WRK.Invalid Y/N USR is Yes
     C           WUG3ST    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     Z-ADD#1HUNB    ZA0015           CC Company Numb
      * Send message 'Invalid Company Number'
     C                     MOVEL'PRK0299' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     MOVELWUG3ST    WUG3ST           Invalid Y/N USR
      * Error
      * CASE: WRK.Invalid Y/N USR is Yes
     C           WUG3ST    IFEQ 'Y'                        *IF
      * Send message 'Company                NF'
     C                     MOVEL'PRK0162' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
      * Val From and To Date
      * CASE: DTL.Date From USR GT DTL.Date To   USR
     C           #DB3DT    IFGT #DB4DT                     *IF
      * Send message 'From date must <= to date'
     C                     MOVEL'PRK0472' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
      * Select Producer
      * CASE: Select Producer
      *  - c1 AND c2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.PD Producer Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#DABCD'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Sel Producer          SR - Producer  * 
     C                     CALL 'PKA1SRR'              90  Sel Producer
     C                     PARM *BLANK    W0RTN   7
     C           #DABCD    PARM #DABCD    WQ0012  6        PD Producer Cod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKA1SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9937  *
     C                     END
     C                     END                             *FI
      * Select Location
      * CASE: Select Location
      *  - c1 AND c2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.PL Location Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#DAECD'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Sel Producer Loc      SR - Producer Location  * 
     C                     CALL 'PKKMSRR'              90  Sel Producer Lo
     C                     PARM *BLANK    W0RTN   7
     C           #DABCD    PARM #DABCD    WQ0013  6        PD Producer Cod
     C           #DAECD    PARM #DAECD    WQ0014  6        PL Location Cod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKKMSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993738*
     C                     END
     C                     END                             *FI
      * Validate producer code
      * CASE: DTL.PD Producer Code NE WRK.Blank USR
     C           #DABCD    IFNE WUCRTX                     *IF
      * Val Prod Existance    RT - Producer  * 
     C                     EXSR SARVGN
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUH7ST    IFEQ 'N'                        *IF
      * Send message 'Producer               NF'
     C                     MOVEL'PRK0009' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate location code
      * CASE: DTL.PL Location Code NE WRK.Blank USR
     C           #DAECD    IFNE WUCRTX                     *IF
      * Rtv Pdctn Loc Name    RT - Producer Location  * 
     C                     EXSR SBRVGN
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Send message 'Producer Location      NF'
     C                     MOVEL'PRK0015' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END
      * Bypass ref file checks if error already detected
     C   99                GOTO DBEXIT
      * Check reference to Loss Reason
     C                     EXSR VACKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     9936  *
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * CALC: Screen function fields
      * Source Type description
      * CASE: DTL.LTN Source Type NE WRK.Blank USR
     C           #1SMST    IFNE WUCRTX                     *IF
      * DTL.SR Description = Condition name of DTL.LTN Source Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1121482   Y2LSNO  70       List number
     C                     PARM #1SMST    W0INVL 25        LTN Source Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DAFTX    PARM           W0CNNM 25        SR Description
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DAFTX           SR Description
     C                     END                             *FI
      * Loss Reason description
      * CASE: DTL.LR Reason Code NE WRK.Zero USR
     C           #1BYCD    IFNE WUE9NB                     *IF
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SCRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DBYTX           LR Description
     C                     END                             *FI
      * Producer name
      * CASE: DTL.PD Producer Code NE WRK.Blank USR
     C           #DABCD    IFNE WUCRTX                     *IF
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SDRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DAGTX           PD Name
     C                     END                             *FI
      * Location name
      * CASE: DTL.PL Location Code NE WRK.Blank USR
     C           #DAECD    IFNE WUCRTX                     *IF
      * CASE: DTL.PD Producer Code EQ WRK.Blank USR
     C           #DABCD    IFEQ WUCRTX                     *IF
      * Setup message data for message
     C                     MOVEL#DABCD    ZA0016           PD Producer Cod
     C                     MOVEL#DAECD    ZA0017           PL Location Cod
     C                     MOVELWUOCTX    ZA0018           Txt Field Not N
      * Send message 'Producer & Loc Required'
     C                     MOVEL'PRK0749' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993738*
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Pdctn Loc Name    RT - Producer Location  * 
     C                     EXSR SERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DA8TX           PL Name
     C                     END                             *FI
     C                     END
      * LTN Company Number required
     C           #1HUNB    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Date From USR required
     C           #DB3DT    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9932  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Date To   USR required
     C           #DB4DT    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9933  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for screen
      *================================================================
     C                     MOVEL'0'       *IN79
     C           P2G8ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     Z-ADD*ZERO     #1A7DT           LTN Kill Date
     C                     Z-ADD*ZERO     #1FHNB           LTN Record Numb
     C                     Z-ADD*ZERO     #1FFNB           LTN Tattoo Numb
     C                     Z-ADD*ZERO     #1DSNB           LTN Wgt
     C                     MOVEL*BLANK    #1S3NB           LTN Extent
     C                     MOVEL*BLANK    #1S4NB           LTN Trim Locati
     C                     MOVEL*BLANK    #1D1ST           LTN Error Sts
     C                     MOVEL*BLANK    #1H5ST           LTN Record Crea
     C                     MOVEL*BLANK    #1JMST           LTN User Error
     C                     Z-ADD*ZERO     #1BWCD           LT Type Code
     C                     Z-ADD*ZERO     #1HMNB           BOH Company Num
     C                     Z-ADD*ZERO     #1BNNB           BOH Buy Order N
     C                     Z-ADD*ZERO     #1BONB           BOL Load Number
     C                     Z-ADD*ZERO     #1CVNB           TH Tattoo Numbe
     C                     Z-ADD*ZERO     #1B0DT           TH Kill Date
     C                     MOVEL*BLANK    #1AAVN           RS User Changed
     C                     Z-ADD*ZERO     #1AADT           RS Date Changed
     C                     Z-ADD*ZERO     #1AMTM           RS Time Changed
     C                     MOVEL*BLANK    #1AJST           RS Record Statu
     C                     MOVEL*BLANK    #1AHVN           RS Job
     C                     MOVEL*BLANK    #1AGVN           RS Program
     C                     MOVEL*BLANK    #1ABVN           RS User Added
     C                     Z-ADD*ZERO     #1ABDT           RS Date Added
     C                     Z-ADD*ZERO     #1ABTM           RS Time Added
     C                     Z-ADD*ZERO     #1B8DT           RU Date
     C                     Z-ADD*ZERO     #1AOTM           RU Time
     C                     Z-ADD*ZERO     #1HUNB           LTN Company Num
     C                     MOVEL*BLANK    #DLMTX           Company Recipie
     C                     Z-ADD*ZERO     #DB3DT           Date From USR
      * Clear external version also
     C                     Z-ADD*ZERO     VDB3DT
     C                     Z-ADD*ZERO     #DB4DT           Date To   USR
      * Clear external version also
     C                     Z-ADD*ZERO     VDB4DT
     C                     MOVEL*BLANK    #1SMST           LTN Source Type
     C                     MOVEL*BLANK    #DAFTX           SR Description
     C                     MOVEL*BLANK    #1EBST           LTN Shift
     C                     Z-ADD*ZERO     #1BYCD           LR Reason Code
     C                     MOVEL*BLANK    #DBYTX           LR Description
     C                     MOVEL*BLANK    #DABCD           PD Producer Cod
     C                     MOVEL*BLANK    #DAGTX           PD Name
     C                     MOVEL*BLANK    #DAECD           PL Location Cod
     C                     MOVEL*BLANK    #DA8TX           PL Name
      * CALC: Screen function fields
      * Source Type description
      * CASE: DTL.LTN Source Type NE WRK.Blank USR
     C           #1SMST    IFNE WUCRTX                     *IF
      * DTL.SR Description = Condition name of DTL.LTN Source Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1121482   Y2LSNO  70       List number
     C                     PARM #1SMST    W0INVL 25        LTN Source Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DAFTX    PARM           W0CNNM 25        SR Description
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DAFTX           SR Description
     C                     END                             *FI
      * Loss Reason description
      * CASE: DTL.LR Reason Code NE WRK.Zero USR
     C           #1BYCD    IFNE WUE9NB                     *IF
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SFRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DBYTX           LR Description
     C                     END                             *FI
      * Producer name
      * CASE: DTL.PD Producer Code NE WRK.Blank USR
     C           #DABCD    IFNE WUCRTX                     *IF
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SGRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DAGTX           PD Name
     C                     END                             *FI
      * Location name
      * CASE: DTL.PL Location Code NE WRK.Blank USR
     C           #DAECD    IFNE WUCRTX                     *IF
      * CASE: DTL.PD Producer Code EQ WRK.Blank USR
     C           #DABCD    IFEQ WUCRTX                     *IF
      * Setup message data for message
     C                     MOVEL#DABCD    ZA0019           PD Producer Cod
     C                     MOVEL#DAECD    ZA0020           PL Location Cod
     C                     MOVELWUOCTX    ZA0021           Txt Field Not N
      * Send message 'Producer & Loc Required'
     C                     MOVEL'PRK0749' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993738*
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Pdctn Loc Name    RT - Producer Location  * 
     C                     EXSR SHRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DA8TX           PL Name
     C                     END                             *FI
      * USER: Load screen
      * First Time processing
      * CASE: PAR.First Time Flag Usr is Yes
     C           P3HBST    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       P3HBST           First Time Flag
     C                     Z-ADDP2HONB    #1HUNB           LTN Company Num
     C                     END                             *FI
      * Val Company Number    IF
      * Val Company Number    XF - STR Order Management Sys  * 
     C                     CALL 'PDGZXFR'              90  Val Company Num
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1HUNB    WQ0016  30       CC Company Numb
     C           #DLMTX    PARM *BLANK    WQ0017 30        Oms Name
     C           WUG3ST    PARM *BLANK    WQ0018  1        Invalid Y/N USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGZXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
      * CASE: WRK.Invalid Y/N USR is Yes
     C           WUG3ST    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     Z-ADD#1HUNB    ZA0022           CC Company Numb
      * Send message 'Invalid Company Number'
     C                     MOVEL'PRK0299' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     MOVELWUG3ST    WUG3ST           Invalid Y/N USR
      * Source Type description
      * CASE: DTL.LTN Source Type NE WRK.Blank USR
     C           #1SMST    IFNE WUCRTX                     *IF
      * DTL.SR Description = Condition name of DTL.LTN Source Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1121482   Y2LSNO  70       List number
     C                     PARM #1SMST    W0INVL 25        LTN Source Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DAFTX    PARM           W0CNNM 25        SR Description
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DAFTX           SR Description
     C                     END                             *FI
      * Loss Reason description
      * CASE: DTL.LR Reason Code NE WRK.Zero USR
     C           #1BYCD    IFNE WUE9NB                     *IF
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SIRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DBYTX           LR Description
     C                     END                             *FI
      * Producer name
      * CASE: DTL.PD Producer Code NE WRK.Blank USR
     C           #DABCD    IFNE WUCRTX                     *IF
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SJRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DAGTX           PD Name
     C                     END                             *FI
      * Location name
      * CASE: DTL.PL Location Code NE WRK.Blank USR
     C           #DAECD    IFNE WUCRTX                     *IF
      * Rtv Pdctn Loc Name    RT - Producer Location  * 
     C                     EXSR SKRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DA8TX           PL Name
     C                     END                             *FI
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Date From USR to display format
      * Convert date
     C           1000000   ADD  #DB3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDB3DT
      * Convert Date To   USR to display format
      * Convert date
     C           1000000   ADD  #DB4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDB4DT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Val Prod Existance    RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WAABCD           PD Producer Cod
      * Setup key
     C                     MOVEL#DABCD    WAABCD           PD Producer Cod
      * Establish starting position
     C           KRSSA     CHAIN@ACREAI              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0009' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #DAGTX           PD Name
     C                     MOVEL*BLANK    WUH7ST           Record Found US
     C                     MOVEL'N'       WUH7ST           Record Found US
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAAGTX    #DAGTX           PD Name
     C                     MOVEL'Y'       WUH7ST           Record Found US
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Pdctn Loc Name    RT - Producer Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBABCD           PD Producer Cod
     C                     KFLD           WBAECD           PL Location Cod
      * Setup key
     C                     MOVEL#DABCD    WBABCD           PD Producer Cod
     C                     MOVEL#DAECD    WBAECD           PL Location Cod
      * Establish starting position
     C           KRSSB     CHAIN@AFREAR              90    *
      * Data record not found
     C   90                MOVEL'PRK0015' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBA8TX    #DA8TX           PL Name
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WCBYCD           LR Reason Code
      * Setup key
     C                     Z-ADD#1BYCD    WCBYCD           LR Reason Code
      * Establish starting position
     C           KRSSC     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #DBYTX           LR Description
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCBYTX    #DBYTX           LR Description
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WAABCD           PD Producer Cod
      * Setup key
     C                     MOVEL#DABCD    WAABCD           PD Producer Cod
      * Establish starting position
     C           KRSSD     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAAGTX    #DAGTX           PD Name
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Pdctn Loc Name    RT - Producer Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WBABCD           PD Producer Cod
     C                     KFLD           WBAECD           PL Location Cod
      * Setup key
     C                     MOVEL#DABCD    WBABCD           PD Producer Cod
     C                     MOVEL#DAECD    WBAECD           PL Location Cod
      * Establish starting position
     C           KRSSE     CHAIN@AFREAR              90    *
      * Data record not found
     C   90                MOVEL'PRK0015' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBA8TX    #DA8TX           PL Name
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WCBYCD           LR Reason Code
      * Setup key
     C                     Z-ADD#1BYCD    WCBYCD           LR Reason Code
      * Establish starting position
     C           KRSSF     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #DBYTX           LR Description
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCBYTX    #DBYTX           LR Description
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WAABCD           PD Producer Cod
      * Setup key
     C                     MOVEL#DABCD    WAABCD           PD Producer Cod
      * Establish starting position
     C           KRSSG     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAAGTX    #DAGTX           PD Name
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Pdctn Loc Name    RT - Producer Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WBABCD           PD Producer Cod
     C                     KFLD           WBAECD           PL Location Cod
      * Setup key
     C                     MOVEL#DABCD    WBABCD           PD Producer Cod
     C                     MOVEL#DAECD    WBAECD           PL Location Cod
      * Establish starting position
     C           KRSSH     CHAIN@AFREAR              90    *
      * Data record not found
     C   90                MOVEL'PRK0015' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBA8TX    #DA8TX           PL Name
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WCBYCD           LR Reason Code
      * Setup key
     C                     Z-ADD#1BYCD    WCBYCD           LR Reason Code
      * Establish starting position
     C           KRSSI     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #DBYTX           LR Description
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCBYTX    #DBYTX           LR Description
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WAABCD           PD Producer Cod
      * Setup key
     C                     MOVEL#DABCD    WAABCD           PD Producer Cod
      * Establish starting position
     C           KRSSJ     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAAGTX    #DAGTX           PD Name
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv Pdctn Loc Name    RT - Producer Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WBABCD           PD Producer Cod
     C                     KFLD           WBAECD           PL Location Cod
      * Setup key
     C                     MOVEL#DABCD    WBABCD           PD Producer Cod
     C                     MOVEL#DAECD    WBAECD           PL Location Cod
      * Establish starting position
     C           KRSSK     CHAIN@AFREAR              90    *
      * Data record not found
     C   90                MOVEL'PRK0015' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBA8TX    #DA8TX           PL Name
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check reference to Loss Reason
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C           YPMTFD    IFEQ '#1BYCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1BYCD' defaulted for 'LR Reason Code'.
     C                     CALL 'PKDHSRR'              90  Sel Loss Reason
     C                     PARM *BLANK    W0RTN   7
     C           #1BYCD    PARM #1BYCD    WQ0015  30       LR Reason Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKDHSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9936  *
     C                     END
      *
     C           #1BYCD    IFNE *ZERO                      LR Reason Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VAEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1BYCD    IFEQ *ZERO                      LR Reason Code
     C                     GOTO VAEXIT
     C                     END
      *
     C           KLVAWC    KLIST
     C                     KFLD           WCBYCD           LR Reason Code
      * Setup key
     C                     Z-ADD#1BYCD    WCBYCD
     C           KLVAWC    CHAIN@BRREFQ              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VAEXIT
     C                     END
      * Send message 'Loss Reason            NF'
     C                     MOVEL'PRK0113' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'PRK0113' W0RTN
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           ZHCSRW    IFEQ 011
     C           ZHCSCL    ANDEQ032
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1SMST'  YPMTFD           LTN Source Type
     C                     END
      *
     C           ZHCSRW    IFEQ 012
     C           ZHCSCL    ANDEQ032
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1EBST'  YPMTFD           LTN Shift
     C                     END
      *
     C           ZHCSRW    IFEQ 013
     C           ZHCSCL    ANDGE032
     C           ZHCSCL    ANDLE034
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1BYCD'  YPMTFD           LR Reason Code
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1ETTX           PRT Description
     C                     MOVEL*BLANK    P1ACVN           PRT Printer Dev
     C                     MOVEL*BLANK    P1AKST           PRT Hold Output
     C                     MOVEL*BLANK    P1AMST           PRT Save Output
     C                     Z-ADD*ZERO     P1AKNB           PRT Copies
     C                     MOVEL*BLANK    P1ALST           PRT Night Queue
     C                     MOVEL*BLANK    P1AIVN           PRT Night Queue
     C                     MOVEL*BLANK    P1C7CD           Oms Application
     C                     MOVEL*BLANK    P2J8NB           Oms Warehouse C
     C                     Z-ADD*ZERO     P2HONB           CC Company Numb
     C                     MOVEL*BLANK    P2C8CD           Oms SalesPerson
     C                     MOVEL*BLANK    P2G8ST           Oms Allow Multi
     C                     MOVEL*BLANK    P2G9ST           Oms Default Pri
     C                     MOVEL*BLANK    P2EUTX           Oms Name
     C                     MOVEL*BLANK    P2EVTX           Oms System Valu
     C                     MOVEL*BLANK    P2HAST           Oms Access Deni
     C                     MOVEL*BLANK    P3HBST           First Time Flag
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Company Number Alpha Usr
     C                     MOVEL*BLANK    WUC3CD  3
      * Define work field Date Alpha USR
     C                     MOVEL*BLANK    WUCZCD  7
      * Define work field Date Alpha Usr 2
     C                     MOVEL*BLANK    WUDHCD  7
      * Define work field Reason Code Alpha 3 Usr
     C                     MOVEL*BLANK    WUY3TX  3
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Invalid Y/N USR
     C                     MOVEL*BLANK    WUG3ST  1
      * Define work field Blank USR
     C                     MOVEL*BLANK    WUCRTX 80
      * Define work field Record Found USR
     C                     MOVEL*BLANK    WUH7ST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAALNB           PD Production C
     C                     Z-ADD*ZERO     WAAATH           PD Std Delv Tim
     C                     Z-ADD*ZERO     WAAMNB           PD Std Truck Si
     C                     Z-ADD*ZERO     WAGCNB           PD VND Address
     C                     Z-ADD*ZERO     WAGJNB           PD EDI Trading
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBGLNB           Pl VND Address
     C                     Z-ADD*ZERO     WBASNB           PL Miles/Unused
     C                     Z-ADD*ZERO     WBHWNB           PL Primary Comp
     C                     Z-ADD*ZERO     WBAADT           RS Date Changed
     C                     Z-ADD*ZERO     WBAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WBABDT           RS Date Added
     C                     Z-ADD*ZERO     WBABTM           RS Time Added
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCBYCD           LR Reason Code
     C                     Z-ADD*ZERO     WCAADT           RS Date Changed
     C                     Z-ADD*ZERO     WCAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WCABDT           RS Date Added
     C                     Z-ADD*ZERO     WCABTM           RS Time Added
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Define work field Txt Field Not Needed
     C                     MOVEL*BLANK    WUOCTX 25
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Val Application/User  IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                     CALL 'PDGXXFR'              90  Val Application
     C                     PARM *BLANK    W0RTN   7
     C           P2J8NB    PARM *BLANK    WQ0019  3        Oms Warehouse C
     C           P2HONB    PARM *ZERO     WQ0020  30       CC Company Numb
     C                     PARM 'HPE'     WQ0021  6        Oms Application
     C           P2C8CD    PARM *BLANK    WQ0022  3        Oms SalesPerson
     C           P2G8ST    PARM *BLANK    WQ0023  1        Oms Allow Multi
     C           P2G9ST    PARM *BLANK    WQ0024 10        Oms Default Pri
     C           P2EUTX    PARM *BLANK    WQ0025 30        Oms Name
     C           P2EVTX    PARM *BLANK    WQ0026 40        Oms System Valu
     C           P2HAST    PARM *BLANK    WQ0027  1        Oms Access Deni
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P2HAST    IFEQ 'Y'                        *IF
      * Send message 'Access Denied for User'
     C                     MOVEL'PRK0298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Mov ApplN to Company  US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP2EVTX    ##CMP
     C                     END                             *FI
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P2HAST    IFEQ 'Y'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     MOVEL'Y'       P3HBST           First Time Flag
     C                     MOVEL'N'       P1ALST           PRT Night Queue
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** W0BEG
01046010510130201313028480285703104
033600336903616036250387203881
** W0END
01048010800130901320028480288103104
033620339303621036630387703919
** W0NAM
#1HUNB    #DLMTX    VDB3DT    VDB4DT    #1SMST    #DAFTX    #1EBST
#1BYCD    #DBYTX    #DABCD    #DAGTX    #DAECD    #DA8TX
** @CN
00001 Condemned Report
