      *****************  RPG PROGRAM HEADING  ************************
     h option(*SRCSTMT:*NODEBUGIO)
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP420
      * TITLE:       WORK WITH FEED DELIVERY TICKETS
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     04/04/94
      *
      * FUNCTION: THIS IS A WORK WITH THAT DISPLAYS THE RECORDS
      *           FROM THE FEED TICKET HEADER FILE.
      *
      *           RESTRICTORS:
      *               SHOW CURRENT TICKETS ONLY
      *
      *           POSITIONERS:
      *               REFERENCE TICKET NUMBER   (DESCENDING)
      *
      *           SELECTORS:
      *               FEED MILL
      *               FARM SITE
      *               TRANSACTION CODE
      *               TICKET STATUS
      *               COST THRU SYSTEM FLAG
      *               VENDOR INVOICE NUMBER
      *
      *           IT HAS F4-PROMPT LOGIC.
      *           IT LOADS THE SUBFILE A PAGE AT A TIME.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *           IT HAS STANDARD SUBFILE OPTION EDITING.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 01/30/01  LeAnne Fedor
      *           Production type was removed from the feed ticket files.
      *           So, removed all production type logic from program.
      *
      * 03/29/01  LeAnne Fedor
      *           Moved feed mill business office to subfile.
      *
      * 06/26/01  LeAnne Fedor
      *           Recompile only.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 07/15/02  LeAnne Fedor
      *           Removed 'production phase' from Feed Ticket Header file. So,
      *           removed 'production phase' as selector. Added 'cost thru system' as
      *           selector.
      *
      * 04/27/09  LeAnne Ramsey
      *           Added Fold/Drop to subfile. Costed Date/Time/User is displayed on the
      *           Drop line.  We have always had Costed Date; Costed Time and Costed User are
      *           new.  We now have selectors on all 3 fields.
      *
      * 05/21/09  LeAnne Ramsey
      *           We will now call a separate program for Adjustment Tickets.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 09/21/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Upload Date' to Feed Ticket Header.
      *
      * 03/26/20  Danny Nguyen - P405 - Farm Number Increase
      *           Recompile only. Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD420    CF   E             WORKSTN SFILE(HP420S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSP015    IF   E           K DISK
      *    FEED TICKET STATUS CODES
      *
      *
     FHSJ037C   IF   E           K DISK    rename(fhrec:fhrecc)
      *  FEED TICKET HEADER + FEED PICKUP TICKET
      *  (Logical selects only 'current' records)
      *
      *
     FHSJ037H   IF   E           K DISK
      *  FEED TICKET HEADER + FEED PICKUP TICKET
      *
      *
     FHSJ038O   IF   E           K DISK
      *  FEED TICKET DETAIL + CLOSED HOG GROUPS
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *STANDARD SUBFILE SELECTOR CONVERSION
      *---------------------------------------------------------------
     D                 DS
     D  DFOPT                  1      2
     D  WKOPT1                 1      1
     D  WKOPT2                 2      2
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
     D RECOST          C                   CONST('RECOST')
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DAGROS'
      *---------------------------------------------------------------
     D                 DS
     D  DAGROS                 1      2
     D  DAMVFL                 1      1
     D  DAINFL                 2      2
      *
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkcodt          s                   like(fhcodt)
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  FILL THE SUBFILE
      *
     C     TERMFL        IFEQ      NO
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
     C                   ENDIF
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * This subfile has Fold/Unfold capabilities.  The DDS uses the keywords
      * (SFLDROP, SFLFOLD) to determine whether the user is folded or unfolded
      * and to redisplay the screen in the same mode as when he last saw it.
      * Indicators 78 and 79 are assigned in the DDS to the keywords.
      *
     C                   setoff                                       7879
     C                   if        fold = '0'
     C                   seton                                        78
     C                   else
     C                   seton                                        79
     C                   endif
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP420K1
     C                   WRITE     HP420EC
     C                   EXFMT     HP420C1
      *
      * SAVE THE VALUE OF THE LOWEST SUBFILE RRN ON THE SCREEN FOR
      * LATER REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4-PROMPT
     C                   EXSR      $F4S1
      *
     C                   if        fld = 'C1CURFL' and
     C                             c1curfl <> svcurfl
     C                   exsr      $curfl
     C                   endif
      *
     C                   if        error = 0
     C                   exsr      $chksv
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     YES           RESET
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN06         WHENEQ    *ON                                          F6-CREATE
     C                   MOVEL(P)  'HP120'       WKFNCD
     C                   EXSR      $SEC
      *
      * VALIDATE THAT A GROSSMAN/HPS INTERFACE IS NOT IN
      * PROGRESS.
      *
     C     ERROR         IFEQ      0                                            IF GO AHEAD
      *
     C     *DTAARA       DEFINE                  DAGROS
     C                   IN        *DTAARA
      *
     C     DAINFL        IFNE      *BLANK
     C     ERROR         ANDLT     MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00830'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GO AHEAD
      *
      * USER MUST HAVE ENTERED A VALUE IN THE CONTROL RECORD FIELD FOR
      * TRANSACTION CODE SO THAT YOU WILL KNOW WHETHER HE IS ATTEMPTING
      * TO CREATE A DELIVERY, PICKUP OR ADJUSTMENT
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
      *
     C     C1TRCD        IFNE      'A'                                          IF BAD CODE
     C     C1TRCD        ANDNE     'D'
     C     C1TRCD        ANDNE     'P'
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00322'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   EXSR      $CREAT
     C                   ENDIF                                                  IF BAD CODE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'QEZOUTPT'                                       API
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
      *
      * REPOSITION THE SUBFILE IF THE USER HAS CHANGED ANY OF THE
      * POSITIONERS/SELECTORS IN THE CONTROL RECORD.
      *
     C     SVRTNO        WHENNE    C1RTNO                                       IF POSITION
     C     SVTKNO        ORNE      C1TKNO
     C     SVFMBO        ORNE      C1FMBO
     C     SVTRCD        ORNE      C1TRCD
     C     svputycd      orne      c1putycd
     C     SVFSCD        ORNE      C1FSCD
     C     SVCSFL        ORNE      C1CSFL
     C     SVTSCD        ORNE      C1TSCD
     C     SVVINO        ORNE      C1VINO
     C     SVCURFL       ORNE      C1CURFL
     C     svcomdy       orne      c1comdy
     C     svcotm        orne      c1cotm
     C     svcousr       orne      c1cousr
      *
     C                   if        c1curfl <> svcurfl                                           nge
     C                   exsr      $curfl
     C                   endif                                                                   nge
      *
     C                   if        error = 0
     C                   exsr      $chksv
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NORECS        IFEQ      YES                                          IF EMPTY SFL
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF EMPTY SFL
      *
     C                   ENDSL
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SAVE THE CONTROL RECORD POSITIONERS/SELECTORS
      *----------------------------------------------------------------
      *
     C     $CHKSV        BEGSR
      *
     C                   MOVEL     NO            RESET
     C                   MOVEL     SET1          ROUTNE
      *
     C                   MOVEL     C1FMBO        SVFMBO
     C                   Z-ADD     C1RTNO        SVRTNO
     C                   Z-ADD     C1TKNO        SVTKNO
      *
     C                   MOVEL     C1TRCD        SVTRCD
     C                   move      c1putycd      svputycd
     C                   MOVEL     C1FSCD        SVFSCD
     C                   MOVEL     C1CSFL        SVCSFL
     C                   MOVEL     C1TSCD        SVTSCD
     C                   MOVEL     C1VINO        SVVINO
     C                   MOVEL     C1CURFL       SVCURFL
     C                   z-add     c1comdy       svcomdy
     C                   z-add     c1cotm        svcotm
     C                   movel     c1cousr       svcousr
      *
      * Flip date selector from mmddyy to ccyymmdd format
      *
     C     *mdy          test(d)                 c1comdy                92
     C                   if        *in92 = *on                                  If bad date
     C                   z-add     0             wkcodt
     C                   else
     C     *mdy          move      c1comdy       wkisodate
     C                   move      wkisodate     wkcodt
     C                   endif                                                  If bad date
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * FIRST, EDIT ALL THE SELECTIONS ENTERED BY THE USER IN THE
      * SUBFILE OPTION FIELD TO SEE THAT VALID SELECTIONS WERE INPUT
      *
     C                   EXSR      $EDOP1
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTIONS ENTERED
      * BY THE USER, THEN EXECUTE THE SUBROUTINE TO READ AND PROCESS
      * THE SUBFILE RECORDS SELECTED BY THE USER.  AFTER COMPLETING THE
      * SUBROUTINE, SET THE ROUTINE TO START OVER.
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
      *
     C     RTNCD         IFEQ      '00'
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
     C                   ELSE
      *
      * ELSE THERE WERE ERRORS IN THE SUBFILE OPTIONS ENTERED, SO SET
      * TO REDISPLAY SCREEN WITH ERRORS TO USER
      *
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * Validate 'show current tickets only-yes/no' flag
      *---------------------------------------------------------------
      *
     C     $curfl        begsr
      *
     C                   if        c1curfl <> yes and
     C                             c1curfl <> no
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09106'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO CLEAR THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   Z-ADD     0             SVRRN1
      *
     C                   CLEAR                   HP420S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP420C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO REFRESH/FILL THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * RESET THE FLAG THAT IS USED TO INDICATE THAT THERE IS
      * A 'LEFTOVER' 'TO SIDE' RECORD FOR A PICKUP TICKET./
      *
     C                   MOVEL     NO            LEFTOV
      *
      * SET POSITION IN FEED TICKET HEADER FILE
      *
     C                   select
     C                   when      c1curfl = yes
     C                   if        c1rtno = 0
     C     *hival        setll     hsj037c
     C                   else
     C     c1rtno        setll     hsj037c
     C                   endif
      *
     C                   other
     C                   if        c1rtno = 0
     C     *hival        setll     hsj037h
     C                   else
     C     c1rtno        setll     hsj037h
     C                   endif
     C                   endsl
      *
      * THE FIELD 'RESET' IS A FLAG FIELD TO INDICATE WHETHER YOU ARE
      * ATTEMPTING TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE
      * SUBFILE.
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      * IF RESET IS 'NO', JUST START THE SUBFILE OVER
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS.
      * THE NUMBER WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     SVRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
     C                   Z-ADD     SVRRN1        HDRRN1
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      *
     C                   Z-ADD     0             COUNT             2 0
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE. ONLY INCLUDE
      * RECORDS FROM THE FEED TICKET HEADER THAT MATCH THE USER'S
      * SELECTORS
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
      * IF A 'PICK-UP TICKET TO FARM' RECORD WAS LEFTOVER
      * FROM THE PREVIOUS LOAD, THEN WRITE IT TO THE
      * SUBFILE FIRST.  WITHOUT THIS LOGIC, THESE 'TO FARM'
      * RECORDS CAN CAUSE THE PROGRAM TO WRITE 1 MORE RECORD
      * THAN THE SUBFILE PAGE HOLDS.
      *
     C     LEFTOV        IFEQ      YES
     C                   EXSR      $PICK
     C                   MOVEL     NO            LEFTOV
     C                   ENDIF
      *
     C                   select
     C                   when      c1curfl = yes
     C                   read      hsj037c                                82
     C                   other
     C                   read      hsj037h                                82
     C                   endsl
      *
     C     *IN82         IFEQ      *OFF                                          IF READ
      *
      * WRITE A RECORD TO THE SUBFILE FOR THE FOLLOWING:
      *    DELIVERY TICKETS
      *    ADJUSTMENT TICKETS
      *    THE 'FROM' SIDE OF PICKUP TICKETS
      *
     C     C1FMBO        IFNE      *BLANK                                        IF MILL
     C     C1FMBO        ANDNE     FHFMBO
     C                   ELSE
      *
     C     C1TKNO        IFNE      0                                             IF TICKET
     C     C1TKNO        ANDNE     FHTKNO
     C                   ELSE
      *
     C     C1TRCD        IFNE      *BLANK                                        IF A,P,D
     C     C1TRCD        ANDNE     FHTRCD
     C                   ELSE
      *
     C                   if        c1putycd <> *blank and c1putycd <> fhputycd   If pick
     C                   else
      *
     C     C1CSFL        IFNE      *BLANK                                        IF COST
     C     C1CSFL        ANDNE     FHCSFL
     C                   ELSE
      *
     C     C1FSCD        IFNE      0                                             IF FARM
     C     C1FSCD        ANDNE     FHFSCD
     C                   ELSE
      *
     C     C1TSCD        IFNE      *BLANK                                        IF STATUS
     C     C1TSCD        ANDNE     FHTSCD
     C                   ELSE
      *
     C     C1VINO        IFNE      *BLANK                                        IF VENDOR
     C     C1VINO        ANDNE     FHVINO
     C                   ELSE
      *
     C                   if        fhtkno = 5556964
     C     *IN43         IFEQ      *ON
     C                   ENDIF
     C                   endif
      *
     C                   if        c1comdy <> 0 and wkcodt <> fhcodt             If costed date
     C                   else
      *
     C                   if        c1cotm <> 0 and c1cotm <> fhcotm              If costed time
     C                   else
      *
     C                   if        c1cousr <> *blank and c1cousr <> fhcousr      If costed user
     C                   else
      *
     C                   MOVEL     FHFMBO        DFFMBO
     C                   Z-ADD     FHFSCD        DFFSCD
     C                   MOVEL     FHCSFL        DFCSFL
     C                   MOVE      *BLANK        DFTOFL
      *
      * WRITE SUBFILE RECORD
      *
     C                   EXSR      $WRITE
     C                   endif                                                  If costed user
     C                   endif                                                  If costed time
     C                   endif                                                  If costed date
     C                   ENDIF                                                  IF VENDOR
     C                   ENDIF                                                  IF STATUS
     C                   ENDIF                                                  IF FARM
     C                   ENDIF                                                  IF COST
     C                   endif                                                  If pick
     C                   ENDIF                                                  IF A,P,D
      *
      * IF THE 'TO' FARM SITE IS NOT ZERO, THEN WRITE A
      * SECOND RECORD TO THE SUBFILE REPRESENTING THE 'TO' FARM.
      * (ONLY PICKUP TICKETS WHERE FEED WAS PICKED UP FROM ONE
      * FARM AND DELIVERED TO A DIFFERENT FARM WILL HAVE A 'TO'
      * FARM SITE.) IF THIS RECORD WILL CAUSE THE SUBFILE TO
      * EXCEED THE NUMBER OF SUBFILE RECORDS PER PAGE, THEN
      * SET A 'LEFTOVER' FLAG INSTEAD OF WRITING THE RECORD. IN
      * THE NEXT EXECUTION OF THIS LOAD SUBROUTINE, THE 'LEFTOVER'
      * RECORD WILL BE WRITTEN FIRST PRIOR TO THE READ OF THE NEXT
      * FEED TICKET RECORD.
      *
     C     FPFSCD        IFNE      0                                            IF 'TO' FARM
     C     COUNT         IFLT      WKPLIN
     C                   EXSR      $PICK
     C                   ELSE
     C                   MOVEL     YES           LEFTOV
     C                   ENDIF
     C                   ENDIF                                                  IF 'TO' FARM
      *
     C                   ENDIF                                                  IF TICKET
     C                   ENDIF                                                  IF MILL
     C                   ENDIF                                                  IF READ
     C                   ENDDO                                                  DO FILL LOOP
      *
     C                   Z-ADD     HDRRN1        SVRRN1
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD MESSAGE 'NO DATA TO DISPLAY'.
      *
     C     HDRRN1        IFEQ      0
     C                   MOVEL     YES           NORECS
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09002'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   MOVEL     NO            NORECS
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO WRITE A RECORD TO THE SUBFILE
      *----------------------------------------------------------------
      *
     C     $WRITE        BEGSR
      *
      * USING THE TICKET STATUS CODE FROM THE TICKET HEADER RECORD,
      * RETRIEVE THE STATUS CODE RECORD AND MOVE THE VALUE OF THE
      * 'POSTED FLAG' INTO A HIDDEN SUBFILE FIELD TO USE IN CHECKING
      * ALLOWABLE OPTIONS
      *
     C     FHTSCD        CHAIN     HSP015                             91
     C     *IN91         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     TSPOFL        HDPOFL
     C                   ELSE
     C                   MOVE      *BLANK        HDPOFL
     C                   ENDIF                                                  IF FOUND
      *
      * Flip Ticket Date to MMDDYY
      *
     C     *iso          test(d)                 fhtkdt                 92
     C                   if        *in92 = *off
     C                   move      fhtkdt        wkisodate
     C     *mdy          move      wkisodate     dfmdy
     C                   endif
      *
      *
      * Flip Costed Date to MMDDYY
      *
     C                   if        fhcodt <> 0
     C     *iso          test(d)                 fhcodt                 92
     C                   if        *in92 = *off
     C                   move      fhcodt        wkisodate
     C     *mdy          move      wkisodate     dfcomdy
     C                   endif
     C                   endif
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   MOVE      *BLANK        DFOPT
     C                   Z-ADD     FHRTNO        DFRTNO
     C                   MOVEL     FHTKNO        DFTKNO
     C                   MOVEL     FHTRCD        DFTRCD
     C                   move      fhputycd      dfputycd
     C                   MOVEL     FHTSCD        DFTSCD
     C                   MOVEL     FHVINO        DFVINO
     C                   z-add     fhcotm        dfcotm
     C                   move      fhcousr       dfcousr
     C                   Z-ADD     FHRTDT        HDRTDT
     C                   Z-ADD     FHTKDT        HDTKDT
     C                   MOVEL     FHPRFL        HDPRFL
     C                   MOVEL     FHCSFL        HDCSFL
      *
     C                   WRITE     HP420S1
     C                   SETON                                        81
      *
      * FOR POSITIONING, PLACE THE SUBFILE RELATIVE RECORD NUMBER INTO
      * THE SFLRCDNBR FIELD (HDPAG1)
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * PROCESS THE 'TO' FARM FOR PICKUP TICKETS
      *----------------------------------------------------------------
      *
      * ONLY PICKUP TICKETS WHERE FEED WAS PICKED UP FROM ONE
      * FARM AND DELIVERED TO A DIFFERENT FARM WILL HAVE A 'TO'
      * FARM SITE.  WRITE A RECORD TO THE SUBFILE FOR THESE
      * FARM SITES THAT PICKED UP FEED WAS DELIVERED TO.
      *
     C     $PICK         BEGSR
      *
     C     C1TKNO        IFNE      0                                             IF TICKET
     C     C1TKNO        ANDNE     FPTKNO
     C                   ELSE
      *
     C     C1TRCD        IFNE      *BLANK                                        IF A,P,D
     C     C1TRCD        ANDNE     FPTRCD
     C                   ELSE
      *
     C                   if        c1putycd <> *blank and c1putycd <> fhputycd   If pick
     C                   else
      *
      *
     C     C1CSFL        IFNE      *BLANK                                        IF COST
     C     C1CSFL        ANDNE     FHCSFL
     C                   ELSE
      *
     C     C1FSCD        IFNE      0                                             IF FARM
     C     C1FSCD        ANDNE     FPFSCD
     C                   ELSE
      *
     C     C1TSCD        IFNE      *BLANK                                        IF STATUS
     C     C1TSCD        ANDNE     FHTSCD
     C                   ELSE
      *
     C     C1VINO        IFNE      *BLANK                                        IF VENDOR
     C     C1VINO        ANDNE     FHVINO
     C                   ELSE
      *
     C                   if        c1comdy <> 0 and wkcodt <> fhcodt             If costed date
     C                   else
      *
     C                   if        c1cotm <> 0 and c1cotm <> fhcotm              If costed time
     C                   else
      *
     C                   if        c1cousr <> *blank and c1cousr <> fhcousr      If costed user
     C                   else
      *
     C                   Z-ADD     FPFSCD        DFFSCD
     C                   MOVEL     FHCSFL        DFCSFL
     C                   MOVEL     FPFMBO        DFFMBO
     C                   MOVEL     'D'           DFTOFL
      *
      * WRITE SUBFILE RECORD
      *
     C                   EXSR      $WRITE
     C                   endif                                                  If costed user
     C                   endif                                                  If costed time
     C                   endif                                                  If costed date
     C                   ENDIF                                                  IF VENDOR
     C                   ENDIF                                                  IF STATUS
     C                   ENDIF                                                  IF FARM
     C                   ENDIF                                                  IF COST
     C                   endif                                                  If pick
     C                   ENDIF                                                  IF A,P,D
     C                   ENDIF                                                  IF TICKET
      *
     C                   ENDSR
      /EJECT
      *-------------------------------------------------------------------------
      * SUBROUTINE TO CALL MAINTENANCE PROGRAM WHEN THE USER TAKES F6=CREATE
      *-------------------------------------------------------------------------
      *
     C     $CREAT        BEGSR
      *
     C                   MOVEL     '00'          RTNCD
     C                   MOVEL     CREATE        MODE
     C                   MOVEL     C1TRCD        WKTRCD
     C                   MOVE      *BLANK        DFFMBO
     C                   Z-ADD     0             DFRTNO
     C                   Z-ADD     0             HDRTDT
     C                   Z-ADD     0             DFTKNO
     C                   Z-ADD     0             HDTKDT
     C                   Z-ADD     0             DFMDY
     C                   MOVE      *BLANK        DFVINO
     C                   Z-ADD     0             DFFSCD
     C                   MOVE      *BLANK        DFTSCD
     C                   z-add     0             dfcomdy
     C                   z-add     0             dfcotm
     C                   move      *blank        dfcousr
     C                   MOVE      *BLANK        HDPRFL
     C                   MOVE      *BLANK        HDCSFL
      *
      * DELIVERY OR ADJUSTMENT TICKET
      *
     C                   select
     C                   when      c1trcd = 'D'
     C                   call      'HP120'       plist1
      *
     C                   when      c1trcd = 'A'
     C                   call      'HP1200'      plist3
      *
     C                   when      c1trcd = 'P'
     C                   call      'HP121'       plist2
     C                   endsl
      *
     C                   MOVE      *BLANK        C1TRCD
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO READ CHANGED RECORDS IN SUBFILE AND
      * EDIT FOR VALID SUBFILE OPTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $EDOP1        BEGSR
      *
     C                   Z-ADD     0             ERROR
      *
      * READ ALL THE CHANGED SUBFILE RECORDS EDITING FOR VALID SUBFILE
      * OPTIONS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO READC
     C                   READC     HP420S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
      * SET OFF ERROR INDICATOR FOR SUBFILE SELECTOR
      *
     C                   SETOFF                                       30
      *
      * CONVERT OPTION USER ENTERED TO STANDARD FORMAT. FOR EXAMPLE,
      * A ' 1', '01', AND '1 ' MUST BE STANDARDIZED TO ' 1'.
      *
     C     WKOPT2        IFEQ      *BLANK                                       IF 2 = BLANK
     C                   MOVE      WKOPT1        WKOPT2
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 2 = BLANK
      *
     C     WKOPT1        IFEQ      *ZEROS                                       IF 1 IS ZERO
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 1 IS ZERO
      *
      * TEST FOR VALID SUBFILE OPTION ENTRY ON ALL CHANGED RECORDS
      *
     C     DFOPT         IFNE      ' 2'                                         IF BAD OPT
     C     DFOPT         ANDNE     ' 5'
     C     DFOPT         ANDNE     ' 9'
     C     DFOPT         ANDNE     '  '
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ELSE
      *
      * CHECK THE USER'S AUTHORITY TO THE FUNCTION
      *
     C     DFOPT         IFEQ      ' 2'                                         IF OPTION
     C     DFOPT         OREQ      ' 5'
     C     DFOPT         OREQ      ' 9'
      *
     C                   select
     C                   when      dfopt = ' 2' or dfopt = ' 9'
      *
     C                   select
     C                   when      dftrcd = 'P'
     C                   movel(p)  'HP121'       wkfncd
      *
     C                   when      dftrcd = 'D'
     C                   movel(P)  'HP120'       wkfncd
     C                   endsl
      *
     C     DFOPT         WHENEQ    ' 5'
     C                   MOVEL(P)  'HP720'       WKFNCD
     C                   ENDSL
      *
      *  CHECK USER AUTHORITY TO THE FUNCTION
      *
     C                   EXSR      $SEC
     C     SECFL         IFEQ      YES                                          IF PROBLEM
     C                   SETON                                        30
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF PROBLEM
     C                   ENDIF                                                  IF OPTION
     C                   ENDIF                                                  IF BAD OPT
      *
      * PERFORM ADDITIONAL VALIDATIONS FOR OPTION 9=RECOST
      *
     C     DFOPT         IFEQ      ' 9'
     C                   EXSR      $OPT9
     C                   ENDIF
      *
     C     ERROR         IFEQ      0
     C     DFOPT         ANDEQ     *BLANK
     C                   SETOFF                                       85
     C                   ELSE
     C                   SETON                                        85
     C                   ENDIF
      *
     C                   UPDATE    HP420S1
     C                   SETOFF                                       8530
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO READC
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * RECOST VALIDATIONS
      *---------------------------------------------------------------
      *
      *  ADJUSTMENT TICKETS CAN NEVER BE RECOSTED
      *
      *  DELIVERY TICKETS CAN BE RECOSTED IF:
      *      THE STATUS IS CO OR RC
      *      THE TICKET IS NOT FOR PURCHASED FEED
      *
      *  PICKUP TICKETS CAN BE RECOSTED IF:
      *      THE STATUS IS CO OR RC
      *
     C     $OPT9         BEGSR
      *
      * ADJUSTMENT TICKETS CANNOT BE RECOSTED.
      *
     C     DFTRCD        IFEQ      'A'                                          IF ADJUST
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00321'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ELSE
      *
      * A TICKET CANNOT BE RECOSTED IF IT IS ALREADY POSTED
      *
     C     HDPOFL        IFEQ      YES                                          IF POSTED
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00323'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ELSE
      *
      * A TICKET CANNOT BE RECOSTED IF IT HAS A STATUS OF EN=ENTERED
      *
     C     DFTSCD        IFEQ      'EN'                                         IF ENTERED
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00329'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ELSE
      *
      * DELIVERY TICKETS CANNOT BE RECOSTED IF THEY HAVE HAD
      * DOLLARS KEYED IN (IE: COST THROUGH SYSTEM IS 'NO')
      *
     C     DFTRCD        IFEQ      'D'                                          IF DELIVERY
     C     HDCSFL        ANDEQ     NO
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00326'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF                                                  IF DELIVERY
     C                   ENDIF                                                  IF ENTERED
     C                   ENDIF                                                  IF POSTED
     C                   ENDIF                                                  IF ADJUST
      *
      *  A FEED TICKET CANNOT BE RECOSTED IF ANY FEED DETAIL
      *  RECORDS ARE ASSOCIATED WITH A CLOSED GROUP
      *
     C     KEY01         CHAIN     HSJ038O                            97
     C     *IN97         IFEQ      *OFF
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   SELECT
     C     DFOPT         WHENEQ    ' 2'
     C                   MOVEL     'HS00520'     MGID(E)
     C     DFOPT         WHENEQ    ' 9'
     C                   MOVEL     'HS00521'     MGID(E)
     C                   ENDSL
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF
      *
      *
     C                   ENDSR
      /EJECT
      *-----------------------------------------------------------------------------
      * SUBROUTINE TO READ SUBFILE RECORDS AND PROCESS USER SELECTIONS ON SCREEN 1
      *-----------------------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   Z-ADD     0             ERROR
     C                   MOVEL     '00'          RTNCD
      *
      * READ ALL THE CHANGED SUBFILE RECORDS AND PROCESS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO PROCESS
     C                   READC     HP420S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
     C     RTNCD         IFEQ      '00'                                         IF ENTER
      *
      * IF USER SELECTED OPTION 2=REVISE, SET PARM FOR REVISE MODE
      * AND SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C                   select                                                 Select 1
     C                   when      dfopt = ' 2'
     C                   MOVEL     YES           RESET
     C                   MOVEL     REVISE        MODE
     C                   MOVEL     DFTRCD        WKTRCD
      *
     C                   select
     C                   when      dftrcd = 'P'
     C                   call      'HP121'       plist2
      *
     C                   when      dftrcd = 'D'
     C                   call      'HP120'       plist1
      *
     C                   when      dftrcd = 'A'
     C                   call      'HP1200'      plist3
     C                   endsl
      *
      * IF USER SELECTED OPTION 5=VIEW TICKET,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C                   when      dfopt = ' 5'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP720'
     C                   PARM                    DFFMBO
     C                   PARM                    DFFSCD
     C                   PARM                    DFRTNO
     C                   PARM                    DFVINO
     C                   PARM                    RTNCD
      *
      * IF USER SELECTED OPTION 9=RECOST, SET PARM FOR RECOST MODE
      * AND SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C                   when      dfopt = ' 9'
     C                   MOVEL     YES           RESET
     C                   MOVEL     RECOST        MODE
     C                   MOVEL     DFTRCD        WKTRCD
      *
     C                   select
     C                   when      dftrcd = 'P'
     C                   call      'HP121'       plist2
      *
     C                   when      dftrcd = 'D'
     C                   call      'HP120'       plist1
     C                   endsl
     C                   endsl                                                  Select 1

      *
      * UPON RETURNING FROM THE CALLED PROGRAM,
      * CLEAR THE SUBFILE OPTION SELECTOR ENTERED BY THE USER AND
      * REWRITE THE SUBFILE RECORD
      *
     C                   MOVE      *BLANK        DFOPT
     C                   SETOFF                                       85
     C                   ELSE
     C                   SETON                                        85
     C                   ENDIF                                                  IF ENTER
      *
     C                   UPDATE    HP420S1
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO PROCESS
      *
     C                   ENDSR
      /EJECT
      ****************************************************************
      * F4 PROMPT ON SCREEN 1
      ****************************************************************
      *
     C     $F4S1         BEGSR
      *
      * Show current tickets only yes/no flag
      *
     C                   select
     C                   when      fld = 'C1CURFL'
     C                   call      'HP522'
     C                   parm                    xxcurfl
     C                   seton                                        53
     C                   if        xxcurfl <> *blank
     C                   movel     xxcurfl       c1curfl
     C                   endif
      *
      * IF BUSINESS OFFICE CODE
      *
     C     FLD           WHENEQ    'C1FMBO'
     C                   MOVE      *BLANK        XXFMBO
     C                   MOVE      *BLANK        XXBODS
     C                   CALL      'HP503'
     C                   PARM                    XXFMBO
     C                   PARM                    XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        51
     C     XXFMBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFMBO        C1FMBO
     C                   ENDIF                                                  IF SELECTED
      *
      * IF FARM SITE
      *
     C     FLD           WHENEQ    'C1FSCD'
     C                   CALL      'HP528'
     C                   PARM      *blank        XXFMBO
     C                   PARM      0             XXFSCD
     C                   PARM      *blank        XXFSNM
     C                   SETON                                        52
     C     XXFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     XXFSCD        C1FSCD
     C                   ENDIF                                                  IF SELECTED
      *
      *
      * IF COST THRU SYSTEM
      *
     C     FLD           WHENEQ    'C1CSFL'
     C                   call      'HP522'
     C                   parm                    xxcsfl
     C                   seton                                        54
     C                   if        xxcsfl <> *blank
     C                   movel     xxcsfl        c1csfl
     C                   endif
      *
      * IF TICKET STATUS
      *
     C     FLD           WHENEQ    'C1TSCD'
     C                   MOVE      *BLANK        XXTSCD
     C                   MOVE      *BLANK        XXTSDS           20
     C                   CALL      'HP527'
     C                   PARM                    XXTSCD
     C                   PARM                    XXTSDS
     C                   SETON                                        55
     C     XXTSCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXTSCD        C1TSCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF TRANSACTION CODE
      *
     C     FLD           WHENEQ    'C1TRCD'
     C                   CALL      'HP536'
     C                   PARM      *blank        XXTRCD
     C                   PARM      *blank        XXTRDS
     C                   SETON                                        58
     C     XXTRCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXTRCD        C1TRCD
     C                   ENDIF                                                  IF SELECTED
      *
      * Pickup Type Code
     C                   when      fld = 'C1PUTYCD'
     C                   call      'HP5061'
     C                   parm      *blank        xxputycd
     C                   parm      *blank        xxputyds
     C                   seton                                        56
     C                   if        xxputycd <> *blank
     C                   move      xxputycd      c1putycd
     C                   endif
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO SET THE SUBFILE TO REDISPLAY AT THE
      * FIRST PAGE THAT HAS ERRORS ON SCREEN 1
      *----------------------------------------------------------------
      *
     C     $ERR1         BEGSR
      *
     C     ERROR         IFEQ      1
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVEL     *BLANK        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            B.O. ERR FLG
     C                   PARM                    OURMFL            1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * FEED TICKET DETAIL AND HOG GROUP
      *
     C     KEY01         KLIST
     C                   KFLD                    C1FMBO
     C                   KFLD                    DFTKNO
     C                   KFLD                    DFTRCD
      *
      * PARM LISTS
      *
     C     PLIST1        PLIST
     C                   PARM                    MODE
     C                   PARM                    DFFMBO
     C                   PARM                    DFFSCD
     C                   PARM                    HDRTDT
     C                   PARM                    DFTKNO
     C                   PARM                    HDTKDT
     C                   PARM                    DFMDY
     C                   PARM                    DFTSCD
     C                   PARM                    HDPRFL
     C                   PARM                    HDCSFL
     C                   PARM                    DFVINO
     C                   PARM                    OUDVCD
     C                   PARM                    RTNCD
      *
      *
     C     PLIST2        PLIST
     C                   PARM                    MODE
     C                   PARM                    DFFMBO
     C                   PARM                    DFFSCD
     C                   PARM                    DFRTNO
     C                   PARM                    HDRTDT
     C                   PARM                    DFTKNO
     C                   PARM                    HDTKDT
     C                   PARM                    DFMDY
     C                   PARM                    DFTSCD
     C                   PARM                    WKTRCD
     C                   PARM                    RTNCD
      *
      *
     C     PLIST3        PLIST
     C                   PARM                    MODE
     C                   PARM                    DFFMBO
     C                   PARM                    DFTKNO
     C                   PARM                    RTNCD
      *
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        MODE              6            PARM
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C     *LIKE         DEFINE    HDRRN1        SVRRN1
      *
      * DEFINE SAVE AND WORK FIELDS
      *
     C     *like         define    c1putycd      svputycd
     C     *LIKE         DEFINE    C1CSFL        SVCSFL
     C     *LIKE         DEFINE    C1FMBO        SVFMBO
     C     *LIKE         DEFINE    C1RTNO        SVRTNO
     C     *LIKE         DEFINE    C1TKNO        SVTKNO
     C     *LIKE         DEFINE    C1TRCD        SVTRCD
     C     *LIKE         DEFINE    C1FSCD        SVFSCD
     C     *LIKE         DEFINE    C1TSCD        SVTSCD
     C     *LIKE         DEFINE    C1VINO        SVVINO
     C     *LIKE         DEFINE    C1CURFL       SVCURFL
     C     *like         define    c1cotm        svcotm
     C     *like         define    c1cousr       svcousr
     C     *like         define    c1comdy       svcomdy
      *
     C     *LIKE         DEFINE    C1TRCD        WKTRCD
     C                   MOVEL     NO            LEFTOV            1
      *
      * DEFINE FIELDS FOR USE AS PARMS WHEN CALLING PROMPT PROGRAMS
      *
     C     *LIKE         DEFINE    C1FMBO        XXFMBO
     C                   MOVE      *blank        xxbods           30
     C     *LIKE         DEFINE    C1FSCD        XXFSCD
     C                   MOVE      *blank        xxfsnm           25
     C     *LIKE         DEFINE    C1CSFL        XXCSFL
     C     *LIKE         DEFINE    C1TSCD        XXTSCD
     C     *LIKE         DEFINE    C1TRCD        XXTRCD
     C                   MOVE      *BLANK        XXTRDS           10
     C     *LIKE         DEFINE    C1CURFL       XXCURFL
     C     *like         define    c1putycd      xxputycd
     C                   move      *blank        xxputyds         25
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     10            WKPLIN            2 0
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM
     C                   EXSR      $CLMSG
      *
      * SET UP WORK FIELDS FOR STANDARD SECURITY CHECKS THAT INVOLVE
      * A BUSINESS OFFICE
      *
     C     *LIKE         DEFINE    OUDVCD        SVDVCD
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
     C                   EXSR      $SEC
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
      * SAVE THIS FUNCTION'S DIVISION CODE
      *
     C                   MOVEL     OUDVCD        SVDVCD
      *
      * Default 'show current tickets only' flag to YES
      *
     C                   move      yes           c1curfl
     C                   move      yes           svcurfl
      *
     C                   ENDSR
      /EJECT
