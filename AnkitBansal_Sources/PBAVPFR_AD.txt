// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBAVPFR
// ?Date: 14.08.2025 Time: 12:03:19
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PAR.Application Code = CND.Order Management System
PAR.Application_Code = 'OMS';

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER(PAR.Application_Code);
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Print required level headings

CASE;

IF NEW Company_Number;
EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(CUR.Company_Name_DRV);
PARAMETER(CUR.Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// Print Company Number header format
PRINT Company Number header format;

ENDIF;

// SUPPRESSED PRINT Ship To Customer header format

// SUPPRESSED PRINT Customer Purchase Order # header format

//?USER: On print of detail format

MOVE *ALL (To: CUR From: DB1);

EXECUTE FUNCTION(Customer Name DRV) TYPE(DRVFLD)                                AC1631131;
PARAMETER(CUR.Customer_Name_DRV);
PARAMETER(CUR.Ship_To_Customer);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Customer_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?** Parse SSD from *char(26) (from SSIS) to CYYMMDD
//?** Then move 10 alpha to 7 alpha, convert 7 alpha to 7 numeric.
//?** Finally move 7 numeric to SSD
// WRK.USR Century = CND.21st Century
WRK.USR_Century = '1';

// WRK.TXT Year Number       USR = SUBSTRING(DB1.SSD Date/Time Alpha,CON.3,CON.2)
WRK.TXT_Year_Number_USR = SUBSTRING(DB1.SSD_Date_Time_Alpha:3:2);

// WRK.TXT Month Number      USR = SUBSTRING(DB1.SSD Date/Time Alpha,CON.6,CON.2)
WRK.TXT_Month_Number_USR = SUBSTRING(DB1.SSD_Date_Time_Alpha:6:2);

// WRK.TXT Day Number        USR = SUBSTRING(DB1.SSD Date/Time Alpha,CON.9,CON.2)
WRK.TXT_Day_Number_USR = SUBSTRING(DB1.SSD_Date_Time_Alpha:9:2);

// WRK.Text 10A USR = CONCAT(WRK.USR Century,WRK.TXT Year Number       USR,CON.*ZERO)
WRK.Text_10A_USR = WRK.USR_Century + WRK.TXT_Year_Number_USR (*ZERO);

// WRK.Text 10A USR = CONCAT(WRK.Text 10A USR,WRK.TXT Month Number      USR,CON.*ZERO)
WRK.Text_10A_USR = WRK.Text_10A_USR + WRK.TXT_Month_Number_USR (*ZERO);

// WRK.Text 10A USR = CONCAT(WRK.Text 10A USR,WRK.TXT Day Number        USR,CON.*ZERO)
WRK.Text_10A_USR = WRK.Text_10A_USR + WRK.TXT_Day_Number_USR (*ZERO);

// WRK.Text USR 7 = WRK.Text 10A USR
WRK.Text_USR_7 = WRK.Text_10A_USR;

// WRK.Number Value - 7 = CVTVAR(WRK.Text USR 7)
WRK.Number_Value_7 = CVTVAR(WRK.Text_USR_7);

// CUR.Scheduled Ship Date USR = WRK.Number Value - 7
CUR.Scheduled_Ship_Date_USR = WRK.Number_Value_7;

//?** Parse SSD from *char(26) (from SSIS) to CYYMMDD
//?** Then move 10 alpha to 7 alpha, convert 7 alpha to 7 numeric.
//?** Finally move 7 numeric to RDD
// WRK.USR Century = CND.21st Century
WRK.USR_Century = '1';

// WRK.TXT Year Number       USR = SUBSTRING(DB1.RDD Date/Time Alpha,CON.3,CON.2)
WRK.TXT_Year_Number_USR = SUBSTRING(DB1.RDD_Date_Time_Alpha:3:2);

// WRK.TXT Month Number      USR = SUBSTRING(DB1.RDD Date/Time Alpha,CON.6,CON.2)
WRK.TXT_Month_Number_USR = SUBSTRING(DB1.RDD_Date_Time_Alpha:6:2);

// WRK.TXT Day Number        USR = SUBSTRING(DB1.RDD Date/Time Alpha,CON.9,CON.2)
WRK.TXT_Day_Number_USR = SUBSTRING(DB1.RDD_Date_Time_Alpha:9:2);

// WRK.Text 10A USR = CONCAT(WRK.USR Century,WRK.TXT Year Number       USR,CON.*ZERO)
WRK.Text_10A_USR = WRK.USR_Century + WRK.TXT_Year_Number_USR (*ZERO);

// WRK.Text 10A USR = CONCAT(WRK.Text 10A USR,WRK.TXT Month Number      USR,CON.*ZERO)
WRK.Text_10A_USR = WRK.Text_10A_USR + WRK.TXT_Month_Number_USR (*ZERO);

// WRK.Text 10A USR = CONCAT(WRK.Text 10A USR,WRK.TXT Day Number        USR,CON.*ZERO)
WRK.Text_10A_USR = WRK.Text_10A_USR + WRK.TXT_Day_Number_USR (*ZERO);

// WRK.Text USR 7 = WRK.Text 10A USR
WRK.Text_USR_7 = WRK.Text_10A_USR;

// WRK.Number Value - 7 = CVTVAR(WRK.Text USR 7)
WRK.Number_Value_7 = CVTVAR(WRK.Text_USR_7);

// CUR.Req Delivery Date = WRK.Number Value - 7
CUR.Req_Delivery_Date = WRK.Number_Value_7;

//?** Retrieve information from Order Header
EXECUTE FUNCTION(RTV Ord Info by PO    RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2028790;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(CUR.Customer_Purchase_Order_#);
PARAMETER(CUR.Scheduled_Ship_Date_USR);
PARAMETER(CUR.Order_Value_Total);
PARAMETER(CUR.Order_Weight_Total);
PARAMETER(CUR.Load_ID);
PARAMETER(WRK.Order_Requires_Review);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT Exp Upld Ord Dtl   PO
EXECUTE FUNCTION(PRT Exp Upld Ord Dtl   PO) TYPE(PRTOBJ);
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(CUR.Customer_Purchase_Order_#);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level totals

// SUPPRESSED PRINT Customer Purchase Order # totals format

// SUPPRESSED PRINT Ship To Customer totals format

// SUPPRESSED PRINT Company Number totals format

