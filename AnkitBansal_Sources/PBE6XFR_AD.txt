// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBE6XFR
// ?Date: 14.08.2025 Time: 03:47:42
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?E3796 JJH 03/02/15 - Recompiled this program becuase internal
//? changes were made in: Crt PS ProdItemSchSum0 RT - Company Item.
ENDDO;

EXECUTE FUNCTION(Crt PS ProdItemSchSum0 RT) TYPE(RTVOBJ) FILE(CABZREP)          AC2050747;
PARAMETER(PAR.Item_Category_Number_6);
PARAMETER(PAR.Item_Primal_Sched_Report);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.PSP_Prod_Run_Sequence);
PARAMETER(PAR.PSP_Report_Sequence);
PARAMETER(PAR.PSP_Report_ID);
PARAMETER(PAR.PSP_Report_Date);
PARAMETER(PAR.PSP_Report_Time);
PARAMETER(PAR.PSP_Company_Number);
PARAMETER(PAR.PSP_Production_Date);
PARAMETER(PAR.PSP_Production_Warehouse);
PARAMETER(PAR.Date_0_RGF);
PARAMETER(PAR.Date_1_RGF);
PARAMETER(PAR.Date_2_RGF);
PARAMETER(PAR.Date_3_RGF);
PARAMETER(PAR.Date_3_RGT);
{
 //?USER: Initialize routine

 //?Modifications and Comments
 DO;

 //?E3796 JJH 03/02/15 - Changed I Parm from Scheduled Ship Date to
 //? Requested Ship Date on Rtv Day0,Day1...Etc   XF - Order Detail.
 ENDDO;

 //?USER: Process Data record

 // LCL.Record Selected       USR = CND.yes
 LCL.Record_Selected_USR = 'Y';

 //?Sel information for item, Boxes and combo's and finish goods
 DO;

 //?Verify if active
 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 //?Verify if active
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Record Selected       USR = CND.no
 LCL.Record_Selected_USR = 'N';

 ENDIF;

 //?Select only if Print on Schedule = N ,
 CASE;

 // IF DB1.Print On Schedule is no
 IF DB1.Print_On_Schedule = 'N';

 //?Select only if Print on Schedule = N ,
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Record Selected       USR = CND.no
 LCL.Record_Selected_USR = 'N';

 ENDIF;

 //?Select only Finish Goods
 CASE;

 // IF DB1.Item Type Code is Finished Good
 IF DB1.Item_Type_Code = 'FG';

 //?Select only Finish Goods
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Record Selected       USR = CND.no
 LCL.Record_Selected_USR = 'N';

 ENDIF;

 //?Also boxes or combo's
 CASE;

 // IF DB1.U/M - Primary is EQ Boxes
 IF DB1.UOM_Primary = 'BX';

 // OR DB1.U/M - Primary is Combos
 OR DB1.UOM_Primary = 'CB';

 //?Also boxes or combo's
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Record Selected       USR = CND.no
 LCL.Record_Selected_USR = 'N';

 ENDIF;

 ENDDO;

 // LCL.PSP Qty Production Total = CON.*ZERO
 LCL.PSP_Qty_Production_Total = *ZERO;

 // LCL.PSP Total Pieces = CON.*ZERO
 LCL.PSP_Total_Pieces = *ZERO;

 // LCL.PSP Day 0 = CON.*ZERO
 LCL.PSP_Day_0 = *ZERO;

 // LCL.PSP Day 1 = CON.*ZERO
 LCL.PSP_Day_1 = *ZERO;

 // LCL.PSP Day 2 = CON.*ZERO
 LCL.PSP_Day_2 = *ZERO;

 // LCL.PSP Week Ending Summary = CON.*ZERO
 LCL.PSP_Week_Ending_Summary = *ZERO;

 CASE;

 // IF LCL.Record Selected       USR is yes
 IF LCL.Record_Selected_USR = 'Y';

 //?slm 09/11/13
 //?get the carlisle interface if = F - Get future days
 EXECUTE FUNCTION(Rtv PrimSchGrp Desc   RT) TYPE(RTVOBJ) FILE(PDJIREP)           AC2049064;
 PARAMETER(DB1.Company_Number);
 PARAMETER(06);
 PARAMETER(DB1.Item_Primal_Sched_Report);
 PARAMETER(LCL.Text_20_USR);
 PARAMETER(LCL.Carlisle_Interface_Usr);
 PARAMETER(LCL.Text_2_USR);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  EXECUTE FUNCTION(Rtv Description       RT) TYPE(RTVOBJ) FILE(POBHREP)           AC1631475;
  PARAMETER(DB1.Item_Category_Type_Number);
  PARAMETER(DB1.Item_Category_Type_Code);
  PARAMETER(PAR.Item_Category_Type_Desc);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

 }

 EXECUTE FUNCTION(Rtv Prod Dept Name    RT) TYPE(RTVOBJ) FILE(PDI5REP)           AC1286709;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Department_Code);
 PARAMETER(LCL.Department_Description);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // WRK.PSP Item Description = DB1.Description Line One
 WRK.PSO_Item_Description = DB1.Description_Line_One;

 EXECUTE FUNCTION(RTV BOX ID FOR ITEM    RT) TYPE(RTVOBJ) FILE(PDIOREP)          AC1396535;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(WRK.Box_iD);
 PARAMETER(NLL.Unit_Weight);
 PARAMETER(WRK.Box_Description);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  // WRK.Unit Weight = CON.*ZERO
  WRK.Unit_Weight = *ZERO;

  EXECUTE FUNCTION(RTV Item Type & PckCD  RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1396536;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Component_Item_Code);
  PARAMETER(WRK.Description_Line_One);
  PARAMETER(WRK.Unit_Weight);
  PARAMETER(WRK.Item_Type_Code);
  PARAMETER(PAR.Package_Type_Code);
  PARAMETER(WRK.Pallet_Tare_Weight);
  PARAMETER(WRK.Misc_Tare_Weight);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF PAR.Package Type Code is Box
  IF PAR.Package_Type_Code = 'B';

  // PAR.Box Description = WRK.Description Line One
  PAR.Box_Description = WRK.Description_Line_One;

  // PAR.Unit Weight = WRK.Unit Weight
  PAR.Unit_Weight = WRK.Unit_Weight;

  // PAR.Box iD = DB1.Component Item Code * CON.1 *
  PAR.Box_iD = DB1.Component_Item_Code * 1;

  QUIT;

  ENDIF;

 }

 EXECUTE FUNCTION(RTV Itm Bag Code      RT) TYPE(RTVOBJ) FILE(POAZCPP)           AC1790992;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(LCL.Packaging_Item_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 EXECUTE FUNCTION(RTV Packaging Item    RT) TYPE(RTVOBJ) FILE(POARREP)           AC1602514;
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Packaging_Item_Code);
 PARAMETER(LCL.Pckg_Item_Description);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Place this in the PSP consumed item
 // Call program Rtv First Consumed Itm XF.
 CALL PROGRAM(Rtv First Consumed Itm XF) ('POP1XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(LCL.Consumed_Item_Code);

 //?If a item is not found in the SUMMARY file then we
 //?need to create a record with zero totals
 //?The following routine will Create record if not found
 //?slm 09/11/13
 // LCL.PSP Day 0 = CON.*ZERO
 LCL.PSP_Day_0 = *ZERO;

 // LCL.PSP Day 1 = CON.*ZERO
 LCL.PSP_Day_1 = *ZERO;

 // LCL.PSP Day 2 = CON.*ZERO
 LCL.PSP_Day_2 = *ZERO;

 // LCL.PSP Week Ending Summary = CON.*ZERO
 LCL.PSP_Week_Ending_Summary = *ZERO;

 CASE;

 // IF DB1.U/M - Primary is EQ Boxes
 IF DB1.UOM_Primary = 'BX';

 // AND LCL.Carlisle Interface Usr is Intr/Future Qty(Carlisle)
 AND LCL.Carlisle_Interface_Usr = 'F';

 //?slm 09/11/13
 //?Only on Boxes go get day 0, day 1, 2 Wk summary if
 //?this primal report is interface to Carlisle = 'F' FOR
 //?future days
 //?E3796 JJH 03/02/15 - Changed I Parm from Scheduled Ship Date to
 //? Requested Ship Date
 // Call program Rtv Day0,Day1...Etc   XF.
 CALL PROGRAM(Rtv Day0,Day1...Etc   XF) ('PBJ0XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(PAR.PSP_Production_Warehouse);
 PARAMETER(PAR.Date_0_RGF);
 PARAMETER(PAR.Date_0_RGF);
 PARAMETER(PAR.Date_1_RGF);
 PARAMETER(PAR.Date_2_RGF);
 PARAMETER(PAR.Date_3_RGF);
 PARAMETER(PAR.Date_3_RGT);
 PARAMETER(LCL.PSP_Day_0);
 PARAMETER(LCL.PSP_Day_1);
 PARAMETER(LCL.PSP_Day_2);
 PARAMETER(LCL.PSP_Week_Ending_Summary);

 ENDIF;

 //?slm 11/12/13
 //?PSP DAY 0
 CASE;

 // IF LCL.PSP Day 0 is LT Zero
 IF LCL.PSP_Day_0 < *ZERO;

 // LCL.PSP Day 0 = CON.*ZERO
 LCL.PSP_Day_0 = *ZERO;

 ENDIF;

 //?PSP DAY 1
 CASE;

 // IF LCL.PSP Day 1 is LT Zero
 IF LCL.PSP_Day_1 < *ZERO;

 // LCL.PSP Day 1 = CON.*ZERO
 LCL.PSP_Day_1 = *ZERO;

 ENDIF;

 //?PSP DAY 2
 CASE;

 // IF LCL.PSP Day 2 is LT Zero
 IF LCL.PSP_Day_2 < *ZERO;

 // LCL.PSP Day 2 = CON.*ZERO
 LCL.PSP_Day_2 = *ZERO;

 ENDIF;

 //?Weekend total zero out if negative
 CASE;

 // IF LCL.PSP Week Ending Summary is LT Zero
 IF LCL.PSP_Week_Ending_Summary < *ZERO;

 // LCL.PSP Week Ending Summary = CON.*ZERO
 LCL.PSP_Week_Ending_Summary = *ZERO;

 ENDIF;

 EXECUTE FUNCTION(Rtv Ps Prod Item Sch SRT) TYPE(RTVOBJ) FILE(PBAHCPP)           AC2050755;
 PARAMETER(PAR.PSP_Prod_Run_Sequence);
 PARAMETER(DB1.Item_Primal_Sched_Report);
 PARAMETER(PAR.PSP_Report_Sequence);
 PARAMETER(PAR.PSP_Report_ID);
 PARAMETER(PAR.PSP_Report_Date);
 PARAMETER(PAR.PSP_Report_Time);
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.PSP_Production_Date);
 PARAMETER(PAR.PSP_Production_Warehouse);
 PARAMETER(DB1.Department_Code);
 PARAMETER(LCL.Department_Description);
 PARAMETER(LCL.Consumed_Item_Code);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Description_Line_One);
 PARAMETER(LCL.PSP_Qty_Production_Total);
 PARAMETER(DB1.Piece_Count_Item);
 PARAMETER(DB1.Pieces_Per_Bag);
 PARAMETER(DB1.Bags_Per_Unit);
 PARAMETER(LCL.PSP_Total_Pieces);
 PARAMETER(LCL.Packaging_Item_Code);
 PARAMETER(DB1.UOM_Primary);
 PARAMETER(LCL.Box_Description);
 PARAMETER(LCL.Pckg_Item_Description);
 PARAMETER(LCL.PSP_Comment_Line_1);
 PARAMETER(LCL.PSP_Text);
 PARAMETER(DB1.Primal_Group_Code);
 PARAMETER(DB1.WIP_Item_Code);
 PARAMETER(LCL.PSP_Shift_Priority_Code);
 PARAMETER(LCL.PSP_Pieces_Schedule);
 PARAMETER(DB1.Label_Type);
 PARAMETER(LCL.PSP_Day_0);
 PARAMETER(LCL.PSP_Day_1);
 PARAMETER(LCL.PSP_Day_2);
 PARAMETER(LCL.PSP_Week_Ending_Summary);
 {
  //?USER: Processing if Data record not found

  //?Since a record was not found then create a zero record
  // PAR.PSP Report Sequence = PAR.PSP Report Sequence + CON.1
  PAR.PSP_Report_Sequence = PAR.PSP_Report_Sequence + 1;

  EXECUTE FUNCTION(Crt PS Prod Item Sch SCR) TYPE(CRTOBJ) FILE(PBAHCPP)           AC2036103;
  PARAMETER(PAR.PSP_Prod_Run_Sequence);
  PARAMETER(PAR.PSP_Primal_Group_Report);
  PARAMETER(PAR.PSP_Report_Sequence);
  PARAMETER(PAR.PSP_Report_ID);
  PARAMETER(PAR.PSP_Report_Date);
  PARAMETER(PAR.PSP_Report_Time);
  PARAMETER(PAR.PSP_Company_Number);
  PARAMETER(PAR.PSP_Production_Date);
  PARAMETER(PAR.PSP_Production_Warehouse);
  PARAMETER(PAR.PSP_Department_Code);
  PARAMETER(PAR.PSP_Department_Desc);
  PARAMETER(PAR.PSP_Consumed_Item_Code);
  PARAMETER(PAR.PSP_Item_Code);
  PARAMETER(PAR.PSO_Item_Description);
  PARAMETER(PAR.PSP_Qty_Production_Total);
  PARAMETER(PAR.PSP_Piece_Count_Item);
  PARAMETER(PAR.PSP_Pieces_Per_Bag);
  PARAMETER(PAR.PSP_Bags_Per_Unit);
  PARAMETER(PAR.PSP_Total_Pieces);
  PARAMETER(PAR.PSP_Packaging_Item_Code);
  PARAMETER(PAR.PSP_UOM_Primary);
  PARAMETER(PAR.PSP_BOX_Desription);
  PARAMETER(PAR.PSP_Packaging_Item_Desc);
  PARAMETER(PAR.PSP_Comment_Line_1);
  PARAMETER(PAR.PSP_Text);
  PARAMETER(PAR.PSP_Primal_Group_Code);
  PARAMETER('R');
  PARAMETER(PAR.PSP_WIP_Item_Code);
  PARAMETER(PAR.PSP_Shift_Priority_Code);
  PARAMETER(PAR.PSP_Pieces_Schedule);
  PARAMETER(PAR.PSP_Label_Type);
  PARAMETER(PAR.PSP_Day_0);
  PARAMETER(PAR.PSP_Day_1);
  PARAMETER(PAR.PSP_Day_2);
  PARAMETER(PAR.PSP_Week_Ending_Summary);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Create_Date);
   PARAMETER(DB1.Create_Time);
   PARAMETER(DB1.Create_User);
   PARAMETER(DB1.Create_Program);
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    //?*** Set RECORD STATUS field. ***
    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    //?*** Set CREATE fields. ***
    // PAR.Create Date = JOB.*Job date
    PAR.Create_Date = JOB.*Job_date;

    // PAR.Create Time = JOB.*Job time
    PAR.Create_Time = JOB.*Job_time;

    // PAR.Create User = JOB.*USER
    PAR.Create_User = JOB.*USER;

    // PAR.Create Program = JOB.*PROGRAM
    PAR.Create_Program = JOB.*PROGRAM;

    //?*** Set CHANGE fields. ***
    // PAR.Change Date = CON.*ZERO
    PAR.Change_Date = *ZERO;

    // PAR.Change Time = CON.*ZERO
    PAR.Change_Time = *ZERO;

    // PAR.Change User = CON.*BLANK
    PAR.Change_User = *BLANK;

    // PAR.Change Program = CON.*BLANK
    PAR.Change_Program = *BLANK;

   }

  }

  //?USER: Process Data record

  //?Need to decide if we want to do anything here or not
  QUIT;

 }

 ENDIF;

}


