      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     Safedata: Write Group Deaths/Reported Weekly Activity
      *              Receiving File to Editing File
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     01/22/01
      *
      *              We receive a single-field record from Safedata.
      *
      *              As of September 2002, we will write to 2 different editing files:
      *                   1) the original 'group deaths' editing file and
      *                   2) a new 'reported weekly activity' editing file
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/08/01  LeAnne Fedor
      *           Added new field 'destroyed' head to Safedata receiving file.
      *
      *           Also, we will no longer use the building/room sent back up by
      *           Safedata. We will populate building/room fields in the edit
      *           program using the group. But, to keep the goofy 'tilda' logic
      *           understandable, I have left the building/room subroutines and
      *           simply blanked out the retrieved values.
      *
      * 10/11/01  LeAnne Fedor
      *           Temporarily commented out changes above....the users aren't ready
      *           yet.
      *
      * 11/15/01  LeAnne Fedor
      *           User's are ready now...reinstated changes of 10/08/01.
      *
      * 09/30/02  LeAnne Fedor
      *           Got rid of ALL the funky 'tilda' stuff!  Safedata will now send the full
      *           field lengths with leading zeros.
      *
      *           We will now write to a second 'editing' file for the 'reported weekly
      *           activity' data-----we continue to write to the 'group death' editing file as
      *           always for the 'death' info.
      *
      *           Removed:    Building
      *                       Room
      *
      *           Added new 'reported weekly activity' fields:
      *                    beginning inventory head
      *                    transfer in head
      *                    transfer out head
      *                    cull sale head
      *                    market/feeder pig sale head
      *                    ending inventory head
      *
      * 04/06/10  LeAnne Ramsey
      *           We did not have any delete logic over the editing files; they were
      *           getting very large. So, added delete logic over HSP264 and HSP269.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp263    if   e           k disk
      *  Safedata: Group deaths receiving file
      *
      *
     Fhsp264    uf a e           k disk
      *  Safedata: Group deaths editing file
      *
      *
     Fhsp269    uf a e           k disk
      *  Safedata: Reported weekly activity editing file
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields
      *
     D wkwedt          s                   like(u4wedt)
     D wkfscd          s                   like(u4fscd)
     D wkhgcd          s                   like(u4hgcd)
      *
     D wkhd            s                   like(u4kdhd)
     D wkkdhd          s                   like(u4kdhd)
     D wkdshd          s                   like(u4kdhd)
      *
     D wklb            s                   like(u4kdlb)
     D wkkdlb          s                   like(u4kdlb)
     D wkdslb          s                   like(u4kdlb)
     D wkperhdlb       s             15  9
      *
     D wkdldt          s                   like(u4uldt)
     D wkuldt          s                   like(u4uldt)
     D wkultm          s                   like(u4ultm)
      *
     D wkbginhd        s                   like(u5bginhd)
     D wktihd          s                   like(u5tihd)
     D wktohd          s                   like(u5tohd)
     D wkcuhd          s                   like(u5cuhd)
     D wkmkhd          s                   like(u5mkhd)
      *
      * Workfields for date manipulation
      *
     D wkmdy           s              8  0
     D wkcymdiso       s               D   datfmt(*iso)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *
      *---------------------------------------------------------------
      * Break out single-field input record into individual fields
      *---------------------------------------------------------------
      *
     D inputrec        ds
     D   allfields                   71
      *
     D   xxfscd                       5    overlay(allfields:1)
     D   xxhgcd                       7    overlay(allfields:6)
     D   xxdt                         8    overlay(allfields:13)
      *
     D   xxkdhd                       5    overlay(allfields:21)
     D   xxdshd                       5    overlay(allfields:26)
     D   xxlb                         5    overlay(allfields:31)
      *
     D   xxbginhd                     5    overlay(allfields:36)
     D   xxtihd                       5    overlay(allfields:41)
     D   xxtohd                       5    overlay(allfields:46)
     D   xxcuhd                       5    overlay(allfields:51)
     D   xxmkhd                       5    overlay(allfields:56)
     D   xxeninhd                     5    overlay(allfields:61)
      *
     D   xxsdino                      6    overlay(allfields:66)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Read each record in the Receiving file.
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsp263                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   move(p)   u3field       inputrec
      *
      * Clear all accumulators and workfields
      *
     C                   exsr      $clear
      *
      * Test all numeric fields for numbers; move receiving fields to
      * workfields.
     C                   exsr      $edit
      *
      *
      * Only write 'Group death' editing record(s) if there is head.
      *
     C                   if        wkhd <> 0
     C                   exsr      $write264
     C                   endif
      *
      * Always write a 'reported weekly activity' record.
      *
     C                   exsr      $write269
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Test all fields for numerics
      *---------------------------------------------------------------
      *
     C     $edit         begsr
      *
      * Farm site
     C                   testn                   xxfscd               92
     C                   if        *in92 = *on                                  If numeric
     C                   move      xxfscd        wkfscd
     C                   else
     C                   z-add     0             wkfscd
     C                   endif                                                  If numeric
      *
      *
      * Hog group
     C                   move      xxhgcd        wkhgcd
      *
      * Date
     C                   testn                   xxdt                 92
     C                   if        *in92 = *on                                  If numeric
     C                   movel     xxdt          wkwedt
     C                   else
     C                   z-add     0             wkwedt
     C                   endif                                                  If numeric
      *
      *
      * Killed/dead head
      *
     C                   testn                   xxkdhd               92
     C                   if        *in92 = *on                                  If numeric
     C                   move      xxkdhd        wkkdhd
     C                   else
     C                   z-add     0             wkkdhd
     C                   endif                                                  If numeric
      *
      * Destroyed head
     C                   testn                   xxdshd               92
     C                   if        *in92 = *on                                  If numeric
     C                   move      xxdshd        wkdshd
     C                   else
     C                   z-add     0             wkdshd
     C                   endif                                                  If numeric
      *
      * You will need total head (killed plus destroyed) to calculate
      * associated pounds.
     C                   add       wkkdhd        wkhd
     C                   add       wkdshd        wkhd
      *
      * Dead pounds
      *
     C                   testn                   xxlb                 92
     C                   if        *in92 = *on                                  If numeric
     C                   move      xxlb          wklb
     C                   else
     C                   z-add     0             wklb
     C                   endif                                                  If numeric
      *
      *
      * Begining inventory head
      *
     C                   testn                   xxbginhd             92
     C                   if        *in92 = *on                                  If numeric
     C                   move      xxbginhd      wkbginhd
     C                   else
     C                   z-add     0             wkbginhd
     C                   endif                                                  If numeric
      *
      *
      * Transfer in head
      *
     C                   testn                   xxtihd               92
     C                   if        *in92 = *on                                  If numeric
     C                   move      xxtihd        wktihd
     C                   else
     C                   z-add     0             wktihd
     C                   endif                                                  If numeric
      *
      *
      * Transfer out head
      *
     C                   testn                   xxtohd               92
     C                   if        *in92 = *on                                  If numeric
     C                   move      xxtohd        wktohd
     C                   else
     C                   z-add     0             wktohd
     C                   endif                                                  If numeric
      *
      *
      * Cull sale head
      *
     C                   testn                   xxcuhd               92
     C                   if        *in92 = *on                                  If numeric
     C                   move      xxcuhd        wkcuhd
     C                   else
     C                   z-add     0             wkcuhd
     C                   endif                                                  If numeric
      *
      *
      * Market/feeder pig sale head
      *
     C                   testn                   xxmkhd               92
     C                   if        *in92 = *on                                  If numeric
     C                   move      xxmkhd        wkmkhd
     C                   else
     C                   z-add     0             wkmkhd
     C                   endif                                                  If numeric
      *
      *
      * Ending inventory head
      *
      *    We are ignoring the value that Safedata calculates/sends...
      *    Particularly since we didn't change our receiving file to have
      *    them send the +/- sign we would need to work with this field.
      *    So, we will calculate ending inventory ourselves.
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Calculate pounds
      *---------------------------------------------------------------
      *
     C     $pounds       begsr
      *
      *
      * When destroyed head is zero, all pounds go to killed head.
      *
     C                   select
     C                   when      wkdshd = 0
     C                   z-add     wklb          wkkdlb
      *
      * When killed head is zero, all pounds go to destroyed head.
      *
     C                   when      wkkdhd = 0
     C                   z-add     wklb          wkdslb
     C                   other
      *
      * You have both 'killed' head and 'destroyed' head.
      * Calculate a) pounds per head and then b) pounds associated
      * with the head.
      *
     C                   if        wkhd <> 0
     C     wklb          div       wkhd          wkperhdlb
     C                   endif
      *
     C     wkkdhd        mult(h)   wkperhdlb     wkkdlb
     C     wklb          sub       wkkdlb        wkdslb
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write record(s) to the 'Group Death' editing file
      *---------------------------------------------------------------
      *
      * If the receiving record has zero dead/destroyed head, you will not be in this
      *    subroutine. You will not write any records to the 'group death'
      *    editing file.
      * If the record has both 'killed' head and 'destroyed' head, you will
      *    ultimately write 2 records to the 'group death' editing file.
      * If the record has only 'killed' head or only 'destroyed' head, you
      *    will write 1 record to the 'group death' editing file.
      *
     C     $write264     begsr
      *
     C                   z-add     wkfscd        u4fscd
     C                   z-add     wkwedt        u4wedt
     C                   move      wkhgcd        u4hgcd
     C                   z-add     wkuldt        u4uldt
     C                   z-add     wkultm        u4ultm
      *
      * Calculate pounds to be distributed between the 'killed' and
      * 'destroyed' records.
      *
     C                   exsr      $pounds
      *
      *
      * Write a 'killed' head record
      *
     C                   if        wkkdhd  <> 0
     C                   move      no            u4dsfl
     C                   z-add     wkkdhd        u4kdhd
     C                   z-add     wkkdlb        u4kdlb
     C                   write     u4rec
     C                   endif
      *
      *
      * Write a 'destroyed' head record
      *
     C                   if        wkdshd  <> 0
     C                   move      yes           u4dsfl
     C                   z-add     wkdshd        u4kdhd
     C                   z-add     wkdslb        u4kdlb
     C                   write     u4rec
     C                   endif
      *
     C                   clear                   u4rec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a record to the 'reported weekly activity' editing file
      *---------------------------------------------------------------
      *
      * The write in this subroutine is 1-to-1....you write 1 editing record
      * for each receiving record.
      *
     C     $write269     begsr
      *
     C                   z-add     wkwedt        u5wedt
     C                   move      wkhgcd        u5hgcd
     C                   z-add     wkfscd        u5fscd
      *
     C                   z-add     wkuldt        u5uldt
     C                   z-add     wkultm        u5ultm
      *
     C                   z-add     wkbginhd      u5bginhd
     C                   z-add     wktihd        u5tihd
     C                   z-add     wktohd        u5tohd
     C                   z-add     wkcuhd        u5cuhd
     C                   z-add     wkmkhd        u5mkhd
     C                   z-add     wkhd          u5kdhd
      *
     C                   z-add     wkbginhd      u5eninhd
     C                   add       wktihd        u5eninhd
     C                   sub       wktohd        u5eninhd
     C                   sub       wkcuhd        u5eninhd
     C                   sub       wkmkhd        u5eninhd
     C                   sub       wkhd          u5eninhd
      *
     C                   write     u5rec
     C                   clear                   u5rec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Clear all workfields/accumulators
      *---------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   z-add     0             wkfscd
     C                   move      *blank        wkhgcd
     C                   z-add     0             wkwedt
      *
     C                   z-add     0             wklb
     C                   z-add     0             wkkdlb
     C                   z-add     0             wkdslb
     C                   z-add     0             wkperhdlb
      *
     C                   z-add     0             wkhd
     C                   z-add     0             wkkdhd
     C                   z-add     0             wkdshd
      *
     C                   z-add     0             wkbginhd
     C                   z-add     0             wktihd
     C                   z-add     0             wktohd
     C                   z-add     0             wkcuhd
     C                   z-add     0             wkmkhd
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Put system date/time into work fields to use as 'upload date/time'.
      *
     C     *mdy          movel     udate         wkcymdiso
     C                   movel     wkcymdiso     wkuldt
     C                   time                    wkultm
      *
      * Calc a 'delete' date that is 180 days prior to System Date. Then, delete
      * records older than this date from the Editing files.
      *
     C     wkcymdiso     subdur    180:*days     wkcymdiso
     C                   move      wkcymdiso     wkdldt
      *
     C     *loval        setll     hsp264
     C                   dou       *in91 = *on or u4wedt > wkdldt               Do deaths
     C                   read      hsp264                                 91
     C                   if        *in91 = *off
     C                   delete    u4rec
     C                   endif
     C                   enddo                                                  Do deaths
      *
     C     *loval        setll     hsp269
     C                   dou       *in91 = *on or u5wedt > wkdldt               Do activity
     C                   read      hsp269                                 91
     C                   if        *in91 = *off
     C                   delete    u5rec
     C                   endif
     C                   enddo                                                  Do activity
      *
     C                   clear                   u4rec
     C                   clear                   u5rec
      *
     C                   endsr
      /eject
