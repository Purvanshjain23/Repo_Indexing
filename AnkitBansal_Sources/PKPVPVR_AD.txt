// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKPVPVR
// ?Date: 14.08.2025 Time: 02:52:26
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//?                      length from 5 to 7.
ENDDO;

//?USER: User defined action

CASE;

// IF DTL.@Status (Yes/No) is Yes
IF DTL.@Status_Yes_No = 'Y';

EXECUTE FUNCTION(Rtv/Chg Bol TrkSclWgh RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1214000;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER('N');
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Buy Order Detail  CH) TYPE(CHGOBJ) FILE(PKAXCPP)           AB1100531;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.BOL_Kill_Date);
 PARAMETER(DB1.BOL_Pln_Delv_Start_Time);
 PARAMETER(DB1.BOL_Pln_Delv_End_Time);
 PARAMETER(DB1.BOL_Pln_Head_Delv);
 PARAMETER(DB1.BOL_Shipped_Wgt);
 PARAMETER(DB1.BOL_Pln_Delv_Date);
 PARAMETER(DB1.BOL_Freight_UOM);
 PARAMETER(DB1.BOL_Freight_Unit_Amt);
 PARAMETER(DB1.BOL_Freight_Amt);
 PARAMETER(DB1.BOL_Freight_Allocation);
 PARAMETER(DB1.BOL_Head_Received);
 PARAMETER(DB1.BOL_Live_Wgt_Received);
 PARAMETER(DB1.BOL_Trucker_Payment_Sts);
 PARAMETER(DB1.BOL_Trucker_Check_Number);
 PARAMETER(DB1.BOL_Trucker_Check_Date);
 PARAMETER(DB1.BOL_AP_Voucher);
 PARAMETER(DB1.BOL_Trailer);
 PARAMETER(DB1.BOL_Freight_Exp_Paid_By);
 PARAMETER(DB1.BOL_Scheduled_Kill_Shift);
 PARAMETER(PAR.BOL_Truck_Scale_Weigh_Sts);
 PARAMETER(DB1.BOL_Violated_Auth_Tme_Sts);
 PARAMETER(DB1.TRK_Trucker_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


//?* 01/27/04 PKD Live Weights for Contract growers will also be
//?               Recalculated according to Jancie.
EXECUTE FUNCTION(Upd Recalc Live Wgt   RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1215804;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(1);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.TH Tattoo Number is Internal Pre-tattooed
 IF DB1.TH_Tattoo_Number >= 9100;
 AND DB1.TH_Tattoo_Number <= 9499;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.TH Hog Class Type is Not Resale
 IF DB1.TH_Hog_Class_Type = 'M'/'S';

 EXECUTE FUNCTION(Chg Recalc Live Wgt   CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1215805;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(PAR.TH_Recalc_Live_Wgt);
 ENDIF;

 ENDIF;

}


// IF *OTHERWISE
IF *OTHERWISE;

//?Set the sts per the Out/In pars
CASE;

// IF PAR.BOL OUT record found  USR is Yes
IF PAR.BOL_OUT_record_found_USR = 'Y';

// WRK.BOL Truck Scale Weigh Sts = CND.Out
WRK.BOL_Truck_Scale_Weigh_Sts = 'O';

//?Set the sts per the Out/In pars
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF PAR.BOL IN  record found  USR is Yes
IF PAR.BOL_IN_record_found_USR = 'Y';

// WRK.BOL Truck Scale Weigh Sts = CND.In
WRK.BOL_Truck_Scale_Weigh_Sts = 'I';

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.BOL Truck Scale Weigh Sts = CND.None
WRK.BOL_Truck_Scale_Weigh_Sts = *BLANK;

ENDIF;

ENDIF;

EXECUTE FUNCTION(Rtv/Chg Bol TrkSclWgh RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1214000;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(WRK.BOL_Truck_Scale_Weigh_Sts);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Buy Order Detail  CH) TYPE(CHGOBJ) FILE(PKAXCPP)           AB1100531;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.BOL_Kill_Date);
 PARAMETER(DB1.BOL_Pln_Delv_Start_Time);
 PARAMETER(DB1.BOL_Pln_Delv_End_Time);
 PARAMETER(DB1.BOL_Pln_Head_Delv);
 PARAMETER(DB1.BOL_Shipped_Wgt);
 PARAMETER(DB1.BOL_Pln_Delv_Date);
 PARAMETER(DB1.BOL_Freight_UOM);
 PARAMETER(DB1.BOL_Freight_Unit_Amt);
 PARAMETER(DB1.BOL_Freight_Amt);
 PARAMETER(DB1.BOL_Freight_Allocation);
 PARAMETER(DB1.BOL_Head_Received);
 PARAMETER(DB1.BOL_Live_Wgt_Received);
 PARAMETER(DB1.BOL_Trucker_Payment_Sts);
 PARAMETER(DB1.BOL_Trucker_Check_Number);
 PARAMETER(DB1.BOL_Trucker_Check_Date);
 PARAMETER(DB1.BOL_AP_Voucher);
 PARAMETER(DB1.BOL_Trailer);
 PARAMETER(DB1.BOL_Freight_Exp_Paid_By);
 PARAMETER(DB1.BOL_Scheduled_Kill_Shift);
 PARAMETER(PAR.BOL_Truck_Scale_Weigh_Sts);
 PARAMETER(DB1.BOL_Violated_Auth_Tme_Sts);
 PARAMETER(DB1.TRK_Trucker_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


ENDIF;

