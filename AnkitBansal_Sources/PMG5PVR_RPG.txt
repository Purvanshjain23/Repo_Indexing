     H/TITLE PMT Crt Cmp from JRD   PV Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Prompt & validate record
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISSZURN
     H* Date          : 04/28/09  Time  : 16:05:32
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPMG5PVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: PMT Crt Cmp from JRD   PV Prompt & validate record
      *
     FOMF0CPLAIF  E           K        DISK
      * RSQ : Commodity Mrkt Price      Mkt Date/Comm Mkt Code
      *
     FJRINPRL1IF  E           K        DISK
      * RTV : JRD Inv Price Master      Retrieval index
      *
     FOMBYREL1IF  E           K        DISK
      * RTV : Item Default              Retrieval index
      *
     FOMBYRELDIF  E           K        DISK
      * RSQ : Item Default              SBD Equiv Item
      *
     FOMFYREL0IF  E           K        DISK
      * RTV : Commodity Markets         Retrieval index
      *
     FOMF0CPL5IF  E           K        DISK
      * RSQ : Commodity Mrkt Price      Mkt CD/Mkt Dt
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FOMF0CPL0UF  E           K        DISK                      A
      * UPD : Commodity Mrkt Price      Update index
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
     E                    UCT        40  1               CENTER TABLE
      * DETAIL Screen: Field position and name array
     E                    W0BEG   3 003  5 0A
     E                    W0END   3 003  5 0A
     E                    W0NAM   3 003 10
     E                    YDOW        7  1               *Days of week
     I@F0CPJ6
      * Commodity Mrkt Price      Mkt Date/Comm Mkt Code
      * Renamed input format fields
     I              F0LQCD                          WALQCD
     I              F0LRCD                          WALRCD
     I              F0EQDT                          WAEQDT
     I              F0A5PR                          WAA5PR
     I              F0B8PR                          WAB8PR
     I              F0UVST                          WAUVST
     I              F0UWST                          WAUWST
     I              F0UXST                          WAUXST
     I              F0VSST                          WAVSST
     I              F0AATM                          WAAATM
     I              F0AYNA                          WAAYNA
     I              F0A0NA                          WAA0NA
     I              F0AXDT                          WAAXDT
      *
     I@F0CPDJ
      * Commodity Mrkt Price      Update index
      * Renamed input format fields
     I              F0LQCD                          WBLQCD
     I              F0LRCD                          WBLRCD
     I              F0EQDT                          WBEQDT
     I              F0A5PR                          WBA5PR
     I              F0B8PR                          WBB8PR
     I              F0UVST                          WBUVST
     I              F0UWST                          WBUWST
     I              F0UXST                          WBUXST
     I              F0VSST                          WBVSST
     I              F0AATM                          WBAATM
     I              F0AYNA                          WBAYNA
     I              F0A0NA                          WBA0NA
     I              F0AXDT                          WBAXDT
      *
     I@INPRJ4
      * JRD Inv Price Master      Retrieval index
      * Renamed input format fields
     I              DJGTNY                          WCGTNY
     I              DJHHVL                          WCHHVL
     I              DJHIVL                          WCHIVL
     I              DJHJVL                          WCHJVL
     I              DJHKVL                          WCHKVL
     I              DJHLVL                          WCHLVL
     I              DJHMVL                          WCHMVL
     I              DJHNVL                          WCHNVL
     I              DJERTX                          WCERTX
     I              DJHOVL                          WCHOVL
     I              DJHPVL                          WCHPVL
      *
     I@BYREA1
      * Item Default              Retrieval index
      * Renamed input format fields
     I              BYHGCD                          WDHGCD
     I              BYAVNA                          WDAVNA
     I              BYAWNA                          WDAWNA
     I              BYL7NA                          WDL7NA
     I              BYL8NA                          WDL8NA
     I              BYL6NA                          WDL6NA
     I              BYMFNA                          WDMFNA
     I              BYHHCD                          WDHHCD
     I              BYAWPC                          WDAWPC
     I              BYLXST                          WDLXST
     I              BYLGCD                          WDLGCD
     I              BYAXPC                          WDAXPC
     I              BYLYST                          WDLYST
     I              BYLHCD                          WDLHCD
     I              BYLICD                          WDLICD
     I              BYAIWG                          WDAIWG
     I              BYHICD                          WDHICD
     I              BYRBCD                          WDRBCD
     I              BYFZST                          WDFZST
     I              BYAVST                          WDAVST
     I              BYCZWG                          WDCZWG
     I              BYC0WG                          WDC0WG
     I              BYURTN                          WDURTN
     I              BYACC8                          WDACC8
     I              BYRINB                          WDRINB
     I              BYRHNB                          WDRHNB
     I              BYRGNB                          WDRGNB
     I              BYLNCD                          WDLNCD
     I              BYTFNB                          WDTFNB
     I              BYN0CD                          WDN0CD
     I              BYX4ST                          WDX4ST
     I              BYCHTM                          WDCHTM
     I              BYQZCD                          WDQZCD
     I              BYXWST                          WDXWST
     I              BYXXST                          WDXXST
     I              BYVMST                          WDVMST
     I              BYSWGH                          WDSWGH
     I              BYPPHE                          WDPPHE
     I              BYLRCD                          WDLRCD
     I              BYSFNB                          WDSFNB
     I              BYA3WG                          WDA3WG
     I              BYSJNB                          WDSJNB
     I              BYLLCD                          WDLLCD
     I              BYLMCD                          WDLMCD
     I              BYP3ST                          WDP3ST
     I              BYSKNB                          WDSKNB
     I              BYSLNB                          WDSLNB
     I              BYSMNB                          WDSMNB
     I              BYP4ST                          WDP4ST
     I              BYCFNB                          WDCFNB
     I              BYCGNB                          WDCGNB
     I              BYILNB                          WDILNB
     I              BYCHNB                          WDCHNB
     I              BYCINB                          WDCINB
     I              BYCJNB                          WDCJNB
     I              BYCMNB                          WDCMNB
     I              BYCNNB                          WDCNNB
     I              BYCRNB                          WDCRNB
     I              BYCSNB                          WDCSNB
     I              BYCVNB                          WDCVNB
     I              BYCWNB                          WDCWNB
     I              BYCXNB                          WDCXNB
     I              BYCZNB                          WDCZNB
     I              BYC0NB                          WDC0NB
     I              BYN1CD                          WDN1CD
     I              BYB4NB                          WDB4NB
     I              BYX5ST                          WDX5ST
     I              BYX6ST                          WDX6ST
     I              BYX7ST                          WDX7ST
     I              BYTMVA                          WDTMVA
     I              BYTNVA                          WDTNVA
     I              BYBLPR                          WDBLPR
     I              BYBMPR                          WDBMPR
     I              BYU9ST                          WDU9ST
     I              BYCMCO                          WDCMCO
     I              BYQ1CD                          WDQ1CD
     I              BYAIC3                          WDAIC3
     I              BYQ8CD                          WDQ8CD
     I              BYR3CD                          WDR3CD
     I              BYSDCD                          WDSDCD
     I              BYICN1                          WDICN1
     I              BYSVCD                          WDSVCD
     I              BYICN2                          WDICN2
     I              BYSWCD                          WDSWCD
     I              BYV2NB                          WDV2NB
     I              BYSXCD                          WDSXCD
     I              BYITCN                          WDITCN
     I              BYSYCD                          WDSYCD
     I              BYITC5                          WDITC5
     I              BYSZCD                          WDSZCD
     I              BYICN6                          WDICN6
     I              BYS0CD                          WDS0CD
     I              BYICN7                          WDICN7
     I              BYS1CD                          WDS1CD
     I              BYICN8                          WDICN8
     I              BYS2CD                          WDS2CD
     I              BYICN9                          WDICN9
     I              BYS3CD                          WDS3CD
     I              BYICN0                          WDICN0
     I              BYS4CD                          WDS4CD
     I              BYB5NB                          WDB5NB
     I              BYXRCD                          WDXRCD
     I              BYPCCT                          WDPCCT
     I              BYBDNB                          WDBDNB
     I              BYBJNB                          WDBJNB
     I              BYSUST                          WDSUST
     I              BYSVST                          WDSVST
     I              BYSYST                          WDSYST
     I              BYSZST                          WDSZST
     I              BYS1ST                          WDS1ST
     I              BYXTCD                          WDXTCD
     I              BYXUCD                          WDXUCD
     I              BYF5WG                          WDF5WG
     I              BYF6WG                          WDF6WG
     I              BYF7WG                          WDF7WG
     I              BYBLNB                          WDBLNB
     I              BYBNNB                          WDBNNB
     I              BYS2ST                          WDS2ST
     I              BYS4ST                          WDS4ST
     I              BYS5ST                          WDS5ST
     I              BYS6ST                          WDS6ST
     I              BYS8ST                          WDS8ST
     I              BYS9ST                          WDS9ST
     I              BYTCST                          WDTCST
     I              BYTDST                          WDTDST
     I              BYUVST                          WDUVST
     I              BYUWST                          WDUWST
     I              BYUXST                          WDUXST
     I              BYVSST                          WDVSST
     I              BYAHTM                          WDAHTM
     I              BYBEVN                          WDBEVN
     I              BYBFVN                          WDBFVN
     I              BYEKDT                          WDEKDT
      *
     I@BYRENH
      * Item Default              SBD Equiv Item
      * Renamed input format fields
     I              BYHGCD                          WEHGCD
     I              BYAVNA                          WEAVNA
     I              BYAWNA                          WEAWNA
     I              BYL7NA                          WEL7NA
     I              BYL8NA                          WEL8NA
     I              BYL6NA                          WEL6NA
     I              BYMFNA                          WEMFNA
     I              BYHHCD                          WEHHCD
     I              BYAWPC                          WEAWPC
     I              BYLXST                          WELXST
     I              BYLGCD                          WELGCD
     I              BYAXPC                          WEAXPC
     I              BYLYST                          WELYST
     I              BYLHCD                          WELHCD
     I              BYLICD                          WELICD
     I              BYAIWG                          WEAIWG
     I              BYHICD                          WEHICD
     I              BYRBCD                          WERBCD
     I              BYFZST                          WEFZST
     I              BYAVST                          WEAVST
     I              BYCZWG                          WECZWG
     I              BYC0WG                          WEC0WG
     I              BYURTN                          WEURTN
     I              BYACC8                          WEACC8
     I              BYRINB                          WERINB
     I              BYRHNB                          WERHNB
     I              BYRGNB                          WERGNB
     I              BYLNCD                          WELNCD
     I              BYTFNB                          WETFNB
     I              BYN0CD                          WEN0CD
     I              BYX4ST                          WEX4ST
     I              BYCHTM                          WECHTM
     I              BYQZCD                          WEQZCD
     I              BYXWST                          WEXWST
     I              BYXXST                          WEXXST
     I              BYVMST                          WEVMST
     I              BYSWGH                          WESWGH
     I              BYPPHE                          WEPPHE
     I              BYLRCD                          WELRCD
     I              BYSFNB                          WESFNB
     I              BYA3WG                          WEA3WG
     I              BYSJNB                          WESJNB
     I              BYLLCD                          WELLCD
     I              BYLMCD                          WELMCD
     I              BYP3ST                          WEP3ST
     I              BYSKNB                          WESKNB
     I              BYSLNB                          WESLNB
     I              BYSMNB                          WESMNB
     I              BYP4ST                          WEP4ST
     I              BYCFNB                          WECFNB
     I              BYCGNB                          WECGNB
     I              BYILNB                          WEILNB
     I              BYCHNB                          WECHNB
     I              BYCINB                          WECINB
     I              BYCJNB                          WECJNB
     I              BYCMNB                          WECMNB
     I              BYCNNB                          WECNNB
     I              BYCRNB                          WECRNB
     I              BYCSNB                          WECSNB
     I              BYCVNB                          WECVNB
     I              BYCWNB                          WECWNB
     I              BYCXNB                          WECXNB
     I              BYCZNB                          WECZNB
     I              BYC0NB                          WEC0NB
     I              BYN1CD                          WEN1CD
     I              BYB4NB                          WEB4NB
     I              BYX5ST                          WEX5ST
     I              BYX6ST                          WEX6ST
     I              BYX7ST                          WEX7ST
     I              BYTMVA                          WETMVA
     I              BYTNVA                          WETNVA
     I              BYBLPR                          WEBLPR
     I              BYBMPR                          WEBMPR
     I              BYU9ST                          WEU9ST
     I              BYCMCO                          WECMCO
     I              BYQ1CD                          WEQ1CD
     I              BYAIC3                          WEAIC3
     I              BYQ8CD                          WEQ8CD
     I              BYR3CD                          WER3CD
     I              BYSDCD                          WESDCD
     I              BYICN1                          WEICN1
     I              BYSVCD                          WESVCD
     I              BYICN2                          WEICN2
     I              BYSWCD                          WESWCD
     I              BYV2NB                          WEV2NB
     I              BYSXCD                          WESXCD
     I              BYITCN                          WEITCN
     I              BYSYCD                          WESYCD
     I              BYITC5                          WEITC5
     I              BYSZCD                          WESZCD
     I              BYICN6                          WEICN6
     I              BYS0CD                          WES0CD
     I              BYICN7                          WEICN7
     I              BYS1CD                          WES1CD
     I              BYICN8                          WEICN8
     I              BYS2CD                          WES2CD
     I              BYICN9                          WEICN9
     I              BYS3CD                          WES3CD
     I              BYICN0                          WEICN0
     I              BYS4CD                          WES4CD
     I              BYB5NB                          WEB5NB
     I              BYXRCD                          WEXRCD
     I              BYPCCT                          WEPCCT
     I              BYBDNB                          WEBDNB
     I              BYBJNB                          WEBJNB
     I              BYSUST                          WESUST
     I              BYSVST                          WESVST
     I              BYSYST                          WESYST
     I              BYSZST                          WESZST
     I              BYS1ST                          WES1ST
     I              BYXTCD                          WEXTCD
     I              BYXUCD                          WEXUCD
     I              BYF5WG                          WEF5WG
     I              BYF6WG                          WEF6WG
     I              BYF7WG                          WEF7WG
     I              BYBLNB                          WEBLNB
     I              BYBNNB                          WEBNNB
     I              BYS2ST                          WES2ST
     I              BYS4ST                          WES4ST
     I              BYS5ST                          WES5ST
     I              BYS6ST                          WES6ST
     I              BYS8ST                          WES8ST
     I              BYS9ST                          WES9ST
     I              BYTCST                          WETCST
     I              BYTDST                          WETDST
     I              BYUVST                          WEUVST
     I              BYUWST                          WEUWST
     I              BYUXST                          WEUXST
     I              BYVSST                          WEVSST
     I              BYAHTM                          WEAHTM
     I              BYBEVN                          WEBEVN
     I              BYBFVN                          WEBFVN
     I              BYEKDT                          WEEKDT
      *
     I@FYREDK
      * Commodity Markets         Retrieval index
      * Renamed input format fields
     I              FYLQCD                          WFLQCD
     I              FYJ3NA                          WFJ3NA
     I              FYUVST                          WFUVST
     I              FYUWST                          WFUWST
     I              FYUXST                          WFUXST
     I              FYVSST                          WFVSST
     I              FYAATM                          WFAATM
     I              FYAYNA                          WFAYNA
     I              FYA0NA                          WFA0NA
     I              FYAXDT                          WFAXDT
      *
     I@F0CPQ0
      * Commodity Mrkt Price      Mkt CD/Mkt Dt
      * Renamed input format fields
     I              F0LQCD                          WGLQCD
     I              F0LRCD                          WGLRCD
     I              F0EQDT                          WGEQDT
     I              F0A5PR                          WGA5PR
     I              F0B8PR                          WGB8PR
     I              F0UVST                          WGUVST
     I              F0UWST                          WGUWST
     I              F0UXST                          WGUXST
     I              F0VSST                          WGVSST
     I              F0AATM                          WGAATM
     I              F0AYNA                          WGAYNA
     I              F0A0NA                          WGA0NA
     I              F0AXDT                          WGAXDT
      *
     I@DNRESF
      * Application               RSQ Application Code
      * Renamed input format fields
     I              DNDNCD                          WHDNCD
     I              DNAUNA                          WHAUNA
     I              DNVKST                          WHVKST
     I              DNRSCD                          WHRSCD
     I              DNUVST                          WHUVST
     I              DNUWST                          WHUWST
     I              DNUXST                          WHUXST
     I              DNAATM                          WHAATM
     I              DNAYNA                          WHAYNA
     I              DNA0NA                          WHA0NA
     I              DNAXDT                          WHAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IQOMF01    E DSOMF0CPL0
      * UPD : Commodity Mrkt Price      Update index
      * Renamed input format fields
     I              F0LQCD                          WBLQCD
     I              F0LRCD                          WBLRCD
     I              F0EQDT                          WBEQDT
     I              F0A5PR                          WBA5PR
     I              F0B8PR                          WBB8PR
     I              F0UVST                          WBUVST
     I              F0UWST                          WBUWST
     I              F0UXST                          WBUXST
     I              F0VSST                          WBVSST
     I              F0AATM                          WBAATM
     I              F0AYNA                          WBAYNA
     I              F0A0NA                          WBA0NA
     I              F0AXDT                          WBAXDT
      *
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Commodity Markets
      * N : MAP Commodity Market Desc
     I                                        1  30 P1J3NA
     IP2PARM      DS
      * N : MAP Commodity Market Code USR
     I                                        1   3 P2TMCD
      * Submit job processing data structures.
     I#SRQS       DS                           3000
     I                                        1   1 #SDMY1
     I#SSTR       DS                           3000
     I                                        1   1 #SDMY2
     I#SWRK       DS                           3000
     I                                        1   1 #SDMY3
     I#SMRG       DS                            256
     I                                        1   1 #SDMY4
     I            DS
     I I            'CMD(CALL PGM('           1  13 #SCLL
     I I            'PARM('                  14  18 #SPRM
     I I            ')'                      19  19 #SPRN
     I I            '          '             20  29 #SPRG
      * Submit job command strings.
     I            DS
     I I            'SBMJOB     JOB(BLDDM-    1 256 #S0001
     I              'PRC) JOBD(*USRPRF)  '
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Commodity Market not fnd'
      * Commodity Market Code
     I                                        1   3 ZA0001
      * Message data for 'Date => Job Date'
      * @Date - ATR
     I                                    P   1   40ZA0002
      * Job Date
     I                                    P   5   80ZA0003
      * Message data for 'Date not Sunday'
      * Requested Ship Date
     I                                    P   1   40ZA0004
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPMCF
      * Quit if not confirmed
     C           *IN99     CABEQ'1'       DAEXIT
      * USER: User defined action
      * CASE: DTL.*CMD key is CF11
     C           *IN11     IFEQ '1'                        *IF
      * Delete function
      * DLT OM Commod Mrkt/Prc RT - Commodity Mrkt Price  * 
     C                     EXSR SARVGN
     C                     MOVEL'Y'       YL0001           Post Flag USR
     C                     ELSE
      * CASE: *OTHERWISE
      * Crt JRD InvPrc/MktPrc  RT - JRD Inventory Price Maste  * 
     C                     EXSR SCRVGN
     C                     MOVEL'Y'       YL0001           Post Flag USR
     C                     END                             *FI
      * If F11 to delete then clear workfile
      * CASE: DTL.*CMD key is CF11
     C           *IN11     IFEQ '1'                        *IF
      * Clr WF Sls/Brkr file  CL - WF Sales/Broker Pricing  * 
     C                     CALL 'PNHIUPC'              90  Clr WF Sls/Brkr
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNHIUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * SBMJOB: Bld WF Sls/Brkr file  CL - WF Sales/Broker Pricing  * 
      *
     C                     MOVEL*BLANK    W0RTN
      * Build call string for processing in batch.
     C                     MOVEL#S0001    #SRQS     P
     C           #SRQS     CAT  #SCLL:1   #SRQS            Call command
     C                     MOVEL'PNHJUPC '#SPRG     P      Load pgm name
     C           #SRQS     CAT  #SPRG:0   #SRQS            Add pgm name
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
      * Build parameters string.
     C           #SRQS     CAT  #SPRM:1   #SRQS            Parameters
      *
     C                     Z-ADD#1EQDT    #SPAK  309       Market Price Da
     C                     MOVEL#SPAK     #SSTR     P
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'P'       #STYP   1
     C                     PARM 7         #SLEN   50
     C                     PARM 0         #SDEC   10
     C                     PARM           #SRQS
      *
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *
     C           W0RTN     IFNE *BLANK
      * Build of submit job string ended in error.
     C                     MOVEL'Y2U0065' W0RTN
     C                     MOVEL'PNHJUPC 'W0CLPG 10 P
      * Send message '*Error occured on SBMJOB'
     C                     MOVEL'Y2U0065' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     ELSE
      *
     C           W0SJO     IFNE *BLANK
      * Merge variable submit job overrides.
     C                     CALL 'Y2MGRQR'              90  *
     C                     PARM #SRQS     #SWRK
     C                     PARM W0SJO     #SMRG
     C  N90                MOVEL#SWRK     #SRQS     P
     C                     MOVE *BLANK    W0SJO
     C                     END
      * Submit request.
     C                     CALL 'Y2CMEXC'              90  *
     C                     PARM           #SRQS
     C                     PARM 3000      #SRQL  155
     C                     PARM           W0JVN  10
     C                     PARM           W0JUN  10
     C                     PARM           W0JNB   6
     C                     END
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNHJUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
     C                     END
     C                     END                             *FI
      * Exit program
     C                     EXSR ZXEXPG
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Validate Market Price Date
      * External date
     C                     Z-ADDV1EQDT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     Z-ADDXDINDT    #1EQDT
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate fields
      * PMT: Commodity Market Code
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.Commodity Market Code USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#PTMCD'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * SEL Commod. Mkts Actve SR - Commodity Markets  * 
     C                     CALL 'PDEDSRR'              90  SEL Commod. Mkt
     C                     PARM *BLANK    W0RTN   7
     C           #PTMCD    PARM #PTMCD    WQ0001  3        Commodity Marke
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDEDSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     END                             *FI
      * PMT: Market Date
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.*CMD key is CF12
      *   |- c2    : PGM.*Cursor field <IS> DTL.Market Price Date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN12     IFEQ '1'                        *IF
     C           W0CFL     IFEQ 'V1EQDT'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Select function on Market Price
      * SEL CMP Act By CmDteGrpSR - Commodity Mrkt Price  * 
     C                     CALL 'PMHESRR'              90  SEL CMP Act By
     C                     PARM *BLANK    W0RTN   7
     C           #PTMCD    PARM #PTMCD    WQ0002  3        Commodity Marke
     C           #1EQDT    PARM #1EQDT    WQ0003  70       Market Price Da
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMHESRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993132*
     C                     END
     C                     END                             *FI
      * validate commodity market
     C                     EXSR UASUBR                     validate commod
      * Validation on market Date must be greater then or equal to curren
     C                     EXSR UBSUBR                     Validation on m
      * validate commodity market Price  By Market code and date
     C                     EXSR UCSUBR                     validate commod
      * LCL.Day of Week (SYN) USR = DTL.Market Price Date *DAY OF WEEK
     C           #1EQDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0011
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0011    IFEQ 7                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Convert Market Price Date to display format
      * Convert date
     C           1000000   ADD  #1EQDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0004
      * Send message 'Date not Sunday'
     C                     MOVEL'USR2170' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     END                             *FI
     C                     END
      * Bypass ref file checks if error already detected
     C   99                GOTO DBEXIT
      * Select existing record
     C                     EXSR VACKRL
      * Commodity Market Code USR required
     C           #PTMCD    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DHPMCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Update screen time
     C                     TIME           ##TME
      * Refresh screen
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#RCDDTL1
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'CAVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     MOVEL*BLANK    #1LQCD           Commodity Marke
     C                     MOVEL*BLANK    #DSGST           USR Input 1
     C                     MOVEL*BLANK    #DW2ST           USR Active Flag
     C                     MOVEL*BLANK    #DSHST           USR Input 2
     C                     MOVEL*BLANK    #DHKST           USR Affect Sale
     C                     MOVEL*BLANK    #DFAST           USR Activity Fl
     C                     MOVEL*BLANK    #DR7CD           USR Market Code
     C                     MOVEL*BLANK    #DAUNA           Description
     C                     Z-ADD*ZERO     #DEYDT           USR Market Pric
     C                     MOVEL*BLANK    #1LRCD           Commodity Price
     C                     MOVELP2TMCD    #PTMCD           Commodity Marke
     C                     MOVELP1J3NA    #PJ3NA           Commodity Marke
     C                     Z-ADD*ZERO     #1EQDT           Market Price Da
      * Clear external version also
     C                     Z-ADD*ZERO     V1EQDT
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Market Price Date to display format
      * Convert date
     C           1000000   ADD  #1EQDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1EQDT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * DLT OM Commod Mrkt/Prc RT - Commodity Mrkt Price  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAEQDT    WQSA01           Market Price Da
     C           *LIKE     DEFN WALQCD    WQSA02           Commodity Marke
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Market Price Da
     C                     KFLD           WQSA02           Commodity Marke
      * Setup key
     C                     Z-ADD#1EQDT    WQSA01           Market Price Da
     C                     MOVEL#PTMCD    WQSA02           Commodity Marke
      * Establish starting position
     C           KRSSA     SETLL@F0CPJ6                    *
     C           KRSSA     READE@F0CPJ6                  90*
      * Data record not found
     C   90                MOVEL'USR1222' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * DLT OM Commod Mrkt/Prc DL - Commodity Mrkt Price  * 
     C                     EXSR SBDLRC
     C           KRSSA     READE@F0CPJ6                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBDLRC    BEGSR
      *================================================================
      * DLT OM Commod Mrkt/Prc DL - Commodity Mrkt Price  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @F0CPDJ
     C                     MOVELWALQCD    WBLQCD           Commodity Marke
     C                     MOVELWALRCD    WBLRCD           Commodity Price
     C                     Z-ADDWAEQDT    WBEQDT           Market Price Da
      *
     C           KLDLSB    KLIST
     C                     KFLD           WBLQCD           Commodity Marke
     C                     KFLD           WBLRCD           Commodity Price
     C                     KFLD           WBEQDT           Market Price Da
     C           KLDLSB    CHAIN@F0CPDJ              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'OMF0CPL0'MDACP
     C                     MOVEL'@F0CPDJ' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SBEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@F0CPDJ                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Crt JRD InvPrc/MktPrc  RT - JRD Inventory Price Maste  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Establish starting position
     C           *LOVAL    SETLL@INPRJ4                    *
     C                     READ @INPRJ4                  90*
      * Data record not found
     C   90                MOVEL'USR3718' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'N'       W0RSL            *Record selecte
      * Rtv Item Com Grp/Sts  RT - Item Default  * 
     C                     EXSR SDRVGN
      * CASE: LCL.Record Status is *blank
     C           YL0003    IFEQ *BLANK                     *IF
      * Rtv SBD Equiv Item    RT - Item Default  * 
     C                     EXSR SERVGN
      * CASE: LCL.Record Found USR is Record Found
     C           YL0004    IFEQ 'Y'                        *IF
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: LCL.Record Status is Active
     C           YL0003    IFEQ 'A'                        *IF
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
     C                     Z-ADDWCHJVL    YL0006           Commodity Marke
      * CASE: LCL.Commodity Market Price is Not Entered
     C           YL0006    IFEQ *ZERO                      *IF
     C                     Z-ADD.01       YL0006           Commodity Marke
     C                     END                             *FI
      * CRT OM Commod Mrkt/Prc CR - Commodity Mrkt Price  * 
     C                     EXSR SFCRRC
     C                     END                             *FI
     C                     READ @INPRJ4                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Item Com Grp/Sts  RT - Item Default  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WDHGCD           Item Code
      * Setup key
     C                     Z-ADDWCGTNY    WDHGCD           Item Code
      * Establish starting position
     C           KRSSD     CHAIN@BYREA1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1160' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0002           Commodity Price
     C                     MOVEL*BLANK    YL0003           Record Status
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWDLRCD    YL0002           Commodity Price
     C                     MOVELWDVSST    YL0003           Record Status
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv SBD Equiv Item    RT - Item Default  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WEBLNB    WQSE01           Seaboard Equiva
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           Seaboard Equiva
      * Setup key
     C                     Z-ADDWCGTNY    WQSE01           Seaboard Equiva
      * Establish starting position
     C           KRSSE     SETLL@BYRENH                    *
     C           KRSSE     READE@BYRENH                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1160' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0004           Record Found US
     C                     Z-ADD*ZERO     YL0005           Item Code
     C                     MOVEL*BLANK    YL0002           Commodity Price
     C                     MOVEL'N'       YL0004           Record Found US
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWEHGCD    YL0005           Item Code
     C                     MOVELWELRCD    YL0002           Commodity Price
     C                     MOVEL'Y'       YL0004           Record Found US
     C           KRSSE     READE@BYRENH                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCRRC    BEGSR
      *================================================================
      * CRT OM Commod Mrkt/Prc CR - Commodity Mrkt Price  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @F0CPDJ
     C                     MOVEL#PTMCD    WBLQCD           Commodity Marke
     C                     MOVELYL0002    WBLRCD           Commodity Price
     C                     Z-ADD#1EQDT    WBEQDT           Market Price Da
     C                     Z-ADDYL0006    WBA5PR           Commodity Marke
     C                     Z-ADD*ZERO     WBB8PR           Projected Marke
     C                     MOVELYL0007    WBUVST           EDI Status 1
     C                     MOVELYL0008    WBUWST           EDI Status 2
     C                     MOVELYL0009    WBUXST           EDI Status 3
     C                     MOVEL'A'       WBVSST           Record Status
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     MOVEL*BLANK    WBAYNA           User Id
     C                     MOVEL*BLANK    WBA0NA           Job Name
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      *
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     WBAATM           Job Time
     C                     MOVEL##USR     WBAYNA           User Id
     C                     MOVEL##JOB     WBA0NA           Job Name
     C                     Z-ADD##JDT     WBAXDT           Job Date
     C           KLCRSF    KLIST
     C                     KFLD           WBLQCD           Commodity Marke
     C                     KFLD           WBLRCD           Commodity Price
     C                     KFLD           WBEQDT           Market Price Da
      * Check for duplicate primary key
     C           KLCRSF    SETLL@F0CPDJ                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR1223' W0RTN   7
      * Send message 'Commodity Mrkt Price   EX'
     C                     MOVEL'USR1223' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C                     WRITE@F0CPDJ                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Val Commodity Markets  RT - Commodity Markets  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WFLQCD           Commodity Marke
      * Setup key
     C                     MOVEL#PTMCD    WFLQCD           Commodity Marke
      * Establish starting position
     C           KRSSG     CHAIN@FYREDK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1218' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #PJ3NA           Commodity Marke
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWFJ3NA    #PJ3NA           Commodity Marke
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Val CommMrktPrc/Short  RT - Commodity Mrkt Price  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WGLQCD    WQSH01           Commodity Marke
     C           *LIKE     DEFN WGEQDT    WQSH02           Market Price Da
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WQSH01           Commodity Marke
     C                     KFLD           WQSH02           Market Price Da
      * Setup key
     C                     MOVELWL0001    WQSH01           Commodity Marke
     C                     Z-ADDWL0002    WQSH02           Market Price Da
      * Establish starting position
     C           KRSSH     SETLL@F0CPQ0                    *
     C           KRSSH     READE@F0CPQ0                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1222' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       WL0003           Record Found US
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y'       WL0003           Record Found US
     C                     GOTO SHEXIT                     *QUIT
     C           KRSSH     READE@F0CPQ0                  90*
     C                     ENDDO
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WHDNCD    WQSI01           Application Cod
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSI01           Application Cod
     C                     MOVEL'C/S'     WQSI01           Application Cod
      * Establish starting position
     C           KRSSI     SETLL@DNRESF                    *
     C           KRSSI     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           WHRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELWHAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SJRVGN
     C                     END                             *FI
     C           KRSSI     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WHDNCD    WQSJ01           Application Cod
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Application Cod
      * Setup key
     C                     MOVELWHRSCD    WQSJ01           Application Cod
      * Establish starting position
     C           KRSSJ     SETLL@DNRESF                    *
     C           KRSSJ     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWHAUNA    WUAUNA           Description
     C           KRSSJ     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * validate commodity market
      *================================================================
      * Val Commodity Markets  RT - Commodity Markets  * 
     C                     EXSR SGRVGN
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Setup message data for message
     C                     MOVEL#PTMCD    ZA0001           Commodity Marke
      * Send message 'Commodity Market not fnd'
     C                     MOVEL'USR2162' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     GOTO UAEXIT                     *QUIT
     C                     END                             *FI
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Validation on market Date must be greater then or equal to curre
      *================================================================
      * CASE: DTL.Market Price Date GE JOB.*Job date
     C           #1EQDT    IFGE ##JDT                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Convert Market Price Date to display format
      * Convert date
     C           1000000   ADD  #1EQDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0002
      * Convert *Job date to display format
      * Convert date
     C           1000000   ADD  ##JDT     XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0003
      * Send message 'Date => Job Date'
     C                     MOVEL'USR2018' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     END                             *FI
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * validate commodity market Price  By Market code and date
      *================================================================
      * VAL:  CMD 11
      * CASE: DTL.*CMD key is CF11
     C           *IN11     IFEQ '1'                        *IF
      * Val CommMrktPrc/Short  RT - Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#PTMCD    WL0001    P      Commodity Marke
     C                     Z-ADD#1EQDT    WL0002           Market Price Da
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0010    P      Record Found US
      * CASE: LCL.Record Found USR is Record Not Found
     C           YL0010    IFEQ 'N'                        *IF
      * Send message 'Commodity Mrkt Price   NF'
     C                     MOVEL'USR1222' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Val CommMrktPrc/Short  RT - Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#PTMCD    WL0001    P      Commodity Marke
     C                     Z-ADD#1EQDT    WL0002           Market Price Da
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0010    P      Record Found US
      * CASE: LCL.Record Found USR is Record Found
     C           YL0010    IFEQ 'Y'                        *IF
      * Send message 'Commodity Mrkt Price   EX'
     C                     MOVEL'USR1223' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     GOTO UCEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C                     MOVEL#1LQCD    WK1X01  1
     C                     MOVEL#1LRCD    WK1X03  1
     C           WK1X01    IFEQ '?'                        Commodity Marke
     C           YPMTFD    OREQ '#1LQCD'
     C           YPMTFD    OREQ '#1EQDT'
     C           WK1X03    OREQ '?'                        Commodity Price
     C           YPMTFD    OREQ '#1LRCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1LQCD' defaulted for 'Commodity Market Code'.
      * Field '(DTL) #1EQDT' defaulted for 'Market Price Date'.
     C                     CALL 'PMHESRR'              90  SEL CMP Act By
     C                     PARM *BLANK    W0RTN   7
     C           #1LQCD    PARM #1LQCD    WQ0004  3        Commodity Marke
     C           #1EQDT    PARM #1EQDT    WQ0005  70       Market Price Da
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMHESRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9932  *
     C                     END
      *
     C           #1LQCD    IFNE *BLANK                     Commodity Marke
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #1EQDT    IFNE *ZERO                      Market Price Da
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #1LRCD    IFNE *BLANK                     Commodity Price
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X03    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           ZHCSRW    IFEQ 006
     C           ZHCSCL    ANDGE028
     C           ZHCSCL    ANDLE035
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1EQDT'  YPMTFD           Market Price Da
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
      * USER: Exit program processing
      * CASE: LCL.Post Flag USR is Yes
     C           YL0001    IFEQ 'Y'                        *IF
      * EDT Post All Open Ord XF - Order Header TRG  * 
     C                     CALL 'PMPBXFR'              90  EDT Post All Op
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1EQDT    WQ0006  70       Scheduled Ship
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMPBXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     END                             *FI
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1J3NA           Commodity Marke
     C                     MOVEL*BLANK    P2TMCD           Commodity Marke
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAEQDT           Market Price Da
     C                     Z-ADD*ZERO     WAA5PR           Commodity Marke
     C                     Z-ADD*ZERO     WAB8PR           Projected Marke
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCGTNY           ITEM NUMBER
     C                     Z-ADD*ZERO     WCHHVL           SCOST
     C                     Z-ADD*ZERO     WCHIVL           COST
     C                     Z-ADD*ZERO     WCHJVL           COST5
     C                     Z-ADD*ZERO     WCHKVL           COST4
     C                     Z-ADD*ZERO     WCHLVL           COST3
     C                     Z-ADD*ZERO     WCHMVL           COST2
     C                     Z-ADD*ZERO     WCHNVL           COST1
     C                     Z-ADD*ZERO     WCHOVL           INV#
     C                     Z-ADD*ZERO     WCHPVL           INV$
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDHGCD           Item Code
     C                     Z-ADD*ZERO     WDAWPC           Conversion Fact
     C                     Z-ADD*ZERO     WDAXPC           Conversion Fact
     C                     Z-ADD*ZERO     WDAIWG           Unit Weight
     C                     Z-ADD*ZERO     WDCZWG           Minimum Weight
     C                     Z-ADD*ZERO     WDC0WG           Maximum Weight
     C                     Z-ADD*ZERO     WDURTN           Number Cases On
     C                     Z-ADD*ZERO     WDACC8           Vendor item Def
     C                     Z-ADD*ZERO     WDRINB           Item Structure
     C                     Z-ADD*ZERO     WDRHNB           Item Structure
     C                     Z-ADD*ZERO     WDRGNB           Item Structure
     C                     Z-ADD*ZERO     WDTFNB           Transportation
     C                     Z-ADD*ZERO     WDCHTM           Fresh Chilling
     C                     Z-ADD*ZERO     WDSWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WDPPHE           Pieces Per Head
     C                     Z-ADD*ZERO     WDSFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     WDA3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     WDSJNB           Production Lead
     C                     Z-ADD*ZERO     WDSKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WDSLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WDSMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WDCFNB           PM Pounds per H
     C                     Z-ADD*ZERO     WDCGNB           Item Frt Overag
     C                     Z-ADD*ZERO     WDILNB           PM % 2nds Facto
     C                     Z-ADD*ZERO     WDCHNB           Use/Freeze/Sell
     C                     Z-ADD*ZERO     WDCINB           PM Batch Size
     C                     Z-ADD*ZERO     WDCJNB           PM Lot Size
     C                     Z-ADD*ZERO     WDCMNB           Partial Item Co
     C                     Z-ADD*ZERO     WDCNNB           WIP Item Code
     C                     Z-ADD*ZERO     WDCRNB           WIP Reject Code
     C                     Z-ADD*ZERO     WDCSNB           Std Costing Uni
     C                     Z-ADD*ZERO     WDCVNB           FP Std Green We
     C                     Z-ADD*ZERO     WDCWNB           PM Standard LBS
     C                     Z-ADD*ZERO     WDCXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     WDCZNB           PM Formula LBS/
     C                     Z-ADD*ZERO     WDC0NB           PM Finished LBS
     C                     Z-ADD*ZERO     WDB4NB           PM R/M Type Cod
     C                     Z-ADD*ZERO     WDTMVA           Maximum Audit V
     C                     Z-ADD*ZERO     WDTNVA           Minimum Audit V
     C                     Z-ADD*ZERO     WDBLPR           Market Overage
     C                     Z-ADD*ZERO     WDBMPR           Standard Overag
     C                     Z-ADD*ZERO     WDCMCO           Item Pricing Co
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDICN1           Item Category N
     C                     Z-ADD*ZERO     WDICN2           Item Category N
     C                     Z-ADD*ZERO     WDV2NB           Item Category N
     C                     Z-ADD*ZERO     WDITCN           Item Category N
     C                     Z-ADD*ZERO     WDITC5           Item Category N
     C                     Z-ADD*ZERO     WDICN6           Item Category N
     C                     Z-ADD*ZERO     WDICN7           Item Category N
     C                     Z-ADD*ZERO     WDICN8           Item Category N
     C                     Z-ADD*ZERO     WDICN9           Item Category N
     C                     Z-ADD*ZERO     WDICN0           Item Category N
     C                     Z-ADD*ZERO     WDB5NB           PM Line Number
     C                     Z-ADD*ZERO     WDBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WDBJNB           Bags Per Unit
     C                     Z-ADD*ZERO     WDF5WG           Item Target Pri
     C                     Z-ADD*ZERO     WDF6WG           Minimum Piece W
     C                     Z-ADD*ZERO     WDF7WG           Maximum Piece W
     C                     Z-ADD*ZERO     WDBLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     WDBNNB           Production Qty
     C                     Z-ADD*ZERO     WDAHTM           Job Time
     C                     Z-ADD*ZERO     WDEKDT           Job Date
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WFAATM           Job Time
     C                     Z-ADD*ZERO     WFAXDT           Job Date
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WHAATM           Job Time
     C                     Z-ADD*ZERO     WHAXDT           Job Date
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'Y'       W0PMT   1
      *
     C                     MOVEL*BLANK    W0SJO 132        *Sbmjob overrid
      * Define local variables for subroutine SHRVGN.
     C                     MOVEL*BLANK    WL0001  3
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003  1
      * Define local work field Post Flag USR
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Commodity Price Group
     C                     MOVEL*BLANK    YL0002  7
      * Define local work field Record Status
     C                     MOVEL*BLANK    YL0003  1
      * Define local work field Record Found USR
     C                     MOVEL*BLANK    YL0004  1
      * Define local work field Item Code
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field Commodity Market Price
     C                     Z-ADD*ZERO     YL0006 114
      * Define local work field EDI Status 1
     C                     MOVEL*BLANK    YL0007  1
      * Define local work field EDI Status 2
     C                     MOVEL*BLANK    YL0008  1
      * Define local work field EDI Status 3
     C                     MOVEL*BLANK    YL0009  1
      * Define local work field Record Found USR
     C                     MOVEL*BLANK    YL0010  1
      * Define local work field Day of Week (SYN) USR
     C                     Z-ADD*ZERO     YL0011  10
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * VAL Rtv and Center Hdg IF
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SIRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL'N'       YL0001           Post Flag USR
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** DETAIL Screen: Field position and name array
013080131501564
** W0END
013100134401571
** W0NAM
#PTMCD    #PJ3NA    V1EQDT
