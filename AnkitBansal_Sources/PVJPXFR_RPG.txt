     H/TITLE TST DN TEST XFR ILE 3     Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 01/30/25  Time  : 13:43:22
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
      * Long constants
     D @CN#            S              6    DIM(03)CTDATA PERRCD(1)
     D @CN             S             25    DIM(03) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      /EJECT
     D XTCK2           DS
      * Time: hours, minutes, seconds (2)
     D  XTTIM2                 1      6  0
     D  XTHH2                  1      2  0
     D  XTNN2                  3      4  0
     D  XTSS2                  5      6  0
      /EJECT
     D XTCK            DS
      * Time: hours, minutes, seconds
     D  XTTIM                  1      6  0
     D  XTHH                   1      2  0
     D  XTNN                   3      4  0
     D  XTSS                   5      6  0
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  YL0001         S             26
     D  ZQ             S              5  0
     D  YL0002         S              2
     D  YL0003         S              2
     D  YL0004         S              2
     D  YL0005         S              6
     D  YL0006         S              6  0
     D  YL0007         S              6  0
     D  YL0008         S              5  0
     D  XSGN           S              1  0
     D  XTNNL          S              3  0
     D  XTSSL          S              3  0
     D  YL0009         S             10
     D  YRSW00         S              5  0
     D  YRSW01         S              5  0
     D  W0PMT          S              1
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * TST DN TEST XFR ILE 3
      * Current System Time.
     C                   Z-ADD     *ZERO         ZQ
     C     @CN(001)      CAT(P)    @CN(002):ZQ   YL0001                         Date Timestamp
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     12            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0001:ZQ     YL0002                 90      Hour 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     15            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0001:ZQ     YL0003                 90      Minute 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     18            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0001:ZQ     YL0004                 90      Second 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     *ZERO         ZQ
     C     YL0002        CAT(P)    YL0003:ZQ     YL0005                         Time Alpha usr
     C                   Z-ADD     *ZERO         ZQ
     C     YL0005        CAT(P)    YL0004:ZQ     YL0005                         Time Alpha usr
     C                   MOVE      YL0005        YL0006                         Current Time
      * Created Transaction Timestamp.
     C                   Z-ADD     *ZERO         ZQ
     C     @CN(001)      CAT(P)    @CN(003):ZQ   YL0001                         Date Timestamp
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     12            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0001:ZQ     YL0002                 90      Hour 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     15            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0001:ZQ     YL0003                 90      Minute 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     18            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0001:ZQ     YL0004                 90      Second 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     *ZERO         ZQ
     C     YL0002        CAT(P)    YL0003:ZQ     YL0005                         Time Alpha usr
     C                   Z-ADD     *ZERO         ZQ
     C     YL0005        CAT(P)    YL0004:ZQ     YL0005                         Time Alpha usr
     C                   MOVE      YL0005        YL0007                         Create Time
      * Consider Comparing for Previous Day Time.
      * CASE: LCL.Current Time LT LCL.Create Time
     C                   IF        YL0006 < YL0007
     C                   ADD       240000        YL0006                         Current Time
     C                   END                                                    *FI
      * LCL.Hours/Minutes Elapsed USR = LCL.Current Time - LCL.Create Tim
     C                   Z-ADD     YL0007        XTTIM2
     C                   Z-ADD     YL0006        XTTIM
     C                   EXSR      XTCEL
     C     XTHH          MULT      100           YL0008
     C                   ADD       XTNN          YL0008
     C                   MULT      100           YL0008
     C                   ADD       XTSS          YL0008
     C                   MULT      XSGN          YL0008
      * CASE: LCL.Hours/Minutes Elapsed USR is >= 35 mins
     C                   IF        YL0008 >= 35
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0009 = ' '                                 Text USR
     C                   MOVEL     'Hello'       YL0009                         Text USR
     C                   END                                                    *FI
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   XTCEL         BEGSR
      *================================================================
      * Calculate elapsed time from TME2 to TME1
      *================================================================
     C                   IF        XTTIM >= XTTIM2
     C                   Z-ADD     1             XSGN
     C                   Z-ADD     XTNN          XTNNL
     C                   Z-ADD     XTSS          XTSSL
     C                   IF        XTSSL < XTSS2
     C                   ADD       60            XTSSL
     C                   SUB       1             XTNNL
     C                   END
     C     XTSSL         SUB       XTSS2         XTSS
     C                   IF        XTNNL < XTNN2
     C                   ADD       60            XTNNL
     C                   SUB       1             XTHH
     C                   END
     C     XTNNL         SUB       XTNN2         XTNN
     C                   SUB       XTHH2         XTHH
     C                   ELSE
     C                   Z-ADD     -1            XSGN
     C                   Z-ADD     XTNN2         XTNNL
     C                   Z-ADD     XTSS2         XTSSL
     C                   IF        XTSSL < XTSS
     C                   ADD       60            XTSSL
     C                   SUB       1             XTNNL
     C                   END
     C     XTSSL         SUB       XTSS          XTSS
     C                   IF        XTNNL < XTNN
     C                   ADD       60            XTNNL
     C                   SUB       1             XTHH2
     C                   END
     C     XTNNL         SUB       XTNN          XTNN
     C     XTHH2         SUB       XTHH          XTHH
     C                   END
      *================================================================
     CSR   XTCELE        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Define *Synon program work fields
     C                   Z-ADD     *ZEROS        YRSW00                         *Synon (5,0) wo
     C                   Z-ADD     *ZEROS        YRSW01                         *Synon (5,0) wo
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     @CN(1)        @CN(1)
     C                   MOVEL     'N'           W0PMT
      * Define local work field Date Timestamp Txt U
     C                   EVAL      YL0001 = ' '
      * Define local work field Hour 2A USR
     C                   EVAL      YL0002 = ' '
      * Define local work field Minute 2A USR
     C                   EVAL      YL0003 = ' '
      * Define local work field Second 2A USR
     C                   EVAL      YL0004 = ' '
      * Define local work field Time Alpha usr 6
     C                   EVAL      YL0005 = ' '
      * Define local work field Current Time
     C                   Z-ADD     *ZERO         YL0006
      * Define local work field Create Time
     C                   Z-ADD     *ZERO         YL0007
      * Define local work field Hours/Minutes Elapsed USR
     C                   Z-ADD     *ZERO         YL0008
      * Define local work field Text USR
     C                   EVAL      YL0009 = ' '
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 2025-01-17-
00002 05.00.00.000000
00003 23.59.01.000000
