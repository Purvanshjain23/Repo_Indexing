// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POBDPFR
// ?Date: 14.08.2025 Time: 12:06:06
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

//?USER: Record selection processing

//?Select only non canceled orders
CASE;

// IF DB1.Header Status is Cancelled
IF DB1.Header_Status = 'X';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Select only orders to be invoiced
CASE;

// IF DB1.Billing Activity Type is Invoice
IF DB1.Billing_Activity_Type = '1';

//?Select only orders to be invoiced
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Select by Actual Shipped Date
CASE;

// IF PAR.Actual Shipped Date is entered
IF PAR.Actual_Shipped_Date <> *ZERO;

CASE;

// IF DB1.Actual Shipped Date is not entered
IF DB1.Actual_Shipped_Date = *ZERO;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: On print of first page format

// 1PG.Company Number = PAR.Company Number
X1PG_Company_Number = PAR.Company_Number;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// 1PG.Sales Route Code = PAR.Sales Route Code
X1PG_Sales_Route_Code = PAR.Sales_Route_Code;

//?Sales Route description
CASE;

// IF PAR.Sales Route Code is not entered
IF PAR.Sales_Route_Code = *BLANK;

// 1PG.Sales Route Description = CON.*All
X1PG_Sales_Route_Description = *All;

//?Sales Route description
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1270614;
PARAMETER(X1PG_Sales_Route_Code);
PARAMETER(X1PG_Sales_Route_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

// 1PG.Ship To Customer = PAR.Ship To Customer
X1PG_Ship_To_Customer = PAR.Ship_To_Customer;

//?Ship to Customer description
CASE;

// IF PAR.Ship To Customer is equal to zero
IF PAR.Ship_To_Customer = *ZERO;

// 1PG.Ship To Name = CON.*All
X1PG_Ship_To_Name = *All;

//?Ship to Customer description
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(X1PG_Ship_To_Customer);
PARAMETER(X1PG_Ship_To_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

// 1PG.Scheduled Ship Date = PAR.Scheduled Ship Date
X1PG_Scheduled_Ship_Date = PAR.Scheduled_Ship_Date;

// 1PG.Actual Shipped Date = PAR.Actual Shipped Date
X1PG_Actual_Shipped_Date = PAR.Actual_Shipped_Date;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
// Print Accounting Company Number header format
PRINT Accounting Company Number header format;

ENDIF;

//?USER: On print of detail format

EXECUTE FUNCTION(RTV Whse/Non Cancelled RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428700;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(CUR.Warehouse_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 //?C2748:  Changed RTV Warehouse Code RT to exclude Cancelled lines.
 CASE;

 // IF DB1.Detail Line Status is Cancelled
 IF DB1.Detail_Line_Status = 'X';

 // IF *OTHERWISE
 IF *OTHERWISE;

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

 ENDIF;

}


EXECUTE FUNCTION(RTV Load Dispatch flds RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1444756;
PARAMETER(CUR.Load_ID);
PARAMETER(WRK.Scheduled_Ship_Date);
PARAMETER(WRK.Trailer_Id);
PARAMETER(WRK.Carrier_Code);
PARAMETER(WRK.Schedule_Sequence_Number);
PARAMETER(WRK.Shipping_Method);
PARAMETER(WRK.On_Time_Y_N);
PARAMETER(WRK.Truck_Ready_Date);
PARAMETER(WRK.Truck_Ready_Time);
PARAMETER(WRK.Spotted_Date);
PARAMETER(WRK.Spotted_Time);
PARAMETER(WRK.Load_Finished_Date);
PARAMETER(WRK.Load_Finished_Time);
PARAMETER(WRK.BOL_Complete_Date);
PARAMETER(WRK.BOL_Complete_Time);
PARAMETER(WRK.BOL_Received_Date);
PARAMETER(WRK.BOL_Received_Time);
PARAMETER(CUR.Truck_Departure_Date);
PARAMETER(CUR.Truck_Departure_Time);
PARAMETER(WRK.Adjusted_Departure_Date);
PARAMETER(WRK.Adjusted_Departure_Time);
PARAMETER(WRK.Shipping_Line);
PARAMETER(WRK.Port_Delv_Terminal);
PARAMETER(WRK.Scheduled_Delivery_Date);
PARAMETER(WRK.Scheduled_Delivery_Time);
PARAMETER(WRK.LH_Unused_Sts);
PARAMETER(WRK.On_Yard_Date);
PARAMETER(WRK.On_Yard_Time);
PARAMETER(WRK.Load_Held_Over);
PARAMETER(WRK.LH_On_Time_Reason_Code);
PARAMETER(WRK.LH_Held_Over_Reason);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT Sales Prc Edt Dtl  PO
EXECUTE FUNCTION(PRT Sales Prc Edt Dtl  PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(*ZERO);
PARAMETER(WRK.Substitution_Flag);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level totals

// SUPPRESSED PRINT Accounting Company Number totals format

