// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POLYE1R
// ?Date: 14.08.2025 Time: 03:38:01
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?Force program into add mode if no item present
CASE;

// IF PAR.Item Category Code is Not Entered
IF PAR.Item_Category_Code = *BLANK;

// PGM.*Program mode = CND.*ADD
PGM.*Program_mode = 'ADD';

ENDIF;

//?USER: Initialize key screen

// KEY.Company Number = PAR.Company Number
KEY.Company_Number = PAR.Company_Number;

// KEY.Item Category Number = PAR.Item Category Number
KEY.Item_Category_Number = PAR.Item_Category_Number;

//?USER: Initialize detail screen (new record)

// DTL.Record Status = CND.Active
DTL.Record_Status = 'A';

//?USER: Initialize detail screen (existing record)

// DTL.Item Category Type Number = DTL.Item Category Number
DTL.Item_Category_Type_Number = DTL.Item_Category_Number;

//?USER: Validate detail screen fields

CASE;

// IF DTL.Item Category Type Code is Entered
IF DTL.Item_Category_Type_Code <> *BLANK;

// DTL.Item Category Type Number = DTL.Item Category Number
DTL.Item_Category_Type_Number = DTL.Item_Category_Number;

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Item Category Type Number = CON.*ZERO
DTL.Item_Category_Type_Number = *ZERO;

ENDIF;

//?CALC: Detail screen function fields

EXECUTE FUNCTION(Item Ctgry Type Desc DRV) TYPE(DRVFLD)                         AC1631463;
PARAMETER(DTL.Item_Ctgry_Type_Desc_DRV);
PARAMETER(DTL.Item_Category_Type_Number);
PARAMETER(DTL.Item_Category_Type_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Description       RT) TYPE(RTVOBJ) FILE(POBHREP)           AC1631475;
 PARAMETER(PAR.Item_Category_Type_Number);
 PARAMETER(PAR.Item_Category_Type_Code);
 PARAMETER(PAR.Item_Ctgry_Type_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Create DBF record

EXECUTE FUNCTION(CRT PD Item Category   CR) TYPE(CRTOBJ) FILE(PDJIREP)          AC1396173;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Item_Category_Number);
PARAMETER(DTL.Item_Category_Code);
PARAMETER(DTL.Description);
PARAMETER(DTL.Item_Category_Type_Number);
PARAMETER(DTL.Item_Category_Type_Code);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Job_Time);
PARAMETER(DTL.User_Id);
PARAMETER(DTL.Job_Name);
PARAMETER(DTL.Job_Date);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(Change Item Category) TYPE(CHGOBJ) FILE(PDJIREP)               AC1627290;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Item_Category_Number);
PARAMETER(DTL.Item_Category_Code);
PARAMETER(DTL.Description);
PARAMETER(DTL.Item_Category_Type_Number);
PARAMETER(DTL.Item_Category_Type_Code);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Job_Time);
PARAMETER(DTL.User_Id);
PARAMETER(DTL.Job_Name);
PARAMETER(DTL.Job_Date);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


