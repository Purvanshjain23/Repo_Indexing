// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDYKXFR
// ?Date: 14.08.2025 Time: 03:33:38
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?C01620 RMC 6/28/11 Check for open orders to use LF sans company
//?Check other customer records
// WRK.USR Count = CND.EQ 0
WRK.USR_Count = *ZERO;

EXECUTE FUNCTION(VAL A/R Cust B4 Delete RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1463210;
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(WRK.USR_Count);
{
 //?USER: Initialize routine

 // PAR.USR Count = CND.EQ 0
 PAR.USR_Count = *ZERO;

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PAR.USR Count = PAR.USR Count + CON.1
 PAR.USR_Count = PAR.USR_Count + 1;

 CASE;

 // IF PAR.USR Count is GT 1
 IF PAR.USR_Count > 1;

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 QUIT;

 ENDIF;

}


CASE;

// IF WRK.USR Count is GT 1
IF WRK.USR_Count > 1;

// PAR.USR Return Code = CND.Exists
PAR.USR_Return_Code = 'E';

QUIT;

ENDIF;

//?Check for open orders
EXECUTE FUNCTION(VAL Customer Order Hdr RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1462968;
PARAMETER(PAR.Ship_To_Customer);
{
 //?USER: Initialize routine

 //?RMC 6/28/2011 use lf not keyed by company, so all will be chked.
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


CASE;

// IF PGM.*Return code is *Record already exists
IF PGM.*Return_code = 'Y2U0003';

// PAR.USR Return Code = CND.Open Orders
PAR.USR_Return_Code = 'O';

QUIT;

ENDIF;

//?Check for $ owed
// WRK.USR Tot. Due W/O CB = CND.Zero
WRK.USR_Tot_Due_W_O_CB = *ZERO;

EXECUTE FUNCTION(RTV Check Exist A/R #  RT) TYPE(RTVOBJ) FILE(ARBCREP)          AC1420452;
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(WRK.USR_Tot_Due_W_O_CB);
{
 //?USER: Initialize routine

 // PAR.USR Tot. Due W/O CB = CND.Zero
 PAR.USR_Tot_Due_W_O_CB = *ZERO;

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 //?1/24/2006 SLM Routine was replace the accumulate field when the
 //?              next record for the next company was read
 // PAR.USR Tot. Due W/O CB = DB1.Age $ Due-Current-W/O CB + PAR.USR Tot. Due W/O CB
 PAR.USR_Tot_Due_W_O_CB = DB1.Age_Due_Current_W_O_CB + PAR.USR_Tot_Due_W_O_CB;

 // PAR.USR Tot. Due W/O CB = DB1.Age $ Due-Aging 1-W/O CB + PAR.USR Tot. Due W/O CB
 PAR.USR_Tot_Due_W_O_CB = DB1.Age_Due_Aging_1_W_O_CB + PAR.USR_Tot_Due_W_O_CB;

 // PAR.USR Tot. Due W/O CB = DB1.Age $ Due-Aging 2-W/O CB + PAR.USR Tot. Due W/O CB
 PAR.USR_Tot_Due_W_O_CB = DB1.Age_Due_Aging_2_W_O_CB + PAR.USR_Tot_Due_W_O_CB;

 // PAR.USR Tot. Due W/O CB = DB1.Age $ Due-Aging 3-W/O CB + PAR.USR Tot. Due W/O CB
 PAR.USR_Tot_Due_W_O_CB = DB1.Age_Due_Aging_3_W_O_CB + PAR.USR_Tot_Due_W_O_CB;

 // PAR.USR Tot. Due W/O CB = DB1.Age $ Due-Aging 4-W/O CB + PAR.USR Tot. Due W/O CB
 PAR.USR_Tot_Due_W_O_CB = DB1.Age_Due_Aging_4_W_O_CB + PAR.USR_Tot_Due_W_O_CB;

 // PAR.USR Tot. Due W/O CB = DB1.Age $ Due-Aging 5-W/O CB + PAR.USR Tot. Due W/O CB
 PAR.USR_Tot_Due_W_O_CB = DB1.Age_Due_Aging_5_W_O_CB + PAR.USR_Tot_Due_W_O_CB;

}


CASE;

// IF WRK.USR Tot. Due W/O CB is Not Zero
IF WRK.USR_Tot_Due_W_O_CB <> *ZERO;

// PAR.USR Return Code = CND.$ Owed
PAR.USR_Return_Code = '$';

QUIT;

ENDIF;

// PAR.USR Return Code = CND.Does Not Exist
PAR.USR_Return_Code = 'N';

