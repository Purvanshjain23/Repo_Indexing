     H/TITLE Exc Read Last DtaCllct XF Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISJBADE
     H* Date          : 05/04/18  Time  : 09:05:00
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPDKMREL1IF  E           K        DISK
      * RTV : Company Values            Retrieval index
      *
     FPBATCPL3IF  E           K        DISK
      * RSQ : TMS Order Header Trigger  Dt/Tm/Ord# sel LPR=" "
      *
     FPDMXCPL2IF  E           K        DISK
      * RSQ : AS Last Data Collection   Active Codes Only
      *
     FPDKMREL2IF  E           K        DISK
      * RSQ : Company Values            By Values/Co
      *
      * Long constants
     E                    @CN#    1  05  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@KMREHC
      * Company Values            Retrieval index
      * Renamed input format fields
     I              KMAIC3                          WAAIC3
     I              KMV8CD                          WAV8CD
     I              KMAUNA                          WAAUNA
     I              KMI5ST                          WAI5ST
     I              KMBXTX                          WABXTX
     I              KMM8NB                          WAM8NB
     I              KMUVST                          WAUVST
     I              KMUWST                          WAUWST
     I              KMUXST                          WAUXST
     I              KMVSST                          WAVSST
     I              KMAATM                          WAAATM
     I              KMAYNA                          WAAYNA
     I              KMA0NA                          WAA0NA
     I              KMAXDT                          WAAXDT
      *
     I@ATCPWK
      * TMS Order Header Trigger  Dt/Tm/Ord# sel LPR=" "
      * Renamed input format fields
     I              ATAXDT                          WBAXDT
     I              ATAATM                          WBAATM
     I              ATC4NB                          WBC4NB
     I              ATAIC3                          WBAIC3
     I              ATFVSX                          WBFVSX
     I              ATAYNA                          WBAYNA
     I              ATA0NA                          WBA0NA
      *
     I@MXCPYN
      * AS Last Data Collection   Active Codes Only
      * Renamed input format fields
     I              MXAIC3                          WCAIC3
     I              MXAQAA                          WCAQAA
     I              MXG5NX                          WCG5NX
     I              MXG8NX                          WCG8NX
     I              MXNIDT                          WCNIDT
     I              MXBKTM                          WCBKTM
     I              MXE7SX                          WCE7SX
     I              MXS7TX                          WCS7TX
     I              MXUVST                          WCUVST
     I              MXUWST                          WCUWST
     I              MXUXST                          WCUXST
     I              MXVSST                          WCVSST
     I              MXAATM                          WCAATM
     I              MXAYNA                          WCAYNA
     I              MXA0NA                          WCA0NA
     I              MXAXDT                          WCAXDT
      *
     I@KMREEL
      * Company Values            By Values/Co
      * Renamed input format fields
     I              KMAIC3                          WDAIC3
     I              KMV8CD                          WDV8CD
     I              KMAUNA                          WDAUNA
     I              KMI5ST                          WDI5ST
     I              KMBXTX                          WDBXTX
     I              KMM8NB                          WDM8NB
     I              KMUVST                          WDUVST
     I              KMUWST                          WDUWST
     I              KMUXST                          WDUXST
     I              KMVSST                          WDVSST
     I              KMAATM                          WDAATM
     I              KMAYNA                          WDAYNA
     I              KMA0NA                          WDA0NA
     I              KMAXDT                          WDAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXTCK2       DS
      * Time: hours, minutes, seconds (2)
     I                                        1   60XTTIM2
     I                                        1   20XTHH2
     I                                        3   40XTNN2
     I                                        5   60XTSS2
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Exc Read Last DtaCllct XF
      * Modification History
     C                     EXSR UASUBR                     Modification Hi
      *  5/04/2018 JBB E30128 - Don't send TMSORDMSG on Sunday 4:00 to 7:
      * LCL.Day of Week (SYN) USR = JOB.*Job date *DAY OF WEEK
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0001
      * If this is Sunday, do not process between 4:00am and 7:30am
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0001    IFEQ 7                          *IF
      * Retrieve From Time from the Company Values for Guymon
      * RTV Numeric Value      RT - Company Values  * TMSORDMSFT
      * Move input parameters to subroutine local variables.
     C                     Z-ADD360       WL0001           Company Number
     C                     MOVEL@CN,001   WL0002    P      Company Value C
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    YL0002           System Value Nu
      * Retrieve To Time from the Company Values for Guymon
      * RTV Numeric Value      RT - Company Values  * TMSORDMSTT
      * Move input parameters to subroutine local variables.
     C                     Z-ADD360       WL0001           Company Number
     C                     MOVEL@CN,002   WL0002    P      Company Value C
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    YL0003           System Value Nu
      * If job date and time between From Time and To Time, exit program
      * CASE: Job Time > From Time AND Job Time < To Time
      *  - c1 AND c2
      *   |- c1    : JOB.*Job time GT LCL.Time From
      *   |- c2    : JOB.*Job time LT LCL.Time To
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           ##JTM     IFGT YL0002                     *IF
     C           ##JTM     IFLT YL0003                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Last DtaCollectDt RT - TMS Order Header Trigger  * 
     C                     EXSR SBRVGN
      * Rtv Last Data CllctnCd RT - AS Last Data Collection  * 
     C                     EXSR SCRVGN
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.AS Last Update Date EQ JOB.*Job date
      *   |- c2    : LCL.AS Last Update Time GE JOB.*Job time
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0004    IFEQ ##JDT                      *IF
     C           YL0005    IFGE ##JTM                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     GOTO AAEXIT                     *QUIT
     C                     END                             *FI
      * Calc the elapsed time and send the msg
      * CASE:
      *  - c1AND(c2ORc3)
      *   |- c1    : LCL.AS Last Update Date NE WRK.ZERO
      *   |- c2    : LCL.AS Hours Between Cllctns NE WRK.ZERO
      *   |- c3    : LCL.AS Minutes Btwn Cllctns NE WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0004    IFNE WUW0NB                     *IF
     C                     MOVEL'0'       Y0CX02  1
     C           YL0006    IFNE WUW0NB                     *IF
     C           YL0007    ORNE WUW0NB                     *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate the hour/minutes between the last update and now.
      * Add the elapsed hhmm to the ((elapsed days * 24 hrs) * 100))
      *   ( Do the * 100 to get the days into a hhhmm  5,0 format)
      * WRK.Number of Days = JOB.*Job date - LCL.AS Last Update Date *DAY
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           YL0004    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WUO6NB
     C                     ELSE
     C           XDURR     MULT -1        WUO6NB
     C                     END
      * CASE: JOB.*Job time LE LCL.AS Last Update Time
     C           ##JTM     IFLE YL0005                     *IF
     C           ##JTM     ADD  240000    YL0008           Job Time
      * WRK.Hours/Minutes         USR = LCL.Job Time            14992 - L
     C                     Z-ADDYL0005    XTTIM2
     C                     Z-ADDYL0008    XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       WUG9NX
     C                     ADD  XTNN      WUG9NX
     C                     MULT XSGN      WUG9NX
     C                     ELSE
      * CASE: *OTHERWISE
      * WRK.Hours/Minutes         USR = JOB.*Job time - LCL.AS Last Updat
     C                     Z-ADDYL0005    XTTIM2
     C                     Z-ADD##JTM     XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       WUG9NX
     C                     ADD  XTNN      WUG9NX
     C                     MULT XSGN      WUG9NX
     C                     END                             *FI
      * (This stmt doesnt add the minutes correctly, but that's ok! we ju
      * We just want to know how much time has lapsed since the last upd.
     C           WUG9NX    ADD  WUHCNX    WUHANX           Hours/Minutes E
      * Put the db1 hour/minutes into 1 field--  5,0 hhhmm
     C           YL0006    MULT 100       WUHBNX           Time Between Co
     C                     ADD  YL0007    WUHBNX           Time Between Co
      * Send Msg if hours/minutes between last update and now is > db1 hr
      * CASE: WRK.Hours/Minutes Elapsed USR GT WRK.Time Between Collctns
     C           WUHANX    IFGT WUHBNX                     *IF
      * RTV Alpha Value W/O Co RT - Company Values  * 
     C                     EXSR SDRVGN
      * LCL.Date Out (6,0) USR = LCL.AS Last Update Date
     C                     Z-ADDYL0004    YL0010           Date Out (6,0)
     C                     MULT 100.0001  YL0010           Date Out (6,0)
     C                     MOVEL*BLANK    YL0011           Date (Char-6) U
     C                     MOVELYL0010    YL0011           Date (Char-6) U
     C                     MOVEL*BLANK    YL0012           Time  6A
     C                     MOVELYL0005    YL0012           Time  6A
     C                     Z-ADD1         ZQ      50
     C           YL0011    CAT  YL0012:ZQ YL0013    P      Text USR 15
     C                     Z-ADD1         ZQ      50
     C           @CN,003   CAT  @CN,004:ZQYL0014    P      Error Reason De
     C                     Z-ADD2         ZQ      50
     C           YL0014    CAT  YL0013:ZQ YL0015    P      Pager Msg 256 U
      * CLP Exe ESNDMAIL Cmd   UP - /UT User Programs  * 
     C                     CALL 'PPW6UPC'              90  CLP Exe ESNDMAI
     C                     PARM WUH3TX    WQ0001  7        Return Code Usr
     C                     PARM YL0009    WQ0002 50        Email Address
     C                     PARM @CN,005   WQ0003100        Subject Line US
     C                     PARM YL0015    WQ0004256        Pager Msg 256 U
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPW6UPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Numeric Value      RT - Company Values  * TMSORDMSFT
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WAV8CD           Company Value C
      * Setup key
     C                     Z-ADDWL0001    WAAIC3           Company Number
     C                     MOVELWL0002    WAV8CD           Company Value C
      * Establish starting position
     C           KRSSA     CHAIN@KMREHC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2221' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWAM8NB    WL0003           System Value Nu
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Last DtaCollectDt RT - TMS Order Header Trigger  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Establish starting position
     C           *LOVAL    SETLL@ATCPWK                    *
     C                     READ @ATCPWK                  90*
      * Data record not found
     C   90                MOVEL'USR4569' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * read oldest NOT Processed Order Trigger Record
      * PAR = DB1 By name
     C                     Z-ADDWBAXDT    YL0004           Job Date
     C                     Z-ADDWBAATM    YL0005           Job Time
     C                     GOTO SBEXIT                     *QUIT
     C                     READ @ATCPWK                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Last Data CllctnCd RT - AS Last Data Collection  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCAIC3    WQSC01           Company Number
     C           *LIKE     DEFN WCAQAA    WQSC02           AS Data Collect
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           Company Number
     C                     KFLD           WQSC02           AS Data Collect
      * Setup key
     C                     Z-ADD360       WQSC01           Company Number
     C                     MOVEL'TMSORD'  WQSC02           AS Data Collect
      * Establish starting position
     C           KRSSC     SETLL@MXCPYN                    *
     C           KRSSC     READE@MXCPYN                  90*
      * Data record not found
     C   90                MOVEL'USR2810' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWCG5NX    YL0006           AS Hours Betwee
     C                     Z-ADDWCG8NX    YL0007           AS Minutes Btwn
     C           KRSSC     READE@MXCPYN                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Alpha Value W/O Co RT - Company Values  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL*BLANK    YL0009           System Value Al
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDV8CD    WQSD01           Company Value C
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Value C
      * Setup key
     C                     MOVE *BLANK    WQSD01           Company Value C
     C                     MOVEL'TMSORD'  WQSD01           Company Value C
      * Establish starting position
     C           KRSSD     SETLL@KMREEL                    *
     C           KRSSD     READE@KMREEL                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2221' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWDBXTX    YL0009           System Value Al
     C           KRSSD     READE@KMREEL                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modification History
      *================================================================
      *  5/04/2018 JBB E30128 - Don't send TMSORDMSG on Sunday 4:00 to 7:
      *    Adam Gotsche has requested that the message that is sent from
      *    the job TMSORDMSG on the job scheduler not send messages durin
      *    the maintenance period on Sundays between 4:00 AM and 7:30 AM.
      *    The following Company Values records are used:
      *       TMSORDMSDY - This is the day of the week to check.  Current
      *                    set to 1 for Sunday.
      *       TMSORDMSFT - This is the From Time. Currently set to 4
      *       TMSORDMSTT - This is the To Time. Currently set to 7.3
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XTCEL     BEGSR
      *================================================================
      * Calculate elapsed time from TME2 to TME1
      *================================================================
     C           XTTIM     IFGE XTTIM2
     C                     Z-ADD1         XSGN    10
     C                     Z-ADDXTNN      XTNNL   30
     C                     Z-ADDXTSS      XTSSL   30
     C           XTSSL     IFLT XTSS2
     C                     ADD  60        XTSSL
     C                     SUB  1         XTNNL
     C                     END
     C           XTSSL     SUB  XTSS2     XTSS
     C           XTNNL     IFLT XTNN2
     C                     ADD  60        XTNNL
     C                     SUB  1         XTHH
     C                     END
     C           XTNNL     SUB  XTNN2     XTNN
     C                     SUB  XTHH2     XTHH
     C                     ELSE
     C                     Z-ADD-1        XSGN
     C                     Z-ADDXTNN2     XTNNL
     C                     Z-ADDXTSS2     XTSSL
     C           XTSSL     IFLT XTSS
     C                     ADD  60        XTSSL
     C                     SUB  1         XTNNL
     C                     END
     C           XTSSL     SUB  XTSS      XTSS
     C           XTNNL     IFLT XTNN
     C                     ADD  60        XTNNL
     C                     SUB  1         XTHH2
     C                     END
     C           XTNNL     SUB  XTNN      XTNN
     C           XTHH2     SUB  XTHH      XTHH
     C                     END
      *================================================================
     CSR         XTCELE    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAM8NB           System Value Nu
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAXDT           Job Date
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBC4NB           Order Number
     C                     Z-ADD*ZERO     WBAIC3           Company Number
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCG5NX           AS Hours Betwee
     C                     Z-ADD*ZERO     WCG8NX           AS Minutes Btwn
     C                     Z-ADD*ZERO     WCNIDT           AS Last Update
     C                     Z-ADD*ZERO     WCBKTM           AS Last Update
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Number of Days
     C                     Z-ADD*ZERO     WUO6NB  50
      * Define work field Hours/Minutes         USR
     C                     Z-ADD*ZERO     WUG9NX  50
      * Define work field Hours/Minutes Elapsed USR
     C                     Z-ADD*ZERO     WUHANX  50
      * Define work field Days Elapsed in Hours USR
     C                     Z-ADD*ZERO     WUHCNX  50
      * Define work field Time Between Collctns USR
     C                     Z-ADD*ZERO     WUHBNX  50
      * Define work field Return Code Usr
     C                     MOVEL*BLANK    WUH3TX  7
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SARVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002 10
     C                     Z-ADD*ZERO     WL0003 155
      * Define local work field Day of Week (SYN) USR
     C                     Z-ADD*ZERO     YL0001  10
      * Define local work field Time From
     C                     Z-ADD*ZERO     YL0002  60
      * Define local work field Time To
     C                     Z-ADD*ZERO     YL0003  60
      * Define local work field AS Last Update Date
     C                     Z-ADD*ZERO     YL0004  70
      * Define local work field AS Last Update Time
     C                     Z-ADD*ZERO     YL0005  60
      * Define local work field AS Hours Between Cllctns
     C                     Z-ADD*ZERO     YL0006  30
      * Define local work field AS Minutes Btwn Cllctns
     C                     Z-ADD*ZERO     YL0007  20
      * Define local work field Job Time            14992
     C                     Z-ADD*ZERO     YL0008  60
      * Define local work field Email Address
     C                     MOVEL*BLANK    YL0009 50
      * Define local work field Date Out (6,0) USR
     C                     Z-ADD*ZERO     YL0010  60
      * Define local work field Date (Char-6) USR
     C                     MOVEL*BLANK    YL0011  6
      * Define local work field Time  6A             USR
     C                     MOVEL*BLANK    YL0012  6
      * Define local work field Text USR 15
     C                     MOVEL*BLANK    YL0013 15
      * Define local work field Error Reason Descript 7
     C                     MOVEL*BLANK    YL0014 37
      * Define local work field Pager Msg 256 USR
     C                     MOVEL*BLANK    YL0015256
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 TMSORDMSFT
00002 TMSORDMSTT
00003 TMS Order Trigger not
00004 processed since
00005 TMS Order Trigger Process
