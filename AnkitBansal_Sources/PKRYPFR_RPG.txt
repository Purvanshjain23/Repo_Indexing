     H/TITLE Prt Hot Scl Value Sum PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISDREDD
     H* Date          : 11/09/20  Time  : 01:34:59
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKA1CPNCIF  E           K        DISK
      * RSQ : Tattoo Header             Co/KDte/Prd/BOL/Tto
      *
     FPKACREL1IF  E           K        DISK
      * RTV : Producer                  Retrieval index
      *
     FPKERCPL2IF  E           K        DISK
      * RSQ : Eval Tran Value Dtl OUTF  Co/BOL/Tto/Kldt/Exc/Val
      *
     FPKB1CPL1IF  E           K        DISK
      * RTV : Carcass Detail            Retrieval index
      *
     FPKERCPL4IF  E           K        DISK
      * RSQ : Eval Tran Value Dtl OUTF  Co/BOL/Tto/KlDt/Val
      *
     FPKERCPL3IF  E           K        DISK
      * RSQ : Eval Tran Value Dtl OUTF  Co/BOL/Tto/KlDt/Val(d)
      *
     FPKESCPL0IF  E           K        DISK
      * RTV : Eval Tran Value Hdr OUTF  Retrieval index
      *
     FPKESCPL1UF  E           K        DISK
      * UPD : Eval Tran Value Hdr OUTF  Update index
      *
     FPKRYPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Hot Scl Value Sum PF  Print file
      *
     I@ERCPDX
      * Eval Tran Value Dtl OUTF  Co/BOL/Tto/KlDt/Val
      * Renamed input format fields
     I              ERHMNB                          WAHMNB
     I              ERBNNB                          WABNNB
     I              ERBONB                          WABONB
     I              ERCVNB                          WACVNB
     I              ERB0DT                          WAB0DT
     I              ERLGNB                          WALGNB
     I              ERUBST                          WAUBST
     I              ERUCST                          WAUCST
     I              ERAMPC                          WAAMPC
     I              ERAIPC                          WAAIPC
     I              ERAJPC                          WAAJPC
     I              ERAKPC                          WAAKPC
     I              ERX8NB                          WAX8NB
     I              ERFVPC                          WAFVPC
     I              ERFXPC                          WAFXPC
     I              ERDIST                          WADIST
     I              ERJ4PR                          WAJ4PR
      *
     I@ERCPDW
      * Eval Tran Value Dtl OUTF  Co/BOL/Tto/KlDt/Val(d)
      * Renamed input format fields
     I              ERHMNB                          WBHMNB
     I              ERBNNB                          WBBNNB
     I              ERBONB                          WBBONB
     I              ERCVNB                          WBCVNB
     I              ERB0DT                          WBB0DT
     I              ERLGNB                          WBLGNB
     I              ERUBST                          WBUBST
     I              ERUCST                          WBUCST
     I              ERAMPC                          WBAMPC
     I              ERAIPC                          WBAIPC
     I              ERAJPC                          WBAJPC
     I              ERAKPC                          WBAKPC
     I              ERX8NB                          WBX8NB
     I              ERFVPC                          WBFVPC
     I              ERFXPC                          WBFXPC
     I              ERDIST                          WBDIST
     I              ERJ4PR                          WBJ4PR
      *
     I@ESCPDD
      * Eval Tran Value Hdr OUTF  Update index
      * Renamed input format fields
     I              ESHMNB                          WCHMNB
     I              ESBNNB                          WCBNNB
     I              ESBONB                          WCBONB
     I              ESCVNB                          WCCVNB
     I              ESB0DT                          WCB0DT
     I              ESF4NB                          WCF4NB
     I              ESF2NB                          WCF2NB
     I              ESF3NB                          WCF3NB
     I              ESHDNB                          WCHDNB
     I              ESFMVL                          WCFMVL
     I              ESRYPR                          WCRYPR
     I              ESRZPR                          WCRZPR
     I              ESWYNB                          WCWYNB
     I              ESR0PR                          WCR0PR
     I              ESR1PR                          WCR1PR
     I              ESFMTL                          WCFMTL
     I              ESR2PR                          WCR2PR
     I              ESR3PR                          WCR3PR
     I              ESDLVD                          WCDLVD
     I              ESR4PR                          WCR4PR
     I              ESR5PR                          WCR5PR
     I              ESDLEX                          WCDLEX
     I              ESR6PR                          WCR6PR
     I              ESR7PR                          WCR7PR
     I              ESELTL                          WCELTL
     I              ESR8PR                          WCR8PR
     I              ESR9PR                          WCR9PR
     I              ESPAID                          WCPAID
     I              ESSAPR                          WCSAPR
     I              ESSBPR                          WCSBPR
     I              ESPDTL                          WCPDTL
     I              ESSCPR                          WCSCPR
     I              ESSDPR                          WCSDPR
     I              ESXXNB                          WCXXNB
     I              ESSEPR                          WCSEPR
     I              ESSFPR                          WCSFPR
     I              ESJ9ST                          WCJ9ST
     I              ESABCD                          WCABCD
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
     IQPKES1    E DSPKESCPL1
      * UPD : Eval Tran Value Hdr OUTF  Update index
      * Renamed input format fields
     I              ESHMNB                          WCHMNB
     I              ESBNNB                          WCBNNB
     I              ESBONB                          WCBONB
     I              ESCVNB                          WCCVNB
     I              ESB0DT                          WCB0DT
     I              ESF4NB                          WCF4NB
     I              ESF2NB                          WCF2NB
     I              ESF3NB                          WCF3NB
     I              ESHDNB                          WCHDNB
     I              ESFMVL                          WCFMVL
     I              ESRYPR                          WCRYPR
     I              ESRZPR                          WCRZPR
     I              ESWYNB                          WCWYNB
     I              ESR0PR                          WCR0PR
     I              ESR1PR                          WCR1PR
     I              ESFMTL                          WCFMTL
     I              ESR2PR                          WCR2PR
     I              ESR3PR                          WCR3PR
     I              ESDLVD                          WCDLVD
     I              ESR4PR                          WCR4PR
     I              ESR5PR                          WCR5PR
     I              ESDLEX                          WCDLEX
     I              ESR6PR                          WCR6PR
     I              ESR7PR                          WCR7PR
     I              ESELTL                          WCELTL
     I              ESR8PR                          WCR8PR
     I              ESR9PR                          WCR9PR
     I              ESPAID                          WCPAID
     I              ESSAPR                          WCSAPR
     I              ESSBPR                          WCSBPR
     I              ESPDTL                          WCPDTL
     I              ESSCPR                          WCSCPR
     I              ESSDPR                          WCSDPR
     I              ESXXNB                          WCXXNB
     I              ESSEPR                          WCSEPR
     I              ESSFPR                          WCSFPR
     I              ESJ9ST                          WCJ9ST
     I              ESABCD                          WCABCD
      *
     IYARDCS      DS                            122
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Tattoo Header
      * I : RST BOH Company Number
     I                                    P   1   20P1HMNB
      * I : POS TH Kill Date
     I                                    P   3   60P1B0DT
      * I :  PD Producer Code
     I                                        7  12 P1ABCD
     IP2PARM      DS
      * I :  Date To   USR
     I                                    P   1   40P2B4DT
     IP3PARM      DS
      * FLD: *Arrays
      * I :  TH Payment Type
     I                                        1   1 P3J9ST
      * I :  Include Market USR
     I                                        2   2 P3TXST
      * I :  Include Subject USR
     I                                        3   3 P3TYST
      * I :  Include Resale USR
     I                                        4   4 P3TWST
      * I :  TH Tattoo Number
     I                                    P   5   70P3CVNB
      * I :  Tattoo Type Sts USR
     I                                        8   8 P3UJST
     IP4PARM      DS
      * I :  ETV NonExcep/Excep
     I                                        1   1 P4UBST
     IP5PARM      DS
      * I :  Report Ranking USR
     I                                        1   1 P5UGST
     IP6PARM      DS
      * I :  Oms System Value Alpha
     I                                        1  40 P6EVTX
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1HMNB    PARM           WP0001  30       BOH Company Num
     C           P1B0DT    PARM           WP0002  70       TH Kill Date
     C           P1ABCD    PARM           WP0003  6        PD Producer Cod
     C           P2B4DT    PARM           WP0004  70       Date To   USR
     C           P3J9ST    PARM           WP0005  1        TH Payment Type
     C           P3TXST    PARM           WP0006  1        Include Market
     C           P3TYST    PARM           WP0007  1        Include Subject
     C           P3TWST    PARM           WP0008  1        Include Resale
     C           P3CVNB    PARM           WP0009  50       TH Tattoo Numbe
     C           P3UJST    PARM           WP0010  1        Tattoo Type Sts
     C           P4UBST    PARM           WP0011  1        ETV NonExcep/Ex
     C           P5UGST    PARM           WP0012  1        Report Ranking
     C           P6EVTX    PARM           WP0013 40        Oms System Valu
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Hot Scl Value Sum PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$FENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Hot Scl Value Sum PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQKA01           BOH Company Num
      * Define keylist
     C           KPSA      KLIST
     C                     KFLD           WQKA01           BOH Company Num
     C                     KFLD           A1B0DT           TH Kill Date
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           BOH Company Num
      * Setup key
     C                     Z-ADDP1HMNB    WQKA01           BOH Company Num
     C                     Z-ADDP1B0DT    A1B0DT           TH Kill Date
      * Establish starting position
     C           KPSA      SETLL@A1CPCH                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        TH Kill Date
     C                     MOVEL'Y'       W0AL02  1        PD Producer Cod
     C                     MOVEL'Y'       W0AL03  1        BOH Buy Order N
     C                     MOVEL'Y'       W0AL04  1        BOL Load Number
     C                     MOVEL'Y'       W0AL05  1        TH Tattoo Numbe
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $BHMNB           BOH Company Num
     C                     MOVEL*BLANK    $BEUTX           Oms Name
     C                     Z-ADD*ZERO     $BB3DT           Date From USR
     C                     Z-ADD*ZERO     $BB4DT           Date To   USR
     C                     MOVEL*BLANK    $BTXST           Include Market
     C                     MOVEL*BLANK    $BI2TX           Condition Name
     C                     MOVEL*BLANK    $BTYST           Include Subject
     C                     MOVEL*BLANK    $BI3TX           Condition Name
     C                     MOVEL*BLANK    $BTWST           Include Resale
     C                     MOVEL*BLANK    $BI4TX           Condition Name
     C                     MOVEL*BLANK    $BABCD           PD Producer Cod
     C                     MOVEL*BLANK    $BA4TX           Producer Name
     C                     MOVEL*BLANK    $BJ9ST           TH Payment Type
     C                     MOVEL*BLANK    $BC4TX           Condition Name
     C                     Z-ADD*ZERO     $BCVNB           TH Tattoo Numbe
      * Load related totals format
     C                     Z-ADD*ZERO     $EHDL1           Head 1 Lv w/Add
     C                     Z-ADD*ZERO     $EHD2L           Head 2 Lv w/Add
     C                     Z-ADD*ZERO     $EHD3L           Head 3 Lv w/Add
     C                     Z-ADD*ZERO     $EHD4L           Head 4 Lv w/Add
     C                     Z-ADD*ZERO     $EHD5L           Head 5 Lv w/Add
     C                     Z-ADD*ZERO     $EHD6L           Head 6 Lv w/Add
     C                     Z-ADD*ZERO     $EHD7L           Head 7 Lv w/Add
     C                     Z-ADD*ZERO     $EHD8L           Head 8 Lv w/Add
     C                     Z-ADD*ZERO     $EFEVA           Head 1 Val Lv w
     C                     Z-ADD*ZERO     $EFFVA           Head 2 Val Lv w
     C                     Z-ADD*ZERO     $EFGVA           Head 3 Val Lv w
     C                     Z-ADD*ZERO     $EFHVA           Head 4 Val Lv w
     C                     Z-ADD*ZERO     $EFIVA           Head 5 Val Lv w
     C                     Z-ADD*ZERO     $EFJVA           Head 6 Val Lv w
     C                     Z-ADD*ZERO     $EFKVA           Head 7 Val Lv w
     C                     Z-ADD*ZERO     $EFLVA           Head 8 Val Lv w
     C                     Z-ADD*ZERO     $EGHVA           Head 9 Val Lv w
     C                     Z-ADD*ZERO     $EGIVA           Head 10 Val Lv
     C                     Z-ADD*ZERO     $EGGVA           Head 11 Val Lv
     C                     Z-ADD*ZERO     $ERGPR           Head 1 Val Lv w
     C                     Z-ADD*ZERO     $ERHPR           Head 2 Val Lv w
     C                     Z-ADD*ZERO     $ERIPR           Head 3 Val Lv w
     C                     Z-ADD*ZERO     $ERJPR           Head 4 Val Lv w
     C                     Z-ADD*ZERO     $ERKPR           Head 5 Val Lv w
     C                     Z-ADD*ZERO     $ERLPR           Head 6 Val Lv w
     C                     Z-ADD*ZERO     $ERMPR           Head 7 Val Lv w
     C                     Z-ADD*ZERO     $ERNPR           Head 8 Val Lv w
     C                     Z-ADD*ZERO     $ESMPR           Head 9 Val Lv w
     C                     Z-ADD*ZERO     $ESNPR           Head 10 Val Lv
     C                     Z-ADD*ZERO     $ESOPR           Head 11 Val Lv
     C                     Z-ADD*ZERO     $EHD1L           Head 1 Lv w/Dlt
     C                     Z-ADD*ZERO     $EHDL2           Head 2 Lv w/Dlt
     C                     Z-ADD*ZERO     $EHDL3           Head 3 Lv w/Dlt
     C                     Z-ADD*ZERO     $EHDL4           Head 4 Lv w/Dlt
     C                     Z-ADD*ZERO     $EHDL5           Head 5 Lv w/Dlt
     C                     Z-ADD*ZERO     $EHDL6           Head 6 Lv w/Dlt
     C                     Z-ADD*ZERO     $EHDL7           Head 7 Lv w/Dlt
     C                     Z-ADD*ZERO     $EHDL8           Head 8 Lv w/Dlt
     C                     Z-ADD*ZERO     $EF2VA           Head 1 Val Lv w
     C                     Z-ADD*ZERO     $EF3VA           Head 2 Val Lv w
     C                     Z-ADD*ZERO     $EF4VA           Head 3 Val Lv w
     C                     Z-ADD*ZERO     $EF5VA           Head 4 Val Lv w
     C                     Z-ADD*ZERO     $EF6VA           Head 5 Val Lv w
     C                     Z-ADD*ZERO     $EF7VA           Head 6 Val Lv w
     C                     Z-ADD*ZERO     $EF8VA           Head 7 Val Lv w
     C                     Z-ADD*ZERO     $EF9VA           Head 8 Val Lv w
     C                     Z-ADD*ZERO     $EGKVA           Head 9 Val Lv w
     C                     Z-ADD*ZERO     $EGLVA           Head 10 Val Lv
     C                     Z-ADD*ZERO     $EGJVA           Head 11 Val Lv
     C                     Z-ADD*ZERO     $EQ8PR           Head 1 Val Lv w
     C                     Z-ADD*ZERO     $EQ9PR           Head 2 Val Lv w
     C                     Z-ADD*ZERO     $ERAPR           Head 3 Val Lv w
     C                     Z-ADD*ZERO     $ERBPR           Head 4 Val Lv w
     C                     Z-ADD*ZERO     $ERCPR           Head 5 Val Lv w
     C                     Z-ADD*ZERO     $ERDPR           Head 6 Val Lv w
     C                     Z-ADD*ZERO     $EREPR           Head 7 Val Lv w
     C                     Z-ADD*ZERO     $ERFPR           Head 8 Val Lv w
     C                     Z-ADD*ZERO     $ESPPR           Head 9 Val Lv w
     C                     Z-ADD*ZERO     $ESQPR           Head 10 Val Lv
     C                     Z-ADD*ZERO     $ESRPR           Head 11 Val Lv
     C                     Z-ADD*ZERO     $EHD1C           Head 1 CM w/Add
     C                     Z-ADD*ZERO     $EHD2C           Head 2 CM w/Add
     C                     Z-ADD*ZERO     $EHA3M           Head 3 CM w/Add
     C                     Z-ADD*ZERO     $EHA4C           Head 4 CM w/Add
     C                     Z-ADD*ZERO     $EHA5C           Head 5 CM w/Add
     C                     Z-ADD*ZERO     $EHA6C           Head 6 CM w/Add
     C                     Z-ADD*ZERO     $EHA68           Head 7 CM w/Add
     C                     Z-ADD*ZERO     $EHA7A           Head 8 CM w/Add
     C                     Z-ADD*ZERO     $EFMVA           Head 1 Val CM w
     C                     Z-ADD*ZERO     $EFNVA           Head 2 Val CM w
     C                     Z-ADD*ZERO     $EFOVA           Head 3 Val CM w
     C                     Z-ADD*ZERO     $EFPVA           Head 4 Val CM w
     C                     Z-ADD*ZERO     $EFQVA           Head 5 Val CM w
     C                     Z-ADD*ZERO     $EFRVA           Head 6 Val CM w
     C                     Z-ADD*ZERO     $EFSVA           Head 7 Val CM w
     C                     Z-ADD*ZERO     $EFTVA           Head 8 Val CM w
     C                     Z-ADD*ZERO     $EGNVA           Head 9 Val CM w
     C                     Z-ADD*ZERO     $EGOVA           Head 10 Val CM
     C                     Z-ADD*ZERO     $EGMVA           Head 11 Val CM
     C                     Z-ADD*ZERO     $EROPR           Head 1 Val CM w
     C                     Z-ADD*ZERO     $ERPPR           Head 2 Val CM w
     C                     Z-ADD*ZERO     $ERQPR           Head 3 Val CM w
     C                     Z-ADD*ZERO     $ERRPR           Head 4 Val CM w
     C                     Z-ADD*ZERO     $ERSPR           Head 5 Val CM w
     C                     Z-ADD*ZERO     $ERTPR           Head 6 Val CM w
     C                     Z-ADD*ZERO     $ERUPR           Head 7 Val CM w
     C                     Z-ADD*ZERO     $ERVPR           Head 8 Val CM w
     C                     Z-ADD*ZERO     $ESSPR           Head 9 Val CM w
     C                     Z-ADD*ZERO     $ESTPR           Head 10 Val CM
     C                     Z-ADD*ZERO     $ESUPR           Head 11 Val CM
     C                     Z-ADD*ZERO     $EH1CM           Head 1 CM w/Dlt
     C                     Z-ADD*ZERO     $EH2CM           Head 2 CM w/Dlt
     C                     Z-ADD*ZERO     $EH3CM           Head 3 CM w/Dlt
     C                     Z-ADD*ZERO     $EH4CM           Head 4 CM w/Dlt
     C                     Z-ADD*ZERO     $EH5CM           Head 5 CM w/Dlt
     C                     Z-ADD*ZERO     $EH6CM           Head 6 CM w/Dlt
     C                     Z-ADD*ZERO     $EH7CM           Head 7 CM w/Dlt
     C                     Z-ADD*ZERO     $EH8CM           Head 8 CM w/Dlt
     C                     Z-ADD*ZERO     $EFUVA           Head 1 Val CM w
     C                     Z-ADD*ZERO     $EFVVA           Head 2 Val CM w
     C                     Z-ADD*ZERO     $EFWVA           Head 3 Val CM w
     C                     Z-ADD*ZERO     $EFXVA           Head 4 Val CM w
     C                     Z-ADD*ZERO     $EFYVA           Head 5 Val CM w
     C                     Z-ADD*ZERO     $EFZVA           Head 6 Val CM w
     C                     Z-ADD*ZERO     $EF0VA           Head 7 Val CM w
     C                     Z-ADD*ZERO     $EF1VA           Head 8 Val CM w
     C                     Z-ADD*ZERO     $EGQVA           Head 9 Val CM w
     C                     Z-ADD*ZERO     $EGRVA           Head 10 Val CM
     C                     Z-ADD*ZERO     $EGPVA           Head 11 Val CM
     C                     Z-ADD*ZERO     $EQ0PR           Head 1 Val CM w
     C                     Z-ADD*ZERO     $EQ1PR           Head 2 Val CM w
     C                     Z-ADD*ZERO     $EQ2PR           Head 3 Val CM w
     C                     Z-ADD*ZERO     $EQ3PR           Head 4 Val CM w
     C                     Z-ADD*ZERO     $EQ4PR           Head 5 Val CM w
     C                     Z-ADD*ZERO     $EQ5PR           Head 6 Val CM w
     C                     Z-ADD*ZERO     $EQ6PR           Head 7 Val CM w
     C                     Z-ADD*ZERO     $EQ7PR           Head 8 Val CM w
     C                     Z-ADD*ZERO     $ESVPR           Head 9 Val CM w
     C                     Z-ADD*ZERO     $ESWPR           Head 10 Val CM
     C                     Z-ADD*ZERO     $ESXPR           Head 11 Val CM
     C                     Z-ADD*ZERO     $EH1SM           Head 1 SUM
     C                     Z-ADD*ZERO     $EH2SM           Head 2 SUM
     C                     Z-ADD*ZERO     $EH3SM           Head 3 SUM
     C                     Z-ADD*ZERO     $EHD4S           Head 4 SUM
     C                     Z-ADD*ZERO     $EHD5S           Head 5 SUM
     C                     Z-ADD*ZERO     $EHD1S           Head 1 SUM 2
     C                     Z-ADD*ZERO     $EHD2M           Head 2 SUM 2
     C                     Z-ADD*ZERO     $EHD3M           Head 3 SUM 2
     C                     Z-ADD*ZERO     $EE6VA           Head 1 Value SU
     C                     Z-ADD*ZERO     $EE7VA           Head 2 Value SU
     C                     Z-ADD*ZERO     $EE8VA           Head 3 Value SU
     C                     Z-ADD*ZERO     $EE9VA           Head 4 Value SU
     C                     Z-ADD*ZERO     $EFAVA           Head 5 Value SU
     C                     Z-ADD*ZERO     $EFBVA           Head 1 Value SU
     C                     Z-ADD*ZERO     $EFCVA           Head 2 Value SU
     C                     Z-ADD*ZERO     $EFDVA           Head 3 Value SU
     C                     Z-ADD*ZERO     $EGSVA           Head 6 Value SU
     C                     Z-ADD*ZERO     $EGTVA           Head 7 Value SU
     C                     Z-ADD*ZERO     $EGUVA           Head 8 Value SU
     C                     Z-ADD*ZERO     $EQSPR           Head 1 Value /H
     C                     Z-ADD*ZERO     $EQTPR           Head 2 Value /H
     C                     Z-ADD*ZERO     $EQUPR           Head 3 Value /H
     C                     Z-ADD*ZERO     $EQVPR           Head 4 Value /H
     C                     Z-ADD*ZERO     $EQWPR           Head 5 Value /H
     C                     Z-ADD*ZERO     $EQXPR           Head 1 Value /H
     C                     Z-ADD*ZERO     $EQYPR           Head 2 Value /H
     C                     Z-ADD*ZERO     $EQZPR           Head 3 Value /H
     C                     Z-ADD*ZERO     $ESYPR           Head 6 Value /H
     C                     Z-ADD*ZERO     $ESZPR           Head 7 Value /H
     C                     Z-ADD*ZERO     $ES0PR           Head 8 Value /H
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $CHMNB           BOH Company Num
     C                     MOVEL*BLANK    $CIXTX           Blank Usr 1 fld
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
     C           W0AL05    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP05  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDA1HMNB    $DHMNB           BOH Company Num
     C                     MOVELA1ABCD    $DABCD           PD Producer Cod
     C                     Z-ADDA1B0DT    $DB0DT           TH Kill Date
     C                     Z-ADDA1BNNB    $DBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    $DBONB           BOL Load Number
     C                     Z-ADDA1CVNB    $DCVNB           TH Tattoo Numbe
     C                     MOVELA1J9ST    $DJ9ST           TH Payment Type
     C                     MOVEL*BLANK    $DIYTX           Th Payment Type
     C                     MOVEL*BLANK    $DJPTX           Text 10 1 USR
     C                     Z-ADDA1AWDT    $DAWDT           TH Purchase Dat
     C                     MOVELA1BICD    $DBICD           TH Group Refere
     C                     MOVELA1CPST    $DCPST           TH Live Purchas
     C                     Z-ADDA1ACPR    $DACPR           TH Live Purchas
     C                     Z-ADDA1B9PR    $DB9PR           TH Live Gross A
     C                     Z-ADDA1CAPR    $DCAPR           TH LIve Net Amt
     C                     MOVELA1C4ST    $DC4ST           TH Resale UOM
     C                     Z-ADDA1AIPR    $DAIPR           TH Recalc Live
     C                     Z-ADDA1A6DT    $DA6DT           TH Pricing Date
     C                     MOVELA1C2ST    $DC2ST           TH Resale Sprea
     C                     Z-ADDA1CXNB    $DCXNB           TH Dead On Arri
     C                     Z-ADDA1CWNB    $DCWNB           TH Head Receive
     C                     Z-ADDA1FCNB    $DFCNB           TH Yard Deads
     C                     Z-ADDA1H9NB    $DH9NB           TH Held Over
     C                     Z-ADDA1FDNB    $DFDNB           TH Head Condemn
     C                     Z-ADDA1FENB    $DFENB           TH Head Killed
     C                     Z-ADDA1HENB    $DHENB           TH Head Adds
     C                     Z-ADDA1HFNB    $DHFNB           TH Head Accepte
     C                     Z-ADDA1CYNB    $DCYNB           TH Live Wgt
     C                     Z-ADDA1LRNB    $DLRNB           TH Adj Live Wgt
     C                     Z-ADDA1E0NB    $DE0NB           TH Hot Wgt
     C                     Z-ADDA1A5PC    $DA5PC           TH Tot Loin Eye
     C                     Z-ADDA1FBNB    $DFBNB           TH Tot Backfat
     C                     Z-ADDA1A4PC    $DA4PC           TH Tot Light Re
     C                     Z-ADDA1F7NB    $DF7NB           TH Avg Live Wgt
     C                     Z-ADD*ZERO     $DKGNB           Hot Weight Tot
     C                     Z-ADDA1HDNB    $DHDNB           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     $DJONB           Hot Wgt/Lean %
     C                     Z-ADDA1F5NB    $DF5NB           TH Avg Light Re
     C                     Z-ADDA1F4NB    $DF4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     $DLFNB           TDE Head Condem
     C                     Z-ADD*ZERO     $DLINB           Head 2
     C                     Z-ADD*ZERO     $DHD3C           Head 3
     C                     Z-ADD*ZERO     $DIINB           Difference +/-
     C                     Z-ADD*ZERO     $DHD4C           Head 4
     C                     Z-ADD*ZERO     $DHD5C           Head 5
     C                     Z-ADD*ZERO     $DH1US           Head 1 USR
     C                     Z-ADD*ZERO     $DH2US           Head 2 USR
     C                     Z-ADD*ZERO     $DHD3U           Head 3 USR
     C                     Z-ADD*ZERO     $DQKPR           Head 1 Value
     C                     Z-ADD*ZERO     $DQLPR           Head 2 Value
     C                     Z-ADD*ZERO     $DQMPR           Head 3 Value
     C                     Z-ADD*ZERO     $DQNPR           Head 4 Value
     C                     Z-ADD*ZERO     $DQOPR           Head 5 Value
     C                     Z-ADD*ZERO     $DQPPR           Head 1 Value US
     C                     Z-ADD*ZERO     $DQQPR           Head 2 Value US
     C                     Z-ADD*ZERO     $DQRPR           Head 3 Value US
     C                     Z-ADD*ZERO     $DSGPR           Head 6 Value
     C                     Z-ADD*ZERO     $DSHPR           Head 7 Value
     C                     Z-ADD*ZERO     $DSIPR           Head 8 Value
     C                     Z-ADD*ZERO     $DQSPR           Head 1 Value /H
     C                     Z-ADD*ZERO     $DQTPR           Head 2 Value /H
     C                     Z-ADD*ZERO     $DQUPR           Head 3 Value /H
     C                     Z-ADD*ZERO     $DQVPR           Head 4 Value /H
     C                     Z-ADD*ZERO     $DQWPR           Head 5 Value /H
     C                     Z-ADD*ZERO     $DQXPR           Head 1 Value /H
     C                     Z-ADD*ZERO     $DQYPR           Head 2 Value /H
     C                     Z-ADD*ZERO     $DQZPR           Head 3 Value /H
     C                     Z-ADD*ZERO     $DSJPR           Head 6 Value /H
     C                     Z-ADD*ZERO     $DSKPR           Head 7 Value /H
     C                     Z-ADD*ZERO     $DSLPR           Head 8 Value /H
     C                     Z-ADD*ZERO     $DL1NB           Hot Wgt/Loine A
     C                     Z-ADDA1F3NB    $DF3NB           TH Avg Loin Eye
     C                     Z-ADD*ZERO     $DL0NB           Hot Wgt/Backf A
     C                     Z-ADDA1F2NB    $DF2NB           TH Avg Backfat
     C                     Z-ADDA1AVPC    $DAVPC           TH Std Yield Pe
     C                     Z-ADDA1AWPC    $DAWPC           TH Actual Yield
     C                     Z-ADDA1CBPR    $DCBPR           TH Payment Gros
     C                     Z-ADD*ZERO     $DB5NB           Head Total USR
     C                     Z-ADDA1CWPC    $DCWPC           TH Adj Actual Y
     C                     Z-ADDA1A8PC    $DA8PC           TH Yield Differ
     C                     Z-ADDA1A7PC    $DA7PC           TH Recalc Live
     C                     Z-ADDA1B8PR    $DB8PR           TH CM Market Pr
     C                     Z-ADDA1AMPR    $DAMPR           TH CM Base Mkt
     C                     Z-ADDA1ANPR    $DANPR           TH CM Base Mkt
     C                     Z-ADDA1AYVA    $DAYVA           TH CM Sort Disc
     C                     Z-ADDA1AWVA    $DAWVA           TH CM Yield Gai
     C                     Z-ADDA1AOPR    $DAOPR           TH CM Base Carc
     C                     Z-ADDA1AXVA    $DAXVA           TH CM LN AddOn/
     C                     Z-ADDA1APPR    $DAPPR           TH CM Carcass G
     C                     Z-ADDA1ASPR    $DASPR           TH Deduction Am
     C                     Z-ADDA1A4VA    $DA4VA           TH Total Net WO
     C                     Z-ADDA1ATPR    $DATPR           TH Carcass Net
     C                     Z-ADDA1A5VA    $DA5VA           TH Additions Am
     C                     Z-ADDA1CCPR    $DCCPR           Th Payment Net
     C                     Z-ADDA1LPNB    $DLPNB           TH AP Voucher/D
     C                     Z-ADDA1CDPR    $DCDPR           TH Freight Amou
     C                     Z-ADDA1A7VA    $DA7VA           TH Accrual Amou
     C                     Z-ADDA1A2PR    $DA2PR           TH Fixed Cost A
     C                     MOVELA1JWST    $DJWST           TH Calc Net Sts
     C                     MOVELA1CWST    $DCWST           TH Payment Sts
     C                     MOVELA1D7ST    $DD7ST           TH Header Error
     C                     MOVELA1D8ST    $DD8ST           TH Detail Error
     C                     MOVELA1DWST    $DDWST           TH Kill Balanci
     C                     MOVELA1D6ST    $DD6ST           TH Bal to Kill
     C                     Z-ADDA1GHNB    $DGHNB           TH Commission A
     C                     Z-ADDA1BYDT    $DBYDT           TH Voucher Paym
     C                     MOVELA1E0ST    $DE0ST           TH User Error O
     C                     MOVELA1E1ST    $DE1ST           TH Held Over Re
     C                     MOVELA1E2ST    $DE2ST           TH Sex
     C                     Z-ADDA1BSDT    $DBSDT           TH Held/Ovr Com
     C                     Z-ADDA1BTDT    $DBTDT           TH Commission P
     C                     Z-ADDA1BUDT    $DBUDT           TH Actual Check
     C                     Z-ADDA1HGNB    $DHGNB           TH Shipped Weig
     C                     Z-ADDA1HHNB    $DHHNB           TH Avg Hot Wgt
     C                     Z-ADDA1HINB    $DHINB           TH FFLI
     C                     Z-ADDA1A3PR    $DA3PR           TH Kill Product
     C                     Z-ADDA1A4PR    $DA4PR           TH Cut Product
     C                     Z-ADDA1A6PR    $DA6PR           TH Render Produ
     C                     Z-ADDA1J9NB    $DJ9NB           TH Head Exclude
     C                     Z-ADDA1D6PR    $DD6PR           TH CM Bse Mkt L
     C                     Z-ADDA1D7PR    $DD7PR           TH CM Bse Mkt C
     C                     Z-ADDA1D8PR    $DD8PR           TH CM Srt Dsc L
     C                     Z-ADDA1D9PR    $DD9PR           TH CM Srt Dsc C
     C                     Z-ADDA1EAPR    $DEAPR           TH CM Yld G/L L
     C                     Z-ADDA1EBPR    $DEBPR           TH CM Yld G/L C
     C                     Z-ADDA1ECPR    $DECPR           TH CM Crc Val L
     C                     Z-ADDA1EDPR    $DEDPR           TH CM Crc Val C
     C                     Z-ADDA1EEPR    $DEEPR           TH CM Lean Prem
     C                     Z-ADDA1EFPR    $DEFPR           TH CM Lean Prem
     C                     Z-ADDA1EGPR    $DEGPR           TH CM Gross Liv
     C                     Z-ADDA1EHPR    $DEHPR           TH CM Gross Car
     C                     MOVELA1KAST    $DKAST           TH Source Type
     C                     MOVELA1J7ST    $DJ7ST           TH Scale Ticket
     C                     Z-ADDA1OXNB    $DOXNB           TH HPS Movement
     C                     MOVELA1LKST    $DLKST           TH Source Code
     C                     MOVELA1LLST    $DLLST           TH Hog Class Ty
     C                     MOVELA1J8ST    $DJ8ST           TH Posted to HP
     C                     MOVELA1LIST    $DLIST           TH Schedule Kil
     C                     MOVELA1LJST    $DLJST           TH Shift Held O
     C                     MOVELA1NZTX    $DNZTX           TH State
     C                     MOVELA1HJCD    $DHJCD           TH Unused Code
     C                     MOVELA1R4ST    $DR4ST           TH Unused Sts 2
     C                     MOVELA1R5ST    $DR5ST           TH Commission S
     C                     MOVELA1R6ST    $DR6ST           TH Paid 2 Week
     C                     MOVELA1R7ST    $DR7ST           TH Unused Sts 1
     C                     Z-ADDA1THWT    $DTHWT           TH DOA Weight
     C                     Z-ADDA1T2WT    $DT2WT           TH Avg Lean % E
     C                     Z-ADDA1THHD    $DTHHD           TH HPS Farm Sit
     C                     Z-ADDA1T2HD    $DT2HD           TH Shift Held O
     C                     Z-ADDA1OBPR    $DOBPR           TH Sorting Amou
     C                     Z-ADDA1KOER    $DKOER           TH Head Identif
     C                     Z-ADDA1OPIR    $DOPIR           TH Percent Iden
     C                     Z-ADDA1OPEM    $DOPEM           TH Percent Acce
     C                     Z-ADDA1IORP    $DIORP           TH Head Adjuste
     C                     Z-ADDA1OWEO    $DOWEO           TH PHA Head Add
     C                     MOVELA1OQET    $DOQET           TH PHA Add Type
     C                     MOVELA1URST    $DURST           TH PHA Average
     C                     MOVELA1USST    $DUSST           TH PHA Add Reas
     C                     Z-ADDA1HHPC    $DHHPC           TH PHA Yield Pe
     C                     Z-ADDA1S9PR    $DS9PR           TH PHA Lean Prm
     C                     Z-ADDA1TAPR    $DTAPR           TH VC Gross Val
     C                     Z-ADDA1TBPR    $DTBPR           TH Excluded Gro
     C                     Z-ADDA1JFUR    $DJFUR           TH Avg Lean %
     C                     Z-ADDA1KRIF    $DKRIF           TH Broken Back
     C                     Z-ADDA1KORF    $DKORF           TH Hot Scl Uplo
     C                     Z-ADDA1KAPR    $DKAPR           TH Unused Nbr 4
     C                     Z-ADDA1KROT    $DKROT           TH Excluded Car
     C                     Z-ADDA1OTJG    $DOTJG           TH Excluded Pre
     C                     Z-ADDA1IRJG    $DIRJG           TH Unused Nbr 7
     C                     Z-ADDA1IMJF    $DIMJF           TH Unused Nbr 8
     C                     Z-ADDA1IRGF    $DIRGF           TH Unused Nbr 9
     C                     Z-ADDA1KRJF    $DKRJF           TH Unused Nbr 1
     C                     Z-ADDA1OJRF    $DOJRF           TH Break Even P
     C                     Z-ADDA1KFOR    $DKFOR           TH Meat Value F
     C                     Z-ADDA1ORJK    $DORJK           TH Yld Parm Adj
     C                     Z-ADDA1OMVJ    $DOMVJ           TH PHA Sort Dis
     C                     Z-ADDA1MVNF    $DMVNF           TH Avg Loin Eye
     C                     Z-ADDA1MCNF    $DMCNF           TH Avg Backfat
     C                     Z-ADDA1NCNF    $DNCNF           TH HITCH Old Pa
     C                     Z-ADDA1NCHF    $DNCHF           TH MPR Sort Los
     C                     Z-ADDA1IGIR    $DIGIR           TH Unused Nbr 1
     C                     Z-ADDA1KFJR    $DKFJR           TH Unused Nbr 2
     C                     Z-ADDA1EADT    $DEADT           TH Cold Scl Upl
     C                     Z-ADDA1EBDT    $DEBDT           TH Cold Scl Upl
     C                     Z-ADDA1ECDT    $DECDT           TH Head LFT
     C                     Z-ADDA1EDDT    $DEDDT           TH Head EUT/KOA
     C                     Z-ADDA1EEDT    $DEEDT           TH Unused Date
     C                     MOVELA1U4ST    $DU4ST           TH Unused Sts 1
     C                     MOVELA1U5ST    $DU5ST           TH Unused Sts 2
     C                     MOVELA1U6ST    $DU6ST           TH Unused Sts 3
     C                     MOVELA1U7ST    $DU7ST           TH Unused Sts 4
     C                     MOVELA1U8ST    $DU8ST           TH Unused Sts 5
     C                     MOVELA1U9ST    $DU9ST           TH Unused Sts 6
     C                     MOVELA1VAST    $DVAST           TH Unused Sts 7
     C                     MOVELA1VBST    $DVBST           TH Unused Sts 8
     C                     MOVELA1AGCD    $DAGCD           GN Genetic Code
     C                     MOVELA1BECD    $DBECD           HC Class Code
     C                     MOVELA1BDCD    $DBDCD           DF Defect Code
     C                     MOVELA1CSCD    $DCSCD           THP Process Cod
     C                     MOVELA1AECD    $DAECD           PL Location Cod
     C                     MOVELA1ACCD    $DACCD           HB Buyer Code
     C                     MOVELA1AAVN    $DAAVN           RS User Changed
     C                     Z-ADDA1AADT    $DAADT           RS Date Changed
     C                     Z-ADDA1AMTM    $DAMTM           RS Time Changed
     C                     MOVELA1AJST    $DAJST           RS Record Statu
     C                     MOVELA1AHVN    $DAHVN           RS Job
     C                     MOVELA1AGVN    $DAGVN           RS Program
     C                     MOVELA1ABVN    $DABVN           RS User Added
     C                     Z-ADDA1ABDT    $DABDT           RS Date Added
     C                     Z-ADDA1ABTM    $DABTM           RS Time Added
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
      * CASE: CUR.TH Payment Type is Live
     C           $DJ9ST    IFEQ 'L'                        *IF
      * Adds/Dlts
      * CASE: CUR.Difference +/- is GE ZERO
     C           $DIINB    IFGE *ZERO                      *IF
     C                     ADD  $DLFNB    $EHDL1           Head 1 Lv w/Add
     C                     ADD  $DLINB    $EHD2L           Head 2 Lv w/Add
     C                     ADD  $DHD3C    $EHD3L           Head 3 Lv w/Add
     C                     ADD  $DHD4C    $EHD4L           Head 4 Lv w/Add
     C                     ADD  $DHD5C    $EHD5L           Head 5 Lv w/Add
     C                     ADD  $DH1US    $EHD6L           Head 6 Lv w/Add
     C                     ADD  $DH2US    $EHD7L           Head 7 Lv w/Add
     C                     ADD  $DHD3U    $EHD8L           Head 8 Lv w/Add
     C                     ADD  $DQKPR    $EFEVA           Head 1 Val Lv w
     C                     ADD  $DQLPR    $EFFVA           Head 2 Val Lv w
     C                     ADD  $DQMPR    $EFGVA           Head 3 Val Lv w
     C                     ADD  $DQNPR    $EFHVA           Head 4 Val Lv w
     C                     ADD  $DQOPR    $EFIVA           Head 5 Val Lv w
     C                     ADD  $DQPPR    $EFJVA           Head 6 Val Lv w
     C                     ADD  $DQQPR    $EFKVA           Head 7 Val Lv w
     C                     ADD  $DQRPR    $EFLVA           Head 8 Val Lv w
     C                     ADD  $DSGPR    $EGHVA           Head 9 Val Lv w
     C                     ADD  $DSHPR    $EGIVA           Head 10 Val Lv
     C                     ADD  $DSIPR    $EGGVA           Head 11 Val Lv
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DLFNB    $EHD1L           Head 1 Lv w/Dlt
     C                     ADD  $DLINB    $EHDL2           Head 2 Lv w/Dlt
     C                     ADD  $DHD3C    $EHDL3           Head 3 Lv w/Dlt
     C                     ADD  $DHD4C    $EHDL4           Head 4 Lv w/Dlt
     C                     ADD  $DHD5C    $EHDL5           Head 5 Lv w/Dlt
     C                     ADD  $DH1US    $EHDL6           Head 6 Lv w/Dlt
     C                     ADD  $DH2US    $EHDL7           Head 7 Lv w/Dlt
     C                     ADD  $DHD3U    $EHDL8           Head 8 Lv w/Dlt
     C                     ADD  $DQKPR    $EF2VA           Head 1 Val Lv w
     C                     ADD  $DQLPR    $EF3VA           Head 2 Val Lv w
     C                     ADD  $DQMPR    $EF4VA           Head 3 Val Lv w
     C                     ADD  $DQNPR    $EF5VA           Head 4 Val Lv w
     C                     ADD  $DQOPR    $EF6VA           Head 5 Val Lv w
     C                     ADD  $DQPPR    $EF7VA           Head 6 Val Lv w
     C                     ADD  $DQQPR    $EF8VA           Head 7 Val Lv w
     C                     ADD  $DQRPR    $EF9VA           Head 8 Val Lv w
     C                     ADD  $DSGPR    $EGKVA           Head 9 Val Lv w
     C                     ADD  $DSHPR    $EGLVA           Head 10 Val Lv
     C                     ADD  $DSIPR    $EGJVA           Head 11 Val Lv
     C                     END                             *FI
     C                     ELSE
      * CASE: CUR.TH Payment Type is Carcass Merit
     C           $DJ9ST    IFEQ 'C'                        *IF
      * Adds/Dlts
      * CASE: CUR.Difference +/- is GE ZERO
     C           $DIINB    IFGE *ZERO                      *IF
     C                     ADD  $DLFNB    $EHD1C           Head 1 CM w/Add
     C                     ADD  $DLINB    $EHD2C           Head 2 CM w/Add
     C                     ADD  $DHD3C    $EHA3M           Head 3 CM w/Add
     C                     ADD  $DHD4C    $EHA4C           Head 4 CM w/Add
     C                     ADD  $DHD5C    $EHA5C           Head 5 CM w/Add
     C                     ADD  $DH1US    $EHA6C           Head 6 CM w/Add
     C                     ADD  $DH2US    $EHA68           Head 7 CM w/Add
     C                     ADD  $DHD3U    $EHA7A           Head 8 CM w/Add
     C                     ADD  $DQKPR    $EFMVA           Head 1 Val CM w
     C                     ADD  $DQLPR    $EFNVA           Head 2 Val CM w
     C                     ADD  $DQMPR    $EFOVA           Head 3 Val CM w
     C                     ADD  $DQNPR    $EFPVA           Head 4 Val CM w
     C                     ADD  $DQOPR    $EFQVA           Head 5 Val CM w
     C                     ADD  $DQPPR    $EFRVA           Head 6 Val CM w
     C                     ADD  $DQQPR    $EFSVA           Head 7 Val CM w
     C                     ADD  $DQRPR    $EFTVA           Head 8 Val CM w
     C                     ADD  $DSGPR    $EGNVA           Head 9 Val CM w
     C                     ADD  $DSHPR    $EGOVA           Head 10 Val CM
     C                     ADD  $DSIPR    $EGMVA           Head 11 Val CM
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $DLFNB    $EH1CM           Head 1 CM w/Dlt
     C                     ADD  $DLINB    $EH2CM           Head 2 CM w/Dlt
     C                     ADD  $DHD3C    $EH3CM           Head 3 CM w/Dlt
     C                     ADD  $DHD4C    $EH4CM           Head 4 CM w/Dlt
     C                     ADD  $DHD5C    $EH5CM           Head 5 CM w/Dlt
     C                     ADD  $DH1US    $EH6CM           Head 6 CM w/Dlt
     C                     ADD  $DH2US    $EH7CM           Head 7 CM w/Dlt
     C                     ADD  $DHD3U    $EH8CM           Head 8 CM w/Dlt
     C                     ADD  $DQKPR    $EFUVA           Head 1 Val CM w
     C                     ADD  $DQLPR    $EFVVA           Head 2 Val CM w
     C                     ADD  $DQMPR    $EFWVA           Head 3 Val CM w
     C                     ADD  $DQNPR    $EFXVA           Head 4 Val CM w
     C                     ADD  $DQOPR    $EFYVA           Head 5 Val CM w
     C                     ADD  $DQPPR    $EFZVA           Head 6 Val CM w
     C                     ADD  $DQQPR    $EF0VA           Head 7 Val CM w
     C                     ADD  $DQRPR    $EF1VA           Head 8 Val CM w
     C                     ADD  $DSGPR    $EGQVA           Head 9 Val CM w
     C                     ADD  $DSHPR    $EGRVA           Head 10 Val CM
     C                     ADD  $DSIPR    $EGPVA           Head 11 Val CM
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           $DHD3U    SUB  $DHD3C    YL0001           DIFF Total Head
     C           $DQRPR    SUB  $DQMPR    YL0002           DIFF Total $
     C           $DQZPR    SUB  $DQUPR    YL0003           DIFF Total $/Hd
      * Upd Tattoo Info       RT - Eval Tran Value Hdr OUTF  * 
     C                     EXSR SFRVGN
     C                     ADD  $DLFNB    $EH1SM           Head 1 SUM
     C                     ADD  $DLINB    $EH2SM           Head 2 SUM
     C                     ADD  $DHD3C    $EH3SM           Head 3 SUM
     C                     ADD  $DHD4C    $EHD4S           Head 4 SUM
     C                     ADD  $DHD5C    $EHD5S           Head 5 SUM
     C                     ADD  $DH1US    $EHD1S           Head 1 SUM 2
     C                     ADD  $DH2US    $EHD2M           Head 2 SUM 2
     C                     ADD  $DHD3U    $EHD3M           Head 3 SUM 2
     C                     ADD  $DQKPR    $EE6VA           Head 1 Value SU
     C                     ADD  $DQLPR    $EE7VA           Head 2 Value SU
     C                     ADD  $DQMPR    $EE8VA           Head 3 Value SU
     C                     ADD  $DQNPR    $EE9VA           Head 4 Value SU
     C                     ADD  $DQOPR    $EFAVA           Head 5 Value SU
     C                     ADD  $DQPPR    $EFBVA           Head 1 Value SU
     C                     ADD  $DQQPR    $EFCVA           Head 2 Value SU
     C                     ADD  $DQRPR    $EFDVA           Head 3 Value SU
     C                     ADD  $DSGPR    $EGSVA           Head 6 Value SU
     C                     ADD  $DSHPR    $EGTVA           Head 7 Value SU
     C                     ADD  $DSIPR    $EGUVA           Head 8 Value SU
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN A1HMNB    WZA001           BOH Company Num
     C                     Z-ADDA1HMNB    WZA001
     C           *LIKE     DEFN A1B0DT    WZA002           TH Kill Date
     C                     Z-ADDA1B0DT    WZA002
     C           *LIKE     DEFN A1ABCD    WZA003           PD Producer Cod
     C                     MOVELA1ABCD    WZA003
     C           *LIKE     DEFN A1BNNB    WZA004           BOH Buy Order N
     C                     Z-ADDA1BNNB    WZA004
     C           *LIKE     DEFN A1BONB    WZA005           BOL Load Number
     C                     Z-ADDA1BONB    WZA005
     C           *LIKE     DEFN A1CVNB    WZA006           TH Tattoo Numbe
     C                     Z-ADDA1CVNB    WZA006
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@A1CPCH                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * EOFSEL:  Kill Date
      * CASE: DB1.TH Kill Date GT PAR.Date To   USR
     C           A1B0DT    IFGT P2B4DT                     *IF
      * EOF File A            US - STR User Source Functions  * 
     C                     MOVEL'1'       W0EOFA           END OF FILE
     C                     END                             *FI
      * REQSEL:  Include Market
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Include Market USR is No
      *   |- c2    : DB1.TH Hog Class Type is Market
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P3TXST    IFEQ 'N'                        *IF
     C           A1LLST    IFEQ 'M'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * REQSEL:  Include Subject
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Include Subject USR is No
      *   |- c2    : DB1.TH Hog Class Type is Subject
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P3TYST    IFEQ 'N'                        *IF
     C           A1LLST    IFEQ 'S'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * REQSEL:  Include Resale
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Include Resale USR is No
      *   |- c2    : DB1.TH Hog Class Type is Resale
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P3TWST    IFEQ 'N'                        *IF
     C           A1LLST    IFEQ 'R'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * OPTSEL:  Producer
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.PD Producer Code is Entered
      *   |- c2    : PAR.PD Producer Code NE DB1.PD Producer Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1ABCD    IFNE *BLANK                     *IF
     C           P1ABCD    IFNE A1ABCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * OPTSEL:  Payment Type
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.TH Payment Type is Carcass/Live
      *   |- c2    : PAR.TH Payment Type NE DB1.TH Payment Type
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P3J9ST    IFEQ 'C'                        *IF
     C           P3J9ST    OREQ 'L'
     C           P3J9ST    IFNE A1J9ST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * OPTSEL:  Tattoo Number
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.TH Tattoo Number is NE Zero
      *   |- c2    : PAR.TH Tattoo Number NE DB1.TH Tattoo Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P3CVNB    IFNE *ZERO                      *IF
     C           P3CVNB    IFNE A1CVNB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * OPTSEL:  Tattoo Type Sts
      * CASE: PAR.Tattoo Type Sts USR is End in Zero
     C           P3UJST    IFEQ 'E'                        *IF
     C           A1CVNB    DIV  10        YRWF00           *Modulo work fi
     C                     MVR            YL0004           Remainder USR
      * Check Remainder
      * CASE: LCL.Remainder USR is GT Zero
     C           YL0004    IFGT *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * INTSEL:  Head Received
      * CASE: DB1.TH Head Received is *Zeros
     C           A1CWNB    IFEQ *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        BOH Company Num
     C                     MOVEL*BLANK    W0AL01  1        TH Kill Date
     C                     MOVEL*BLANK    W0AL02  1        PD Producer Cod
     C                     MOVEL*BLANK    W0AL03  1        BOH Buy Order N
     C                     MOVEL*BLANK    W0AL04  1        BOL Load Number
     C                     MOVEL*BLANK    W0AL05  1        TH Tattoo Numbe
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        TH Kill Date
     C                     MOVEL'Y'       W0AL02  1        PD Producer Cod
     C                     MOVEL'Y'       W0AL03  1        BOH Buy Order N
     C                     MOVEL'Y'       W0AL04  1        BOL Load Number
     C                     MOVEL'Y'       W0AL05  1        TH Tattoo Numbe
     C                     ELSE
      * Next record - Detect level breaks
     C           A1HMNB    IFNE WZA001                     BOH Company Num
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           A1B0DT    IFNE WZA002                     TH Kill Date
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           A1ABCD    IFNE WZA003                     PD Producer Cod
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           A1BNNB    IFNE WZA004                     BOH Buy Order N
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           A1BONB    IFNE WZA005                     BOL Load Number
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C           A1CVNB    IFNE WZA006                     TH Tattoo Numbe
     C           W0AL04    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL05
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL05    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP05
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of final totals format
      * Live w/Adds
     C                     EXSR UCSUBR                     Live w/Adds
      * Live w/Dlts
     C                     EXSR UDSUBR                     Live w/Dlts
      * Carc w/Adds
     C                     EXSR UESUBR                     Carc w/Adds
      * Carc w/Dlts
     C                     EXSR UFSUBR                     Carc w/Dlts
      * Total
     C                     EXSR UGSUBR                     Total
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 21
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$EFINTTL
     C                     END
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Hot Scl Value Sum PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Hot Scl Value Sum PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
      * 1PG = PAR By name
     C                     Z-ADDP1HMNB    $BHMNB           BOH Company Num
     C                     Z-ADDP2B4DT    $BB4DT           Date To   USR
     C                     MOVELP3TXST    $BTXST           Include Market
     C                     MOVELP3TYST    $BTYST           Include Subject
     C                     MOVELP3TWST    $BTWST           Include Resale
     C                     MOVELP1ABCD    $BABCD           PD Producer Cod
     C                     MOVELP3J9ST    $BJ9ST           TH Payment Type
     C                     Z-ADDP3CVNB    $BCVNB           TH Tattoo Numbe
     C                     Z-ADDP1B0DT    $BB3DT           Date From USR
      * Val Company Number    XF - STR Order Management Sys  * 
     C                     CALL 'PDGZXFR'              90  Val Company Num
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1HMNB    WQ0001  30       CC Company Numb
     C           $BEUTX    PARM *BLANK    WQ0002 30        Oms Name
     C           WUG3ST    PARM *BLANK    WQ0003  1        Invalid Y/N USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGZXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Producer Name
      * CASE: PAR.PD Producer Code is Entered
     C           P1ABCD    IFNE *BLANK                     *IF
     C                     MOVEL*BLANK    $BA4TX           Producer Name
      * Producer Name         DRV
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SARVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $BA4TX           Producer Name
     C                     MOVEL'*All'    $BA4TX           Producer Name
     C                     END                             *FI
      * Payment Type
      * CASE: 1PG.TH Payment Type is Carcass/Live
     C           $BJ9ST    IFEQ 'C'                        *IF
     C           $BJ9ST    OREQ 'L'
      * 1PG.Condition Name USR = Condition name of 1PG.TH Payment Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100717   Y2LSNO  70       List number
     C                     PARM $BJ9ST    W0INVL 25        TH Payment Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BC4TX    PARM           W0CNNM 25        Condition Name
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $BC4TX           Condition Name
     C                     MOVEL'*All'    $BC4TX           Condition Name
     C                     END                             *FI
      * 1PG.Condition Name 2 USR = Condition name of 1PG.Include Market U
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100042   Y2LSNO  70       List number
     C                     PARM $BTXST    W0INVL 25        Include Market
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BI2TX    PARM           W0CNNM 25        Condition Name
      *
      * 1PG.Condition Name 3 USR = Condition name of 1PG.Include Subject
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100042   Y2LSNO  70       List number
     C                     PARM $BTYST    W0INVL 25        Include Subject
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BI3TX    PARM           W0CNNM 25        Condition Name
      *
      * 1PG.Condition Name 4 USR = Condition name of 1PG.Include Resale U
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100042   Y2LSNO  70       List number
     C                     PARM $BTWST    W0INVL 25        Include Resale
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BI4TX    PARM           W0CNNM 25        Condition Name
      *
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Date From USR to display format
      * Convert date
     C           1000000   ADD  $BB3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBB3DT
      * Convert Date To   USR to display format
      * Convert date
     C           1000000   ADD  $BB4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBB4DT
      * Print format
     C                     WRITE$B1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print BOH Company Number of Prt Hot Scl Value Sum PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP00
     C                     END                             FI
      * Print TH Kill Date of Prt Hot Scl Value Sum PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print PD Producer Code of Prt Hot Scl Value Sum PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print BOH Buy Order Number of Prt Hot Scl Value Sum PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print BOL Load Number of Prt Hot Scl Value Sum PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print TH Tattoo Number of Prt Hot Scl Value Sum PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP05    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP05    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP05
     C                     END                             FI
      * Print Detail line of Prt Hot Scl Value Sum PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * CUR.Th Payment Type Desc Usr = Condition name of CUR.TH Payment T
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100717   Y2LSNO  70       List number
     C                     PARM $DJ9ST    W0INVL 25        TH Payment Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $DIYTX    PARM           W0CNNM 25        Th Payment Type
      *
      * Rtv Tattoo Value      RT - Eval Tran Value Dtl OUTF  * 
     C                     EXSR SBRVGN
      * Rtv Add/Paid Value    RT - Carcass Detail  * 
     C                     EXSR SCRVGN
      * Actual
      * CASE: DB1.TH Payment Type is Live
     C           A1J9ST    IFEQ 'L'                        *IF
     C                     Z-ADD*ZERO     $DQQPR           Head 2 Value US
     C                     Z-ADD*ZERO     $DQYPR           Head 2 Value /H
     C                     Z-ADDA1FENB    $DHD3U           Head 3 USR
     C                     Z-ADDA1CBPR    $DQRPR           Head 3 Value US
      * CASE: CUR.TH Head Killed is Not Zero
     C           $DFENB    IFNE *ZERO                      *IF
     C           A1CBPR    DIV  $DFENB    $DQZPR    H      Head 3 Value /H
     C                     END                             *FI
     C                     END                             *FI
     C           $DHD3U    SUB  $DHD3C    $DIINB           Difference +/-
      * Options
     C                     EXSR UBSUBR                     Options
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert TH Kill Date to display format
      * Convert date
     C           1000000   ADD  $DB0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDB0DT
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Hot Scl Value Sum PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  9         W0FSUM
     C                     END                             FI
      *
      * * BOH Company Number of Prt Hot Scl Value Sum PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  5         W0FSUM
     C                     END                             FI
      *
      * * TH Kill Date of Prt Hot Scl Value Sum PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * PD Producer Code of Prt Hot Scl Value Sum PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Buy Order Number of Prt Hot Scl Value Sum PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOL Load Number of Prt Hot Scl Value Sum PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Tattoo Number of Prt Hot Scl Value Sum PF
     C           W0AP05    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line of Prt Hot Scl Value Sum PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD4         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           ACABCD           PD Producer Cod
      * Setup key
     C                     MOVEL$BABCD    ACABCD           PD Producer Cod
      * Establish starting position
     C           KRSSA     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELACAGTX    $BA4TX           PD Name
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Tattoo Value      RT - Eval Tran Value Dtl OUTF  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     $DLFNB           TDE Head Condem
     C                     Z-ADD*ZERO     $DLINB           Head 2
     C                     Z-ADD*ZERO     $DHD3C           Head 3
     C                     Z-ADD*ZERO     $DHD4C           Head 4
     C                     Z-ADD*ZERO     $DHD5C           Head 5
     C                     Z-ADD*ZERO     $DH1US           Head 1 USR
     C                     Z-ADD*ZERO     $DQKPR           Head 1 Value
     C                     Z-ADD*ZERO     $DQLPR           Head 2 Value
     C                     Z-ADD*ZERO     $DQMPR           Head 3 Value
     C                     Z-ADD*ZERO     $DQNPR           Head 4 Value
     C                     Z-ADD*ZERO     $DQOPR           Head 5 Value
     C                     Z-ADD*ZERO     $DQPPR           Head 1 Value US
     C                     Z-ADD*ZERO     $DQSPR           Head 1 Value /H
     C                     Z-ADD*ZERO     $DQTPR           Head 2 Value /H
     C                     Z-ADD*ZERO     $DQUPR           Head 3 Value /H
     C                     Z-ADD*ZERO     $DQVPR           Head 4 Value /H
     C                     Z-ADD*ZERO     $DQWPR           Head 5 Value /H
     C                     Z-ADD*ZERO     $DQXPR           Head 1 Value /H
      * Declare restrictor key work fields
     C           *LIKE     DEFN ERHMNB    WQSB01           BOH Company Num
     C           *LIKE     DEFN ERBNNB    WQSB02           BOH Buy Order N
     C           *LIKE     DEFN ERBONB    WQSB03           BOL Load Number
     C           *LIKE     DEFN ERCVNB    WQSB04           TH Tattoo Numbe
     C           *LIKE     DEFN ERB0DT    WQSB05           TH Kill Date
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           BOH Company Num
     C                     KFLD           WQSB02           BOH Buy Order N
     C                     KFLD           WQSB03           BOL Load Number
     C                     KFLD           WQSB04           TH Tattoo Numbe
     C                     KFLD           WQSB05           TH Kill Date
      * Setup key
     C                     Z-ADD$DHMNB    WQSB01           BOH Company Num
     C                     Z-ADD$DBNNB    WQSB02           BOH Buy Order N
     C                     Z-ADD$DBONB    WQSB03           BOL Load Number
     C                     Z-ADD$DCVNB    WQSB04           TH Tattoo Numbe
     C                     Z-ADD$DB0DT    WQSB05           TH Kill Date
      * Establish starting position
     C           KRSSB     SETLL@ERCPDF                    *
     C           KRSSB     READE@ERCPDF                  90*
      * Data record not found
     C   90                MOVEL'PRK0897' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.ETV NonExcep/Excep is Non-Exception
     C           ERUBST    IFEQ 'N'                        *IF
     C                     ADD  1         $DLFNB           TDE Head Condem
     C                     ADD  ERJ4PR    $DQKPR           Head 1 Value
     C                     ADD  1         $DHD3C           Head 3
     C                     ADD  ERJ4PR    $DQMPR           Head 3 Value
      * Valid Deleted
      * CASE: DB1.ETV Accepted/Deleted is Deleted
     C           ERUCST    IFEQ 'D'                        *IF
     C                     ADD  1         $DHD4C           Head 4
     C                     ADD  ERJ4PR    $DQNPR           Head 4 Value
     C                     ADD  1         $DH1US           Head 1 USR
     C                     ADD  ERJ4PR    $DQPPR           Head 1 Value US
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.ETV NonExcep/Excep is Exception
     C           ERUBST    IFEQ 'E'                        *IF
     C                     ADD  1         $DLINB           Head 2
     C                     ADD  ERJ4PR    $DQLPR           Head 2 Value
     C                     ADD  1         $DHD3C           Head 3
     C                     ADD  ERJ4PR    $DQMPR           Head 3 Value
      * Exception Deleted
      * CASE: DB1.ETV Accepted/Deleted is Deleted
     C           ERUCST    IFEQ 'D'                        *IF
     C                     ADD  1         $DHD5C           Head 5
     C                     ADD  ERJ4PR    $DQOPR           Head 5 Value
     C                     ADD  1         $DH1US           Head 1 USR
     C                     ADD  ERJ4PR    $DQPPR           Head 1 Value US
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSB     READE@ERCPDF                  90*
     C                     ENDDO
      * USER: Exit processing
      * Head 1
      * CASE: PAR.Head 1 is Not Zero
     C           $DLFNB    IFNE 0                          *IF
     C           $DQKPR    DIV  $DLFNB    $DQSPR    H      Head 1 Value /H
     C                     END                             *FI
      * Head 2
      * CASE: PAR.Head 2 is Not Zero
     C           $DLINB    IFNE 0                          *IF
     C           $DQLPR    DIV  $DLINB    $DQTPR    H      Head 2 Value /H
     C                     END                             *FI
      * Head 3
      * CASE: PAR.Head 3 is Not Zero
     C           $DHD3C    IFNE 0                          *IF
     C           $DQMPR    DIV  $DHD3C    $DQUPR    H      Head 3 Value /H
     C                     END                             *FI
      * Head 4
      * CASE: PAR.Head 4 is Not Zero
     C           $DHD4C    IFNE 0                          *IF
     C           $DQNPR    DIV  $DHD4C    $DQVPR    H      Head 4 Value /H
     C                     END                             *FI
      * Head 5
      * CASE: PAR.Head 5 is Not Zero
     C           $DHD5C    IFNE 0                          *IF
     C           $DQOPR    DIV  $DHD5C    $DQWPR    H      Head 5 Value /H
     C                     END                             *FI
      * Head 1 USR
      * CASE: PAR.Head 1 USR is Not Zero
     C           $DH1US    IFNE 0                          *IF
     C           $DQPPR    DIV  $DH1US    $DQXPR    H      Head 1 Value /H
     C                     END                             *FI
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Add/Paid Value    RT - Carcass Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     $DH2US           Head 2 USR
     C                     Z-ADD*ZERO     $DHD3U           Head 3 USR
     C                     Z-ADD*ZERO     $DQQPR           Head 2 Value US
     C                     Z-ADD*ZERO     $DQRPR           Head 3 Value US
     C                     Z-ADD*ZERO     $DQYPR           Head 2 Value /H
     C                     Z-ADD*ZERO     $DQZPR           Head 3 Value /H
      * Declare restrictor key work fields
     C           *LIKE     DEFN B1HMNB    WQSC01           BOH Company Num
     C           *LIKE     DEFN B1BNNB    WQSC02           BOH Buy Order N
     C           *LIKE     DEFN B1BONB    WQSC03           BOL Load Number
     C           *LIKE     DEFN B1CVNB    WQSC04           TH Tattoo Numbe
     C           *LIKE     DEFN B1B0DT    WQSC05           TH Kill Date
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           BOH Company Num
     C                     KFLD           WQSC02           BOH Buy Order N
     C                     KFLD           WQSC03           BOL Load Number
     C                     KFLD           WQSC04           TH Tattoo Numbe
     C                     KFLD           WQSC05           TH Kill Date
      * Setup key
     C                     Z-ADD$DHMNB    WQSC01           BOH Company Num
     C                     Z-ADD$DBNNB    WQSC02           BOH Buy Order N
     C                     Z-ADD$DBONB    WQSC03           BOL Load Number
     C                     Z-ADD$DCVNB    WQSC04           TH Tattoo Numbe
     C                     Z-ADD$DB0DT    WQSC05           TH Kill Date
      * Establish starting position
     C           KRSSC     SETLL@B1CPG7                    *
     C           KRSSC     READE@B1CPG7                  90*
      * Data record not found
     C   90                MOVEL'PRK0138' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.CD Record Add/Del Sts is Valid Records for Totals
     C           B1INST    IFEQ 'A'                        *IF
     C           B1INST    OREQ *BLANK
      * CASE: DB1.CD Record Add/Del Sts is Add
     C           B1INST    IFEQ 'A'                        *IF
     C                     ADD  1         $DH2US           Head 2 USR
     C                     ADD  B1AYPR    $DQQPR           Head 2 Value US
     C                     END                             *FI
     C                     ADD  1         $DHD3U           Head 3 USR
     C                     ADD  B1AYPR    $DQRPR           Head 3 Value US
     C                     END                             *FI
     C           KRSSC     READE@B1CPG7                  90*
     C                     ENDDO
      * USER: Exit processing
      * CASE: PAR.Head 2 USR is Not Zero
     C           $DH2US    IFNE 0                          *IF
     C           $DQQPR    DIV  $DH2US    $DQYPR    H      Head 2 Value /H
     C                     END                             *FI
      * CASE: PAR.Head 3 USR is Not Zero
     C           $DHD3U    IFNE 0                          *IF
     C           $DQRPR    DIV  $DHD3U    $DQZPR    H      Head 3 Value /H
     C                     END                             *FI
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Tattoo Value Wrst RT - Eval Tran Value Dtl OUTF  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  50       Head Count
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     $DSHPR           Head 7 Value
     C                     Z-ADD*ZERO     WN0001           Head Count
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAHMNB    WQSD01           BOH Company Num
     C           *LIKE     DEFN WABNNB    WQSD02           BOH Buy Order N
     C           *LIKE     DEFN WABONB    WQSD03           BOL Load Number
     C           *LIKE     DEFN WACVNB    WQSD04           TH Tattoo Numbe
     C           *LIKE     DEFN WAB0DT    WQSD05           TH Kill Date
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           BOH Company Num
     C                     KFLD           WQSD02           BOH Buy Order N
     C                     KFLD           WQSD03           BOL Load Number
     C                     KFLD           WQSD04           TH Tattoo Numbe
     C                     KFLD           WQSD05           TH Kill Date
      * Setup key
     C                     Z-ADD$DHMNB    WQSD01           BOH Company Num
     C                     Z-ADD$DBNNB    WQSD02           BOH Buy Order N
     C                     Z-ADD$DBONB    WQSD03           BOL Load Number
     C                     Z-ADD$DCVNB    WQSD04           TH Tattoo Numbe
     C                     Z-ADD$DB0DT    WQSD05           TH Kill Date
      * Establish starting position
     C           KRSSD     SETLL@ERCPDX                    *
     C           KRSSD     READE@ERCPDX                  90*
      * Data record not found
     C   90                MOVEL'PRK0897' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  1         WN0001           Head Count
      * CASE: PAR.Head Count GT PAR.TH Head Killed
     C           WN0001    IFGT $DHD3U                     *IF
     C                     GOTO SDEXIT                     *QUIT
     C                     END                             *FI
     C                     ADD  WAJ4PR    $DSHPR           Head 7 Value
     C           KRSSD     READE@ERCPDX                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Tattoo Value Best RT - Eval Tran Value Dtl OUTF  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0002  50       Head Count
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     $DSIPR           Head 8 Value
     C                     Z-ADD*ZERO     WN0002           Head Count
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBHMNB    WQSE01           BOH Company Num
     C           *LIKE     DEFN WBBNNB    WQSE02           BOH Buy Order N
     C           *LIKE     DEFN WBBONB    WQSE03           BOL Load Number
     C           *LIKE     DEFN WBCVNB    WQSE04           TH Tattoo Numbe
     C           *LIKE     DEFN WBB0DT    WQSE05           TH Kill Date
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           BOH Company Num
     C                     KFLD           WQSE02           BOH Buy Order N
     C                     KFLD           WQSE03           BOL Load Number
     C                     KFLD           WQSE04           TH Tattoo Numbe
     C                     KFLD           WQSE05           TH Kill Date
      * Setup key
     C                     Z-ADD$DHMNB    WQSE01           BOH Company Num
     C                     Z-ADD$DBNNB    WQSE02           BOH Buy Order N
     C                     Z-ADD$DBONB    WQSE03           BOL Load Number
     C                     Z-ADD$DCVNB    WQSE04           TH Tattoo Numbe
     C                     Z-ADD$DB0DT    WQSE05           TH Kill Date
      * Establish starting position
     C           KRSSE     SETLL@ERCPDW                    *
     C           KRSSE     READE@ERCPDW                  90*
      * Data record not found
     C   90                MOVEL'PRK0897' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  1         WN0002           Head Count
      * CASE: PAR.Head Count GT PAR.TH Head Killed
     C           WN0002    IFGT $DHD3U                     *IF
     C                     GOTO SEEXIT                     *QUIT
     C                     END                             *FI
     C                     ADD  WBJ4PR    $DSIPR           Head 8 Value
     C           KRSSE     READE@ERCPDW                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Upd Tattoo Info       RT - Eval Tran Value Hdr OUTF  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           ESHMNB           BOH Company Num
     C                     KFLD           ESBNNB           BOH Buy Order N
     C                     KFLD           ESBONB           BOL Load Number
     C                     KFLD           ESCVNB           TH Tattoo Numbe
     C                     KFLD           ESB0DT           TH Kill Date
      * Setup key
     C                     Z-ADD$DHMNB    ESHMNB           BOH Company Num
     C                     Z-ADD$DBNNB    ESBNNB           BOH Buy Order N
     C                     Z-ADD$DBONB    ESBONB           BOL Load Number
     C                     Z-ADD$DCVNB    ESCVNB           TH Tattoo Numbe
     C                     Z-ADD$DB0DT    ESB0DT           TH Kill Date
      * Establish starting position
     C           KRSSF     CHAIN@ESCPDC              90    *
      * Data record not found
     C   90                MOVEL'PRK0899' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * Chg Tattoo Info       CH - Eval Tran Value Hdr OUTF  * 
     C                     EXSR SGCHRC
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCHRC    BEGSR
      *================================================================
      * Chg Tattoo Info       CH - Eval Tran Value Hdr OUTF  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @ESCPDD
     C                     Z-ADD$DHMNB    WCHMNB           BOH Company Num
     C                     Z-ADD$DBNNB    WCBNNB           BOH Buy Order N
     C                     Z-ADD$DBONB    WCBONB           BOL Load Number
     C                     Z-ADD$DCVNB    WCCVNB           TH Tattoo Numbe
     C                     Z-ADD$DB0DT    WCB0DT           TH Kill Date
      *
     C           KLCHSG    KLIST
     C                     KFLD           WCHMNB           BOH Company Num
     C                     KFLD           WCBNNB           BOH Buy Order N
     C                     KFLD           WCBONB           BOL Load Number
     C                     KFLD           WCCVNB           TH Tattoo Numbe
     C                     KFLD           WCB0DT           TH Kill Date
     C           KLCHSG    CHAIN@ESCPDD              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PKESCPL1'MDACP
     C                     MOVEL'@ESCPDD' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPKES1    YARDCS
      * Move non-key fields to @ESCPDD
     C                     Z-ADDESF4NB    WCF4NB           TH Avg Lean Per
     C                     Z-ADDESF2NB    WCF2NB           TH Avg Backfat
     C                     Z-ADDESF3NB    WCF3NB           TH Avg Loin Eye
     C                     Z-ADDESHDNB    WCHDNB           TH Avg Hot Wgt
     C                     Z-ADD$DLFNB    WCFMVL           FOM Valid Head
     C                     Z-ADD$DQKPR    WCRYPR           FOM Valid $
     C                     Z-ADD$DQSPR    WCRZPR           FOM Valid $/Hd
     C                     Z-ADD$DLINB    WCWYNB           FOM Excep Head
     C                     Z-ADD$DQLPR    WCR0PR           FOM Excep $
     C                     Z-ADD$DQTPR    WCR1PR           FOM Excep $/Hd
     C                     Z-ADD$DHD3C    WCFMTL           FOM Total Head
     C                     Z-ADD$DQMPR    WCR2PR           FOM Total $
     C                     Z-ADD$DQUPR    WCR3PR           FOM Total $/Hd
     C                     Z-ADD$DHD4C    WCDLVD           DEL Valid Head
     C                     Z-ADD$DQNPR    WCR4PR           DEL Valid $
     C                     Z-ADD$DQVPR    WCR5PR           DEL Valid $/Hd
     C                     Z-ADD$DHD5C    WCDLEX           DEL Excep Head
     C                     Z-ADD$DQOPR    WCR6PR           DEL Exceo $
     C                     Z-ADD$DQWPR    WCR7PR           DEL Excep $/Hd
     C                     Z-ADD$DH1US    WCELTL           DEL Total Head
     C                     Z-ADD$DQPPR    WCR8PR           DEL Total $
     C                     Z-ADD$DQXPR    WCR9PR           DEL Total $/Hd
     C                     Z-ADD$DH2US    WCPAID           PAID Adds Head
     C                     Z-ADD$DQQPR    WCSAPR           PAID Adds $
     C                     Z-ADD$DQYPR    WCSBPR           PAID Adds $/Hd
     C                     Z-ADD$DHD3U    WCPDTL           PAID Total Head
     C                     Z-ADD$DQRPR    WCSCPR           PAID Total $
     C                     Z-ADD$DQZPR    WCSDPR           PAID Total $/Hd
     C                     Z-ADDYL0001    WCXXNB           DIFF Total Head
     C                     Z-ADDYL0002    WCSEPR           DIFF Total $
     C                     Z-ADDYL0003    WCSFPR           DIFF Total $/Hd
     C                     MOVEL$DJ9ST    WCJ9ST    P      TH Payment Type
     C                     MOVEL$DABCD    WCABCD    P      PD Producer Cod
      *
      * Set PGM.*Record Data Changed flag
     C           QPKES1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@ESCPDD                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPKESCPL1               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modifications and Comments
      *================================================================
      * H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Num
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Options
      *================================================================
      * Ron Ellis Value
     C           $DQUPR    MULT $DHD3U    $DSGPR           Head 6 Value
     C                     Z-ADD$DQUPR    $DSJPR           Head 6 Value /H
      * CASE: CUR.Difference +/- is LT Zero
     C           $DIINB    IFLT *ZERO                      *IF
      * Worst Carcasses
      * Rtv Tattoo Value Wrst RT - Eval Tran Value Dtl OUTF  * 
     C                     EXSR SDRVGN
      * Best Carcasses
      * Rtv Tattoo Value Best RT - Eval Tran Value Dtl OUTF  * 
     C                     EXSR SERVGN
      * CASE: CUR.Head 3 USR is GT Zero
     C           $DHD3U    IFGT *ZERO                      *IF
     C           $DSHPR    DIV  $DHD3U    $DSKPR    H      Head 7 Value /H
     C           $DSIPR    DIV  $DHD3U    $DSLPR    H      Head 8 Value /H
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C           $DQUPR    MULT $DHD3U    $DSHPR           Head 7 Value
     C                     Z-ADD$DQUPR    $DSKPR           Head 7 Value /H
     C           $DQUPR    MULT $DHD3U    $DSIPR           Head 8 Value
     C                     Z-ADD$DQUPR    $DSLPR           Head 8 Value /H
     C                     END                             *FI
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Live w/Adds
      *================================================================
      * CASE: CUR.Head 1 Lv w/Adds sum is GT Zero
     C           $EHDL1    IFGT *ZERO                      *IF
     C           $EFEVA    DIV  $EHDL1    $ERGPR           Head 1 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 2 Lv w/Adds sum is GT Zero
     C           $EHD2L    IFGT *ZERO                      *IF
     C           $EFFVA    DIV  $EHD2L    $ERHPR           Head 2 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 3 Lv w/Adds sum is GT Zero
     C           $EHD3L    IFGT *ZERO                      *IF
     C           $EFGVA    DIV  $EHD3L    $ERIPR           Head 3 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 4 Lv w/Adds sum is GT Zero
     C           $EHD4L    IFGT *ZERO                      *IF
     C           $EFHVA    DIV  $EHD4L    $ERJPR           Head 4 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 5 Lv w/Adds sum is GT Zero
     C           $EHD5L    IFGT *ZERO                      *IF
     C           $EFIVA    DIV  $EHD5L    $ERKPR           Head 5 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 6 Lv w/Adds sum is GT Zero
     C           $EHD6L    IFGT *ZERO                      *IF
     C           $EFJVA    DIV  $EHD6L    $ERLPR           Head 6 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 7 Lv w/Adds sum is GT Zero
     C           $EHD7L    IFGT *ZERO                      *IF
     C           $EFKVA    DIV  $EHD7L    $ERMPR           Head 7 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 8 Lv w/Adds sum is GT Zero
     C           $EHD8L    IFGT *ZERO                      *IF
     C           $EFLVA    DIV  $EHD8L    $ERNPR           Head 8 Val Lv w
     C           $EGHVA    DIV  $EHD8L    $ESMPR           Head 9 Val Lv w
     C           $EGIVA    DIV  $EHD8L    $ESNPR           Head 10 Val Lv
     C           $EGGVA    DIV  $EHD8L    $ESOPR           Head 11 Val Lv
     C                     END                             *FI
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Live w/Dlts
      *================================================================
      * CASE: CUR.Head 1 Lv w/Dlts sum is GT Zero
     C           $EHD1L    IFGT *ZERO                      *IF
     C           $EF2VA    DIV  $EHD1L    $EQ8PR           Head 1 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 2 Lv w/Dlts sum is GT Zero
     C           $EHDL2    IFGT *ZERO                      *IF
     C           $EF3VA    DIV  $EHDL2    $EQ9PR           Head 2 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 3 Lv w/Dlts sum is GT Zero
     C           $EHDL3    IFGT *ZERO                      *IF
     C           $EF4VA    DIV  $EHDL3    $ERAPR           Head 3 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 4 Lv w/Dlts sum is GT Zero
     C           $EHDL4    IFGT *ZERO                      *IF
     C           $EF5VA    DIV  $EHDL4    $ERBPR           Head 4 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 5 Lv w/Dlts sum is GT Zero
     C           $EHDL5    IFGT *ZERO                      *IF
     C           $EF6VA    DIV  $EHDL5    $ERCPR           Head 5 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 6 Lv w/Dlts sum is GT Zero
     C           $EHDL6    IFGT *ZERO                      *IF
     C           $EF7VA    DIV  $EHDL6    $ERDPR           Head 6 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 7 Lv w/Dlts sum is GT Zero
     C           $EHDL7    IFGT *ZERO                      *IF
     C           $EF8VA    DIV  $EHDL7    $EREPR           Head 7 Val Lv w
     C                     END                             *FI
      * CASE: CUR.Head 8 Lv w/Dlts sum is GT Zero
     C           $EHDL8    IFGT *ZERO                      *IF
     C           $EF9VA    DIV  $EHDL8    $ERFPR           Head 8 Val Lv w
     C           $EGKVA    DIV  $EHDL8    $ESPPR           Head 9 Val Lv w
     C           $EGLVA    DIV  $EHDL8    $ESQPR           Head 10 Val Lv
     C           $EGJVA    DIV  $EHDL8    $ESRPR           Head 11 Val Lv
     C                     END                             *FI
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * Carc w/Adds
      *================================================================
      * CASE: CUR.Head 1 CM w/Adds sum is GT Zero
     C           $EHD1C    IFGT *ZERO                      *IF
     C           $EFMVA    DIV  $EHD1C    $EROPR           Head 1 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 2 CM w/Adds sum is GT Zero
     C           $EHD2C    IFGT *ZERO                      *IF
     C           $EFNVA    DIV  $EHD2C    $ERPPR           Head 2 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 3 CM w/Adds sum is GT Zero
     C           $EHA3M    IFGT *ZERO                      *IF
     C           $EFOVA    DIV  $EHA3M    $ERQPR           Head 3 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 4 CM w/Adds sum is GT Zero
     C           $EHA4C    IFGT *ZERO                      *IF
     C           $EFPVA    DIV  $EHA4C    $ERRPR           Head 4 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 5 CM w/Adds sum is GT Zero
     C           $EHA5C    IFGT *ZERO                      *IF
     C           $EFQVA    DIV  $EHA5C    $ERSPR           Head 5 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 6 CM w/Adds sum is GT Zero
     C           $EHA6C    IFGT *ZERO                      *IF
     C           $EFRVA    DIV  $EHA6C    $ERTPR           Head 6 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 7 CM w/Adds sum is GT Zero
     C           $EHA68    IFGT *ZERO                      *IF
     C           $EFSVA    DIV  $EHA68    $ERUPR           Head 7 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 8 CM w/Adds sum is GT Zero
     C           $EHA7A    IFGT *ZERO                      *IF
     C           $EFTVA    DIV  $EHA7A    $ERVPR           Head 8 Val CM w
     C           $EGNVA    DIV  $EHA7A    $ESSPR           Head 9 Val CM w
     C           $EGOVA    DIV  $EHA7A    $ESTPR           Head 10 Val CM
     C           $EGMVA    DIV  $EHA7A    $ESUPR           Head 11 Val CM
     C                     END                             *FI
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * Carc w/Dlts
      *================================================================
      * CASE: CUR.Head 1 CM w/Dlts sum is GT Zero
     C           $EH1CM    IFGT *ZERO                      *IF
     C           $EFUVA    DIV  $EH1CM    $EQ0PR           Head 1 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 2 CM w/Dlts sum is GT Zero
     C           $EH2CM    IFGT *ZERO                      *IF
     C           $EFVVA    DIV  $EH2CM    $EQ1PR           Head 2 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 3 CM w/Dlts sum is GT Zero
     C           $EH3CM    IFGT *ZERO                      *IF
     C           $EFWVA    DIV  $EH3CM    $EQ2PR           Head 3 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 4 CM w/Dlts sum is GT Zero
     C           $EH4CM    IFGT *ZERO                      *IF
     C           $EFXVA    DIV  $EH4CM    $EQ3PR           Head 4 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 5 CM w/Dlts sum is GT Zero
     C           $EH5CM    IFGT *ZERO                      *IF
     C           $EFYVA    DIV  $EH5CM    $EQ4PR           Head 5 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 6 CM w/Dlts sum is GT Zero
     C           $EH6CM    IFGT *ZERO                      *IF
     C           $EFZVA    DIV  $EH6CM    $EQ5PR           Head 6 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 7 CM w/Dlts sum is GT Zero
     C           $EH7CM    IFGT *ZERO                      *IF
     C           $EF0VA    DIV  $EH7CM    $EQ6PR           Head 7 Val CM w
     C                     END                             *FI
      * CASE: CUR.Head 8 CM w/Dlts sum is GT Zero
     C           $EH8CM    IFGT *ZERO                      *IF
     C           $EF1VA    DIV  $EH8CM    $EQ7PR           Head 8 Val CM w
     C           $EGQVA    DIV  $EH8CM    $ESVPR           Head 9 Val CM w
     C           $EGRVA    DIV  $EH8CM    $ESWPR           Head 10 Val CM
     C           $EGPVA    DIV  $EH8CM    $ESXPR           Head 11 Val CM
     C                     END                             *FI
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * Total
      *================================================================
      * CASE: CUR.Head 1 SUM is GT Zero
     C           $EH1SM    IFGT *ZERO                      *IF
     C           $EE6VA    DIV  $EH1SM    $EQSPR           Head 1 Value /H
     C                     END                             *FI
      * CASE: CUR.Head 2 SUM is GT Zero
     C           $EH2SM    IFGT *ZERO                      *IF
     C           $EE7VA    DIV  $EH2SM    $EQTPR           Head 2 Value /H
     C                     END                             *FI
      * CASE: CUR.Head 3 SUM is GT Zero
     C           $EH3SM    IFGT *ZERO                      *IF
     C           $EE8VA    DIV  $EH3SM    $EQUPR           Head 3 Value /H
     C                     END                             *FI
      * CASE: CUR.Head 4 SUM is GT Zero
     C           $EHD4S    IFGT *ZERO                      *IF
     C           $EE9VA    DIV  $EHD4S    $EQVPR           Head 4 Value /H
     C                     END                             *FI
      * CASE: CUR.Head 5 SUM is GT Zero
     C           $EHD5S    IFGT *ZERO                      *IF
     C           $EFAVA    DIV  $EHD5S    $EQWPR           Head 5 Value /H
     C                     END                             *FI
      * CASE: CUR.Head 1 SUM 2 is GT Zero
     C           $EHD1S    IFGT *ZERO                      *IF
     C           $EFBVA    DIV  $EHD1S    $EQXPR           Head 1 Value /H
     C                     END                             *FI
      * CASE: CUR.Head 2 SUM 2 is GT Zero
     C           $EHD2M    IFGT *ZERO                      *IF
     C           $EFCVA    DIV  $EHD2M    $EQYPR           Head 2 Value /H
     C                     END                             *FI
      * CASE: CUR.Head 3 SUM 2 is GT Zero
     C           $EHD3M    IFGT *ZERO                      *IF
     C           $EFDVA    DIV  $EHD3M    $EQZPR           Head 3 Value /H
     C           $EGSVA    DIV  $EHD3M    $ESYPR           Head 6 Value /H
     C           $EGTVA    DIV  $EHD3M    $ESZPR           Head 7 Value /H
     C           $EGUVA    DIV  $EHD3M    $ES0PR           Head 8 Value /H
     C                     END                             *FI
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    A1HMNB           BOH Company Num
     C                     MOVEL*LOVAL    A1B0DT           TH Kill Date
     C                     MOVEL*LOVAL    A1ABCD           PD Producer Cod
     C                     MOVEL*LOVAL    A1BNNB           BOH Buy Order N
     C                     MOVEL*LOVAL    A1BONB           BOL Load Number
     C                     MOVEL*LOVAL    A1CVNB           TH Tattoo Numbe
      * Define work field Invalid Y/N USR
     C                     MOVEL*BLANK    WUG3ST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAHMNB           BOH Company Num
     C                     Z-ADD*ZERO     WABNNB           BOH Buy Order N
     C                     Z-ADD*ZERO     WABONB           BOL Load Number
     C                     Z-ADD*ZERO     WACVNB           TH Tattoo Numbe
     C                     Z-ADD*ZERO     WAB0DT           TH Kill Date
     C                     Z-ADD*ZERO     WALGNB           CD Scale Sequen
     C                     Z-ADD*ZERO     WAAMPC           ET Hot Wgt
     C                     Z-ADD*ZERO     WAAIPC           ET Backfat Thic
     C                     Z-ADD*ZERO     WAAJPC           ET Loin-Eye Dep
     C                     Z-ADD*ZERO     WAAKPC           ET Lean Percent
     C                     Z-ADD*ZERO     WAX8NB           ET Backfat Thic
     C                     Z-ADD*ZERO     WAFVPC           ET Loineye Dept
     C                     Z-ADD*ZERO     WAFXPC           ET Lean Percent
     C                     Z-ADD*ZERO     WAJ4PR           CD CA Gross Val
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCHMNB           BOH Company Num
     C                     Z-ADD*ZERO     WCBNNB           BOH Buy Order N
     C                     Z-ADD*ZERO     WCBONB           BOL Load Number
     C                     Z-ADD*ZERO     WCCVNB           TH Tattoo Numbe
     C                     Z-ADD*ZERO     WCB0DT           TH Kill Date
     C                     Z-ADD*ZERO     WCF4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     WCF2NB           TH Avg Backfat
     C                     Z-ADD*ZERO     WCF3NB           TH Avg Loin Eye
     C                     Z-ADD*ZERO     WCHDNB           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     WCFMVL           FOM Valid Head
     C                     Z-ADD*ZERO     WCRYPR           FOM Valid $
     C                     Z-ADD*ZERO     WCRZPR           FOM Valid $/Hd
     C                     Z-ADD*ZERO     WCWYNB           FOM Excep Head
     C                     Z-ADD*ZERO     WCR0PR           FOM Excep $
     C                     Z-ADD*ZERO     WCR1PR           FOM Excep $/Hd
     C                     Z-ADD*ZERO     WCFMTL           FOM Total Head
     C                     Z-ADD*ZERO     WCR2PR           FOM Total $
     C                     Z-ADD*ZERO     WCR3PR           FOM Total $/Hd
     C                     Z-ADD*ZERO     WCDLVD           DEL Valid Head
     C                     Z-ADD*ZERO     WCR4PR           DEL Valid $
     C                     Z-ADD*ZERO     WCR5PR           DEL Valid $/Hd
     C                     Z-ADD*ZERO     WCDLEX           DEL Excep Head
     C                     Z-ADD*ZERO     WCR6PR           DEL Exceo $
     C                     Z-ADD*ZERO     WCR7PR           DEL Excep $/Hd
     C                     Z-ADD*ZERO     WCELTL           DEL Total Head
     C                     Z-ADD*ZERO     WCR8PR           DEL Total $
     C                     Z-ADD*ZERO     WCR9PR           DEL Total $/Hd
     C                     Z-ADD*ZERO     WCPAID           PAID Adds Head
     C                     Z-ADD*ZERO     WCSAPR           PAID Adds $
     C                     Z-ADD*ZERO     WCSBPR           PAID Adds $/Hd
     C                     Z-ADD*ZERO     WCPDTL           PAID Total Head
     C                     Z-ADD*ZERO     WCSCPR           PAID Total $
     C                     Z-ADD*ZERO     WCSDPR           PAID Total $/Hd
     C                     Z-ADD*ZERO     WCXXNB           DIFF Total Head
     C                     Z-ADD*ZERO     WCSEPR           DIFF Total $
     C                     Z-ADD*ZERO     WCSFPR           DIFF Total $/Hd
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    YRWF00  50       TH Tattoo Numbe
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local work field DIFF Total Head
     C                     Z-ADD*ZERO     YL0001  50
      * Define local work field DIFF Total $
     C                     Z-ADD*ZERO     YL0002  72
      * Define local work field DIFF Total $/Hd
     C                     Z-ADD*ZERO     YL0003  52
      * Define local work field Remainder USR
     C                     Z-ADD*ZERO     YL0004  50
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * Modifications and Comments
     C                     EXSR UASUBR                     Modifications a
      * Mov ApplN to Co-PRINT US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP6EVTX    $ACMP
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
