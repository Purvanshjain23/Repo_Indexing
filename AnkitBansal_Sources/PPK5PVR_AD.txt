// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPK5PVR
// ?Date: 14.08.2025 Time: 03:41:01
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PAR.Application Code = CND.Accounts Receivable
PAR.Application_Code = 'A/R';

EXECUTE FUNCTION(Val Access CUA Window IF) TYPE(EXCINTFUN)                      AC1417789;
PARAMETER('A/R');
PARAMETER(PAR.Company_Number_CDE);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

}


//?USER: Load screen

// DTL.Invoice Suffix = CND.On Account Cash
DTL.Invoice_Suffix = 'OA';

// DTL.Reference Suffix = CND.Invoices
DTL.Reference_Suffix = 'IN';

//?USER: Validate fields

//?Process F4 on Company Number
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.Company Number CDE
AND PGM.*Cursor_field = DTL.Company_Number_CDE;

CASE;

// IF PAR.Allow Multi-Company is yes
IF PAR.Allow_Multi_Company = 'Y';

// Call program SEL Company by Number  SR.
CALL PROGRAM(SEL Company by Number  SR) ('CAAJSRR');
PARAMETER(DTL.Company_Number_CDE);

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Prompt not allowed on output field.'
ERROR(USR2410);

ENDIF;

ENDIF;

//?Process F4 on Reference
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.Reference Number
AND PGM.*Cursor_field = DTL.Reference_Number;

// Call program Zzz OA Trans to Rvw   SR.
CALL PROGRAM(Zzz OA Trans to Rvw   SR) ('PPLFSRR');
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Invoice_Number);
PARAMETER(DTL.Invoice_Suffix);
PARAMETER(DTL.Reference_Number);
PARAMETER(DTL.Reference_Suffix);

ENDIF;

//?Company Number is Required.
CASE;

// IF DTL.Company Number CDE is Equal to zero
IF DTL.Company_Number_CDE = *ZERO;

// Send error message - 'Value Required.'
ERROR(USR2625);
MSGPARM(DTL.Company_Number_CDE);

ENDIF;

EXECUTE FUNCTION(Rtv OA Trans          RT) TYPE(RTVOBJ) FILE(PDNHCPP)           AC1723781;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Invoice_Number);
PARAMETER(DTL.Invoice_Suffix);
PARAMETER(DTL.Reference_Number);
PARAMETER(DTL.Reference_Suffix);
PARAMETER(DTL.Transaction_Amount);
PARAMETER(DTL.Create_Date);
{
 //?USER: Processing if Data record not found

 // PAR.Transaction Amount = CON.*ZERO
 PAR.Transaction_Amount = *ZERO;

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PAR.Transaction Amount = DB1.Transaction Amount
 PAR.Transaction_Amount = DB1.Transaction_Amount;

 // PAR.Create Date = DB1.Create Date
 PAR.Create_Date = DB1.Create_Date;

 QUIT;

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'On Account transactions not found for &1 &2'
ERROR(USR3449);
MSGPARM(DTL.Invoice_Number);
MSGPARM(DTL.Reference_Number);

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Cust. by Inv.      RT) TYPE(RTVOBJ) FILE(ARBDCPP)          AC1345722;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Reference_Number);
PARAMETER(DTL.Reference_Suffix);
PARAMETER(DTL.AR_Customer_Number);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Name Only          RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1493704;
PARAMETER(DTL.AR_Customer_Number);
PARAMETER(DTL.Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 QUIT;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


ENDIF;

//?CALC: Screen function fields

//?Validate Company & Retrieve Company Name.
DO;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(WRK.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Company Number not found'
ERROR(USR0163);

ENDIF;

ENDDO;

//?USER: User defined action

//?F11=Delete trans
CASE;

// IF DTL.*CMD key is *Delete
IF DTL.*CMD_key = '11';

//?Check post flag in A/R Detail
EXECUTE FUNCTION(RTV A/R Proc. Code    RT) TYPE(RTVOBJ) FILE(ARBECPP)           AC1779005;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Reference_Number);
PARAMETER(DTL.Reference_Suffix);
PARAMETER(WRK.A_R_Processing_Status);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


CASE;

// IF WRK.A/R Processing Status is Entered transaction
IF WRK.A_R_Processing_Status = 'E';

// Call program Zzz Delete OA trans   XF.
CALL PROGRAM(Zzz Delete OA trans   XF) ('PPK6XFR');
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Invoice_Number);
PARAMETER(DTL.Invoice_Suffix);
PARAMETER(DTL.Reference_Number);
PARAMETER(DTL.Reference_Suffix);
PARAMETER(DTL.Transaction_Amount);

// Send information message - 'On Account transaction &1 has been deleted.'
MESSAGE(USR3450 *INFO);
MSGPARM(DTL.Invoice_Number);

RETURN;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'On Account transaction &1 has been posted. Cannot delete'
ERROR(USR3452);
MSGPARM(DTL.Invoice_Number);

ENDIF;

ENDIF;

