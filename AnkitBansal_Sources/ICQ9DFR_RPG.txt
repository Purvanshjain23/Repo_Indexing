     H/TITLE Dsp Item/Whse Inqy Dtl DF Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Display file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 03/04/14  Time  : 16:49:37
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FICQ9DFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: Dsp Item/Whse Inqy Dtl DF Display file
      *
     FCAB1REL2IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RSQ : Item Balance Detail       Co/Whs/Item/Prod Date
      *
     FOPBGWKLVIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Om CCC
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPDKMREL1IF  E           K        DISK
      * RTV : Company Values            Retrieval index
      *
     FCAB0RELCIF  E           K        DISK
      * RSQ : Item Balance              Co/Whse/Item
      *
     FOPBGWKLFIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      *
     FCAB1REL4IF  E           K        DISK
      * RTV : Item Balance Detail       Active only
      *
     FPPBGCPL4IF  E           K        DISK
      * RSQ : PFS Inventory Adjustment  Co/WHS/Item/LDte ShpNotP
      *
     FPMAECPL2IF  E           K        DISK
      * RSQ : PFS CT Intransit Carton   Co/WHS/Itm
      *
     FCAB7CPL2IF  E           K        DISK
      * RSQ : Item Transaction Detail   Co,Itm,Whs,Prd Dt,Trn Ty
      *
     FCAB0REL1IF  E           K        DISK
      * RTV : Item Balance              Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
     E                    #L3         3  1
     E                    #L7         7  1
     E                    UCT        40  1               CENTER TABLE
      * Long constants
     E                    @CN#    1  07  6   @CN    25
     E                    YK01      100 12  A            Date for Qty Sc
      *
     E                    YDOW        7  1               *Days of week
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WBAJCD
     I              ADF8NA                          WBF8NA
     I              ADACNA                          WBACNA
     I              ADADNA                          WBADNA
     I              ADAENA                          WBAENA
     I              ADAJNA                          WBAJNA
     I              ADBTTX                          WBBTTX
     I              ADAOCD                          WBAOCD
     I              ADBGCD                          WBBGCD
     I              ADVHST                          WBVHST
     I              ADMPNA                          WBMPNA
     I              ADWPST                          WBWPST
     I              ADXUST                          WBXUST
     I              ADT0ST                          WBT0ST
     I              ADT1ST                          WBT1ST
     I              ADDBNB                          WBDBNB
     I              ADT2ST                          WBT2ST
     I              ADT3ST                          WBT3ST
     I              ADT4ST                          WBT4ST
     I              ADT6ST                          WBT6ST
     I              ADBWC3                          WBBWC3
     I              ADBTC3                          WBBTC3
     I              ADBUC3                          WBBUC3
     I              ADBVC3                          WBBVC3
     I              ADFCAA                          WBFCAA
     I              ADRQSX                          WBRQSX
     I              ADRRSX                          WBRRSX
     I              ADRSSX                          WBRSSX
     I              ADRTSX                          WBRTSX
     I              ADT7ST                          WBT7ST
     I              ADT8ST                          WBT8ST
     I              ADRNSX                          WBRNSX
     I              ADROSX                          WBROSX
     I              ADRPSX                          WBRPSX
     I              ADUVST                          WBUVST
     I              ADUWST                          WBUWST
     I              ADUXST                          WBUXST
     I              ADVSST                          WBVSST
     I              ADAATM                          WBAATM
     I              ADAYNA                          WBAYNA
     I              ADA0NA                          WBA0NA
     I              ADAXDT                          WBAXDT
      *
     I@BGWKKG
      * Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      * Renamed input format fields
     I              OMAIC3                          WCAIC3
     I              OMC4NB                          WCC4NB
     I              OMDPNB                          WCDPNB
     I              OMUENB                          WCUENB
     I              OMHGCD                          WCHGCD
     I              OMAJCD                          WCAJCD
     I              OMBKC7                          WCBKC7
     I              OMCFC7                          WCCFC7
     I              OMGMST                          WCGMST
     I              OMGNST                          WCGNST
     I              OMMAVA                          WCMAVA
     I              OMKDVA                          WCKDVA
     I              OML8VA                          WCL8VA
     I              OML9VA                          WCL9VA
     I              OMGTST                          WCGTST
     I              OMGVST                          WCGVST
     I              OMGUST                          WCGUST
     I              OMQFST                          WCQFST
     I              OMAYVA                          WCAYVA
     I              OMEXDT                          WCEXDT
     I              OMLQCD                          WCLQCD
     I              OMRDCD                          WCRDCD
     I              OMQ7CD                          WCQ7CD
     I              OMBZPR                          WCBZPR
     I              OML6NB                          WCL6NB
     I              OMU1ST                          WCU1ST
     I              OMGIDT                          WCGIDT
     I              OMCRCD                          WCCRCD
     I              OMAGCD                          WCAGCD
     I              OMRZST                          WCRZST
     I              OMR0ST                          WCR0ST
     I              OMR1ST                          WCR1ST
     I              OMG7NA                          WCG7NA
     I              OMG8NA                          WCG8NA
     I              OMRPCD                          WCRPCD
     I              OMVEST                          WCVEST
     I              OMVGST                          WCVGST
     I              OMAVST                          WCAVST
     I              OMU0ST                          WCU0ST
     I              OMRFCD                          WCRFCD
     I              OMFZST                          WCFZST
     I              OMR1NB                          WCR1NB
     I              OMAVQT                          WCAVQT
     I              OMD0WG                          WCD0WG
     I              OMCCQT                          WCCCQT
     I              OMAUWG                          WCAUWG
     I              OMCBQT                          WCCBQT
     I              OMATWG                          WCATWG
     I              OMAQCS                          WCAQCS
     I              OMAGCS                          WCAGCS
     I              OMAKPR                          WCAKPR
     I              OMALPR                          WCALPR
     I              OMAUPR                          WCAUPR
     I              OMAVWG                          WCAVWG
     I              OMA4WG                          WCA4WG
     I              OMA5DT                          WCA5DT
     I              OMAODT                          WCAODT
     I              OMGNDT                          WCGNDT
     I              OMAMST                          WCAMST
     I              OMANST                          WCANST
     I              OMVAST                          WCVAST
     I              OMRGNB                          WCRGNB
     I              OMRHNB                          WCRHNB
     I              OMRINB                          WCRINB
     I              OMRBCD                          WCRBCD
     I              OMHICD                          WCHICD
     I              OMRNCD                          WCRNCD
     I              OMROCD                          WCROCD
     I              OMCXDT                          WCCXDT
     I              OMAJVN                          WCAJVN
     I              OMKXCD                          WCKXCD
     I              OMJPCD                          WCJPCD
     I              OMCQCD                          WCCQCD
     I              OMR4CD                          WCR4CD
     I              OMZ1ST                          WCZ1ST
     I              OMZ3ST                          WCZ3ST
     I              OMZ4ST                          WCZ4ST
     I              OMDUPR                          WCDUPR
     I              OMB6VL                          WCB6VL
     I              OMA1AA                          WCA1AA
     I              OMFZSX                          WCFZSX
     I              OMF0SX                          WCF0SX
     I              OMF1SX                          WCF1SX
     I              OMF2SX                          WCF2SX
     I              OMF3SX                          WCF3SX
     I              OMF4SX                          WCF4SX
     I              OMF5SX                          WCF5SX
     I              OMF6SX                          WCF6SX
     I              OMF7SX                          WCF7SX
     I              OMNTDT                          WCNTDT
     I              OMNUDT                          WCNUDT
     I              OMNVDT                          WCNVDT
     I              OMNWDT                          WCNWDT
     I              OMNXDT                          WCNXDT
     I              OMBUTM                          WCBUTM
     I              OMBVTM                          WCBVTM
     I              OMBWTM                          WCBWTM
     I              OMBXTM                          WCBXTM
     I              OMBYTM                          WCBYTM
     I              OMH5NX                          WCH5NX
     I              OMH6NX                          WCH6NX
     I              OMH7NX                          WCH7NX
     I              OMH8NX                          WCH8NX
     I              OMH9NX                          WCH9NX
     I              OMDVPR                          WCDVPR
     I              OMDWPR                          WCDWPR
     I              OMDXPR                          WCDXPR
     I              OMDYPR                          WCDYPR
     I              OMDZPR                          WCDZPR
     I              OMGSPR                          WCGSPR
     I              OMGTPR                          WCGTPR
     I              OMGUPR                          WCGUPR
     I              OMHOST                          WCHOST
     I              OMHPST                          WCHPST
     I              OMIOST                          WCIOST
     I              OMPEWG                          WCPEWG
     I              OMRINY                          WCRINY
     I              OMTIDT                          WCTIDT
     I              OMTJDT                          WCTJDT
     I              OMH2ST                          WCH2ST
     I              OMH0ST                          WCH0ST
     I              OMH1ST                          WCH1ST
     I              OMTKDT                          WCTKDT
     I              OMTLDT                          WCTLDT
     I              OMTMDT                          WCTMDT
     I              OMUVST                          WCUVST
     I              OMUWST                          WCUWST
     I              OMUXST                          WCUXST
     I              OMAATM                          WCAATM
     I              OMAYNA                          WCAYNA
     I              OMA0NA                          WCA0NA
     I              OMAXDT                          WCAXDT
      *
     ICAB1RL4
      * Item Balance Detail       Active only
      * Renamed input format fields
     I              B1AIC3                          WDAIC3
     I              B1HGCD                          WDHGCD
     I              B1AJCD                          WDAJCD
     I              B1ELDT                          WDELDT
     I              B1ABWG                          WDABWG
     I              B1AGQT                          WDAGQT
     I              B1AHQT                          WDAHQT
     I              B1AIQT                          WDAIQT
     I              B1CTST                          WDCTST
     I              B1ACWG                          WDACWG
     I              B1ARQT                          WDARQT
     I              B1ASQT                          WDASQT
     I              B1ATQT                          WDATQT
     I              B1HDQT                          WDHDQT
     I              B1HEQT                          WDHEQT
     I              B1F6ST                          WDF6ST
     I              B1BMWG                          WDBMWG
     I              B1DSQT                          WDDSQT
     I              B1DTQT                          WDDTQT
     I              B1DUQT                          WDDUQT
     I              B1DHDT                          WDDHDT
     I              B1AGCS                          WDAGCS
     I              B1AECS                          WDAECS
     I              B1IDVA                          WDIDVA
     I              B1K7DT                          WDK7DT
     I              B1RINB                          WDRINB
     I              B1RHNB                          WDRHNB
     I              B1RGNB                          WDRGNB
     I              B1UVST                          WDUVST
     I              B1UWST                          WDUWST
     I              B1UXST                          WDUXST
     I              B1VSST                          WDVSST
     I              B1AATM                          WDAATM
     I              B1AYNA                          WDAYNA
     I              B1A0NA                          WDA0NA
     I              B1AXDT                          WDAXDT
      *
     I@B0REJX
      * Item Balance              Retrieval index       NV
      * Renamed input format fields
     I              B0AIC3                          WEAIC3
     I              B0HGCD                          WEHGCD
     I              B0AJCD                          WEAJCD
     I              B0AGCS                          WEAGCS
     I              B0AECS                          WEAECS
     I              B0BACS                          WEBACS
     I              B0BBCS                          WEBBCS
     I              B0CBPR                          WECBPR
     I              B0GUDT                          WEGUDT
     I              B0XYST                          WEXYST
     I              B0CTPR                          WECTPR
     I              B0G4DT                          WEG4DT
     I              B0BOWG                          WEBOWG
     I              B0DDQT                          WEDDQT
     I              B0DEQT                          WEDEQT
     I              B0DFQT                          WEDFQT
     I              B0HDQT                          WEHDQT
     I              B0HEQT                          WEHEQT
     I              B0AJQT                          WEAJQT
     I              B0AQQT                          WEAQQT
     I              B0AUQT                          WEAUQT
     I              B0EMQT                          WEEMQT
     I              B0DOQT                          WEDOQT
     I              B0ATNA                          WEATNA
     I              B0AKDT                          WEAKDT
     I              B0ANDT                          WEANDT
     I              B0IDVA                          WEIDVA
     I              B0JVST                          WEJVST
     I              B0BZPC                          WEBZPC
     I              B0DGQT                          WEDGQT
     I              B0DIDT                          WEDIDT
     I              B0ALCD                          WEALCD
     I              B0BFDY                          WEBFDY
     I              B0DJDT                          WEDJDT
     I              B0BGDY                          WEBGDY
     I              B0DKDT                          WEDKDT
     I              B0J2ST                          WEJ2ST
     I              B0DJQT                          WEDJQT
     I              B0BNWG                          WEBNWG
     I              B0DLDT                          WEDLDT
     I              B0DPQT                          WEDPQT
     I              B0DQQT                          WEDQQT
     I              B0DMDT                          WEDMDT
     I              B0M0ST                          WEM0ST
     I              B0J9ST                          WEJ9ST
     I              B0KBST                          WEKBST
     I              B0AKC8                          WEAKC8
     I              B0RINB                          WERINB
     I              B0RHNB                          WERHNB
     I              B0RGNB                          WERGNB
     I              B0UVST                          WEUVST
     I              B0UWST                          WEUWST
     I              B0UXST                          WEUXST
     I              B0VSST                          WEVSST
     I              B0AATM                          WEAATM
     I              B0AYNA                          WEAYNA
     I              B0A0NA                          WEA0NA
     I              B0AXDT                          WEAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     IYD01        DS
     I                                        1   70YI0101
     I                                        8  120YI01
      *
     IYM01        DS                        100
     I                                        1   70WAK7DT
     I                                        8  182WAAVQT
      *
     IYW01        DS
     I                                        1   70XAK7DT
     I                                        8  182XAAVQT
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      * Outward parameters
     IPARC        DS                              9
      * KEY : Item Balance              Co/Whse/Item
      * I : RST Company Number
     I                                    P   1   20PAAIC3
      * I : RST Warehouse Code
     I                                        3   5 PAAJCD
      * B : MAP Item Code
     I                                    P   6   90PAHGCD
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Company Item
      * I : RST Company Number
     I                                    P   1   20P1AIC3
      * I : RST Item Code
     I                                    P   3   60P1HGCD
      * I : MAP Description Line One
     I                                        7  36 P1AVNA
      * I : MAP U/M - Primary
     I                                       37  38 P1ADCD
      * I : MAP Conversion Factor 1
     I                                    P  39  434P1AWPC
      * I : MAP Operation Factor 1
     I                                       44  44 P1LXST
      * I : MAP U/M - Second
     I                                       45  46 P1AECD
      * I : MAP Conversion Factor 2
     I                                    P  47  514P1AXPC
      * I : MAP Operation Factor 2
     I                                       52  52 P1LYST
      * I : MAP U/M - Third
     I                                       53  54 P1AFCD
      * I :  Unit Weight
     I                                    P  55  602P1AIWG
      * I :  Production Date Control
     I                                       61  61 P1FZST
      * I :  Catch Weight Status
     I                                       62  62 P1AVST
      * N :  Fresh Chilling Time
     I                                    P  63  652P1CHTM
     IP2PARM      DS
      * FLD: Warehouse
      * I : RST Warehouse Code
     I                                        1   3 P2AJCD
      * I : MAP Warehouse Description
     I                                        4  33 P2F8NA
     IP3PARM      DS
      * FLD: Company Name and Address
      * I : MAP Name
     I                                        1  30 P3ADTX
     IP4PARM      DS
      * N :  Select Option
     I                                        1   1 P4OPTI
     IP5PARM      DS
      * N :  Production Date RGF
     I                                    P   1   40P5GVDT
     IP6PARM      DS
      * N :  First Label Date    USR
     I                                    P   1   40P6NJDT
     IP7PARM      DS
      * FLD: *Arrays
      * B :  *Initial call
     I                                        1   1 P7ICL
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Requested Delv Date Error'
      * Requested Delivery Dt
     I                                    P   1   40ZA0001
      * Message data for 'Scheduled Ship Date Req'd'
      * Scheduled Ship Date
     I                                    P   1   40ZA0002
      * Message data for 'PrdDte Shipped BEF Made'
      * Production AgeDte Fr
     I                                    P   1   40ZA0003
      * Message data for 'Enter Age Days or Dates'
      * Item Age Days
     I                                    P   1   30ZA0004
      * Production Ovr AgeDte Fr
     I                                    P   4   70ZA0005
      * Production Ovr AgeDte To
     I                                    P   8  110ZA0006
      * Message data for 'Age OvrDate Ranage Invlid'
      * Item Age Days
     I                                    P   1   30ZA0007
      * Production Ovr AgeDte Fr
     I                                    P   4   70ZA0008
      * Production Ovr AgeDte To
     I                                    P   8  110ZA0009
      * Message data for 'Age OvrDate Ranage Invlid'
      * Item Age Days
     I                                    P   1   30ZA0010
      * Production Ovr AgeDte Fr
     I                                    P   4   70ZA0011
      * Production Ovr AgeDte To
     I                                    P   8  110ZA0012
      * Message data for 'Age OvrDate Ranage Invlid'
      * Item Age Days
     I                                    P   1   30ZA0013
      * Production Ovr AgeDte Fr
     I                                    P   4   70ZA0014
      * Production Ovr AgeDte To
     I                                    P   8  110ZA0015
      * Message data for 'Invalid Item Age Days'
      * Item Age Days
     I                                    P   1   30ZA0016
      * Message data for 'Invalid Prod OvrDates'
      * Production AgeDte Fr
     I                                    P   1   40ZA0017
      * Production AgeDte To
     I                                    P   5   80ZA0018
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1HGCD    PARM           WP0002  70       Item Code
     C           P1AVNA    PARM           WP0003 30        Description Lin
     C           P1ADCD    PARM           WP0004  2        U/M - Primary
     C           P1AWPC    PARM           WP0005  94       Conversion Fact
     C           P1LXST    PARM           WP0006  1        Operation Facto
     C           P1AECD    PARM           WP0007  2        U/M - Second
     C           P1AXPC    PARM           WP0008  94       Conversion Fact
     C           P1LYST    PARM           WP0009  1        Operation Facto
     C           P1AFCD    PARM           WP0010  2        U/M - Third
     C           P1AIWG    PARM           WP0011 112       Unit Weight
     C           P1FZST    PARM           WP0012  1        Production Date
     C           P1AVST    PARM           WP0013  1        Catch Weight St
     C           P2AJCD    PARM           WP0014  3        Warehouse Code
     C           P2F8NA    PARM           WP0015 30        Warehouse Descr
     C           P3ADTX    PARM           WP0016 30        Name
     C           P7ICL     PARM P7ICL     WP0017  1        *Initial call
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
     C                     Z-ADD*ZERO     #CJPNX           Inv/Ord Diff
     C                     Z-ADD*ZERO     #CJNNX           Inv Current
     C                     Z-ADD*ZERO     #CJONX           Inv Aged
      * Init Toggle Text field
      * CASE: CTL.Toggle Text 1         USR EQ WRK.BLANK 1
     C           #CUMTX    IFEQ WUJ1TX                     *IF
     C                     MOVEL'Qty'     #CUMTX           Toggle Text 1
     C                     MOVEL'Qty'     #CUNTX           Toggle Text 2
     C                     MOVEL'Qty'     #CUOTX           Toggle Text 3
     C                     MOVEL'Qty'     #CUPTX           Toggle Text 4
     C                     END                             *FI
      * CTL.Condition Desc. 1  USR = Condition name of PAR.Catch Weight S
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100273   Y2LSNO  70       List number
     C                     PARM P1AVST    W0INVL 25        Catch Weight St
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #CHLTX    PARM           W0CNNM 25        Condition Desc.
      *
      * Del Qty Sched for Age  DL - *Arrays  * 
     C                     EXSR SADLRC
      * ** Build array using label dates from Item Balance Detail file
      * ** If Qty On-Hand-Weight is not zeros, add the date to the array
      * ** and initialize the quantity field to zeros.
      * Rtv Bld Label Dt Array RT - Item Balance Detail  * 
     C                     EXSR SBRVGN
      * ** Calculate the label date based on the age code and scheduled
      * ** ship date. The age code number of days is subtracted
      * ** from the scheduled ship date and the result is used to look up
      * ** the corresponding label date. The scheduled quantity is added
      * ** to the corresponding quantity bucket
      * FP1309 calculate the label date
      * slm 08/04/2010
      * Rtv Sched Qty/Label Dt RT - Order Detail  * 
     C                     EXSR SDRVGN
      * USED ONLY FOR TESTING
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SIRVGN
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
     C                     EXSR SJRVGN
      * Rtv Chilling Time     IF
      * Rtv Chill Time        RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0005           Company Number
     C                     Z-ADD#2HGCD    WL0006           Item Code
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    #CCSHD           Fresh Chilling
      *
     C                     Z-ADD*ZERO     WN0004 155       System Value Nu
      *
      * Rtv Whs Typ/FZNCHLTME IF
      * RTV Warehouse Type     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#2AJCD    WL0008    P      Warehouse Code
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0009    WUWPST    P      Warehouse Type
      * CASE: PAR.Warehouse Type is Frozen
     C           WUWPST    IFEQ 'FZ'                       *IF
      * RTV Numeric Value      RT - Company Values  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0010           Company Number
     C                     MOVEL@CN,002   WL0011    P      Company Value C
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0012    WN0004           System Value Nu
     C                     Z-ADDWN0004    #CCSHD           Fresh Chilling
     C                     END                             *FI
      * RTV On Hand Qty       RT - Item Balance  * 
     C                     EXSR SNRVGN
      * RTV Itm Inq -Opn Ords RT - Order Detail  * 
     C                     EXSR SORVGN
      * Rtv Current/Aged Inv  RT - Item Balance Detail  * 
     C                     EXSR SPRVGN
     C           #CQUTO    SUB  #CQUOP    #CJPNX           Inv/Ord Diff
      * C5516  Toggle Quantities/Weights for the on-screen values
      * F13=Toggle quantity/weight
      * CASE: CTL.*CMD key is CF13
     C           *IN13     IFEQ '1'                        *IF
      * CASE: WRK.Status Flag 4  Y/N is yes
     C           WUFMST    IFEQ 'Y'                        *IF
      * no  = display quantities
     C                     MOVEL'N'       WUFMST           Status Flag 4
     C                     MOVEL'Qty'     #CUMTX           Toggle Text 1
     C                     MOVEL'Qty'     #CUNTX           Toggle Text 2
     C                     MOVEL'Qty'     #CUOTX           Toggle Text 3
     C                     MOVEL'Qty'     #CUPTX           Toggle Text 4
     C                     ELSE
      * CASE: *OTHERWISE
      * yes = display weights
     C                     MOVEL'Y'       WUFMST           Status Flag 4
     C                     MOVEL'Wgt'     #CUMTX           Toggle Text 1
     C                     MOVEL'Wgt'     #CUNTX           Toggle Text 2
     C                     MOVEL'Wgt'     #CUOTX           Toggle Text 3
     C                     MOVEL'Wgt'     #CUPTX           Toggle Text 4
     C                     END                             *FI
     C                     END                             *FI
      * ** Calc weights for aged, curr, open ord, on hand, inv/ord differ
      * CASE: WRK.Status Flag 4  Y/N is yes
     C           WUFMST    IFEQ 'Y'                        *IF
      * ** Weight contains decimals. All weight fields are accumulated
      * ** then moved into screen fields with no decimals. This
      * ** action truncates the decimal place without rounding.
      * ** Get Aged and Current weight, put in screen fields     1/18/06
      * Rtv Current/Aged Wgt  RT - Item Balance Detail  * 
     C                     EXSR SQRVGN
     C                     Z-ADDWUJEWG    #CJNNX           Inv Current
     C                     Z-ADDWUJFWG    #CJONX           Inv Aged
      * ** Get On Hand weight and put in quantity-on-hand field    1/18/0
      * RTV Avail Qty - Alloc  RT - Item Balance  * 
     C                     EXSR SRRVGN
     C                     Z-ADDWUJGWG    #CQUTO           Quantity On-Han
      * ** Get Scheduled weight and put in Ctl.Quantity Open field
      * RTV ItmInq-OpnOrds,Wgt RT - Order Detail  * 
     C                     EXSR SSRVGN
     C                     Z-ADDWUJIWG    #CQUOP           Quantity Open
      * ** Calculate Inv/Ord Difference for Weights      1/18/06 LJB
      * **   Use the work fields for the calculation
     C           WUJGWG    SUB  WUJIWG    #CJPNX           Inv/Ord Diff
     C                     END                             *FI
      * Rtv Picked Qty Tot    RT - PFS Inventory Adjustment  * 
     C                     EXSR STRVGN
     C                     Z-ADD#2HGCD    YL0011           USR Work Field
     C                     MOVEL*BLANK    YL0012           USR Work Field
     C                     MOVELYL0011    YL0012           USR Work Field
      * Rtv InTransit Qty     RT - PFS CT Intransit Carton  * 
     C                     EXSR SURVGN
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           B1AIC3           Company Number
     C                     KFLD           B1AJCD           Warehouse Code
     C                     KFLD           B1HGCD           Item Code
     C                     KFLD           B1ELDT           Production Date
      * Setup key
     C                     Z-ADD#2AIC3    B1AIC3
     C                     MOVEL#2AJCD    B1AJCD
     C                     Z-ADD#2HGCD    B1HGCD
     C                     Z-ADD#2ELDT    B1ELDT
     C           KPOS      SETLL@B1RESE
     C           KRST      KLIST
     C                     KFLD           B1AIC3           Company Number
     C                     KFLD           B1AJCD           Warehouse Code
     C                     KFLD           B1HGCD           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    B1AIC3
     C                     MOVEL#2AJCD    B1AJCD
     C                     Z-ADD#2HGCD    B1HGCD
     C           KRST      READE@B1RESE                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2ACWG    WZACWG
     C                     MOVEL#2ACWG    WZACWG           Quantity on Han
     C           *LIKE     DEFN #2ATQT    WZATQT
     C                     MOVEL#2ATQT    WZATQT           Quantity on Han
     C           *LIKE     DEFN #2IDVA    WZIDVA
     C                     MOVEL#2IDVA    WZIDVA           Value of On Han
     C           *LIKE     DEFN #2AIC3    WZAIC3
     C                     MOVEL#2AIC3    WZAIC3           Company Number
     C           *LIKE     DEFN #2HGCD    WZHGCD
     C                     MOVEL#2HGCD    WZHGCD           Item Code
     C           *LIKE     DEFN #2AJCD    WZAJCD
     C                     MOVEL#2AJCD    WZAJCD           Warehouse Code
     C           *LIKE     DEFN #2ELDT    WZELDT
     C                     MOVEL#2ELDT    WZELDT           Production Date
     C           *LIKE     DEFN #2K7DT    WZK7DT
     C                     MOVEL#2K7DT    WZK7DT           Label Date
     C           *LIKE     DEFN #2ARQT    WZARQT
     C                     MOVEL#2ARQT    WZARQT           Quantity on Han
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@B1RESE                  90*
     C  N82                READ @B1RESE                  90*
     C                     END
      *
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2ACWG    IFNE *ZERO                      Quantity on Han
     C           B1ACWG    CABNE#2ACWG    BB020            Quantity on Han
     C                     END
     C           #2ATQT    IFNE *ZERO                      Quantity on Han
     C           B1ATQT    CABNE#2ATQT    BB020            Quantity on Han
     C                     END
     C           #2IDVA    IFNE *ZERO                      Value of On Han
     C           B1IDVA    CABNE#2IDVA    BB020            Value of On Han
     C                     END
     C           #2K7DT    IFNE *ZERO                      Label Date
     C           B1K7DT    CABNE#2K7DT    BB020            Label Date
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * CASE: DB1.Quantity on Hand - Weight is Equal to zero
     C           B1ACWG    IFEQ *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * Describe Mode of Calculation
      * CASE: CTL.*CMD key is CF11
     C           *IN11     IFEQ '1'                        *IF
     C                     MOVEL@CN,003   #CJUNA           USR Description
     C                     MOVEL'1'       P4OPTI           Select Option
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CTL.*CMD key is CF12
     C           *IN12     IFEQ '1'                        *IF
     C                     MOVEL@CN,004   #CJUNA           USR Description
     C                     MOVEL'2'       P4OPTI           Select Option
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CTL.*CMD key is CF10
     C           *IN10     IFEQ '1'                        *IF
     C                     MOVEL@CN,005   #CJUNA           USR Description
     C                     MOVEL*BLANK    P4OPTI           Select Option
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CTL.*CMD key is CF13
     C           *IN13     IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL@CN,005   #CJUNA           USR Description
     C                     MOVEL*BLANK    P4OPTI           Select Option
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     #RQPQT           Qty Produced
     C                     Z-ADD*ZERO     #RAUNB           Qty Produced 2
      * Rtv Tran qty by Trn TypRT - Item Transaction Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0013           Company Number
     C                     Z-ADD#1HGCD    WL0014           Item Code
     C                     MOVEL#1AJCD    WL0015    P      Warehouse Code
     C                     Z-ADD#1ELDT    WL0016           Production Date
     C                     Z-ADD#RQPQT    WL0017           Qty Produced
     C                     MOVELP4OPTI    WL0018    P      Select Option
     C                     MOVEL'1'       WL0019    P      Shift Number
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0017    #RQPQT           Qty Produced
      * Rtv Tran qty by Trn TypRT - Item Transaction Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0013           Company Number
     C                     Z-ADD#1HGCD    WL0014           Item Code
     C                     MOVEL#1AJCD    WL0015    P      Warehouse Code
     C                     Z-ADD#1ELDT    WL0016           Production Date
     C                     Z-ADD#RAUNB    WL0017           Qty Produced
     C                     MOVELP4OPTI    WL0018    P      Select Option
     C                     MOVEL'2'       WL0019    P      Shift Number
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0017    #RAUNB           Qty Produced
     C                     Z-ADD#1ARQT    #RCL11           @Calc 11,0
      * CLC Age Code #ofDays  XF - Item Balance Detail  * 
     C                     CALL 'PNO6XFR'              90  CLC Age Code #o
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1ELDT    WQ0027  70       Production Date
     C                     PARM #1AJCD    WQ0028  3        Warehouse Code
     C                     PARM #1AIC3    WQ0029  30       Company Number
     C                     PARM #1HGCD    WQ0030  70       Item Code
     C           #RRENY    PARM *ZERO     WQ0031  40       @Number of Days
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO6XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * Rtv Order Age Quantity RT - *Arrays  * 
     C                     EXSR SWRVGN
      *
     C                     MOVEL*BLANK    WN0005  8        Date (Char-8) U
     C                     MOVEL*BLANK    WN0006  4        Year Alpha (YYY
     C                     MOVEL*BLANK    WN0007  2        Month (Char) US
     C                     MOVEL*BLANK    WN0008  2        Day   (Char) US
      *
      * CNV cyymmdd to yyyymmdd
      * LCL.Year Code = PAR.Date In  (7,0) USR *YEAR
     C           #1K7DT    ADD  1000000   XDINDT
     C           1800      ADD  XDINYY    YL0014
      * LCL.Month NBR USR = PAR.Date In  (7,0) USR *MONTH
     C           #1K7DT    ADD  1000000   XDINDT
     C                     Z-ADDXDINMM    YL0015
      * LCL.Day of Month USR = PAR.Date In  (7,0) USR *DAY OF MONTH
     C           #1K7DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD0         XDINDD
     C                     EXSR XCVTA
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,006   XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0016
     C                     MOVEL*BLANK    WN0006           Year Alpha (YYY
     C                     MOVELYL0014    WN0006           Year Alpha (YYY
     C                     MOVELYL0015    WN0007           Month (Char) US
     C                     MOVELYL0016    WN0008           Day   (Char) US
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0006    CAT  WN0007:ZQ WN0005    P      Date (Char-8) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0005    CAT  WN0008:ZQ WN0005    P      Date (Char-8) U
     C                     MOVE WN0005    YL0013           Date Out (8,0)
      * Rtv Picked Qty        RT - PFS Inventory Adjustment  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0020           PFS Company Num
     C                     MOVEL#1AJCD    WL0021    P      PFS Warehouse C
     C                     Z-ADD#1HGCD    WL0022           PFS Item Code
     C                     Z-ADDYL0013    WL0023           PFS Label Date
     C                     Z-ADD#ROXQT    WL0024           Quantity Picked
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0024    #ROXQT           Quantity Picked
     C           #RCL11    SUB  #ROXQT    #RHJNX           Quantity Avail
      * ** Change Toggle calculations. They were calculating an estimated
      * ** weight based on the conversion factor. Users need to see the
      * ** actual weight stored in the files.       1/18/06  LJB
      * ** Weight fields are placed in the quantity user fields on the
      * ** screen when F13 is pressed.
      * ** Put detail fields for weights onto the screen    1/18/06  LJB
      * CASE: WRK.Status Flag 4  Y/N is yes
     C           WUFMST    IFEQ 'Y'                        *IF
      * ** Put Quantity on-hand - weight, into the screen field      1/18
      * ** This particular move truncates the decimal places.
     C                     Z-ADD#1ACWG    #RCL11           @Calc 11,0
      * Get weight produced by Shift 1 & Shift 2       1/18/06 LJB
     C                     EXSR UASUBR                     Get weight prod
      * ** Weight committed is estimated at this point, per Purva
      * ** Multiply the Quantity Committed by the conversion factor
      * ** in the control record (u/m primary)      1/19/06  LJB
     C           #RIRQT    MULT #PAWPC    WUD0WG    H      Weight Ordered
     C                     Z-ADDWUD0WG    #RIRQT           Quantity Ordere
      * ** Calc 11,0 contains Weight (Quantity On-Hand-weight)
      * Rtv Picked Qty        RT - PFS Inventory Adjustment  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0020           PFS Company Num
     C                     MOVEL#1AJCD    WL0021    P      PFS Warehouse C
     C                     Z-ADD#1HGCD    WL0022           PFS Item Code
     C                     Z-ADDYL0013    WL0023           PFS Label Date
     C                     Z-ADD#ROXQT    WL0024           Quantity Picked
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0024    #ROXQT           Quantity Picked
     C           #RCL11    SUB  #ROXQT    #RHJNX           Quantity Avail
     C                     END                             *FI
     C                     END                             *FI
      * SFL Fold/Drop  RPG 2  US - /UT User Source  * 
     C           MODE      IFEQ '0'
     C                     SETON                     89
     C                     ELSE
     C                     SETOF                     89
     C                     ENDIF
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C           KRST      READE@B1RESE                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate Production Date
      * External date
     C                     Z-ADDV2ELDT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     Z-ADDXDINDT    #2ELDT
      * Validate Label Date
      * External date
     C                     Z-ADDV2K7DT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     Z-ADDXDINDT    #2K7DT
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZELDT    CASNE#2ELDT    FBRQRL
     C           WZK7DT    CASNE#2K7DT    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * CASE:
      *  - c1ORc2ORc3ORc4
      *   |- c1    : CTL.*CMD key is CF10
      *   |- c2    : CTL.*CMD key is CF11
      *   |- c3    : CTL.*CMD key is CF12
      *   |- c4    : CTL.*CMD key is CF13
      *   '-
     C           *IN10     IFEQ '1'                        *IF
     C           *IN11     OREQ '1'                        *OR
     C           *IN12     OREQ '1'                        *OR
     C           *IN13     OREQ '1'                        *OR
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL'Y'       WUTAST           First Time Flag
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: Process command keys
      * CASE: CTL.*CMD key is CF14
     C           *IN14     IFEQ '1'                        *IF
      * CASE: PAR.*Initial call is *NO
     C           P7ICL     IFEQ 'N'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       P7ICL            *Initial call
      * Dsp Item Orders       DF - Order Detail  * 
     C                     CALL 'PDO7DFR'              90  Dsp Item Orders
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2AIC3    WQ0032  30       Company Number
     C                     PARM #2HGCD    WQ0033  70       Item Code
     C                     PARM ##JDT     WQ0034  70       Scheduled Ship
     C                     PARM #PADTX    WQ0035 30        Name
     C                     PARM #2AJCD    WQ0036  3        Warehouse Code
     C           P7ICL     PARM P7ICL     WQ0037  1        *Initial call
     C                     PARM YL0007    WQ0038  2        Warehouse Type
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDO7DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       P7ICL            *Initial call
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C                     MOVEL'0'       *IN78
     C           P1FZST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C                     MOVEL'0'       *IN79
     C           P1FZST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @B1RESE fields to subfile
      *================================================================
     C                     Z-ADDB1AIC3    #1AIC3           Company Number
     C                     Z-ADDB1HGCD    #1HGCD           Item Code
     C                     MOVELB1AJCD    #1AJCD           Warehouse Code
     C                     Z-ADDB1ACWG    #1ACWG           Quantity on Han
     C                     Z-ADDB1ABWG    #1ABWG           Physical Count
     C                     Z-ADDB1AGQT    #1AGQT           Physical Count
     C                     Z-ADDB1AHQT    #1AHQT           Physical Count
     C                     Z-ADDB1AIQT    #1AIQT           Physical Count
     C                     MOVELB1CTST    #1CTST           Physical Count
     C                     Z-ADDB1ARQT    #1ARQT           Quantity on Han
     C                     Z-ADDB1ASQT    #1ASQT           Quantity on Han
     C                     Z-ADDB1ATQT    #1ATQT           Quantity on Han
     C                     Z-ADDB1HDQT    #1HDQT           Quantity In Chi
     C                     Z-ADDB1HEQT    #1HEQT           Weight In Chill
     C                     MOVELB1F6ST    #1F6ST           Update Exceptio
     C                     Z-ADDB1BMWG    #1BMWG           Physical Start
     C                     Z-ADDB1DSQT    #1DSQT           Physical Start
     C                     Z-ADDB1DTQT    #1DTQT           Physical Start
     C                     Z-ADDB1DUQT    #1DUQT           Physical Start
     C                     Z-ADDB1DHDT    #1DHDT           Physical Start
     C                     Z-ADDB1AGCS    #1AGCS           Unit Cost Per P
     C                     Z-ADDB1AECS    #1AECS           Last Cost
     C                     Z-ADDB1IDVA    #1IDVA           Value of On Han
     C                     Z-ADDB1RINB    #1RINB           Item Structure
     C                     Z-ADDB1RHNB    #1RHNB           Item Structure
     C                     Z-ADDB1RGNB    #1RGNB           Item Structure
     C                     MOVELB1UVST    #1UVST           EDI Status 1
     C                     MOVELB1UWST    #1UWST           EDI Status 2
     C                     MOVELB1UXST    #1UXST           EDI Status 3
     C                     MOVELB1VSST    #1VSST           Record Status
     C                     Z-ADDB1AATM    #1AATM           Job Time
     C                     MOVELB1AYNA    #1AYNA           User Id
     C                     MOVELB1A0NA    #1A0NA           Job Name
     C                     Z-ADDB1AXDT    #1AXDT           Job Date
     C                     Z-ADDB1ELDT    #1ELDT           Production Date
      * Clear external version also
     C                     Z-ADD*ZERO     V1ELDT
     C                     Z-ADDB1K7DT    #1K7DT           Label Date
      * Clear external version also
     C                     Z-ADD*ZERO     V1K7DT
     C                     Z-ADD*ZERO     #RASCS           USR Cost
     C                     MOVEL*BLANK    #RPFTX           Text 1 Length U
     C                     Z-ADD*ZERO     #RCLC4           @Calc 4,0
     C                     Z-ADD*ZERO     #RTRNB           Calc 4
     C                     Z-ADD*ZERO     #RCL11           @Calc 11,0
     C                     Z-ADD*ZERO     #RQPQT           Qty Produced
     C                     Z-ADD*ZERO     #RAUNB           Qty Produced 2
     C                     Z-ADD*ZERO     #RRENY           @Number of Days
     C                     Z-ADD*ZERO     #RIRQT           Quantity Ordere
     C                     Z-ADD*ZERO     #ROXQT           Quantity Picked
     C                     Z-ADD*ZERO     #RHJNX           Quantity Avail
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADD*ZERO     #CM168           Calc 5,0
     C                     Z-ADDP1AWPC    #PAWPC           Conversion Fact
     C                     MOVELP1LXST    #PLXST           Operation Facto
     C                     Z-ADD*ZERO     #CM178           Number 5,0
     C                     MOVELP1AECD    #PAECD           U/M - Second
     C                     Z-ADDP1AXPC    #PAXPC           Conversion Fact
     C                     MOVELP1LYST    #PLYST           Operation Facto
     C                     MOVELP1AFCD    #PAFCD           U/M - Third
     C                     Z-ADD*ZERO     #CNIDT           AS Last Update
     C                     Z-ADD*ZERO     #CBKTM           AS Last Update
     C                     Z-ADD*ZERO     #CCLC5           @Calc 5,0
     C                     Z-ADD*ZERO     #2ACWG           Quantity on Han
     C                     Z-ADD*ZERO     #2ATQT           Quantity on Han
     C                     Z-ADD*ZERO     #2IDVA           Value of On Han
     C                     MOVEL*BLANK    #CPFTX           Text 1 Length U
     C                     Z-ADD*ZERO     #CCLC4           @Calc 4,0
     C                     Z-ADD*ZERO     #CTRNB           Calc 4
     C                     Z-ADDP1AIC3    #2AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V2AIC3
     C                     MOVELP3ADTX    #PADTX           Name
     C                     MOVEL*BLANK    #CHLTX           Condition Desc.
     C                     Z-ADDP1HGCD    #2HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V2HGCD
     C                     MOVELP1AVNA    #PAVNA           Description Lin
     C                     Z-ADD*ZERO     #CCSHD           Chill Time USR
     C                     MOVELP2AJCD    #2AJCD           Warehouse Code
     C                     MOVELP2F8NA    #PF8NA           Warehouse Descr
     C                     Z-ADD*ZERO     #CJNNX           Inv Current
     C                     MOVELP1ADCD    #PADCD           U/M - Primary
     C                     Z-ADD*ZERO     #CAIWG           Unit Weight
     C                     Z-ADD*ZERO     #CJONX           Inv Aged
     C                     Z-ADD*ZERO     #COXQT           Quantity Picked
     C                     Z-ADD*ZERO     #CQUTO           Quantity On-Han
     C                     Z-ADD*ZERO     #CIWNX           Quantity Transf
     C                     Z-ADD*ZERO     #CQUOP           Quantity Open
     C                     MOVEL*BLANK    #CJUNA           USR Description
     C                     Z-ADD*ZERO     #CJPNX           Inv/Ord Diff
     C                     MOVEL*BLANK    #CUMTX           Toggle Text 1
     C                     MOVEL*BLANK    #CUNTX           Toggle Text 2
     C                     MOVEL*BLANK    #CUOTX           Toggle Text 3
     C                     MOVEL*BLANK    #CUPTX           Toggle Text 4
     C                     Z-ADD*ZERO     #2ELDT           Production Date
      * Clear external version also
     C                     Z-ADD*ZERO     V2ELDT
     C                     Z-ADD*ZERO     #2K7DT           Label Date
      * Clear external version also
     C                     Z-ADD*ZERO     V2K7DT
     C                     Z-ADD*ZERO     #2ARQT           Quantity on Han
     C                     Z-ADD*ZERO     #CQPQT           Qty Produced
     C                     Z-ADD*ZERO     #CAUNB           Qty Produced 2
     C                     Z-ADD*ZERO     #CRENY           @Number of Days
     C                     Z-ADD*ZERO     #CIRQT           Quantity Ordere
      * Check restriction within
     C                     EXSR VACKRL
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert Production Date to display format
      * Convert date
     C           1000000   ADD  #1ELDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1ELDT
      * Convert Label Date to display format
      * Convert date
     C           1000000   ADD  #1K7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1K7DT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2HGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2HGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Production Date to display format
      * Convert date
     C           1000000   ADD  #2ELDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V2ELDT
      * Convert Label Date to display format
      * Convert date
     C           1000000   ADD  #2K7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V2K7DT
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SADLRC    BEGSR
      *================================================================
      * Del Qty Sched for Age  DL - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Bld Label Dt Array RT - Item Balance Detail  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0001  1        First Time Flag
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'Y'       WN0001           First Time Flag
      * Declare restrictor key work fields
     C           *LIKE     DEFN B1AIC3    WQSB01           Company Number
     C           *LIKE     DEFN B1AJCD    WQSB02           Warehouse Code
     C           *LIKE     DEFN B1HGCD    WQSB03           Item Code
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Company Number
     C                     KFLD           WQSB02           Warehouse Code
     C                     KFLD           WQSB03           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSB01           Company Number
     C                     MOVEL#2AJCD    WQSB02           Warehouse Code
     C                     Z-ADD#2HGCD    WQSB03           Item Code
      * Establish starting position
     C           KRSSB     SETLL@B1RESE                    *
     C           KRSSB     READE@B1RESE                  90*
      * Data record not found
     C   90                MOVEL'USR0330' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Quantity on Hand - Weight is Not equal zero
     C           B1ACWG    IFNE *ZERO                      *IF
      * Crt Date for Qty Sched CR - *Arrays  * 
     C                     EXSR SCCRRC
      * CASE: PAR.First Time Flag is Yes
     C           WN0001    IFEQ 'Y'                        *IF
     C                     Z-ADDB1K7DT    P6NJDT           First Label Dat
     C                     MOVEL'N'       WN0001           First Time Flag
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSB     READE@B1RESE                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCCRRC    BEGSR
      *================================================================
      * Crt Date for Qty Sched CR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL01      IFEQ 100
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C                     Z-ADD*ZERO     XAK7DT           Label Date
     C                     Z-ADD*ZERO     XAAVQT           Quantity Ordere
      * Move all fields to Date for Qty Sched by Age
     C                     Z-ADDB1K7DT    XAK7DT           Label Date
     C                     Z-ADD*ZERO     XAAVQT           Quantity Ordere
      *
      * Move key fields to Date for Qty Sched by Age
     C                     Z-ADDXAK7DT    YI0101           Label Date
      *
      * Check for duplicate primary key
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFEQ XAK7DT
      * Array element already exists
     C                     MOVEL'Y2U0003' W0RTN   7
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Insert after last used element
     C           YL01      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK01,Y    IFNE *HIVAL
      * If so, reuse MODS index
     C                     MOVELYK01,Y    YD01
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI01
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to Date for Qty Sched by Age
     C                     Z-ADDXAK7DT    YI0101           Label Date
      *
     C                     MOVELYD01      YK01,Y
     C           YI01      OCUR YM01
      * Update MODS fields
     C                     Z-ADDXAK7DT    WAK7DT           Label Date
     C                     Z-ADDXAAVQT    WAAVQT           Quantity Ordere
      * Only sort if element is out of position
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDGTYD01
     C                     ADD  1         YR01    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK01
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL01
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Sched Qty/Label Dt RT - Order Detail  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0002  70       Label Date  USR
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSD01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSD02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSD03           Warehouse Code
      * Define keylist
     C           KPSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Item Code
     C                     KFLD           WQSD03           Warehouse Code
     C                     KFLD           OMAODT           Scheduled Ship
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Item Code
     C                     KFLD           WQSD03           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSD01           Company Number
     C                     Z-ADD#2HGCD    WQSD02           Item Code
     C                     MOVEL#2AJCD    WQSD03           Warehouse Code
     C                     Z-ADDP6NJDT    OMAODT           Scheduled Ship
      * Establish starting position
     C           KPSSD     SETLL@BGWKYG                    *
     C           KRSSD     READE@BGWKYG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * rmc 7/07/09 added comp to bill act type
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0001           Company Number
     C                     Z-ADDOMC4NB    WL0002           Order Number
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Header Status
     C                     MOVELWL0004    YL0002    P      Billing Activit
      * CASE: LCL.Billing Activity Type is Invoice or Transfer
     C           YL0002    IFEQ '1'                        *IF
     C           YL0002    OREQ '4'
      * 8/4/2010 slm FP1309 Inventory Age --- Calculate the Label date
      * We believe that this is calculating the From Date
      * RTV Req Delv/Hdr Sts  RT - Order Header TRG  * 
     C                     EXSR SFRVGN
      * Val Age Information   IF
     C                     MOVEL*BLANK    WUB8SX           Error Flag
     C                     MOVEL*BLANK    YL0006           Error Status
     C                     MOVEL*BLANK    WUKWTX           Error Reason De
     C                     MOVEL*BLANK    WUKXTX           Error Reason De
     C                     MOVEL*BLANK    WUKYTX           Error Reason De
     C                     MOVEL*BLANK    WUKZTX           Error Reason De
     C                     MOVEL*BLANK    WUTITX           Error Reason De
      * CASE: PAR.Company Organization is Seaboard
     C           'S'       IFEQ 'S'                        *IF
      * CASE: PAR.Requested Delivery Date is not entered
     C           YL0003    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Convert Requested Delivery Date to display format
      * Convert date
     C           1000000   ADD  YL0003    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0001
      * Send message 'Requested Delv Date Error'
     C                     MOVEL'USR4329' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: PAR.Scheduled Ship Date is not entered
     C           OMAODT    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Convert Scheduled Ship Date to display format
      * Convert date
     C           1000000   ADD  OMAODT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0002
      * Send message 'Scheduled Ship Date Req'd'
     C                     MOVEL'USR2230' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Val Age information   XF - Order Detail  * 
     C                     CALL 'PNQNXFR'              90  Val Age informa
     C                     PARM *BLANK    W0RTN   7
     C                     PARM OMHGCD    WQ0001  70       Item Code
     C                     PARM OMAJCD    WQ0002  3        Warehouse Code
     C           WUB8SX    PARM WUB8SX    WQ0003  1        Error Flag
     C           WUKWTX    PARM WUKWTX    WQ0004 30        Error Reason De
     C           WUKXTX    PARM WUKXTX    WQ0005 30        Error Reason De
     C           WUKYTX    PARM WUKYTX    WQ0006 30        Error Reason De
     C           WUKZTX    PARM WUKZTX    WQ0007 30        Error Reason De
     C           WUTITX    PARM WUTITX    WQ0008 30        Error Reason De
     C                     PARM OMAIC3    WQ0009  30       Company Number
     C                     PARM OMAODT    WQ0010  70       Scheduled Ship
     C                     PARM YL0003    WQ0011  70       Requested Deliv
     C                     PARM OMRINY    WQ0012  40       Item Age Days
     C                     PARM OMTIDT    WQ0013  70       Production Ovr
     C                     PARM OMTJDT    WQ0014  70       Production Ovr
     C           YL0004    PARM YL0004    WQ0015  70       Production AgeD
     C           YL0005    PARM YL0005    WQ0016  70       Production AgeD
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNQNXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Verify if message should be sent if validation is required
      * CASE:
      *  - c1 AND c2
      *   |- c1    : WRK.Error Flag            USR is Yes
      *   |- c2    : PAR.Production Dates Sts Usr is Validation routine
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUB8SX    IFEQ 'Y'                        *IF
     C           'C'       IFEQ 'V'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * message 1 Product is shipped before product is made
      * CASE: WRK.Error Reason Descript 1 NE WRK.Blank for 30          US
     C           WUKWTX    IFNE WUW4TX                     *IF
      * Setup message data for message
      * Convert Production AgeDte Fr to display format
      * Convert date
     C           1000000   ADD  YL0004    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0003
      * Send message 'PrdDte Shipped BEF Made'
     C                     MOVEL'USR4307' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
      * message 2 Either Days or override date but not both
      * CASE: WRK.Error Reason Descript 2 NE WRK.Blank for 30          US
     C           WUKXTX    IFNE WUW4TX                     *IF
      * Setup message data for message
     C                     Z-ADDOMRINY    ZA0004           Item Age Days
      * Convert Production Ovr AgeDte Fr to display format
      * Convert date
     C           1000000   ADD  OMTIDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0005
      * Convert Production Ovr AgeDte To to display format
      * Convert date
     C           1000000   ADD  OMTJDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0006
      * Send message 'Enter Age Days or Dates'
     C                     MOVEL'USR4304' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
      * message 3 With Chill Days Either Days or Override Dates required
      * CASE: WRK.Error Reason Descript 3 NE WRK.Blank for 30          US
     C           WUKYTX    IFNE WUW4TX                     *IF
      * Setup message data for message
     C                     Z-ADDOMRINY    ZA0007           Item Age Days
      * Convert Production Ovr AgeDte Fr to display format
      * Convert date
     C           1000000   ADD  OMTIDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0008
      * Convert Production Ovr AgeDte To to display format
      * Convert date
     C           1000000   ADD  OMTJDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0009
      * Send message 'Age OvrDate Ranage Invlid'
     C                     MOVEL'USR4305' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
      * message 4 From date is > then SHIP DATE
      * CASE: WRK.Error Reason Descript 4 NE WRK.Blank for 30          US
     C           WUKZTX    IFNE WUW4TX                     *IF
      * Setup message data for message
     C                     Z-ADDOMRINY    ZA0010           Item Age Days
      * Convert Production Ovr AgeDte Fr to display format
      * Convert date
     C           1000000   ADD  OMTIDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0011
      * Convert Production Ovr AgeDte To to display format
      * Convert date
     C           1000000   ADD  OMTJDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0012
      * Send message 'Age OvrDate Ranage Invlid'
     C                     MOVEL'USR4305' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
      * message 5 To date is > then SHIP DATE
      * CASE: WRK.Error Reason Descript 5 NE WRK.Blank for 30          US
     C           WUTITX    IFNE WUW4TX                     *IF
      * Setup message data for message
     C                     Z-ADDOMRINY    ZA0013           Item Age Days
      * Convert Production Ovr AgeDte Fr to display format
      * Convert date
     C           1000000   ADD  OMTIDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0014
      * Convert Production Ovr AgeDte To to display format
      * Convert date
     C           1000000   ADD  OMTJDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0015
      * Send message 'Age OvrDate Ranage Invlid'
     C                     MOVEL'USR4305' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
      * CASE: PAR.Production Ovr AgeDte Fr is not entered
     C           OMTIDT    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     Z-ADDOMRINY    ZA0016           Item Age Days
      * Send message 'Invalid Item Age Days'
     C                     MOVEL'USR4309' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Convert Production AgeDte Fr to display format
      * Convert date
     C           1000000   ADD  YL0004    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0017
      * Convert Production AgeDte To to display format
      * Convert date
     C           1000000   ADD  YL0005    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0018
      * Send message 'Invalid Prod OvrDates'
     C                     MOVEL'USR4310' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     MOVEL'Y'       YL0006           Error Status
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDYL0004    WN0002           Label Date  USR
      * Upd Sched Qtys by Age  RT - *Arrays  * 
     C                     EXSR SGRVGN
     C                     END                             *FI
     C           KRSSD     READE@BGWKYG                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0001    BEAIC3           Company Number
     C                     Z-ADDWL0002    BEC4NB           Order Number
      * Establish starting position
     C           KRSSE     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    WL0003           Header Status
     C                     MOVELBEOBST    WL0004           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Req Delv/Hdr Sts  RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDOMAIC3    BEAIC3           Company Number
     C                     Z-ADDOMC4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSSF     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBEEIDT    YL0003           Requested Deliv
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Upd Sched Qtys by Age  RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0003 112       Quantity Ordere
      *
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*LOVAL    YD01
      * Move key fields to Date for Qty Sched by Age
     C                     Z-ADDWN0002    YI0101           Label Date
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFGT YD01
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
      * If not past scheduled ship date add up quantities then quit.
      * CASE: DB1.Label Date LE PAR.Scheduled Ship Date
     C           WAK7DT    IFLE OMAODT                     *IF
     C           WAAVQT    ADD  OMCCQT    WN0003           Quantity Ordere
      * Chg Scheduled Qty's   CH - *Arrays  * 
     C                     EXSR SHCHRC
     C                     END                             *FI
     C                     GOTO SGEXIT                     *QUIT
     C                     ADD  1         YR01
     C                     ENDDO
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHCHRC    BEGSR
      *================================================================
      * Chg Scheduled Qty's   CH - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to Date for Qty Sched by Age
     C                     Z-ADDWAK7DT    YI0101           Label Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WAK7DT
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to Date for Qty Sched by Age
     C                     Z-ADDWN0003    WAAVQT           Quantity Ordere
      *
      *
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD#2AIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSI     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #PADTX           Name
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    #PADTX           Name
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#2AJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSJ     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,001   W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    #PF8NA           Warehouse Descr
     C                     MOVEL*BLANK    WUVHST           Lot Tracking Fl
     C                     MOVEL*BLANK    YL0007           Warehouse Type
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADF8NA    #PF8NA           Warehouse Descr
     C                     MOVELADVHST    WUVHST           Lot Tracking Fl
     C                     MOVELADWPST    YL0007           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv Chill Time        RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0005    BZAIC3           Company Number
     C                     Z-ADDWL0006    BZHGCD           Item Code
      * Establish starting position
     C           KRSSK     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0007           Fresh Chilling
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBZCHTM    WL0007           Fresh Chilling
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * RTV Warehouse Type     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0008    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSL     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0009           Warehouse Type
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBWPST    WL0009           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * RTV Numeric Value      RT - Company Values  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           KMAIC3           Company Number
     C                     KFLD           KMV8CD           Company Value C
      * Setup key
     C                     Z-ADDWL0010    KMAIC3           Company Number
     C                     MOVELWL0011    KMV8CD           Company Value C
      * Establish starting position
     C           KRSSM     CHAIN@KMREHC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2221' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDKMM8NB    WL0012           System Value Nu
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * RTV On Hand Qty       RT - Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     #CQUTO           On Hand U/M1 Su
      * Declare restrictor key work fields
     C           *LIKE     DEFN B0AIC3    WQSN01           Company Number
     C           *LIKE     DEFN B0AJCD    WQSN02           Warehouse Code
     C           *LIKE     DEFN B0HGCD    WQSN03           Item Code
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WQSN01           Company Number
     C                     KFLD           WQSN02           Warehouse Code
     C                     KFLD           WQSN03           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSN01           Company Number
     C                     MOVEL#2AJCD    WQSN02           Warehouse Code
     C                     Z-ADD#2HGCD    WQSN03           Item Code
      * Establish starting position
     C           KRSSN     SETLL@B0REHD                    *
     C           KRSSN     READE@B0REHD                  90*
      * Data record not found
     C   90                MOVEL'USR0328' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  B0DDQT    #CQUTO           On Hand U/M1 Su
     C           KRSSN     READE@B0REHD                  90*
     C                     ENDDO
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * RTV Itm Inq -Opn Ords RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     #CQUOP           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCAIC3    WQSO01           Company Number
     C           *LIKE     DEFN WCHGCD    WQSO02           Item Code
     C           *LIKE     DEFN WCAJCD    WQSO03           Warehouse Code
      * Define keylist
     C           KPSSO     KLIST
     C                     KFLD           WQSO01           Company Number
     C                     KFLD           WQSO02           Item Code
     C                     KFLD           WQSO03           Warehouse Code
     C                     KFLD           WCAODT           Scheduled Ship
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           WQSO01           Company Number
     C                     KFLD           WQSO02           Item Code
     C                     KFLD           WQSO03           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSO01           Company Number
     C                     Z-ADD#2HGCD    WQSO02           Item Code
     C                     MOVEL#2AJCD    WQSO03           Warehouse Code
     C                     Z-ADD##JDT     WCAODT           Scheduled Ship
      * Establish starting position
     C           KPSSO     SETLL@BGWKKG                    *
     C           KRSSO     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0001           Company Number
     C                     Z-ADDWCC4NB    WL0002           Order Number
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    WUGWST    P      Header Status
     C                     MOVELWL0004    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.First Time Flag is Yes
     C           WUTAST    IFEQ 'Y'                        *IF
     C                     ADD  WCCCQT    #CQUOP           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Scheduled Ship Date NE DB1.Scheduled Ship Date
     C           ##JDT     IFNE WCAODT                     *IF
     C                     GOTO SOEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  WCCCQT    #CQUOP           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSO     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Rtv Current/Aged Inv  RT - Item Balance Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     #CJNNX           Inv Current
     C                     Z-ADD*ZERO     #CJONX           Inv Aged
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSP01           Company Number
     C           *LIKE     DEFN WDHGCD    WQSP02           Item Code
     C           *LIKE     DEFN WDAJCD    WQSP03           Warehouse Code
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           WQSP01           Company Number
     C                     KFLD           WQSP02           Item Code
     C                     KFLD           WQSP03           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSP01           Company Number
     C                     Z-ADD#2HGCD    WQSP02           Item Code
     C                     MOVEL#2AJCD    WQSP03           Warehouse Code
      * Establish starting position
     C           KRSSP     SETLLCAB1RL4                    *
     C           KRSSP     READECAB1RL4                  90*
      * Data record not found
     C   90                MOVEL'USR0330' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CLC Age Code #ofDays  XF - Item Balance Detail  * 
     C                     CALL 'PNO6XFR'              90  CLC Age Code #o
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WDELDT    WQ0017  70       Production Date
     C                     PARM WDAJCD    WQ0018  3        Warehouse Code
     C                     PARM WDAIC3    WQ0019  30       Company Number
     C                     PARM WDHGCD    WQ0020  70       Item Code
     C           YL0008    PARM *ZERO     WQ0021  40       @Number of Days
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO6XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: LCL.@Number of Days to Age is 7 days to 121 days
     C           YL0008    IFGE 7                          *IF
     C           YL0008    ANDLE9999
     C                     ADD  WDARQT    #CJONX           Inv Aged
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  WDARQT    #CJNNX           Inv Current
     C                     END                             *FI
     C           KRSSP     READECAB1RL4                  90*
     C                     ENDDO
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * Rtv Current/Aged Wgt  RT - Item Balance Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUJEWG           Weight Prod 3 U
     C                     Z-ADD*ZERO     WUJFWG           Weight Prod 4 U
      * *****  Log
      * ** Accumulate all items 7 days old and older into aged - 1/18/06
      * ** Weight Prod 3 is Current and Weight Prod 4 is Aged
      * *****
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSQ01           Company Number
     C           *LIKE     DEFN WDHGCD    WQSQ02           Item Code
     C           *LIKE     DEFN WDAJCD    WQSQ03           Warehouse Code
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WQSQ01           Company Number
     C                     KFLD           WQSQ02           Item Code
     C                     KFLD           WQSQ03           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSQ01           Company Number
     C                     Z-ADD#2HGCD    WQSQ02           Item Code
     C                     MOVEL#2AJCD    WQSQ03           Warehouse Code
      * Establish starting position
     C           KRSSQ     SETLLCAB1RL4                    *
     C           KRSSQ     READECAB1RL4                  90*
      * Data record not found
     C   90                MOVEL'USR0330' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * FP1309 Inventory Age  IF
      * FP1309 Inventory Age Code Description
      * CLC Age Code #ofDays  XF - Item Balance Detail  * 
     C                     CALL 'PNO6XFR'              90  CLC Age Code #o
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WDELDT    WQ0022  70       Production Date
     C                     PARM WDAJCD    WQ0023  3        Warehouse Code
     C                     PARM WDAIC3    WQ0024  30       Company Number
     C                     PARM WDHGCD    WQ0025  70       Item Code
     C           YL0009    PARM *ZERO     WQ0026  40       @Number of Days
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO6XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * ** Accumulate all items 7 days old and older into aged - 1/18/06
      * ** Inv Aged and Inv Current are both used to store weight since
      * ** these fields are already on the Item/Warehouse Inquire Details
      * ** screen.
      * ** Calculate the weight for the quantity on hand
      * CASE: LCL.@Number of Days to Age is 7 days to 121 days & Over
     C           YL0009    IFGE 7                          *IF
     C           YL0009    ANDLE9999
     C                     ADD  WDACWG    WUJFWG           Weight Prod 4 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  WDACWG    WUJEWG           Weight Prod 3 U
     C                     END                             *FI
     C           KRSSQ     READECAB1RL4                  90*
     C                     ENDDO
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * RTV Avail Qty - Alloc  RT - Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN B0AIC3    WQSR01           Company Number
     C           *LIKE     DEFN B0AJCD    WQSR02           Warehouse Code
     C           *LIKE     DEFN B0HGCD    WQSR03           Item Code
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           WQSR01           Company Number
     C                     KFLD           WQSR02           Warehouse Code
     C                     KFLD           WQSR03           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSR01           Company Number
     C                     MOVEL#2AJCD    WQSR02           Warehouse Code
     C                     Z-ADD#2HGCD    WQSR03           Item Code
      * Establish starting position
     C           KRSSR     SETLL@B0REHD                    *
     C           KRSSR     READE@B0REHD                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0328' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUJGWG           On Hand Weight
     C                     Z-ADD*ZERO     YL0010           Quantity Avail.
     C                     GOTO SREXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDB0BOWG    WUJGWG           On Hand Weight
     C                     Z-ADDB0DOQT    YL0010           Quantity Avail.
     C           KRSSR     READE@B0REHD                  90*
     C                     ENDDO
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * RTV ItmInq-OpnOrds,Wgt RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUJIWG           Weight Schedule
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCAIC3    WQSS01           Company Number
     C           *LIKE     DEFN WCHGCD    WQSS02           Item Code
     C           *LIKE     DEFN WCAJCD    WQSS03           Warehouse Code
      * Define keylist
     C           KPSSS     KLIST
     C                     KFLD           WQSS01           Company Number
     C                     KFLD           WQSS02           Item Code
     C                     KFLD           WQSS03           Warehouse Code
     C                     KFLD           WCAODT           Scheduled Ship
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           WQSS01           Company Number
     C                     KFLD           WQSS02           Item Code
     C                     KFLD           WQSS03           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSS01           Company Number
     C                     Z-ADD#2HGCD    WQSS02           Item Code
     C                     MOVEL#2AJCD    WQSS03           Warehouse Code
     C                     Z-ADD##JDT     WCAODT           Scheduled Ship
      * Establish starting position
     C           KPSSS     SETLL@BGWKKG                    *
     C           KRSSS     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0001           Company Number
     C                     Z-ADDWCC4NB    WL0002           Order Number
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    WUGWST    P      Header Status
     C                     MOVELWL0004    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.First Time Flag is Yes
     C           WUTAST    IFEQ 'Y'                        *IF
     C                     ADD  WCAUWG    WUJIWG           Weight Schedule
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Scheduled Ship Date NE DB1.Scheduled Ship Date
     C           ##JDT     IFNE WCAODT                     *IF
     C                     GOTO SSEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  WCAUWG    WUJIWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSS     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * Rtv Picked Qty Tot    RT - PFS Inventory Adjustment  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     #COXQT           Quantity Picked
      * Declare restrictor key work fields
     C           *LIKE     DEFN BGY1NX    WQST01           PFS Company Num
     C           *LIKE     DEFN BGU4SX    WQST02           PFS Warehouse C
     C           *LIKE     DEFN BGY2NX    WQST03           PFS Item Code
      * Define keylist
     C           KRSST     KLIST
     C                     KFLD           WQST01           PFS Company Num
     C                     KFLD           WQST02           PFS Warehouse C
     C                     KFLD           WQST03           PFS Item Code
      * Setup key
     C                     Z-ADD#2AIC3    WQST01           PFS Company Num
     C                     MOVEL#2AJCD    WQST02           PFS Warehouse C
     C                     Z-ADD#2HGCD    WQST03           PFS Item Code
      * Establish starting position
     C           KRSST     SETLL@BGCPEG                    *
     C           KRSST     READE@BGCPEG                  90*
      * Data record not found
     C   90                MOVEL'USR3496' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.PFS Transaction Type is SM: Ship Regular Order
      *   |- c2    : DB1.PFS Transaction Type is SM: Transfer Order
      *   '-
     C           BGVLSX    IFEQ 'S01'                      *IF
     C           BGVLSX    OREQ 'S02'                      *OR
     C                     ADD  BGBDNY    #COXQT           Quantity Picked
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  BGBDNY    #COXQT           Quantity Picked
     C                     END                             *FI
     C           KRSST     READE@BGCPEG                  90*
     C                     ENDDO
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SURVGN    BEGSR
      *================================================================
      * Rtv InTransit Qty     RT - PFS CT Intransit Carton  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     #CIWNX           Quantity Transf
      * Declare restrictor key work fields
     C           *LIKE     DEFN AEJGT1    WQSU01           PFS CT Warehous
     C           *LIKE     DEFN AEI5T1    WQSU02           PFS CT Product
      * Define keylist
     C           KRSSU     KLIST
     C                     KFLD           WQSU01           PFS CT Warehous
     C                     KFLD           WQSU02           PFS CT Product
      * Setup key
     C                     MOVEL#2AJCD    WQSU01           PFS CT Warehous
     C                     MOVELYL0012    WQSU02           PFS CT Product
      * Establish starting position
     C           KRSSU     SETLL@AECPH8                    *
     C           KRSSU     READE@AECPH8                  90*
      * Data record not found
     C   90                MOVEL'USR3663' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  1         #CIWNX           Quantity Transf
     C           KRSSU     READE@AECPH8                  90*
     C                     ENDDO
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVRVGN    BEGSR
      *================================================================
      * Rtv Tran qty by Trn TypRT - Item Transaction Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * E3014 RMC 3.4.14 include reason RWZ in production
      * Declare restrictor key work fields
     C           *LIKE     DEFN B7AIC3    WQSV01           Company Number
     C           *LIKE     DEFN B7HGCD    WQSV02           Item Code
     C           *LIKE     DEFN B7AJCD    WQSV03           Warehouse Code
     C           *LIKE     DEFN B7ELDT    WQSV04           Production Date
      * Define keylist
     C           KRSSV     KLIST
     C                     KFLD           WQSV01           Company Number
     C                     KFLD           WQSV02           Item Code
     C                     KFLD           WQSV03           Warehouse Code
     C                     KFLD           WQSV04           Production Date
      * Setup key
     C                     Z-ADDWL0013    WQSV01           Company Number
     C                     Z-ADDWL0014    WQSV02           Item Code
     C                     MOVELWL0015    WQSV03           Warehouse Code
     C                     Z-ADDWL0016    WQSV04           Production Date
      * Establish starting position
     C           KRSSV     SETLL@B7CPN0                    *
     C           KRSSV     READE@B7CPN0                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0344' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADD*ZERO     WL0017           Qty Produced
     C                     GOTO SVEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Shift Number is Not Entered
     C           WL0019    IFEQ *BLANK                     *IF
      * Check Selection Option for correct record selection
      * CASE:
      *  - c1ANDc2AND(c3ORc4)
      *   |- c1    : PAR.Select Option is Blank
      *   |- c2    : DB1.Inventory Trans. Type is Receipt Production
      *   |- c3    : DB1.Reason Code is Production from Accu-Sort
      *   |- c4    : DB1.Reason Code is P05: Freezer Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0018    IFEQ *BLANK                     *IF
     C           B7BSST    IFEQ 'RR'                       *IF
     C                     MOVEL'0'       Y0CX02  1
     C           B7CQCD    IFEQ 'PRD'                      *IF
     C           B7CQCD    OREQ 'RWZ'                      *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B7A5QT    WL0017           Qty Produced
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Select Option is Option 1
      *   |- c2    : DB1.Inventory Trans. Type is Receipt Production
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0018    IFEQ '1'                        *IF
     C           B7BSST    IFEQ 'RR'                       *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B7A5QT    WL0017           Qty Produced
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Select Option is Option 2
     C           WL0018    IFEQ '2'                        *IF
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.Inventory Trans. Type is Receipt Production
      *   |- c2    : DB1.Inventory Trans. Type is Adjustment Quantity
      *   '-
     C           B7BSST    IFEQ 'RR'                       *IF
     C           B7BSST    OREQ 'A'                        *OR
     C                     ADD  B7A5QT    WL0017           Qty Produced
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Shift Number EQ PAR.Shift Number
     C           B7XLCD    IFEQ WL0019                     *IF
      * Check Selection Option for correct record selection
      * CASE:
      *  - c1ANDc2AND(c3ORc4)
      *   |- c1    : PAR.Select Option is Blank
      *   |- c2    : DB1.Inventory Trans. Type is Receipt Production
      *   |- c3    : DB1.Reason Code is Production from Accu-Sort
      *   |- c4    : DB1.Reason Code is P05: Freezer Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0018    IFEQ *BLANK                     *IF
     C           B7BSST    IFEQ 'RR'                       *IF
     C                     MOVEL'0'       Y0CX02  1
     C           B7CQCD    IFEQ 'PRD'                      *IF
     C           B7CQCD    OREQ 'RWZ'                      *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B7A5QT    WL0017           Qty Produced
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Select Option is Option 1
      *   |- c2    : DB1.Inventory Trans. Type is Receipt Production
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0018    IFEQ '1'                        *IF
     C           B7BSST    IFEQ 'RR'                       *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B7A5QT    WL0017           Qty Produced
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Select Option is Option 2
     C           WL0018    IFEQ '2'                        *IF
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.Inventory Trans. Type is Receipt Production
      *   |- c2    : DB1.Inventory Trans. Type is Adjustment Quantity
      *   '-
     C           B7BSST    IFEQ 'RR'                       *IF
     C           B7BSST    OREQ 'A'                        *OR
     C                     ADD  B7A5QT    WL0017           Qty Produced
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSV     READE@B7CPN0                  90*
     C                     ENDDO
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWRVGN    BEGSR
      *================================================================
      * Rtv Order Age Quantity RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*LOVAL    YD01
      * Move key fields to Date for Qty Sched by Age
     C                     Z-ADD#1K7DT    YI0101           Label Date
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFGT YD01
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE #1K7DT
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     #RIRQT           Quantity Ordere
     C                     GOTO SWEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWAAVQT    #RIRQT           Quantity Ordere
     C                     ENDIF
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         SXRVGN    BEGSR
      *================================================================
      * Rtv Picked Qty        RT - PFS Inventory Adjustment  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0024           Quantity Picked
      * Declare restrictor key work fields
     C           *LIKE     DEFN BGY1NX    WQSX01           PFS Company Num
     C           *LIKE     DEFN BGU4SX    WQSX02           PFS Warehouse C
     C           *LIKE     DEFN BGY2NX    WQSX03           PFS Item Code
     C           *LIKE     DEFN BGZ4NX    WQSX04           PFS Label Date
      * Define keylist
     C           KRSSX     KLIST
     C                     KFLD           WQSX01           PFS Company Num
     C                     KFLD           WQSX02           PFS Warehouse C
     C                     KFLD           WQSX03           PFS Item Code
     C                     KFLD           WQSX04           PFS Label Date
      * Setup key
     C                     Z-ADDWL0020    WQSX01           PFS Company Num
     C                     MOVELWL0021    WQSX02           PFS Warehouse C
     C                     Z-ADDWL0022    WQSX03           PFS Item Code
     C                     Z-ADDWL0023    WQSX04           PFS Label Date
      * Establish starting position
     C           KRSSX     SETLL@BGCPEG                    *
     C           KRSSX     READE@BGCPEG                  90*
      * Data record not found
     C   90                MOVEL'USR3496' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  BGBDNY    WL0024           Quantity Picked
     C           KRSSX     READE@BGCPEG                  90*
     C                     ENDDO
      *================================================================
     CSR         SXEXIT    ENDSR
      /EJECT
     CSR         SYRVGN    BEGSR
      *================================================================
      * Rtv Tran Wgt by Trn TypRT - Item Transaction Detail  * Get wgt s
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN B7AIC3    WQSY01           Company Number
     C           *LIKE     DEFN B7HGCD    WQSY02           Item Code
     C           *LIKE     DEFN B7AJCD    WQSY03           Warehouse Code
     C           *LIKE     DEFN B7ELDT    WQSY04           Production Date
      * Define keylist
     C           KRSSY     KLIST
     C                     KFLD           WQSY01           Company Number
     C                     KFLD           WQSY02           Item Code
     C                     KFLD           WQSY03           Warehouse Code
     C                     KFLD           WQSY04           Production Date
      * Setup key
     C                     Z-ADDWL0025    WQSY01           Company Number
     C                     Z-ADDWL0026    WQSY02           Item Code
     C                     MOVELWL0027    WQSY03           Warehouse Code
     C                     Z-ADDWL0028    WQSY04           Production Date
      * Establish starting position
     C           KRSSY     SETLL@B7CPN0                    *
     C           KRSSY     READE@B7CPN0                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0344' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADD*ZERO     WL0029           Weight Prod usr
     C                     GOTO SYEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Shift Number is Not Entered
     C           WL0031    IFEQ *BLANK                     *IF
      * Check Selection Option for correct record selection
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.Select Option is Blank
      *   |- c2    : DB1.Inventory Trans. Type is Receipt Production
      *   |- c3    : DB1.Reason Code is Production from Accu-Sort
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0030    IFEQ *BLANK                     *IF
     C           B7BSST    IFEQ 'RR'                       *IF
     C           B7CQCD    IFEQ 'PRD'                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B7AHWG    WL0029           Weight Prod usr
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Select Option is Option 1
      *   |- c2    : DB1.Inventory Trans. Type is Receipt Production
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0030    IFEQ '1'                        *IF
     C           B7BSST    IFEQ 'RR'                       *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B7AHWG    WL0029           Weight Prod usr
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Select Option is Option 2
     C           WL0030    IFEQ '2'                        *IF
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.Inventory Trans. Type is Receipt Production
      *   |- c2    : DB1.Inventory Trans. Type is Adjustment Quantity
      *   '-
     C           B7BSST    IFEQ 'RR'                       *IF
     C           B7BSST    OREQ 'A'                        *OR
     C                     ADD  B7AHWG    WL0029           Weight Prod usr
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Shift Number EQ PAR.Shift Number
     C           B7XLCD    IFEQ WL0031                     *IF
      * Check Selection Option for correct record selection
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.Select Option is Blank
      *   |- c2    : DB1.Inventory Trans. Type is Receipt Production
      *   |- c3    : DB1.Reason Code is Production from Accu-Sort
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0030    IFEQ *BLANK                     *IF
     C           B7BSST    IFEQ 'RR'                       *IF
     C           B7CQCD    IFEQ 'PRD'                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B7AHWG    WL0029           Weight Prod usr
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Select Option is Option 1
      *   |- c2    : DB1.Inventory Trans. Type is Receipt Production
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0030    IFEQ '1'                        *IF
     C           B7BSST    IFEQ 'RR'                       *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B7AHWG    WL0029           Weight Prod usr
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Select Option is Option 2
     C           WL0030    IFEQ '2'                        *IF
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.Inventory Trans. Type is Receipt Production
      *   |- c2    : DB1.Inventory Trans. Type is Adjustment Quantity
      *   '-
     C           B7BSST    IFEQ 'RR'                       *IF
     C           B7BSST    OREQ 'A'                        *OR
     C                     ADD  B7AHWG    WL0029           Weight Prod usr
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSY     READE@B7CPN0                  90*
     C                     ENDDO
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         SZRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSZ01           Application Cod
      * Define keylist
     C           KRSSZ     KLIST
     C                     KFLD           WQSZ01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSZ01           Application Cod
     C                     MOVEL'I/C'     WQSZ01           Application Cod
      * Establish starting position
     C           KRSSZ     SETLL@DNRESF                    *
     C           KRSSZ     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR TARVGN
     C                     END                             *FI
     C           KRSSZ     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SZEXIT    ENDSR
      /EJECT
     CSR         TARVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQTA01           Application Cod
      * Define keylist
     C           KRSTA     KLIST
     C                     KFLD           WQTA01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQTA01           Application Cod
      * Establish starting position
     C           KRSTA     SETLL@DNRESF                    *
     C           KRSTA     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO TAEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSTA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         TAEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Get weight produced by Shift 1 & Shift 2       1/18/06 LJB
      *================================================================
      * ** Weight contains decimals. All weight fields are accumulated
      * ** then moved into screen fields with no decimal places. This
      * ** action truncates the decimal place without rounding.
     C                     Z-ADD*ZERO     #RQPQT           Qty Produced
     C                     Z-ADD*ZERO     #RAUNB           Qty Produced 2
     C                     Z-ADD*ZERO     WUJCWG           Weight Prod 1 U
     C                     Z-ADD*ZERO     WUJDWG           Weight Prod 2 U
      * Rtv Tran Wgt by Trn TypRT - Item Transaction Detail  * Get wgt sh
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0025           Company Number
     C                     Z-ADD#1HGCD    WL0026           Item Code
     C                     MOVEL#1AJCD    WL0027    P      Warehouse Code
     C                     Z-ADD#1ELDT    WL0028           Production Date
     C                     Z-ADDWUJCWG    WL0029           Weight Prod usr
     C                     MOVELP4OPTI    WL0030    P      Select Option
     C                     MOVEL'1'       WL0031    P      Shift Number
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0029    WUJCWG           Weight Prod usr
      * Rtv Tran Wgt by Trn TypRT - Item Transaction Detail  * Get wgt sh
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0025           Company Number
     C                     Z-ADD#1HGCD    WL0026           Item Code
     C                     MOVEL#1AJCD    WL0027    P      Warehouse Code
     C                     Z-ADD#1ELDT    WL0028           Production Date
     C                     Z-ADDWUJDWG    WL0029           Weight Prod usr
     C                     MOVELP4OPTI    WL0030    P      Select Option
     C                     MOVEL'2'       WL0031    P      Shift Number
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0029    WUJDWG           Weight Prod usr
     C                     Z-ADDWUJCWG    #RQPQT           Qty Produced
     C                     Z-ADDWUJDWG    #RAUNB           Qty Produced 2
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * E3014  RMC 03/14/2014
      *   Include Reason RWZ Freezer transfer in production number
      * FP1309 slm 03/12/2010
      * FP1309 Inventory Age  IF
      * FP1309 Inventory Age Code Description
      * ** Remove the AS Last Update Date and time from screen
      * ** 05/15/2009 slm S00806
      * ** Remove the AS Last Update Date and time from screen
      * ** Remove retrieve to the AS Last Data Collection data base
      * *****
      * ** 05/15/2009 slm S00806
      * ** Remove the AS Last Update Date and time from screen
      * ** Remove retrieve to the AS Last Data Collection data base
      * *****
      * ** 03/31/2009 LJB S00375
      * ** Change CLC Age Code to use a different function so that
      * ** 7 thru 119 days = "H" and 120+ days = "I"
      * *****
      * ** 1/18/06 LJB:
      * ** F13 toggles to display weights in the subfile. These values
      * **   were estimated by multiplying the quantity by the primary
      * **   conversion factor in the control record. Change to use
      * **   the actual weights stored in the files.
      * **   See "USER: Initialize subfile control" and "USER:
      * **   Initialize subfile record from DBF record" for more
      * **   detailed description of changes.
      * *****
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check restriction within
      *================================================================
      * Name search required?
     C                     MOVELV2AIC3    WK1X01  1
     C                     MOVELV2HGCD    WK1X02  1
     C                     MOVEL#2AJCD    WK1X03  1
     C           WK1X01    IFEQ '?'                        Company Number
     C           YPMTFD    OREQ '#2AIC3'
     C           WK1X02    OREQ '?'                        Item Code
     C           YPMTFD    OREQ '#2HGCD'
     C           WK1X03    OREQ '?'                        Warehouse Code
     C           YPMTFD    OREQ '#2AJCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CTL) #2AIC3' defaulted for 'Company Number'.
      * Field '(CTL) #2AJCD' defaulted for 'Warehouse Code'.
      * Field '(CTL) #2HGCD' defaulted for 'Item Code'.
     C                     CLEARPARC
     C                     Z-ADD#2AIC3    PAAIC3           Company Number
     C                     MOVEL#2AJCD    PAAJCD    P      Warehouse Code
     C                     Z-ADD#2HGCD    PAHGCD           Item Code
      *
     C                     CALL 'PNMPSRR'              90  Sel Item
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Item Balan
      *
     C                     Z-ADDPAHGCD    #2HGCD           Item Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNMPSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #2AIC3    IFNE *ZERO                      Company Number
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #2HGCD    IFNE *ZERO                      Item Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X02    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #2AJCD    IFNE *BLANK                     Warehouse Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X03    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VA999
     C                     END
     C                     END
      *................................................................
      *
     C           KLVAWE    KLIST
     C                     KFLD           WEAIC3           Company Number
     C                     KFLD           WEHGCD           Item Code
     C                     KFLD           WEAJCD           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WEAIC3
     C                     Z-ADD#2HGCD    WEHGCD
     C                     MOVEL#2AJCD    WEAJCD
     C           KLVAWE    CHAIN@B0REJX              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VAEXIT
     C                     END
     C           VA999     TAG
      * Restrictor relation not satisfied
      * Send message 'Item Balance           NF'
     C                     MOVEL'USR0328' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     EXSR ZASNMS
     C                     MOVEL'USR0328' P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD15        ZHSTRW  40
     C                     Z-ADD20        ZHNDRW  40
     C                     Z-ADD2         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              92    *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
      * USER: Exit program processing
      * CASE: CTL.*CMD key is *Exit
     C           *IN03     IFEQ '1'                        *IF
     C                     MOVEL@CN,007   P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P1CHTM           Fresh Chilling
     C                     MOVEL*BLANK    P4OPTI           Select Option
     C                     Z-ADD*ZERO     P5GVDT           Production Date
     C                     Z-ADD*ZERO     P6NJDT           First Label Dat
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field BLANK 1               USR
     C                     MOVEL*BLANK    WUJ1TX 25
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01    50
     C                     Z-ADD1         Y       50
     C                     ENDIF
      *
      * Define work field Error Flag            USR
     C                     MOVEL*BLANK    WUB8SX  1
      * Define work field Error Reason Descript 1
     C                     MOVEL*BLANK    WUKWTX 30
      * Define work field Error Reason Descript 2
     C                     MOVEL*BLANK    WUKXTX 30
      * Define work field Error Reason Descript 3
     C                     MOVEL*BLANK    WUKYTX 30
      * Define work field Error Reason Descript 4
     C                     MOVEL*BLANK    WUKZTX 30
      * Define work field Error Reason Descript 5
     C                     MOVEL*BLANK    WUTITX 30
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Blank for 30          USR
     C                     MOVEL*BLANK    WUW4TX 30
      * Define work field Lot Tracking Flag
     C                     MOVEL*BLANK    WUVHST  1
      * Define work field Warehouse Type
     C                     MOVEL*BLANK    WUWPST  2
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WBBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WBBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WBBUC3           WHS Sched Prod
     C                     Z-ADD*ZERO     WBBVC3           WHS Inventory C
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field First Time Flag
     C                     MOVEL*BLANK    WUTAST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCC4NB           Order Number
     C                     Z-ADD*ZERO     WCDPNB           Order Sequence
     C                     Z-ADD*ZERO     WCUENB           Order Secondary
     C                     Z-ADD*ZERO     WCHGCD           Item Code
     C                     Z-ADD*ZERO     WCBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WCCFC7           Order Group Cod
     C                     Z-ADD*ZERO     WCMAVA           Billing Detail
     C                     Z-ADD*ZERO     WCKDVA           Billing Detail
     C                     Z-ADD*ZERO     WCL8VA           Billing Detail
     C                     Z-ADD*ZERO     WCL9VA           Quantity to Sub
     C                     Z-ADD*ZERO     WCAYVA           Extended Amount
     C                     Z-ADD*ZERO     WCEXDT           Market Pricing
     C                     Z-ADD*ZERO     WCBZPR           Price Overage O
     C                     Z-ADD*ZERO     WCL6NB           Contract Number
     C                     Z-ADD*ZERO     WCGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WCR1NB           Rated Freight
     C                     Z-ADD*ZERO     WCAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WCD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WCCCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WCAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WCCBQT           Quantity Shippe
     C                     Z-ADD*ZERO     WCATWG           Weight Shipped
     C                     Z-ADD*ZERO     WCAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WCAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WCAKPR           Unit Price
     C                     Z-ADD*ZERO     WCALPR           Unit Price - Cr
     C                     Z-ADD*ZERO     WCAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WCAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WCA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WCA5DT           Requested Ship
     C                     Z-ADD*ZERO     WCAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WCGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WCRGNB           Item Structure
     C                     Z-ADD*ZERO     WCRHNB           Item Structure
     C                     Z-ADD*ZERO     WCRINB           Item Structure
     C                     Z-ADD*ZERO     WCCXDT           Date of Origina
     C                     Z-ADD*ZERO     WCDUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WCB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WCA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WCNTDT           Warehouse Palle
     C                     Z-ADD*ZERO     WCNUDT           Consumed Item C
     C                     Z-ADD*ZERO     WCNVDT           Deadline Depart
     C                     Z-ADD*ZERO     WCNWDT           OD Price Type R
     C                     Z-ADD*ZERO     WCNXDT           OD Unused Date
     C                     Z-ADD*ZERO     WCBUTM           Deadline Depart
     C                     Z-ADD*ZERO     WCBVTM           Price Code
     C                     Z-ADD*ZERO     WCBWTM           Maximum Net Wei
     C                     Z-ADD*ZERO     WCBXTM           Substitution Li
     C                     Z-ADD*ZERO     WCBYTM           Max Qty to sche
     C                     Z-ADD*ZERO     WCH5NX           Warehouse Palle
     C                     Z-ADD*ZERO     WCH6NX           Warehouse Avg P
     C                     Z-ADD*ZERO     WCH7NX           OD Item Target
     C                     Z-ADD*ZERO     WCH8NX           OD Estimated Gr
     C                     Z-ADD*ZERO     WCH9NX           OD Maximum Unit
     C                     Z-ADD*ZERO     WCDVPR           Order Gate/Fina
     C                     Z-ADD*ZERO     WCDWPR           OD Ceiling Pric
     C                     Z-ADD*ZERO     WCDXPR           OD Gate/Final P
     C                     Z-ADD*ZERO     WCDYPR           OD Weighted Avg
     C                     Z-ADD*ZERO     WCDZPR           OD Unused Prc 5
     C                     Z-ADD*ZERO     WCGSPR           OD Unused Prc 6
     C                     Z-ADD*ZERO     WCGTPR           OD Unused Prc 7
     C                     Z-ADD*ZERO     WCGUPR           OD Unused Prc 8
     C                     Z-ADD*ZERO     WCPEWG           Weight Amount E
     C                     Z-ADD*ZERO     WCRINY           Item Age Days
     C                     Z-ADD*ZERO     WCTIDT           Production Ovr
     C                     Z-ADD*ZERO     WCTJDT           Production Ovr
     C                     Z-ADD*ZERO     WCTKDT           OD Market Begin
     C                     Z-ADD*ZERO     WCTLDT           OD Market Endin
     C                     Z-ADD*ZERO     WCTMDT           OD UnUsed Date
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field Header Status
     C                     MOVEL*BLANK    WUGWST  1
      * Define work field Billing Activity Type
     C                     MOVEL*BLANK    WUOBST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDHGCD           Item Code
     C                     Z-ADD*ZERO     WDELDT           Production Date
     C                     Z-ADD*ZERO     WDABWG           Physical Count
     C                     Z-ADD*ZERO     WDAGQT           Physical Count
     C                     Z-ADD*ZERO     WDAHQT           Physical Count
     C                     Z-ADD*ZERO     WDAIQT           Physical Count
     C                     Z-ADD*ZERO     WDACWG           Quantity on Han
     C                     Z-ADD*ZERO     WDARQT           Quantity on Han
     C                     Z-ADD*ZERO     WDASQT           Quantity on Han
     C                     Z-ADD*ZERO     WDATQT           Quantity on Han
     C                     Z-ADD*ZERO     WDHDQT           Quantity In Chi
     C                     Z-ADD*ZERO     WDHEQT           Weight In Chill
     C                     Z-ADD*ZERO     WDBMWG           Physical Start
     C                     Z-ADD*ZERO     WDDSQT           Physical Start
     C                     Z-ADD*ZERO     WDDTQT           Physical Start
     C                     Z-ADD*ZERO     WDDUQT           Physical Start
     C                     Z-ADD*ZERO     WDDHDT           Physical Start
     C                     Z-ADD*ZERO     WDAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WDAECS           Last Cost
     C                     Z-ADD*ZERO     WDIDVA           Value of On Han
     C                     Z-ADD*ZERO     WDK7DT           Label Date
     C                     Z-ADD*ZERO     WDRINB           Item Structure
     C                     Z-ADD*ZERO     WDRHNB           Item Structure
     C                     Z-ADD*ZERO     WDRGNB           Item Structure
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Define work field Status Flag 4  Y/N
     C                     MOVEL*BLANK    WUFMST  1
      * Define work field Weight Prod 3 USR
     C                     Z-ADD*ZERO     WUJEWG 112
      * Define work field Weight Prod 4 USR
     C                     Z-ADD*ZERO     WUJFWG 112
      * Define work field Weight Prod 5 USR
     C                     Z-ADD*ZERO     WUJGWG 112
      * Define work field Weight Schd 1 USR
     C                     Z-ADD*ZERO     WUJIWG 112
      * Define work field Weight Prod 1 USR
     C                     Z-ADD*ZERO     WUJCWG 112
      * Define work field Weight Prod 2 USR
     C                     Z-ADD*ZERO     WUJDWG 112
      * Define work field Weight Ordered
     C                     Z-ADD*ZERO     WUD0WG 112
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WEAIC3           Company Number
     C                     Z-ADD*ZERO     WEHGCD           Item Code
     C                     Z-ADD*ZERO     WEAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WEAECS           Last Cost
     C                     Z-ADD*ZERO     WEBACS           Cost per Primar
     C                     Z-ADD*ZERO     WEBBCS           Cost per Pricin
     C                     Z-ADD*ZERO     WECBPR           Revaluation Cos
     C                     Z-ADD*ZERO     WEGUDT           Revaluation Eff
     C                     Z-ADD*ZERO     WECTPR           Last Revaluatio
     C                     Z-ADD*ZERO     WEG4DT           Last Revaluatio
     C                     Z-ADD*ZERO     WEBOWG           On Hand Weight
     C                     Z-ADD*ZERO     WEDDQT           On Hand U/M1 Su
     C                     Z-ADD*ZERO     WEDEQT           On Hand U/M2 Su
     C                     Z-ADD*ZERO     WEDFQT           On Hand U/M3 Su
     C                     Z-ADD*ZERO     WEHDQT           Quantity In Chi
     C                     Z-ADD*ZERO     WEHEQT           Weight In Chill
     C                     Z-ADD*ZERO     WEAJQT           Quantity Schedu
     C                     Z-ADD*ZERO     WEAQQT           Quantity on Sal
     C                     Z-ADD*ZERO     WEAUQT           Quantity on Pur
     C                     Z-ADD*ZERO     WEEMQT           Quantity on Tra
     C                     Z-ADD*ZERO     WEDOQT           Quantity Avail.
     C                     Z-ADD*ZERO     WEAKDT           Date of Last Or
     C                     Z-ADD*ZERO     WEANDT           Date of Last Sh
     C                     Z-ADD*ZERO     WEIDVA           Value of On Han
     C                     Z-ADD*ZERO     WEBZPC           Safety Allowanc
     C                     Z-ADD*ZERO     WEDGQT           Safety Allowanc
     C                     Z-ADD*ZERO     WEDIDT           Stock Out Date
     C                     Z-ADD*ZERO     WEBFDY           Lead Time - Las
     C                     Z-ADD*ZERO     WEDJDT           Lead Time - Dat
     C                     Z-ADD*ZERO     WEBGDY           Lead Time - Nex
     C                     Z-ADD*ZERO     WEDKDT           Lead Time - Dat
     C                     Z-ADD*ZERO     WEDJQT           Usage Qty per C
     C                     Z-ADD*ZERO     WEBNWG           Usage Weight pe
     C                     Z-ADD*ZERO     WEDLDT           Inventory Manag
     C                     Z-ADD*ZERO     WEDPQT           Minimum Quantit
     C                     Z-ADD*ZERO     WEDQQT           Maximum Quantit
     C                     Z-ADD*ZERO     WEDMDT           Last Physical C
     C                     Z-ADD*ZERO     WEAKC8           Vendor - Item/W
     C                     Z-ADD*ZERO     WERINB           Item Structure
     C                     Z-ADD*ZERO     WERHNB           Item Structure
     C                     Z-ADD*ZERO     WERGNB           Item Structure
     C                     Z-ADD*ZERO     WEAATM           Job Time
     C                     Z-ADD*ZERO     WEAXDT           Job Date
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003  1
     C                     MOVEL*BLANK    WL0004  1
      * Define local variables for subroutine SKRVGN.
     C                     Z-ADD*ZERO     WL0005  30
     C                     Z-ADD*ZERO     WL0006  70
     C                     Z-ADD*ZERO     WL0007  52
      * Define local variables for subroutine SLRVGN.
     C                     MOVEL*BLANK    WL0008  3
     C                     MOVEL*BLANK    WL0009  2
      * Define local variables for subroutine SMRVGN.
     C                     Z-ADD*ZERO     WL0010  30
     C                     MOVEL*BLANK    WL0011 10
     C                     Z-ADD*ZERO     WL0012 155
      * Define local variables for subroutine SVRVGN.
     C                     Z-ADD*ZERO     WL0013  30
     C                     Z-ADD*ZERO     WL0014  70
     C                     MOVEL*BLANK    WL0015  3
     C                     Z-ADD*ZERO     WL0016  70
     C                     Z-ADD*ZERO     WL0017  70
     C                     MOVEL*BLANK    WL0018  1
     C                     MOVEL*BLANK    WL0019  1
      * Define local variables for subroutine SXRVGN.
     C                     Z-ADD*ZERO     WL0020  30
     C                     MOVEL*BLANK    WL0021  3
     C                     Z-ADD*ZERO     WL0022  70
     C                     Z-ADD*ZERO     WL0023  80
     C                     Z-ADD*ZERO     WL0024 110
      * Define local variables for subroutine SYRVGN.
     C                     Z-ADD*ZERO     WL0025  30
     C                     Z-ADD*ZERO     WL0026  70
     C                     MOVEL*BLANK    WL0027  3
     C                     Z-ADD*ZERO     WL0028  70
     C                     Z-ADD*ZERO     WL0029  70
     C                     MOVEL*BLANK    WL0030  1
     C                     MOVEL*BLANK    WL0031  1
      * Define local work field Header Status
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Billing Activity Type
     C                     MOVEL*BLANK    YL0002  1
      * Define null work field Header Status
     C                     MOVEL*BLANK    YN0001  1
      * Define local work field Requested Delivery Date
     C                     Z-ADD*ZERO     YL0003  70
      * Define null work field Requested Delivery Time
     C                     Z-ADD*ZERO     YN0002  40
      * Define local work field Production AgeDte Fr
     C                     Z-ADD*ZERO     YL0004  70
      * Define local work field Production AgeDte To
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field Error Status
     C                     MOVEL*BLANK    YL0006  1
      * Define local work field Warehouse Type
     C                     MOVEL*BLANK    YL0007  2
      * Define local work field @Number of Days to Age
     C                     Z-ADD*ZERO     YL0008  40
      * Define local work field @Number of Days to Age
     C                     Z-ADD*ZERO     YL0009  40
      * Define local work field Quantity Avail. to Sell
     C                     Z-ADD*ZERO     YL0010 112
      * Define local work field USR Work Field 5,0
     C                     Z-ADD*ZERO     YL0011  50
      * Define local work field USR Work Field 5A     USR
     C                     MOVEL*BLANK    YL0012  5
      * Define local work field PFS Label Date
     C                     Z-ADD*ZERO     YL0013  80
      * Define local work field Year Code
     C                     Z-ADD*ZERO     YL0014  40
      * Define local work field Month NBR USR
     C                     Z-ADD*ZERO     YL0015  20
      * Define local work field Day of Month USR
     C                     Z-ADD*ZERO     YL0016  20
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD03        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * VAL Rtv and Center Hdg IF
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SZRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL'Y'       WUTAST           First Time Flag
      * toggle quantity/weights -----> no = display quantities
     C                     MOVEL'N'       WUFMST           Status Flag 4
      * SFL Fold/Drop  RPG    US - /UT User Source  * 
     C                     Z-ADD6         ##SFPG
      * ***** Change Log and Comments
     C                     EXSR UBSUBR                     ***** Change Lo
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** @CN
00001 Y2U0005
00002 FZNCHLTME
00003 W/ Rework-All
00004 W/ Rework & Adj
00005 W/O Rework-PRD
00006 1111111
00007 Y2U9999
