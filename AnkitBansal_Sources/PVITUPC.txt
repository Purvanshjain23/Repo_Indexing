/*********************************************************************/
/* PROGRAM : PVITUPC                                                 */
/* DESC    : CRT BACKUP EDI REST WIMCL EXECUTE USER PROGRAM          */
/* DATE    : 11/25/2024                                              */
/* PROJECT : WI568 - WAREHOUSE INVENTORY MANAGEMENT (WIM)            */
/* BY      : DANNY NGUYEN                                            */
/* PURPOSE : Process will make a backup copies of the Item Balance   */
/*           and Item Balance Detail files for WIM after the JS      */
/*           completes.                                              */
/*                                                                   */
/* HOW USE : The WIM JS 'WIMEDIRST' runs at 3:50am. When job         */
/*           completes, call this program to create backup.          */
/*                                                                   */
/*********************************************************************/
/* MAINTENANCE LOG:                                                  */
/*-------------------------------------------------------------------*/
/* DATE     BY  PROJ      CHANGE DESCRIPTION                         */
/* -------- --- --------- ------------------------------------------ */
/*                                                                   */
/*********************************************************************/

             PGM

             DCL        VAR(&DATA) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DATAH) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CPYLGYIB) TYPE(*CHAR) LEN(10) +
                          VALUE('CAB0REP') /* Copy To Legacy +
                          Item Balance File */
             DCL        VAR(&CPYLGYIBD) TYPE(*CHAR) LEN(10) +
                          VALUE('CAB1REP') /* Copy To Legacy +
                          Item Balance Detail File */
             DCL        VAR(&CPYWIMIB) TYPE(*CHAR) LEN(10) +
                          VALUE('PUCGCPP') /* Copy To WIM +
                          Item Balance Table */
             DCL        VAR(&CPYWIMIBD) TYPE(*CHAR) LEN(10) +
                          VALUE('PUCHCPP') /* Copy To WIM +
                          Item Balance Detail Table */
             DCL        VAR(&MSG) TYPE(*CHAR) LEN(512)
             DCL        VAR(&MSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGL) TYPE(*DEC) LEN(5 0)


/*------------------------------------------------------------------*/
/* GET DATA LIBRARY.                                                */
/*------------------------------------------------------------------*/
             CALL       PGM(CAQXXFR) PARM(' ' &DATA &DATAH)


    /*Backup WIM Files */
       /* Concat 'EDI' Suffix to Filename. */
             CHGVAR     VAR(&CPYWIMIB) VALUE(&CPYWIMIB *TCAT 'EDI')
             CHGVAR     VAR(&CPYWIMIBD) VALUE(&CPYWIMIBD *TCAT 'EDI')

       /* Validate Copy to Library/Filename Exist. */
          /* WIM Item Balance */
             CHKOBJ     OBJ(&DATA/&CPYWIMIB) OBJTYPE(*FILE)
             MONMSG     MSGID(CPF9801) EXEC(DO)
             SNDPGMMSG  MSG('Copy To File ' *CAT &DATA *TCAT '/' +
                          *CAT &CPYWIMIB *TCAT ' not found.')
             GOTO       CMDLBL(MSGTRAP)
             ENDDO
         /* WIM Item Balance Detail */
             CHKOBJ     OBJ(&DATA/&CPYWIMIBD) OBJTYPE(*FILE)
             MONMSG     MSGID(CPF9801) EXEC(DO)
             SNDPGMMSG  MSG('Copy To File ' *CAT &DATA *TCAT '/' +
                          *CAT &CPYWIMIBD *TCAT ' not found.')
             GOTO       CMDLBL(MSGTRAP)
             ENDDO

    /* No Errors then Copy to Backup Files */
       /* WIM Item Balance */
             CPYF       FROMFILE(&DATA/PUCGCPP) +
                          TOFILE(&DATA/&CPYWIMIB) MBROPT(*REPLACE) +
                          FROMRCD(1)
       /* WIM Item Balance Detail */
             CPYF       FROMFILE(&DATA/PUCHCPP) +
                          TOFILE(&DATA/&CPYWIMIBD) MBROPT(*REPLACE) +
                          FROMRCD(1)

             GOTO       CMDLBL(END)


/*----------------------RECEIVE MESSAGES----------------------------*/
 MSGTRAP:    RCVMSG     MSGTYPE(*EXCP) MSGDTA(&MSG) MSGDTALEN(&MSGL) +
                          MSGID(&MSGID)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(END))

             SNDPGMMSG  MSGID(&MSGID) MSGF(QCPFMSG) MSGDTA(%SST(&MSG +
                          1 &MSGL)) MSGTYPE(*ESCAPE)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(END))

 END:
             ENDPGM
