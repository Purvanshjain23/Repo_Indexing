// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLSJDFR
// ?Date: 14.08.2025 Time: 02:55:20
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications
//?01/23/2021 ISE H16853 - Increased the length from 5 to 7 and
//?                        corrected the alignment of Buy Order Number field
//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.*SFLSEL is *Revise
IF RCD.*SFLSEL = '2';

// Call program Zzz DeliverySch Dtl UpER.
CALL PROGRAM(Zzz DeliverySch Dtl UpER) ('PLSPE1R');
PARAMETER(RCD.DSU_Company_Number);
PARAMETER(RCD.DSU_Transaction_Date);
PARAMETER(RCD.DSU_Transaction_Time);
PARAMETER(RCD.DSU_Transaction_Seq);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF RCD.*SFLSEL is *Delete#1
IF RCD.*SFLSEL = '4';

EXECUTE FUNCTION(Dlt Error Codes For RecRT) TYPE(RTVOBJ) FILE(PLBKCPP)          AB1312164;
PARAMETER(RCD.DSU_Company_Number);
PARAMETER(RCD.DSU_Transaction_Date);
PARAMETER(RCD.DSU_Transaction_Time);
PARAMETER(RCD.DSU_Transaction_Seq);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Dlt Delivery Sched DtlEDO) TYPE(DLTOBJ) FILE(PLBKCPP)          AB1311438;
 PARAMETER(DB1.DSU_Company_Number);
 PARAMETER(DB1.DSU_Transaction_Date);
 PARAMETER(DB1.DSU_Transaction_Time);
 PARAMETER(DB1.DSU_Transaction_Seq);
 PARAMETER(DB1.DSE_Line_Sequence);
 PARAMETER(DB1.DSE_Error_Code);
}


EXECUTE FUNCTION(Chg Process/Error     CH) TYPE(CHGOBJ) FILE(PLBJCPP)           AB1311483;
PARAMETER(RCD.DSU_Company_Number);
PARAMETER(RCD.DSU_Transaction_Date);
PARAMETER(RCD.DSU_Transaction_Time);
PARAMETER(RCD.DSU_Transaction_Seq);
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.DSU_PRD_Srv_Batch_ID);
PARAMETER(RCD.DSU_PRD_Srv_Sched_ID);
PARAMETER(RCD.DSU_Ref_1);
PARAMETER(RCD.DSU_Ref_2);
PARAMETER(RCD.DSU_Ref_Status);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1345186;
 PARAMETER(DB1.DSU_Record_Status);
 PARAMETER(DB1.DSU_Change_Date);
 PARAMETER(DB1.DSU_Change_Time);
 {
  //?Execute internal function

  // PAR.DSU Record Status = CND.Change
  PAR.DSU_Record_Status = 'C';

  // PAR.DSU Change Date = JOB.*Job date
  PAR.DSU_Change_Date = JOB.*Job_date;

  // PAR.DSU Change Time = JOB.*Job time
  PAR.DSU_Change_Time = JOB.*Job_time;

 }

}


// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF RCD.*SFLSEL is *Option 5 request
IF RCD.*SFLSEL = '5'/'5';

// Call program Zzz DlvSchDtlUpl ErrorDF.
CALL PROGRAM(Zzz DlvSchDtlUpl ErrorDF) ('PLSMDFR');
PARAMETER(RCD.DSU_Company_Number);
PARAMETER(RCD.DSU_Transaction_Date);
PARAMETER(RCD.DSU_Transaction_Time);
PARAMETER(RCD.DSU_Transaction_Seq);

// IF RCD.*SFLSEL is *Option 9 (Reusable)
IF RCD.*SFLSEL = '9';

EXECUTE FUNCTION(Dlt Error Codes For RecRT) TYPE(RTVOBJ) FILE(PLBKCPP)          AB1312164;
PARAMETER(RCD.DSU_Company_Number);
PARAMETER(RCD.DSU_Transaction_Date);
PARAMETER(RCD.DSU_Transaction_Time);
PARAMETER(RCD.DSU_Transaction_Seq);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Dlt Delivery Sched DtlEDO) TYPE(DLTOBJ) FILE(PLBKCPP)          AB1311438;
 PARAMETER(DB1.DSU_Company_Number);
 PARAMETER(DB1.DSU_Transaction_Date);
 PARAMETER(DB1.DSU_Transaction_Time);
 PARAMETER(DB1.DSU_Transaction_Seq);
 PARAMETER(DB1.DSE_Line_Sequence);
 PARAMETER(DB1.DSE_Error_Code);
}


EXECUTE FUNCTION(Chg Process/Error     CH) TYPE(CHGOBJ) FILE(PLBJCPP)           AB1311483;
PARAMETER(RCD.DSU_Company_Number);
PARAMETER(RCD.DSU_Transaction_Date);
PARAMETER(RCD.DSU_Transaction_Time);
PARAMETER(RCD.DSU_Transaction_Seq);
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.DSU_PRD_Srv_Batch_ID);
PARAMETER(RCD.DSU_PRD_Srv_Sched_ID);
PARAMETER(RCD.DSU_Ref_1);
PARAMETER(RCD.DSU_Ref_2);
PARAMETER(RCD.DSU_Ref_Status);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1345186;
 PARAMETER(DB1.DSU_Record_Status);
 PARAMETER(DB1.DSU_Change_Date);
 PARAMETER(DB1.DSU_Change_Time);
 {
  //?Execute internal function

  // PAR.DSU Record Status = CND.Change
  PAR.DSU_Record_Status = 'C';

  // PAR.DSU Change Date = JOB.*Job date
  PAR.DSU_Change_Date = JOB.*Job_date;

  // PAR.DSU Change Time = JOB.*Job time
  PAR.DSU_Change_Time = JOB.*Job_time;

 }

}


// Call program Val DspUpl PrdSerInt  XP.
CALL PROGRAM(Val DspUpl PrdSerInt  XP) ('PWFNXFR');
PARAMETER(RCD.DSU_Company_Number);
PARAMETER(RCD.DSU_Kill_Date);
PARAMETER(RCD.DSU_Delivery_Date);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.DSU_Record_Status);
PARAMETER(RCD.DSU_Process_Status);
PARAMETER(RCD.DSU_Error_Reason);
PARAMETER('Y');
PARAMETER('Y');
PARAMETER('Y');
PARAMETER('Y');
PARAMETER('L');

EXECUTE FUNCTION(Chg Process/Error     CH) TYPE(CHGOBJ) FILE(PLBJCPP)           AB1311483;
PARAMETER(RCD.DSU_Company_Number);
PARAMETER(RCD.DSU_Transaction_Date);
PARAMETER(RCD.DSU_Transaction_Time);
PARAMETER(RCD.DSU_Transaction_Seq);
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.DSU_PRD_Srv_Batch_ID);
PARAMETER(RCD.DSU_PRD_Srv_Sched_ID);
PARAMETER(RCD.DSU_Ref_1);
PARAMETER(RCD.DSU_Ref_2);
PARAMETER(RCD.DSU_Ref_Status);
PARAMETER(RCD.DSU_Process_Status);
PARAMETER(RCD.DSU_Error_Reason);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1345186;
 PARAMETER(DB1.DSU_Record_Status);
 PARAMETER(DB1.DSU_Change_Date);
 PARAMETER(DB1.DSU_Change_Time);
 {
  //?Execute internal function

  // PAR.DSU Record Status = CND.Change
  PAR.DSU_Record_Status = 'C';

  // PAR.DSU Change Date = JOB.*Job date
  PAR.DSU_Change_Date = JOB.*Job_date;

  // PAR.DSU Change Time = JOB.*Job time
  PAR.DSU_Change_Time = JOB.*Job_time;

 }

}


// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

