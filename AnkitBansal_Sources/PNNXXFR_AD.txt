// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNNXXFR
// ?Date: 14.08.2025 Time: 03:45:49
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications:
//?12/28/17 SZ ADDED check to see if TP MDI and added a flag to not send
//?   multiple times.  Per MDI
//?12/12/17 SZ ADDED ADDRESS LINE 2. CUSTOMER MASTER HAS BEEN CLEANED UP AND
//?  WE ARE NOW USING LINE 2 FOR MORE ADDRESS INFO.
//?11/23/15 SZ Commented out RTV to Load Hdr. Mercury Gate will not be
//?using the Load Hdr therefore it will not get populated.
//?We will use the Order HDR to get the Load ID and Carrier.  Those two
//?fields will be maintained from MG.
//?Added code to populate the EXTOL Conversion Type flag. This flag tells us
//?if the TP is being processed in EEI or EBI.
//?Fields were added to the ECP039 ASN Header. one for the flag and others
//?for extra data.
// LCL.USR Process status = CND.yes
LCL.USR_Process_status = 'Y';

// PAR.Company = CVTVAR(PAR.Company Alpha)
PAR.Company = CVTVAR(PAR.Company_Alpha);

// PAR.Order Number = CVTVAR(PAR.Order Number Alpha)
PAR.Order_Number = CVTVAR(PAR.Order_Number_Alpha);

//?Retrieve the Order Header
EXECUTE FUNCTION(RTV All Fields         RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1571206;
PARAMETER(PAR.Company);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Order_Type_Sales);
PARAMETER(LCL.AR_Customer_Number);
PARAMETER(LCL.Ship_To_Customer);
PARAMETER(LCL.Ship_To_Name);
PARAMETER(LCL.Ship_To_Address_Line_1);
PARAMETER(LCL.Ship_To_Address_Line_2);
PARAMETER(LCL.Ship_To_Address_Line_3);
PARAMETER(LCL.Ship_To_City);
PARAMETER(LCL.Ship_To_State_Code);
PARAMETER(LCL.Ship_To_Zip_Postal_Code);
PARAMETER(LCL.Bill_to_Customer);
PARAMETER(LCL.Bill_to_Name);
PARAMETER(LCL.Bill_to_Address_Line_1);
PARAMETER(LCL.Bill_to_Address_Line_2);
PARAMETER(LCL.Bill_to_Address_Line_3);
PARAMETER(LCL.Bill_to_City);
PARAMETER(LCL.Bill_to_State_Code);
PARAMETER(LCL.Bill_to_Zip_Postal_Code);
PARAMETER(LCL.Customer_Purchase_Order_#);
PARAMETER(LCL.Order_Date);
PARAMETER(LCL.Requested_Ship_Date);
PARAMETER(LCL.Actual_Shipped_Date);
PARAMETER(LCL.Cancel_Date);
PARAMETER(LCL.Terms_Code);
PARAMETER(LCL.Special_Instructions);
PARAMETER(LCL.Special_Instructions_2);
PARAMETER(LCL.Carrier_Code);
PARAMETER(LCL.Comment_Print_Acknowledge);
PARAMETER(LCL.Comment_Print_Inv_Cr_Memo);
PARAMETER(LCL.Comment_Print_Pick_Slip);
PARAMETER(LCL.Comment_Print_Ship_Doc);
PARAMETER(LCL.Reason_Code);
PARAMETER(LCL.Order_in_Use);
PARAMETER(LCL.Header_Status);
PARAMETER(LCL.Header_Status_Last);
PARAMETER(LCL.Order_Type_Print_Status);
PARAMETER(LCL.Scheduled_Ship_Date);
PARAMETER(LCL.User_Original_Entry);
PARAMETER(LCL.Date_of_Original_Entry);
PARAMETER(LCL.Order_Value_Total);
PARAMETER(LCL.Order_Weight_Total);
PARAMETER(LCL.Credit_Hold);
PARAMETER(LCL.Production_Hold);
PARAMETER(LCL.New_Customer_Hold);
PARAMETER(LCL.Requested_Delivery_Date);
PARAMETER(LCL.Requested_Delivery_Time);
PARAMETER(LCL.Accounts_Receiv_Ent_1);
PARAMETER(LCL.Accounts_Receiv_Ent_2);
PARAMETER(LCL.Load_ID);
PARAMETER(LCL.Absorbed_Freight_Rate_CWT);
PARAMETER(LCL.Rated_Freight);
PARAMETER(LCL.LTL_Flag);
PARAMETER(LCL.Price_Audit);
PARAMETER(LCL.Price_Status);
PARAMETER(LCL.Shipping_Method);
PARAMETER(LCL.Export_Status);
PARAMETER(LCL.Palletize);
PARAMETER(LCL.Shrink_Wrap);
PARAMETER(LCL.Slip_Sheet);
PARAMETER(LCL.Age_Code);
PARAMETER(LCL.Reefer_Temperature);
PARAMETER(LCL.Load_Type);
PARAMETER(LCL.Attach_to_Invoice_Number);
PARAMETER(LCL.Load_Plan_Order);
PARAMETER(LCL.Print_Pick_Slip);
PARAMETER(LCL.Resell_Reference_Number);
PARAMETER(LCL.Special_Comment_1);
PARAMETER(LCL.Special_Comment_2);
PARAMETER(LCL.Affect_Auto_Accruals);
PARAMETER(LCL.Sales_Route_Code);
PARAMETER(LCL.Manager_Level_Code);
PARAMETER(LCL.VP_Level_Code);
PARAMETER(LCL.Attach_to_Order_Number);
PARAMETER(LCL.Reason_for_Price_Audit);
PARAMETER(LCL.Invoice_Number);
PARAMETER(LCL.Invoice_Suffix);
PARAMETER(LCL.Invoice_Date);
PARAMETER(LCL.Event_Code);
PARAMETER(LCL.Trans_Contol_AS400_Plant);
PARAMETER(LCL.Modified_Flag);
PARAMETER(LCL.A_R_order_Value_Total);
PARAMETER(LCL.Billing_Activity_Type);
PARAMETER(LCL.Block_Order_Flag);
PARAMETER(LCL.Order_Certification_Flag);
PARAMETER(LCL.Invoice_Order_Value_Tot);
PARAMETER(LCL.Process_Sts_for_3C);
PARAMETER(LCL.Order_Conf_Fax_Sts);
PARAMETER(LCL.Manifest_Fax_Sts);
PARAMETER(LCL.Invoice_Fax_Sts);
PARAMETER(LCL.Transfer_in_Storage_Ind);
PARAMETER(LCL.Email_Cust_On_Order_Ship);
PARAMETER(LCL.Order_Emailed);
PARAMETER(LCL.Export_Docs_Go_w_Driver);
PARAMETER(LCL.Shipping_Temp_Code_C_F);
PARAMETER(LCL.Broker_Order_Status);
PARAMETER(LCL.Air_Freight_Order);
PARAMETER(LCL.Order_Requires_Review);
PARAMETER(LCL.OH_Load_Plan_Ready);
PARAMETER(LCL.Export_USDA_Approved);
PARAMETER(LCL.HPB_Ship_to_Warehouse);
PARAMETER(LCL.OH_TF_Exempt_Code);
PARAMETER(LCL.OH_Appt_Confirmation_Dt);
PARAMETER(LCL.JPN_Invoice_Issuance_Date);
PARAMETER(LCL.Load_Actual_Shipped_Date);
PARAMETER(LCL.Load_BOL_Complete_Date);
PARAMETER(LCL.Load_Truck_Departure_Date);
PARAMETER(LCL.Maximum_Gross_Weight);
PARAMETER(LCL.Time_of_Original_Entry);
PARAMETER(LCL.OH_Appt_Confirmation_Tm);
PARAMETER(LCL.Load_BOL_Complete_Time);
PARAMETER(LCL.Load_Truck_Departure_Time);
PARAMETER(LCL.Act_Frt_Reference_Amount);
PARAMETER(LCL.Act_Non_Ref_Frt_Amount);
PARAMETER(LCL.OH_Fuel_Surcharge_Amount);
PARAMETER(LCL.OH_Total_Non_Ref_Frt_Amt);
PARAMETER(LCL.OH_Total_Ref_Frt_Amt);
PARAMETER(LCL.Claim_Number);
PARAMETER(LCL.EDI_Status_1);
PARAMETER(LCL.EDI_Status_2);
PARAMETER(LCL.EDI_Status_3);
PARAMETER(LCL.Job_Time);
PARAMETER(LCL.User_Id);
PARAMETER(LCL.Job_Name);
PARAMETER(LCL.Job_Date);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?If the Customer ord is TBA, do not process the ASN.
CASE;

// IF LCL.Customer Purchase Order # is tba
IF LCL.Customer_Purchase_Order_# = 'tba';

// OR LCL.Customer Purchase Order # is TBA(cap)
OR LCL.Customer_Purchase_Order_# = 'TBA';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
PARAMETER(LCL.Carrier_Code);
PARAMETER(LCL.Carrier_Name_50A);
PARAMETER(NLL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


//?Write Header Record
// WRK.Order Alpha = CVTVAR(PAR.Order Number)
WRK.Order_Alpha = CVTVAR(PAR.Order_Number);

// WRK.Load Alpha = CVTVAR(LCL.Load ID)
WRK.Load_Alpha = CVTVAR(LCL.Load_ID);

// WRK.Description 14A      USR = CONCAT(WRK.Order Alpha,WRK.Load Alpha,CON.*ZERO)
WRK.Description_14A_USR = WRK.Order_Alpha + WRK.Load_Alpha (*ZERO);

// LCL.BSN02-Shipmt ID-Load/Ord = CVTVAR(WRK.Description 14A      USR)
LCL.BSN02_Shipmt_ID_Load_Ord = CVTVAR(WRK.Description_14A_USR);

//?Chain to the TP Control file to retrieve the
//?EXTOL Control flag and put that into the EXTOL conversion
//?type in the EDI ASN Header.
EXECUTE FUNCTION(RTV Trade Partner Ctrl RT) TYPE(RTVOBJ) FILE(PBB8REP)          AC2111434;
PARAMETER(PAR.TRADE_PARTNER_CODE);
PARAMETER(LCL.Extol_Control_Flag);
PARAMETER(LCL.Live_with_ERP);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


//?Chk to see if the Hdr already exists, if so, dlt rcds and write new ones.
EXECUTE FUNCTION(Val Hdr Rcd Exist     RT) TYPE(RTVOBJ) FILE(ECP039)            AC1973793;
PARAMETER(PAR.Order_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


//?If the rcd already exists it has been reshipped.
CASE;

// IF PGM.*Return code is *Record already exists
IF PGM.*Return_code = 'Y2U0003';

//?If TP MDI, do not send a new ASN.
CASE;

// IF PAR.TRADE PARTNER CODE is MDI
IF PAR.TRADE_PARTNER_CODE = 'MDI';

// LCL.USR Process status = CND.no
LCL.USR_Process_status = 'N';

//?If TP MDI, do not send a new ASN.
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Del EDI-ADV All rcds  DL) TYPE(DLTOBJ) FILE(ECP039)            AC1973910;
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Delete EDI-Adv Ship Notic) TYPE(DLTOBJ) FILE(ECP042)           AC1967253;
 PARAMETER(PAR.EDI_SURROGATE_NUMBER);
 PARAMETER(PAR.REF02_Ref_ID_Load_ID);
 PARAMETER(PAR.TRADE_PARTNER_CODE);
 PARAMETER(PAR.PRF01_Customer_PO);
 EXECUTE FUNCTION(Delete EDI-Adv Ship Notic) TYPE(DLTOBJ) FILE(ECP041)           AC1967179;
 PARAMETER(PAR.EDI_SURROGATE_NUMBER);
 PARAMETER(PAR.REF02_Ref_ID_Load_ID);
 EXECUTE FUNCTION(Del EDI-ASN           RT) TYPE(RTVOBJ) FILE(ECP040)            AC1973985;
 PARAMETER(PAR.EDI_SURROGATE_NUMBER);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Delete EDI-Adv Ship Notic) TYPE(DLTOBJ) FILE(ECP040)           AC1967268;
  PARAMETER(DB1.EDI_SURROGATE_NUMBER);
 }

}


ENDIF;

ENDIF;

CASE;

// IF LCL.USR Process status is yes
IF LCL.USR_Process_status = 'Y';

EXECUTE FUNCTION(Create EDI-Adv Ship Notic) TYPE(CRTOBJ) FILE(ECP039)           AC1965358;
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Load_ID);
PARAMETER(PAR.TRADE_PARTNER_CODE);
PARAMETER('N');
PARAMETER(*MISSING);
PARAMETER(LCL.ASN_Unused_Status_2);
PARAMETER(LCL.ASN_Unused_Status_3);
PARAMETER(LCL.ASN_Unused_Date);

EXECUTE FUNCTION(Create EDI-Adv Ship Notic) TYPE(CRTOBJ) FILE(ECP042)           AC1967251;
PARAMETER(PAR.Order_Number);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(LCL.Customer_Purchase_Order_#);

//?Create Ship From record
EXECUTE FUNCTION(RTV Company Address    RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1113470;
PARAMETER(PAR.Company);
PARAMETER(LCL.Name);
PARAMETER(LCL.Address_Line_1);
PARAMETER(LCL.Address_Line_2);
PARAMETER(LCL.Address_Line_3);
PARAMETER(LCL.City);
PARAMETER(LCL.Zip_Postal_Code);
PARAMETER(LCL.State_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(PAR.Company);
PARAMETER('DUNSNUM');
PARAMETER(LCL.D_N104_DUNS_NBR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Move company to a 4 position numeric
// LCL.Calc 4 = PAR.Company
LCL.Calc_4 = PAR.Company;

//?Move company to a 4 position numeric to a alpha 4 field
// LCL.Amount Right 4 position = LCL.Calc 4
LCL.Amount_Right_4_position = LCL.Calc_4;

// LCL.Text USR 9 = LCL.D-N104-DUNS NBR
LCL.Text_USR_9 = LCL.D_N104_DUNS_NBR;

// LCL.N104-ID CODE = CONCAT(LCL.Text USR 9,LCL.Amount Right 4 position,CON.*ZERO)
LCL.N104_ID_CODE = LCL.Text_USR_9 + LCL.Amount_Right_4_position (*ZERO);

EXECUTE FUNCTION(Create EDI-Adv Ship Notic) TYPE(CRTOBJ) FILE(ECP041)           AC1967177;
PARAMETER(PAR.Order_Number);
PARAMETER(*MISSING);
PARAMETER('SF');
PARAMETER(LCL.Name);
PARAMETER(LCL.N104_ID_CODE);
PARAMETER(LCL.Address_Line_1);
PARAMETER(*BLANK);
PARAMETER(LCL.City);
PARAMETER(LCL.State_Code);
PARAMETER(LCL.Zip_Postal_Code);

//?Create Ship To record
EXECUTE FUNCTION(Rtv ShpTo Info/AR Cst RT) TYPE(RTVOBJ) FILE(CABBREP)           AC1522850;
PARAMETER(LCL.Ship_To_Customer);
PARAMETER(LCL.Customer_Name);
PARAMETER(LCL.Address_Line_1);
PARAMETER(LCL.Address_Line_2);
PARAMETER(LCL.Address_Line_3);
PARAMETER(LCL.City);
PARAMETER(LCL.State_Code);
PARAMETER(LCL.Zip_Postal_Code);
PARAMETER(LCL.Telephone_Number_FF);
PARAMETER(LCL.AR_Customer_Number);
PARAMETER(LCL.Order_Entry_Hold);
PARAMETER(LCL.Ship_To_Customer_Flag);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv All Values        RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1569834;
PARAMETER(LCL.AR_Customer_Number);
PARAMETER(NLL.Internet_Password);
PARAMETER(NLL.Email_Address);
PARAMETER(NLL.Email_User_ID);
PARAMETER(LCL.EDI_Trading_Partner_No);
PARAMETER(LCL.EDI_Cust_Duns_Number);
PARAMETER(NLL.EDI_Warehouse_Store_No);
PARAMETER(NLL.State_Tax_ID);
PARAMETER(NLL.Cust_Shipping_Temp_C_F);
PARAMETER(NLL.One_Invoice_Per_PO);
PARAMETER(NLL.EDI_Advanced_Ship_Notice);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Create EDI-Adv Ship Notic) TYPE(CRTOBJ) FILE(ECP041)           AC1967177;
PARAMETER(PAR.Order_Number);
PARAMETER(*MISSING);
PARAMETER('ST');
PARAMETER(LCL.Customer_Name);
PARAMETER(LCL.EDI_Cust_Duns_Number);
PARAMETER(LCL.Address_Line_1);
PARAMETER(LCL.Address_Line_2);
PARAMETER(LCL.City);
PARAMETER(LCL.State_Code);
PARAMETER(LCL.Zip_Postal_Code);

//?Write detail record
// Call program Rtv & Crt ASN details XF.
CALL PROGRAM(Rtv & Crt ASN details XF) ('PNOGXFR');
PARAMETER(PAR.Company);
PARAMETER(PAR.Order_Number);

ENDIF;

ENDIF;

