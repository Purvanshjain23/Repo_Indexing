     H/TITLE Edt Carc Merit Pgm    E1  Edit record(1 screen)
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Maintain DBF file records, one at a time
     H* - Existing records may be updated or deleted
     H* - New records may be added
     H* - Key changes are not allowed
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Edit record(1 screen)
      *
     H* Company       : HPEDEVMDL                     n
     H* System        : HPEDEVMDL
     H* User name     : ISSMASO
     H* Date          : 11/19/13  Time  : 14:21:37
     H* Copyright     : HPEDEVMDL                     n
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPKHGE1R#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: Edt Carc Merit Pgm    E1  Edit record(1 screen)
      *
     FPKARREL0IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : Carcass Merit Program     Retrieval index
      *
     FPLBPCPL2IF  E           K        DISK
      * RSQ : Carcass Merit Prog MktGrp CMP/Mkt/Group/PurchDteDe
      *
     FPKARREL6IF  E           K        DISK
      * RSQ : Carcass Merit Program     CMP Competitors Comp onl
      *
     FPKARREL1UF  E           K        DISK                      A
      * UPD : Carcass Merit Program     Update index
      *
     I@ARREUA
      * Carcass Merit Program     CMP Competitors Comp onl
      * Renamed input format fields
     I              ARAMCD                          WAAMCD
     I              ARA3TX                          WAA3TX
     I              ARDLST                          WADLST
     I              ARDMST                          WADMST
     I              ARDOST                          WADOST
     I              ARDQST                          WADQST
     I              ARAZPC                          WAAZPC
     I              ARA0PC                          WAA0PC
     I              ARDTST                          WADTST
     I              ARF5ST                          WAF5ST
     I              ARI1PR                          WAI1PR
     I              ARVEPR                          WAVEPR
     I              ARVFPR                          WAVFPR
     I              ARVHPR                          WAVHPR
     I              ARVIPR                          WAVIPR
     I              ARVJPR                          WAVJPR
     I              ARZ2ST                          WAZ2ST
     I              ARZ3ST                          WAZ3ST
     I              ARZ4ST                          WAZ4ST
     I              ARAAVN                          WAAAVN
     I              ARAADT                          WAAADT
     I              ARAMTM                          WAAMTM
     I              ARAJST                          WAAJST
     I              ARAHVN                          WAAHVN
     I              ARAGVN                          WAAGVN
     I              ARABVN                          WAABVN
     I              ARABDT                          WAABDT
     I              ARABTM                          WAABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSPKARREL1
      * UPD : Carcass Merit Program     Update index
      * Current/previous master file format fields for change control
      *
     I#1DBRC      DS                            117
      * Stored master file format fields
     I                                        1   1 #1DB1
      *
     IYARDCS      DS                            117
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS                              3
      * KEY: Carcass Merit Program     Retrieval index
      * I : MAP CMP Program Code
     I                                        1   3 P1AMCD
     IP2PARM      DS
      * I :  Oms System Value Alpha
     I                                        1  40 P2EVTX
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Std Lean Req'
      * CMP Std Lean Percent
     I                                    P   1   21ZA0001
      * Message data for 'Lean Factor Req'
      * CMP Lean Factor
     I                                    P   1   21ZA0002
      * Message data for '% of Carc CutOut Not Allw'
      * CMP Grading Type
     I                                        1   1 ZA0003
      * CMP % of Carcass Cutout
     I                                    P   2   42ZA0004
      * Message data for 'Fix Cst per Hd Not allow'
      * CMP Grading Type
     I                                        1   1 ZA0005
      * CMP Fixed Cost Per Head
     I                                    P   2   42ZA0006
      * Message data for 'Grade Type B Allow GT Adj'
      * CMP Grade Type Adj
     I                                    P   1   32ZA0007
      * Message data for 'Grade Type B Allow GT Adj'
      * CMP Grade Type Adj
     I                                    P   1   32ZA0008
      * Message data for 'Only 3 Competitors Allow'
      * Competitors Code 1 Usr
     I                                        1   3 ZA0009
      * Competitors Code 2 Usr
     I                                        4   6 ZA0010
      * Competitors Code 3 Usr
     I                                        7   9 ZA0011
      * Message data for 'Only 3 Competitors Allow'
      * Competitors Code 1 Usr
     I                                        1   3 ZA0012
      * Competitors Code 2 Usr
     I                                        4   6 ZA0013
      * Competitors Code 3 Usr
     I                                        7   9 ZA0014
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: Carcass Me
     C           P2EVTX    PARM           WP0001 40        Oms System Valu
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Repeat forever
     C                     DO   *HIVAL
      * Display and process key screen
     C                     EXSR BADSKY
     C                     END
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Bypass first display of key screen is possible
     C           W0BYP     IFEQ *BLANK
     C                     MOVEL'Y'       W0BYP   1
     C                     END
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1AMCD    IFEQ *BLANK                     CMP Program Cod
      * One or more key fields is blank
     C           *IN30     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFEQ 'N'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Switch between *ADD/*CHANGE modes
     C   09                CAS            BCCHMD
      * HOME: Reset screen fields
     C   30                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE BBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     BBIN89  1
     C                     MOVEL'K'       W0GRP   1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BCCHMD    BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C           W0PMD     IFEQ 'ADD'
     C                     MOVEL'CHG'     W0PMD   3
     C                     ELSE
     C                     MOVEL'ADD'     W0PMD
     C                     END
      *================================================================
     CSR         BCEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
     C           YPMTFD    CABNE*BLANKS   BEEXIT
      * Check for existing record
     C           KRTV      KLIST
     C                     KFLD           ARAMCD           CMP Program Cod
      * Setup key
     C                     MOVEL#1AMCD    ARAMCD
     C           KRTV      CHAIN@ARREBF              9091  *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     9931  *
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * If record does not exist, flip to add mode
     C           *IN90     IFEQ '1'
     C                     MOVEL'ADD'     W0PMD
      * USER: Initialize detail screen (new record)
     C                     MOVEL'A'       #1AJST           RS Record Statu
     C                     MOVEL#1F5ST    WUMZST           Cmp Type Save u
     C                     ELSE
      * If record does exist, flip to change mode
     C                     MOVEL'CHG'     W0PMD
      * Load screen fields from DBF
     C                     EXSR MBFL#1
      * USER: Initialize detail screen (existing record)
      * DTL.Grading Type Desc Usr = Condition name of DB1.CMP Grading Typ
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103347   Y2LSNO  70       List number
     C                     PARM ARDLST    W0INVL 25        CMP Grading Typ
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DD8TX    PARM           W0CNNM 25        Grading Type De
      *
      * DTL.Sort Basis Desc Usr = Condition name of DB1.CMP Sort Basis
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103350   Y2LSNO  70       List number
     C                     PARM ARDMST    W0INVL 25        CMP Sort Basis
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DD9TX    PARM           W0CNNM 25        Sort Basis Desc
      *
      * DTL.Carc Wgt Type Desc Usr = Condition name of DB1.CMP Carc Wgt T
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103354   Y2LSNO  70       List number
     C                     PARM ARDQST    W0INVL 25        CMP Carc Wgt Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DEATX    PARM           W0CNNM 25        Carc Wgt Type D
      *
      * DTL.Sort Weight Desc Usr = Condition name of DB1.CMP UnUsed Field
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1104177   Y2LSNO  70       List number
     C                     PARM ARDTST    W0INVL 25        CMP Optimal Row
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DEBTX    PARM           W0CNNM 25        Sort Weight Des
      *
      * DTL.CMP Type Desc Usr = Condition name of DB1.CMP Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1115889   Y2LSNO  70       List number
     C                     PARM ARF5ST    W0INVL 25        CMP Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DECTX    PARM           W0CNNM 25        CMP Type Desc U
      *
      * DTL.Record Status Desc Usr = Condition name of DB1.RS Record Stat
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100087   Y2LSNO  70       List number
     C                     PARM ARAJST    W0INVL 25        RS Record Statu
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DD6TX    PARM           W0CNNM 25        Record Status D
      *
     C                     MOVEL#1F5ST    WUMZST           Cmp Type Save u
      * Build sort or preimum description for screen
     C                     EXSR UASUBR                     Build sort or p
     C                     Z-ADD##JDT     #DGYDT           CMP Effect Purc
      * Rtv Carcass Merit Prog RT - Carcass Merit Prog MktGrp  * 
     C                     EXSR SARVGN
     C                     END
      *..................................................
     C   99                GOTO BEEXIT
      *
     C           YPMTFD    IFEQ *BLANK
      * No error: Display and process details
     C                     EXSR CADSDA
     C                     END
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
     C           W0PMD     IFNE 'ADD'
     C           YPMTFD    ORNE *BLANK
      * Select existing record
     C                     EXSR VACKRL
     C                     END
      * CMP Program Code required
     C           #1AMCD    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Convert internal to external form
     C                     EXSR MOCV#D
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   30                CAS            CCDSPV
      * Process detail screen input
     C                     CAS            CFPRSC
     C                     END
     C           W0TRN     IFEQ 'R'
     C           W0PMD     IFEQ 'ADD'
     C                     EXSR MAIZ#1
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE CBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     CBIN89  1
     C                     MOVEL'1'       W0GRP   1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
     C   30                MOVEL'R'       W0TRN
     C   12                MOVEL'K'       W0TRN
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate details
     C                     EXSR DCVLDL
      * QUIT if error:
     C   99                GOTO CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      * Prompt for confirmation
     C                     EXSR EAPMCF
      * Quit if not confirmed
     C           *IN99     IFEQ '1'
     C                     SETOF                     99
     C                     GOTO CFEXIT
     C                     END
      * No error: update record
     C                     EXSR EBPR##
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
      * Validate CMP CLC Premium First
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1Z2ST    W0NSRQ  1        CMP CLC Premium
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#1Z2ST'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1272619   Y2LSNO  70
     C           #1Z2ST    PARM #1Z2ST    W0EXVL 25        CMP CLC Premium
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
      * Validate CMP Grading Type
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#1DLST'  IFEQ YPMTFD
      * CMP Grading Type
     C                     MOVEL#1DLST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHDLST
     C                     SELEC
     C           W0INVL    WHEQ 'B'                        B
     C                     Z-ADD1         ZHDLST
     C           W0INVL    WHEQ 'F'                        F
     C                     Z-ADD2         ZHDLST
     C           W0INVL    WHEQ 'L'                        L
     C                     Z-ADD3         ZHDLST
     C           W0INVL    WHEQ 'P'                        P
     C                     Z-ADD4         ZHDLST
     C           W0INVL    WHEQ 'S'                        S
     C                     Z-ADD5         ZHDLST
     C           W0INVL    WHEQ 'C'                        C
     C                     Z-ADD6         ZHDLST
     C           W0INVL    WHEQ 'D'                        D
     C                     Z-ADD7         ZHDLST
     C           W0INVL    WHEQ 'M'                        M
     C                     Z-ADD8         ZHDLST
     C                     ENDSL
     C                     EXFMTZGDLST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHDLST    WHEQ 1
     C                     MOVEL'B'       W0INVL           B
     C           ZHDLST    WHEQ 2
     C                     MOVEL'F'       W0INVL           F
     C           ZHDLST    WHEQ 3
     C                     MOVEL'L'       W0INVL           L
     C           ZHDLST    WHEQ 4
     C                     MOVEL'P'       W0INVL           P
     C           ZHDLST    WHEQ 5
     C                     MOVEL'S'       W0INVL           S
     C           ZHDLST    WHEQ 6
     C                     MOVEL'C'       W0INVL           C
     C           ZHDLST    WHEQ 7
     C                     MOVEL'D'       W0INVL           D
     C           ZHDLST    WHEQ 8
     C                     MOVEL'M'       W0INVL           M
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #1DLST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate CMP Sort Basis
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#1DMST'  IFEQ YPMTFD
      * CMP Sort Basis
     C                     MOVEL#1DMST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHDMST
     C                     SELEC
     C           W0INVL    WHEQ 'L'                        L
     C                     Z-ADD1         ZHDMST
     C           W0INVL    WHEQ 'M'                        M
     C                     Z-ADD2         ZHDMST
     C           W0INVL    WHEQ *BLANK                     *BLANK
     C                     Z-ADD3         ZHDMST
     C           W0INVL    WHEQ 'P'                        P
     C                     Z-ADD4         ZHDMST
     C                     ENDSL
     C                     EXFMTZGDMST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHDMST    WHEQ 1
     C                     MOVEL'L'       W0INVL           L
     C           ZHDMST    WHEQ 2
     C                     MOVEL'M'       W0INVL           M
     C           ZHDMST    WHEQ 3
     C                     MOVEL*BLANK    W0INVL           *BLANK
     C           ZHDMST    WHEQ 4
     C                     MOVEL'P'       W0INVL           P
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #1DMST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate CMP Carc Wgt Type
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#1DQST'  IFEQ YPMTFD
      * CMP Carc Wgt Type
     C                     MOVEL#1DQST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHDQST
     C                     SELEC
     C           W0INVL    WHEQ 'SK'                       SK
     C                     Z-ADD1         ZHDQST
     C           W0INVL    WHEQ 'SC'                       SC
     C                     Z-ADD2         ZHDQST
     C                     ENDSL
     C                     EXFMTZGDQST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHDQST    WHEQ 1
     C                     MOVEL'SK'      W0INVL           SK
     C           ZHDQST    WHEQ 2
     C                     MOVEL'SC'      W0INVL           SC
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #1DQST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate CMP Type
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1F5ST    W0NSRQ  1        CMP Type
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#1F5ST'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1115889   Y2LSNO  70
     C           #1F5ST    PARM #1F5ST    W0EXVL 25        CMP Type
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
      * Validate CMP Optimal Row Nbr f/srt
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1DTST    W0NSRQ  1        CMP Optimal Row
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#1DTST'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1104177   Y2LSNO  70
     C           #1DTST    PARM #1DTST    W0EXVL 25        CMP Optimal Row
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
      * Validate RS Record Status
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#1AJST'  IFEQ YPMTFD
      * RS Record Status
     C                     MOVEL#1AJST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHAJST
     C                     SELEC
     C           W0INVL    WHEQ 'A'                        A
     C                     Z-ADD1         ZHAJST
     C           W0INVL    WHEQ 'I'                        I
     C                     Z-ADD2         ZHAJST
     C                     ENDSL
     C                     EXFMTZGAJST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHAJST    WHEQ 1
     C                     MOVEL'A'       W0INVL           A
     C           ZHAJST    WHEQ 2
     C                     MOVEL'I'       W0INVL           I
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #1AJST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate detail screen fields
      * Build sort or preimum description for screen
     C                     EXSR UBSUBR                     Build sort or p
      * validate Premium 1st only used with the %base Price
      * CASE: DTL.CMP Sort Basis is % of Base Price
     C           #1DMST    IFEQ 'P'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.CMP CLC Premium First is Premium First
     C           #1Z2ST    IFEQ 'P'                        *IF
      * Send message 'Only allowed on %BasePric'
     C                     MOVEL'PRK1146' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate Lean Factor evaluation type.
      * CASE: DTL.CMP Grading Type is Lean Factor
     C           #1DLST    IFEQ 'F'                        *IF
      * CASE: DTL.CMP Std Lean Percent EQ WRK.Zero USR
     C           #1AZPC    IFEQ WUE9NB                     *IF
      * Setup message data for message
     C                     Z-ADD#1AZPC    ZA0001           CMP Std Lean Pe
      * Send message 'Std Lean Req'
     C                     MOVEL'PRK0142' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     END                             *FI
      * CASE: DTL.CMP Lean Factor EQ WRK.Zero USR
     C           #1A0PC    IFEQ WUE9NB                     *IF
      * Setup message data for message
     C                     Z-ADD#1A0PC    ZA0002           CMP Lean Factor
      * Send message 'Lean Factor Req'
     C                     MOVEL'PRK0143' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9937  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1AZPC           CMP Std Lean Pe
     C                     END                             *FI
      * Validate COMPETITOR Lean % +/-
      * CASE:
      *  - c1 AND (c2 OR c3)
      *   |- c1    : DTL.CMP Type is Competitor Comparison
      *   |- c2    : DTL.CMP Grading Type is Lean Factor
      *   |- c3    : DTL.CMP Grading Type is Lean Percent FOM
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #1F5ST    IFEQ 'D'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           #1DLST    IFEQ 'F'                        *IF
     C           #1DLST    OREQ 'P'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1A0PC           CMP Lean Factor
     C                     END                             *FI
      * Validate COMPETITOR Market add/Ded
      * CASE: DTL.CMP Type is Competitor Comparison
     C           #1F5ST    IFEQ 'D'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1I1PR           CMP Market Add/
     C                     END                             *FI
      * 06/20/05 slm Validation on Meat Value
      * Validate Meat Value
      * CASE: DTL.CMP Grading Type is Meat Value
     C           #1DLST    IFEQ 'M'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.CMP % of Carcass Cutout EQ WRK.Zero USR
     C           #1VEPR    IFEQ WUE9NB                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1DLST    ZA0003           CMP Grading Typ
     C                     Z-ADD#1VEPR    ZA0004           CMP % of Carcas
      * Send message '% of Carc CutOut Not Allw'
     C                     MOVEL'PRK1130' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993342*
      *
     C                     END                             *FI
      * CASE: DTL.CMP Fixed Cost Per Head EQ WRK.Zero USR
     C           #1VFPR    IFEQ WUE9NB                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1DLST    ZA0005           CMP Grading Typ
     C                     Z-ADD#1VFPR    ZA0006           CMP Fixed Cost
      * Send message 'Fix Cst per Hd Not allow'
     C                     MOVEL'PRK1131' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993343*
      *
     C                     END                             *FI
     C                     END                             *FI
      * 10/18/07 slm Validation the Grade = B and Grade Adjustment
      * Validate Grade Adjustment
      * CASE: DTL.CMP Grading Type is Not BackFat Grade
     C           #1DLST    IFEQ 'C'                        *IF
     C           #1DLST    OREQ 'G'
     C           #1DLST    OREQ 'F'
     C           #1DLST    OREQ 'P'
     C           #1DLST    OREQ 'D'
     C           #1DLST    OREQ 'L'
     C           #1DLST    OREQ 'M'
     C           #1DLST    OREQ 'S'
      * CASE: DTL.CMP Grade Type Adj EQ WRK.Zero USR
     C           #1VHPR    IFEQ WUE9NB                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADD#1VHPR    ZA0007           CMP Grade Type
      * Send message 'Grade Type B Allow GT Adj'
     C                     MOVEL'PRK1178' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9941  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.CMP Grade Type Adj GE WRK.Zero USR
     C           #1VHPR    IFGE WUE9NB                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADD#1VHPR    ZA0008           CMP Grade Type
      * Send message 'Grade Type B Allow GT Adj'
     C                     MOVEL'PRK1178' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9941  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * DTL.Grading Type Desc Usr = Condition name of DTL.CMP Grading Typ
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103347   Y2LSNO  70       List number
     C                     PARM #1DLST    W0INVL 25        CMP Grading Typ
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DD8TX    PARM           W0CNNM 25        Grading Type De
      *
      * DTL.Sort Basis Desc Usr = Condition name of DTL.CMP Sort Basis
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103350   Y2LSNO  70       List number
     C                     PARM #1DMST    W0INVL 25        CMP Sort Basis
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DD9TX    PARM           W0CNNM 25        Sort Basis Desc
      *
      * DTL.Carc Wgt Type Desc Usr = Condition name of DTL.CMP Carc Wgt T
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103354   Y2LSNO  70       List number
     C                     PARM #1DQST    W0INVL 25        CMP Carc Wgt Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DEATX    PARM           W0CNNM 25        Carc Wgt Type D
      *
      * DTL.CMP Type Desc Usr = Condition name of DTL.CMP Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1115889   Y2LSNO  70       List number
     C                     PARM #1F5ST    W0INVL 25        CMP Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DECTX    PARM           W0CNNM 25        CMP Type Desc U
      *
      * DTL.Record Status Desc Usr = Condition name of DTL.RS Record Stat
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100087   Y2LSNO  70       List number
     C                     PARM #1AJST    W0INVL 25        RS Record Statu
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DD6TX    PARM           W0CNNM 25        Record Status D
      *
      * CASE: PGM.*Program mode is *ADD
     C           W0PMD     IFEQ 'ADD'                      *IF
      * CASE: DTL.CMP Type is Competitor Comparison
     C           #1F5ST    IFEQ 'D'                        *IF
      * Chk 3 Only Competitors RT - Carcass Merit Program  * 
     C                     EXSR SBRVGN
      * CASE: WRK.Count USR is Greater then 3
     C           WUP0NB    IFGT 3                          *IF
      * Setup message data for message
     C                     MOVELWUE7CD    ZA0009           Competitors Cod
     C                     MOVELWUE8CD    ZA0010           Competitors Cod
     C                     MOVELWUE9CD    ZA0011           Competitors Cod
      * Send message 'Only 3 Competitors Allow'
     C                     MOVEL'PRK0617' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.CMP Type NE WRK.Cmp Type Save usr
     C           #1F5ST    IFNE WUMZST                     *IF
      * CASE: DTL.CMP Type is Competitor Comparison
     C           #1F5ST    IFEQ 'D'                        *IF
      * Chk 3 Only Competitors RT - Carcass Merit Program  * 
     C                     EXSR SCRVGN
      * CASE: WRK.Count USR is Greater then 3
     C           WUP0NB    IFGT 3                          *IF
      * Setup message data for message
     C                     MOVELWUE7CD    ZA0012           Competitors Cod
     C                     MOVELWUE8CD    ZA0013           Competitors Cod
     C                     MOVELWUE9CD    ZA0014           Competitors Cod
      * Send message 'Only 3 Competitors Allow'
     C                     MOVEL'PRK0617' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END
      * CMP Description required
     C           #1A3TX    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * CMP Grading Type required
     C           #1DLST    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9933  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * CMP Carc Wgt Type required
     C           #1DQST    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9935  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * CMP Type required
     C           #1F5ST    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9938  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * RS Record Status required
     C           #1AJST    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9944  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         EAPMCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert internal to external form
     C                     EXSR MOCV#D
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Force PUTOVR
     C                     SETON                         86*
      * Update screen time
     C                     TIME           ##TME
      * Refresh screen
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     WRITE#RCDDTL1
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO EAEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         EBPR##    BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process add request
     C           W0PMD     CASEQ'ADD'     ECADRQ
      * Process update request
     C           W0PMD     CASNE'ADD'     EECHRQ
     C                     END
     C           W0RTN     IFEQ *BLANK
      * USER: Process command keys
      * CASE: PGM.*Program mode is *CHANGE
     C           W0PMD     IFEQ 'CHG'                      *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Restart program for next record
     C                     MOVEL'N'       W0TRN
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         ECADRQ    BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * Crt Carcass Merit Pgm CR - Carcass Merit Program  * 
     C                     EXSR SDCRRC
     C           W0RTN     IFEQ *BLANK
      * Send message '*Record added'
     C                     MOVEL'Y2U0011' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         ECEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Chg Carcass Merit Pgm CH - Carcass Merit Program  * 
     C                     EXSR SECHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Reset screen fields if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1
     C                     END
     C                     ELSE
     C           YARDC     IFEQ 'Y'
      * Send message '*Record changed'
     C                     MOVEL'Y2U0012' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect key fields on detail screen
     C                     SETON                     88    *
     C                     MOVEL'0'       *IN79
     C           W0PMD     IFEQ 'CHG'                      *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C                     MOVEL'0'       *IN77
     C           W0PMD     IFEQ 'ADD'                      *IF
     C                     MOVEL'1'       *IN78
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
      * Enable key screen
     C                     SETON                     87    *
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     MOVEL*BLANK    #DEBTX           Sort Weight Des
     C                     Z-ADD*ZERO     #1VIPR           CMP Unused Pric
     C                     Z-ADD*ZERO     #1VJPR           CMP Unused Pric
     C                     MOVEL*BLANK    #1Z3ST           CMP Unused Sts
     C                     MOVEL*BLANK    #1Z4ST           CMP Unused Sts
     C                     MOVEL*BLANK    #1DOST           CMP Sts
     C                     MOVEL*BLANK    #1AAVN           RS User Changed
     C                     Z-ADD*ZERO     #1AADT           RS Date Changed
     C                     Z-ADD*ZERO     #1AMTM           RS Time Changed
     C                     MOVEL*BLANK    #1AHVN           RS Job
     C                     MOVEL*BLANK    #1AGVN           RS Program
     C                     MOVEL*BLANK    #1ABVN           RS User Added
     C                     Z-ADD*ZERO     #1ABDT           RS Date Added
     C                     Z-ADD*ZERO     #1ABTM           RS Time Added
     C                     MOVEL*BLANK    #1A3TX           CMP Description
     C                     MOVEL*BLANK    #1Z2ST           CMP CLC Premium
     C                     MOVEL*BLANK    #DP3TX           Desc 15 USR
     C                     MOVEL*BLANK    #1DLST           CMP Grading Typ
     C                     MOVEL*BLANK    #DD8TX           Grading Type De
     C                     MOVEL*BLANK    #1DMST           CMP Sort Basis
     C                     MOVEL*BLANK    #DD9TX           Sort Basis Desc
     C                     MOVEL*BLANK    #1DQST           CMP Carc Wgt Ty
     C                     MOVEL*BLANK    #DEATX           Carc Wgt Type D
     C                     Z-ADD*ZERO     #1AZPC           CMP Std Lean Pe
     C                     Z-ADD*ZERO     #1A0PC           CMP Lean Factor
     C                     MOVEL*BLANK    #1F5ST           CMP Type
     C                     MOVEL*BLANK    #DECTX           CMP Type Desc U
     C                     Z-ADD*ZERO     #1I1PR           CMP Market Add/
     C                     MOVEL*BLANK    #1DTST           CMP Optimal Row
     C                     Z-ADD*ZERO     #1VHPR           CMP Grade Type
     C                     Z-ADD*ZERO     #1VEPR           CMP % of Carcas
     C                     Z-ADD*ZERO     #1VFPR           CMP Fixed Cost
     C                     MOVEL*BLANK    #DPXCD           CMP Commodity M
     C                     MOVEL*BLANK    #DPYCD           CMP Commodity G
     C                     Z-ADD*ZERO     #DGYDT           CMP Effect Purc
      * Clear external version also
     C                     Z-ADD*ZERO     VDGYDT
     C                     MOVEL*BLANK    #1AJST           RS Record Statu
     C                     MOVEL*BLANK    #DD6TX           Record Status D
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @ARREBF fields to screen
      *================================================================
     C                     Z-ADDARVIPR    #1VIPR           CMP Unused Pric
     C                     Z-ADDARVJPR    #1VJPR           CMP Unused Pric
     C                     MOVELARZ3ST    #1Z3ST           CMP Unused Sts
     C                     MOVELARZ4ST    #1Z4ST           CMP Unused Sts
     C                     MOVELARDOST    #1DOST           CMP Sts
     C                     MOVELARAAVN    #1AAVN           RS User Changed
     C                     Z-ADDARAADT    #1AADT           RS Date Changed
     C                     Z-ADDARAMTM    #1AMTM           RS Time Changed
     C                     MOVELARAHVN    #1AHVN           RS Job
     C                     MOVELARAGVN    #1AGVN           RS Program
     C                     MOVELARABVN    #1ABVN           RS User Added
     C                     Z-ADDARABDT    #1ABDT           RS Date Added
     C                     Z-ADDARABTM    #1ABTM           RS Time Added
     C                     MOVELARAMCD    #1AMCD           CMP Program Cod
     C                     MOVELARA3TX    #1A3TX           CMP Description
     C                     MOVELARZ2ST    #1Z2ST           CMP CLC Premium
     C                     MOVELARDLST    #1DLST           CMP Grading Typ
     C                     MOVELARDMST    #1DMST           CMP Sort Basis
     C                     MOVELARDQST    #1DQST           CMP Carc Wgt Ty
     C                     Z-ADDARAZPC    #1AZPC           CMP Std Lean Pe
     C                     Z-ADDARA0PC    #1A0PC           CMP Lean Factor
     C                     MOVELARF5ST    #1F5ST           CMP Type
     C                     Z-ADDARI1PR    #1I1PR           CMP Market Add/
     C                     MOVELARDTST    #1DTST           CMP Optimal Row
     C                     Z-ADDARVHPR    #1VHPR           CMP Grade Type
     C                     Z-ADDARVEPR    #1VEPR           CMP % of Carcas
     C                     Z-ADDARVFPR    #1VFPR           CMP Fixed Cost
     C                     MOVELARAJST    #1AJST           RS Record Statu
      * Hold existing record image
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     MOVELP1AMCD    #1AMCD           CMP Program Cod
      * USER: Initialize key screen
     C                     MOVEL'ADD'     W0PMD            *Program mode
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
     CSR         MOCV#D    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert CMP Effect Purchase Date to display format
      * Convert date
     C           1000000   ADD  #DGYDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDGYDT
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Carcass Merit Prog RT - Carcass Merit Prog MktGrp  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BPAMCD    WQSA01           CMP Program Cod
      * Define keylist
     C           KPSSA     KLIST
     C                     KFLD           WQSA01           CMP Program Cod
     C                     KFLD           BPGYDT           CMP Effect Purc
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           CMP Program Cod
      * Setup key
     C                     MOVELARAMCD    WQSA01           CMP Program Cod
     C                     Z-ADD#DGYDT    BPGYDT           CMP Effect Purc
      * Establish starting position
     C           KPSSA     SETLL@BPCPSK                    *
     C           KRSSA     READE@BPCPSK                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK1291' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     #DGYDT           CMP Effect Purc
     C                     MOVEL*BLANK    #DPXCD           CMP Commodity M
     C                     MOVEL*BLANK    #DPYCD           CMP Commodity G
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.CMP Effect Kill Date GE DB1.CMP Effect Kill Date
     C           #DGYDT    IFGE BPGYDT                     *IF
      * PAR = DB1 By name
     C                     Z-ADDBPGYDT    #DGYDT           CMP Effect Purc
     C                     MOVELBPPXCD    #DPXCD           CMP Commodity M
     C                     MOVELBPPYCD    #DPYCD           CMP Commodity G
     C                     GOTO SAEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.CMP Effect Kill Date LT DB1.CMP Effect Kill Date
     C           #DGYDT    IFLT BPGYDT                     *IF
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSA     READE@BPCPSK                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Chk 3 Only Competitors RT - Carcass Merit Program  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUP0NB           Count USR
     C                     MOVEL*BLANK    WUE7CD           Competitors Cod
     C                     MOVEL*BLANK    WUE8CD           Competitors Cod
     C                     MOVEL*BLANK    WUE9CD           Competitors Cod
      * Establish starting position
     C           *LOVAL    SETLL@ARREUA                    *
     C                     READ @ARREUA                  90*
      * Data record not found
     C   90                MOVEL'PRK0039' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  001       WUP0NB           Count USR
     C                     Z-ADDWUP0NB    WUP0NB           Count USR
      * CASE: WRK.Count USR is One
     C           WUP0NB    IFEQ 1                          *IF
     C                     MOVELWAAMCD    WUE7CD           Competitors Cod
     C                     ELSE
      * CASE: WRK.Count USR is Two
     C           WUP0NB    IFEQ 2                          *IF
     C                     MOVELWAAMCD    WUE8CD           Competitors Cod
     C                     ELSE
      * CASE: WRK.Count USR is Three
     C           WUP0NB    IFEQ 3                          *IF
     C                     MOVELWAAMCD    WUE9CD           Competitors Cod
     C                     ELSE
      * CASE: WRK.Count USR is Greater then 3
     C           WUP0NB    IFGT 3                          *IF
     C                     GOTO SBEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     READ @ARREUA                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Chk 3 Only Competitors RT - Carcass Merit Program  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUP0NB           Count USR
     C                     MOVEL*BLANK    WUE7CD           Competitors Cod
     C                     MOVEL*BLANK    WUE8CD           Competitors Cod
     C                     MOVEL*BLANK    WUE9CD           Competitors Cod
      * Establish starting position
     C           *LOVAL    SETLL@ARREUA                    *
     C                     READ @ARREUA                  90*
      * Data record not found
     C   90                MOVEL'PRK0039' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  001       WUP0NB           Count USR
     C                     Z-ADDWUP0NB    WUP0NB           Count USR
      * CASE: WRK.Count USR is One
     C           WUP0NB    IFEQ 1                          *IF
     C                     MOVELWAAMCD    WUE7CD           Competitors Cod
     C                     ELSE
      * CASE: WRK.Count USR is Two
     C           WUP0NB    IFEQ 2                          *IF
     C                     MOVELWAAMCD    WUE8CD           Competitors Cod
     C                     ELSE
      * CASE: WRK.Count USR is Three
     C           WUP0NB    IFEQ 3                          *IF
     C                     MOVELWAAMCD    WUE9CD           Competitors Cod
     C                     ELSE
      * CASE: WRK.Count USR is Greater then 3
     C           WUP0NB    IFGT 3                          *IF
     C                     GOTO SCEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     READ @ARREUA                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDCRRC    BEGSR
      *================================================================
      * Crt Carcass Merit Pgm CR - Carcass Merit Program  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @ARREBG
     C                     MOVEL#1AMCD    ARAMCD           CMP Program Cod
     C                     MOVEL#1A3TX    ARA3TX           CMP Description
     C                     MOVEL#1DLST    ARDLST           CMP Grading Typ
     C                     MOVEL#1DMST    ARDMST           CMP Sort Basis
     C                     MOVEL#1DOST    ARDOST           CMP Sts
     C                     MOVEL#1DQST    ARDQST           CMP Carc Wgt Ty
     C                     Z-ADD#1AZPC    ARAZPC           CMP Std Lean Pe
     C                     Z-ADD#1A0PC    ARA0PC           CMP Lean Factor
     C                     MOVEL#1DTST    ARDTST           CMP Optimal Row
     C                     MOVEL#1F5ST    ARF5ST           CMP Type
     C                     Z-ADD#1I1PR    ARI1PR           CMP Market Add/
     C                     Z-ADD#1VEPR    ARVEPR           CMP % of Carcas
     C                     Z-ADD#1VFPR    ARVFPR           CMP Fixed Cost
     C                     Z-ADD#1VHPR    ARVHPR           CMP Grade Type
     C                     Z-ADD#1VIPR    ARVIPR           CMP Unused Pric
     C                     Z-ADD#1VJPR    ARVJPR           CMP Unused Pric
     C                     MOVEL#1Z2ST    ARZ2ST           CMP CLC Premium
     C                     MOVEL#1Z3ST    ARZ3ST           CMP Unused Sts
     C                     MOVEL#1Z4ST    ARZ4ST           CMP Unused Sts
     C                     MOVEL#1AAVN    ARAAVN           RS User Changed
     C                     Z-ADD#1AADT    ARAADT           RS Date Changed
     C                     Z-ADD#1AMTM    ARAMTM           RS Time Changed
     C                     MOVEL#1AJST    ARAJST           RS Record Statu
     C                     MOVEL#1AHVN    ARAHVN           RS Job
     C                     MOVEL#1AGVN    ARAGVN           RS Program
     C                     MOVEL#1ABVN    ARABVN           RS User Added
     C                     Z-ADD#1ABDT    ARABDT           RS Date Added
     C                     Z-ADD#1ABTM    ARABTM           RS Time Added
      *
      * USER: Processing before Data update
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DB1) ARAHVN' defaulted for 'RS Job'.
      * Field '(DB1) ARAGVN' defaulted for 'RS Program'.
      * Rtv Add Stamp         IF
     C                     MOVEL'A'       ARAJST           RS Record Statu
     C                     MOVEL##USR     ARABVN           RS User Added
     C                     Z-ADD##JDT     ARABDT           RS Date Added
     C                     Z-ADD##JTM     ARABTM           RS Time Added
     C                     MOVEL##PGM     ARAGVN           RS Program
     C                     MOVEL##JOB     ARAHVN           RS Job
     C           KLCRSD    KLIST
     C                     KFLD           ARAMCD           CMP Program Cod
      * Check for duplicate primary key
     C           KLCRSD    SETLL@ARREBG                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'PRK0040' W0RTN   7
      * Send message 'Carcass Merit Program  EX'
     C                     MOVEL'PRK0040' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C                     WRITE@ARREBG                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SECHRC    BEGSR
      *================================================================
      * Chg Carcass Merit Pgm CH - Carcass Merit Program  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @ARREBG
     C                     MOVEL#1AMCD    ARAMCD    P      CMP Program Cod
      *
     C           KLCHSE    KLIST
     C                     KFLD           ARAMCD           CMP Program Cod
     C           KLCHSE    CHAIN@ARREBG              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PKARREL1'MDACP
     C                     MOVEL'@ARREBG' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     ENDIF
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C                     UNLCKPKARREL1               91  *
     C                     GOTO SEEXIT
     C                     ENDIF                           FI #1DBRC
      * Store record data for null update check
     C                     MOVE @1DBRC    YARDCS
      * Move non-key fields to @ARREBG
     C                     MOVEL#1A3TX    ARA3TX    P      CMP Description
     C                     MOVEL#1DLST    ARDLST    P      CMP Grading Typ
     C                     MOVEL#1DMST    ARDMST    P      CMP Sort Basis
     C                     MOVEL#1DOST    ARDOST    P      CMP Sts
     C                     MOVEL#1DQST    ARDQST    P      CMP Carc Wgt Ty
     C                     Z-ADD#1AZPC    ARAZPC           CMP Std Lean Pe
     C                     Z-ADD#1A0PC    ARA0PC           CMP Lean Factor
     C                     MOVEL#1DTST    ARDTST    P      CMP Optimal Row
     C                     MOVEL#1F5ST    ARF5ST    P      CMP Type
     C                     Z-ADD#1I1PR    ARI1PR           CMP Market Add/
     C                     Z-ADD#1VEPR    ARVEPR           CMP % of Carcas
     C                     Z-ADD#1VFPR    ARVFPR           CMP Fixed Cost
     C                     Z-ADD#1VHPR    ARVHPR           CMP Grade Type
     C                     Z-ADD#1VIPR    ARVIPR           CMP Unused Pric
     C                     Z-ADD#1VJPR    ARVJPR           CMP Unused Pric
     C                     MOVEL#1Z2ST    ARZ2ST    P      CMP CLC Premium
     C                     MOVEL#1Z3ST    ARZ3ST    P      CMP Unused Sts
     C                     MOVEL#1Z4ST    ARZ4ST    P      CMP Unused Sts
     C                     MOVEL#1AAVN    ARAAVN    P      RS User Changed
     C                     Z-ADD#1AADT    ARAADT           RS Date Changed
     C                     Z-ADD#1AMTM    ARAMTM           RS Time Changed
     C                     MOVEL#1AJST    ARAJST    P      RS Record Statu
     C                     MOVEL#1AHVN    ARAHVN    P      RS Job
     C                     MOVEL#1AGVN    ARAGVN    P      RS Program
     C                     MOVEL#1ABVN    ARABVN    P      RS User Added
     C                     Z-ADD#1ABDT    ARABDT           RS Date Added
     C                     Z-ADD#1ABTM    ARABTM           RS Time Added
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
      * Rtv Change Stamp      IF
     C                     MOVEL##USR     ARAAVN           RS User Changed
     C                     Z-ADD##JDT     ARAADT           RS Date Changed
     C                     Z-ADD##JTM     ARAMTM           RS Time Changed
     C                     MOVEL##JOB     ARAHVN           RS Job
     C                     MOVEL##PGM     ARAGVN           RS Program
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@ARREBG                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPKARREL1               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Build sort or preimum description for screen
      *================================================================
      * DTL.Desc 15 USR = Condition name of DTL.CMP CLC Premium First
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1272619   Y2LSNO  70       List number
     C                     PARM #1Z2ST    W0INVL 25        CMP CLC Premium
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DP3TX    PARM           W0CNNM 25        Desc 15 USR
      *
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Build sort or preimum description for screen
      *================================================================
      * DTL.Desc 15 USR = Condition name of DTL.CMP CLC Premium First
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1272619   Y2LSNO  70       List number
     C                     PARM #1Z2ST    W0INVL 25        CMP CLC Premium
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DP3TX    PARM           W0CNNM 25        Desc 15 USR
      *
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C                     MOVEL#1AMCD    WK1X01  1
     C           WK1X01    IFEQ '?'                        CMP Program Cod
     C           YPMTFD    OREQ '#1AMCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(KEY) #1AMCD' defaulted for 'CMP Program Code'.
     C                     CALL 'PKBASRR'              90  Sel Carc Merit
     C                     PARM *BLANK    W0RTN   7
     C           #1AMCD    PARM #1AMCD    WQ0001  3        CMP Program Cod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKBASRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9931  *
     C                     END
      *
     C           #1AMCD    IFNE *BLANK                     CMP Program Cod
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     ENDIF
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           ZHCSRW    IFEQ 004
     C           ZHCSCL    ANDGE014
     C           ZHCSCL    ANDLE016
     C           @#DFMT    ANDEQ'#RCDKEY'
     C                     MOVEL'#1AMCD'  YPMTFD           CMP Program Cod
     C                     END
      *
     C           ZHCSRW    IFEQ 006
     C           ZHCSCL    ANDEQ030
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1Z2ST'  YPMTFD           CMP CLC Premium
     C                     END
      *
     C           ZHCSRW    IFEQ 007
     C           ZHCSCL    ANDEQ030
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C           *IN79     ANDEQ'0'
     C                     MOVEL'#1DLST'  YPMTFD           CMP Grading Typ
     C                     END
      *
     C           ZHCSRW    IFEQ 008
     C           ZHCSCL    ANDEQ030
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C           *IN79     ANDEQ'0'
     C                     MOVEL'#1DMST'  YPMTFD           CMP Sort Basis
     C                     END
      *
     C           ZHCSRW    IFEQ 009
     C           ZHCSCL    ANDGE030
     C           ZHCSCL    ANDLE031
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1DQST'  YPMTFD           CMP Carc Wgt Ty
     C                     END
      *
     C           ZHCSRW    IFEQ 012
     C           ZHCSCL    ANDEQ030
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1F5ST'  YPMTFD           CMP Type
     C                     END
      *
     C           ZHCSRW    IFEQ 014
     C           ZHCSCL    ANDEQ030
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1DTST'  YPMTFD           CMP Optimal Row
     C                     END
      *
     C           ZHCSRW    IFEQ 021
     C           ZHCSCL    ANDEQ030
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C           *IN78     ANDEQ'0'
     C                     MOVEL'#1AJST'  YPMTFD           RS Record Statu
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM 'PKHGE1RH'W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Cmp Type Save usr
     C                     MOVEL*BLANK    WUMZST  1
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Define work field Competitors Code 1 Usr
     C                     MOVEL*BLANK    WUE7CD  3
      * Define work field Competitors Code 2 Usr
     C                     MOVEL*BLANK    WUE8CD  3
      * Define work field Competitors Code 3 Usr
     C                     MOVEL*BLANK    WUE9CD  3
      * Define work field Count USR
     C                     Z-ADD*ZERO     WUP0NB  30
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAZPC           CMP Std Lean Pe
     C                     Z-ADD*ZERO     WAA0PC           CMP Lean Factor
     C                     Z-ADD*ZERO     WAI1PR           CMP Market Add/
     C                     Z-ADD*ZERO     WAVEPR           CMP % of Carcas
     C                     Z-ADD*ZERO     WAVFPR           CMP Fixed Cost
     C                     Z-ADD*ZERO     WAVHPR           CMP Grade Type
     C                     Z-ADD*ZERO     WAVIPR           CMP Unused Pric
     C                     Z-ADD*ZERO     WAVJPR           CMP Unused Pric
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
      * Select initial mode
     C           @1NROP    IFEQ *ZERO
      * Add mode
     C                     MOVEL'ADD'     W0PMD   3
     C                     ELSE
      * Change mode
     C                     MOVEL'CHG'     W0PMD
     C                     END
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Mov ApplN to Company  US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP2EVTX    ##CMP
      *================================================================
     CSR         ZZEXIT    ENDSR
