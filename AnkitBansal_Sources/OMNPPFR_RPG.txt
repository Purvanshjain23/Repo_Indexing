     H/TITLE PRT Sls by Itm Struc  PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISLBUSE
     H* Date          : 03/19/10  Time  : 17:24:23
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FOMHSTPO3IF  E           K        DISK
      * RSQ : Sales History             Type/Group/Class/Item/Co
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FOME8REL0IF  E           K        DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FOME9REL0IF  E           K        DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOMFAREL1IF  E           K        DISK
      * RTV : Item Structure Class      Retrieval index
      *
     FPDJEREL1IF  E           K        DISK
      * RTV : Sales Route               Retrieval index
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FCABZREL7IF  E           K        DISK
      * RSQ : Company Item              RSQ by Item only      NV
      *
     FCAEOREL1IF  E           K        DISK
      * RTV : Company Customer          Retrieval index
      *
     FOPEXREL2IF  E           K        DISK
      * RTV : Order Types               Active order Types
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FOMF0CPL2IF  E           K        DISK
      * RSQ : Commodity Mrkt Price      Market Date Descending
      *
     FPOA1CPL1IF  E           K        DISK
      * RTV : WF Sales Rz CM/DM Dwnld   Retrieval index
      *
     FOPBGWKL1IF  E           K        DISK
      * RTV : Order Detail              Retrieval index
      *
     FPOA1CPL0IF  E           K        DISK                      A
      * UPD : WF Sales Rz CM/DM Dwnld   Update index
      *
     FOMNPPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: PRT Sls by Itm Struc  PF  Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
     E                    YDOW        7  1               *Days of week
     I@BZREJU
      * Company Item              Retrieval index       NV
      * Renamed input format fields
     I              BZAIC3                          WAAIC3
     I              BZHGCD                          WAHGCD
     I              BZAVNA                          WAAVNA
     I              BZAWNA                          WAAWNA
     I              BZL7NA                          WAL7NA
     I              BZL8NA                          WAL8NA
     I              BZL6NA                          WAL6NA
     I              BZMFNA                          WAMFNA
     I              BZADCD                          WAADCD
     I              BZAWPC                          WAAWPC
     I              BZLXST                          WALXST
     I              BZAECD                          WAAECD
     I              BZAXPC                          WAAXPC
     I              BZLYST                          WALYST
     I              BZAFCD                          WAAFCD
     I              BZAICD                          WAAICD
     I              BZAIWG                          WAAIWG
     I              BZHICD                          WAHICD
     I              BZRBCD                          WARBCD
     I              BZFZST                          WAFZST
     I              BZAVST                          WAAVST
     I              BZCZWG                          WACZWG
     I              BZC0WG                          WAC0WG
     I              BZURTN                          WAURTN
     I              BZAJC8                          WAAJC8
     I              BZRINB                          WARINB
     I              BZRHNB                          WARHNB
     I              BZRGNB                          WARGNB
     I              BZLNCD                          WALNCD
     I              BZTFNB                          WATFNB
     I              BZN0CD                          WAN0CD
     I              BZX4ST                          WAX4ST
     I              BZTMVA                          WATMVA
     I              BZTNVA                          WATNVA
     I              BZBLPR                          WABLPR
     I              BZBMPR                          WABMPR
     I              BZLRCD                          WALRCD
     I              BZU9ST                          WAU9ST
     I              BZCMCO                          WACMCO
     I              BZQ1CD                          WAQ1CD
     I              BZQ8CD                          WAQ8CD
     I              BZCHTM                          WACHTM
     I              BZQZCD                          WAQZCD
     I              BZXWST                          WAXWST
     I              BZXXST                          WAXXST
     I              BZVMST                          WAVMST
     I              BZSWGH                          WASWGH
     I              BZPPHE                          WAPPHE
     I              BZR3CD                          WAR3CD
     I              BZSDCD                          WASDCD
     I              BZICN1                          WAICN1
     I              BZSVCD                          WASVCD
     I              BZICN2                          WAICN2
     I              BZSWCD                          WASWCD
     I              BZV2NB                          WAV2NB
     I              BZSXCD                          WASXCD
     I              BZITCN                          WAITCN
     I              BZSYCD                          WASYCD
     I              BZITC5                          WAITC5
     I              BZSZCD                          WASZCD
     I              BZICN6                          WAICN6
     I              BZS0CD                          WAS0CD
     I              BZICN7                          WAICN7
     I              BZS1CD                          WAS1CD
     I              BZICN8                          WAICN8
     I              BZS2CD                          WAS2CD
     I              BZICN9                          WAICN9
     I              BZS3CD                          WAS3CD
     I              BZICN0                          WAICN0
     I              BZS4CD                          WAS4CD
     I              BZSFNB                          WASFNB
     I              BZA3WG                          WAA3WG
     I              BZSJNB                          WASJNB
     I              BZLLCD                          WALLCD
     I              BZLMCD                          WALMCD
     I              BZP3ST                          WAP3ST
     I              BZSKNB                          WASKNB
     I              BZSLNB                          WASLNB
     I              BZSMNB                          WASMNB
     I              BZP4ST                          WAP4ST
     I              BZCFNB                          WACFNB
     I              BZCGNB                          WACGNB
     I              BZILNB                          WAILNB
     I              BZCHNB                          WACHNB
     I              BZCINB                          WACINB
     I              BZCJNB                          WACJNB
     I              BZCMNB                          WACMNB
     I              BZCNNB                          WACNNB
     I              BZCRNB                          WACRNB
     I              BZCSNB                          WACSNB
     I              BZCVNB                          WACVNB
     I              BZCWNB                          WACWNB
     I              BZCXNB                          WACXNB
     I              BZCZNB                          WACZNB
     I              BZC0NB                          WAC0NB
     I              BZN1CD                          WAN1CD
     I              BZB4NB                          WAB4NB
     I              BZB5NB                          WAB5NB
     I              BZX5ST                          WAX5ST
     I              BZX6ST                          WAX6ST
     I              BZX7ST                          WAX7ST
     I              BZPCCT                          WAPCCT
     I              BZBDNB                          WABDNB
     I              BZBJNB                          WABJNB
     I              BZSUST                          WASUST
     I              BZSVST                          WASVST
     I              BZSYST                          WASYST
     I              BZSZST                          WASZST
     I              BZS1ST                          WAS1ST
     I              BZXRCD                          WAXRCD
     I              BZXTCD                          WAXTCD
     I              BZXUCD                          WAXUCD
     I              BZF5WG                          WAF5WG
     I              BZF6WG                          WAF6WG
     I              BZF7WG                          WAF7WG
     I              BZBLNB                          WABLNB
     I              BZBNNB                          WABNNB
     I              BZS2ST                          WAS2ST
     I              BZS4ST                          WAS4ST
     I              BZS5ST                          WAS5ST
     I              BZS6ST                          WAS6ST
     I              BZS8ST                          WAS8ST
     I              BZS9ST                          WAS9ST
     I              BZTCST                          WATCST
     I              BZTDST                          WATDST
     I              BZUVST                          WAUVST
     I              BZUWST                          WAUWST
     I              BZUXST                          WAUXST
     I              BZVSST                          WAVSST
     I              BZAATM                          WAAATM
     I              BZAYNA                          WAAYNA
     I              BZA0NA                          WAA0NA
     I              BZAXDT                          WAAXDT
      *
     I@A1CPH2
      * WF Sales Rz CM/DM Dwnld   Update index
      * Renamed input format fields
     I              A1AIC3                          WBAIC3
     I              A1NCNX                          WBNCNX
     I              A1I6SX                          WBI6SX
     I              A1RHNB                          WBRHNB
     I              A1R4CD                          WBR4CD
     I              A1S5NB                          WBS5NB
     I              A1J6NY                          WBJ6NY
     I              A1BKC7                          WBBKC7
     I              A1PHNA                          WBPHNA
     I              A1DBCD                          WBDBCD
     I              A1CONB                          WBCONB
     I              A1GNDT                          WBGNDT
     I              A1FDPC                          WBFDPC
     I              A1CZVL                          WBCZVL
     I              A1CYVL                          WBCYVL
     I              A1NFNX                          WBNFNX
     I              A1NGNX                          WBNGNX
     I              A1GRVL                          WBGRVL
     I              A1NHNX                          WBNHNX
     I              A1IJWG                          WBIJWG
     I              A1NINX                          WBNINX
     I              A1M3QT                          WBM3QT
     I              A1RLCD                          WBRLCD
     I              A1JXAA                          WBJXAA
     I              A1UOVA                          WBUOVA
     I              A1D9PR                          WBD9PR
     I              A1DPNB                          WBDPNB
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IQPOA11    E DSPOA1CPL0
      * UPD : WF Sales Rz CM/DM Dwnld   Update index
      * Renamed input format fields
     I              A1AIC3                          WBAIC3
     I              A1NCNX                          WBNCNX
     I              A1I6SX                          WBI6SX
     I              A1RHNB                          WBRHNB
     I              A1R4CD                          WBR4CD
     I              A1S5NB                          WBS5NB
     I              A1J6NY                          WBJ6NY
     I              A1BKC7                          WBBKC7
     I              A1PHNA                          WBPHNA
     I              A1DBCD                          WBDBCD
     I              A1CONB                          WBCONB
     I              A1GNDT                          WBGNDT
     I              A1FDPC                          WBFDPC
     I              A1CZVL                          WBCZVL
     I              A1CYVL                          WBCYVL
     I              A1NFNX                          WBNFNX
     I              A1NGNX                          WBNGNX
     I              A1GRVL                          WBGRVL
     I              A1NHNX                          WBNHNX
     I              A1IJWG                          WBIJWG
     I              A1NINX                          WBNINX
     I              A1M3QT                          WBM3QT
     I              A1RLCD                          WBRLCD
     I              A1JXAA                          WBJXAA
     I              A1UOVA                          WBUOVA
     I              A1D9PR                          WBD9PR
     I              A1DPNB                          WBDPNB
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * I :  USR From Date
     I                                    P   1   40P1BDDT
     IP2PARM      DS
      * I :  USR To Date
     I                                    P   1   40P2FDDT
     IP3PARM      DS
      * I :  USR Product Str Type
     I                                    P   1   20P3WCNB
     IP4PARM      DS
      * I :  USR Product Str Group
     I                                    P   1   20P4Z3NB
     IP5PARM      DS
      * I :  USR Product Struct Class
     I                                    P   1   20P5L5CD
     IP6PARM      DS
      * N :  Billing Activity Type
     I                                        1   1 P6OBST
     IP7PARM      DS
      * FLD: *Arrays
      * I :  USR Sales Realiz. Flag
     I                                        1   1 P7JHST
      * I :  USR Active Flag
     I                                        2   2 P7W2ST
      * I :  USR Detail or Summary
     I                                        3   3 P7STST
      * I :  Export Sales
     I                                        4   4 P7STES
      * I :  Sales Route Code
     I                                        5   7 P7R4CD
      * I :  Status - Y or N
     I                                        8   8 P7B8ST
     IP8PARM      DS
      * FLD: Company Item
      * I :  Company Number
     I                                    P   1   20P8AIC3
      * I :  Item Code
     I                                    P   3   60P8HGCD
      * N :  U/M - Primary
     I                                        7   8 P8ADCD
      * N :  Conversion Factor 1
     I                                    P   9  134P8AWPC
      * N :  Operation Factor 1
     I                                       14  14 P8LXST
      * N :  U/M - Second
     I                                       15  16 P8AECD
      * N :  Conversion Factor 2
     I                                    P  17  214P8AXPC
      * N :  Operation Factor 2
     I                                       22  22 P8LYST
      * N :  U/M - Third
     I                                       23  24 P8AFCD
      * N :  U/M - Pricing
     I                                       25  26 P8AICD
      * N :  Unit Weight
     I                                    P  27  322P8AIWG
      * N :  Item Structure Class Code
     I                                    P  33  340P8RINB
      * N :  Item Structure Group Code
     I                                    P  35  360P8RHNB
      * N :  Item Structure Type Code
     I                                    P  37  380P8RGNB
      * N :  Standard Overage/Underage
     I                                    P  39  444P8BMPR
      * N :  Commodity Price Group
     I                                       45  51 P8LRCD
      * N :  Item Pricing Operation
     I                                       52  52 P8U9ST
      * N :  Item Pricing Constant
     I                                    P  53  584P8CMCO
      * N :  Print on Realization Rpt
     I                                       59  60 P8X6ST
     IP9PARM      DS
      * FLD: *Arrays
      * I :  USR Flag 2
     I                                        1   1 P9UFL2
      * I :  Warehouse Type
     I                                        2   3 P9WPST
      * I :  Warehouse Code
     I                                        4   6 P9AJCD
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1BDDT    PARM           WP0001  70       USR From Date
     C           P2FDDT    PARM           WP0002  70       USR To Date
     C           P3WCNB    PARM           WP0003  30       USR Product Str
     C           P4Z3NB    PARM           WP0004  30       USR Product Str
     C           P5L5CD    PARM           WP0005  30       USR Product Str
     C           P7JHST    PARM           WP0006  1        USR Sales Reali
     C           P7W2ST    PARM           WP0007  1        USR Active Flag
     C           P7STST    PARM           WP0008  1        USR Detail or S
     C           P7STES    PARM           WP0009  1        Export Sales
     C           P7R4CD    PARM           WP0010  3        Sales Route Cod
     C           P7B8ST    PARM           WP0011  1        Status - Y or N
     C           P8AIC3    PARM           WP0012  30       Company Number
     C           P8HGCD    PARM           WP0013  70       Item Code
     C           P9UFL2    PARM           WP0014  1        USR Flag 2
     C           P9WPST    PARM           WP0015  2        Warehouse Type
     C           P9AJCD    PARM           WP0016  3        Warehouse Code
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * PRT Sls by Itm Struc  PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$JENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * PRT Sls by Itm Struc  PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@HSTPEN                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
      * USER: Null report processing
      * CLC Set for Null Rpt   US - /UT User Source  * 
     C                     MOVEL'Y'       W0AP1P
     C                     MOVEL'Y'       W0NEWP
     C                     MOVEL'Y'       WUGGST           USR Display fie
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Item Structure
     C                     MOVEL'Y'       W0AL01  1        Item Structure
     C                     MOVEL'Y'       W0AL02  1        Item Structure
     C                     MOVEL'Y'       W0AL03  1        Shipped Item Co
     C                     MOVEL'Y'       W0AL04  1        Company Number
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $IGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $ICDWG           USR Weight Accu
     C                     Z-ADD*ZERO     $IW5NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $IZLNA           Usr Freight Acc
     C                     Z-ADD*ZERO     $IGQVL           Usr Accruals Am
     C                     Z-ADD*ZERO     $IW4NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $IBKVL           Claim Amount To
     C                     Z-ADD*ZERO     $IC0VL           Accrual Amount
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $HX8VA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $HT2VA           USR Market Valu
     C                     Z-ADD*ZERO     $HCMPR           USR Market Valu
     C                     Z-ADDF4AIC3    $HAIC3           Company Number
     C                     Z-ADDF4UTVA    $HUTVA           Standard Overag
     C                     MOVEL*BLANK    $HZ7TX           Text USR 4
     C                     Z-ADDF4RGNB    $HRGNB           Item Structure
     C                     Z-ADD*ZERO     $HGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $HCDWG           USR Weight Accu
     C                     MOVEL*BLANK    $HJNNA           USR Description
     C                     Z-ADD*ZERO     $HW5NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $HZLNA           Usr Freight Acc
     C                     Z-ADD*ZERO     $HGQVL           Usr Accruals Am
     C                     Z-ADD*ZERO     $HW4NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $HBKVL           Claim Amount To
     C                     Z-ADD*ZERO     $HC0VL           Accrual Amount
     C                     Z-ADDF4USVA    $HUSVA           FOB Gross Amoun
     C                     Z-ADDF4ULVA    $HULVA           Absorbed Freigh
     C                     Z-ADDF4KDVA    $HKDVA           Billing Detail
     C                     Z-ADDF4BYWG    $HBYWG           Weight Billed
     C                     Z-ADDF4EXQT    $HEXQT           Quantity Billed
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $GX8VA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $GT2VA           USR Market Valu
     C                     Z-ADD*ZERO     $GCMPR           USR Market Valu
     C                     Z-ADDF4AIC3    $GAIC3           Company Number
     C                     Z-ADDF4UTVA    $GUTVA           Standard Overag
     C                     Z-ADDF4RGNB    $GRGNB           Item Structure
     C                     MOVEL*BLANK    $GY7TX           Text USR 5
     C                     Z-ADDF4RHNB    $GRHNB           Item Structure
     C                     Z-ADD*ZERO     $GGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $GCDWG           USR Weight Accu
     C                     Z-ADD*ZERO     $GW5NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $GZLNA           Usr Freight Acc
     C                     Z-ADD*ZERO     $GGQVL           Usr Accruals Am
     C                     Z-ADD*ZERO     $GW4NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $GBKVL           Claim Amount To
     C                     Z-ADD*ZERO     $GC0VL           Accrual Amount
     C                     Z-ADDF4USVA    $GUSVA           FOB Gross Amoun
     C                     Z-ADDF4ULVA    $GULVA           Absorbed Freigh
     C                     Z-ADDF4KDVA    $GKDVA           Billing Detail
     C                     Z-ADDF4BYWG    $GBYWG           Weight Billed
     C                     Z-ADDF4EXQT    $GEXQT           Quantity Billed
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDF4AIC3    $CAIC3           Company Number
     C                     MOVEL*BLANK    $CY7TX           Text USR 5
     C                     Z-ADDF4RGNB    $CRGNB           Item Structure
     C                     MOVEL*BLANK    $CDCTX           Item Structure
     C                     MOVEL*BLANK    $CXLTX           Text USR 6
     C                     Z-ADDF4RHNB    $CRHNB           Item Structure
     C                     MOVEL*BLANK    $CDDTX           Item Structure
     C                     MOVEL*BLANK    $CY8TX           Text USR 7
     C                     Z-ADDF4RINB    $CRINB           Item Structure
     C                     MOVEL*BLANK    $CDETX           Item Structure
      * Load related totals format
     C                     Z-ADD*ZERO     $FX8VA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $FT2VA           USR Market Valu
     C                     Z-ADD*ZERO     $FCMPR           USR Market Valu
     C                     Z-ADDF4AIC3    $FAIC3           Company Number
     C                     Z-ADDF4UTVA    $FUTVA           Standard Overag
     C                     Z-ADDF4RGNB    $FRGNB           Item Structure
     C                     Z-ADDF4RHNB    $FRHNB           Item Structure
     C                     MOVEL*BLANK    $FXLTX           Text USR 6
     C                     Z-ADDF4RINB    $FRINB           Item Structure
     C                     Z-ADD*ZERO     $FGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $FCDWG           USR Weight Accu
     C                     Z-ADD*ZERO     $FW5NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $FZLNA           Usr Freight Acc
     C                     Z-ADD*ZERO     $FGQVL           Usr Accruals Am
     C                     Z-ADD*ZERO     $FW4NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $FBKVL           Claim Amount To
     C                     Z-ADD*ZERO     $FC0VL           Accrual Amount
     C                     Z-ADDF4USVA    $FUSVA           FOB Gross Amoun
     C                     Z-ADDF4ULVA    $FULVA           Absorbed Freigh
     C                     Z-ADDF4KDVA    $FKDVA           Billing Detail
     C                     Z-ADDF4BYWG    $FBYWG           Weight Billed
     C                     Z-ADDF4EXQT    $FEXQT           Quantity Billed
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $EX8VA           FOB Gross Amoun
     C                     Z-ADDF4AIC3    $EAIC3           Company Number
     C                     Z-ADDF4S5NB    $ES5NB           Shipped Item Co
     C                     MOVEL*BLANK    $ECJTX           USR Item Descri
     C                     Z-ADD*ZERO     $EGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $ECDWG           USR Weight Accu
     C                     Z-ADD*ZERO     $EW5NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $EZLNA           Usr Freight Acc
     C                     Z-ADD*ZERO     $EGQVL           Usr Accruals Am
     C                     Z-ADD*ZERO     $EW4NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $ECPPC           USR Percent Wor
     C                     Z-ADD*ZERO     $EU7VA           USR Amount Rema
     C                     Z-ADD*ZERO     $EXTVA           Variance amount
     C                     Z-ADD*ZERO     $ECYNY           Usr Abs Freight
     C                     Z-ADD*ZERO     $EBKVL           Claim Amount To
     C                     Z-ADD*ZERO     $EC0VL           Accrual Amount
     C                     Z-ADDF4TBNB    $ETBNB           Absorbed Freigh
     C                     Z-ADDF4ULVA    $EULVA           Absorbed Freigh
     C                     Z-ADDF4KDVA    $EKDVA           Billing Detail
     C                     Z-ADDF4BYWG    $EBYWG           Weight Billed
     C                     Z-ADD*ZERO     $EORNB           FOB Gross Amoun
     C                     Z-ADD*ZERO     $EH4WG           USR Weight Accu
     C                     Z-ADD*ZERO     $ET2VA           USR Market Valu
     C                     Z-ADD*ZERO     $ECMPR           USR Market Valu
     C                     Z-ADDF4UTVA    $EUTVA           Standard Overag
     C                     Z-ADDF4USVA    $EUSVA           FOB Gross Amoun
     C                     Z-ADDF4EXQT    $EEXQT           Quantity Billed
     C                     Z-ADDF4RGNB    $ERGNB           Item Structure
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELF4ABTX    $DABTX           Alpha Search
     C                     MOVELF4BOCD    $DBOCD           Type Code
     C                     Z-ADDF4BTC7    $DBTC7           Parent Customer
     C                     Z-ADDF4ANC7    $DANC7           A/R Customer Nu
     C                     MOVELF4AQTX    $DAQTX           A/R Customer Na
     C                     MOVELF4BRTX    $DBRTX           Ship To Name
     C                     MOVELF4HNNA    $DHNNA           Ship To City
     C                     MOVELF4CKTX    $DCKTX           Ship To Zip/Pos
     C                     MOVELF4KXCD    $DKXCD           Country Code
     C                     MOVELF4BCNA    $DBCNA           Customer Purcha
     C                     Z-ADDF4A0DT    $DA0DT           Order Date
     C                     Z-ADDF4ACDT    $DACDT           Cancel Date
     C                     MOVELF4R4CD    $DR4CD           Sales Route Cod
     C                     MOVELF4R5CD    $DR5CD           Original Salesp
     C                     MOVELF4BFCD    $DBFCD           Manager Level C
     C                     MOVELF4Q4CD    $DQ4CD           VP Level Code
     C                     MOVELF4AQCD    $DAQCD           Terms Code
     C                     MOVELF4BZNA    $DBZNA           Carrier Code
     C                     MOVELF4JNCD    $DJNCD           Order Type - Sa
     C                     MOVELF4Q2CD    $DQ2CD           Shipping Method
     C                     MOVELF4U2ST    $DU2ST           Export Status
     C                     Z-ADDF4ATIN    $DATIN           Attach to Invoi
     C                     Z-ADDF4T3NB    $DT3NB           Attach to Order
     C                     Z-ADDF4RSRN    $DRSRN           Resell Referenc
     C                     Z-ADDF4ORIT    $DORIT           Original Item
     C                     Z-ADDF4S5NB    $DS5NB           Shipped Item Co
     C                     Z-ADDF4BKC7    $DBKC7           Ship To Custome
     C                     MOVEL*BLANK    $DJUNA           USR Description
     C                     MOVELF4DBCD    $DDBCD           Ship To State C
     C                     MOVEL*BLANK    $DUGCD           @Adjustment Typ
     C                     MOVEL*BLANK    $DAYTX           Customer Name
     C                     MOVELF4AJCD    $DAJCD           Warehouse Code
     C                     Z-ADDF4AVQT    $DAVQT           Quantity Ordere
     C                     Z-ADDF4D0WG    $DD0WG           Weight Ordered
     C                     MOVELF4AGCD    $DAGCD           U/M - Ordered
     C                     Z-ADDF4AKPR    $DAKPR           Unit Price
     C                     Z-ADDF4AUPR    $DAUPR           Unit Price Orde
     C                     MOVELF4CRCD    $DCRCD           U/M - Base Pric
     C                     Z-ADDF4A5DT    $DA5DT           Requested Ship
     C                     Z-ADDF4AWDT    $DAWDT           Invoice Date
     C                     Z-ADDF4HDDT    $DHDDT           Deadline Depart
     C                     Z-ADDF4AGCS    $DAGCS           Unit Cost Per P
     C                     Z-ADDF4AQCS    $DAQCS           Unit Cost Prici
     C                     Z-ADDF4AVWG    $DAVWG           Unit Weight Ord
     C                     MOVELF4AMST    $DAMST           Affect Inventor
     C                     MOVELF4ANST    $DANST           Affect Sales Do
     C                     MOVELF4VAST    $DVAST           Affect Sales Pn
     C                     Z-ADDF4L6NB    $DL6NB           Contract Number
     C                     MOVELF4UMCD    $DUMCD           Export Country
     C                     Z-ADDF4C4NB    $DC4NB           Order Number
     C                     Z-ADDF4HCDT    $DHCDT           LD Arrival Date
     C                     Z-ADDF4CCQT    $DCCQT           Quantity Schedu
     C                     Z-ADDF4AUWG    $DAUWG           Weight Schedule
     C                     Z-ADDF4ESNB    $DESNB           Accounting Year
     C                     Z-ADDF4ETNB    $DETNB           Accounting Peri
     C                     Z-ADDF4BZNB    $DBZNB           OM Week
     C                     Z-ADDF4MAVA    $DMAVA           Billing Detail
     C                     Z-ADDF4A4WG    $DA4WG           Tare Weight Tot
     C                     Z-ADDF4CKNB    $DCKNB           G/L Document Nu
     C                     MOVELF4BMST    $DBMST           G/L Update Stat
     C                     Z-ADDF4R8NB    $DR8NB           Shipping Compan
     C                     MOVELF4RMCD    $DRMCD           Order Detail Re
     C                     Z-ADDF4BZPR    $DBZPR           Price Overage O
     C                     MOVELF4RDCD    $DRDCD           Date Method Cod
     C                     MOVELF4Q7CD    $DQ7CD           Price Method Co
     C                     Z-ADDF4RGNB    $DRGNB           Item Structure
     C                     Z-ADDF4RHNB    $DRHNB           Item Structure
     C                     Z-ADDF4RINB    $DRINB           Item Structure
     C                     Z-ADDF4R1NB    $DR1NB           Rated Freight
     C                     Z-ADDF4CONB    $DCONB           Invoice Number
     C                     Z-ADDF4RMNB    $DRMNB           Load ID
     C                     Z-ADDF4AIC3    $DAIC3           Company Number
     C                     MOVELF4CEST    $DCEST           Invoice Suffix
     C                     Z-ADDF4DPNB    $DDPNB           Order Sequence
     C                     Z-ADDF4GNDT    $DGNDT           Actual Shipped
     C                     Z-ADD*ZERO     $DGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $DCDWG           USR Weight Accu
     C                     Z-ADD*ZERO     $DW5NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $DZLNA           Usr Freight Acc
     C                     Z-ADD*ZERO     $DGQVL           Usr Accruals Am
     C                     Z-ADD*ZERO     $DW4NB           USR Billing Dtl
     C                     Z-ADDF4UENB    $DUENB           Order Secondary
     C                     MOVELF4MONA    $DMONA           A/R City
     C                     MOVELF4RJCD    $DRJCD           A/R State
     C                     MOVELF4RKCD    $DRKCD           A/R County Code
     C                     MOVELF4GPTX    $DGPTX           A/R Zip/Postal
     C                     Z-ADDF4AODT    $DAODT           Scheduled Ship
     C                     Z-ADD*ZERO     $DU7VA           USR Amount Rema
     C                     Z-ADD*ZERO     $DXTVA           Variance amount
     C                     Z-ADD*ZERO     $DCPPC           USR Percent Wor
     C                     Z-ADDF4USVA    $DUSVA           FOB Gross Amoun
     C                     Z-ADDF4ULVA    $DULVA           Absorbed Freigh
     C                     Z-ADDF4KDVA    $DKDVA           Billing Detail
     C                     Z-ADDF4BYWG    $DBYWG           Weight Billed
     C                     Z-ADD*ZERO     $DJOVA           USR Adjustments
     C                     Z-ADDF4TBNB    $DTBNB           Absorbed Freigh
     C                     Z-ADD*ZERO     $DC0PC           USR Percent Wor
     C                     MOVELF4RLCD    $DRLCD           Order Header Re
     C                     Z-ADD*ZERO     $DCMPR           USR Market Valu
     C                     Z-ADDF4UTVA    $DUTVA           Standard Overag
     C                     Z-ADDF4EXQT    $DEXQT           Quantity Billed
     C                     MOVELF4LLCD    $DLLCD           Packaging Code
     C                     MOVELF4LMCD    $DLMCD           Item Market Cod
     C                     Z-ADDF4SKNB    $DSKNB           Agrimetrics gro
     C                     Z-ADDF4SLNB    $DSLNB           Agrimetrics pac
     C                     Z-ADDF4SMNB    $DSMNB           Agrimetrics gra
     C                     Z-ADDF4EXDT    $DEXDT           Market Pricing
     C                     MOVELF4LQCD    $DLQCD           Commodity Marke
     C                     MOVELF4HICD    $DHICD           Quality Level
     C                     MOVELF4RBCD    $DRBCD           Item Level
     C                     MOVELF4G7NA    $DG7NA           Order Desc. Lin
     C                     Z-ADDF4ONVA    $DONVA           Actual Freight
     C                     MOVELF4N0CD    $DN0CD           Item Type Code
     C                     Z-ADDF4B4NB    $DB4NB           PM R/M Type Cod
     C                     Z-ADDF4B5NB    $DB5NB           PM Line Number
     C                     MOVELF4N1CD    $DN1CD           SH Unused (was
     C                     Z-ADDF4GIDT    $DGIDT           Pricing Date Us
     C                     MOVELF4Z1ST    $DZ1ST           Modified Flag
     C                     Z-ADDF4UNVA    $DUNVA           Ledgrd Trd Fund
     C                     Z-ADDF4UOVA    $DUOVA           Commission Amou
     C                     Z-ADD*ZERO     $DRVA1           Revaluation Amo
     C                     MOVEL*BLANK    $DJXAA           SH Price Type
     C                     Z-ADDF4UPVA    $DUPVA           Financials Amou
     C                     Z-ADDF4UQVA    $DUQVA           Financials Amou
     C                     MOVELF4SDCD    $DSDCD           Group for Packa
     C                     MOVELF4QZCD    $DQZCD           Base/Conv/Loss
     C                     MOVELF4XWST    $DXWST           Variety/Rendere
     C                     MOVELF4T9CD    $DT9CD           Customer Group
     C                     MOVELF4UBCD    $DUBCD           Customer Group
     C                     Z-ADDF4CFC7    $DCFC7           Order Group Cod
     C                     MOVELF4X1CD    $DX1CD           Shipping Zone C
     C                     MOVELF4GASX    $DGASX           Invoice Price T
     C                     Z-ADDF4DUPR    $DDUPR           Invoice Unit Pr
     C                     Z-ADDF4B6VL    $DB6VL           Invoice Extende
     C                     Z-ADDF4IANX    $DIANX           Req Shipping Te
     C                     Z-ADDF4IBNX    $DIBNX           Actual Shipping
     C                     MOVELF4RPCD    $DRPCD           Age Code
     C                     Z-ADDF4NYDT    $DNYDT           Req Delivery Da
     C                     Z-ADDF4BZTM    $DBZTM           Req Delivery Ti
     C                     Z-ADDF4Z4NB    $DZ4NB           MPC Number
     C                     MOVELF4XACD    $DXACD           Shipping Line
     C                     MOVELF4OANA    $DOANA           Port Delv Termi
     C                     MOVELF4OKTX    $DOKTX           Port City
     C                     MOVELF4K4TX    $DK4TX           Vessel Name
     C                     MOVELF4NBBO    $DNBBO           Booking Number
     C                     Z-ADDF4OCFR    $DOCFR           Load Total Frei
     C                     Z-ADDF4C0C7    $DC0C7           Claim Number
     C                     Z-ADDF4A1AA    $DA1AA           Ham Group Numbe
     C                     MOVELF4VEST    $DVEST           Palletize
     C                     MOVELF4UVST    $DUVST           EDI Status 1
     C                     MOVELF4UWST    $DUWST           EDI Status 2
     C                     MOVELF4UXST    $DUXST           EDI Status 3
     C                     Z-ADDF4AATM    $DAATM           Job Time
     C                     MOVELF4AYNA    $DAYNA           User Id
     C                     MOVELF4A0NA    $DA0NA           Job Name
     C                     Z-ADDF4AXDT    $DAXDT           Job Date
     C                     Z-ADDF4A5PR    $DA5PR           Commodity Marke
     C                     Z-ADDF4CDPR    $DCDPR           Market Value
     C                     Z-ADDF4D0PR    $DD0PR           Default Cmdty M
     C                     Z-ADDF4D0VL    $DD0VL           Raw Material Co
     C                     MOVELF4IRSX    $DIRSX           Sales Expense P
     C                     Z-ADDF4CEVL    $DCEVL           Sales Expense T
     C                     MOVELF4ISSX    $DISSX           Data Mart Proce
     C                     MOVELF4ITSX    $DITSX           LH Load Type
     C                     MOVELF4IUSX    $DIUSX           Order TF Exempt
     C                     Z-ADDF4OHDT    $DOHDT           LD Sail Date
     C                     Z-ADDF4D9PR    $DD9PR           NonLedgrd TrdFn
     C                     Z-ADDF4CFVL    $DCFVL           HST Item Target
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $DW4NB    $EW4NB           USR Billing Dtl
     C                     ADD  $DZLNA    $EZLNA           Usr Freight Acc
     C                     ADD  $DGQVL    $EGQVL           Usr Accruals Am
     C                     ADD  $DW5NB    $EW5NB           USR Billing Dtl
     C                     ADD  $DCDWG    $ECDWG           USR Weight Accu
     C                     ADD  $DUSVA    $EX8VA           FOB Gross Amoun
     C                     ADD  $DGFQT    $EGFQT           USR Qty Billed
     C                     ADD  $DCMPR    $ECMPR           USR Market Valu
      * USR Weight Accumulated
      * CASE: CUR.USR Weight Accumulated is Entered
     C           $DCDWG    IFNE *ZERO                      *IF
     C                     ADD  $DUSVA    $EORNB           FOB Gross Amoun
     C                     ADD  $DCDWG    $EH4WG           USR Weight Accu
     C                     END                             *FI
     C                     ADD  $DD9PR    $EC0VL           Accrual Amount
     C                     ADD  $DUOVA    $EBKVL           Claim Amount To
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN F4RGNB    WZA001           Item Structure
     C                     Z-ADDF4RGNB    WZA001
     C           *LIKE     DEFN F4RHNB    WZA002           Item Structure
     C                     Z-ADDF4RHNB    WZA002
     C           *LIKE     DEFN F4RINB    WZA003           Item Structure
     C                     Z-ADDF4RINB    WZA003
     C           *LIKE     DEFN F4S5NB    WZA004           Shipped Item Co
     C                     Z-ADDF4S5NB    WZA004
     C           *LIKE     DEFN F4AIC3    WZA005           Company Number
     C                     Z-ADDF4AIC3    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @HSTPEN                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Ignore records not meeting selection criteria
      * USR Product Str Type
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.USR Product Str Type is greater than zero
      *   |- c2    : PAR.USR Product Str Type NE DB1.Item Structure Type
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P3WCNB    IFGT *ZERO                      *IF
     C           P3WCNB    IFNE F4RGNB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * USR Product Str Group
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.USR Product Str Group is Entered
      *   |- c2    : PAR.USR Product Str Group NE DB1.Item Structure Grou
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4Z3NB    IFGT *ZERO                      *IF
     C           P4Z3NB    IFNE F4RHNB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * USR Product Struct Class
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.USR Product Struct Class is Entered
      *   |- c2    : PAR.USR Product Struct Class NE DB1.Item Structure C
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P5L5CD    IFNE *ZERO                      *IF
     C           P5L5CD    IFNE F4RINB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * RTV Print Realization  RT - Company Item  * 
     C                     EXSR SQRVGN
      * Check Sales Flags
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR Active Flag is Record Found
      *   |- c2    : PAR.Print on Realization Rpt is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P7W2ST    IFEQ 'Y'                        *IF
     C           P8X6ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Billing Type       RT - OP Order Types  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELF4JNCD    WL0011    P      Order Type - Sa
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0012    P6OBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Billing Activity Type is Credit or Debit Memo
      *   |- c2    : PAR.USR Sales Realiz. Flag is None
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6OBST    IFEQ '2'                        *IF
     C           P6OBST    OREQ '3'
     C           P7JHST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * USR Sales Realiz. Flag is CM/DM Only
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR Sales Realiz. Flag is CM/DM Only
      *   |- c2    : PAR.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P7JHST    IFEQ 'O'                        *IF
     C           P6OBST    IFEQ '1'                        *IF
     C           P6OBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * Sales Route Code
      * CASE: PAR.Sales Route Code is entered
     C           P7R4CD    IFNE *BLANK                     *IF
     C                     MOVEL*BLANK    WUR4CD           Sales Route Cod
      * RTV Sales Route        RT - Company/Customer  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDF4AIC3    WL0008           Company Number
     C                     Z-ADDF4BKC7    WL0009           Ship To Custome
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    WUR4CD    P      Sales Route Cod
      * CASE: WRK.Sales Route Code is entered
     C           WUR4CD    IFNE *BLANK                     *IF
      * CASE: PAR.Sales Route Code NE WRK.Sales Route Code
     C           P7R4CD    IFNE WUR4CD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Sel Item Code       10/03/03
      * CASE: PAR.Item Code is Entered
     C           P8HGCD    IFNE *ZERO                      *IF
      * CASE: PAR.Item Code NE DB1.Shipped Item Code
     C           P8HGCD    IFNE F4S5NB                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * PK0246 - Whse Type Selector         2/22/02
      * CASE: PAR.Warehouse Type is Fresh or Frozen
     C           P9WPST    IFEQ 'FR'                       *IF
     C           P9WPST    OREQ 'FZ'
      * RTV Warehouse Type     RT - Warehouse  * 
     C                     EXSR SRRVGN
      * CASE: LCL.Warehouse Type NE PAR.Warehouse Type
     C           YL0006    IFNE P9WPST                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Item Structure
     C                     MOVEL*BLANK    W0AL01  1        Item Structure
     C                     MOVEL*BLANK    W0AL02  1        Item Structure
     C                     MOVEL*BLANK    W0AL03  1        Shipped Item Co
     C                     MOVEL*BLANK    W0AL04  1        Company Number
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Item Structure
     C                     MOVEL'Y'       W0AL01  1        Item Structure
     C                     MOVEL'Y'       W0AL02  1        Item Structure
     C                     MOVEL'Y'       W0AL03  1        Shipped Item Co
     C                     MOVEL'Y'       W0AL04  1        Company Number
     C                     ELSE
      * Next record - Detect level breaks
     C           F4RGNB    IFNE WZA001                     Item Structure
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           F4RHNB    IFNE WZA002                     Item Structure
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           F4RINB    IFNE WZA003                     Item Structure
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           F4S5NB    IFNE WZA004                     Shipped Item Co
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           F4AIC3    IFNE WZA005                     Company Number
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Shipped Item Code format
      * RTV Item Info for Rpts RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAIC3    WL0013           Company Number
     C                     Z-ADD$ES5NB    WL0014           Item Code
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0015    $ECJTX    P      Description Lin
     C                     MOVELWL0016    P8ADCD    P      U/M - Primary
     C                     Z-ADDWL0017    P8AWPC           Conversion Fact
     C                     MOVELWL0018    P8LXST    P      Operation Facto
     C                     MOVELWL0019    P8AECD    P      U/M - Second
     C                     Z-ADDWL0020    P8AXPC           Conversion Fact
     C                     MOVELWL0021    P8LYST    P      Operation Facto
     C                     MOVELWL0022    P8AFCD    P      U/M - Third
     C                     MOVELWL0023    P8AICD    P      U/M - Pricing
     C                     Z-ADDWL0024    P8AIWG           Unit Weight
     C                     MOVELWL0025    WULNCD    P      Default Commod
     C                     Z-ADDWL0026    WUBLPR           Market Overage
     C                     Z-ADDWL0027    P8BMPR           Standard Overag
     C                     MOVELWL0028    P8LRCD    P      Commodity Price
     C                     MOVELWL0029    P8U9ST    P      Item Pricing Op
     C                     Z-ADDWL0030    P8CMCO           Item Pricing Co
     C                     MOVELWL0031    P8X6ST    P      Print on Realiz
      * CASE: CUR.USR Weight Accumulatd SUM is *Not Zero
     C           $EH4WG    IFNE *ZERO                      *IF
     C           $EORNB    DIV  $EH4WG    WUBHPC    H      USR Percent Wor
     C           WUBHPC    MULT 100       $ECPPC    H      USR Percent Wor
     C                     END                             *FI
      * FOB Sales and Weight both negative
      * CASE:
      *  - c1ANDc2
      *   |- c1    : CUR.FOB Gross Amount      USR LT WRK.ZERO
      *   |- c2    : CUR.USR Weight Accumulated LT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $EX8VA    IFLT WUW0NB                     *IF
     C           $ECDWG    IFLT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MULT -1        $ECPPC           USR Percent Wor
     C                     END                             *FI
      * Compute Market Price (CWT)
      * CASE: CUR.USR Weight Accumulated NE WRK.ZERO
     C           $ECDWG    IFNE WUW0NB                     *IF
      * Compute Market Price CWT
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.USR Market Value Price
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.USR Weight Accumulated
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $ECMPR    DIV  $ECDWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
      * compute usr market value
      * CASE: market value and weight both negative
      *  - c1 AND c2
      *   |- c1    : CUR.USR Market Value Price LT WRK.ZERO
      *   |- c2    : CUR.USR Weight Accumulated LT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $ECMPR    IFLT WUW0NB                     *IF
     C           $ECDWG    IFLT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           W0WE      MULT -1        $ET2VA    H      USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
     C           W0WE      MULT 1         $ET2VA    H      USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $ET2VA           USR Market Valu
     C                     END                             *FI
      * Compute Standard Overage
      * CASE: WRK.ZERO is Zero
     C           WUW0NB    IFEQ *ZERO                      *IF
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P8ADCD    IFEQ YL0004                     *IF
     C                     Z-ADDP8BMPR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P8AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
     C           P8BMPR    MULT P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P8AECD    IFEQ YL0004                     *IF
     C                     Z-ADDP8BMPR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           P8BMPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           P8BMPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P8AFCD    IFEQ YL0004                     *IF
     C                     Z-ADDP8BMPR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
     C           P8BMPR    MULT P8AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Std Overage
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P8AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     $EUTVA           Standard Overag
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Standard Overage
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           WUAPPR    DIV  P8AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      $EUTVA           Standard Overag
     C                     END                             *FI
     C                     END                             *FI
      * Compute Mkt + Ovr / CWT
     C           $ET2VA    ADD  $EUTVA    $EU7VA           USR Amount Rema
     C           $ECPPC    SUB  $EU7VA    $EXTVA           Variance amount
      * CASE: CUR.USR Weight Accumulated is Entered
     C           $ECDWG    IFNE *ZERO                      *IF
     C           $EZLNA    DIV  $EH4WG    WUBHPC    H      USR Percent Wor
     C           WUBHPC    MULT 100       $ECYNY    H      Usr Abs Freight
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $ECYNY           Usr Abs Freight
     C                     END                             *FI
      * Create outfile if Status is Yes    03/13/02
      * CASE:
      *  - c1AND c2
      *   |- c1    : PAR.Status - Y or N is yes
      *   |- c2    : PAR.USR Detail or Summary is Summary
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P7B8ST    IFEQ 'Y'                        *IF
     C           P7STST    IFEQ 'S'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Last Seq for Key  RT - WF Sales Rz CM/DM Dwnld  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAIC3    WL0037           Company Number
     C                     MOVELYL0003    WL0038    P      Date Range
     C                     MOVELP7JHST    WL0039    P      W012 Sales Real
     C                     Z-ADD*ZERO     WL0040           Item Structure
     C                     MOVEL*BLANK    WL0041           Sales Route Cod
     C                     Z-ADD$ES5NB    WL0042           Shipped Item Co
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0043    YL0005           W012 Sequence N
     C                     ADD  1         YL0005           W012 Sequence N
      * Crt W012 Sls Rz CM/DM CR - WF Sales Rz CM/DM Dwnld  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAIC3    WL0044           Company Number
     C                     MOVELYL0003    WL0045    P      Date Range
     C                     MOVELP7JHST    WL0046    P      W012 Sales Real
     C                     Z-ADD*ZERO     WL0047           Item Structure
     C                     MOVEL*BLANK    WL0048           Sales Route Cod
     C                     Z-ADD$ES5NB    WL0049           Shipped Item Co
     C                     Z-ADDYL0005    WL0050           W012 Sequence N
     C                     Z-ADD*ZERO     WL0051           Ship To Custome
     C                     MOVEL*BLANK    WL0052           W012 Ship to Na
     C                     MOVEL*BLANK    WL0053           Ship To State C
     C                     Z-ADD*ZERO     WL0054           Invoice Number
     C                     Z-ADD*ZERO     WL0055           Actual Shipped
     C                     Z-ADD$ECPPC    WL0056           W012 Fob Price/
     C                     Z-ADD$EU7VA    WL0057           W012 Market & O
     C                     Z-ADD$EXTVA    WL0058           W012 Variance A
     C                     Z-ADD$EW5NB    WL0059           W012 Billing De
     C                     Z-ADD$EZLNA    WL0060           W012 Freight Ab
     C                     Z-ADD$EGQVL    WL0061           W012 Accrual Am
     C                     Z-ADD$EW4NB    WL0062           W012 Billing Dt
     C                     Z-ADD$ECDWG    WL0063           W012 Shipped Ne
     C                     Z-ADD$ECYNY    WL0064           W012 Abs Frt Ra
     C                     Z-ADD$EGFQT    WL0065           W012 Quantity B
     C                     MOVEL*BLANK    WL0066           Order Header Re
     C                     MOVEL*BLANK    WL0067           SH Price Type
     C                     Z-ADD$EBKVL    WL0068           Commission Amou
     C                     Z-ADD$EC0VL    WL0069           NonLedgrd TrdFn
     C                     Z-ADD*ZERO     WL0070           Order Sequence
     C                     EXSR SPCRRC
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Shipped Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $ES5NB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$ES5NB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VES5NB           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VES5NB           CD7 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           P7STST    IFEQ 'S'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$EKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
      * USER: Process after print of Shipped Item Code format
     C                     ADD  $EW4NB    $FW4NB           USR Billing Dtl
     C                     ADD  $EZLNA    $FZLNA           Usr Freight Acc
     C                     ADD  $EGQVL    $FGQVL           Usr Accruals Am
     C                     ADD  $EW5NB    $FW5NB           USR Billing Dtl
     C                     ADD  $ECDWG    $FCDWG           USR Weight Accu
     C                     ADD  $EGFQT    $FGFQT           USR Qty Billed
     C                     ADD  $EBKVL    $FBKVL           Claim Amount To
     C                     ADD  $EC0VL    $FC0VL           Accrual Amount
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Structure Class Code format
     C                     MOVEL*BLANK    $FXLTX           Text USR 6
     C                     MOVEL'Class'   $FXLTX           Text USR 6
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 1
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$FKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
      * USER: Process after print of Item Structure Class Code format
     C                     ADD  $FW4NB    $GW4NB           USR Billing Dtl
     C                     ADD  $FZLNA    $GZLNA           Usr Freight Acc
     C                     ADD  $FGQVL    $GGQVL           Usr Accruals Am
     C                     ADD  $FW5NB    $GW5NB           USR Billing Dtl
     C                     ADD  $FCDWG    $GCDWG           USR Weight Accu
     C                     ADD  $FGFQT    $GGFQT           USR Qty Billed
     C                     ADD  $FC0VL    $GC0VL           Accrual Amount
     C                     ADD  $FBKVL    $GBKVL           Claim Amount To
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Structure Group Code format
     C                     MOVEL'Group'   $GY7TX           Text USR 5
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 1
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$GKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
      * USER: Process after print of Item Structure Group Code format
     C                     ADD  $GW4NB    $HW4NB           USR Billing Dtl
     C                     ADD  $GZLNA    $HZLNA           Usr Freight Acc
     C                     ADD  $GGQVL    $HGQVL           Usr Accruals Am
     C                     ADD  $GW5NB    $HW5NB           USR Billing Dtl
     C                     ADD  $GCDWG    $HCDWG           USR Weight Accu
     C                     ADD  $GGFQT    $HGFQT           USR Qty Billed
     C                     ADD  $GC0VL    $HC0VL           Accrual Amount
     C                     ADD  $GBKVL    $HBKVL           Claim Amount To
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Prod Structure Type Code format
     C                     MOVEL'Type'    $HZ7TX           Text USR 4
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$HKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
      * USER: Process after print of Prod Structure Type Code format
     C                     ADD  $HW4NB    $IW4NB           USR Billing Dtl
     C                     ADD  $HZLNA    $IZLNA           Usr Freight Acc
     C                     ADD  $HGQVL    $IGQVL           Usr Accruals Am
     C                     ADD  $HW5NB    $IW5NB           USR Billing Dtl
     C                     ADD  $HGFQT    $IGFQT           USR Qty Billed
     C                     ADD  $HCDWG    $ICDWG           USR Weight Accu
     C                     ADD  $HC0VL    $IC0VL           Accrual Amount
     C                     ADD  $HBKVL    $IBKVL           Claim Amount To
     C                     END
      *
     C           W0EOFA    IFEQ '1'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 1
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$IFINTTL
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of PRT Sls by Itm Struc  PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of PRT Sls by Itm Struc  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * USER: On print of first page format
     C                     MOVEL'N'       WUTAST           First Time Flag
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Item Structure Type Code of PRT Sls by Itm Struc  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * USER: On print of Prod Structure Type Code format
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print Item Structure Group Code of PRT Sls by Itm Struc  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * USER: On print of Item Structure Group Code format
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Item Structure Class Code of PRT Sls by Itm Struc  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Structure Class Code format
     C                     MOVEL*BLANK    $CY7TX           Text USR 5
     C                     MOVEL*BLANK    $CXLTX           Text USR 6
     C                     MOVEL*BLANK    $CDCTX           Item Structure
     C                     MOVEL*BLANK    $CDDTX           Item Structure
     C                     MOVEL'N'       WUQ1ST           Status Flag 1
     C                     MOVEL'N'       WUQ2ST           Status Flag 2
      * CASE: CUR.Item Structure Type Code NE PAR.Item Structure Type Cod
     C           $CRGNB    IFNE P8RGNB                     *IF
     C                     Z-ADD$CRGNB    P8RGNB           Item Structure
      * RTV  Description       RT - Item Structure Type  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CRGNB    WL0001           Item Structure
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0001    $CRGNB           Item Structure
     C                     MOVELWL0002    $CDCTX    P      Item Structure
     C                     MOVEL'Type:'   $CY7TX           Text USR 5
     C                     MOVEL'Y'       WUQ1ST           Status Flag 1
     C                     END                             *FI
      * CASE: CUR.Item Structure Group Code NE PAR.Item Structure Group C
     C           $CRHNB    IFNE P8RHNB                     *IF
     C                     Z-ADD$CRHNB    P8RHNB           Item Structure
      * Rtv Group Description  RT - Item Structure Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CRHNB    WL0003           Item Structure
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0004    WURGNB           Item Structure
     C                     MOVELWL0005    $CDDTX    P      Item Structure
     C                     MOVEL'Group:'  $CXLTX           Text USR 6
     C                     MOVEL'Y'       WUQ2ST           Status Flag 2
     C                     END                             *FI
      * Rtv Item Class Desc    RT - Item Structure Class  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CRINB    WL0006           Item Structure
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0007    $CDETX    P      Item Structure
     C                     MOVEL' Class:' $CY8TX           Text USR 7
     C           W0PFM     IFEQ 'Y'
     C                     MOVEL'0'       *IN79
     C           WUQ1ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WUQ2ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Shipped Item Code of PRT Sls by Itm Struc  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Company Number of PRT Sls by Itm Struc  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of PRT Sls by Itm Struc  PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * RTV Sales Route        RT - Company/Customer  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0008           Company Number
     C                     Z-ADD$DBKC7    WL0009           Ship To Custome
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    $DR4CD    P      Sales Route Cod
      * RTV Billing Type       RT - OP Order Types  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELF4JNCD    WL0011    P      Order Type - Sa
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0012    P6OBST    P      Billing Activit
      * RTV Item Info for Rpts RT - Company/Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDF4AIC3    WL0013           Company Number
     C                     Z-ADDF4S5NB    WL0014           Item Code
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0015    WUAVNA    P      Description Lin
     C                     MOVELWL0016    P8ADCD    P      U/M - Primary
     C                     Z-ADDWL0017    P8AWPC           Conversion Fact
     C                     MOVELWL0018    P8LXST    P      Operation Facto
     C                     MOVELWL0019    P8AECD    P      U/M - Second
     C                     Z-ADDWL0020    P8AXPC           Conversion Fact
     C                     MOVELWL0021    P8LYST    P      Operation Facto
     C                     MOVELWL0022    P8AFCD    P      U/M - Third
     C                     MOVELWL0023    P8AICD    P      U/M - Pricing
     C                     Z-ADDWL0024    P8AIWG           Unit Weight
     C                     MOVELWL0025    WULQCD    P      Default Commod
     C                     Z-ADDWL0026    WUBLPR           Market Overage
     C                     Z-ADDWL0027    P8BMPR           Standard Overag
     C                     MOVELWL0028    P8LRCD    P      Commodity Price
     C                     MOVELWL0029    P8U9ST    P      Item Pricing Op
     C                     Z-ADDWL0030    P8CMCO           Item Pricing Co
     C                     MOVELWL0031    P8X6ST    P      Print on Realiz
      * FOB amount and weight
      * CASE: PAR.Billing Activity Type is Invoice
     C           P6OBST    IFEQ '1'                        *IF
      * CASE: DB1.Affect Sales Doll Status is no
     C           F4ANST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $DUSVA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $DW4NB           USR Billing Dtl
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDF4USVA    $DW4NB           USR Billing Dtl
     C                     END                             *FI
      * CASE: DB1.Affect Sales Pnds Status is no
     C           F4VAST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $DCDWG           USR Weight Accu
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDF4BYWG    $DCDWG           USR Weight Accu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Credit or Debit Memo
      * CASE: PAR.USR Sales Realiz. Flag is Process by Flags
     C           P7JHST    IFEQ 'P'                        *IF
      * CASE: DB1.Affect Sales Doll Status is no
     C           F4ANST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $DUSVA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $DW4NB           USR Billing Dtl
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDF4USVA    $DW4NB           USR Billing Dtl
     C                     END                             *FI
      * CASE: DB1.Affect Sales Pnds Status is no
     C           F4VAST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $DCDWG           USR Weight Accu
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDF4BYWG    $DCDWG           USR Weight Accu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.USR Sales Realiz. Flag is All
      *   |- c2    : PAR.USR Sales Realiz. Flag is CM/DM Only
      *   '-
     C           P7JHST    IFEQ 'A'                        *IF
     C           P7JHST    OREQ 'O'                        *OR
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.Affect Sales Doll Status is no
      *   |- c2    : DB1.Affect Sales Pnds Status is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           F4ANST    IFEQ 'N'                        *IF
     C           F4VAST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADD*ZERO     $DUSVA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $DW4NB           USR Billing Dtl
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDF4USVA    $DW4NB           USR Billing Dtl
     C                     END                             *FI
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.Affect Sales Pnds Status is no
      *   |- c2    : DB1.Affect Sales Doll Status is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           F4VAST    IFEQ 'N'                        *IF
     C           F4ANST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADD*ZERO     $DCDWG           USR Weight Accu
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDF4BYWG    $DCDWG           USR Weight Accu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * reverse sign if credit memo and positive
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Billing Activity Type is Credit Memo
      *   |- c2    : CUR.USR Weight Accumulated is Greater Than Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6OBST    IFEQ '2'                        *IF
     C           $DCDWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           *ZERO     SUB  $DCDWG    $DCDWG           USR Weight Accu
     C                     END                             *FI
      * Market Code
      * CASE: PAR.Billing Activity Type is Invoice
     C           P6OBST    IFEQ '1'                        *IF
      * CASE: DB1.Affect Sales Doll Status is no
     C           F4ANST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $DCMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute market price
      * CASE: Pricing U/M on history is currently a valid U/M
      *  - c1 OR c2 OR c3
      *   |- c1    : DB1.U/M - Base Price EQ PAR.U/M - Primary
      *   |- c2    : DB1.U/M - Base Price EQ PAR.U/M - Second
      *   |- c3    : DB1.U/M - Base Price EQ PAR.U/M - Third
      *   '-
     C           F4CRCD    IFEQ P8ADCD                     *IF
     C           F4CRCD    OREQ P8AECD                     *OR
     C           F4CRCD    OREQ P8AFCD                     *OR
      * subtract 1 from actual shipped date for starting point
      * WRK.Actual Shipped Date = DB1.Actual Shipped Date + CON.-1 *DAYS
     C           F4GNDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WUGNDT
     C                     ELSE
     C           XDINDT    SUB  1000000   WUGNDT
     C                     END
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWULQCD    WL0032    P      Commodity Marke
     C                     MOVELP8LRCD    WL0033    P      Commodity Price
     C                     Z-ADDWUGNDT    WL0034           Market Price Da
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0035    WUA5PR           Commodity Marke
     C                     Z-ADDWL0036    WUE7DT           USR Date Priced
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P8ADCD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P8AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P8AECD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P8AFCD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P8AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Market Price
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P8AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     $DCMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Market Prc/LB
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CUR.USR Weight Accumulated
     C           WUAPPR    DIV  P8AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT $DCDWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      $DCMPR           USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DCMPR           USR Market Valu
     C                     END                             *FI
      * reverse sign if credit memo and positive
      * CASE: credit memo and positive
      *  - c1 AND c2
      *   |- c1    : PAR.Billing Activity Type is Credit Memo
      *   |- c2    : CUR.USR Market Value Price GT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6OBST    IFEQ '2'                        *IF
     C           $DCMPR    IFGT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           *ZERO     SUB  $DCMPR    $DCMPR           USR Market Valu
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Credit or Debit memo
      * CASE: PAR.USR Sales Realiz. Flag is Process by Flags
     C           P7JHST    IFEQ 'P'                        *IF
      * CASE: DB1.Affect Sales Doll Status is no
     C           F4ANST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $DCMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute market price
      * CASE: Pricing U/M on history is currently a valid U/M
      *  - c1 OR c2 OR c3
      *   |- c1    : DB1.U/M - Base Price EQ PAR.U/M - Primary
      *   |- c2    : DB1.U/M - Base Price EQ PAR.U/M - Second
      *   |- c3    : DB1.U/M - Base Price EQ PAR.U/M - Third
      *   '-
     C           F4CRCD    IFEQ P8ADCD                     *IF
     C           F4CRCD    OREQ P8AECD                     *OR
     C           F4CRCD    OREQ P8AFCD                     *OR
      * subtract 1 from actual shipped date for starting point
      * WRK.Actual Shipped Date = DB1.Actual Shipped Date + CON.-1 *DAYS
     C           F4GNDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WUGNDT
     C                     ELSE
     C           XDINDT    SUB  1000000   WUGNDT
     C                     END
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWULQCD    WL0032    P      Commodity Marke
     C                     MOVELP8LRCD    WL0033    P      Commodity Price
     C                     Z-ADDWUGNDT    WL0034           Market Price Da
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0035    WUA5PR           Commodity Marke
     C                     Z-ADDWL0036    WUE7DT           USR Date Priced
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P8ADCD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P8AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P8AECD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P8AFCD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P8AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Market Price
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P8AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     $DCMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Market Prc/LB
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CUR.USR Weight Accumulated
     C           WUAPPR    DIV  P8AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT $DCDWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      $DCMPR           USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DCMPR           USR Market Valu
     C                     END                             *FI
      * reverse sign if credit memo and positive
      * CASE: credit memo and positive
      *  - c1 AND c2
      *   |- c1    : PAR.Billing Activity Type is Credit Memo
      *   |- c2    : CUR.USR Market Value Price GT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6OBST    IFEQ '2'                        *IF
     C           $DCMPR    IFGT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           *ZERO     SUB  $DCMPR    $DCMPR           USR Market Valu
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.USR Sales Realiz. Flag is All
      *   |- c2    : PAR.USR Sales Realiz. Flag is CM/DM Only
      *   '-
     C           P7JHST    IFEQ 'A'                        *IF
     C           P7JHST    OREQ 'O'                        *OR
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.Affect Sales Doll Status is no
      *   |- c2    : DB1.Affect Sales Pnds Status is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           F4ANST    IFEQ 'N'                        *IF
     C           F4VAST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADD*ZERO     $DCMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute market price
      * CASE: Pricing U/M on history is currently a valid U/M
      *  - c1 OR c2 OR c3
      *   |- c1    : DB1.U/M - Base Price EQ PAR.U/M - Primary
      *   |- c2    : DB1.U/M - Base Price EQ PAR.U/M - Second
      *   |- c3    : DB1.U/M - Base Price EQ PAR.U/M - Third
      *   '-
     C           F4CRCD    IFEQ P8ADCD                     *IF
     C           F4CRCD    OREQ P8AECD                     *OR
     C           F4CRCD    OREQ P8AFCD                     *OR
      * subtract 1 from actual shipped date for starting point
      * WRK.Actual Shipped Date = DB1.Actual Shipped Date + CON.-1 *DAYS
     C           F4GNDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WUGNDT
     C                     ELSE
     C           XDINDT    SUB  1000000   WUGNDT
     C                     END
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWULQCD    WL0032    P      Commodity Marke
     C                     MOVELP8LRCD    WL0033    P      Commodity Price
     C                     Z-ADDWUGNDT    WL0034           Market Price Da
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0035    WUA5PR           Commodity Marke
     C                     Z-ADDWL0036    WUE7DT           USR Date Priced
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P8ADCD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P8AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P8AECD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P8AFCD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P8AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Market Price
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P8AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     $DCMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Market Prc/LB
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CUR.USR Weight Accumulated
     C           WUAPPR    DIV  P8AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT $DCDWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      $DCMPR           USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DCMPR           USR Market Valu
     C                     END                             *FI
      * reverse sign if credit memo and positive
      * CASE: credit memo and positive
      *  - c1 AND c2
      *   |- c1    : PAR.Billing Activity Type is Credit Memo
      *   |- c2    : CUR.USR Market Value Price GT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6OBST    IFEQ '2'                        *IF
     C           $DCMPR    IFGT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           *ZERO     SUB  $DCMPR    $DCMPR           USR Market Valu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVELF4CRCD    YL0004           U/M - Base Pric
     C                     Z-ADDF4ULVA    $DZLNA           Usr Freight Acc
     C                     Z-ADDF4UNVA    $DGQVL           Usr Accruals Am
     C                     Z-ADDF4KDVA    $DW5NB           USR Billing Dtl
     C                     Z-ADDF4EXQT    $DGFQT           USR Qty Billed
      * 7/10/2008 BLG E00174 Reverse sign on qty if credit memo and posit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Billing Activity Type is Credit Memo
      *   |- c2    : CUR.USR Qty Billed is gt zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6OBST    IFEQ '2'                        *IF
     C           $DGFQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           *ZERO     SUB  $DGFQT    $DGFQT           USR Qty Billed
     C                     END                             *FI
     C                     Z-ADD*ZERO     $DCPPC           USR Percent Wor
     C                     Z-ADD*ZERO     $DU7VA           USR Amount Rema
      * USR Weight Accumulated
      * CASE: CUR.USR Weight Accumulated is Entered
     C           $DCDWG    IFNE *ZERO                      *IF
     C           $DUSVA    DIV  $DCDWG    WUBHPC    H      USR Percent Wor
     C           WUBHPC    MULT 100       $DCPPC    H      USR Percent Wor
     C                     END                             *FI
      * Compute Market Price (CWT)
      * CASE: CUR.USR Weight Accumulated NE WRK.ZERO
     C           $DCDWG    IFNE WUW0NB                     *IF
      * Compute Market Price CWT
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.USR Market Value Price
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.USR Weight Accumulated
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $DCMPR    DIV  $DCDWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
      * compute usr market value
      * CASE: market value and weight both negative
      *  - c1 AND c2
      *   |- c1    : CUR.USR Market Value Price LT WRK.ZERO
      *   |- c2    : CUR.USR Weight Accumulated LT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $DCMPR    IFLT WUW0NB                     *IF
     C           $DCDWG    IFLT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           W0WE      MULT -1        WUT2VA    H      USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
     C           W0WE      MULT 1         WUT2VA    H      USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WUT2VA           USR Market Valu
     C                     END                             *FI
      * Compute Standard Overage
      * CASE: WRK.ZERO is Zero
     C           WUW0NB    IFEQ *ZERO                      *IF
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P8ADCD    IFEQ YL0004                     *IF
     C                     Z-ADDP8BMPR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P8AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
     C           P8BMPR    MULT P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P8AECD    IFEQ YL0004                     *IF
     C                     Z-ADDP8BMPR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           P8BMPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           P8BMPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P8AFCD    IFEQ YL0004                     *IF
     C                     Z-ADDP8BMPR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
     C           P8BMPR    MULT P8AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Std Overage
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P8AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     $DUTVA           Standard Overag
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Standard Overage
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           WUAPPR    DIV  P8AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      $DUTVA           Standard Overag
     C                     END                             *FI
     C                     END                             *FI
      * USR Weight Accumulated
      * CASE: CUR.USR Weight Accumulated is Entered
     C           $DCDWG    IFNE *ZERO                      *IF
     C           $DUTVA    ADD  WUT2VA    $DU7VA           USR Amount Rema
     C                     END                             *FI
     C           $DCPPC    SUB  $DU7VA    $DXTVA           Variance amount
     C                     MOVELF4BRTX    $DJUNA           USR Description
      * Print country or state 2/8/06 RMC
      * CASE: CUR.Ship To State Code is International Accounts
     C           $DDBCD    IFEQ '.'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $DUMCD           Export Country
     C                     MOVEL$DDBCD    $DUMCD           Export Country
     C                     END                             *FI
      * USR Detail or Summary
      * CASE: PAR.USR Detail or Summary is Summary
     C           P7STST    IFEQ 'S'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C                     Z-ADD$DD9PR    $DRVA1           Revaluation Amo
      * Create outfile if Status is Yes     8/16/00
      * CASE:
      *  - c1AND c2
      *   |- c1    : PAR.Status - Y or N is yes
      *   |- c2    : PAR.USR Detail or Summary is Detail
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P7B8ST    IFEQ 'Y'                        *IF
     C           P7STST    IFEQ 'D'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Last Seq for Key  RT - WF Sales Rz CM/DM Dwnld  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0037           Company Number
     C                     MOVELYL0003    WL0038    P      Date Range
     C                     MOVELP7JHST    WL0039    P      W012 Sales Real
     C                     Z-ADD$DRHNB    WL0040           Item Structure
     C                     MOVEL$DR4CD    WL0041    P      Sales Route Cod
     C                     Z-ADD$DS5NB    WL0042           Shipped Item Co
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0043    YL0005           W012 Sequence N
     C                     ADD  1         YL0005           W012 Sequence N
      * Rtv Price Type        RT - Order Detail  * 
     C                     EXSR SORVGN
      * ** Add order sequence number to make line items unique   C000642
      * Crt W012 Sls Rz CM/DM CR - WF Sales Rz CM/DM Dwnld  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0044           Company Number
     C                     MOVELYL0003    WL0045    P      Date Range
     C                     MOVELP7JHST    WL0046    P      W012 Sales Real
     C                     Z-ADD$DRHNB    WL0047           Item Structure
     C                     MOVEL$DR4CD    WL0048    P      Sales Route Cod
     C                     Z-ADD$DS5NB    WL0049           Shipped Item Co
     C                     Z-ADDYL0005    WL0050           W012 Sequence N
     C                     Z-ADD$DBKC7    WL0051           Ship To Custome
     C                     MOVEL$DJUNA    WL0052    P      W012 Ship to Na
     C                     MOVEL$DDBCD    WL0053    P      Ship To State C
     C                     Z-ADD$DCONB    WL0054           Invoice Number
     C                     Z-ADD$DGNDT    WL0055           Actual Shipped
     C                     Z-ADD$DCPPC    WL0056           W012 Fob Price/
     C                     Z-ADD$DU7VA    WL0057           W012 Market & O
     C                     Z-ADD$DXTVA    WL0058           W012 Variance A
     C                     Z-ADD$DW5NB    WL0059           W012 Billing De
     C                     Z-ADD$DZLNA    WL0060           W012 Freight Ab
     C                     Z-ADD$DGQVL    WL0061           W012 Accrual Am
     C                     Z-ADD$DW4NB    WL0062           W012 Billing Dt
     C                     Z-ADD$DCDWG    WL0063           W012 Shipped Ne
     C                     Z-ADD$DTBNB    WL0064           W012 Abs Frt Ra
     C                     Z-ADD$DGFQT    WL0065           W012 Quantity B
     C                     MOVEL$DRLCD    WL0066    P      Order Header Re
     C                     MOVEL$DJXAA    WL0067    P      SH Price Type
     C                     Z-ADD$DUOVA    WL0068           Commission Amou
     C                     Z-ADD$DD9PR    WL0069           NonLedgrd TrdFn
     C                     Z-ADD$DDPNB    WL0070           Order Sequence
     C                     EXSR SPCRRC
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Shipped Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $DS5NB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$DS5NB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VDS5NB           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDS5NB           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Ship To Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $DBKC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$DBKC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VDBKC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDBKC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $DC4NB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$DC4NB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VDC4NB           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDC4NB           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $DAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$DAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VDAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Actual Shipped Date to display format
      * Convert date
     C           1000000   ADD  $DGNDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDGNDT
     C                     MOVEL'0'       *IN79
     C           P9UFL2    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of PRT Sls by Itm Struc  PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Type Code of PRT Sls by Itm Struc  PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Group Code of PRT Sls by Itm Struc  PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Class Code of PRT Sls by Itm Struc  PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Shipped Item Code of PRT Sls by Itm Struc  PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Company Number of PRT Sls by Itm Struc  PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT Sls by Itm Struc  PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
      * USER: Process top of page
      * TOP = PAR By name
     C                     Z-ADDP8AIC3    $BAIC3           Company Number
     C                     Z-ADDP3WCNB    $BWCNB           USR Product Str
     C                     MOVELP9WPST    $BWPST           Warehouse Type
     C                     Z-ADDP1BDDT    $BBDDT           USR From Date
     C                     Z-ADDP2FDDT    $BFDDT           USR To Date
     C                     Z-ADDP4Z3NB    $BZ3NB           USR Product Str
     C                     MOVELP9AJCD    $BAJCD           Warehouse Code
     C                     MOVELP7STES    $BSTES           Export Sales
     C                     Z-ADDP5L5CD    $BL5CD           USR Product Str
     C                     MOVELP7R4CD    $BR4CD           Sales Route Cod
     C                     Z-ADDP8HGCD    $BHGCD           Item Code
     C                     MOVELP7JHST    $BJHST           USR Sales Reali
      * CASE: TOP.Company Number is not equal to zero
     C           $BAIC3    IFNE *ZERO                      *IF
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SCRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUAGTX           USR Company Nam
     C                     MOVEL'All'     WUAGTX           USR Company Nam
     C                     END                             *FI
     C                     MOVELWUAGTX    $BAGTX           USR Company Nam
     C                     Z-ADDP3WCNB    $BWCNB           USR Product Str
     C                     Z-ADDP4Z3NB    $BZ3NB           USR Product Str
     C                     Z-ADDP5L5CD    $BL5CD           USR Product Str
      * RTV  Description       RT - Item Structure Type  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BWCNB    WL0001           Item Structure
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0001    $BWCNB           Item Structure
     C                     MOVELWL0002    $BDCTX    P      Item Structure
      * Rtv Group Description  RT - Item Structure Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BZ3NB    WL0003           Item Structure
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0004    WURGNB           Item Structure
     C                     MOVELWL0005    $BDDTX    P      Item Structure
      * Rtv Item Class Desc    RT - Item Structure Class  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BL5CD    WL0006           Item Structure
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0007    $BDETX    P      Item Structure
      * TOP.USR Description - 15 = Condition name of TOP.USR Sales Realiz
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1404904   Y2LSNO  70       List number
     C                     PARM $BJHST    W0INVL 25        USR Sales Reali
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BJUNA    PARM           W0CNNM 25        USR Description
      *
     C                     MOVELP7W2ST    $BD4ST           USR Flag 1
      * TOP.Condition Desc. 1  USR = Condition name of TOP.Export Sales
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1419961   Y2LSNO  70       List number
     C                     PARM $BSTES    W0INVL 25        Export Sales
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHLTX    PARM           W0CNNM 25        Condition Desc.
      *
      * Sales Route Code
      * CASE: PAR.Sales Route Code is not entered
     C           P7R4CD    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $BMZNA           Sales Route Des
     C                     MOVEL'All'     $BMZNA           Sales Route Des
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Description        RT - Sales Route  * 
     C                     EXSR SGRVGN
     C                     END                             *FI
     C                     MOVEL*BLANK    YL0001           Date From Alpha
     C                     MOVELP1BDDT    YL0001           Date From Alpha
     C                     MOVEL*BLANK    YL0002           Date To Alpha
     C                     MOVELP2FDDT    YL0002           Date To Alpha
     C                     Z-ADD*ZERO     ZQ      50
     C           YL0001    CAT  YL0002:ZQ YL0003    P      Date Range
      * Retrieve warehouse type if entered
      * CASE: PAR.Warehouse Type NE WRK.BLANK
     C           P9WPST    IFNE WUGSTX                     *IF
      * TOP.Condition Desc. 3  USR = Condition name of TOP.Warehouse Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1275008   Y2LSNO  70       List number
     C                     PARM $BWPST    W0INVL 25        Warehouse Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHNTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $BHNTX           Condition Desc.
     C                     MOVEL'*All'    $BHNTX           Condition Desc.
     C                     END                             *FI
      * Retrieve whse description if entered
      * CASE: PAR.Warehouse Code NE WRK.BLANK
     C           P9AJCD    IFNE WUGSTX                     *IF
      * RTV Warehouse          RT - Warehouse  * 
     C                     EXSR SHRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $BF8NA           Warehouse Descr
     C                     MOVEL'*All'    $BF8NA           Warehouse Descr
     C                     END                             *FI
      * Rtv Item Description   RT - Company Item  * 
     C                     EXSR SIRVGN
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert USR From Date to display format
      * Convert date
     C           1000000   ADD  $BBDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBBDDT
      * Convert USR To Date to display format
      * Convert date
     C           1000000   ADD  $BFDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBFDDT
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $BHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$BHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VBHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBHGCD           CD7 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           WUTAST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WUGGST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           P9UFL2    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'OMS'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD$BAIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAGTX           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    WUAGTX           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV  Description       RT - Item Structure Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           E8RGNB           Item Structure
      * Setup key
     C                     Z-ADDWL0001    E8RGNB           Item Structure
      * Establish starting position
     C           KRSSD     CHAIN@E8REBB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1166' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0001           Item Structure
     C                     MOVEL*BLANK    WL0002           Item Structure
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     Z-ADDE8RGNB    WL0001           Item Structure
     C                     MOVELE8DCTX    WL0002           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Group Description  RT - Item Structure Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           E9RHNB           Item Structure
      * Setup key
     C                     Z-ADDWL0003    E9RHNB           Item Structure
      * Establish starting position
     C           KRSSE     CHAIN@E9REA8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1168' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0004           Item Structure
     C                     MOVEL*BLANK    WL0005           Item Structure
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDE9RGNB    WL0004           Item Structure
     C                     MOVELE9DDTX    WL0005           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Item Class Desc    RT - Item Structure Class  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           FARINB           Item Structure
      * Setup key
     C                     Z-ADDWL0006    FARINB           Item Structure
      * Establish starting position
     C           KRSSF     CHAIN@FAREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1170' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0007           Item Structure
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFADETX    WL0007           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Description        RT - Sales Route  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           JER4CD           Sales Route Cod
      * Setup key
     C                     MOVEL$BR4CD    JER4CD           Sales Route Cod
      * Establish starting position
     C           KRSSG     CHAIN@JEREWF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1800' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BMZNA           Sales Route Des
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELJEMZNA    $BMZNA           Sales Route Des
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Warehouse          RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL$BAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSH     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BF8NA           Warehouse Descr
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELADF8NA    $BF8NA           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Item Description   RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BZHGCD    WQSI01           Item Code
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Item Code
      * Setup key
     C                     Z-ADD$BHGCD    WQSI01           Item Code
      * Establish starting position
     C           KRSSI     SETLL@BZRED0                    *
     C           KRSSI     READE@BZRED0                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BGENA           Description Lin
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    $BGENA           Description Lin
     C           KRSSI     READE@BZRED0                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Sales Route        RT - Company/Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           EOAIC3           Company Number
     C                     KFLD           EOBKC7           Ship To Custome
      * Setup key
     C                     Z-ADDWL0008    EOAIC3           Company Number
     C                     Z-ADDWL0009    EOBKC7           Ship To Custome
      * Establish starting position
     C           KRSSJ     CHAIN@EOREXM              90    *
      * Data record not found
     C   90                MOVEL'USR1007' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELEOR4CD    WL0010           Sales Route Cod
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * RTV Billing Type       RT - OP Order Types  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           EXJNCD           Order Type - Sa
      * Setup key
     C                     MOVELWL0011    EXJNCD           Order Type - Sa
      * Establish starting position
     C           KRSSK     CHAIN@EXRETY              90    *
      * Data record not found
     C   90                MOVEL'USR1063' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELEXOBST    WL0012           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * RTV Item Info for Rpts RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WAHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0013    WAAIC3           Company Number
     C                     Z-ADDWL0014    WAHGCD           Item Code
      * Establish starting position
     C           KRSSL     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0015           Description Lin
     C                     MOVEL*BLANK    WL0016           U/M - Primary
     C                     Z-ADD*ZERO     WL0017           Conversion Fact
     C                     MOVEL*BLANK    WL0018           Operation Facto
     C                     MOVEL*BLANK    WL0019           U/M - Second
     C                     Z-ADD*ZERO     WL0020           Conversion Fact
     C                     MOVEL*BLANK    WL0021           Operation Facto
     C                     MOVEL*BLANK    WL0022           U/M - Third
     C                     MOVEL*BLANK    WL0023           U/M - Pricing
     C                     Z-ADD*ZERO     WL0024           Unit Weight
     C                     MOVEL*BLANK    WL0025           Default Commod
     C                     Z-ADD*ZERO     WL0026           Market Overage
     C                     Z-ADD*ZERO     WL0027           Standard Overag
     C                     MOVEL*BLANK    WL0028           Commodity Price
     C                     MOVEL*BLANK    WL0029           Item Pricing Op
     C                     Z-ADD*ZERO     WL0030           Item Pricing Co
     C                     MOVEL*BLANK    WL0031           Print on Realiz
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAAVNA    WL0015           Description Lin
     C                     MOVELWAADCD    WL0016           U/M - Primary
     C                     Z-ADDWAAWPC    WL0017           Conversion Fact
     C                     MOVELWALXST    WL0018           Operation Facto
     C                     MOVELWAAECD    WL0019           U/M - Second
     C                     Z-ADDWAAXPC    WL0020           Conversion Fact
     C                     MOVELWALYST    WL0021           Operation Facto
     C                     MOVELWAAFCD    WL0022           U/M - Third
     C                     MOVELWAAICD    WL0023           U/M - Pricing
     C                     Z-ADDWAAIWG    WL0024           Unit Weight
     C                     MOVELWALNCD    WL0025           Default Commod
     C                     Z-ADDWABLPR    WL0026           Market Overage
     C                     Z-ADDWABMPR    WL0027           Standard Overag
     C                     MOVELWALRCD    WL0028           Commodity Price
     C                     MOVELWAU9ST    WL0029           Item Pricing Op
     C                     Z-ADDWACMCO    WL0030           Item Pricing Co
     C                     MOVELWAX6ST    WL0031           Print on Realiz
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN F0LQCD    WQSM01           Commodity Marke
     C           *LIKE     DEFN F0LRCD    WQSM02           Commodity Price
      * Define keylist
     C           KPSSM     KLIST
     C                     KFLD           WQSM01           Commodity Marke
     C                     KFLD           WQSM02           Commodity Price
     C                     KFLD           F0EQDT           Market Price Da
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           WQSM01           Commodity Marke
     C                     KFLD           WQSM02           Commodity Price
      * Setup key
     C                     MOVELWL0032    WQSM01           Commodity Marke
     C                     MOVELWL0033    WQSM02           Commodity Price
     C                     Z-ADDWL0034    F0EQDT           Market Price Da
      * Establish starting position
     C           KPSSM     SETLL@F0CPEP                    *
     C           KRSSM     READE@F0CPEP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1222' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0035           Commodity Marke
     C                     Z-ADD*ZERO     WL0036           USR Date Priced
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDF0A5PR    WL0035           Commodity Marke
     C                     Z-ADDF0EQDT    WL0036           USR Date Priced
     C                     GOTO SMEXIT                     *QUIT
     C           KRSSM     READE@F0CPEP                  90*
     C                     ENDDO
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Last Seq for Key  RT - WF Sales Rz CM/DM Dwnld  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1AIC3    WQSN01           Company Number
     C           *LIKE     DEFN A1NCNX    WQSN02           Date Range
     C           *LIKE     DEFN A1I6SX    WQSN03           W012 Sales Real
     C           *LIKE     DEFN A1RHNB    WQSN04           Item Structure
     C           *LIKE     DEFN A1R4CD    WQSN05           Sales Route Cod
     C           *LIKE     DEFN A1S5NB    WQSN06           Shipped Item Co
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WQSN01           Company Number
     C                     KFLD           WQSN02           Date Range
     C                     KFLD           WQSN03           W012 Sales Real
     C                     KFLD           WQSN04           Item Structure
     C                     KFLD           WQSN05           Sales Route Cod
     C                     KFLD           WQSN06           Shipped Item Co
      * Setup key
     C                     Z-ADDWL0037    WQSN01           Company Number
     C                     MOVELWL0038    WQSN02           Date Range
     C                     MOVELWL0039    WQSN03           W012 Sales Real
     C                     Z-ADDWL0040    WQSN04           Item Structure
     C                     MOVELWL0041    WQSN05           Sales Route Cod
     C                     Z-ADDWL0042    WQSN06           Shipped Item Co
      * Establish starting position
     C           KRSSN     SETLL@A1CPH3                    *
     C           KRSSN     READE@A1CPH3                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3012' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADD*ZERO     WL0043           W012 Sequence N
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDA1J6NY    WL0043           W012 Sequence N
     C           KRSSN     READE@A1CPH3                  90*
     C                     ENDDO
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * Rtv Price Type        RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           OMAIC3           Company Number
     C                     KFLD           OMC4NB           Order Number
     C                     KFLD           OMDPNB           Order Sequence
     C                     KFLD           OMUENB           Order Secondary
      * Setup key
     C                     Z-ADD$DAIC3    OMAIC3           Company Number
     C                     Z-ADD$DC4NB    OMC4NB           Order Number
     C                     Z-ADD$DDPNB    OMDPNB           Order Sequence
     C                     Z-ADD$DUENB    OMUENB           Order Secondary
      * Establish starting position
     C           KRSSO     CHAIN@BGWKL1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1309' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $DJXAA           OD Price Type
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELOMF7SX    $DJXAA           OD Price Type
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPCRRC    BEGSR
      *================================================================
      * Crt W012 Sls Rz CM/DM CR - WF Sales Rz CM/DM Dwnld  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @A1CPH2
     C                     Z-ADDWL0044    WBAIC3           Company Number
     C                     MOVELWL0045    WBNCNX           Date Range
     C                     MOVELWL0046    WBI6SX           W012 Sales Real
     C                     Z-ADDWL0047    WBRHNB           Item Structure
     C                     MOVELWL0048    WBR4CD           Sales Route Cod
     C                     Z-ADDWL0049    WBS5NB           Shipped Item Co
     C                     Z-ADDWL0050    WBJ6NY           W012 Sequence N
     C                     Z-ADDWL0051    WBBKC7           Ship To Custome
     C                     MOVELWL0052    WBPHNA           W012 Ship to Na
     C                     MOVELWL0053    WBDBCD           Ship To State C
     C                     Z-ADDWL0054    WBCONB           Invoice Number
     C                     Z-ADDWL0055    WBGNDT           Actual Shipped
     C                     Z-ADDWL0056    WBFDPC           W012 Fob Price/
     C                     Z-ADDWL0057    WBCZVL           W012 Market & O
     C                     Z-ADDWL0058    WBCYVL           W012 Variance A
     C                     Z-ADDWL0059    WBNFNX           W012 Billing De
     C                     Z-ADDWL0060    WBNGNX           W012 Freight Ab
     C                     Z-ADDWL0061    WBGRVL           W012 Accrual Am
     C                     Z-ADDWL0062    WBNHNX           W012 Billing Dt
     C                     Z-ADDWL0063    WBIJWG           W012 Shipped Ne
     C                     Z-ADDWL0064    WBNINX           W012 Abs Frt Ra
     C                     Z-ADDWL0065    WBM3QT           W012 Quantity B
     C                     MOVELWL0066    WBRLCD           Order Header Re
     C                     MOVELWL0067    WBJXAA           SH Price Type
     C                     Z-ADDWL0068    WBUOVA           Commission Amou
     C                     Z-ADDWL0069    WBD9PR           NonLedgrd TrdFn
     C                     Z-ADDWL0070    WBDPNB           Order Sequence
      *
     C           KLCRSP    KLIST
     C                     KFLD           WBAIC3           Company Number
     C                     KFLD           WBNCNX           Date Range
     C                     KFLD           WBI6SX           W012 Sales Real
     C                     KFLD           WBRHNB           Item Structure
     C                     KFLD           WBR4CD           Sales Route Cod
     C                     KFLD           WBS5NB           Shipped Item Co
     C                     KFLD           WBJ6NY           W012 Sequence N
      * Check for duplicate primary key
     C           KLCRSP    SETLL@A1CPH2                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3013' W0RTN   7
      * Send message 'WF Sales Rz CM/DM Dwnl EX'
     C                     MOVEL'USR3013' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SPEXIT
     C                     ENDIF
      *
     C                     WRITE@A1CPH2                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * RTV Print Realization  RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WAHGCD           Item Code
      * Setup key
     C                     Z-ADDF4AIC3    WAAIC3           Company Number
     C                     Z-ADDF4S5NB    WAHGCD           Item Code
      * Establish starting position
     C           KRSSQ     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WULNCD           Default Commod
     C                     MOVEL*BLANK    P8X6ST           Print on Realiz
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWALNCD    WULNCD           Default Commod
     C                     MOVELWAX6ST    P8X6ST           Print on Realiz
     C                     ENDIF
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * RTV Warehouse Type     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVELF4AJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSR     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0006           Warehouse Type
     C                     GOTO SREXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADWPST    YL0006           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ***** Change log and comments
      *================================================================
      * 03/19/10 LJB C000642  Add order sequence number to work file so
      *    shipped item code will be unique for download file
      * 01/11/10 LJB E000436  2 new fields added to work file-Commission
      *    Amount and Non Ledgered Accrual Amount. Write to Work File.
      * 7/10/2008 BLG E00174 Reverse sign on qty for credit memos
      * 1/02/08  RMC Concat date for workf field for all rpt sel,
      *    added Seq Nbr to key in workfile to avoid duplicates when doin
      * 2/08/06  Added Usr Flag 2 (&prtcus parm) - if no, dont print cust
      * 8/20/04  PKTR01 RMC  Added Company to input parm list
      * Changes to allow all companies when par company number = zero
      * Specific company: par company number will be populated
      * 3/13/02  ??? change to crt outfile in Detail for all rpt sel
      * 8/16/00  Create outfile in Detail  if Rpt Sel is O, and
      *    Status is Yes
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P6OBST           Billing Activit
     C                     MOVEL*BLANK    P8ADCD           U/M - Primary
     C                     Z-ADD*ZERO     P8AWPC           Conversion Fact
     C                     MOVEL*BLANK    P8LXST           Operation Facto
     C                     MOVEL*BLANK    P8AECD           U/M - Second
     C                     Z-ADD*ZERO     P8AXPC           Conversion Fact
     C                     MOVEL*BLANK    P8LYST           Operation Facto
     C                     MOVEL*BLANK    P8AFCD           U/M - Third
     C                     MOVEL*BLANK    P8AICD           U/M - Pricing
     C                     Z-ADD*ZERO     P8AIWG           Unit Weight
     C                     Z-ADD*ZERO     P8RINB           Item Structure
     C                     Z-ADD*ZERO     P8RHNB           Item Structure
     C                     Z-ADD*ZERO     P8RGNB           Item Structure
     C                     Z-ADD*ZERO     P8BMPR           Standard Overag
     C                     MOVEL*BLANK    P8LRCD           Commodity Price
     C                     MOVEL*BLANK    P8U9ST           Item Pricing Op
     C                     Z-ADD*ZERO     P8CMCO           Item Pricing Co
     C                     MOVEL*BLANK    P8X6ST           Print on Realiz
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field USR Display field
     C                     MOVEL*BLANK    WUGGST  1
      * Define work field Count USR
     C                     Z-ADD*ZERO     WUCNTU  50
      * Define work field First Time Flag
     C                     MOVEL*BLANK    WUTAST  1
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    F4RGNB           Item Structure
     C                     MOVEL*LOVAL    F4RHNB           Item Structure
     C                     MOVEL*LOVAL    F4RINB           Item Structure
     C                     MOVEL*LOVAL    F4S5NB           Shipped Item Co
     C                     MOVEL*LOVAL    F4AIC3           Company Number
      * Define work field USR Company Name
     C                     MOVEL*BLANK    WUAGTX 30
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Status Flag 1  Y/N
     C                     MOVEL*BLANK    WUQ1ST  1
      * Define work field Status Flag 2  Y/N
     C                     MOVEL*BLANK    WUQ2ST  1
      * Define work field Description Line One
     C                     MOVEL*BLANK    WUAVNA 30
      * Define work field Commodity Market Code
     C                     MOVEL*BLANK    WULQCD  3
      * Define work field Market Overage
     C                     Z-ADD*ZERO     WUBLPR 114
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAHGCD           Item Code
     C                     Z-ADD*ZERO     WAAWPC           Conversion Fact
     C                     Z-ADD*ZERO     WAAXPC           Conversion Fact
     C                     Z-ADD*ZERO     WAAIWG           Unit Weight
     C                     Z-ADD*ZERO     WACZWG           Minimum Weight
     C                     Z-ADD*ZERO     WAC0WG           Maximum Weight
     C                     Z-ADD*ZERO     WAURTN           Number Cases On
     C                     Z-ADD*ZERO     WAAJC8           Vendor - Item D
     C                     Z-ADD*ZERO     WARINB           Item Structure
     C                     Z-ADD*ZERO     WARHNB           Item Structure
     C                     Z-ADD*ZERO     WARGNB           Item Structure
     C                     Z-ADD*ZERO     WATFNB           Transportation
     C                     Z-ADD*ZERO     WATMVA           Maximum Audit V
     C                     Z-ADD*ZERO     WATNVA           Minimum Audit V
     C                     Z-ADD*ZERO     WABLPR           Market Overage
     C                     Z-ADD*ZERO     WABMPR           Standard Overag
     C                     Z-ADD*ZERO     WACMCO           Item Pricing Co
     C                     Z-ADD*ZERO     WACHTM           Fresh Chilling
     C                     Z-ADD*ZERO     WASWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WAPPHE           Pieces Per Head
     C                     Z-ADD*ZERO     WAICN1           Item Category N
     C                     Z-ADD*ZERO     WAICN2           Item Category N
     C                     Z-ADD*ZERO     WAV2NB           Item Category N
     C                     Z-ADD*ZERO     WAITCN           Item Category N
     C                     Z-ADD*ZERO     WAITC5           Item Category N
     C                     Z-ADD*ZERO     WAICN6           Item Category N
     C                     Z-ADD*ZERO     WAICN7           Item Category N
     C                     Z-ADD*ZERO     WAICN8           Item Category N
     C                     Z-ADD*ZERO     WAICN9           Item Category N
     C                     Z-ADD*ZERO     WAICN0           Item Category N
     C                     Z-ADD*ZERO     WASFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     WAA3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     WASJNB           Production Lead
     C                     Z-ADD*ZERO     WASKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WASLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WASMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WACFNB           PM Pounds per H
     C                     Z-ADD*ZERO     WACGNB           Item Frt Overag
     C                     Z-ADD*ZERO     WAILNB           PM % 2nds Facto
     C                     Z-ADD*ZERO     WACHNB           Use/Freeze/Sell
     C                     Z-ADD*ZERO     WACINB           PM Batch Size
     C                     Z-ADD*ZERO     WACJNB           PM Lot Size
     C                     Z-ADD*ZERO     WACMNB           Partial Item Co
     C                     Z-ADD*ZERO     WACNNB           WIP Item Code
     C                     Z-ADD*ZERO     WACRNB           WIP Reject Code
     C                     Z-ADD*ZERO     WACSNB           Std Costing Uni
     C                     Z-ADD*ZERO     WACVNB           FP Std Green We
     C                     Z-ADD*ZERO     WACWNB           PM Standard LBS
     C                     Z-ADD*ZERO     WACXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     WACZNB           PM Formula LBS/
     C                     Z-ADD*ZERO     WAC0NB           PM Finished LBS
     C                     Z-ADD*ZERO     WAB4NB           PM R/M Type Cod
     C                     Z-ADD*ZERO     WAB5NB           PM Line Number
     C                     Z-ADD*ZERO     WABDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WABJNB           Bags Per Unit
     C                     Z-ADD*ZERO     WAF5WG           Item Target Pri
     C                     Z-ADD*ZERO     WAF6WG           Minimum Piece W
     C                     Z-ADD*ZERO     WAF7WG           Maximum Piece W
     C                     Z-ADD*ZERO     WABLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     WABNNB           Production Qty
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Actual Shipped Date
     C                     Z-ADD*ZERO     WUGNDT  70
      * Define work field Commodity Market Price
     C                     Z-ADD*ZERO     WUA5PR 114
      * Define work field USR Date Priced
     C                     Z-ADD*ZERO     WUE7DT  70
      * Define work field Price based on U/M1 S
     C                     Z-ADD*ZERO     WUAPPR 114
      * Define work field Price based on U/M2 S
     C                     Z-ADD*ZERO     WUAQPR 114
      * Define work field Price based on U/M3 S
     C                     Z-ADD*ZERO     WUARPR 114
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field USR Percent Work, 7.4
     C                     Z-ADD*ZERO     WUBHPC  74
      * Define work field USR Market Value
     C                     Z-ADD*ZERO     WUT2VA 112
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBRHNB           Item Structure
     C                     Z-ADD*ZERO     WBS5NB           Shipped Item Co
     C                     Z-ADD*ZERO     WBJ6NY           W012 Sequence N
     C                     Z-ADD*ZERO     WBBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WBCONB           Invoice Number
     C                     Z-ADD*ZERO     WBGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WBFDPC           W012 Fob Price/
     C                     Z-ADD*ZERO     WBCZVL           W012 Market & O
     C                     Z-ADD*ZERO     WBCYVL           W012 Variance A
     C                     Z-ADD*ZERO     WBNFNX           W012 Billing De
     C                     Z-ADD*ZERO     WBNGNX           W012 Freight Ab
     C                     Z-ADD*ZERO     WBGRVL           W012 Accrual Am
     C                     Z-ADD*ZERO     WBNHNX           W012 Billing Dt
     C                     Z-ADD*ZERO     WBIJWG           W012 Shipped Ne
     C                     Z-ADD*ZERO     WBNINX           W012 Abs Frt Ra
     C                     Z-ADD*ZERO     WBM3QT           W012 Quantity B
     C                     Z-ADD*ZERO     WBUOVA           Commission Amou
     C                     Z-ADD*ZERO     WBD9PR           NonLedgrd TrdFn
     C                     Z-ADD*ZERO     WBDPNB           Order Sequence
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Default Commod Mark basis
     C                     MOVEL*BLANK    WULNCD  3
      * Define work field Sales Route Code
     C                     MOVEL*BLANK    WUR4CD  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WE   179       *Synon (17,9) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002 30
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0003  30
     C                     Z-ADD*ZERO     WL0004  30
     C                     MOVEL*BLANK    WL0005 30
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0006  30
     C                     MOVEL*BLANK    WL0007 30
      * Define local variables for subroutine SJRVGN.
     C                     Z-ADD*ZERO     WL0008  30
     C                     Z-ADD*ZERO     WL0009  70
     C                     MOVEL*BLANK    WL0010  3
      * Define local variables for subroutine SKRVGN.
     C                     MOVEL*BLANK    WL0011  2
     C                     MOVEL*BLANK    WL0012  1
      * Define local variables for subroutine SLRVGN.
     C                     Z-ADD*ZERO     WL0013  30
     C                     Z-ADD*ZERO     WL0014  70
     C                     MOVEL*BLANK    WL0015 30
     C                     MOVEL*BLANK    WL0016  2
     C                     Z-ADD*ZERO     WL0017  94
     C                     MOVEL*BLANK    WL0018  1
     C                     MOVEL*BLANK    WL0019  2
     C                     Z-ADD*ZERO     WL0020  94
     C                     MOVEL*BLANK    WL0021  1
     C                     MOVEL*BLANK    WL0022  2
     C                     MOVEL*BLANK    WL0023  2
     C                     Z-ADD*ZERO     WL0024 112
     C                     MOVEL*BLANK    WL0025  3
     C                     Z-ADD*ZERO     WL0026 114
     C                     Z-ADD*ZERO     WL0027 114
     C                     MOVEL*BLANK    WL0028  7
     C                     MOVEL*BLANK    WL0029  1
     C                     Z-ADD*ZERO     WL0030 114
     C                     MOVEL*BLANK    WL0031  2
      * Define local variables for subroutine SMRVGN.
     C                     MOVEL*BLANK    WL0032  3
     C                     MOVEL*BLANK    WL0033  7
     C                     Z-ADD*ZERO     WL0034  70
     C                     Z-ADD*ZERO     WL0035 114
     C                     Z-ADD*ZERO     WL0036  70
      * Define local variables for subroutine SNRVGN.
     C                     Z-ADD*ZERO     WL0037  30
     C                     MOVEL*BLANK    WL0038 14
     C                     MOVEL*BLANK    WL0039  1
     C                     Z-ADD*ZERO     WL0040  30
     C                     MOVEL*BLANK    WL0041  3
     C                     Z-ADD*ZERO     WL0042  70
     C                     Z-ADD*ZERO     WL0043  50
      * Define local variables for subroutine SPCRRC.
     C                     Z-ADD*ZERO     WL0044  30
     C                     MOVEL*BLANK    WL0045 14
     C                     MOVEL*BLANK    WL0046  1
     C                     Z-ADD*ZERO     WL0047  30
     C                     MOVEL*BLANK    WL0048  3
     C                     Z-ADD*ZERO     WL0049  70
     C                     Z-ADD*ZERO     WL0050  50
     C                     Z-ADD*ZERO     WL0051  70
     C                     MOVEL*BLANK    WL0052 15
     C                     MOVEL*BLANK    WL0053  2
     C                     Z-ADD*ZERO     WL0054  70
     C                     Z-ADD*ZERO     WL0055  70
     C                     Z-ADD*ZERO     WL0056  72
     C                     Z-ADD*ZERO     WL0057 112
     C                     Z-ADD*ZERO     WL0058 112
     C                     Z-ADD*ZERO     WL0059 112
     C                     Z-ADD*ZERO     WL0060 112
     C                     Z-ADD*ZERO     WL0061 112
     C                     Z-ADD*ZERO     WL0062 112
     C                     Z-ADD*ZERO     WL0063 112
     C                     Z-ADD*ZERO     WL0064  52
     C                     Z-ADD*ZERO     WL0065  81
     C                     MOVEL*BLANK    WL0066  3
     C                     MOVEL*BLANK    WL0067  3
     C                     Z-ADD*ZERO     WL0068 112
     C                     Z-ADD*ZERO     WL0069 114
     C                     Z-ADD*ZERO     WL0070  30
      * Define local work field Date From Alpha       USR
     C                     MOVEL*BLANK    YL0001  7
      * Define local work field Date To Alpha         USR
     C                     MOVEL*BLANK    YL0002  7
      * Define local work field Date Range
     C                     MOVEL*BLANK    YL0003 14
      * Define local work field U/M - Base Price
     C                     MOVEL*BLANK    YL0004  2
      * Define local work field W012 Sequence Number
     C                     Z-ADD*ZERO     YL0005  50
      * Define local work field Warehouse Type
     C                     MOVEL*BLANK    YL0006  2
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     MOVEL'N'       WUGGST           USR Display fie
      * TOP.Description = Condition name of PAR.USR Detail or Summary
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1210393   Y2LSNO  70       List number
     C                     PARM P7STST    W0INVL 25        USR Detail or S
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BAUNA    PARM           W0CNNM 25        Description
      *
     C                     Z-ADD*ZERO     WUCNTU           Count USR
     C                     MOVEL'Y'       WUTAST           First Time Flag
      * ***** Change log and comments
     C                     EXSR UASUBR                     ***** Change lo
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
