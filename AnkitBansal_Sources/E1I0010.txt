     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
     H/TITLE E10010  - Automatic Next Numbering for Enterprise 1            00028
     H* ----------------------------------------------------------------
     H*
     H*    Copyright (c) 1990
     H*    J. D. Edwards & Company
     H*
     H*        This unpublished material is proprietary to
     H*        J. D. Edwards & Company.  All rights reserved.
     H*        The methods and techniques described herein are
     H*        considered trade secrets and/or confidential.
     H*        Reproduction or distribution, in whole or in part,
     H*        is forbidden except by express written permission
     H*        of J. D. Edwards & Company.
     H*
     H* ----------------------------------------------------------------
     H*                                                                -
     F*
     F*    PROGRAM REVISION LOG
     F*    --------------------
     F*
     F*          Date     Programmer     Nature of Revision
     F*        --------   ----------  ------------------------------------
     F*        12/04/90   JLT         SAR # 00168161
     F*        02/12/92   FURNAS      SAR # 00442212
     F*        02/04/92   FURNAS      SAR # 00404208
     F*        11/03/92   MINOR       SAR # 00411694
     F*        02/15/93   SPILLANE    SAR # 00575795
     F*        02/23/93   MJP         SAR # 00580471
     F*        09/03/93   KIRKWOOD    SAR # 00651760
     F*        10/08/93   SPILLANE    SAR # 00666988
     F*        01/12/94   JES         SAR # 00704104
     F*        03/07/94   KST         SAR # 00728579
     F*        09/30/94   WARNER      SAR # 00821423
     F*        06/09/95   LB266041    SAR # 00973865
     F*        07/07/95   KST         SAR # 00973021
     F*        10/29/96   KST         SAR # 01386291
     F*        11/12/97   BECK        SAR #  1804633
     F*        03/30/20   BRAD BADEN  SDN465 TFS#16169
     F*
     F*****************************************************************
     F*
     F*    Next Numbers
     F*
     FF0002     UF   E           K DISK
     F*----------------------------------------------------------------
     F*
     F*    Next Numbers by Company/FY
     F*
     FF00021    UF A E           K DISK    USROPN
     F*----------------------------------------------------------------
     F*
     F*    Journal Entries
     F*
     F*F0911LA   IF   E           K DISK    USROPN
     FE10911LA  IF   E           K DISK    USROPN
     F*----------------------------------------------------------------
     F*
     F*    Invoices
     F*
     F** F0311LD ACCESSED BY XF0311
     F*----------------------------------------------------------------
     F*
     F*    Vouchers   7
     F*
     F*F0411LE   IF   E           K DISK    USROPN
     FE10411LE  IF   E           K DISK    USROPN
     F*----------------------------------------------------------------
     F*
     F*    Data dictionary
     F*
     F*0005   IF  E           K        DISK
     F*----------------------------------------------------------------
     F*
     F*    System constants
     F*
     F*F0009     IF   E           K DISK    USROPN
     FE10009L1  IF   E           K DISK    USROPN
     F*
     D*****************************************************************
     D*
     D*    PROGRAM TABLES AND ARRAYS
     D*    -------------------------
     D*
     D @DG             S              1    DIM(8)                               Digits
     D*
     D*****************************************************************
     D*
     D*    PROGRAM CONSTANT DEFINITIONS
     D*    ----------------------------
     D*
     D @YES            C                   CONST('Y')
     D @NO             C                   CONST('N')
     D*****************************************************************
     D*
     D*    PROGRAM INPUT SPECIFICATIONS AND DATA STRUCTURES
     D*    ------------------------------------------------
     D*/COPY JDECPY,I00PS@@
     D**************************************************************
     D*  This data structure constitues the complete parameter list
     D*  for each of the data file server functions used by the
     D*  Data Dictionary Server.
     D*****************************************************************
     D*    PROGRAM INPUT SPECIFICATIONS AND DATA STRUCTURES
     D*    ------------------------------------------------
     D*
     D PS@@            DS
     D*
     D*    Data record key value.
     D  KY@@                   1    100
     D*    Data record key value - various sizes
     D  KY@@01                 1      1
     D  KY@@02                 1      2
     D  KY@@03                 1      3
     D  KY@@04                 1      4
     D  KY@@05                 1      5
     D  KY@@06                 1      6
     D  KY@@07                 1      7
     D  KY@@08                 1      8
     D  KY@@09                 1      9
     D  KY@@10                 1     10
     D  KY@@11                 1     11
     D  KY@@12                 1     12
     D  KY@@13                 1     13
     D  KY@@14                 1     14
     D  KY@@15                 1     15
     D  KY@@16                 1     16
     D  KY@@17                 1     17
     D  KY@@18                 1     18
     D  KY@@19                 1     19
     D  KY@@20                 1     20
     D  KY@@21                 1     21
     D  KY@@22                 1     22
     D  KY@@23                 1     23
     D  KY@@24                 1     24
     D  KY@@25                 1     25
     D  KY@@26                 1     26
     D  KY@@27                 1     27
     D  KY@@28                 1     28
     D  KY@@29                 1     29
     D  KY@@30                 1     30
     D  KY@@31                 1     31
     D  KY@@32                 1     32
     D  KY@@33                 1     33
     D  KY@@34                 1     34
     D  KY@@35                 1     35
     D  KY@@36                 1     36
     D  KY@@37                 1     37
     D  KY@@38                 1     38
     D  KY@@39                 1     39
     D  KY@@40                 1     40
     D  KY@@41                 1     41
     D  KY@@42                 1     42
     D  KY@@43                 1     43
     D  KY@@44                 1     44
     D  KY@@45                 1     45
     D  KY@@46                 1     46
     D  KY@@47                 1     47
     D  KY@@48                 1     48
     D  KY@@49                 1     49
     D  KY@@50                 1     50
     D  KY@@51                 1     51
     D  KY@@52                 1     52
     D  KY@@53                 1     53
     D  KY@@54                 1     54
     D  KY@@55                 1     55
     D  KY@@56                 1     56
     D  KY@@57                 1     57
     D  KY@@58                 1     58
     D  KY@@59                 1     59
     D  KY@@60                 1     60
     D  KY@@61                 1     61
     D  KY@@62                 1     62
     D  KY@@63                 1     63
     D  KY@@64                 1     64
     D  KY@@65                 1     65
     D  KY@@66                 1     66
     D  KY@@67                 1     67
     D  KY@@68                 1     68
     D  KY@@69                 1     69
     D  KY@@70                 1     70
     D  KY@@71                 1     71
     D  KY@@72                 1     72
     D  KY@@73                 1     73
     D  KY@@74                 1     74
     D  KY@@75                 1     75
     D  KY@@76                 1     76
     D  KY@@77                 1     77
     D  KY@@78                 1     78
     D  KY@@79                 1     79
     D  KY@@80                 1     80
     D  KY@@81                 1     81
     D  KY@@82                 1     82
     D  KY@@83                 1     83
     D  KY@@84                 1     84
     D  KY@@85                 1     85
     D  KY@@86                 1     86
     D  KY@@87                 1     87
     D  KY@@88                 1     88
     D  KY@@89                 1     89
     D  KY@@90                 1     90
     D  KY@@91                 1     91
     D  KY@@92                 1     92
     D  KY@@93                 1     93
     D  KY@@94                 1     94
     D  KY@@95                 1     95
     D  KY@@96                 1     96
     D  KY@@97                 1     97
     D  KY@@98                 1     98
     D  KY@@99                 1     99
     D  KY@@00                 1    100
     D*
     D*    Return code (N=Record not found).
     D  RT@@                 101    101
     D*
     D*    Flash message text return.
     D  FLSH                 102    141
     D*
     D*    Number of composite key values.
     D  CKYS                 142    143  0
     D*
     D*    Returned descriptions 1 thru 6.
     D  D1@@                 144    183
     D  D2@@                 184    223
     D  D3@@                 224    263
     D  D4@@                 264    303
     D  D5@@                 304    343
     D  D6@@                 344    383
     D  D7@@                 384    423
     D  D8@@                 424    463
     D  D9@@                 464    503
     D  D0@@                 504    543
     D*----------------------------------------------------------------
     D*    Number of Returned descriptions 1 thru 10.
     D  DX@@                 544    545  0
     D*----------------------------------------------------------------
     D*
     D*    Data Structure to Define Indexes in Common Subroutines
     D*
     D*/COPY JDECPY,I00DSBIN
     D*                 Binary Array Index Fields
     D*
     D*    This data strucure provides the field definitions of all
     D*    possible Binary array index field names useable by all
     D*    common subroutines.  Each index can contain a value from
     D*    0 to 9999.  A character complement of each binary field
     D*    is defined for moving values efficiently between binary
     D*    indexes.  RPG Z-ADDS should be used when moving binary
     D*    index values to non-binary fields and visa-versa.
     D*
     D*    Because data structure elements are not initialized by
     D*    RPG, *LOVAL should be moved to this data structure at
     D*    program variable initialization time.
     D*
     D DSBIN           DS
     D  #A                     1      2B 0 INZ(0)
     D  #A#                    1      2
     D  #B                     3      4B 0 INZ(0)
     D  #B#                    3      4
     D  #C                     5      6B 0 INZ(0)
     D  #C#                    5      6
     D  #D                     7      8B 0 INZ(0)
     D  #D#                    7      8
     D  #E                     9     10B 0 INZ(0)
     D  #E#                    9     10
     D  #F                    11     12B 0 INZ(0)
     D  #F#                   11     12
     D  #G                    13     14B 0 INZ(0)
     D  #G#                   13     14
     D  #H                    15     16B 0 INZ(0)
     D  #H#                   15     16
     D  #I                    17     18B 0 INZ(0)
     D  #I#                   17     18
     D  #J                    19     20B 0 INZ(0)
     D  #J#                   19     20
     D  #K                    21     22B 0 INZ(0)
     D  #K#                   21     22
     D  #L                    23     24B 0 INZ(0)
     D  #L#                   23     24
     D  #M                    25     26B 0 INZ(0)
     D  #M#                   25     26
     D  #N                    27     28B 0 INZ(0)
     D  #N#                   27     28
     D  #O                    29     30B 0 INZ(0)
     D  #O#                   29     30
     D  #P                    31     32B 0 INZ(0)
     D  #P#                   31     32
     D  #Q                    33     34B 0 INZ(0)
     D  #Q#                   33     34
     D  #R                    35     36B 0 INZ(0)
     D  #R#                   35     36
     D  #S                    37     38B 0 INZ(0)
     D  #S#                   37     38
     D  #T                    39     40B 0 INZ(0)
     D  #T#                   39     40
     D  #U                    41     42B 0 INZ(0)
     D  #U#                   41     42
     D  #V                    43     44B 0 INZ(0)
     D  #V#                   43     44
     D  #W                    45     46B 0 INZ(0)
     D  #W#                   45     46
     D  #X                    47     48B 0 INZ(0)
     D  #X#                   47     48
     D  #Y                    49     50B 0 INZ(0)
     D  #Y#                   49     50
     D  #Z                    51     52B 0 INZ(0)
     D  #Z#                   51     52
     D*
     D*/COPY JDECPY,I00DSPROG
     D*****************************************************************    00003
     D*
     D*    PROGRAM STATUS DATA STRUCTURE
     D*    -----------------------------
     D*
     D*    Portions of this data structure are loaded at the time the
     D*    program is loaded.  Other portions of this data structure
     D*    are loaded as you perform I/O.
     D*
     D*    PURPOSE
     D*    -------
     D*    This common subroutine is set up to be used with C0000
     D*    (Cost Center Security) common subroutine and C0001(Edit
     D*    Action Code) common subroutine.  Those two subroutines
     D*    will retrieve ##USER for the user name.
     D*
     D*    No program calcs are done in this subroutine.
     D*
     D ##PSDS         SDS
     D*
     D*          Program Name
     D  ##PROG                 1     10
     D*          Status Code(09999=I/O Error)
     D  ##STAT                11     15  0
     D*          Previous Status code
     D  ##PSTA                16     20  0
     D*          RPG Source Statement Sequence Number
     D  ##SEQN                21     28
     D*          RPG Routine in Which Exception/Error Occured
     D  ##ROUT                29     36
     D*          Number of Parameters Passed to This Program
     D  ##PARM                37     39  0
     D*          Exception Type(MCH=Machine, CPF=CPF)
     D  ##ETYP                40     42
     D*          Exception Message Number
     D  ##ENBR                43     46
     D*          Machine Instruction/Object Definition Template Number
     D  ##MINO                47     50
     D*          Work Area for Messages
     D  ##MWRK                51     80
     D*          Name of Library in Which Program is Located
     D  ##PLIB                81     90
     D*          Retrieved Exdeption Data.  CPF Messages.
     D  ##MSG                 91    170
     D*          Identification of Exception That Caused RPG9001
     D  ##9001               171    174
     D*          Unused
     D  ##FLR1               175    200
     D*          Name of File for Last I/O(Only Updated if Error)
     D  ##LFIL               201    208
     D*          Status Info on Last File Used(Only on Error)
     D  ##LFST               209    243
     D*          Status Code on Last File Used(Only on Error)
     D  ##LFS5               209    213
     D*          Job Name
     D  ##JOBN               244    253
     D*          User Name From User Profile
     D  ##USER               254    263
     D*          Job Number
     D  ##JOB#               264    269  0
     D*          Date Job Entered the System(MMDDYY)
     D  ##JDT                270    275  0
     D*          Date of Program Execution(MMDDYY)
     D  ##EDT                276    281  0
     D*          Time of Program Execttion(HHMMSS)
     D  ##ETM                282    287  0
     D*          Date Program Was Compiled
     D  ##CDT                288    293  0
     D*          Time Program Was Compiled
     D  ##CTM                294    299  0
     D*          Level of the Compiler
     D  ##LVL                300    303
     D*          Source File Name
     D  ##SRCN               304    313
     D*          Source Library Name
     D  ##SRCL               314    323
     D*          Source File Member Name
     D  ##SRCM               324    333
     D*          Unused
     D  ##FLR2               334    429
     D*
     D                 DS
     D  @NC                    1     10
     D                                     DIM(10)                              Check Digit?
     D  NNCK01                 1      1
     D  NNCK02                 2      2
     D  NNCK03                 3      3
     D  NNCK04                 4      4
     D  NNCK05                 5      5
     D  NNCK06                 6      6
     D  NNCK07                 7      7
     D  NNCK08                 8      8
     D  NNCK09                 9      9
     D  NNCK10                10     10
     D                 DS
     D  @NN                    1     80  0
     D                                     DIM(10)                              Next Number   s
     D  NNN001                 1      8  0
     D  NNN002                 9     16  0
     D  NNN003                17     24  0
     D  NNN004                25     32  0
     D  NNN005                33     40  0
     D  NNN006                41     48  0
     D  NNN007                49     56  0
     D  NNN008                57     64  0
     D  NNN009                65     72  0
     D  NNN010                73     80  0
     D*
     D                 DS
     D  NLYEAR                 1      4
     D  NLCTRY                 1      2  0
     D  NLFY                   3      4  0
     D  PSYEAR                 5      8
     D  $CTRY                  5      6  0
     D  $FY                    7      8  0
     D  $$YEAR                 9     12
     D*
     D*/COPY JDECPY,I0005U
     D*
     D*    User Defined Codes Structure
     D*
     D I0005U          DS
     D*
     D*    System Code
     D  #USY                   1      4
     D*    Record Type
     D  #URT                   5      6
     D*    Code
     D  #UKY                   7     16
     D*    Description Line 1
     D  #UDL01                17     46
     D*    Description Line 2
     D  #UDL02                47     76
     D*    Language Preference
     D  #ULNGP                77     78
     D*    Action
     D  #UACTN                79     79
     D*    Special Handling Code
     D  #USPHD                80     89
     D*    Error Flag
     D  #UERR                 90     90
     D*/COPY JDECPY,I031171
     D****************************************************************
     D*  This copy module contains the record image for the F0311
     D*  file at the A7.1 release level.
     D****************************************************************
     D*
     D*    XF file server format, @@FMT = A71
     D*
     D I0311           DS           800    INZ
     D*
     D*    Document Company
     D  RPKCO                  1      5
     D*    Address Number
     D  RPAN8                  6     13  0
     D*    Document Type
     D  RPDCT                 14     15
     D*    Document Number
     D  RPDOC                 16     23  0
     D*    Pay Item
     D  RPSFX                 24     26
     D*    Invoice Date
     D  RPDIVJ                27     32  0
     D*    Payment/Item Document Type
     D  RPDCTM                33     34
     D*    Payment/Item Number
     D  RPDOCM                35     42  0
     D*    Payment/Item Pay Item
     D  RPSFXM                43     45
     D*    Check/Item Date
     D  RPDMTJ                46     51  0
     D*    G/L Date
     D  RPDGJ                 52     57  0
     D*    Fiscal Year
     D  RPFY                  58     59  0
     D*    Century
     D  RPCTRY                60     61  0
     D*    G/L Period Number
     D  RPPN                  62     63  0
     D*    Company
     D  RPCO                  64     68
     D*    Batch Type
     D  RPICUT                69     70
     D*    Batch Number
     D  RPICU                 71     78  0
     D*    Batch Date
     D  RPDICJ                79     84  0
     D*    Parent Number
     D  RPPA8                 85     92  0
     D*    Alternate Payee Address Number
     D  RPAN8J                93    100  0
     D*    G/L Posted Code
     D  RPPOST               101    101
     D*    Balanced - J.E.s
     D  RPBALJ               102    102
     D*    Pay Status
     D  RPPST                103    103
     D*    Gross Amount
     D  RPAG                 104    111P 0
     D*    Open Amount
     D  RPAAP                112    119P 0
     D*    Discount Available
     D  RPADSC               120    127P 0
     D*    Discount Taken
     D  RPADSA               128    135P 0
     D*    Taxable Amount
     D  RPATXA               136    143P 0
     D*    Non-Taxable Amount
     D  RPATXN               144    151P 0
     D*    Tax
     D  RPSTAM               152    159P 0
     D*    Mode (F)
     D  RPCRRM               160    160
     D*    Currency Code
     D  RPCRCD               161    163
     D*    Exchange Rate
     D  RPCRR                164    171P 7
     D*    Currency Amount
     D  RPACR                172    179P 0
     D*    Foreign Open Amount
     D  RPFAP                180    187P 0
     D*    Foreign Discount Available
     D  RPCDS                188    195P 0
     D*    Foreign Discount Taken
     D  RPCDSA               196    203P 0
     D*    Foreign Taxable Amount
     D  RPCTXA               204    211P 0
     D*    Foreign Non-Taxable Amount
     D  RPCTXN               212    219P 0
     D*    Foreign Tax Amount
     D  RPCTAM               220    227P 0
     D*    Tax Rate/Area
     D  RPTXA1               228    237
     D*    Tax Expl Code
     D  RPEXR1               238    239
     D*    Service/Tax Date
     D  RPDSVJ               240    245  0
     D*    G/L Offset
     D  RPGLC                246    249
     D*    G/L Bank Account
     D  RPGLBA               250    257
     D*    Account Mode
     D  RPAM                 258    258
     D*    G/L Credit Account ID
     D  RPAID2               259    266
     D*    Account Mode
     D  RPAM2                267    267
     D*    Business Unit
     D  RPMCU                268    279
     D*    Object Account
     D  RPOBJ                280    285
     D*    Subsidiary
     D  RPSUB                286    293
     D*    Subledger Type
     D  RPSBLT               294    294
     D*    Subledger
     D  RPSBL                295    302
     D*    Bank Transit Short ID
     D  RPBAID               303    310
     D*    Credit Message
     D  RPCM                 311    312
     D*    Payment Terms
     D  RPPTC                313    315
     D*    Due Date
     D  RPDDJ                316    321  0
     D*    Discount Due Date
     D  RPDDNJ               322    327  0
     D*    Date Promised
     D  RPDPRJ               328    333  0
     D*    Statement Date
     D  RPSMTJ               334    339  0
     D*    Date Sent to Collection Report
     D  RPCLDJ               340    345  0
     D*    Interest Invoice Date
     D  RPITIJ               346    351  0
     D*    Date of Last Sent Reminder
     D  RPRDDJ               352    357  0
     D*    Reminder Stop Until Date
     D  RPRDSJ               358    363  0
     D*    Number of Reminders to Send
     D  RPNBRR               364    364
     D*    Level of Last Sent Reminder
     D  RPRDRL               365    365
     D*    Total No. of Sent Reminders
     D  RPRMDS               366    368  0
     D*    Collection Report (Y/N)
     D  RPCOLL               369    369
     D*    Collection Reason Code
     D  RPCLRC               370    371
     D*    Apply Finance Charges (Y/N)
     D  RPAFC                372    372
     D*    NSF Check Return
     D  RPNSF                373    373
     D*    Reason Code
     D  RPAR                 374    375
     D*    Type Input
     D  RPTRTC               376    376
     D*    Print
     D  RPPRT1               377    377
     D*    Original Document No
     D  RPODOC               378    385  0
     D*    Original Document Type
     D  RPODCT               386    387
     D*    Original Pay Item
     D  RPOSFX               388    390
     D*    Payment Handling Code
     D  RPCRC                391    393
     D*    Cleared/Value Date
     D  RPVLDT               394    399  0
     D*    Invoice Number
     D  RPVINV               400    424
     D*    P.O. Number
     D  RPPO                 425    432
     D*    Order Type
     D  RPDCTO               433    434
     D*    Line Number
     D  RPLNID               435    438P 0
     D*    Order Suffix
     D  RPSFXO               439    441
     D*    Sales Document Type
     D  RPSDCT               442    443
     D*    Sales Document Number
     D  RPSDOC               444    451  0
     D*    Operations Sequence Number
     D  RPOPSQ               452    456  0
     D*    Commission Code 1
     D  RPCMC1               457    464  0
     D*    Reference
     D  RPVR01               465    489
     D*    Item Number
     D  RPNUMB               490    497  0
     D*    Unit No
     D  RPUNIT               498    505
     D*    Business Unit
     D  RPMCU2               506    517
     D*    Remark
     D  RPRMK                518    547
     D*    Recur Frequency
     D  RPRF                 548    549
     D*    # of Payments
     D  RPDRF                550    552  0
     D*    Statement Number
     D  RPCTL                553    565
     D*    Closed Item
     D  RPFNLP               566    566
     D*    Units
     D  RPU                  567    574P 0
     D*    Unit of Measure
     D  RPUM                 575    576
     D*    Cash Basis Accounting Post Code
     D  RPALT6               577    577
     D*    Payment Instrument
     D  RPPYIN               578    578
     D*    Miscellaneous Code 1
     D  RPRP1                579    579
     D*    Miscellaneous Code 2
     D  RPRP2                580    580
     D*    Cash Rcpts/Inv Reg Code
     D  RPRP3                581    581
     D*    Alpha Name
     D  RPALPH               582    621
     D*    Category Code 01
     D  RPAC01               622    624
     D*    Account Representative
     D  RPAC02               625    627
     D*    Category Code 03
     D  RPAC03               628    630
     D*    Geographic Region
     D  RPAC04               631    633
     D*    Region
     D  RPAC05               634    636
     D*    Line of Business
     D  RPAC06               637    639
     D*    Sales Volume
     D  RPAC07               640    642
     D*    Category Code 08
     D  RPAC08               643    645
     D*    Category Code 09
     D  RPAC09               646    648
     D*    Category Code 10
     D  RPAC10               649    651
     D*    Employee Y/N
     D  RPATE                652    652
     D*    Receivable Y/N
     D  RPATR                653    653
     D*    Payables Y/N/M
     D  RPATP                654    654
     D*    Owner (Y/N)
     D  RPATO                655    655
     D*    User Code
     D  RPATPR               656    656
     D*    Search Type
     D  RPAT1                657    659
     D*    AR/AP Netting (Y)
     D  RPAT2                660    660
     D*    Address Type 3 Y/N
     D  RPAT3                661    661
     D*    Address Type 4 Y/N
     D  RPAT4                662    662
     D*    Address Type 5 (Y/N)
     D  RPAT5                663    663
     D*    Transaction Originator
     D  RPTORG               664    673
     D*    User ID
     D  RPUSER               674    683
     D*    Program ID
     D  RPPID                684    693
     D*    Date Updated
     D  RPUPMJ               694    699  0
     D*    Time Last Updated
     D  RPUPMT               700    705  0
     D*    Work Station ID
     D  RPJOBN               706    715
     D*    Domestic Entry w/Mult Currency Distr
     D  RPDMCD               716    716
     D*    Sales Order Document Company
     D  RPSKCO               717    721
     D*    Purchase Order Document Type
     D  RPPDCT               722    723
     D*    Purchase Order Document Company
     D  RPPKCO               724    728
     D*    Original Order Document Company
     D  RPOKCO               729    733
     D*    Item Number (Short)
     D  RPITM                734    741  0
     D*    Bank Tape Reconcilliation Reference
     D  RPBKTR               742    749
     D*    Historical Exchange Rate
     D  RPHCRR               750    757P 7
     D*    Historical Date
     D  RPHDGJ               758    763  0
     D*
     D****************************************************************
     D*/COPY JDECPY,I00XFSRV
     D**************************************************************
     D*  This data structure contains the control parameter list
     D*  for the XF data file servers.
     D*****************************************************************
     D*
     D*    Parameter 1 - Fixed functional control parameters.
     D*
     D PS@@1           DS           128
     D*
     D*    Access Method (K=Keyed  R=Relative Record).
     D  @@ACCS                 1      1
     D*    Operation Code (all standard RPG operation codes).
     D  @@OPER                 2     11
     D*    Lock record (Y=Yes or N=No).
     D  @@LOCK                12     12
     D*    Changed record action (If record changed between read and
     D*    update, do:  O=Overlay changed record with new, N=No update,
     D*    R=Return changed record, blank=Return message to caller)
     D  @@CHGR                13     13
     D*    Key List Name
     D  @@KLST                14     23
     D*    Number of Key Fields to Use
     D  @@KNUM                24     28  0
     D*    Format Name
     D  @@FMT                 29     38
     D*    Read Equal Flag
     D  @@RE                  39     39
     D*    DDP Field
     D  @@DDP                 40     49
     D*    Relative record number
     D  @@#RRN                50     58  0
     D*    Input/Output result
     D  @@IOR                 59     61
     D*    Return Code
     D  @@ERR                 62     71
     D*    Field in error
     D  @@ERRS                72     81
     I*
     I*----------------------------------------------------------------
     I*
     C****************************************************************
     C*
     C*    MAINLINE PROCESSING
     C*    -------------------
     C*
     C*    Handle the initial housekeeping.  Accept parms, set up
     C*      initial values, etc.
     C*
     C                   EXSR      S999
     C*                    ---- ----
     C*
     C*     If no parameters were passed, skip all processing.
     C*
B1   C     ##PARM        IFGT      *ZERO
     C*
     C*---------------------------------------------------------------
     C*
     C*    Determine next number - Loop until $OKAY = @YES
     C*
B2   C     $OKAY         DOUEQ     @YES
     C*
     C*      If GCNNO is '1' or '2', we end up calling the
     C*      same subroutine.  It is split for clarity.  If
     C*      GCNNO is '1', the pgm will create a new company
     C*      record if none is found.  If GCNNO is '2', the
     C*      pgm will fall through to the old next numbering
     C*      method if no record is found.
     C*
B3   C     $ERTST        IFNE      '1'
     C*
B4   C                   SELECT
     C*
     C*    Retrieve next numbers record by company - Method 1
     C*
W4   C     GCNNO         WHENEQ    '1'
     C                   EXSR      S002A
     C*                    ---- -----
     C*
     C*    Retrieve next numbers record by company - Method 2
     C*
W4   C     GCNNO         WHENEQ    '2'
     C                   EXSR      S002A
     C*                    ---- -----
     C*
     C*    Retrieve next numbers record from regular next number file
     C*
W4   C     GCNNO         WHENEQ    *BLANK
     C                   EXSR      S002B
     C*                    ---- -----
     C*
E4   C                   ENDSL
E3   C                   ENDIF
     C*
     C*---------------------------------------------------------------
     C*
     C*    If any errors exist, bypass further processing.
     C*
B3   C     $ERTST        IFEQ      '1'
     C                   LEAVE
E3   C                   ENDIF
     C*
     C*---------------------------------------------------------------
     C*
     C*    Calculate the check digit.
     C*
     C                   EXSR      S002C
     C*                    ---- -----
     C*
     C*---------------------------------------------------------------
     C*
     C*    If retrieving next number by company/fy imbed fy in
     C*    next number
     C*
     C                   MOVE      PSNBR         $NBR              8
B3   C                   SELECT
W3   C     NLIMB         WHENEQ    '1'
     C                   MOVE      $FY           $YR1              1
     C                   MOVEL     $YR1          $NBR
     C*
W3   C     NLIMB         WHENEQ    '2'
     C                   MOVEL     $FY           $NBR
E3   C                   ENDSL
     C*
     C                   MOVE      $NBR          PSNBR
     C*
     C*---------------------------------------------------------------
     C*
     C*    Check for unique number if document type passed
     C*
DBN  C                   MOVE      @YES          $OKAY             1
     C*
B3   C     $DCT          IFNE      *BLANKS
     C     $INQ          ANDNE     '1'
     C*
B4   C                   SELECT
     C*
W4   C     PSSY          WHENEQ    '03  '
DBN  C                   MOVE      @NO           $OKAY
     C                   EXSR      S003
     C*                    ---- ----
     C*
W4   C     PSSY          WHENEQ    '04  '
DBN  C                   MOVE      @NO           $OKAY
     C                   EXSR      S004
     C*                    ---- ----
     C*
W4   C     PSSY          WHENEQ    '09  '
DBN  C                   MOVE      @NO           $OKAY
     C                   EXSR      S009
     C*                    ---- ----
     C*
E4   C                   ENDSL
     C*
E3   C                   ENDIF
     C*
     C*    If $OKAY = @NO, next number is not unique.  Iterate
     C*       the loop again until next number is unique.
     C*
E2   C                   ENDDO
E1   C                   ENDIF                                                  ##PARM > 0
     C*
     C*---------------------------------------------------------------
     C*
     C*    Return to calling program.
     C*
     C                   SETOFF                                       8182
     C                   Z-ADD     *ZEROS        #G
     C*
     C                   RETURN
     C                   MOVE      *ON           *INLR
     C*
     C*    END MAINLINE PROGRAM
     C*    --------------------
     C*
     C*****************************************************************
     C*
     C*    SUBROUTINE S001   - Default index by document type
     C*    --------------------------------------------------
     C*
     C*    Processing:
     C*                 1.  Default index based on document type
     C*
     CSR   S001          BEGSR
     C*          ----      -----
     C*
B1   CSR                 SELECT
     C*
     C*----------------------------------------
     C*    Journal Entry default
     C*
W1   CSR   PSSY          WHENEQ    '09  '
     CSR                 MOVEL     '02'          PSIDX
     C*
     C*----------------------------------------
     C*    Invoice/Voucher Default
     C*
W1   CSR   PSSY          WHENEQ    '03  '
     CSR   PSSY          OREQ      '04  '
     C*
     CSR                 CLEAR                   I0005U
     C*
     C*    Load user defined code key
     C*
     CSR                 MOVEL     '00'          #USY
     C*
B2   CSR   PSSY          IFEQ      '04  '
     CSR                 MOVEL     'DV'          #URT
X2   CSR                 ELSE
     CSR                 MOVEL     'DI'          #URT
E2   CSR                 ENDIF
     C*
     CSR                 MOVE      $DCT          #UKY
     CSR                 CALL      'X0005 '                             81
     C*                    ---- --------
     CSR                 PARM                    I0005U
     C*
     CSR                 MOVE      #UERR         *IN81
B2   CSR   *IN81         IFEQ      '1'
     CSR                 CLEAR                   I0005U
E2   CSR                 ENDIF
     C*
     C*    Format the returned value to have zeros if needed.
     C*
DBN  CSR                 MOVEL     #UDL02        $WRK02            2
DBN  CSR                 MOVEL     $WRK02        $WRK1             1
DBN  CSR                 MOVE      $WRK02        $WRK2             1
     CSR                 MOVE      *ZEROS        $WRK02
     C*
B2   CSR                 SELECT
W2   CSR   $WRK1         WHENNE    *BLANK
     CSR   $WRK2         ANDNE     *BLANK
     CSR                 MOVEL     $WRK1         $WRK02
     CSR                 MOVE      $WRK2         $WRK02
     C*
W2   CSR   $WRK1         WHENNE    *BLANK
     CSR   $WRK2         ANDEQ     *BLANK
     CSR                 MOVE      $WRK1         $WRK02
     C*
W2   CSR   $WRK1         WHENEQ    *BLANK
     CSR   $WRK2         ANDNE     *BLANK
     CSR                 MOVE      $WRK2         $WRK02
E2   CSR                 ENDSL
     C*
     CSR                 MOVEL     $WRK02        PSIDX
     C*
     C*----------------------------------------
     C*    No index passed for systems other than 03, 04, & 09.
     C*
W1   CSR   PSIDX         WHENEQ    *BLANKS
     CSR                 MOVEL     '01'          PSIDX
E1   CSR                 ENDSL
     C*
     CSR   E001          ENDSR
     C*
     C*****************************************************************
     C*
     C*    SUBROUTINE S002A  - Assign Next Number by Co/Doc Typ/FY
     C*    ---------------------------------------------------------
     C*
     C*    NOTE:
     C*
     C*     The logic for tracking down the next available number for
     C*     a document is outlined below.
     C*     The variable $MATCH will be set to @YES when a record
     C*     that matches the necessary criteria is found.  This
     C*     signals the loop to end.  @NEWNL is used to determine if
     C*     an existing record is updated (@NEWNL = @NO), or if a new
     C*     record is to be added to the file (@NEWNL = @YES).
     C*
     C*     1. Use a SETGT opcode to set the file pointer immediately
     C*        after the first matching record.  KEY = KCO, DCT, CTRY,
     C*        and FY.
     C*
     C*     2. Use a REDPE (REaD Prior and Equal) opcode to retrieve
     C*        the record immediately prior to where the file pointer
     C*        was set. With the REDPE, a partial key of KCO and DCT
     C*        is used so only a record matching the partial key will
     C*        be read.  If none is found, *IN82 is set *ON.
     C*
     C*     3. One of four conditions now occur.  They are:
     C*
     C*        a. *IN82 = *ON.  No record exists for the given company
     C*           and document type.  Fetch the next number from the
     C*           and document type.
     C*
     C*           If GCNNO = '1', create a new company record in the
     C*           F00021 file w/ system defaults.  $OPER is set =
     C*           @YES so that a new record will be written.  $MATCH
     C*           is set = @YES and the loop will be exited.
     C*
     C*           If GCNNO = '2', drop through to the old next
     C*           numbering process using file F0002 to get the new
     C*           next number.  $OPER is set = @NO so no new record
     C*           will be written; $MATCH is set = @YES and the loop
     C*           will be exited.
     C*
     C*        b. NLSMAS is NOT EQUAL *BLANKS. This is the variable
     C*           used for SAME AS processing.  If it is NOT blank,
     C*           it is sharing next numbers with the doc type that
     C*           is specified in this field.  The value is placed in
     C*           the field $DCT, which is inlcuded in the key list
     C*           NLKY01 and NLKY02.  The program will now repeat
     C*           step 1, and attempt to locate a record with the
     C*           newly specified document type.
     C*
     C*        c. At this point, a record exists for the company and
     C*           document type combination.  The first of two cases
     C*           is that the century/fiscal year combo passed into
     C*           the program is GREATER THAN the cent/fy combo of the
     C*           record read from F00021.  If so, and an AUTO RESET
     C*           value has been specified, a new record for the new
     C*           fiscal year is created with the new values.  The
     C*           NEXT NUMBER field is updated with the auto reset
     C*           value from the previous record. If no auto reset
     C*           value has been specified, the program assumes that
     C*           Fiscal Year is not being used as a criteria, and
     C*           the current record is used for next number.  If
     C*           auto reset is used, $NEWNL will be set equal to
     C*           @YES so a new record is created; if auto reset is
     C*           not used, $NEWNL is left equal @NO so the existing
     C*           record is updated, and a new record is not added.
     C*           $MATCH is set = @YES and the loop is exited.
     C*
     C*        d. If the cent/fy combo that was passed in to the
     C*           program is EQUAL that of the record read from the
     C*           file, you have a perfect match, and the next
     C*           number value is used from that record.  The var
     C*           $MATCH is set = @YES, and the loop is exited.
     C*
     C*     After a sutiable record has been found, or new values
     C*     for the record have been initialized, the record is
     C*     updated/written to the F00021 file, and the var PSNBR
     C*     is updated for further processing in the program.
     C*
     C*
     CSR   S002A         BEGSR
     C*          -----     -----
     C*
DBN  CSR                 MOVE      @NO           $MATCH            1
DBN  CSR                 MOVE      @NO           $NEWNL            1
DBN  CSR                 MOVE      @YES          $OPER             1
     C*
B1   CSR   $MATCH        DOUEQ     @YES
     C*
     CSR   NLKY01        SETGT     I00021
     CSR   NLKY02        READPE    I00021                                 82
     C*
B2   CSR                 SELECT
     C*
     C*    See para 3, section a in the NOTES section.
     C*
W2   CSR   *IN82         WHENEQ    *ON
     C*
B3   CSR   GCNNO         IFEQ      '1'
     CSR                 MOVE      *ZEROS        NLCTRY
     CSR                 MOVE      *ZEROS        NLFY
     CSR                 MOVE      $KCO          NLKCO
     CSR                 MOVE      $DCT          NLDCT
     CSR                 MOVE      *BLANKS       NLSMAS
     CSR                 MOVE      *ZEROS        NLAUR
     CSR                 MOVE      *BLANKS       NLIMB
     CSR                 MOVE      *BLANKS       NLCK01
     CSR                 Z-ADD     1             NLN001
     CSR                 Z-ADD     *ZERO         NLSEQ
DBN  CSR                 MOVE      @YES          $NEWNL
DBN  CSR                 MOVE      @YES          $OPER
     C*
X3   CSR                 ELSE
     C*
     CSR                 EXSR      S002B
DBN  CSR                 MOVE      @NO           $OPER
E3   CSR                 ENDIF
     C*
DBN  CSR                 MOVE      @YES          $MATCH
     C*
     C*    See para 3, section b in the NOTES section.
     C*
W2   CSR   NLSMAS        WHENNE    *BLANKS
     CSR                 MOVE      NLSMAS        $DCT
     CSR                 ITER
     C*
     C*    See para 3, section c in the NOTES section.
     C*
W2   CSR   PSYEAR        WHENNE    NLYEAR
B3   CSR   NLAUR         IFNE      *ZERO
DBN  CSR                 MOVE      @YES          $NEWNL
     CSR                 MOVE      $CTRY         NLCTRY
     CSR                 MOVE      $FY           NLFY
     CSR                 Z-ADD     NLAUR         NLN001
E3   CSR                 ENDIF
DBN  CSR                 MOVE      @YES          $MATCH
     C*
     C*    See para 3, section d in the NOTES section.
     C*
W2   CSR   PSYEAR        WHENEQ    NLYEAR
DBN  CSR                 MOVE      @YES          $MATCH
     C*
E2   CSR                 ENDSL
E1   CSR                 ENDDO
     C*
     C*    Write a new or update an existing record in the F00021
     C*      file.  PSNBR now has the new next number.
     C*
B1   CSR   $OPER         IFEQ      @YES
     CSR                 Z-ADD     NLN001        PSNBR
     CSR                 ADD       1             NLN001
     C*
B2   CSR   $INQ          IFEQ      '1'
     CSR   *LOVAL        SETLL     I00021
X3   CSR                 ELSE
     C*
B3   CSR   $NEWNL        IFEQ      @YES
     CSR                 WRITE     I00021
X3   CSR                 ELSE
     CSR                 UPDATE    I00021
     C*
E3   CSR                 ENDIF
E2   CSR                 ENDIF
E1   CSR                 ENDIF
     C*
     CSR   E002A         ENDSR
     C*
     C*****************************************************************
     C*
     C*    SUBROUTINE S002B  - Assign Next Number from regular file
     C*    ---------------------------------------------------------
     C*
     C*    Processing:
     C*                 1.  Retrieve next number record from regular
     C*                      next number file
     C*
     CSR   S002B         BEGSR
     C*          -----     -----
     C*
B1   CSR   PSIDX         CASEQ     *BLANKS       S001
E1   CSR                 ENDCS
     C*
     C*    Since there are ten possible numbers that can be accessed,
     C*    the index field must be initialized with a 1 - 10.
     C*    The resulting number is returned to the calling program.
     C*
     CSR                 MOVE      *LOVAL        DSBIN
     CSR                 MOVE      PSIDX         $NBR2             2 0
     CSR                 Z-ADD     $NBR2         #G
     C*
B1   CSR   #G            IFLT      1
     CSR   #G            ORGT      10
     CSR                 Z-ADD     1             #G
E1   CSR                 ENDIF
     C*
     CSR                 SETOFF                                       8182
     CSR   NNSY          CHAIN     I0002                              8199
     C*
     C*    If no record found, default system to '01', index to 01
     C*
B1   CSR   *IN81         IFEQ      '1'
     CSR                 Z-ADD     1             #G
     CSR   '01  '        CHAIN     I0002                              8299
E1   CSR                 ENDIF
     C*
     C*    If record locked, error
     C*
B1   CSR   *IN99         IFEQ      '1'
     CSR                 MOVE      '1'           $ERTST
     CSR                 GOTO      E002B
     C*                    ---- -----
E1   CSR                 ENDIF
     C*
B1   CSR   *IN81         IFEQ      '1'
     CSR   *IN82         ANDEQ     '1'
     CSR                 MOVE      '1'           $ERTST
     CSR                 GOTO      E002B
     C*                    ---- -----
E1   CSR                 ENDIF
     C*---------------------------------------------------------------
     C*
     C*    Retrieve value based on index
     C*
     CSR                 MOVE      @NN(#G)       PSNBR             8 0
     CSR                 ADD       1             @NN(#G)
     C*
     C*    If retrieved value is zero, then increment to one
     C*
B1   CSR   PSNBR         IFEQ      *ZERO
     CSR                 Z-ADD     1             PSNBR
     CSR                 ADD       1             @NN(#G)
E1   CSR                 ENDIF
     C*---------------------------------------------------------------
     C*
     C*    Update next numbers file
     C*
B1   CSR   $INQ          IFNE      '1'
     CSR                 UPDATE    I0002                                83      UPDATE
X1   CSR                 ELSE
     CSR   *LOVAL        SETLL     I0002
E1   CSR                 ENDIF
     C*
     CSR   E002B         ENDSR
     C*
     C*****************************************************************
     C*
     C*    SUBROUTINE S002C  - Calculate the Check Digit.
     C*    --------------------------------------------------
     C*
     C*    Processing:
     C*                 1.  Calc the check digit.
     C*
     CSR   S002C         BEGSR
     C*          -----     -----
     C*
     C*    Calculate check digit.  (NLCK01 is from next numbers by
     C*    company file)
     C*
B1   CSR   @NC(#G)       IFEQ      'Y'
     CSR   @NC(#G)       OREQ      '1'
     CSR   NLCK01        OREQ      'Y'
     CSR   NLCK01        OREQ      '1'
     CSR                 MOVE      PSNBR         #WRK8             8
     CSR                 MOVEA     #WRK8         @DG
     CSR                 Z-ADD     256           #MLT              3 0
     CSR                 Z-ADD     1             #A
     CSR                 Z-ADD     0             #TOTAL            5 0
     C*
B2   CSR   #MLT          DOWGT     1
     CSR                 MOVE      @DG(#A)       #NBR1             1 0
     CSR   #NBR1         MULT      #MLT          #NBR5             5 0
     CSR                 ADD       #NBR5         #TOTAL
     CSR                 DIV       2             #MLT
     CSR                 ADD       1             #A
E2   CSR                 ENDDO
     C*
     CSR                 DIV       11            #TOTAL
     CSR                 MVR                     #TOTAL
     CSR   11            SUB       #TOTAL        #TOTAL
     CSR                 MOVE      #TOTAL        #CKDG             1 0
     CSR                 MOVEL     PSNBR         #WRK9             9
     CSR                 MOVE      #CKDG         #WRK9
     CSR                 MOVE      #WRK9         PSNBR
     C*
E1   CSR                 ENDIF
     C*
     CSR   E002C         ENDSR
     C*
     C*****************************************************************
     C*
     C*    SUBROUTINE S003   - Determine if invoice is unique
     C*    --------------------------------------------------
     C*
     C*    Processing:
     C*                 1.  Determine if invoice is unique
     C*
     CSR   S003          BEGSR
     C*          ----      -----
     C*
     C*    Open invoice ledger
     C*
B1   CSR   $0311         IFEQ      *BLANKS
     CSR                 MOVE      '1'           $0311             1
E1   CSR                 ENDIF
     C*
     C*    Determine if record exists
     C*
     CSR                 MOVE      PSNBR         RPDOC
     CSR                 MOVE      $DCT          RPDCT
     CSR                 MOVE      $KCO          RPKCO
     CSR                 MOVEL     'A71   '      @@FMT
     CSR                 MOVEL     'RPKY04'      @@KLST
     CSR                 MOVEL     'SETLL'       @@OPER
     CSR                 Z-ADD     3             @@KNUM
     CSR                 CALL      'XF0311'
     C*                    ---- --------
     CSR                 PARM                    PS@@1
     CSR                 PARM                    I0311
     CSR   @@IOR         COMP      'EQ'                                   85
B1   CSR   *IN85         IFEQ      '0'
DBN  CSR                 MOVE      @YES          $OKAY
E1   CSR                 ENDIF
     C*
     CSR   E003          ENDSR
     C*
     C*****************************************************************
     C*
     C*    SUBROUTINE S004   - Determine if voucher is unique
     C*    --------------------------------------------------
     C*
     C*    Processing:
     C*                 1.  Determine if voucher is unique
     C*
     CSR   S004          BEGSR
     C*          ----      -----
     C*
     C*    Open voucher ledger
     C*
B1   CSR   $0411         IFEQ      *BLANKS
     CSR                 MOVE      '1'           $0411             1
     C*R                 OPEN      F0411LE
     C                   OPEN      E10411LE
E1   CSR                 ENDIF
     C*
     C*    Determine if record exists
     C*
     CSR   RPKY04        SETLL     I0411LE                                85
B1   CSR   *IN85         IFEQ      '0'
DBN  CSR                 MOVE      @YES          $OKAY
E1   CSR                 ENDIF
     C*
     CSR   E004          ENDSR
     C*
     C*****************************************************************
     C*
     C*    SUBROUTINE S009   - Determine if journal is unique
     C*    --------------------------------------------------
     C*
     C*    Processing:
     C*                 1.  Determine if journal is unique
     C*
     CSR   S009          BEGSR
     C*          ----      -----
     C*
     C*    Open general ledger
     C*
B1   CSR   $0911         IFEQ      *BLANKS
     CSR                 MOVE      '1'           $0911             1
     C*R                 OPEN      F0911LA
     C                   OPEN      E10911LA
E1   CSR                 ENDIF
     C*
     C*    Determine if record exists
     C*
     C*R   GLKY09        SETLL     I0911                                  85
     C     GLKY09        SETLL     I0911LA                                85
B1   CSR   *IN85         IFEQ      '0'
DBN  CSR                 MOVE      @YES          $OKAY
E1   CSR                 ENDIF
     C*
     CSR   E009          ENDSR
     C*
     C*****************************************************************
     C*
     C*    SUBROUTINE S999   - Job Entry Tasks.
     C*    --------------------------------------------------
     C*
     C*    Processing:
     C*                 1.  Accept and set up parms
     C*                 2.  Define KLIST's
     C*                 3.  Initialize variables
     C*
     C*    Passed Parameter Data Elements:
     C*        1.  System code           - PSSY
     C*        2.  Next Number Index     - PSIDX
     C*        3.  Next Number           - PSNBR
     C*        4.  Document Type         - PSDCT
     C*        5.  Inquiry only flag     - PSINQ
     C*        6.  Key Company           - PSKCO
     C*        7.  Century               - PSCTRY
     C*        8.  Fiscal Year           - PSFY
     C*
     CSR   S999          BEGSR
     C*          ----      -----
     C*
     CSR   *ENTRY        PLIST
     CSR                 PARM                    PSSY              4
     CSR                 PARM                    PSIDX             2
     CSR                 PARM                    PSNBR             8 0
     CSR                 PARM                    PSDCT             2
     CSR                 PARM                    PSINQ             1
     CSR                 PARM                    PSKCO             5
     CSR                 PARM                    PSCTRY            2 0
     CSR                 PARM                    PSFY              2 0
     C*
     C*    If no parameters, bypass all processing.
     C*
     CSR   ##PARM        CABEQ     0             E999
     C*                    -----          ----
     C*---------------------------------------------------------------
     C*
     C*    Set up all KLIST's for the program.
     C*
     C*    Invoice ledger
     C*
     CSR   RPKY03        KLIST
     CSR                 KFLD                    PSNBR
     CSR                 KFLD                    $DCT
     CSR                 KFLD                    $KCO
     C*
     C*    Voucher ledger
     C*
     CSR   RPKY04        KLIST
     CSR                 KFLD                    PSNBR
     CSR                 KFLD                    $DCT
     CSR                 KFLD                    $KCO
     C*
     C*    General ledger
     C*
     CSR   GLKY09        KLIST
     CSR                 KFLD                    $DCT
     CSR                 KFLD                    PSNBR
     CSR                 KFLD                    $KCO
     C*
     C*    Next Numbers by Company
     C*
     CSR   NLKY02        KLIST
     CSR                 KFLD                    $KCO
     CSR                 KFLD                    $DCT
     C*
     CSR   NLKY01        KLIST
     CSR                 KFLD                    $KCO
     CSR                 KFLD                    $DCT
     CSR                 KFLD                    $CTRY
     CSR                 KFLD                    $FY
     C*
     C*---------------------------------------------------------------
     C*
     C*    Initialize values
     C*
     CSR                 CLEAR                   I0002
     CSR                 Z-ADD     *ZEROS        PSNBR
     CSR                 MOVE      ' '           $ERTST            1
     CSR                 MOVEL     PSSY          NNSY
DBN  CSR                 MOVE      @NO           $OKAY             1
     CSR                 MOVEA     *BLANKS       @NC
     CSR                 MOVEA     *ZEROS        @NN
     CSR                 MOVEA     *BLANKS       @DG
     CSR                 CLEAR                   I00021
     C*
     C*---------------------------------------------------------------
     C*
     C*    Load inquiry only flag from parameter
     C*
     CSR                 MOVEL     *BLANKS       $INQ              1
B1   CSR   ##PARM        IFGE      5
     CSR                 MOVEL     PSINQ         $INQ
E1   CSR                 ENDIF
     C*---------------------------------------------------------------
     C*
     C*    Load/Validate document type from parameter
     C*
     CSR                 MOVEL     *BLANKS       $DCT              2
     C*
B1   CSR   ##PARM        IFGE      6
     C*
     CSR                 MOVEL     PSDCT         $DCT
     CSR                 MOVE      $DCT          #UKY
     CSR                 MOVEL     '00'          #USY
     CSR                 MOVEL     'DT'          #URT
     C*
     CSR                 CALL      'X0005 '                             81
     C*                    ---- --------
     CSR                 PARM                    I0005U
     C*
     CSR                 MOVE      #UERR         *IN81
B2   CSR   *IN81         IFEQ      '1'
     CSR                 MOVE      '1'           $ERTST
E2   CSR                 ENDIF
E1   CSR                 ENDIF
     C*---------------------------------------------------------------
     C*
     C*    Retrieve system requirements if key company is sent
     C*
     CSR                 MOVE      *BLANKS       GCNNO
B1   CSR   ##PARM        IFGE      6
B2   CSR   $0009         IFEQ      *BLANKS
     CSR                 CLEAR                   $$NNO
     C*R                 OPEN      F0009                                82
     C                   OPEN      E10009L1                             82
B3   CSR   *IN82         IFEQ      '0'
     CSR                 MOVE      '1'           $0009             1
     C*R   *BLANKS       CHAIN     I0009                              81
     C     *BLANKS       CHAIN     I0009L1                            81
     CSR                 MOVE      GCNNO         $$NNO
E3   CSR                 ENDIF
E2   CSR                 ELSE
     CSR                 MOVE      $$NNO         GCNNO
E2   CSR                 ENDIF
     C*
E2   CSR   *LIKE         DEFINE    GCNNO         $$NNO
     C*
     C*    Open next numbers by company file
     C*
B2   CSR   GCNNO         IFNE      ' '
     CSR   $0021         ANDEQ     *BLANKS
     CSR                 OPEN      F00021                               82
     C*
     C*    If file not open set to regular next numbers
     C*
B3   CSR   *IN82         IFEQ      '1'
     CSR                 MOVE      ' '           GCNNO
X3   CSR                 ELSE
     CSR                 MOVE      '1'           $0021             1
E3   CSR                 ENDIF
E2   CSR                 ENDIF
E1   CSR                 ENDIF
     C*
B1   CSR   GCNNO         IFEQ      '0'
     CSR                 MOVE      ' '           GCNNO
E1   CSR                 ENDIF
     C*
     C*---------------------------------------------------------------
     C*
     C*    Default index based on document type if not using next
     C*    numbers by company/fy
     C*
B1   CSR   GCNNO         IFEQ      *BLANKS
     CSR   PSIDX         ANDEQ     *BLANKS
B2   CSR   $DCT          IFNE      *BLANKS
     CSR                 EXSR      S001
X2   CSR                 ELSE
B3   CSR   PSSY          IFEQ      '09  '
     CSR                 EXSR      S001
E3   CSR                 ENDIF
E2   CSR                 ENDIF
E1   CSR                 ENDIF
     C*---------------------------------------------------------------
     C*
     C*    Load key company from parameter
     C*
     CSR                 MOVEL     *BLANKS       $KCO              5
B1   CSR   ##PARM        IFGE      6
     CSR                 MOVEL     PSKCO         $KCO
E1   CSR                 ENDIF
     C*---------------------------------------------------------------
     C*
     C*    Load century from parameter
     C*
     CSR                 MOVEL     *ZEROS        $CTRY             2 0
B1   CSR   ##PARM        IFGE      7
     CSR                 MOVE      PSCTRY        $CTRY
E1   CSR                 ENDIF
     C*---------------------------------------------------------------
     C*
     C*    Load fiscal year from parameter
     C*
     CSR                 MOVEL     *ZEROS        $FY               2 0
B1   CSR   ##PARM        IFGE      8
     CSR                 MOVE      PSFY          $FY
E1   CSR                 ENDIF
     C*
     C*---------------------------------------------------------------
     C*
     C*    Since there are ten possible numbers that can be accessed,
     C*    the index field must be initialized with a 1 - 10.
     C*    The resulting number is returned to the calling program.
     C*
     CSR                 MOVE      *LOVAL        DSBIN
     CSR                 MOVE      PSIDX         $NBR2             2 0
     CSR                 Z-ADD     $NBR2         #G
     C*
B1   CSR   #G            IFLT      1
     CSR   #G            ORGT      10
     CSR                 Z-ADD     1             #G
E1   CSR                 ENDIF
     C*
     CSR   E999          ENDSR
