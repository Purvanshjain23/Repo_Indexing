      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP411
      * TITLE:       SPECIFY GROUP SOURCE REPORT OPTIONS
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     12/16/99
      *
      * FUNCTION: ALLOWS USER TO GENERATE A REPORT OF THE SOURCE GROUPS
      *           THAT HAVE FED INTO THE GROUP.  THIS FUNCTION
      *           SUBMITS HP411CL AND PASSES SELECTION IN LDA.
      *
      *           THIS PROGRAM IS CALLED AS A MENU OPTION.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/03/00  LeAnne Fedor
      *           Removed print options (hold, copies, outque, etc.) from screen
      *           and replaced them with a function key that calls the pop-up
      *           window of print options.
      *
      * 02/14/01  LeAnne Fedor
      *           In preparation for allowing groups on a single farm to have different
      *           production types, we changed the edit for a farm.  The production type
      *           of a selected farm no longer has to "match" the production type that
      *           the user may have keyed on the screen.
      *
      * 07/25/01  LeAnne Fedor
      *           Added 'group type' as a selector.
      *
      * 07/18/02  LeAnne Fedor
      *           In preparation for allowing groups on a single farm to have different
      *           production phases, we changed the edit for a farm.  The production phase
      *           of a selected farm no longer has to "match" the production phase that
      *           the user may have keyed on the screen.
      *
      * 12/17/03  LeAnne Fedor
      *           Added 'from/to closed date range' as a new selector.
      *
      * 11/29/07  LeAnne Rasmey
      *           Added another 'Mixed Group Option':
      *               Only select groups with mixed BGF sources
      *           (Note: The logic for determining whether a group is Mixed for this one
      *           is a little different than from all the other options.)
      *
      * 07/02/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD411    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS
      *
     FHSP010    IF   E           K DISK
      *    PRODUCTION TYPE
      *
     FHSP011    IF   E           K DISK
      *    PRODUCTION PHASE
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE
      *
     FHSP025    IF   E           K DISK
      *    GROUP TYPE
      *
     FHSP034    IF   E           K DISK
      *    HOG GROUP
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D all             c                   'A'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      *----------------------------------------------------------------
      * STANDALONE FIELDS
      *----------------------------------------------------------------
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Control fields
      *
     D termfl          s              1
      *
      *
      * Workfields
      *
     D wkfncd          s                   like(pgm)
     D wkfscd          s                   like(dffscd)
     D wkhgsn          s                   like(hghgsn)
      *
      *
      * Work fields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkccyymmdd      s              8  0
      *
      *
      * Parm fields
      *
     D xxjobq          s             10     inz('*JOBD     ')
     D xxnite          s              1     inz('N')
     D xxcopy          s              1  0
     D xxfsbo          s                   like(fsfsbo)
     D xxbods          s                   like(dfbods)
     D xxfscd          s              5
     D xxfsnm          s                   like(dffsnm)
     D xxppcd          s                   like(dfppcd)
     D xxppds          s                   like(dfppds)
     D xxptcd          s                   like(dfptcd)
     D xxptds          s                   like(dfptds)
     D xxrpfl          s                   like(dfrpfl)
     D xxrpds          s                   like(dfrpds)
     D xxmgfl          s                   like(dfmgfl)
     D xxmgds          s                   like(dfmgds)
     D xxhgcd          s                   like(dfhgcd)
     D xxgtcd          s                   like(dfgtcd)
     D xxgtds          s                   like(dfgtds)
      *
      *
     D infncd          s             10
     D inbobo          s              5
     D indvfl          s              1
     D inbofl          s              1
     D oubobo          s              5
     D oubods          s             30
     D oudvcd          s              5
     D secfl           s              1
     D oubofl          s              1
     D ourmfl          s              1
      *
      *
      *  Parms for use with QCMDEXC.  'LENGTH' is the length of the
      *  command that will be issued with QCMDEXC.  QCMDEXC requires
      *  the field containing length to be defined as 15 with 5 decimal
      *  positions.  The field 'CMDSBM' will hold the values of the
      *  submit job command when passed as a parm on the call to
      *  QCMDEXC.
      *
     D length          s             15  5 inz(80)
     D cmdsbm          s             80
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Compile time array for SBMJOB used in QCMDEXC
      *---------------------------------------------------------------
      *
     D cmd             s              1    dim(80) ctdata perrcd(80)
      *
      *
      *---------------------------------------------------------------
      *  Local data area
      *---------------------------------------------------------------
      *
     D LDA             DS
     D  LDFSBO                 1      5
     D  ldofcymd               6     13  0
     D  ldotcymd              14     21  0
     D  LDPPCD                22     26
     D  LDFSCD                27     31  0
     D  ldcfcymd              32     39  0
     D  ldctcymd              40     47  0
     D  LDPTCD                48     52
     D  LDHGSN                53     59  0
     D  ldofmdy               60     65  0
     D  ldotmdy               66     71  0
      *
     D  LDBODS                72    101
     D  LDPTDS               102    111
     D  LDPPDS               112    141
     D  LDFSNM               142    166
     D  LDHGCD               167    173
      *
     D  LDRPFL               174    174
     D  LDRPDS               175    181
      *
     D  LDMGFL               182    182
     D  LDMGDS               183    223
      *
     D  LDGTCD               224    224
     D  LDGTDS               225    239
      *
     D  ldcfmdy              240    245  0
     D  ldctmdy              246    251  0
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412  0
     D  LDOUTQ               413    422
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C     $SET1         BEGSR
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP411K1
     C                   WRITE     HP411EC
     C                   EXFMT     HP411R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     *IN12         OREQ      *ON                                          F12-PREVIOUS
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
      * Print options
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C     LDCOPY        PARM      LDCOPY        XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'QEZOUTPT'                                       API
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
     C     *IN04         IFEQ      *ON                                          IF PROMPT
     C                   EXSR      $F4S1
     C                   ENDIF                                                  IF PROMPT
      *
      * ALWAYS CHECK SECURITY FOR BUSINESS OFFICE
      *
     C                   MOVEL(P)  'HP411'       WKFNCD
     C                   EXSR      $CHKBO
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * Validate the following required entries:
      *  1) summary/detail report
      *  2) mixed group option
      *
     C                   exsr      $rpfl
     C                   exsr      $mgfl
      *
      * Validate that user HAS NOT entered both an OPEN date range and a
      * CLOSED date range.
      *
     C                   if        (dfcfmdy <> 0 or dfctmdy <> 0) and
     C                             (dfofmdy <> 0 or dfotmdy <> 0)
     C                   seton                                        3241
     C                   seton                                        3039
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09067'
     C                   endif
     C                   endif
      *
      * Validate from and to 'closed' dates (if entered)
      *
     C                   z-add     0             ldcfmdy
     C                   z-add     0             ldctmdy
      *
     C                   select
     C                   when      dfcfmdy = 0 and dfctmdy = 0
     C                   other
     C                   exsr      $cfmdy
     C                   exsr      $ctmdy
     C                   endsl
      *
      * Validate from and to 'open' dates (if entered)
      *
     C                   z-add     0             ldofmdy
     C                   z-add     0             ldotmdy
      *
     C                   select
     C                   when      dfofmdy = 0 and dfotmdy = 0
     C                   other
     C                   exsr      $ofmdy
     C                   exsr      $otmdy
     C                   endsl
      *
      *
      *
      * Validate the following optional entries
      *   1) Production type
      *   2) Production phase
      *   3) Farm site
      *   4) Hog group
      *
     C                   MOVE      *BLANK        DFPTDS
     C     DFPTCD        IFNE      *BLANK
     C                   exsr      $ptcd
     C                   ENDIF
      *
     C                   MOVE      *BLANK        DFPPDS
     C     DFPPCD        IFNE      *BLANK
     C                   exsr      $ppcd
     C                   ENDIF
      *
     C                   MOVE      *BLANK        DFFSNM
     C     DFFSCD        IFNE      0
     C                   EXSR      $fscd
     C                   ENDIF
      *
     C                   MOVE      *BLANK        DFGTDS
     C     DFGTCD        IFNE      *BLANK
     C                   EXSR      $gtcd
     C                   ENDIF
      *
     C                   Z-ADD     0             WKHGSN
     C     DFHGCD        IFNE      *BLANK
     C                   EXSR      $hgcd
     C                   ENDIF
      *
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C     *IN44         IFEQ      *OFF                                         IF NO F8
     C                   SETON                                        44
     C                   ELSE
     C     *IN08         IFEQ      *ON                                          IF F8=SBMJOB
     C                   EXSR      $PROC1
     C                   ENDIF                                                  IF F8=SBMJOB
     C                   ENDIF                                                  IF NO F8
     C                   ELSE
     C                   SETOFF                                       44
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * Validate 'open' from date
      *----------------------------------------------------------------
      *
     C     $ofmdy        begsr
      *
     C                   select
     C                   when      dfofmdy <> 0 and dfhgcd <> *blank
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09112'     MGID(E)
     C                   ENDIF
      *
     C                   when      dfofmdy = 0 and dfhgcd <> *blank
      *
     C                   when      dfotmdy <> 0 and dfofmdy = 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09088'     MGID(E)
     C                   ENDIF
      *
     C                   when      dfofmdy = 0
     C                   SETON                                        32
     C                   if        error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09091'     MGID(E)
     C                   ENDIF
     C                   OTHER
      *
      * Is this a valid date?
      *
     C     *mdy          test(d)                 dfofmdy                92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      dfofmdy       wkisodate
     C                   move      wkisodate     wkccyymmdd
     C                   z-add     wkccyymmdd    ldofcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Open 'to' date
      *----------------------------------------------------------------
      *
     C     $otmdy        begsr
      *
     C                   select
      *
     C                   when      dfotmdy = 0 and dfhgcd <> *blank
      *
     C                   when      dfotmdy <> 0 and dfhgcd <> *blank
     C                   SETON                                        41
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09112'     MGID(E)
     C                   ENDIF
      *
     C                   when      dfofmdy <> 0 and dfotmdy = 0
     C                   seton                                        41
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09089'     MGID(E)
     C                   ENDIF
      *
     C                   when      dfofmdy <> 0 and dfotmdy = 0
     C                   seton                                        41
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09090'     MGID(E)
     C                   ENDIF
     C                   other
      *
      * Is this a valid date?
      *
     C     *mdy          test(d)                 dfotmdy                92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        41
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      dfotmdy       wkisodate
     C                   move      wkisodate     wkccyymmdd
     C                   z-add     wkccyymmdd    ldotcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
      *
      * VERIFY THAT THE "TO" DATE IS NOT EARLIER THAN THE "FROM" DATE
      *
     C                   if        *in32 = *off and *in41 = *off and            IF EARLIER
     C                             dfofmdy <> 0 and dfotmdy <> 0 and
     C                             ldotcymd < ldofcymd
     C                   SETON                                        41
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09009'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF EARLIER
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate 'closed' from date
      *----------------------------------------------------------------
      *
     C     $cfmdy        begsr
      *
     C                   select
     C                   when      dfcfmdy <> 0 and dfhgcd <> *blank
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09112'     MGID(E)
     C                   ENDIF
      *
     C                   when      dfcfmdy = 0 and dfhgcd <> *blank
      *
     C                   when      dfctmdy <> 0 and dfcfmdy = 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09088'     MGID(E)
     C                   ENDIF
      *
     C                   when      dfcfmdy = 0
     C                   SETON                                        30
     C                   if        error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09091'     MGID(E)
     C                   ENDIF
     C                   OTHER
      *
      * Is this a valid date?
      *
     C     *mdy          test(d)                 dfcfmdy                92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      dfcfmdy       wkisodate
     C                   move      wkisodate     wkccyymmdd
     C                   z-add     wkccyymmdd    ldcfcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Closed 'to' date
      *----------------------------------------------------------------
      *
     C     $ctmdy        begsr
      *
     C                   select
      *
     C                   when      dfctmdy = 0 and dfhgcd <> *blank
      *
     C                   when      dfctmdy <> 0 and dfhgcd <> *blank
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09112'     MGID(E)
     C                   ENDIF
      *
     C                   when      dfcfmdy <> 0 and dfctmdy = 0
     C                   seton                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09089'     MGID(E)
     C                   ENDIF
      *
     C                   when      dfcfmdy <> 0 and dfctmdy = 0
     C                   seton                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09090'     MGID(E)
     C                   ENDIF
     C                   other
      *
      * Is this a valid date?
      *
     C     *mdy          test(d)                 dfctmdy                92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      dfctmdy       wkisodate
     C                   move      wkisodate     wkccyymmdd
     C                   z-add     wkccyymmdd    ldctcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
      *
      * VERIFY THAT THE "TO" DATE IS NOT EARLIER THAN THE "FROM" DATE
      *
     C                   if        *in30 = *off and *in39 = *off and            IF EARLIER
     C                             dfcfmdy <> 0 and dfctmdy <> 0 and
     C                             ldctcymd < ldcfcymd
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09009'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF EARLIER
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate production type
      *----------------------------------------------------------------
      *
     C     $ptcd         begsr
      *
     C     DFPTCD        CHAIN     HSP010                             95
     C     *IN95         IFEQ      *OFF                                         IF GOOD TYPE
     C                   MOVEL     PTPTDS        DFPTDS
     C                   ELSE
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00180'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPTCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD TYPE
      *
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate production phase
      *----------------------------------------------------------------
      *
     C     $ppcd         begsr
      *
     C                   select
     C                   when      dfppcd = 'BGF  '
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00392'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   endif
     C                   other
      *
     C     DFPPCD        CHAIN     HSP011                             91
     C     *IN91         IFEQ      *OFF                                         IF GOOD
     C                   MOVEL     PPPPDS        DFPPDS
     C                   ELSE
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00170'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD
     C                   ENDSL
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate summary/detail report selection
      *----------------------------------------------------------------
      *
     C     $rpfl         BEGSR
      *
     C                   MOVE      *BLANK        DFRPDS
      *
     C     DFRPFL        IFNE      'S'                                          IF WRONG
     C     DFRPFL        ANDNE     'D'
     C                   SETON                                        42
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00454'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   SELECT
     C     DFRPFL        WHENEQ    'S'
     C                   MOVEL(P)  'Summary'     DFRPDS
      *
     C     DFRPFL        WHENEQ    'D'
     C                   MOVEL(P)  'Detail'      DFRPDS
     C                   ENDSL
     C                   ENDIF                                                  IF WRONG
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * Validate mixed group option
      *----------------------------------------------------------------
      *
     C     $mgfl         BEGSR
      *
     C                   MOVE      *BLANK        DFMGDS
     C                   MOVE      *BLANK        DFMGDS2
      *
     C                   SELECT
     C     DFMGFL        WHENEQ    'I'
     C                   eval      dfmgds =
     C                             'Include mixed groups on report'
      *
     C     DFMGFL        WHENEQ    'O'
     C                   eval      dfmgds =
     C                             'Omit mixed groups from report'
      *
     C     DFMGFL        WHENEQ    'S'
     C                   eval      dfmgds =
     C                             'Select mixed groups only'
      *
     C     DFMGFL        WHENEQ    'B'
     C                   eval      dfmgds =
     C                             'Only select groups with mixed BGF sources'
     C                   eval      dfmgds2 =
     C                             'GDU/BOAR Farms excluded from the +
     C                              MIX decision.'
     C                   OTHER
      *
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00891'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * Validate farm site
      *---------------------------------------------------------------
      *
     C     $fscd         BEGSR
      *
     C     DFFSCD        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *ON                                          IF BAD FARM
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00131'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
     C                   MOVEL     FSFSNM        DFFSNM
      *
      * Farm cannot be a BGF farm
      *
     C                   if        fsppcd = 'BGF  '
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09092'
     C                   endif
     C                   endif
      *
      * FARM B.O. AND SCREEN B.O. MUST MATCH
      *
     C     FSFSBO        IFNE      DFFSBO                                       IF BUS OFF
     C     DFFSBO        ANDNE     *BLANK
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00158'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     FSFSBO        MGW(6)
     C                   MOVEA     DFFSBO        MGW(11)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BUS OFF
      *
     C                   ENDIF                                                  IF BAD FARM
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * Validate group type
      *----------------------------------------------------------------
      *
     C     $GTCD         BEGSR
      *
     C     DFGTCD        CHAIN     HSP025                             92
     C     *IN92         IFEQ      *OFF                                         IF OK TYPE
     C                   MOVEL     GTGTDS        DFGTDS
     C                   ELSE
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00137'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFGTCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF OK TYPE
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * Validate hog group
      *---------------------------------------------------------------
      *
     C     $hgcd         BEGSR
      *
     C     DFHGCD        CHAIN     HSP034                             93
     C     *IN93         IFEQ      *ON                                          IF BAD GROUP
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00261'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
     C                   Z-ADD     HGHGSN        WKHGSN
      *
      * Group cannot be a BGF group
      *
     C                   if        hgppcd = 'BGF  '
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09093'
     C                   endif
     C                   endif
      *
      * CHECK FOR MATCH ON BUSINESS OFFICE
      *
     C     HGFSBO        IFNE      DFFSBO                                       IF DIFF B/O
     C     DFFSBO        ANDNE     *BLANK
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00459'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     HGFSBO        MGW(8)
     C                   MOVEA     DFFSBO        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF DIFF B/O
      *
      * THE GROUP'S PRODUCTION TYPE MUST MATCH THE ONE KEYED
      * BY THE USER.
      *
     C     HGPTCD        IFNE      DFPTCD                                       IF DIFF PT
     C     DFPTCD        ANDNE     *BLANK
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00463'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     HGPTCD        MGW(8)
     C                   MOVEA     DFPTCD        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF DIFF PT
      *
      * THE GROUP'S PRODUCTION PHASE MUST MATCH THE ONE KEYED
      * BY THE USER.
      *
     C     HGPPCD        IFNE      DFPPCD                                       IF DIFF PP
     C     DFPPCD        ANDNE     *BLANK
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00462'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     HGPPCD        MGW(8)
     C                   MOVEA     DFPPCD        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF DIFF PP
      *
      * THE GROUP'S FARM SITE MUST MATCH THE ONE KEYED
      * BY THE USER.
      *
     C     HGFSCD        IFNE      DFFSCD                                       IF DIFF FARM
     C     DFFSCD        ANDNE     0
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00468'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVE      HGFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(8)
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF DIFF FARM
      *
      * THE GROUP'S GROUP TYPE MUST MATCH THE ONE KEYED
      * BY THE USER.
      *
     C     HGGTCD        IFNE      DFGTCD                                       IF DIFF PT
     C     DFGTCD        ANDNE     *BLANK
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00458'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     HGGTCD        MGW(8)
     C                   MOVEA     DFGTCD        MGW(9)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF DIFF PT
     C                   ENDIF                                                  IF BAD GROUP
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
      * THIS SUBROUTINE IS ONLY EXECUTED IF THE USER SUBMITTED A REPORT
      *
     C     $PROC1        BEGSR
      *
      * MOVE DISPLAY FILE FIELDS INTO LDA
      *
     C                   MOVEL     DFFSBO        LDFSBO
     C                   MOVEL     DFBODS        LDBODS
     C                   MOVEL     DFPTCD        LDPTCD
     C                   MOVEL     DFPTDS        LDPTDS
     C                   MOVEL     DFPPCD        LDPPCD
     C                   MOVEL     DFPPDS        LDPPDS
     C                   Z-ADD     DFFSCD        LDFSCD
     C                   MOVEL     DFFSNM        LDFSNM
     C                   MOVEL     DFRPFL        LDRPFL
     C                   MOVEL     DFRPDS        LDRPDS
     C                   MOVEL     DFMGFL        LDMGFL
     C                   MOVEL     DFMGDS        LDMGDS
      *
     C                   Z-ADD     WKHGSN        LDHGSN
     C                   MOVEL     DFHGCD        LDHGCD
     C                   MOVEL     DFGTCD        LDGTCD
     C                   MOVEL     DFGTDS        LDGTDS
     C                   Z-ADD     dfofmdy       ldofmdy
     C                   Z-ADD     dfotmdy       ldotmdy
     C                   Z-ADD     dfcfmdy       ldcfmdy
     C                   Z-ADD     dfctmdy       ldctmdy
      *
     C                   OUT       LDA
      *
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO A
      * 80-CHARACTER FIELD FOR SUBMITTING HP411CL TO QCMDEXC.
      *
     C                   MOVEA     XXJOBQ        CMD(50)
     C                   MOVEA     CMD           CMDSBM
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * CHECK THE BUSINESS OFFICE ENTERED AS A RESTRICTOR
      *----------------------------------------------------------------
      *
      * THE BUSINESS OFFICE ENTERED MUST:
      *    BE A VALID OFFICE IN THE BUSINESS OFFICE MASTER
      *    HAVE A SECURITY LOCATION TO WHICH THE USER IS AUTHORIZED
      *
     C     $CHKBO        BEGSR
      *
      * SET THE 'VALIDATE B.O.' FLAG DEPENDING ON WHETHER THE
      * USER LEFT B.O. BLANK TO GET ALL BUSINESS OFFICES OR ENTERED
      * A SPECIFIC OFFICE.
      *
     C     DFFSBO        IFEQ      *BLANK
     C                   MOVEL     ALL           INBOFL
     C                   ELSE
     C                   MOVEL     YES           INBOFL
     C                   ENDIF
      *
      * CHECK THE USER'S SECURITY TO THIS BUSINESS OFFICE.
      * SET INDVFL TO YES TO TELL SECURITY PROGRAM TO COMPARE THE
      * FUNCTION DIVISION CODE TO THE B.O. DIVISION CODE.
      *
     C                   MOVEL     YES           INDVFL
     C                   EXSR      $SEC
     C                   MOVEL     NO            INDVFL
      *
     C                   MOVEL     OUBODS        DFBODS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVEL     DFFSBO        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD                         FUNC CODE
     C                   PARM                    INBOBO                         BO CODE
     C                   PARM                    INDVFL                         CHECK DIV?
     C                   PARM                    INBOFL                         CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO                         BO CODE
     C                   PARM                    OUBODS                         BO DESC.
     C                   PARM                    OUDVCD                         DIV CODE
     C                   PARM                    SECFL                          SEC FLAG
     C                   PARM                    OUBOFL                         BO ERRFLG
     C                   PARM                    OURMFL
      *
     C     OUBOFL        IFEQ      YES
     C                   SETON                                        31
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * BUSINESS OFFICE
      *
     C     FLD           WHENEQ    'DFFSBO'
     C                   MOVE      *BLANK        XXFSBO
     C                   MOVE      *BLANK        XXBODS
     C                   CALL      'HP503'
     C                   PARM                    XXFSBO
     C                   PARM                    XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        51
     C     XXFSBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFSBO        DFFSBO
     C                   MOVEL     XXBODS        DFBODS
     C                   ENDIF                                                  IF SELECTED
      *
      * REPORT FLAG (Summary/detail)
      *
     C     FLD           WHENEQ    'DFRPFL'
     C                   CALL      'HP565'
     C                   PARM      *blank        XXRPFL
     C                   PARM      *blank        XXRPDS
     C                   SETON                                        52
     C     XXRPFL        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXRPFL        DFRPFL
     C                   MOVEL     XXRPDS        DFRPDS
     C                   ENDIF                                                  IF SELECTED
      *
      * Mixed group option
      *
     C     FLD           WHENEQ    'DFMGFL'
     C                   CALL      'HP5009'
     C                   PARM      *blank        XXMGFL
     C                   PARM      *blank        XXMGDS
     C                   SETON                                        53
     C     XXMGFL        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXMGFL        DFMGFL
     C                   MOVEL     XXMGDS        DFMGDS
     C                   ENDIF                                                  IF SELECTED
      *
      * PRODUCTION TYPE
      *
     C     FLD           WHENEQ    'DFPTCD'
     C                   MOVE      *BLANK        XXPTCD
     C                   MOVE      *BLANK        XXPTDS
     C                   CALL      'HP504'
     C                   PARM                    XXPTCD
     C                   PARM                    XXPTDS
     C                   SETON                                        54
     C     XXPTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPTCD        DFPTCD
     C                   MOVEL     XXPTDS        DFPTDS
     C                   ENDIF                                                  IF SELECTED
      *
      * PRODUCTION PHASE
      *
     C     FLD           WHENEQ    'DFPPCD'
     C                   MOVE      *BLANK        XXPPCD
     C                   MOVE      *BLANK        XXPPDS
     C                   CALL      'HP596'
     C                   PARM                    XXPPCD
     C                   PARM                    XXPPDS
     C                   SETON                                        55
     C     XXPPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPPCD        DFPPCD
     C                   MOVEL     XXPPDS        DFPPDS
     C                   ENDIF                                                  IF SELECTED
      *
      * FARM SITE
      *
     C     FLD           WHENEQ    'DFFSCD'
     C                   MOVEL     DFFSBO        XXFSBO
     C                   MOVE      *BLANK        WKFSCD
     C                   MOVE      *BLANK        XXFSNM
     C                   MOVEL     DFPPCD        XXPPCD
     C                   MOVEL     DFPTCD        XXPTCD
     C                   CALL      'HP551'
     C                   PARM                    XXFSBO
     C                   PARM                    WKFSCD
     C                   PARM                    XXFSNM
     C                   PARM                    XXPPCD
     C                   PARM                    XXPTCD
     C                   SETON                                        56
     C     WKFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     WKFSCD        DFFSCD
     C                   MOVEL     XXFSNM        DFFSNM
     C                   ENDIF                                                  IF SELECTED
      *
      *
      * GROUP TYPE
      *
     C     FLD           WHENEQ    'DFGTCD'
     C                   CALL      'HP531'
     C                   PARM      *BLANK        XXGTCD
     C                   PARM      *BLANK        XXGTDS
     C                   SETON                                        58
     C     XXGTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXGTCD        DFGTCD
     C                   MOVEL     XXGTDS        DFGTDS
     C                   ENDIF                                                  IF SELECTED
      *
      *
      *  HOG GROUP
      *
     C     FLD           WHENEQ    'DFHGCD'
     C                   MOVEL     DFFSBO        XXFSBO
     C                   Z-ADD     DFFSCD        WKFSCD
     C                   MOVE      *BLANK        XXHGCD
     C                   CALL      'HP585'
     C                   PARM                    XXFSBO
     C                   PARM                    WKFSCD
     C                   PARM                    XXHGCD
     C                   SETON                                        57
      *
     C     XXHGCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXHGCD        DFHGCD
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      *
      * DEFINE LDA
     C     *DTAARA       DEFINE    *LDA          LDA
     C                   IN        LDA
      *
      * Initialize LDA fields for printing
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   Z-ADD     0             LDCOPY
     C                   MOVEL     LDOUTU        LDOUTQ
      *
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        LDCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     LDCOPY        IFEQ      0
     C                   Z-ADD     1             LDCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      *
      * Defaults:
      *  1) 'summary' for the report version.
      *  2) 'select mixed groups only' for the mixed group option
      *
     C                   move      'S'           dfrpfl
     C                   MOVEL(P)  'Summary'     DFRPDS
      *
     C                   move      'S'           dfmgfl
     C                   eval      dfmgds = 'Select mixed groups only'
      *
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD
     C                   MOVEL     NO            INBOFL
     C                   EXSR      $SEC
     C                   MOVEL     YES           INBOFL
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
     C                   MOVEL     OUBOBO        DFFSBO
     C                   MOVEL     OUBODS        DFBODS
      *
      * SAVE THIS FUNCTION'S DIVISION CODE
      *
     C     *LIKE         DEFINE    OUDVCD        SVDVCD
     C                   MOVEL     OUDVCD        SVDVCD
      *
      *
      * Initialize open from/to dates
      *
     C                   Z-ADD     0             ldotmdy
     C                   Z-ADD     0             ldotcymd
     C                   Z-ADD     0             ldofmdy
     C                   Z-ADD     0             ldofcymd
      *
     C                   Z-ADD     0             ldctmdy
     C                   Z-ADD     0             ldctcymd
     C                   Z-ADD     0             ldcfmdy
     C                   Z-ADD     0             ldcfcymd
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD TABLE
SBMJOB CMD(CALL PGM(HP411CL)) JOB(SOURCRPT) JOBQ(__________)
