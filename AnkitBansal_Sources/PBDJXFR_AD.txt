// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBDJXFR
// ?Date: 14.08.2025 Time: 03:47:30
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?** Retrieve the first record for requests with zeros in co#
EXECUTE FUNCTION(RTV Co DocDflts no Co# RT) TYPE(RTVOBJ) FILE(PPAQREP)          AC2043265;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.CDD_Type);
PARAMETER(PAR.CDD_Department_Code);
PARAMETER(PAR.CDD_Name_of_Overlay);
PARAMETER(PAR.CDD_Program_Name);
PARAMETER(PAR.CDD_Printer_File_Name);
PARAMETER(PAR.CDD_Additional_Object);
PARAMETER(PAR.CDD_Sender_Phone);
PARAMETER(PAR.CDD_Sender_Fax);
PARAMETER(PAR.Output_Queue);
PARAMETER(PAR.Hold_File);
PARAMETER(PAR.Save_File);
PARAMETER(PAR.Source_Drawer);
PARAMETER(PAR.Printer_Device_Type);
PARAMETER(PAR.Page_Length_2);
PARAMETER(PAR.Page_Width_2);
PARAMETER(PAR.Page_LPI);
PARAMETER(PAR.Page_CPI);
PARAMETER(PAR.Page_Overflow);
PARAMETER(PAR.Page_Rotation);
PARAMETER(LCL.CDD_Valid_Name_1_Unused);
PARAMETER(LCL.CDD_Valid_Name_2_Unused);
PARAMETER(LCL.CDD_Valid_Name_3_Unused);
PARAMETER(LCL.CDD_Copies);
PARAMETER(LCL.CDD_Number_2_Unused_3_0);
PARAMETER(LCL.CDD_Number_3_Unused_3_0);
PARAMETER(LCL.CDD_Number_4_Unused_5_0);
PARAMETER(LCL.CDD_Number_5_Unused_5_0);
PARAMETER(PAR.CDD_Comment_1);
PARAMETER(PAR.CDD_Comment_2);
PARAMETER(PAR.CDD_Comment_3);
PARAMETER(PAR.CDD_Comment_4);
PARAMETER(PAR.CDD_Comment_5);
PARAMETER(LCL.CDD_Unused_Sts_1_1);
PARAMETER(LCL.CDD_Unused_Sts_1_2);
PARAMETER(LCL.CDD_Unused_Sts_2_1);
PARAMETER(LCL.CDD_Unused_Sts_2_2);
PARAMETER(LCL.CDD_Unused_Text_1);
PARAMETER(LCL.CDD_Unused_Text_2);
PARAMETER(LCL.CDD_Unused_Text_3);
PARAMETER(LCL.CDD_Unused_Text_4);
PARAMETER(LCL.CDD_Unused_Text_5);
PARAMETER(LCL.CDD_Unused_Date_1);
PARAMETER(LCL.CDD_Unused_Date_2);
PARAMETER(LCL.CDD_Unused_Date_3);
PARAMETER(LCL.CDD_Unused_Time_1);
PARAMETER(LCL.CDD_Unused_Time_2);
PARAMETER(LCL.CDD_Unused_Time_3);
PARAMETER(LCL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


CASE;

// IF PGM.*Return code is *Record already exists
IF PGM.*Return_code = 'Y2U0003';

QUIT;

ENDIF;

