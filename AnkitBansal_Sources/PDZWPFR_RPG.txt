     H/TITLE PRT Sls Monitor/Eval   PF Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISSMASO
     H* Date          : 02/25/10  Time  : 13:28:16
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FOPBGWKLQIF  E           K        DISK
      * RSQ : Order Detail              Co/Type/Group/Class/Item
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FOME8REL0IF  E           K        DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FOME9REL0IF  E           K        DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOMFAREL1IF  E           K        DISK
      * RTV : Item Structure Class      Retrieval index
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FPDIMCPL1IF  E           K        DISK
      * RTV : Order Detail Pricing      Retrieval index
      *
     FCABBREL1IF  E           K        DISK
      * RTV : Customer                  Retrieval index       NV
      *
     FOMF0CPL2IF  E           K        DISK
      * RSQ : Commodity Mrkt Price      Market Date Descending
      *
     FPDISREL2IF  E           K        DISK
      * RTV : Customer Item             Active Only
      *
     FPDZWPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: PRT Sls Monitor/Eval   PF Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
     E                    YDOW        7  1               *Days of week
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Order Detail
      * I :  Company Number
     I                                    P   1   20P1AIC3
     IP2PARM      DS
      * FLD: *Arrays
      * I :  USR Product Str Type
     I                                    P   1   20P2WCNB
      * I :  USR Product Str Group
     I                                    P   3   40P2Z3NB
      * I :  USR Product Struct Class
     I                                    P   5   60P2L5CD
      * I :  USR From Date
     I                                    P   7  100P2BDDT
      * I :  USR To Date
     I                                    P  11  140P2FDDT
      * I :  Date In
     I                                    P  15  180P2KCDT
     IP3PARM      DS
      * N :  Billing Activity Type
     I                                        1   1 P3OBST
     IP4PARM      DS
      * I :  Export Sales
     I                                        1   1 P4STES
     IP5PARM      DS
      * FLD: Company Item
      * N :  U/M - Primary
     I                                        1   2 P5ADCD
      * N :  Conversion Factor 1
     I                                    P   3   74P5AWPC
      * N :  Operation Factor 1
     I                                        8   8 P5LXST
      * N :  U/M - Second
     I                                        9  10 P5AECD
      * N :  Conversion Factor 2
     I                                    P  11  154P5AXPC
      * N :  Operation Factor 2
     I                                       16  16 P5LYST
      * N :  U/M - Third
     I                                       17  18 P5AFCD
      * N :  U/M - Pricing
     I                                       19  20 P5AICD
      * N :  Unit Weight
     I                                    P  21  262P5AIWG
      * N :  Standard Overage/Underage
     I                                    P  27  324P5BMPR
      * N :  Commodity Price Group
     I                                       33  39 P5LRCD
      * N :  Item Pricing Operation
     I                                       40  40 P5U9ST
      * N :  Item Pricing Constant
     I                                    P  41  464P5CMCO
     IP6PARM      DS
      * N :  U/M - Base Price
     I                                        1   2 P6CRCD
     IP7PARM      DS
      * N :  Weight 11.2 USR
     I                                    P   1   62P7FHWG
     IP8PARM      DS
      * N :  USR Extended Amount S
     I                                    P   1   62P8JVVA
     IP9PARM      DS
      * N :  Order Date
     I                                    P   1   40P9A0DT
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P2WCNB    PARM           WP0002  30       USR Product Str
     C           P2Z3NB    PARM           WP0003  30       USR Product Str
     C           P2L5CD    PARM           WP0004  30       USR Product Str
     C           P2BDDT    PARM           WP0005  70       USR From Date
     C           P2FDDT    PARM           WP0006  70       USR To Date
     C           P2KCDT    PARM           WP0007  70       Date In
     C           P4STES    PARM           WP0008  1        Export Sales
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * PRT Sls Ord Evaluation PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$NENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * PRT Sls Ord Evaluation PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@BGWKOS                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
      * USER: Null report processing
      * CLC Set for Null Rpt   US - /UT User Source  * 
     C                     MOVEL'Y'       W0AP1P
     C                     MOVEL'Y'       W0NEWP
     C                     MOVEL'Y'       WUGGST           USR Display fie
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Item Structure
     C                     MOVEL'Y'       W0AL02  1        Item Structure
     C                     MOVEL'Y'       W0AL03  1        Item Structure
     C                     MOVEL'Y'       W0AL04  1        Item Code
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $CAIC3           Company Number
     C                     MOVEL*BLANK    $CAGTX           USR Company Nam
     C                     Z-ADD*ZERO     $CBDDT           USR From Date
     C                     Z-ADD*ZERO     $CFDDT           USR To Date
     C                     Z-ADD*ZERO     $CKCDT           Date In
     C                     MOVEL*BLANK    $CSTES           Export Sales
     C                     MOVEL*BLANK    $CHLTX           Condition Desc.
     C                     Z-ADD*ZERO     $CWCNB           USR Product Str
     C                     MOVEL*BLANK    $CDCTX           Item Structure
     C                     Z-ADD*ZERO     $CZ3NB           USR Product Str
     C                     MOVEL*BLANK    $CDDTX           Item Structure
     C                     Z-ADD*ZERO     $CL5CD           USR Product Str
     C                     MOVEL*BLANK    $CDETX           Item Structure
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDOMAIC3    $DAIC3           Company Number
      * Load related totals format
     C                     Z-ADDOMAIC3    $MAIC3           Company Number
     C                     Z-ADD*ZERO     $MCDWG           USR Weight Accu
     C                     Z-ADD*ZERO     $MGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $MW4NB           USR Billing Dtl
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDOMAIC3    $EAIC3           Company Number
     C                     Z-ADDOMRGNB    $ERGNB           Item Structure
     C                     MOVEL*BLANK    $EDCTX           Item Structure
      * Load related totals format
     C                     Z-ADDOMAIC3    $LAIC3           Company Number
     C                     Z-ADDOMRGNB    $LRGNB           Item Structure
     C                     Z-ADD*ZERO     $LCDWG           USR Weight Accu
     C                     Z-ADD*ZERO     $LGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $LW4NB           USR Billing Dtl
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDOMAIC3    $FAIC3           Company Number
     C                     Z-ADDOMRGNB    $FRGNB           Item Structure
     C                     Z-ADDOMRHNB    $FRHNB           Item Structure
     C                     MOVEL*BLANK    $FDDTX           Item Structure
      * Load related totals format
     C                     Z-ADDOMAIC3    $KAIC3           Company Number
     C                     Z-ADDOMRGNB    $KRGNB           Item Structure
     C                     Z-ADDOMRHNB    $KRHNB           Item Structure
     C                     Z-ADD*ZERO     $KCDWG           USR Weight Accu
     C                     Z-ADD*ZERO     $KGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $KW4NB           USR Billing Dtl
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDOMAIC3    $GAIC3           Company Number
     C                     Z-ADDOMRGNB    $GRGNB           Item Structure
     C                     Z-ADDOMRHNB    $GRHNB           Item Structure
     C                     Z-ADDOMRINB    $GRINB           Item Structure
     C                     MOVEL*BLANK    $GDETX           Item Structure
      * Load related totals format
     C                     Z-ADD*ZERO     $JCMPR           USR Market Valu
     C                     Z-ADDOMAIC3    $JAIC3           Company Number
     C                     Z-ADDOMRGNB    $JRGNB           Item Structure
     C                     Z-ADDOMRHNB    $JRHNB           Item Structure
     C                     Z-ADDOMRINB    $JRINB           Item Structure
     C                     Z-ADD*ZERO     $JCDWG           USR Weight Accu
     C                     Z-ADD*ZERO     $JGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $JW4NB           USR Billing Dtl
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $IJVVA           USR Extended Am
     C                     Z-ADD*ZERO     $IFHWG           Weight 11.2 USR
     C                     Z-ADD*ZERO     $ICMPR           USR Market Valu
     C                     Z-ADD*ZERO     $IX8VA           FOB Gross Amoun
     C                     Z-ADDOMAIC3    $IAIC3           Company Number
     C                     Z-ADDOMHGCD    $IHGCD           Item Code
     C                     MOVEL*BLANK    $ICJTX           USR Item Descri
     C                     Z-ADD*ZERO     $ICPPC           USR Percent Wor
     C                     Z-ADD*ZERO     $IX4VA           Standard Overag
     C                     Z-ADD*ZERO     $IU7VA           USR Amount Rema
     C                     Z-ADD*ZERO     $IXTVA           Variance amount
     C                     Z-ADD*ZERO     $ICDWG           USR Weight Accu
     C                     Z-ADD*ZERO     $IWTNB           USR Quantity Bi
     C                     Z-ADD*ZERO     $IGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $IW4NB           USR Billing Dtl
     C                     Z-ADDOMRGNB    $IRGNB           Item Structure
     C                     Z-ADDOMRHNB    $IRHNB           Item Structure
     C                     Z-ADDOMRINB    $IRINB           Item Structure
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDOMAIC3    $HAIC3           Company Number
     C                     MOVELOMR4CD    $HR4CD           Sales Route Cod
     C                     Z-ADD*ZERO     $HCMPR           USR Market Valu
     C                     Z-ADDOMC4NB    $HC4NB           Order Number
     C                     Z-ADDOMDPNB    $HDPNB           Order Sequence
     C                     Z-ADDOMUENB    $HUENB           Order Secondary
     C                     Z-ADDOMHGCD    $HHGCD           Item Code
     C                     MOVELOMAJCD    $HAJCD           Warehouse Code
     C                     Z-ADDOMBKC7    $HBKC7           Ship To Custome
     C                     MOVEL*BLANK    $HJUNA           USR Description
     C                     MOVEL*BLANK    $HDBCD           Ship To State C
     C                     Z-ADDOMAODT    $HAODT           Scheduled Ship
     C                     Z-ADDOMCFC7    $HCFC7           Order Group Cod
     C                     MOVELOMGMST    $HGMST           Detail Line Sta
     C                     MOVELOMGNST    $HGNST           Detail Line Sta
     C                     Z-ADDOMMAVA    $HMAVA           Billing Detail
     C                     Z-ADDOMKDVA    $HKDVA           Billing Detail
     C                     Z-ADDOML8VA    $HL8VA           Billing Detail
     C                     Z-ADDOML9VA    $HL9VA           Quantity to Sub
     C                     MOVELOMGTST    $HGTST           Comment Print A
     C                     MOVELOMGVST    $HGVST           Comment Print I
     C                     MOVELOMGUST    $HGUST           Comment Print P
     C                     MOVELOMQFST    $HQFST           Comment Print S
     C                     Z-ADDOMAYVA    $HAYVA           Extended Amount
     C                     MOVELOMLQCD    $HLQCD           Commodity Marke
     C                     MOVELOMRDCD    $HRDCD           Date Method Cod
     C                     MOVELOMQ7CD    $HQ7CD           Price Method Co
     C                     Z-ADDOMEXDT    $HEXDT           Market Pricing
     C                     Z-ADD*ZERO     $HCPPC           USR Percent Wor
     C                     Z-ADD*ZERO     $HX4VA           Standard Overag
     C                     Z-ADD*ZERO     $HU7VA           USR Amount Rema
     C                     Z-ADD*ZERO     $HXTVA           Variance amount
     C                     Z-ADDOMD0WG    $HD0WG           Weight Ordered
     C                     Z-ADD*ZERO     $HCDWG           USR Weight Accu
     C                     Z-ADD*ZERO     $HGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $HW4NB           USR Billing Dtl
     C                     Z-ADDOMBZPR    $HBZPR           Price Overage O
     C                     Z-ADDOML6NB    $HL6NB           Contract Number
     C                     MOVELOMU1ST    $HU1ST           Price Status
     C                     Z-ADDOMGIDT    $HGIDT           Pricing Date Us
     C                     MOVELOMCRCD    $HCRCD           U/M - Base Pric
     C                     MOVELOMAGCD    $HAGCD           U/M - Ordered
     C                     MOVELOMRZST    $HRZST           Work Confirm St
     C                     MOVELOMR0ST    $HR0ST           Work Over/Short
     C                     MOVELOMR1ST    $HR1ST           OD Production P
     C                     MOVELOMG7NA    $HG7NA           Order Desc. Lin
     C                     MOVELOMG8NA    $HG8NA           Order Desc. Lin
     C                     MOVELOMRPCD    $HRPCD           Age Code
     C                     MOVELOMVEST    $HVEST           Palletize
     C                     MOVELOMVGST    $HVGST           Slip Sheet
     C                     MOVELOMAVST    $HAVST           Catch Weight St
     C                     MOVELOMU0ST    $HU0ST           Price Audit
     C                     MOVELOMRFCD    $HRFCD           Price Audit Rea
     C                     MOVELOMFZST    $HFZST           Production Date
     C                     Z-ADDOMR1NB    $HR1NB           Rated Freight
     C                     Z-ADDOMAVQT    $HAVQT           Quantity Ordere
     C                     Z-ADDOMCCQT    $HCCQT           Quantity Schedu
     C                     Z-ADDOMAUWG    $HAUWG           Weight Schedule
     C                     Z-ADDOMCBQT    $HCBQT           Quantity Shippe
     C                     Z-ADDOMATWG    $HATWG           Weight Shipped
     C                     Z-ADDOMAQCS    $HAQCS           Unit Cost Prici
     C                     Z-ADDOMAGCS    $HAGCS           Unit Cost Per P
     C                     Z-ADDOMAKPR    $HAKPR           Unit Price
     C                     Z-ADDOMALPR    $HALPR           Unit Price - Cr
     C                     Z-ADDOMAUPR    $HAUPR           Unit Price Orde
     C                     Z-ADDOMAVWG    $HAVWG           Unit Weight Ord
     C                     Z-ADDOMA4WG    $HA4WG           Tare Weight Tot
     C                     Z-ADDOMA5DT    $HA5DT           Requested Ship
     C                     Z-ADDOMGNDT    $HGNDT           Actual Shipped
     C                     MOVELOMAMST    $HAMST           Affect Inventor
     C                     MOVELOMANST    $HANST           Affect Sales Do
     C                     MOVELOMVAST    $HVAST           Affect Sales Pn
     C                     Z-ADDOMRGNB    $HRGNB           Item Structure
     C                     Z-ADDOMRHNB    $HRHNB           Item Structure
     C                     Z-ADDOMRINB    $HRINB           Item Structure
     C                     MOVELOMRBCD    $HRBCD           Item Level
     C                     MOVELOMHICD    $HHICD           Quality Level
     C                     MOVELOMRNCD    $HRNCD           Pricing Product
     C                     MOVELOMROCD    $HROCD           Season Product
     C                     Z-ADDOMCXDT    $HCXDT           Date of Origina
     C                     MOVELOMCQCD    $HCQCD           Reason Code
     C                     Z-ADDOMDUPR    $HDUPR           Invoice Unit Pr
     C                     Z-ADDOMB6VL    $HB6VL           Invoice Extende
     C                     Z-ADDOMA1AA    $HA1AA           Ham Group Numbe
     C                     MOVELOMFZSX    $HFZSX           OD Adj Type Ove
     C                     MOVELOMF0SX    $HF0SX           Affect Trade Fu
     C                     MOVELOMF1SX    $HF1SX           Affect Commissi
     C                     MOVELOMF2SX    $HF2SX           Affect Pricing
     C                     MOVELOMF3SX    $HF3SX           Released by Use
     C                     MOVELOMF4SX    $HF4SX           Ord TF Exempt C
     C                     MOVELOMF5SX    $HF5SX           OD Pallet Type
     C                     MOVELOMF6SX    $HF6SX           Production Ware
     C                     MOVELOMF7SX    $HF7SX           OD Price Type
     C                     Z-ADDOMNTDT    $HNTDT           Warehouse Palle
     C                     Z-ADDOMNUDT    $HNUDT           Consumed Item C
     C                     Z-ADDOMNVDT    $HNVDT           Deadline Depart
     C                     Z-ADDOMNWDT    $HNWDT           OD Price Type R
     C                     Z-ADDOMNXDT    $HNXDT           OD Unused Date
     C                     Z-ADDOMBUTM    $HBUTM           Deadline Depart
     C                     Z-ADDOMBVTM    $HBVTM           Price Code
     C                     Z-ADDOMBWTM    $HBWTM           Maximum Net Wei
     C                     Z-ADDOMBXTM    $HBXTM           Substitution Li
     C                     Z-ADDOMBYTM    $HBYTM           Max Qty to sche
     C                     Z-ADDOMH5NX    $HH5NX           Warehouse Palle
     C                     Z-ADDOMH6NX    $HH6NX           Warehouse Avg P
     C                     Z-ADDOMH7NX    $HH7NX           OD Item Target
     C                     Z-ADDOMH8NX    $HH8NX           OD Minimum Unit
     C                     Z-ADDOMH9NX    $HH9NX           OD Maximum Unit
     C                     Z-ADDOMDVPR    $HDVPR           Order Gate Pric
     C                     Z-ADDOMDWPR    $HDWPR           OD Base MKT Ovr
     C                     Z-ADDOMDXPR    $HDXPR           OD Unused Prc 3
     C                     Z-ADDOMDYPR    $HDYPR           OD Unused Prc 4
     C                     Z-ADDOMDZPR    $HDZPR           OD Unused Prc 5
     C                     Z-ADDOMGSPR    $HGSPR           OD Unused Prc 6
     C                     Z-ADDOMGTPR    $HGTPR           OD Unused Prc 7
     C                     Z-ADDOMGUPR    $HGUPR           OD Unused Prc 8
     C                     MOVELOMHOST    $HHOST           OD UnUsed Price
     C                     MOVELOMHPST    $HHPST           OD UnUsed Price
     C                     MOVELOMIOST    $HIOST           OD UnUsed Price
     C                     Z-ADDOMPEWG    $HPEWG           Weight Amount E
     C                     Z-ADDOMRINY    $HRINY           Delv Ageing Day
     C                     Z-ADDOMTIDT    $HTIDT           Production Ovr
     C                     Z-ADDOMTJDT    $HTJDT           Production Ovr
     C                     MOVELOMH2ST    $HH2ST           OD UnUsed Statu
     C                     MOVELOMH0ST    $HH0ST           OD UnUsed Statu
     C                     MOVELOMH1ST    $HH1ST           OD UnUsed Statu
     C                     Z-ADDOMTKDT    $HTKDT           OD UnUsed Date
     C                     Z-ADDOMTLDT    $HTLDT           OD UnUsed Date
     C                     Z-ADDOMTMDT    $HTMDT           OD UnUsed Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $HW4NB    $IW4NB           USR Billing Dtl
     C                     ADD  $HCDWG    $ICDWG           USR Weight Accu
     C                     ADD  P7FHWG    $IFHWG           Weight 11.2 USR
     C                     ADD  P8JVVA    $IJVVA           USR Extended Am
     C                     ADD  $HAYVA    $IX8VA           FOB Gross Amoun
     C                     ADD  $HGFQT    $IGFQT           USR Qty Billed
     C                     ADD  $HCMPR    $ICMPR           USR Market Valu
     C                     ADD  $HX4VA    $IX4VA           Standard Overag
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN OMAIC3    WZA001           Company Number
     C                     Z-ADDOMAIC3    WZA001
     C           *LIKE     DEFN OMRGNB    WZA002           Item Structure
     C                     Z-ADDOMRGNB    WZA002
     C           *LIKE     DEFN OMRHNB    WZA003           Item Structure
     C                     Z-ADDOMRHNB    WZA003
     C           *LIKE     DEFN OMRINB    WZA004           Item Structure
     C                     Z-ADDOMRINB    WZA004
     C           *LIKE     DEFN OMHGCD    WZA005           Item Code
     C                     Z-ADDOMHGCD    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @BGWKOS                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Ignore records not meeting selection criteria
      * If Selection is by Scheduled Ship Range include only unshipped or
      * CASE: PAR.USR From Date is GT Zero
     C           P2BDDT    IFGT *ZERO                      *IF
      * CASE: DB1.Detail Line Status is Confirmed & Complete
     C           OMGMST    IFEQ 'C'                        *IF
     C           OMGMST    OREQ 'R'
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * If Selection is by Order Date go to Header to get date.
      * CASE: PAR.Date In is GT Zero
     C           P2KCDT    IFGT *ZERO                      *IF
      * RTV Export Sts/Order DtRT - PD Order Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0027           Company Number
     C                     Z-ADDOMC4NB    WL0028           Order Number
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0029    P9A0DT           Order Date
     C                     MOVELWL0030    WUU2ST    P      Export Status
      * CASE: PAR.Date In EQ PAR.Order Date
     C           P2KCDT    IFEQ P9A0DT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Process Export Sales 'E'
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Export Sales is Export Sales Only
      *   |- c2    : WRK.Export Status is no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4STES    IFEQ 'E'                        *IF
     C           WUU2ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * Process Export sales 'N'
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Export Sales is Non-Export Sales Only
      *   |- c2    : WRK.Export Status is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4STES    IFEQ 'N'                        *IF
     C           WUU2ST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * RTV Bill Type, Event   RT - PD Order Header  * 
     C                     EXSR SORVGN
      * Process Invoices only
      * CASE: PAR.Billing Activity Type is Invoice
     C           P3OBST    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * Put Type, Group, Class selections in OPNQRYF
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Item Structure
     C                     MOVEL*BLANK    W0AL02  1        Item Structure
     C                     MOVEL*BLANK    W0AL03  1        Item Structure
     C                     MOVEL*BLANK    W0AL04  1        Item Code
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Item Structure
     C                     MOVEL'Y'       W0AL02  1        Item Structure
     C                     MOVEL'Y'       W0AL03  1        Item Structure
     C                     MOVEL'Y'       W0AL04  1        Item Code
     C                     ELSE
      * Next record - Detect level breaks
     C           OMAIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           OMRGNB    IFNE WZA002                     Item Structure
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           OMRHNB    IFNE WZA003                     Item Structure
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           OMRINB    IFNE WZA004                     Item Structure
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           OMHGCD    IFNE WZA005                     Item Code
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Code format
      * RTV Item Info for Rpts RT - Company/Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$IAIC3    WL0008           Company Number
     C                     Z-ADD$IHGCD    WL0009           Item Code
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    $ICJTX    P      Description Lin
     C                     MOVELWL0011    P5ADCD    P      U/M - Primary
     C                     Z-ADDWL0012    P5AWPC           Conversion Fact
     C                     MOVELWL0013    P5LXST    P      Operation Facto
     C                     MOVELWL0014    P5AECD    P      U/M - Second
     C                     Z-ADDWL0015    P5AXPC           Conversion Fact
     C                     MOVELWL0016    P5LYST    P      Operation Facto
     C                     MOVELWL0017    P5AFCD    P      U/M - Third
     C                     MOVELWL0018    P5AICD    P      U/M - Pricing
     C                     Z-ADDWL0019    P5AIWG           Unit Weight
     C                     MOVELWL0020    WULNCD    P      Default Commod
     C                     Z-ADDWL0021    WUBLPR           Market Overage
     C                     Z-ADDWL0022    P5BMPR           Standard Overag
     C                     MOVELWL0023    P5LRCD    P      Commodity Price
     C                     MOVELWL0024    P5U9ST    P      Item Pricing Op
     C                     Z-ADDWL0025    P5CMCO           Item Pricing Co
     C                     MOVELWL0026    WUX6ST    P      Print on Realiz
      * CASE: CUR.Weight 11.2 USR is Greater than zero
     C           $IFHWG    IFGT *ZERO                      *IF
     C           $IJVVA    DIV  $IFHWG    WUBHPC    H      USR Percent Wor
     C           WUBHPC    MULT 100       $ICPPC    H      USR Percent Wor
     C                     END                             *FI
      * FOB Sales and Weight both negative
      * CASE:
      *  - c1ANDc2
      *   |- c1    : CUR.USR Extended Amount S LT WRK.ZERO
      *   |- c2    : CUR.Weight 11.2 USR LT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $IJVVA    IFLT WUW0NB                     *IF
     C           $IFHWG    IFLT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MULT -1        $ICPPC           USR Percent Wor
     C                     END                             *FI
      * Compute Market Price (CWT)
      * CASE: CUR.Weight 11.2 USR NE WRK.ZERO
     C           $IFHWG    IFNE WUW0NB                     *IF
      * Compute Market Price CWT
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.USR Market Value Price
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.Weight 11.2 USR
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $ICMPR    DIV  $IFHWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
      * compute usr market value
      * CASE: market value and weight both negative
      *  - c1 AND c2
      *   |- c1    : CUR.USR Market Value Price LT WRK.ZERO
      *   |- c2    : CUR.Weight 11.2 USR LT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $ICMPR    IFLT WUW0NB                     *IF
     C           $IFHWG    IFLT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           W0WE      MULT -1        WUT2VA    H      USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
     C           W0WE      MULT 1         WUT2VA    H      USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WUT2VA           USR Market Valu
     C                     END                             *FI
      * Compute Standard Overage
      * CASE: WRK.ZERO is Zero
     C           WUW0NB    IFEQ *ZERO                      *IF
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P5ADCD    IFEQ P6CRCD                     *IF
     C                     Z-ADDP5BMPR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P5AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P5LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P5AWPC    IFNE *ZERO                      *IF
     C           P5BMPR    DIV  P5AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P5LXST    IFEQ 'D'                        *IF
     C           P5BMPR    MULT P5AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P5AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P5LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P5AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P5AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P5LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P5AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P5AECD    IFEQ P6CRCD                     *IF
     C                     Z-ADDP5BMPR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P5LXST    IFEQ 'M'                        *IF
     C           P5BMPR    MULT P5AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P5LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P5AWPC    IFNE *ZERO                      *IF
     C           P5BMPR    DIV  P5AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P5AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P5LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P5AXPC    IFNE *ZERO                      *IF
     C           P5BMPR    DIV  P5AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P5LYST    IFEQ 'D'                        *IF
     C           P5BMPR    MULT P5AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P5AFCD    IFEQ P6CRCD                     *IF
     C                     Z-ADDP5BMPR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P5LYST    IFEQ 'M'                        *IF
     C           P5BMPR    MULT P5AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P5LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P5AXPC    IFNE *ZERO                      *IF
     C           P5BMPR    DIV  P5AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P5LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P5AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P5LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P5AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P5AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Std Overage
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P5AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     WUX4VA           Standard Overag
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Standard Overage
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           WUAPPR    DIV  P5AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      WUX4VA           Standard Overag
     C                     END                             *FI
     C                     Z-ADDWUX4VA    $IX4VA           Standard Overag
     C                     END                             *FI
      * Compute Mkt + Ovr / CWT
     C           WUT2VA    ADD  WUX4VA    $IU7VA           USR Amount Rema
     C           $ICPPC    SUB  $IU7VA    $IXTVA           Variance amount
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $IHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$IHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VIHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VIHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$IKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
      * USER: Process after print of Item Code format
     C                     ADD  $IW4NB    $JW4NB           USR Billing Dtl
     C                     ADD  $ICDWG    $JCDWG           USR Weight Accu
     C                     ADD  $IGFQT    $JGFQT           USR Qty Billed
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Mention hidden format
     C   99N99             WRITE$JKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
      * USER: Process after print of Item Structure Class Code format
     C                     ADD  $JW4NB    $KW4NB           USR Billing Dtl
     C                     ADD  $JCDWG    $KCDWG           USR Weight Accu
     C                     ADD  $JGFQT    $KGFQT           USR Qty Billed
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Mention hidden format
     C   99N99             WRITE$KKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
      * USER: Process after print of Item Structure Group Code format
     C                     ADD  $KW4NB    $LW4NB           USR Billing Dtl
     C                     ADD  $KCDWG    $LCDWG           USR Weight Accu
     C                     ADD  $KGFQT    $LGFQT           USR Qty Billed
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Mention hidden format
     C   99N99             WRITE$LKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
      * USER: Process after print of Item Structure Type Code format
     C                     ADD  $LW4NB    $MW4NB           USR Billing Dtl
     C                     ADD  $LCDWG    $MCDWG           USR Weight Accu
     C                     ADD  $LGFQT    $MGFQT           USR Qty Billed
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Mention hidden format
     C   99N99             WRITE$MKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of PRT Sls Ord Evaluation PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of PRT Sls Ord Evaluation PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
      * 1PG = PAR By name
     C                     Z-ADDP1AIC3    $CAIC3           Company Number
     C                     Z-ADDP2BDDT    $CBDDT           USR From Date
     C                     Z-ADDP2FDDT    $CFDDT           USR To Date
     C                     Z-ADDP2KCDT    $CKCDT           Date In
     C                     MOVELP4STES    $CSTES           Export Sales
     C                     Z-ADDP2WCNB    $CWCNB           USR Product Str
     C                     Z-ADDP2Z3NB    $CZ3NB           USR Product Str
     C                     Z-ADDP2L5CD    $CL5CD           USR Product Str
     C                     Z-ADDOMAIC3    $CAIC3           Company Number
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SCRVGN
     C                     MOVELWUAGTX    $CAGTX           USR Company Nam
     C                     Z-ADDP2WCNB    $CWCNB           USR Product Str
     C                     Z-ADDP2Z3NB    $CZ3NB           USR Product Str
     C                     Z-ADDP2L5CD    $CL5CD           USR Product Str
     C                     MOVEL*BLANK    $CDCTX           Item Structure
     C                     MOVEL'*ALL'    $CDCTX           Item Structure
     C                     MOVEL*BLANK    $CDDTX           Item Structure
     C                     MOVEL'*ALL'    $CDDTX           Item Structure
     C                     MOVEL*BLANK    $CDETX           Item Structure
     C                     MOVEL'*ALL'    $CDETX           Item Structure
      * RTV  Description       RT - OM Item Structure Type  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CWCNB    WL0001           Item Structure
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0001    $CWCNB           Item Structure
     C                     MOVELWL0002    $CDCTX    P      Item Structure
      * Rtv Group Description  RT - OM Item Structure Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CZ3NB    WL0003           Item Structure
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0004    WURGNB           Item Structure
     C                     MOVELWL0005    $CDDTX    P      Item Structure
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CL5CD    WL0006           Item Structure
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0007    $CDETX    P      Item Structure
      * 1PG.Condition Desc. 1  USR = Condition name of 1PG.Export Sales
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1419961   Y2LSNO  70       List number
     C                     PARM $CSTES    W0INVL 25        Export Sales
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert USR From Date to display format
      * Convert date
     C           1000000   ADD  $CBDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCBDDT
      * Convert USR To Date to display format
      * Convert date
     C           1000000   ADD  $CFDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCFDDT
      * Convert Date In to display format
      * Convert date
     C           1000000   ADD  $CKCDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCKCDT
     C                     MOVEL'0'       *IN79
     C           WUGGST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$C1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of PRT Sls Ord Evaluation PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP00
     C                     END                             FI
      * Print Item Structure Type Code of PRT Sls Ord Evaluation PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Structure Type Code format
      * RTV  Description       RT - OM Item Structure Type  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$ERGNB    WL0001           Item Structure
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0001    $ERGNB           Item Structure
     C                     MOVELWL0002    $EDCTX    P      Item Structure
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$EKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Item Structure Group Code of PRT Sls Ord Evaluation PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Structure Group Code format
      * Rtv Group Description  RT - OM Item Structure Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$FRHNB    WL0003           Item Structure
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0004    WURGNB           Item Structure
     C                     MOVELWL0005    $FDDTX    P      Item Structure
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$FKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Item Structure Class Code of PRT Sls Ord Evaluation PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Structure Class Code format
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$GRINB    WL0006           Item Structure
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0007    $GDETX    P      Item Structure
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$GKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Item Code of PRT Sls Ord Evaluation PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of PRT Sls Ord Evaluation PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * Determine which weight to use for calculations
      * CASE: DB1.Detail Line Status is Confirmed & Complete
     C           OMGMST    IFEQ 'C'                        *IF
     C           OMGMST    OREQ 'R'
     C                     Z-ADDOMATWG    P7FHWG           Weight 11.2 USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDOMD0WG    P7FHWG           Weight 11.2 USR
     C                     END                             *FI
      * Determine which amount to use for calculations
      * CASE: DB1.Detail Line Status is Confirmed & Complete
     C           OMGMST    IFEQ 'C'                        *IF
     C           OMGMST    OREQ 'R'
     C                     Z-ADDOMAYVA    P8JVVA           USR Extended Am
     C                     ELSE
      * CASE: *OTHERWISE
     C           OMAVQT    MULT OMAUPR    P8JVVA           USR Extended Am
     C                     END                             *FI
      * *** Calculate Net FOB Amount ***
      * CASE: WRK.ZERO EQ WRK.ZERO
     C           WUW0NB    IFEQ WUW0NB                     *IF
      *         First calculating Absorbed Freight Amount
      * RTV Item Price Struct  RT - Company/Item  * 
     C                     EXSR SGRVGN
      * RTV Freight            RT - PD Order Header  * 
     C                     EXSR SHRVGN
     C           WUTBNB    DIV  100       WUADCS           Freight Cost
     C           WUADCS    MULT P7FHWG    WUULVA    H      Absorbed Freigh
      *         Next calculating Component Price Amount
      * RTV Freight Overage    RT - PD Order Detail Pricing  * 
     C                     EXSR SIRVGN
     C           WUBNPR    DIV  100       WUC0PR           USR Comp. Prc R
     C           WUC0PR    MULT P7FHWG    WUCZPR    H      USR Component P
      * Determine Net $ to show
      * CASE: DB1.Detail Line Status is Confirmed & Complete
     C           OMGMST    IFEQ 'C'                        *IF
     C           OMGMST    OREQ 'R'
      * Do not remove absorbed freight dollars from Net $ if manually pri
      * CASE: CUR.Price Method Code is Manual
     C           $HQ7CD    IFEQ 'MAN'                      *IF
     C           P8JVVA    SUB  WUCZPR    $HW4NB           USR Billing Dtl
     C                     ELSE
      * CASE: *OTHERWISE
     C           P8JVVA    SUB  WUULVA    $HW4NB           USR Billing Dtl
     C                     SUB  WUCZPR    $HW4NB           USR Billing Dtl
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HW4NB           USR Billing Dtl
     C                     END                             *FI
     C                     END                             *FI
      * RTV Item Info for Rpts RT - Company/Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0008           Company Number
     C                     Z-ADDOMHGCD    WL0009           Item Code
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    WUAVNA    P      Description Lin
     C                     MOVELWL0011    P5ADCD    P      U/M - Primary
     C                     Z-ADDWL0012    P5AWPC           Conversion Fact
     C                     MOVELWL0013    P5LXST    P      Operation Facto
     C                     MOVELWL0014    P5AECD    P      U/M - Second
     C                     Z-ADDWL0015    P5AXPC           Conversion Fact
     C                     MOVELWL0016    P5LYST    P      Operation Facto
     C                     MOVELWL0017    P5AFCD    P      U/M - Third
     C                     MOVELWL0018    P5AICD    P      U/M - Pricing
     C                     Z-ADDWL0019    P5AIWG           Unit Weight
     C                     MOVELWL0020    WULQCD    P      Default Commod
     C                     Z-ADDWL0021    WUBLPR           Market Overage
     C                     Z-ADDWL0022    P5BMPR           Standard Overag
     C                     MOVELWL0023    P5LRCD    P      Commodity Price
     C                     MOVELWL0024    P5U9ST    P      Item Pricing Op
     C                     Z-ADDWL0025    P5CMCO           Item Pricing Co
     C                     MOVELWL0026    WUX6ST    P      Print on Realiz
      * RTV Customer Name      RT - Customer  * 
     C                     EXSR SKRVGN
      * Price method must be 'MKT' for Price Date to print
      * CASE: DB1.Price Method Code is Market
     C           OMQ7CD    IFEQ 'MKT'                      *IF
     C                     Z-ADDOMGIDT    $HEXDT           Market Pricing
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HEXDT           Market Pricing
     C                     END                             *FI
      * FOB amount and weight
      * CASE: PAR.Billing Activity Type is Invoice
     C           P3OBST    IFEQ '1'                        *IF
      * CASE: DB1.Affect Sales Doll Status is no
     C           OMANST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $HAYVA           Extended Amount
     C                     Z-ADD*ZERO     $HW4NB           USR Billing Dtl
     C                     END                             *FI
      * CASE: DB1.Affect Sales Pnds Status is no
     C           OMVAST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $HCDWG           USR Weight Accu
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDOMATWG    $HCDWG           USR Weight Accu
     C                     END                             *FI
     C                     END                             *FI
      * Market Code
      * CASE: PAR.Billing Activity Type is Invoice
     C           P3OBST    IFEQ '1'                        *IF
      * CASE: DB1.Affect Sales Doll Status is no
     C           OMANST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $HCMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute market price
      * CASE: Pricing U/M on history is currently a valid U/M
      *  - c1 OR c2 OR c3
      *   |- c1    : DB1.U/M - Base Price EQ PAR.U/M - Primary
      *   |- c2    : DB1.U/M - Base Price EQ PAR.U/M - Second
      *   |- c3    : DB1.U/M - Base Price EQ PAR.U/M - Third
      *   '-
     C           OMCRCD    IFEQ P5ADCD                     *IF
     C           OMCRCD    OREQ P5AECD                     *OR
     C           OMCRCD    OREQ P5AFCD                     *OR
      * subtract 1 from scheduled shipped date for starting point
      * Determine which date to use for market price calculations
      * CASE: DB1.Pricing Date Used is Entered
     C           OMGIDT    IFNE *ZERO                      *IF
      * WRK.Scheduled Ship Date = DB1.Pricing Date Used + CON.-1 *DAYS
     C           OMGIDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WUAODT
     C                     ELSE
     C           XDINDT    SUB  1000000   WUAODT
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Detail Line Status is Confirmed & Complete
     C           OMGMST    IFEQ 'C'                        *IF
     C           OMGMST    OREQ 'R'
      * WRK.Scheduled Ship Date = DB1.Actual Shipped Date + CON.-1 *DAYS
     C           OMGNDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WUAODT
     C                     ELSE
     C           XDINDT    SUB  1000000   WUAODT
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * WRK.Scheduled Ship Date = DB1.Scheduled Ship Date + CON.-1 *DAYS
     C           OMAODT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WUAODT
     C                     ELSE
     C           XDINDT    SUB  1000000   WUAODT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
     C                     EXSR SLRVGN
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P5ADCD    IFEQ OMCRCD                     *IF
     C                     Z-ADDWUA5PR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P5AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P5LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P5AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P5AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P5LXST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P5AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P5AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P5LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P5AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P5AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P5LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P5AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P5AECD    IFEQ OMCRCD                     *IF
     C                     Z-ADDWUA5PR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P5LXST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P5AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P5LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P5AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P5AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P5AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P5LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P5AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P5AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P5LYST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P5AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P5AFCD    IFEQ OMCRCD                     *IF
     C                     Z-ADDWUA5PR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P5LYST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P5AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P5LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P5AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P5AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P5LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P5AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P5LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P5AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P5AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Market Price
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P5AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     $HCMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Market Prc/LB
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Weight 11.2 USR
     C           WUAPPR    DIV  P5AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P7FHWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      $HCMPR           USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HCMPR           USR Market Valu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVELOMCRCD    P6CRCD           U/M - Base Pric
     C                     Z-ADDOMCBQT    $HGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $HCPPC           USR Percent Wor
     C                     Z-ADD*ZERO     $HU7VA           USR Amount Rema
      * Calculate FOB Price/CWT
      * CASE: PAR.Weight 11.2 USR is Greater than zero
     C           P7FHWG    IFGT *ZERO                      *IF
     C           P8JVVA    DIV  P7FHWG    WUBHPC    H      USR Percent Wor
     C           WUBHPC    MULT 100       $HCPPC    H      USR Percent Wor
      * Remove absorbed freight rate divided by 100 from FOB Price/CWT
      * Only for Manually priced
      * CASE: CUR.Price Method Code is Manual
     C           $HQ7CD    IFEQ 'MAN'                      *IF
     C                     SUB  WUULVA    $HCPPC           USR Percent Wor
     C                     END                             *FI
     C                     END                             *FI
      * FOB Price cannot be less than zero
      * CASE: CUR.USR Percent Work, 7.2 is Greater than zero
     C           $HCPPC    IFGT *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HCPPC           USR Percent Wor
     C                     END                             *FI
      * Compute Market Price (CWT)
      * CASE: PAR.Weight 11.2 USR NE WRK.ZERO
     C           P7FHWG    IFNE WUW0NB                     *IF
      * Compute Market Price CWT
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.USR Market Value Price
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Weight 11.2 USR
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HCMPR    DIV  P7FHWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
      * compute usr market value
      * CASE: market value and weight both negative
      *  - c1 AND c2
      *   |- c1    : CUR.USR Market Value Price LT WRK.ZERO
      *   |- c2    : PAR.Weight 11.2 USR LT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HCMPR    IFLT WUW0NB                     *IF
     C           P7FHWG    IFLT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           W0WE      MULT -1        WUT2VA    H      USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
     C           W0WE      MULT 1         WUT2VA    H      USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WUT2VA           USR Market Valu
     C                     END                             *FI
      * Compute Standard Overage
      * CASE: WRK.ZERO is Zero
     C           WUW0NB    IFEQ *ZERO                      *IF
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P5ADCD    IFEQ P6CRCD                     *IF
     C                     Z-ADDP5BMPR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P5AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P5LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P5AWPC    IFNE *ZERO                      *IF
     C           P5BMPR    DIV  P5AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P5LXST    IFEQ 'D'                        *IF
     C           P5BMPR    MULT P5AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P5AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P5LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P5AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P5AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P5LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P5AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P5AECD    IFEQ P6CRCD                     *IF
     C                     Z-ADDP5BMPR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P5LXST    IFEQ 'M'                        *IF
     C           P5BMPR    MULT P5AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P5LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P5AWPC    IFNE *ZERO                      *IF
     C           P5BMPR    DIV  P5AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P5AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P5LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P5AXPC    IFNE *ZERO                      *IF
     C           P5BMPR    DIV  P5AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P5LYST    IFEQ 'D'                        *IF
     C           P5BMPR    MULT P5AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P5AFCD    IFEQ P6CRCD                     *IF
     C                     Z-ADDP5BMPR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P5LYST    IFEQ 'M'                        *IF
     C           P5BMPR    MULT P5AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P5LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P5AXPC    IFNE *ZERO                      *IF
     C           P5BMPR    DIV  P5AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P5LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P5AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P5LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P5AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P5AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Std Overage
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P5AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     WUX4VA           Standard Overag
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Standard Overage
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           WUAPPR    DIV  P5AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      WUX4VA           Standard Overag
      * Add Market Overage
     C                     EXSR UASUBR                     Add Market Over
     C                     END                             *FI
     C                     Z-ADDWUX4VA    $HX4VA           Standard Overag
     C                     END                             *FI
      * CASE: PAR.Weight 11.2 USR is Greater than zero
     C           P7FHWG    IFGT *ZERO                      *IF
     C           WUX4VA    ADD  WUT2VA    $HU7VA           USR Amount Rema
     C                     END                             *FI
     C           $HCPPC    SUB  $HU7VA    $HXTVA           Variance amount
      * Net $ cannot be less than zero
      * CASE: CUR.USR Billing Dtl Net Dol 2 is Less than zero
     C           $HW4NB    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     $HW4NB           USR Billing Dtl
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $HHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$HHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VHHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VHHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Ship To Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $HBKC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$HBKC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VHBKC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VHBKC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Scheduled Ship Date to display format
      * Convert date
     C           1000000   ADD  $HAODT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VHAODT
      * Convert Market Pricing Date to display format
      * Convert date
     C           1000000   ADD  $HEXDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VHEXDT
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$HCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$HDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of PRT Sls Ord Evaluation PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  10        W0FSUM
     C                     END                             FI
      *
      * * Company Number of PRT Sls Ord Evaluation PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  6         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Type Code of PRT Sls Ord Evaluation PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Group Code of PRT Sls Ord Evaluation PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Class Code of PRT Sls Ord Evaluation PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Item Code of PRT Sls Ord Evaluation PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT Sls Ord Evaluation PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'OMS'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD$CAIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAGTX           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    WUAGTX           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV  Description       RT - OM Item Structure Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           E8RGNB           Item Structure
      * Setup key
     C                     Z-ADDWL0001    E8RGNB           Item Structure
      * Establish starting position
     C           KRSSD     CHAIN@E8REBB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1166' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0001           Item Structure
     C                     MOVEL*BLANK    WL0002           Item Structure
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     Z-ADDE8RGNB    WL0001           Item Structure
     C                     MOVELE8DCTX    WL0002           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Group Description  RT - OM Item Structure Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           E9RHNB           Item Structure
      * Setup key
     C                     Z-ADDWL0003    E9RHNB           Item Structure
      * Establish starting position
     C           KRSSE     CHAIN@E9REA8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1168' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0004           Item Structure
     C                     MOVEL*BLANK    WL0005           Item Structure
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDE9RGNB    WL0004           Item Structure
     C                     MOVELE9DDTX    WL0005           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           FARINB           Item Structure
      * Setup key
     C                     Z-ADDWL0006    FARINB           Item Structure
      * Establish starting position
     C           KRSSF     CHAIN@FAREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1170' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0007           Item Structure
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFADETX    WL0007           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Item Price Struct  RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDOMAIC3    BZAIC3           Company Number
     C                     Z-ADDOMHGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSG     CHAIN@BZREJU              90    *
      * Data record not found
     C   90                MOVEL'USR0326' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZADCD    P5ADCD           U/M - Primary
     C                     Z-ADDBZAWPC    P5AWPC           Conversion Fact
     C                     MOVELBZLXST    P5LXST           Operation Facto
     C                     MOVELBZAECD    P5AECD           U/M - Second
     C                     Z-ADDBZAXPC    P5AXPC           Conversion Fact
     C                     MOVELBZLYST    P5LYST           Operation Facto
     C                     MOVELBZAFCD    P5AFCD           U/M - Third
     C                     MOVELBZAICD    P5AICD           U/M - Pricing
     C                     Z-ADDBZAIWG    P5AIWG           Unit Weight
     C                     Z-ADDBZBLPR    WUBLPR           Market Overage
     C                     Z-ADDBZBMPR    P5BMPR           Standard Overag
     C                     MOVELBZLRCD    P5LRCD           Commodity Price
     C                     MOVELBZU9ST    P5U9ST           Item Pricing Op
     C                     Z-ADDBZCMCO    P5CMCO           Item Pricing Co
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Freight            RT - PD Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDOMAIC3    BEAIC3           Company Number
     C                     Z-ADDOMC4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSSH     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUA1WG           Order Weight To
     C                     Z-ADD*ZERO     WUTBNB           Absorbed Freigh
     C                     Z-ADD*ZERO     WUR1NB           Rated Freight
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBEA1WG    WUA1WG           Order Weight To
     C                     Z-ADDBETBNB    WUTBNB           Absorbed Freigh
     C                     Z-ADDBER1NB    WUR1NB           Rated Freight
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Freight Overage    RT - PD Order Detail Pricing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           IMAIC3           Company Number
     C                     KFLD           IMC4NB           Order Number
     C                     KFLD           IMDPNB           Order Sequence
     C                     KFLD           IMUENB           Order Secondary
     C                     KFLD           IMQ9CD           Price Method Co
      * Setup key
     C                     Z-ADDOMAIC3    IMAIC3           Company Number
     C                     Z-ADDOMC4NB    IMC4NB           Order Number
     C                     Z-ADDOMDPNB    IMDPNB           Order Sequence
     C                     Z-ADDOMUENB    IMUENB           Order Secondary
     C                     MOVEL'CFRTOV'  IMQ9CD           Price Method Co
      * Establish starting position
     C           KRSSI     CHAIN@IMCPSE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1675' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUBNPR           Componant Price
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDIMBNPR    WUBNPR           Componant Price
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Item Info for Rpts RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0008    BZAIC3           Company Number
     C                     Z-ADDWL0009    BZHGCD           Item Code
      * Establish starting position
     C           KRSSJ     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0010           Description Lin
     C                     MOVEL*BLANK    WL0011           U/M - Primary
     C                     Z-ADD*ZERO     WL0012           Conversion Fact
     C                     MOVEL*BLANK    WL0013           Operation Facto
     C                     MOVEL*BLANK    WL0014           U/M - Second
     C                     Z-ADD*ZERO     WL0015           Conversion Fact
     C                     MOVEL*BLANK    WL0016           Operation Facto
     C                     MOVEL*BLANK    WL0017           U/M - Third
     C                     MOVEL*BLANK    WL0018           U/M - Pricing
     C                     Z-ADD*ZERO     WL0019           Unit Weight
     C                     MOVEL*BLANK    WL0020           Default Commod
     C                     Z-ADD*ZERO     WL0021           Market Overage
     C                     Z-ADD*ZERO     WL0022           Standard Overag
     C                     MOVEL*BLANK    WL0023           Commodity Price
     C                     MOVEL*BLANK    WL0024           Item Pricing Op
     C                     Z-ADD*ZERO     WL0025           Item Pricing Co
     C                     MOVEL*BLANK    WL0026           Print on Realiz
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WL0010           Description Lin
     C                     MOVELBZADCD    WL0011           U/M - Primary
     C                     Z-ADDBZAWPC    WL0012           Conversion Fact
     C                     MOVELBZLXST    WL0013           Operation Facto
     C                     MOVELBZAECD    WL0014           U/M - Second
     C                     Z-ADDBZAXPC    WL0015           Conversion Fact
     C                     MOVELBZLYST    WL0016           Operation Facto
     C                     MOVELBZAFCD    WL0017           U/M - Third
     C                     MOVELBZAICD    WL0018           U/M - Pricing
     C                     Z-ADDBZAIWG    WL0019           Unit Weight
     C                     MOVELBZLNCD    WL0020           Default Commod
     C                     Z-ADDBZBLPR    WL0021           Market Overage
     C                     Z-ADDBZBMPR    WL0022           Standard Overag
     C                     MOVELBZLRCD    WL0023           Commodity Price
     C                     MOVELBZU9ST    WL0024           Item Pricing Op
     C                     Z-ADDBZCMCO    WL0025           Item Pricing Co
     C                     MOVELBZX6ST    WL0026           Print on Realiz
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * RTV Customer Name      RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           BBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADD$HBKC7    BBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSK     CHAIN@BBREE9              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0170' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $HJUNA           Customer Name
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBBAYTX    $HJUNA           Customer Name
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN F0LQCD    WQSL01           Commodity Marke
     C           *LIKE     DEFN F0LRCD    WQSL02           Commodity Price
      * Define keylist
     C           KPSSL     KLIST
     C                     KFLD           WQSL01           Commodity Marke
     C                     KFLD           WQSL02           Commodity Price
     C                     KFLD           F0EQDT           Market Price Da
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WQSL01           Commodity Marke
     C                     KFLD           WQSL02           Commodity Price
      * Setup key
     C                     MOVELWULQCD    WQSL01           Commodity Marke
     C                     MOVELP5LRCD    WQSL02           Commodity Price
     C                     Z-ADDWUAODT    F0EQDT           Market Price Da
      * Establish starting position
     C           KPSSL     SETLL@F0CPEP                    *
     C           KRSSL     READE@F0CPEP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1222' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUA5PR           Commodity Marke
     C                     Z-ADD*ZERO     WUE7DT           USR Date Priced
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDF0A5PR    WUA5PR           Commodity Marke
     C                     Z-ADDF0EQDT    WUE7DT           USR Date Priced
     C                     GOTO SLEXIT                     *QUIT
     C           KRSSL     READE@F0CPEP                  90*
     C                     ENDDO
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * RTV Overages           RT - PD Customer/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           ISAIC3           Company Number
     C                     KFLD           ISBKC7           Ship To Custome
     C                     KFLD           ISHGCD           Item Code
      * Setup key
     C                     Z-ADD$HAIC3    ISAIC3           Company Number
     C                     Z-ADD$HBKC7    ISBKC7           Ship To Custome
     C                     Z-ADD$HHGCD    ISHGCD           Item Code
      * Establish starting position
     C           KRSSM     CHAIN@ISREV7              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1687' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUBLPR           Market Overage
     C                     Z-ADD*ZERO     WUNFNN           Formula Differe
     C                     Z-ADD*ZERO     WUNFNN           Formula Process
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDISBLPR    WUBLPR           Market Overage
     C                     Z-ADDISBXPR    WUNFNN           Formula Differe
     C                     Z-ADDISBYPR    WUNFNN           Formula Process
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * RTV Export Sts/Order DtRT - PD Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL*BLANK    WL0030           Export Status
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0027    BEAIC3           Company Number
     C                     Z-ADDWL0028    BEC4NB           Order Number
      * Establish starting position
     C           KRSSN     CHAIN@BECPFK              90    *
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBEA0DT    WL0029           Order Date
     C                     MOVELBEU2ST    WL0030           Export Status
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * RTV Bill Type, Event   RT - PD Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDOMAIC3    BEAIC3           Company Number
     C                     Z-ADDOMC4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSSO     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEJPCD    WUJPCD           Event Code
     C                     MOVELBEOBST    P3OBST           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Add Market Overage
      *================================================================
     C                     Z-ADD*ZERO     WULOVA           Price Adjustmen
     C                     Z-ADD*ZERO     WUBLPR           Market Overage
      * RTV Overages           RT - PD Customer/Item  * 
     C                     EXSR SMRVGN
      * CLC Convert Price - CW XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDKUXFR'              90  CLC Convert Pri
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $HAIC3    WQ0001  30       Company Number
     C                     PARM $HHGCD    WQ0002  70       Item Code
     C                     PARM WUBLPR    WQ0003 114       Unit Price
     C           WULOVA    PARM *ZERO     WQ0004 114       Price Adjustmen
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDKUXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     ADD  WULOVA    WUX4VA           Standard Overag
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P3OBST           Billing Activit
     C                     MOVEL*BLANK    P5ADCD           U/M - Primary
     C                     Z-ADD*ZERO     P5AWPC           Conversion Fact
     C                     MOVEL*BLANK    P5LXST           Operation Facto
     C                     MOVEL*BLANK    P5AECD           U/M - Second
     C                     Z-ADD*ZERO     P5AXPC           Conversion Fact
     C                     MOVEL*BLANK    P5LYST           Operation Facto
     C                     MOVEL*BLANK    P5AFCD           U/M - Third
     C                     MOVEL*BLANK    P5AICD           U/M - Pricing
     C                     Z-ADD*ZERO     P5AIWG           Unit Weight
     C                     Z-ADD*ZERO     P5BMPR           Standard Overag
     C                     MOVEL*BLANK    P5LRCD           Commodity Price
     C                     MOVEL*BLANK    P5U9ST           Item Pricing Op
     C                     Z-ADD*ZERO     P5CMCO           Item Pricing Co
     C                     MOVEL*BLANK    P6CRCD           U/M - Base Pric
     C                     Z-ADD*ZERO     P7FHWG           Weight 11.2 USR
     C                     Z-ADD*ZERO     P8JVVA           USR Extended Am
     C                     Z-ADD*ZERO     P9A0DT           Order Date
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field USR Display field
     C                     MOVEL*BLANK    WUGGST  1
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    OMAIC3           Company Number
     C                     MOVEL*LOVAL    OMRGNB           Item Structure
     C                     MOVEL*LOVAL    OMRHNB           Item Structure
     C                     MOVEL*LOVAL    OMRINB           Item Structure
     C                     MOVEL*LOVAL    OMHGCD           Item Code
      * Define work field USR Company Name
     C                     MOVEL*BLANK    WUAGTX 30
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Market Overage
     C                     Z-ADD*ZERO     WUBLPR 114
      * Define work field Order Weight Total
     C                     Z-ADD*ZERO     WUA1WG 112
      * Define work field Absorbed Freight Rate CWT
     C                     Z-ADD*ZERO     WUTBNB  52
      * Define work field Rated Freight
     C                     Z-ADD*ZERO     WUR1NB 112
      * Define work field Freight Cost
     C                     Z-ADD*ZERO     WUADCS 114
      * Define work field Absorbed Freight Amount
     C                     Z-ADD*ZERO     WUULVA 112
      * Define work field Componant Price
     C                     Z-ADD*ZERO     WUBNPR 114
      * Define work field USR Comp. Prc Rate per Lb
     C                     Z-ADD*ZERO     WUC0PR 114
      * Define work field USR Component Price Amt
     C                     Z-ADD*ZERO     WUCZPR 114
      * Define work field Description Line One
     C                     MOVEL*BLANK    WUAVNA 30
      * Define work field Commodity Market Code
     C                     MOVEL*BLANK    WULQCD  3
      * Define work field Print on Realization Rpt
     C                     MOVEL*BLANK    WUX6ST  2
      * Define work field Scheduled Ship Date
     C                     Z-ADD*ZERO     WUAODT  70
      * Define work field Commodity Market Price
     C                     Z-ADD*ZERO     WUA5PR 114
      * Define work field USR Date Priced
     C                     Z-ADD*ZERO     WUE7DT  70
      * Define work field Price based on U/M1 S
     C                     Z-ADD*ZERO     WUAPPR 114
      * Define work field Price based on U/M2 S
     C                     Z-ADD*ZERO     WUAQPR 114
      * Define work field Price based on U/M3 S
     C                     Z-ADD*ZERO     WUARPR 114
      * Define work field USR Percent Work, 7.4
     C                     Z-ADD*ZERO     WUBHPC  74
      * Define work field USR Market Value
     C                     Z-ADD*ZERO     WUT2VA 112
      * Define work field Standard Overage USR
     C                     Z-ADD*ZERO     WUX4VA 112
      * Define work field Price Adjustment Amount
     C                     Z-ADD*ZERO     WULOVA 114
      * Define work field Numeric Field Not Needed
     C                     Z-ADD*ZERO     WUNFNN  70
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Export Status
     C                     MOVEL*BLANK    WUU2ST  1
      * Define work field Event Code
     C                     MOVEL*BLANK    WUJPCD  2
      * Define work field Default Commod Mark basis
     C                     MOVEL*BLANK    WULNCD  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WE   179       *Synon (17,9) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002 30
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0003  30
     C                     Z-ADD*ZERO     WL0004  30
     C                     MOVEL*BLANK    WL0005 30
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0006  30
     C                     MOVEL*BLANK    WL0007 30
      * Define local variables for subroutine SJRVGN.
     C                     Z-ADD*ZERO     WL0008  30
     C                     Z-ADD*ZERO     WL0009  70
     C                     MOVEL*BLANK    WL0010 30
     C                     MOVEL*BLANK    WL0011  2
     C                     Z-ADD*ZERO     WL0012  94
     C                     MOVEL*BLANK    WL0013  1
     C                     MOVEL*BLANK    WL0014  2
     C                     Z-ADD*ZERO     WL0015  94
     C                     MOVEL*BLANK    WL0016  1
     C                     MOVEL*BLANK    WL0017  2
     C                     MOVEL*BLANK    WL0018  2
     C                     Z-ADD*ZERO     WL0019 112
     C                     MOVEL*BLANK    WL0020  3
     C                     Z-ADD*ZERO     WL0021 114
     C                     Z-ADD*ZERO     WL0022 114
     C                     MOVEL*BLANK    WL0023  7
     C                     MOVEL*BLANK    WL0024  1
     C                     Z-ADD*ZERO     WL0025 114
     C                     MOVEL*BLANK    WL0026  2
      * Define local variables for subroutine SNRVGN.
     C                     Z-ADD*ZERO     WL0027  30
     C                     Z-ADD*ZERO     WL0028  70
     C                     Z-ADD*ZERO     WL0029  70
     C                     MOVEL*BLANK    WL0030  1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     MOVEL'N'       WUGGST           USR Display fie
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
