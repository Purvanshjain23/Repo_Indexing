// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for E1BIDFR
// ?Date: 14.08.2025 Time: 02:43:32
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/UserRP4IF) TYPE(EXCINTFUN)                     AA1100551;
PARAMETER(PAR.OMS_Warehouse_Code);
PARAMETER(PAR.OMS_Company_Number);
PARAMETER('A/R');
PARAMETER(PAR.OMS_Salesperson_Code);
PARAMETER(PAR.OMS_Allow_Multi_Company);
PARAMETER(PAR.OMS_Default_Printer);
PARAMETER(PAR.OMS_NAME);
PARAMETER(PAR.OMS_System_Value_Alpha);
PARAMETER(PAR.OMS_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.OMS_Warehouse_Code);
 PARAMETER(PAR.OMS_Company_Number);
 PARAMETER(PAR.OMS_Application_code);
 PARAMETER(PAR.OMS_Salesperson_Code);
 PARAMETER(PAR.OMS_Allow_Multi_Company);
 PARAMETER(PAR.OMS_Default_Printer);
 PARAMETER(PAR.OMS_NAME);
 PARAMETER(PAR.OMS_System_Value_Alpha);
 PARAMETER(PAR.OMS_Access_Denied_Y_N);

 CASE;

 // IF PAR.OMS Access Denied (Y/N) is Yes
 IF PAR.OMS_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(E1I0112);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to CompanyRP4US.
 EXECUTE FUNCTION(Mov ApplN to CompanyRP4US) TYPE(EXCUSRSRC) ('E1BHUFR');
 PARAMETER(PAR.OMS_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                   movel     #IkrTX        ##CMP
 }

 ENDIF;

}


// PGM.*Subfile mode = CND.*Truncated
PGM.*Subfile_mode = 1;

//?USER: Initialize subfile record from DBF record

// RCD.USR Line No 4.0 = RCD.EDI - Line Number
RCD.USR_Line_No_4_0 = RCD.EDI_Line_Number;

CASE;

// IF RCD.Batch Type is General Accounting
IF RCD.Batch_Type = 'G';

//?S17068 DN 06/04/21-Replaced with 'USR Amount 11.2'.
// RCD.USR Amount 11.2 = RCD.Gross Amount
RCD.USR_Amount_11_2 = RCD.Gross_Amount;

// IF *OTHERWISE
IF *OTHERWISE;

//?S17068 DN 06/04/21-Replaced with 'USR Amount 11.2'.
// RCD.USR Amount 11.2 = RCD.Amount
RCD.USR_Amount_11_2 = RCD.Amount;

ENDIF;

// Execute function *Move-Right RP4.
EXECUTE FUNCTION(*Move-Right RP4) TYPE(EXCUSRSRC) ('E1K4UFR');
PARAMETER(RCD.Text_7);
PARAMETER(RCD.Business_Unit_Cost_Center);
{
 C                   MOVE      #Iacna        #Oadna
}


// LCL.USR Date Julian 5.0 = RCD.G/L Date
LCL.USR_Date_Julian_5_0 = RCD.G_L_Date;

// Call program Get MDY from JUL    X0028.
CALL PROGRAM(Get MDY from JUL    X0028) ('E10028C');
PARAMETER(LCL.USR_Date_Julian_5_0);
PARAMETER(RCD.USR_Date_cyymmdd);

CASE;

// IF RCD.Units is NE Zero
IF RCD.Units <> 0;

// RCD.Text 3 = CON.Y
RCD.Text_3 = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Text 3 = CON.*BLANK
RCD.Text_3 = *BLANK;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.*SFLSEL is *Display
IF RCD.*SFLSEL = '5'/'5';

// Call program Dsp E10911 J/E Dtl    DR.
CALL PROGRAM(Dsp E10911 J/E Dtl    DR) ('E1MAD1R');
PARAMETER(RCD.EDI_User_ID);
PARAMETER(RCD.EDI_Batch_Number);
PARAMETER(RCD.EDI_Transaction_Nbr);
PARAMETER(RCD.EDI_Line_Number);

ENDIF;

//?USER: Final processing (Pre-confirm)

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

