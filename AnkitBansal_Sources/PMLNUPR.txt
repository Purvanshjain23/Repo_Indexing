     H/TITLE EUP Cvt Accrual History   Execute user program
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Y* ADDLIBLE LIB(COMMON) POSITION(*LAST)
     Y* ADDLIBLE LIB(DFDATAtst) POSITION(*LAST)
     Y* ADDLIBLE LIB(DLY029) POSITION(*LAST)
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     FACCRHIST  if   e             disk
      *  JRD Customer Accruals History File
      *
     FITMCPKL1  if   e           k disk    RENAME(ITMCPK:ITMCPK1)
      *  Daily's CoPack Item/Seaboard Item Cross Ref
      *
     FACCRHISTNWif a e             disk    rename(ACCRHIS:upd_accr)
     F                                     prefix(upd_)
      *  JRD Customer Accruals History File - with converted Customer Number
      *
     FCSTMSTL1  if   e           k disk
      *  Active Customer Conversion - By DLYCST
      *
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job Date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      *
      * Standalone fields
     D  new_cust       S                   LIKE(cust)
      *
      *
      /EJECT
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Process ACCRHIST - JRD Customer Accruals History File
     C                   read      accrhis                                95
     C                   dow       *in95 = *off                                 do loop
      *
      * Get Ship to Customer
     C                   exsr      $cstmst
      *
      * Check for record in Daily's CoPack Item/Seaboard Item XREF
     C                   exsr      $itmcpk
      *
      * Write converted JRD Customer Accruals History File record
     C                   exsr      $crtrcd
      *
      * Next record
     C                   read      accrhis                                95
     C                   enddo                                                  do loop
      *
      *----------------------------------------------------------------
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
      /EJECT
      *---------------------------------------------------------------
      * Get Ship to Customer
      *---------------------------------------------------------------
      *
     C     $cstmst       begsr
      *
      * Set default values for flags
      *
     C     cust          chain     cstmst                             91
      *
      * If record found, get Seaboard customer Number
     C                   if        *in91 = *off                                 91 = off
     C                   eval      new_cust = shipto                            New customer Number
     C                   else
      * User Dailys  customer Number
     C                   eval      new_cust = cust                              New customer Number
      *
     C                   endif                                                  91 = off
      *
     C                   endsr
     C/EJECT
      *---------------------------------------------------------------
      * Check for record in Daily's CoPack Item/Seaboard Item XREF
      *---------------------------------------------------------------
      *
     C     $itmcpk       begsr
      *
     C                   eval      dlyprd = prod
     C     dlyprd        chain     ITMCPK1                            91
      *
      * If record found, use sbdprd, else use dlyprd
     C                   if        *in91 = *off                                 91 = off
     C                   eval      upd_prod = sbdprd
     C                   else
     C                   eval      upd_prod = dlyprd
      *
     C                   endif                                                  91 = off
      *
     C                   endsr
     C/EJECT
      *---------------------------------------------------------------
      * Write converted JRD Customer Accruals History File record
      *---------------------------------------------------------------
      *
     C     $crtrcd       begsr
      *
      * Populate fields
     C                   eval      upd_rec = rec                                Record ID 3/4/5
      * upd_prod set in  $itmcpk                                                Product Code
     C                   eval      upd_desc = desc                              Description
     C                   eval      upd_pro = pro                                Pro
     C                   eval      upd_weight = weight                          Quantity
     C                   eval      upd_amt = amt                                Amount
     C                   eval      upd_invoic = invoic                          Invoice Number
     C                   eval      upd_cust = new_cust                          Customer Number
     C                   eval      upd_terr = Terr                              Territory
     C                   eval      upd_date = date                              Date
     C                   eval      upd_line = line                              Line
     C                   eval      upd_delet = Delet                            Delete
     C                   eval      upd_vendor = vendor                          A/P Vendor#
     C                   eval      upd_rebc = rebc                              Rebate
     C                   eval      upd_accc = accc                              Accrual
     C                   eval      upd_frtc = frtc                              Frtc
     C                   eval      upd_accrue = accrue                          Total$
     C                   eval      upd_accamt = accamt                          Accrual Amount
      *
     C                   write     upd_accr
      *
     C                   endsr
     C/EJECT
     C     ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job Date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      *
      *================================================================
     C     ZZEXIT        ENDSR
