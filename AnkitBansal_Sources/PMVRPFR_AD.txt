// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMVRPFR
// ?Date: 14.08.2025 Time: 12:05:49
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// PAR.Status - Y or N = CND.no
PAR.Status_Y_or_N = 'N';

//?USER: Record selection processing

//?** Select if customer number was entered on the prompt
CASE;

// IF PAR.Ship To Customer is not equal to zero
IF PAR.Ship_To_Customer <> *ZERO;

CASE;

// IF DB1.Ship To Customer NE PAR.Ship To Customer
IF DB1.Ship_To_Customer <> PAR.Ship_To_Customer;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?** Select if start date was entered on the prompt
CASE;

// IF PAR.Price Start Date is Entered
IF PAR.Price_Start_Date > *ZERO;

CASE;

// IF DB1.Price Start Date LT PAR.Price Start Date
IF DB1.Price_Start_Date < PAR.Price_Start_Date;

// OR DB1.Price Start Date GT PAR.Price End Date
OR DB1.Price_Start_Date > PAR.Price_End_Date;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?** Select if price code was entered on the prompt
CASE;

// IF PAR.Price Code is Entered
IF PAR.Price_Code > *ZERO;

CASE;

// IF DB1.Price Code LT PAR.Price Code
IF DB1.Price_Code < PAR.Price_Code;

// OR DB1.Price Code GT PAR.USR number
OR DB1.Price_Code > PAR.USR_number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?** Select if user was entered on the prompt
CASE;

// IF PAR.Entered by User NE WRK.Blank for 12          USR
IF PAR.Entered_by_User <> WRK.Blank_for_12_USR;

CASE;

// IF DB1.Entered by User NE PAR.Entered by User
IF DB1.Entered_by_User <> PAR.Entered_by_User;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: On print of first page format

EXECUTE FUNCTION(Ship To Name          DRV) TYPE(DRVFLD)                        AC1573561;
PARAMETER(X1PG_Ship_To_Name_DRV);
PARAMETER(X1PG_Ship_to_Customer_USR);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Ship_To_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


CASE;

// IF 1PG.Ship to Customer      USR is Not entered
IF X1PG_Ship_to_Customer_USR = *ZERO;

// 1PG.Ship To Name          DRV = CON.*ALL
X1PG_Ship_To_Name_DRV = *ALL;

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Entered by User header format

// SUPPRESSED PRINT Price Start Date header format

// SUPPRESSED PRINT Price End Date header format

//?USER: On print of detail format

MOVE *ALL (To: CUR From: PAR);

EXECUTE FUNCTION(Ship To Name          DRV) TYPE(DRVFLD)                        AC1573561;
PARAMETER(CUR.Ship_To_Name_DRV);
PARAMETER(CUR.Ship_To_Customer);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Ship_To_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// CUR.USR Time 4.0 = DB1.Time Entered
CUR.USR_Time_4_0 = DB1.Time_Entered;

// PAR.Status - Y or N = CND.yes
PAR.Status_Y_or_N = 'Y';

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : Prt Cust Prc List All PO
EXECUTE FUNCTION(Prt Cust Prc List All PO) TYPE(PRTOBJ);
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(CUR.Price_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level totals

// SUPPRESSED PRINT Price End Date totals format

// SUPPRESSED PRINT Price Start Date totals format

// SUPPRESSED PRINT Entered by User totals format

