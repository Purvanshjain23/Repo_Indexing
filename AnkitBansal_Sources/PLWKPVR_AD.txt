// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLWKPVR
// ?Date: 14.08.2025 Time: 02:55:36
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?E3773 JJH 12/23/14 - Hot Weight Data Source
//? The accruacy of the data that is sent to Demand Planning (DP)
//? for Supply is in question event though validation of how the
//? data is captured from the Hog Procurement System and sent to DP
//? would have been performed in the Supply Planning POD.  Instead
//? of invoicing IT each time the accuracy is questioned, an
//? on-going task in the Supply Planning business process is being
//? added that will allow the business to monitor the inputs/data
//? into Supply planning. (Notes from Purva Droge to John Zimmerman)
ENDDO;

// LCL.First Time Flag Usr = CND.Yes
LCL.First_Time_Flag_Usr = 'Y';

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(LCL.ER_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(LCL.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?USER: Load screen

//?First Time, default Company Number
CASE;

// IF LCL.First Time Flag Usr is Yes
IF LCL.First_Time_Flag_Usr = 'Y';

// DTL.ER Company Number = LCL.ER Company Number
DTL.ER_Company_Number = LCL.ER_Company_Number;

// DTL.Print Daily Detail USR = CND.Yes
DTL.Print_Daily_Detail_USR = 'Y';

// DTL.Print Daily Summary USR = CND.Yes
DTL.Print_Daily_Summary_USR = 'Y';

// LCL.First Time Flag Usr = CND.No
LCL.First_Time_Flag_Usr = 'N';

ENDIF;

//?USER: Validate fields

//?SNEDRRMSG if Company NE 360 or 960
CASE;

// IF DTL.ER Company Number is SBD Farms of Guymon, Ok
IF DTL.ER_Company_Number = 360;

//?SNEDRRMSG if Company NE 360 or 960
// IF DTL.ER Company Number is Triumph Foods Market
IF DTL.ER_Company_Number = 960;

//?SNEDRRMSG if Company NE 360 or 960
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Company must be 360 or 960.'
ERROR(PRK1335);
MSGPARM(DTL.ER_Company_Number);

ENDIF;

//?SNDERRMSG if Kill Date From LT 07/28/14
CASE;

// IF DTL.ER Kill Date is LT 07/28/14
IF DTL.ER_Kill_Date < 1140728;

// Send error message - 'There is no Hot Weight Data Source prior to 07/28/14.'
ERROR(PRK1336);
MSGPARM(DTL.ER_Kill_Date);

ENDIF;

//?SNDERRMSG if Kill Date To GT Current Date
CASE;

// IF DTL.Kill Date To USR GT JOB.*Job date
IF DTL.Kill_Date_To_USR > JOB.*Job_date;

// Send error message - 'Kill Date To cannot be greater than Today's Date.'
ERROR(PRK1338);
MSGPARM(DTL.Kill_Date_To_USR);

ENDIF;

//?SNDERRMSG if Kill Date From GT Kill Date To
CASE;

// IF DTL.ER Kill Date GT DTL.Kill Date To USR
IF DTL.ER_Kill_Date > DTL.Kill_Date_To_USR;

// Send error message - 'Kill Date From &1 cannot be greater than Kill Date To &2.'
ERROR(PRK1337);
MSGPARM(DTL.ER_Kill_Date);
MSGPARM(DTL.Kill_Date_To_USR);

ENDIF;

//?SNDERRMSG if Print Daily Detail and Print Daily Summary = N
CASE;

// IF DTL.Print Daily Detail USR is No
IF DTL.Print_Daily_Detail_USR = 'N';

// AND DTL.Print Daily Summary USR is No
AND DTL.Print_Daily_Summary_USR = 'N';

// Send error message - 'Print Daily Detail and Print Daily Summary cannot both be "N."'
ERROR(PRK1348);
MSGPARM(DTL.Print_Daily_Detail_USR);
MSGPARM(DTL.Print_Daily_Summary_USR);

ENDIF;

//?USER: User defined action

//?SBMJOB to create XLS for Hot Scale Daily and Hot Scale Summary
// Call program Bld Hot Scale Daily   XF.
SBMJOB;
CALL PROGRAM(Bld Hot Scale Daily   XF) ('PLWMXFR');
PARAMETER(DTL.ER_Company_Number);
PARAMETER(DTL.ER_Kill_Date);
PARAMETER(DTL.Kill_Date_To_USR);
PARAMETER(DTL.Print_Daily_Detail_USR);
PARAMETER(DTL.Print_Daily_Summary_USR);
PARAMETER(DTL.EMail_Address);
SBMJOBOVR JOB(HOTWGTDT);
SBMJOBOVR LOG(4;
SBMJOBOVR 00;
SBMJOBOVR *SECLVL);
SBMJOBOVR LOGCLPGM(*YES);
SBMJOBOVR LOGOUTPUT(*JOBD);
SBMJOBEND;

