// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKY4XFR
// ?Date: 14.08.2025 Time: 02:50:52
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?DOC:  Maintenance Log
DO;

//?10/16/01 RMC PK0313: Add check for SBD Top Tattoo
//?             and Comment (*) Subject hog CASE stmts
//?03/06/02 PKD Starting 03/35/02, all of the Tattoo's are going
//?             to be tattooed 100%.  This includes internal hogs
//?             and externals.  The internals do not need to be in
//?             the 7000 series and Top Loads also do not need to
//?             be in a special series.  The window for valid
//?             Tattoo Number has now been opened from 1111 to 8999.
//?             All Tattoo will now be generated using the random
//?             method, as we do externals now.
//?             LCL.Random Tattoo Sts USR has been added to overrided
//?             existing methods for generating the next tattoo number.
//?             If going back to original method, then change the
//?             Random Tattoo flag to No.
//?2/7/2007 slm Worked on completing the system date logic
//?         Read the Tattoo Pending from the calucalted Prv Date
//?         If Found in the Range from Prv thru Next date, then
//?         get the next tattoo number.
//?         This was only reading the Prev and the Next, if this was
//?         a day in between, then this records were not found
//?         and the tattoo number was used again.
//?11/05/2020 ISE H16853 Recompiled due to change in Buy Order Number
ENDDO;

//?Get the 3.4, & 5 digit HPETTO3DT  HPETTO4DT  HPETTO5DT
DO;

// LCL.Company Value Code    USR = CON.HPETTO3DT
LCL.Company_Value_Code_USR = 'HPETTO3DT';

// Call program Rtv Company Value Nbr XF.
CALL PROGRAM(Rtv Company Value Nbr XF) ('PDHGXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(LCL.Company_Value_Code_USR);
PARAMETER(WRK.System_Value_Numeric_USR);

// LCL.Text 3 Digit Counter Usr = WRK.System Value Numeric  USR + CON.1
LCL.Text_3_Digit_Counter_Usr = WRK.System_Value_Numeric_USR + 1;

// LCL.Company Value Code    USR = CON.HPETTO4DT
LCL.Company_Value_Code_USR = 'HPETTO4DT';

// Call program Rtv Company Value Nbr XF.
CALL PROGRAM(Rtv Company Value Nbr XF) ('PDHGXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(LCL.Company_Value_Code_USR);
PARAMETER(WRK.System_Value_Numeric_USR);

// LCL.Text 4 Digit Counter Usr = WRK.System Value Numeric  USR + CON.1
LCL.Text_4_Digit_Counter_Usr = WRK.System_Value_Numeric_USR + 1;

// LCL.Company Value Code    USR = CON.HPETTO5DT
LCL.Company_Value_Code_USR = 'HPETTO5DT';

// Call program Rtv Company Value Nbr XF.
CALL PROGRAM(Rtv Company Value Nbr XF) ('PDHGXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(LCL.Company_Value_Code_USR);
PARAMETER(WRK.System_Value_Numeric_USR);

// LCL.Text 4 Digit Counter Usr = WRK.System Value Numeric  USR + CON.1
LCL.Text_4_Digit_Counter_Usr = WRK.System_Value_Numeric_USR + 1;

ENDDO;

// LCL.Random Tattoo Sts USR = CND.Yes
LCL.Random_Tattoo_Sts_USR = 'Y';

// LCL.Tattoo Off Truck USR = CND.Yes
LCL.Tattoo_Off_Truck_USR = 'Y';

//?Get 2 days previous and 1 day for next
DO;

//?USING of Prv for all companies record back now to 2 days
//?In the Payment Post for Tf we are purging only if 2days old
//?In the Payment Post for Guymon we are purging only if 1days old
//?since this is assigning and skipping number then for all companies
//?go two days for the prev date.
//?Use the System Kill date
//?USING of Prv for all companies record back to prev 1 day
// Call program Rtv Prev Kill Date    XF.
CALL PROGRAM(Rtv Prev Kill Date    XF) ('PDRUXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(LCL.TH_Kill_Date);

// LCL.First Prv Date Usr = LCL.TH Kill Date
LCL.First_Prv_Date_Usr = LCL.TH_Kill_Date;

//?Use the prev kill date from the first prv day
//?USING of Prv for all companies record back to prev 2nd day
// Call program Rtv Prev Kill Date    XF.
CALL PROGRAM(Rtv Prev Kill Date    XF) ('PDRUXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(LCL.TH_Kill_Date);
PARAMETER(LCL.TH_Kill_Date);

// LCL.Prv Date = LCL.TH Kill Date
LCL.Prv_Date = LCL.TH_Kill_Date;

//?USING of System Date and get the Next Kill Date
// Call program Rtv Nxt Kill Dt 2 OMS XF.
CALL PROGRAM(Rtv Nxt Kill Dt 2 OMS XF) ('PDUXXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(LCL.Next_Kill_Date);

ENDDO;

//?Set the cnd to retrieve the Tattoo nbr per the class type
CASE;

// IF PAR.HC Class Type is Market
IF PAR.HC_Class_Type = 'M';

// AND PAR.Creation Point of Ttt USR is Receiving
AND PAR.Creation_Point_of_Ttt_USR = 'R';

CASE;

// IF PAR.SBD Top Load Sts is No
IF PAR.SBD_Top_Load_Sts = 'N';

CASE;

// IF PAR.SR Type is Internal
IF PAR.SR_Type = 'I';

CASE;

// IF PAR.Tattoo Type USR is Research
IF PAR.Tattoo_Type_USR = 'R';

// PAR.Company Value Code    USR = CND.Last Tattoo - Research
PAR.Company_Value_Code_USR = 'LSTTTTRSC';

// LCL.Random Tattoo Sts USR = CND.No
LCL.Random_Tattoo_Sts_USR = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Company Value Code    USR = CND.Last Tattoo - Internal
PAR.Company_Value_Code_USR = 'LSTTTTINT';

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Company Value Code    USR = CND.Last Tattoo - Market
PAR.Company_Value_Code_USR = 'LSTTTTMKT';

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Company Value Code    USR = CND.Last Tattoo - SBD Top
PAR.Company_Value_Code_USR = 'LSTTTTTOP';

ENDIF;

//?Set the cnd to retrieve the Tattoo nbr per the class type
// IF PAR.HC Class Type is Resale
IF PAR.HC_Class_Type = 'R';

// AND PAR.Creation Point of Ttt USR is Receiving
AND PAR.Creation_Point_of_Ttt_USR = 'R';

// PAR.Company Value Code    USR = CND.Last Tattoo - Market
PAR.Company_Value_Code_USR = 'LSTTTTMKT';

ENDIF;

// WRK.Record Found USR = CND.Record Found
WRK.Record_Found_USR = 'Y';

//?Get next unused tattoo number
// DOW WRK.Record Found USR is Record Found
DOW WRK.Record_Found_USR = 'Y';

//?Next Number
CASE;

// IF PAR.Company Value Code    USR is Last Tattoo - Market
IF PAR.Company_Value_Code_USR = 'LSTTTTMKT';

// OR LCL.Random Tattoo Sts USR is Yes
OR LCL.Random_Tattoo_Sts_USR = 'Y';

// Execute function Rtv Current Time      US.
EXECUTE FUNCTION(Rtv Current Time      US) TYPE(EXCUSRSRC) ('PKM1UFR');
PARAMETER(LCL.Current_Time);
{
 C                     TIME           #OA1TM
}


// LCL.Time HH USR = LCL.Current Time *HOURS
LCL.Time_HH_USR = TIMEDTLS(LCL.Current_Time 'HR');

// LCL.Time MM USR = LCL.Current Time *MINUTES
LCL.Time_MM_USR = TIMEDTLS(LCL.Current_Time 'MN');

// LCL.Time SS USR = LCL.Current Time *SECONDS
LCL.Time_SS_USR = TIMEDTLS(LCL.Current_Time 'SC');

//?Replace with 11.
CASE;

// IF LCL.Time HH USR is LE 1
IF LCL.Time_HH_USR <= 1;

// LCL.Time HH USR = CON.11
LCL.Time_HH_USR = 11;

//?Replace with 11.
// IF LCL.Time MM USR is LE 1
IF LCL.Time_MM_USR <= 1;

// LCL.Time MM USR = CON.11
LCL.Time_MM_USR = 11;

//?Replace with 11.
// IF LCL.Time SS USR is LE 1
IF LCL.Time_SS_USR <= 1;

// LCL.Time SS USR = CON.11
LCL.Time_SS_USR = 11;

ENDIF;

// Tattoo Number
LCL.Tattoo_Nbr_4_USR = ( LCL.Time_HH_USR * LCL.Time_MM_USR ) * LCL.Time_SS_USR;

//?Add 1000 or 5000.
CASE;

// IF LCL.Tattoo Nbr 4          USR is LT 1000
IF LCL.Tattoo_Nbr_4_USR < 1000;

// LCL.Tattoo Nbr 4          USR = LCL.Tattoo Nbr 4          USR + CON.1000
LCL.Tattoo_Nbr_4_USR = LCL.Tattoo_Nbr_4_USR + 1000;

//?Add 1000 or 5000.
// IF LCL.Tattoo Nbr 4          USR is GT 8998
IF LCL.Tattoo_Nbr_4_USR > 8998;

// LCL.Tattoo Nbr 4          USR = LCL.Tattoo Nbr 4          USR + CON.5000
LCL.Tattoo_Nbr_4_USR = LCL.Tattoo_Nbr_4_USR + 5000;

//?Add 1000 or 5000.
// PAR.Tattoo Number USR = LCL.Tattoo Nbr 4          USR
PAR.Tattoo_Number_USR = LCL.Tattoo_Nbr_4_USR;

ENDIF;

//?Next Number
// IF *OTHERWISE
IF *OTHERWISE;

// Call program Rtv Company Value Nbr XF.
CALL PROGRAM(Rtv Company Value Nbr XF) ('PDHGXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.Company_Value_Code_USR);
PARAMETER(WRK.System_Value_Numeric_USR);

// PAR.Tattoo Number USR = WRK.System Value Numeric  USR + CON.1
PAR.Tattoo_Number_USR = WRK.System_Value_Numeric_USR + 1;

// WRK.System Value Numeric  USR = PAR.Tattoo Number USR
WRK.System_Value_Numeric_USR = PAR.Tattoo_Number_USR;

// Call program RTV/Chg Co Val Num    XF.
CALL PROGRAM(RTV/Chg Co Val Num    XF) ('PDHFXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.Company_Value_Code_USR);
PARAMETER(WRK.System_Value_Numeric_USR);

ENDIF;

//?Replace 0's with on 3digit with counter and 4with cnt & 5with cnt
DO;

// WRK.Tattoo Number USR(TXT) = PAR.Tattoo Number USR
WRK.Tattoo_Number_USRTXT = PAR.Tattoo_Number_USR;

// WRK.Text 1                USR = SUBSTRING(WRK.Tattoo Number USR(TXT),CON.1,CON.1)
WRK.Text_1_USR = SUBSTRING(WRK.Tattoo_Number_USRTXT:1:1);

// WRK.Text 2                USR = SUBSTRING(WRK.Tattoo Number USR(TXT),CON.2,CON.1)
WRK.Text_2_USR = SUBSTRING(WRK.Tattoo_Number_USRTXT:2:1);

// WRK.Text 3                USR = SUBSTRING(WRK.Tattoo Number USR(TXT),CON.3,CON.1)
WRK.Text_3_USR = SUBSTRING(WRK.Tattoo_Number_USRTXT:3:1);

// WRK.Text 4                USR = SUBSTRING(WRK.Tattoo Number USR(TXT),CON.4,CON.1)
WRK.Text_4_USR = SUBSTRING(WRK.Tattoo_Number_USRTXT:4:1);

// WRK.Text5                 USR = SUBSTRING(WRK.Tattoo Number USR(TXT),CON.5,CON.1)
WRK.Text5_USR = SUBSTRING(WRK.Tattoo_Number_USRTXT:5:1);

//?04/20/04 PKD If Random Tattoo = Y     digit 3 & digit 4
CASE;

// IF LCL.Random Tattoo Sts USR is Yes
IF LCL.Random_Tattoo_Sts_USR = 'Y';

//?Text(3)
CASE;

// IF WRK.Text 3                USR is Eq'0'
IF WRK.Text_3_USR = '0';

//?Counter is only to try to make each digit more random
// LCL.Text 3 Digit Counter Usr = LCL.Text 3 Digit Counter Usr + CON.1
LCL.Text_3_Digit_Counter_Usr = LCL.Text_3_Digit_Counter_Usr + 1;

CASE;

// IF LCL.Text 3 Digit Counter Usr is High Limit
IF LCL.Text_3_Digit_Counter_Usr = 9;

// OR LCL.Text 3 Digit Counter Usr is low Limit
OR LCL.Text_3_Digit_Counter_Usr <= 1;

// LCL.Text 3 Digit Counter Usr = CON.1
LCL.Text_3_Digit_Counter_Usr = 1;

ENDIF;

// WRK.Text 3                USR = LCL.Text 3 Digit Counter Usr
WRK.Text_3_USR = LCL.Text_3_Digit_Counter_Usr;

ENDIF;

//?Text(4)
CASE;

// IF WRK.Text 4                USR is Eq'0'
IF WRK.Text_4_USR = '0';

//?Counter is only to try to make each digit more random
// LCL.Text 4 Digit Counter Usr = LCL.Text 4 Digit Counter Usr + CON.1
LCL.Text_4_Digit_Counter_Usr = LCL.Text_4_Digit_Counter_Usr + 1;

CASE;

// IF LCL.Text 4 Digit Counter Usr is High Limit
IF LCL.Text_4_Digit_Counter_Usr = 9;

// OR LCL.Text 4 Digit Counter Usr is low Limit
OR LCL.Text_4_Digit_Counter_Usr <= 1;

// LCL.Text 4 Digit Counter Usr = CON.2
LCL.Text_4_Digit_Counter_Usr = 2;

ENDIF;

// WRK.Text 4                USR = LCL.Text 4 Digit Counter Usr
WRK.Text_4_USR = LCL.Text_4_Digit_Counter_Usr;

ENDIF;

//?04/20/04 PKD If Random Tattoo = Y     digit 3 & digit 4
// IF PAR.Tattoo Type USR is Research
IF PAR.Tattoo_Type_USR = 'R';

//?Text(4)
CASE;

// IF WRK.Text 4                USR is Eq'0'
IF WRK.Text_4_USR = '0';

//?Counter is only to try to make each digit more random
// LCL.Text 4 Digit Counter Usr = CON.1
LCL.Text_4_Digit_Counter_Usr = 1;

// WRK.Text 4                USR = LCL.Text 4 Digit Counter Usr
WRK.Text_4_USR = LCL.Text_4_Digit_Counter_Usr;

ENDIF;

ENDIF;

//?Text(5)
CASE;

// IF WRK.Wrk Text(5)           USR is Eq'0'
IF WRK.Text5_USR = '0';

//?Counter is only to try to make each digit more random
//?Non Research AND Research process with the 5 digit
CASE;

// IF PAR.Tattoo Type USR is Research
IF PAR.Tattoo_Type_USR = 'R';

// LCL.Text 5 Digit Counter Usr = CON.1
LCL.Text_5_Digit_Counter_Usr = 1;

//?Non Research AND Research process with the 5 digit
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Text 5 Digit Counter Usr = LCL.Text 5 Digit Counter Usr + CON.1
LCL.Text_5_Digit_Counter_Usr = LCL.Text_5_Digit_Counter_Usr + 1;

CASE;

// IF LCL.Text 5 Digit Counter Usr is High Limit
IF LCL.Text_5_Digit_Counter_Usr = 9;

// OR LCL.Text 5 Digit Counter Usr is low Limit
OR LCL.Text_5_Digit_Counter_Usr <= 1;

// LCL.Text 5 Digit Counter Usr = CON.3
LCL.Text_5_Digit_Counter_Usr = 3;

ENDIF;

ENDIF;

// WRK.Text5                 USR = LCL.Text 5 Digit Counter Usr
WRK.Text5_USR = LCL.Text_5_Digit_Counter_Usr;

ENDIF;

// WRK.Tattoo Number USR(TXT) = CON.*BLANK
WRK.Tattoo_Number_USRTXT = *BLANK;

// WRK.Tattoo Number USR(TXT) = CONCAT(WRK.Text 1                USR,WRK.Text 2                USR,C
WRK.Tattoo_Number_USRTXT = WRK.Text_1_USR + WRK.Text_2_USR (*ZERO);

// WRK.Tattoo Number USR(TXT) = CONCAT(WRK.Tattoo Number USR(TXT),WRK.Text 3                USR,CON.
WRK.Tattoo_Number_USRTXT = WRK.Tattoo_Number_USRTXT + WRK.Text_3_USR (*ZERO);

// WRK.Tattoo Number USR(TXT) = CONCAT(WRK.Tattoo Number USR(TXT),WRK.Text 4                USR,CON.
WRK.Tattoo_Number_USRTXT = WRK.Tattoo_Number_USRTXT + WRK.Text_4_USR (*ZERO);

// WRK.Tattoo Number USR(TXT) = CONCAT(WRK.Tattoo Number USR(TXT),WRK.Text5                 USR,CON.
WRK.Tattoo_Number_USRTXT = WRK.Tattoo_Number_USRTXT + WRK.Text5_USR (*ZERO);

// PAR.Tattoo Number USR = CVTVAR(WRK.Tattoo Number USR(TXT))
PAR.Tattoo_Number_USR = CVTVAR(WRK.Tattoo_Number_USRTXT);

ENDDO;

// LCL.Text 25 #1 Usr = CON.*BLANK
LCL.Text_25_#1_Usr = *BLANK;

// LCL.Text 25 #2 Usr = CON.*BLANK
LCL.Text_25_#2_Usr = *BLANK;

// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

//?Tattoo Off Truck:  Chk Tattoo Pending for duplicate Prv to Nxt
CASE;

// IF LCL.Tattoo Off Truck USR is Yes
IF LCL.Tattoo_Off_Truck_USR = 'Y';

// WRK.Record Found USR = CND.Record Not Found
WRK.Record_Found_USR = 'N';

EXECUTE FUNCTION(Val TtoExt Co/Ta/DtRngRT) TYPE(RTVOBJ) FILE(PKFJCPP)           AB1275742;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.Tattoo_Number_USR);
PARAMETER(LCL.Prv_Date);
PARAMETER(LCL.Prv_Date);
PARAMETER(LCL.Next_Kill_Date);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 QUIT;

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// WRK.Record Found USR = CND.Record Not Found
WRK.Record_Found_USR = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Record Found USR = CND.Record Found
WRK.Record_Found_USR = 'Y';

ENDIF;

// LCL.Text 25 #1 Usr = Condition name of WRK.Record Found USR
LCL.Text_25_#1_Usr = RTVCND(WRK.Record_Found_USR);

ENDIF;

//?Check the tattoo number already existing. In the Tattoo Header
//?VAL:  If Tattoo Number already exists.
CASE;

// IF WRK.Record Found USR is Record Not Found
IF WRK.Record_Found_USR = 'N';

//?Kill date is the system date
EXECUTE FUNCTION(Rtv Val Ttt,Kll Dt    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1154371;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(PAR.Tattoo_Number_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

//?Set Record Found USR
CASE;

// IF PAR.Company Value Code    USR is Last Tattoo - Market
IF PAR.Company_Value_Code_USR = 'LSTTTTMKT';

// OR LCL.Random Tattoo Sts USR is Yes
OR LCL.Random_Tattoo_Sts_USR = 'Y';

// WRK.Record Found USR = CND.Record Found
WRK.Record_Found_USR = 'Y';

//?Set Record Found USR
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Record Found USR = CND.Record Found
WRK.Record_Found_USR = 'Y';

// WRK.System Value Numeric  USR = PAR.Tattoo Number USR
WRK.System_Value_Numeric_USR = PAR.Tattoo_Number_USR;

// Call program RTV/Chg Co Val Num    XF.
CALL PROGRAM(RTV/Chg Co Val Num    XF) ('PDHFXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.Company_Value_Code_USR);
PARAMETER(WRK.System_Value_Numeric_USR);

ENDIF;

// LCL.Text 25 #2 Usr = Condition name of WRK.Record Found USR
LCL.Text_25_#2_Usr = RTVCND(WRK.Record_Found_USR);

// IF *OTHERWISE
IF *OTHERWISE;

//?Check Prev Kill Date & Next Kill Date
CASE;

// IF PAR.Company Value Code    USR is Last Tattoo - Market
IF PAR.Company_Value_Code_USR = 'LSTTTTMKT';

// OR LCL.Random Tattoo Sts USR is Yes
OR LCL.Random_Tattoo_Sts_USR = 'Y';

//?021207 slm Use first Prv Date only 1 day back
EXECUTE FUNCTION(Rtv Val Ttt,Kll Dt    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1154371;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(LCL.First_Prv_Date_Usr);
PARAMETER(PAR.Tattoo_Number_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// WRK.Record Found USR = CND.Record Found
WRK.Record_Found_USR = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

//?** Check Next Kill Date **
EXECUTE FUNCTION(Rtv Val Ttt,Kll Dt    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1154371;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(LCL.Next_Kill_Date);
PARAMETER(PAR.Tattoo_Number_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// WRK.Record Found USR = CND.Record Found
WRK.Record_Found_USR = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Record Found USR = CND.Record Not Found
WRK.Record_Found_USR = 'N';

ENDIF;

ENDIF;

//?Check Prev Kill Date & Next Kill Date
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Record Found USR = CND.Record Not Found
WRK.Record_Found_USR = 'N';

ENDIF;

// LCL.Text 25 #2 Usr = Condition name of WRK.Record Found USR
LCL.Text_25_#2_Usr = RTVCND(WRK.Record_Found_USR);

ENDIF;

ENDIF;

ENDDO;

//?Check the tattoo number's upper limit.
//?Tattoo - Number Limits
CASE;

// IF LCL.Random Tattoo Sts USR is Yes
IF LCL.Random_Tattoo_Sts_USR = 'Y';

CASE;

// IF PAR.Tattoo Number USR is Greater than 8999
IF PAR.Tattoo_Number_USR > 8999;

// PAR.Tattoo Number USR = CON.1111
PAR.Tattoo_Number_USR = 1111;

ENDIF;

//?Tattoo - Number Limits
// IF PAR.Company Value Code    USR is Last Tattoo - Market
IF PAR.Company_Value_Code_USR = 'LSTTTTMKT';

//?Not Internals
CASE;

// IF PAR.Tattoo Number USR is Greater than 6998
IF PAR.Tattoo_Number_USR > 6998;

// PAR.Tattoo Number USR = CON.1111
PAR.Tattoo_Number_USR = 1111;

ENDIF;

//?Tattoo - Number Limits
// IF PAR.Company Value Code    USR is Last Tattoo - Internal
IF PAR.Company_Value_Code_USR = 'LSTTTTINT';

//?Internals
CASE;

// IF PAR.Tattoo Number USR is Greater than 7998
IF PAR.Tattoo_Number_USR >= 7998;

// PAR.Tattoo Number USR = CON.7000
PAR.Tattoo_Number_USR = 7000;

//?RMC 4/12/05 update company values LSTTTTINT
// WRK.System Value Numeric  USR = PAR.Tattoo Number USR
WRK.System_Value_Numeric_USR = PAR.Tattoo_Number_USR;

// Call program RTV/Chg Co Val Num    XF.
CALL PROGRAM(RTV/Chg Co Val Num    XF) ('PDHFXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.Company_Value_Code_USR);
PARAMETER(WRK.System_Value_Numeric_USR);

ENDIF;

//?Tattoo - Number Limits
// IF PAR.Company Value Code    USR is Last Tattoo - SBD Top
IF PAR.Company_Value_Code_USR = 'LSTTTTTOP';

//?SBD Top Tattoos   10/16/01 PK0313
CASE;

// IF PAR.Tattoo Number USR is Greater than 8999
IF PAR.Tattoo_Number_USR > 8999;

// PAR.Tattoo Number USR = CON.8000
PAR.Tattoo_Number_USR = 8000;

ENDIF;

//?Tattoo - Number Limits
// IF PAR.Company Value Code    USR is Last Tattoo - Research
IF PAR.Company_Value_Code_USR = 'LSTTTTRSC';

//?SBD Research    04/19/04 PKD
CASE;

// IF PAR.Tattoo Number USR is Greater than 9850
IF PAR.Tattoo_Number_USR >= 9850;

//?8/16/2006 slm this was 9500 WAS change to 9511
// PAR.Tattoo Number USR = CON.9511
PAR.Tattoo_Number_USR = 9511;

//?RMC 4/12/05 update company values LSTTTTRSC
// WRK.System Value Numeric  USR = PAR.Tattoo Number USR
WRK.System_Value_Numeric_USR = PAR.Tattoo_Number_USR;

// Call program RTV/Chg Co Val Num    XF.
CALL PROGRAM(RTV/Chg Co Val Num    XF) ('PDHFXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.Company_Value_Code_USR);
PARAMETER(WRK.System_Value_Numeric_USR);

ENDIF;

//?Tattoo - Number Limits
//?Tattoo - Number Limits
//?Update the 3, 4, 5 digit HPETTO3DT HPETTO4DT HPETTO5DT
DO;

//?Update the 3,4 and 5digit in the company value
// LCL.Company Value Code    USR = CON.HPETTO3DT
LCL.Company_Value_Code_USR = 'HPETTO3DT';

// WRK.System Value Numeric  USR = LCL.Text 3 Digit Counter Usr + CON.1
WRK.System_Value_Numeric_USR = LCL.Text_3_Digit_Counter_Usr + 1;

// Call program RTV/Chg Co Val Num    XF.
CALL PROGRAM(RTV/Chg Co Val Num    XF) ('PDHFXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(LCL.Company_Value_Code_USR);
PARAMETER(WRK.System_Value_Numeric_USR);

// LCL.Company Value Code    USR = CON.HPETTO4DT
LCL.Company_Value_Code_USR = 'HPETTO4DT';

// WRK.System Value Numeric  USR = LCL.Text 4 Digit Counter Usr + CON.1
WRK.System_Value_Numeric_USR = LCL.Text_4_Digit_Counter_Usr + 1;

// Call program RTV/Chg Co Val Num    XF.
CALL PROGRAM(RTV/Chg Co Val Num    XF) ('PDHFXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(LCL.Company_Value_Code_USR);
PARAMETER(WRK.System_Value_Numeric_USR);

// LCL.Company Value Code    USR = CON.HPETTO5DT
LCL.Company_Value_Code_USR = 'HPETTO5DT';

// WRK.System Value Numeric  USR = LCL.Text 5 Digit Counter Usr + CON.1
WRK.System_Value_Numeric_USR = LCL.Text_5_Digit_Counter_Usr + 1;

// Call program RTV/Chg Co Val Num    XF.
CALL PROGRAM(RTV/Chg Co Val Num    XF) ('PDHFXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(LCL.Company_Value_Code_USR);
PARAMETER(WRK.System_Value_Numeric_USR);

ENDIF;

ENDDO;

