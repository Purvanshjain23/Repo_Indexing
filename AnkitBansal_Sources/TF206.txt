     h option(*SRCSTMT:*NODEBUGIO)
      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     Revenue: Update Revenue Detail with Inventory Values
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     05/31/05
      *
      *              This program processes Synon Inventory files and updates the
      *              Revenue detail file for a specific week-ending date.
      *
      *              Initially, this program was called only from the Synon program
      *              when the user "posted" the weekly inventory values. Now, we also
      *              call it from both Meat Costing and TFS functions.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 03/13/06  LeAnne Fedor
      *           Added logic for 4 new fields in TFP010:
      *              SBF floor produced pounds
      *              SBF floor produced value amount
      *              TF floor produced pounds
      *              TF floor produced value amount
      *
      * 04/12/06  LeAnne Fedor
      *           Added logic to set the LDA for generation of the
      *           Floor Production Report.
      *
      * 04/26/06  LeAnne Fedor
      *           Initialized the LDA value for OUTQ to *JOB instead of blanks.
      *
      * 12/01/06  LeAnne Ramsey
      *           Logic changed to use new Datamart Calendar file.
      *
      * 02/14/07  LeAnne Ramsey
      *           Recompile only. New field "STD Other Cost/LB" was added to
      *           Weekly Product Revenue Detail file.
      *
      * 03/26/07  LeAnne Ramsey
      *           Added logic to retrieve the Capability Flag and populate this
      *           new field in the Weekly Product Revenue Detail file.
      *
      * 03/28/07  LeAnne Ramsey
      *           For our new Weekly Inventory Close function, we need to validate that
      *           Nathan has performed the Inventory Stock Closing function in the Synon
      *           system before we let the users perform the Weekly Inventory Close function
      *           for the TF Fees and Payments system. So, when this program runs, we will
      *           update our new data area with the Week-Ending Date of Nathan's Stock
      *           Closing function.
      *
      * 04/05/07  LeAnne Ramsey
      *           We just added the Exclude from Mix and Exclude from Volume Flags to the
      *           Weekly Product Revenue Detail file. So, I expanded the logic that
      *           retrieves the new Capablity Flag to retrieve these two "exclude" flags.
      *
      * 04/16/07  LeAnne Ramsey
      *           Added parms: Meat Cost Group Code
      *           Changed parms: Exclude from Mix Flag     to  Mix Flag
      *                          Exclude from Volume Flag  to  Volume Flag
      *                          Capability Flag           to  Inventory Flag
      *
      * 05/14/07  LeAnne Ramsey
      *           Added parms on calls to generic programs:
      *                           TF Percent Owned  (TF809)
      *                           Co-owned Flag     (TF813)
      *                           Producing Company (TF813)
      *
      * 05/15/07  LeAnne Ramsey
      *           Added logic to handle splitting Co-owned Products between the
      *           Producing Company and the other company. (ie: Prime Pork stuff)
      *
      * 07/05/07  LeAnne Ramsey
      *           Removed all CoOwned "splitting" logic added on 05/15/07.
      *
      * 08/13/07  LeAnne Ramsey
      *           Added parm on call to generic program:
      *                 Item Type Code (TF813)
      *
      * 08/15/07  LeAnne Ramsey
      *           Added logic to include Work-In-Process Items.
      *           For WPs, we will set the 'produced value amounts' to zero.
      *           And, Alice wants to include the 'BP=Byproduct' WPs.
      *
      * 09/10/07  LeAnne Ramsey
      *           We are changing this program to delete the WP records for the week-ending
      *           date prior to writing them. We assumed this program would only run once
      *           for a week. But, we have been forced to re-run it several times. A rerun
      *           causes duplicate WP records if we don't delete them before the rerun.
      *
      * 10/01/07  LeAnne Ramsey
      *           We are now calling this from 2 additional functions (Margin Close and
      *           Weekly Inventory Close). When this program is called from these "Close"
      *           functions, we do not want to: 1) update the data area 2) set the LDA
      *           for the report. SO, we will pass in R=Rerun when this program is called
      *           from the Close functions and use the "R" to control our logic.
      *
      * 01/21/08  LeAnne Ramsey
      *           Added a parm of P=Production on the call to generic program TF815.
      *           A "P" will continue to return the HPS Year/Period/Week to us.
      *           (The JDE programs that call TF815 will now send in A=Accounting to
      *           return Accounting Year/Period.)
      *
      * 03/20/08  LeAnne Ramsey
      *           Added LDA position for CoOwned/Not CoOwned/Both; populated it with
      *           B=Both. (field LDCOFL)
      *
      * 07/28/08  LeAnne Ramsey
      *           NO program changes; just changing some outdated text.
      *
      * 08/15/08  LeAnne Ramsey
      *           On the call to TF809:
      *           Added parm: Producing Company (3A)
      *
      * 09/11/08  LeAnne Ramsey
      *           Added parm to the call to TF813:
      *               Export/Domestic Flag
      *
      * 10/01/08  LeAnne Ramsey
      *           Added LDA position for Export/Domestic Flag (LDEDFL)
      *
      * 01/28/09  LeAnne Ramsey
      *           Added the call to TF270CL for our new Weekly Yield Reporting.
      *
      * 02/03/09  LeAnne Ramsey
      *           Removed the call to TF270CL. TF270CL calls RO410CL and TF415CL
      *           which, in turn, call TF206. So, everything abended with a
      *           redundant call when Nathan Malone ran his Inventory Stock Closing.
      *           We will have to have Rose C. put this into PPPHXFR.
      *
      * 05/06/09  LeAnne Ramsey
      *           Changed the Print logic to match Meat Costing.
      *
      * 12/02/09  LeAnne Ramsey
      *           Added a 1-time work-around for Choice White Grease (96109).
      *
      * 12/02/09  LeAnne Ramsey
      *           Changed our Exempt/Non-Exempt logic as a result of the Choice
      *           White Grease problem. (Also, removed the temp work-around code.)
      *
      * 11/15/12  LeAnne Ramsey (E2337)
      *           Recompile only.
      *           Rose had to increase the price/cwt field sizes in PPBTCPP-Inventory
      *           Value file and PPBSCPP-Inventory Stock Closing.
      *
      * 02/23/17  Danny Nguyen (R9083)
      *           New Seaboard Triumph Foods (STF) will need to be valued on its own and NOT
      *           included in company 360/960 Valuation and NOT included in the Triumph Fees
      *           & Payments Weekly Revenue processing.
      *           Replaced PPBSCPL3 logical with PPBSCPLC. Replaced PPBTCPL1 logical with
      *           PPBTCPL7. Both logicals SEL Grouping = G (Guymon & Triumph).
      *
      * 11/22/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Undo changes made in project R9083:
      *             Replaced PPBSCPLC with PPBSCPLA logical.
      *             Replaced PPBTCPL7 with PPBTCPL8 logical.
      *           Added 25 STF fields to TFP010 file.
      *           Process will populate 8 out of the 25 STF fields in TFP010:
      *           STF (Company 440) data will now be populated into it's own STF fields in
      *           TFP010 file in order to create new STF reports like the ones used in Fees
      *           & Payments system.
      *
      * 02/08/18  Rose Centonze (R12011A-Weekly Product Revenue)
      *           when reading ppbtcpp, calc amounts per group read
      *
      * 05/17/22  Danny Nguyen  (DO2484 - WI 479 STF Variance Reporting)
      *           Recompile only. Added 2 STF fields to TFP010 file.
      *           PRXYPC   - STF STD YIELD %
      *           PRXPMPPC - STF PUMP %
      *
      * 10/10/22  R Centonze   W105621 - Increase price fields to handle > 999.99
      *                        CHANGE @@ANPRPR TO SIZE 10.6  --> pranprpr tfp010
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Ftfp007    if   e           k disk
      *    Exempt codes
      *
      *
     Ftfp010    uf   e           k disk
      *    Weekly product revenue detail
      *
      *
     Ftfl010a   uf a e           k disk    rename(prrec:prreca) prefix(p1)
      *    Weekly product revenue detail
      *
      *
     Ftfl010i   if   e           k disk    rename(prrec:prreci) prefix(p2)
      *    Weekly product revenue detail
      *
      *
     Fombyrel1  if   e           k disk
      *    Item default
      *
      *
R9083F*ppbtcpl1  if   e           k disk
  |  F*ppbtcpl7  if   e           k disk
R9083 *    Inventory Value File - WeekEnd/Item SEL Grp=G
12011Fppbtcpl8  if   e           k disk
12011 *    Inventory Value File - WeekEnd/Item
      *
      *
R9083F*ppbscpl3  if   e           k disk
  |  F*ppbscplc  if   e           k disk
R9083 *    Inventory Stock Closing - WeekEnd/Item SEL Grp=G
12011Fppbscpla  if   e           k disk
12011 *    Inventory Stock Closing - Group/WeekEnd/Item
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Save fields
      *
     D svwbdt          s                   like(prwbdt)
     D svyr            s                   like(pryr)
     D svwk            s                   like(prwk)
12011D svbtekc7        s                   like(btekc7)
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               d   datfmt(*iso)
      *
      *
      * Workfields
      *
     D wkprice         s             15  9
12011D wk1stxthru      s              1    inz('Y')
      *
     D wksbilb         s                   like(prsbilb)
     D wkseilb         s                   like(prseilb)
     D wkspulb         s                   like(prspulb)
     D wksfpulb        s                   like(prsfpulb)
      *
     D wksbiam         s                   like(prsbiam)
     D wkseiam         s                   like(prseiam)
     D wkspuam         s                   like(prspuam)
     D wksfpuam        s                   like(prsfpuam)
      *
     D wktbilb         s                   like(prtbilb)
     D wkteilb         s                   like(prteilb)
     D wktpulb         s                   like(prtpulb)
     D wktfpulb        s                   like(prtfpulb)
      *
     D wktbiam         s                   like(prtbiam)
     D wkteiam         s                   like(prteiam)
     D wktpuam         s                   like(prtpuam)
     D wktfpuam        s                   like(prtfpuam)
      *
12011D wkxbilb         s                   like(prxbilb)
  |  D wkxeilb         s                   like(prxeilb)
  |  D wkxpulb         s                   like(prxpulb)
  |  D wkxfpulb        s                   like(prxfpulb)
  |   *
  |  D wkxbiam         s                   like(prxbiam)
  |  D wkxeiam         s                   like(prxeiam)
  |  D wkxpuam         s                   like(prxpuam)
12011D wkxfpuam        s                   like(prxfpuam)
      *
     D wkrcexfl        s                   like(prrcexfl)
     D wkprexfl        s                   like(prprexfl)
     D wkexemptfl      s                   like(prprexfl)
      *
      *
      * Parm fields
      *
     d xxapfl          s              1
     D xxpe            s              2  0
     D xxwedt          s              8  0
     D xxsyndt         s              7  0
     d xxreturn        s              1
     D xxprcd          s                   like(prprcd)
     D xxistycd        s                   like(pristycd)
     D xxisgrcd        s                   like(prisgrcd)
     D xxisclcd        s                   like(prisclcd)
     D xxtfclcd        s                   like(prtfclcd)
     D xxtfcgcd        s                   like(prtfcgcd)
     D xxglsub         s                   like(prglsub)
     D xxitycd         s                   like(pritycd)
     D xxinvfl         s                   like(prinvfl)
     D xxmixfl         s                   like(prmixfl)
     D xxvolfl         s                   like(prvolfl)
     D xxcgcd          s                   like(prcgcd)
     D xxtownpc        s                   like(prtownpc)
     D xxcoownfl       s                   like(prcoownfl)
     D xxprdcmp        s                   like(prprdcmp)
     D xxedfl          s                   like(predfl)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda              ds                  dtaara(*lda)
      *
     D  ldfmdy                39     44  0
     D  ldtmdy                45     50  0
     D  ldfcymd               52     59  0
     D  ldtcymd               60     67  0
      *
     D  lddsfl                71     71
     D  lddsds                73     82
      *
     D  ldistycd              83     85  0
     D  ldistyds              86    115
     D  ldisgrcd             116    118  0
     D  ldisgrds             119    148
     D  ldisclcd             149    151  0
     D  ldisclds             152    181
     D  ldprcd               182    188  0
     D  ldprds               189    218
      *
     D  ldtfcgcd             219    220
     D  ldtfcgds             221    235
     D  ldtfclcd             236    238
     D  ldtfclds             239    268
      *
     D  ldver                269    269
     D  ldverds              270    299
      *
     D  lddemand             300    300
      *
     D  ldiecd               301    301
     D  ldieds               302    327
     D  ldrpfl               328    328
     D  ldcofl               329    329
     D  ldedfl               349    349
      *
     D  ldoutq               401    410
     D  ldhold               411    414
     D  ldsave               415    418
     D  ldcopy               419    419  0
      *
      *-------------------------------------------------------------------------------
      * Definition for external data area 'DATFPOST-Last Inventory Values Post Week-
      * ending Date
      *-------------------------------------------------------------------------------
      *
     D lastwedt        s              8  0 dtaara(datfpost)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Read all Inventory Value records for the week-ending date.
      *
R9083 ** Replaced Logical File. LF selects Grouping = G (Guymon & Triumph).
  |  C**   xxwedt        setll     ppbtcpl1
R9083C**   xxwedt        setll     ppbtcpl7
12011 ** Replaced Logical File. No longer selects by Grouping.
12011C     xxwedt        setll     ppbtcpl8
      *
     C                   dou       *in90 = *on                                  Main do
R9083C**   xxwedt        reade     ppbtcpl1                               90
R9083C**   xxwedt        reade     ppbtcpl7                               90
12011C     xxwedt        reade     ppbtcpl8                               90
     C                   if        *in90 = *off                                 If not EOF
      *
12011 * R12011-Save Item Code first time through.
  |  C                   if        wk1stxthru = yes
  |  C                   eval      wk1stxthru = no
  |  C                   eval      svbtekc7 = btekc7
12011C                   endif
      *
      * You will always write a new Revenue record for WP Items.
      * You may write a new Revenue record for FG Items.
      * So, just in case you ultimately have to write a new record:
      *  1) Clear the record format
      *  2) Retrieve "exempt" values
      *  3) Retrieve Item Structure values
      *  4) Set up fields that are common for both WP and FG records
      *
     C                   clear                   prreca
     C                   exsr      $exempt
     C                   exsr      $structure
     C                   exsr      $setup
      *
      * Finished Goods
     C                   select
     C                   when      btwhsx = 'FG '
      *
12011 * R12011-Only Clear when Item Code changes since we are now reading
  |   *        multiple IVF records for Group G & S.
  |  C                   if        btekc7 <> svbtekc7
  |  C                   eval      svbtekc7 = btekc7
  |  C                   exsr      $clearfg
12011C                   endif
      *
     C                   exsr      $accumfg
     C                   exsr      $fg
12011 * R12011-Moved $clearfg routine above.
12011C**                 exsr      $clearfg
      *
      *
      * Work in Process
     C                   when      btwhsx = 'WP ' and
     C                             wkprexfl = no and
     C                             p1prmixfl = yes and
     C                             p1prtfcgcd <> 'OT' and
     C                             p1prcoownfl = yes
     C                   exsr      $accumwp
      *
      *              If you had Produced Pounds, write a Revenue record.
      *
     C                   if        p1prspulb <> 0 or
     C                             p1prtpulb <> 0
12011 ** Do NOT add STF to any Aggregate buckets.
     C     p1prspulb     add       p1prtpulb     p1prapulb
     C                   move      btwhsx        p1pritycd
     C                   write     prreca
     C                   endif
     C                   endsl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      *
      * If this is not a "Rerun", then:
      *   1) Set up LDA values for reporting
      *   2) Update the data area that holds the "week-ending date" of this run
      *
     C                   if        xxreturn <> 'R'
     C                   exsr      $lda
     C     *lock         in        lastwedt
     C                   z-add     xxwedt        lastwedt
     C                   out       lastwedt
     C                   endif
      *
     C                   seton                                        lr
      /eject
      *----------------------------------------------------------------------------------
      * Determine the Exempt Status of the Product
      *----------------------------------------------------------------------------------
      *
     C     $exempt       begsr
      *
      * Initialize Exempt Flags.
      *
     C                   move      *blank        wkrcexfl
     C                   move      *blank        wkprexfl
      *
      * We will make 3 attempts to determine the Exempt/Non-Exempt status of the Item:
      *   Attempt 1: Is there an Exempt Product record for this Week/Item in TFP010?
      *   Attempt 2: Is there a Non-Exempt Product record for this Week/Item in TFP010?
      *   Attempt 3: Go to the Item Default file
      *
      *
      * Attempt 1: Is there an Exempt Product record for this Week/Item in TFP010?
      *
     C                   move      yes           wkexemptfl
     C     key03         chain     tfl010i                            92
     C                   if        *in92 = *off
     C                   move      yes           wkprexfl
     C                   move      yes           wkrcexfl
     C                   endif
      *
      *
      * Attempt 2: Is there a Non-Exempt Product record for this Week/Item in TFP010?
      *
     C                   if        wkprexfl = *blank                            If attempt 2
     C                   move      no            wkexemptfl
     C     key03         chain     tfl010i                            92
     C                   if        *in92 = *off
     C                   move      no            wkprexfl
     C                   move      no            wkrcexfl
     C                   endif
     C                   endif                                                  If attempt 2
      *
      *
      * Attempt 3: Look in the Item Default file
      *
      * Using the Product, retrieve its Exempt Code from the Item Default file.
      *
     C                   if        wkprexfl = *blank                            If attempt 3
     C     btekc7        chain     ombyrel1                           92
     C                   if        *in92 = *off                                 If item hit
      *
      * Using the retrieved Exempt Code, get the Exempt Flag values
      * from the Exempt Code Master file.
      *
     C     bys9st        chain     tfp007                             92
     C                   if        *in92 = *off
     C                   move      exprexfl      wkprexfl
     C                   move      exrcexfl      wkrcexfl
     C                   endif
     C                   endif                                                  If item hit
      *
      * Now, we are going to tweak/override our flags:
      *   When the Product is Exempt, we will just use the retrieved values
      *   When the Product is Not Exempt, we will set Record Exempt to No
      *
     C                   select
     C                   when      wkprexfl = yes
      *
     C                   when      wkprexfl = no
     C                   move      no            wkrcexfl
     C                   other
      *
     C                   move      no            wkprexfl
     C                   move      no            wkrcexfl
     C                   endsl
     C                   endif                                                  If attempt 3
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve Item Structure Values
      *---------------------------------------------------------------
      *
     C     $structure    begsr
      *
     C                   z-add     btekc7        p1prprcd
      *
      * Retrieve TF Classification and Item Structure stuff
      *
     C                   call      'TF813'
     C                   parm      p1prprcd      xxprcd
     C     p1pristycd    parm      0             xxistycd
     C     p1prisgrcd    parm      0             xxisgrcd
     C     p1prisclcd    parm      0             xxisclcd
     C     p1prtfclcd    parm      *blank        xxtfclcd
     C     p1prtfcgcd    parm      *blank        xxtfcgcd
     C     p1prglsub     parm      *blank        xxglsub
     C     p1pritycd     parm      *blank        xxitycd
     C     p1prcoownfl   parm      *blank        xxcoownfl
     C     p1prprdcmp    parm      *blank        xxprdcmp
     C     p1predfl      parm      *blank        xxedfl
      *
      * Retrieve Values for Structure Stuff:
      *
     C                   call      'TF809'
     C                   parm      p1prtfclcd    xxtfclcd
     C                   parm      p1pristycd    xxistycd
     C                   parm      p1prisgrcd    xxisgrcd
     C                   parm      p1prisclcd    xxisclcd
     C     p1prinvfl     parm      *blank        xxinvfl
     C     p1prmixfl     parm      *blank        xxmixfl
     C     p1prvolfl     parm      *blank        xxvolfl
     C     p1prcgcd      parm      *blank        xxcgcd
     C     p1prtownpc    parm      0             xxtownpc
     C                   parm      *blank        xxprdcmp
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Set up fields for new Revenue Record
      *---------------------------------------------------------------
      *
     C     $setup        begsr
      *
     C                   move      wkrcexfl      p1prrcexfl
     C                   move      wkprexfl      p1prprexfl
     C                   move      'F'           p1prpfcd
      *
     C                   z-add     xxwedt        p1prwedt
     C                   z-add     svwbdt        p1prwbdt
     C                   z-add     svyr          p1pryr
     C                   z-add     svwk          p1prwk
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Logic for a Finished Good Item
      *---------------------------------------------------------------
      *
     C     $fg           begsr
      *
      * If there were any pounds or dollars, update/write a Revenue record
      *
     C                   if        wksbilb <> 0 or                              If continue
     C                             wkseilb <> 0 or
     C                             wkspulb <> 0 or
     C                             wksfpulb <> 0 or
      *
     C                             wktbilb <> 0 or
     C                             wkteilb <> 0 or
     C                             wktpulb <> 0 or
     C                             wktfpulb <> 0 or
      *
12011C                             wkxbilb <> 0 or
  |  C                             wkxeilb <> 0 or
  |  C                             wkxpulb <> 0 or
12011C                             wkxfpulb <> 0 or
      *
     C                             wksbiam  <> 0 or
     C                             wkseiam  <> 0 or
     C                             wkspuam  <> 0 or
     C                             wksfpuam <> 0 or
      *
     C                             wktbiam  <> 0 or
     C                             wkteiam  <> 0 or
     C                             wktpuam  <> 0 or
     C                             wktfpuam <> 0 or
      *
12011C                             wkxbiam  <> 0 or
  |  C                             wkxeiam  <> 0 or
  |  C                             wkxpuam  <> 0 or
12011C                             wkxfpuam <> 0
      *
      * Update/write a Revenue record
      *
     C     key02         chain     tfp010                             92
     C                   if        *in92 = *off                                 If hit
     C                   exsr      $upd010fg
     C                   else
     C                   exsr      $wrt010fg
     C                   endif                                                  If hit
     C                   endif                                                  If continue
      *
     C                   endsr
      /eject
      *------------------------------------------------------------------------------------
      * Finished Goods: Accumulate pounds for the Week/Item and then calc dollars
      *------------------------------------------------------------------------------------
      *
     C     $accumfg      begsr
      *
      * Process all records in the Inventory Stock Closing file for this:
12011 *      IVF Valuation Grouping
      *      Week-ending date
      *      Item
      *
R9083 ** Replaced Logical File. LF selects Grouping = G (Guymon & Triumph).
  |  C**   key01         setll     ppbscpl3
R9083C**   key01         setll     ppbscplc
12011 ** Replaced Logical File. Read by Group/WeekEnd/Item.
12011C     key01         setll     ppbscpla
      *
     C                   dou       *in91 = *on                                  Do pounds
R9083C**   key01         reade     ppbscpl3                               91
R9083C**   key01         reade     ppbscplc                               91
12011C     key01         reade     ppbscpla                               91
     C                   if        *in91 = *off                                 If not EOF
      *
      * Accumulate by Company:
      *      beginning inventory pounds using ISC Beginning Inventory Final Pounds
      *      ending inventory pounds    using ISC Inventory Final Pounds
      *      produced pounds            using ISC Sales Production Pounds
      *      floor produced pounds      using ISC Floor Production Pounds +
      *                                       ISC Floor Production Adj Pounds
      *
      * Seaboard
     C                   select
     C                   when      bsb2c3 = 360
     C                   add       bsmqwg        wksbilb
     C                   add       bsm5wg        wkseilb
     C                   add       bsmtwg        wkspulb
     C                   add       bsmswg        wksfpulb
     C                   add       bsnawg        wksfpulb
      *
      * Triumph
     C                   when      bsb2c3 = 960
     C                   add       bsmqwg        wktbilb
     C                   add       bsm5wg        wkteilb
     C                   add       bsmtwg        wktpulb
     C                   add       bsmswg        wktfpulb
     C                   add       bsnawg        wktfpulb
      *
12011 * Seaboard Triumph Foods
  |  C                   when      bsb2c3 = 440
  |  C                   add       bsmqwg        wkxbilb
  |  C                   add       bsm5wg        wkxeilb
  |  C                   add       bsmtwg        wkxpulb
  |  C                   add       bsmswg        wkxfpulb
12011C                   add       bsnawg        wkxfpulb
      *
     C                   endsl
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do pounds
      *
      * You have accumulated all the Pounds for the Week/Item. So, now,
      * calc the:
      *           begining inventory amount
      *           ending inventory amount
      *           produced amount
      *           floor produced amount
      *
      *  NOTE: The Synon prices are Per CWT. So, divide the Synon Price
      *        by 100 before calculating.
      *
     C                   select
  |  C                   when      bsWCSX = 'G'                                 when G do for SB/TF
      * Seaboard
      *
     C     btfsvl        div       100           wkprice
     C     wksbilb       mult(h)   wkprice       wksbiam
      *
     C     btfzvl        div       100           wkprice
     C     wkseilb       mult(h)   wkprice       wkseiam
      *
     C     btfxvl        div       100           wkprice
     C     wkspulb       mult(h)   wkprice       wkspuam
     C     wksfpulb      mult(h)   wkprice       wksfpuam
      *
      *
      * Triumph
      *
     C     btfsvl        div       100           wkprice
     C     wktbilb       mult(h)   wkprice       wktbiam
      *
     C     btfzvl        div       100           wkprice
     C     wkteilb       mult(h)   wkprice       wkteiam
      *
     C     btfxvl        div       100           wkprice
     C     wktpulb       mult(h)   wkprice       wktpuam
     C     wktfpulb      mult(h)   wkprice       wktfpuam
      *
  |  C                   when      bsWCSX = 'S'                                 when S do for STF
      *
12011 * Seaboard Triumph Foods
  |   *
  |  C     btfsvl        div       100           wkprice
  |  C     wkxbilb       mult(h)   wkprice       wkxbiam
  |   *
  |  C     btfzvl        div       100           wkprice
  |  C     wkxeilb       mult(h)   wkprice       wkxeiam
  |   *
  |  C     btfxvl        div       100           wkprice
  |  C     wkxpulb       mult(h)   wkprice       wkxpuam
12011C     wkxfpulb      mult(h)   wkprice       wkxfpuam
      *
     c                   endsl
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Update the Revenue record for a Finished Good Item
      *-------------------------------------------------------------------------------------
      *
     C     $upd010fg     begsr
      *
      * Aggregate:
      *
      *  Pounds:
     C     wksbilb       add       wktbilb       prabilb
     C     wkseilb       add       wkteilb       praeilb
     C     wkspulb       add       wktpulb       prapulb
     C     wksfpulb      add       wktfpulb      prafpulb
      *
      *  Dollars:
     C     wksbiam       add       wktbiam       prabiam
     C     wkseiam       add       wkteiam       praeiam
     C     wkspuam       add       wktpuam       prapuam
     C     wksfpuam      add       wktfpuam      prafpuam
      *
      * Seaboard:
      *         pounds:
     C                   z-add     wksbilb       prsbilb
     C                   z-add     wkseilb       prseilb
     C                   z-add     wkspulb       prspulb
     C                   z-add     wksfpulb      prsfpulb
      *         dollars:
     C                   z-add     wksbiam       prsbiam
     C                   z-add     wkseiam       prseiam
     C                   z-add     wkspuam       prspuam
     C                   z-add     wksfpuam      prsfpuam
      * Triumph:
      *         pounds:
     C                   z-add     wktbilb       prtbilb
     C                   z-add     wkteilb       prteilb
     C                   z-add     wktpulb       prtpulb
     C                   z-add     wktfpulb      prtfpulb
      *         dollars:
     C                   z-add     wktbiam       prtbiam
     C                   z-add     wkteiam       prteiam
     C                   z-add     wktpuam       prtpuam
     C                   z-add     wktfpuam      prtfpuam
      *
12011 * Seaboard Triumph Foods:
  |   *         pounds:
  |  C                   z-add     wkxbilb       prxbilb
  |  C                   z-add     wkxeilb       prxeilb
  |  C                   z-add     wkxpulb       prxpulb
  |  C                   z-add     wkxfpulb      prxfpulb
  |   *         dollars:
  |  C                   z-add     wkxbiam       prxbiam
  |  C                   z-add     wkxeiam       prxeiam
  |  C                   z-add     wkxpuam       prxpuam
12011C                   z-add     wkxfpuam      prxfpuam
      *
     C                   update    prrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Revenue record for a Finished Goods Item
      *---------------------------------------------------------------
      *
     C     $wrt010fg     begsr
      *
      * Populate Aggregate fields:
      *
      *  Pounds:
     C     wksbilb       add       wktbilb       p1prabilb
     C     wkseilb       add       wkteilb       p1praeilb
     C     wkspulb       add       wktpulb       p1prapulb
     C     wksfpulb      add       wktfpulb      p1prafpulb
      *
      *  Dollars:
     C     wksbiam       add       wktbiam       p1prabiam
     C     wkseiam       add       wkteiam       p1praeiam
     C     wkspuam       add       wktpuam       p1prapuam
     C     wksfpuam      add       wktfpuam      p1prafpuam
      *
      *
      * Seaboard:
      *          Pounds:
     C                   z-add     wksbilb       p1prsbilb
     C                   z-add     wkseilb       p1prseilb
     C                   z-add     wkspulb       p1prspulb
     C                   z-add     wksfpulb      p1prsfpulb
      *          Dollars:
     C                   z-add     wksbiam       p1prsbiam
     C                   z-add     wkseiam       p1prseiam
     C                   z-add     wkspuam       p1prspuam
     C                   z-add     wksfpuam      p1prsfpuam
      * Triumph:
      *          Pounds:
     C                   z-add     wktbilb       p1prtbilb
     C                   z-add     wkteilb       p1prteilb
     C                   z-add     wktpulb       p1prtpulb
     C                   z-add     wktfpulb      p1prtfpulb
      *          Dollars:
     C                   z-add     wktbiam       p1prtbiam
     C                   z-add     wkteiam       p1prteiam
     C                   z-add     wktpuam       p1prtpuam
     C                   z-add     wktfpuam      p1prtfpuam
      *
12011 * Seaboard Triumph Foods:
  |   *          Pounds:
  |  C                   z-add     wkxbilb       p1prxbilb
  |  C                   z-add     wkxeilb       p1prxeilb
  |  C                   z-add     wkxpulb       p1prxpulb
  |  C                   z-add     wkxfpulb      p1prxfpulb
  |   *          Dollars:
  |  C                   z-add     wkxbiam       p1prxbiam
  |  C                   z-add     wkxeiam       p1prxeiam
  |  C                   z-add     wkxpuam       p1prxpuam
12011C                   z-add     wkxfpuam      p1prxfpuam
      *
     C                   move      btwhsx        p1pritycd
      *
     C                   write     prreca
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Clear accumulators for a Finished Goods Item
      *-------------------------------------------------------------------
      *
     C     $clearfg      begsr
      *
     C                   z-add     0             wkprice
      * Seaboard
     C                   z-add     0             wksbilb
     C                   z-add     0             wkseilb
     C                   z-add     0             wkspulb
     C                   z-add     0             wksfpulb
      *
     C                   z-add     0             wksbiam
     C                   z-add     0             wkseiam
     C                   z-add     0             wkspuam
     C                   z-add     0             wksfpuam
      * Triumph
     C                   z-add     0             wktbilb
     C                   z-add     0             wkteilb
     C                   z-add     0             wktpulb
     C                   z-add     0             wktfpulb
      *
     C                   z-add     0             wktbiam
     C                   z-add     0             wkteiam
     C                   z-add     0             wktpuam
     C                   z-add     0             wktfpuam
      *
12011 * Seaboard Triumph Foods
  |  C                   z-add     0             wkxbilb
  |  C                   z-add     0             wkxeilb
  |  C                   z-add     0             wkxpulb
  |  C                   z-add     0             wkxfpulb
  |   *
  |  C                   z-add     0             wkxbiam
  |  C                   z-add     0             wkxeiam
  |  C                   z-add     0             wkxpuam
12011C                   z-add     0             wkxfpuam
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Accumulate Produced pounds for the Week for a WP Item
      *-------------------------------------------------------------------------------------
      *
     C     $accumwp      begsr
      *
      * Process all records in the Inventory Stock Closing file for this:
12011 *      ISC Valuation Grouping
      *      Week-ending date
      *      Item
      *
R9083 ** Replaced Logical File. LF selects Grouping = G (Guymon & Triumph).
  |  C**   key01         setll     ppbscpl3
R9083C**   key01         setll     ppbscplc
12011 ** Replaced Logical File. Read by Group/WeekEnd/Item.
12011C     key01         setll     ppbscpla
      *
     C                   dou       *in91 = *on                                  Do pounds
R9083C**   key01         reade     ppbscpl3                               91
R9083C**   key01         reade     ppbscplc                               91
12011C     key01         reade     ppbscpla                               91
     C                   if        *in91 = *off                                 If not EOF
      *
      * Accumulate by Company:
      *      produced pounds       using ISC Unused Pounds 1
      *
      * Seaboard
     C                   select
     C                   when      bsb2c3 = 360 and p1prprdcmp = 'SBF'
     C                   add       bsm6wg        p1prspulb
      * Triumph
     C                   when      bsb2c3 = 960 and p1prprdcmp = 'TF '
     C                   add       bsm6wg        p1prtpulb
12011 * Seaboard Triumph Foods
  |   *   We will not check for Producing Company for 440.
  |  C                   when      bsb2c3 = 440
12011C                   add       bsm6wg        p1prxpulb
     C                   endsl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do pounds
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Delete WP records for the week
      *---------------------------------------------------------------------------
      *
     C     $dltwp        begsr
      *
     C     xxwedt        setll     tfl010a
      *
     C                   dou       *in91 = *on                                  Do WP delete
     C     xxwedt        reade     tfl010a                                91
     C                   if        *in91 = *off and p1pritycd = 'WP '           If WP
     C                   delete    prreca
     C                   endif                                                  If WP
     C                   enddo                                                  Do WP delete
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Set up the LDA values for the "report" that we will generate/e-mail
      *---------------------------------------------------------------------------
      *
     C     $lda          begsr
      *
     C                   in        lda
      *
      * Set both the From/To week-ending date to the incoming date.
      *
     C                   z-add     xxwedt        ldfcymd
     C                   z-add     xxwedt        ldtcymd
      *
      * Flip CCYYMMDD week-ending date into MMDDYY format.
      *
     C     *iso          test(d)                 xxwedt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      xxwedt        wkisodate
     C     *mdy          move      wkisodate     ldfmdy
     C     *mdy          move      wkisodate     ldtmdy
     C                   endif                                                  If OK date
      *
     C                   move      no            lddemand
     C                   move      'F'           ldrpfl
      *
     C                   move      'S'           lddsfl
     C                   eval      lddsds = 'Summary'
      *
     C                   move      '1'           ldver
     C                   eval      ldverds = 'Sort/Print by TF Structure'
      *
     C                   move      'B'           ldiecd
     C                   eval      ldieds = 'Both Exempt and Non-Exempt'
      *
     C                   move      'B'           ldedfl
      *
     C                   move      'B'           ldcofl
      *
     C                   z-add     0             ldistycd
     C                   move      *blank        ldistyds
      *
     C                   z-add     0             ldisgrcd
     C                   move      *blank        ldisgrds
      *
     C                   z-add     0             ldisclcd
     C                   move      *blank        ldisclds
      *
     C                   z-add     0             ldprcd
     C                   move      *blank        ldprds
      *
     C                   move      *blank        ldtfcgcd
     C                   move      *blank        ldtfcgds
     C                   move      *blank        ldtfclcd
     C                   move      *blank        ldtfclds
      *
     C                   z-add     1             ldcopy
     C                   move      '*YES'        ldhold
     C                   move      '*NO '        ldsave
     C                   move      '*JOB      '  ldoutq
      *
     C                   out       lda
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     *entry        plist
     C                   parm                    xxreturn
     C                   parm                    xxwedt
      *
      * Key lists
      *
     C     key01         klist
12011C                   kfld                    btwqsx                         Valuation Grouping
     C                   kfld                    xxwedt
     C                   kfld                    btekc7
      *
     C     key02         klist
     C                   kfld                    btekc7
     C                   kfld                    xxwedt
     C                   kfld                    wkrcexfl
     C                   kfld                    wkprexfl
      *
     C     key03         klist
     C                   kfld                    xxwedt
     C                   kfld                    wkexemptfl
     C                   kfld                    btekc7
      *
      * Just in case this is a "rerun", delete any/all WP records out of the Weekly
      * Revenue Detail file for this week.
      *
     C                   exsr      $dltwp
      *
      * We will be updating and adding Revenue records. So, for the incoming
      * week-ending date, retrieve/save the associated 'year/week/beginning week date'
      * so that we will have these values for writing new Revenue records.
      *
      * Calc the "beginning" date that goes with this "ending" date:
      *
     C     *iso          test(d)                 xxwedt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      xxwedt        wkisodate
     C                   subdur    6:*days       wkisodate
     C                   move      wkisodate     svwbdt
      *
      * Retrieve the Production Year/Week associated with the WeekEnding Date.
      *
     C                   call      'TF815'
     C                   parm                    xxwedt
     C                   parm      'P'           xxapfl
     C                   parm      0             svyr
     C                   parm      0             xxpe
     C                   parm      0             svwk
     C                   endif                                                  If OK date
      *
      * Turn this Ending Date into the Synon format of CYYMMDD.
      *
     C     *iso          test(d)                 xxwedt                 92
     C                   if        *in92 = *off                                 If good date
     C     *iso          move      xxwedt        wkisodate
     C     *cymd         move      wkisodate     xxsyndt
     C                   endif                                                  If good date
      *
     C                   endsr
      /eject
