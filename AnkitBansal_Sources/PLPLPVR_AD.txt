// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLPLPVR
// ?Date: 14.08.2025 Time: 02:55:48
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

//?USER: Load screen

EXECUTE FUNCTION(Rtv All               IF) TYPE(EXCINTFUN)                      AB1328652;
PARAMETER(NLL.Oms_Warehouse_Code);
PARAMETER(DTL.BOH_Company_Number);
PARAMETER('HPE');
PARAMETER(NLL.Oms_SalesPerson_Code);
PARAMETER(NLL.Oms_Allow_Multi_Company);
PARAMETER(NLL.Oms_Default_Printer);
PARAMETER(DTL.Oms_Name);
PARAMETER(LCL.Oms_System_Value_Alpha);
PARAMETER(NLL.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

}


EXECUTE FUNCTION(RTV Payment Prc        RT) TYPE(RTVOBJ) FILE(PKC4REP)          AB1146809;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(NLL.Pmt_Current_Payment_Step);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// DTL.TH Schedule Kill Shift = CND.Shift 1
DTL.TH_Schedule_Kill_Shift = 1;

// DTL.Shift Description USR = Condition name of DTL.TH Schedule Kill Shift
DTL.Shift_Description_USR = RTVCND(DTL.TH_Schedule_Kill_Shift);

//?USER: Validate fields

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.Oms_Name);
PARAMETER(NLL.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?CALC: Screen function fields

// DTL.Shift Description USR = Condition name of DTL.TH Schedule Kill Shift
DTL.Shift_Description_USR = RTVCND(DTL.TH_Schedule_Kill_Shift);

//?USER: User defined action

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Print Balance to Kill');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// LCL.Date Alpha USR = CVTVAR(DTL.TH Kill Date)
LCL.Date_Alpha_USR = CVTVAR(DTL.TH_Kill_Date);

// Execute command - 'SBM Prt Balance to Kill Report'
EXECUTE COMMAND(PRK0686);
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(LCL.Date_Alpha_USR);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(LCL.Oms_System_Value_Alpha);
PARAMETER(DTL.TH_Schedule_Kill_Shift);

ENDIF;

