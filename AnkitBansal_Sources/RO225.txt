     h option(*SRCSTMT:*NODEBUGIO)
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Resource Optimization
      * PROGRAM:     RO225
      * TITLE:       Byproduct Mix Summary
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     06/06/08
      *
      * FUNCTION:    This program creates the records for a Week in the TF Byproduct
      *              Mix Summary file.
      *
      ***************************************************************************************
      * MODIFICATIONS:
      ***************************************************************************************
      * DATE      PROGRAMMER
      *
      * 11/20/08  LeAnne Ramsey
      *           As a prep for synchronizing the TFS and Meat Cost LDAs, we
      *           removed the unused LDA fields.
      *
      * 11/21/08  LeAnne Ramsey
      *           As part of synchronizing the LDAs between the TFS Margin Adjustment Close
      *           and the Meat Costing, we changed the LDA positions.
      *
      * 04/02/09  LeAnne Ramsey
      *           Recompile only. Field 'Producing Company' added to Byproduct Detail.
      /EJECT
      ***************************************************************************************
      * FILE SPECIFICATION
      ***************************************************************************************
      *
     frol122g   if   e           k disk
      *  Byproduct detail
      *
      *
     frop121    o    e           k disk
      *  TF ByProduct mix summary
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svsumlev        s                   like(ydsumlev)
      *
      *
      * Workfields
      *
     D wkypc           s             15  4
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
      *
     D  ldwedt                29     36  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      **********************************************************************************
      * Mainline
      **********************************************************************************
      *
      * Read each record in the Byproduct Detail file for this Week.
      * (At this point, the detail file only contains Finished Goods items. And,
      *  the Include in Mix flag has been set to NO for all non-byproduct items.)
      *
      * Process records where Include In Mix = Yes and TF Class Group Code is BP=Byproduct.
      * Write a Byproduct Mix Summary record when the Summary Level changes.
      *
     C     ldwedt        setll     rol122g
      *
     C                   dou       *in90 = *on                                  Main do
     C     ldwedt        reade     rol122g                                90
     C                   if        *in90 = *off and                             If not EOF
     C                             ydmixfl = yes and
     C                             ydtfcgcd = 'BP'
      * Control breaks
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   exsr      $directmap
      *
     C                   when      ydsumlev <> svsumlev
     C                   exsr      $wrt121
     C                   exsr      $directmap
     C                   endsl
      *
      * Detail processing: Accumulate ByProduct Detail record values
      *
     C                   exsr      $detail
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *---------------
      * EOF processing
      *---------------
      *
      * Write out the last Summary record.
      *
     C                   if        first = no
     C                   exsr      $wrt121
     C                   endif
      *
     C                   seton                                        lr
      /eject
      *-----------------------------------------------------------------------------------
      * Move fields that are a direct map from the Detail to the Summary Record
      *-----------------------------------------------------------------------------------
      *
     C     $directmap    begsr
      *
     C                   z-add     ydwedt        yswedt
     C                   move      ydtfclcd      ystfclcd
     C                   z-add     ydistycd      ysistycd
     C                   z-add     ydisgrcd      ysisgrcd
     C                   z-add     ydisclcd      ysisclcd
     C                   move      ydisclds      ysisclds
      *
     C                   move      ydcgcd        yscgcd
     C                   move      ydsgcd        yssgcd
     C                   move      ydittycd      ysittycd
     C                   move      ydmixgrp      ysmixgrp
     C                   move      ydsafl        yssafl
     C                   move      ydsumlev      yssumlev
      *
      * Save break fields
     C                   move      ydsumlev      svsumlev
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Accumulate values from the ByProduct Detail records
      *-----------------------------------------------------------------------------------
      *
     C     $detail       begsr
      *
      *        Seaboard
     C                   add       ydspulb       ysspulb
     C                   add       ydspuslb      ysspuslb
     C                   add       ydspuam       ysspuam
     C                   add       ydsnpuam      yssnpuam
     C                   add       ydspcoam      ysspcoam
     C                   add       ydslcoam      ysslcoam
     C                   add       ydsicoam      yssicoam
     C                   add       ydsocoam      yssocoam
      *        Triumph
     C                   add       ydtpulb       ystpulb
     C                   add       ydtpuslb      ystpuslb
     C                   add       ydtpuam       ystpuam
     C                   add       ydtnpuam      ystnpuam
     C                   add       ydtpcoam      ystpcoam
     C                   add       ydtlcoam      ystlcoam
     C                   add       ydticoam      ysticoam
     C                   add       ydtocoam      ystocoam
      *        Aggregate
     C                   add       ydapulb       ysapulb
     C                   add       ydapuslb      ysapuslb
     C                   add       ydapuam       ysapuam
     C                   add       ydanpuam      ysanpuam
     C                   add       ydapcoam      ysapcoam
     C                   add       ydalcoam      ysalcoam
     C                   add       ydaicoam      ysaicoam
     C                   add       ydaocoam      ysaocoam
      *
      * Special Meat Cost Group "BNIN" logic for Net Produced Price/LB
      *
     C                   if        ydcgcd = 'BNIN' and ydmupc <> 100
     C                   add       ydnpupr       yssnpupr
     C                   add       ydnpupr       ystnpupr
     C                   add       ydnpupr       ysanpupr
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Write a Summary record
      *-----------------------------------------------------------------------------------
      *
     C     $wrt121       begsr
      *
      * Sales Yield %
      *        Seaboard
     C                   if        ysspulb <> 0
     C                   eval(h)   wkypc = (ysspuslb / ysspulb) * 100
     C                   if        wkypc <= 999
     C                   z-add     wkypc         ysssypc
     C                   endif
     C                   endif
      *        Triumph
     C                   if        ystpulb <> 0
     C                   eval(h)   wkypc = (ystpuslb / ystpulb) * 100
     C                   if        wkypc <= 999
     C                   z-add     wkypc         ystsypc
     C                   endif
     C                   endif
      *        Aggregate
     C                   if        ysapulb <> 0
     C                   eval(h)   wkypc = (ysapuslb / ysapulb) * 100
     C                   if        wkypc <= 999
     C                   z-add     wkypc         ysasypc
     C                   endif
     C                   endif
      *
      * Calculate Per/Lb Prices and Costs
      *
      *      Aggregate:
     C                   if        ysapulb <> 0                                  If agg prod
     C                   eval(h)   ysapupr = ysapuam  / ysapulb
     C                   eval(h)   ysapco  = ysapcoam / ysapulb
     C                   eval(h)   ysalco  = ysalcoam / ysapulb
     C                   eval(h)   ysaico  = ysaicoam / ysapulb
     C                   eval(h)   ysaoco  = ysaocoam / ysapulb
      *
     C                   if        ysanpupr = 0
     C                   eval(h)   ysanpupr = ysanpuam / ysapulb
     C                   endif
      *
     C                   endif                                                  If agg prod
      *
      *             SBD:
     C                   if        ysspulb <> 0                                 If SBD prod
     C                   eval(h)   ysspupr = ysspuam  / ysspulb
     C                   eval(h)   ysspco  = ysspcoam / ysspulb
     C                   eval(h)   ysslco  = ysslcoam / ysspulb
     C                   eval(h)   yssico  = yssicoam / ysspulb
     C                   eval(h)   yssoco  = yssocoam / ysspulb
      *
     C                   if        yssnpupr = 0
     C                   eval(h)   yssnpupr = yssnpuam / ysspulb
     C                   endif
      *
     C                   endif                                                  If SBD prod
      *
      *   TRIUMPH:
     C                   if        ystpulb <> 0                                 If TF prod
     C                   eval(h)   ystpupr = ystpuam  / ystpulb
     C                   eval(h)   ystpco  = ystpcoam / ystpulb
     C                   eval(h)   ystlco  = ystlcoam / ystpulb
     C                   eval(h)   ystico  = ysticoam / ystpulb
     C                   eval(h)   ystoco  = ystocoam / ystpulb
      *
     C                   if        ystnpupr = 0
     C                   eval(h)   ystnpupr = ystnpuam / ystpulb
     C                   endif
      *
     C                   endif                                                  If TF prod
      *
      * Write the TF ByProduct Mix Summmary record
      *
     C                   write     ysrec
     C                   clear                   ysrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C                   endsr
      /eject
