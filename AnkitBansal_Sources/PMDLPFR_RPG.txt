     H/TITLE PRT CB by Cust-zero co PF Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISJBADE
     H* Date          : 10/05/16  Time  : 15:11:26
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPDLOCPL3IF  E           K        DISK
      * RSQ : WF A/R Aged CB by Name    Cst Name/Cst#/Suffx/Invc
      *
     FARBCREL1IF  E           K        DISK
      * RTV : A/R Summary               Retrieval index       NV
      *
     FCAEOREL1IF  E           K        DISK
      * RTV : Company Customer          Retrieval index
      *
     FPMADCPL1IF  E           K        DISK
      * RTV : A/R Aging Control         Retrieval index
      *
     FARBDCPLTIF  E           K        DISK
      * RSQ : A/R Header                Co/Cust/Inv - CM & OA
      *
     FARBDCPLVIF  E           K        DISK
      * RSQ : A/R Header                Co/Cust/Inv  IN/DM/CB/RB
      *
     FARBDCPL3IF  E           K        DISK
      * RTV : A/R Header                Retrieval index       NV
      *
     FARBECPLBIF  E           K        DISK
      * RSQ : A/R Detail                Co/InvcCB/Sfx/AdjTyp
      *
     FARBECPL1IF  E           K        DISK
      * RTV : A/R Detail                Retrieval index       V
      *
     FPMEDCPL1IF  E           K        DISK
      * RTV : A/R Header Note Header    Retrieval index
      *
     FPDLOCPL0UF  E           K        DISK
      * UPD : WF A/R Aged CB by Name    Update index
      *
     FPMDLPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: PRT CB by Cust-zero co PF Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L7         7  1
     E                    #L3         3  1
      * Long constants
     E                    @CN#    1  01  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@BDCPLVF
      * A/R Header                Co/Cust/Inv  IN/DM/CB/RB
      * Renamed input format fields
     I              BDAIC3                          WAAIC3
     I              BDCONB                          WACONB
     I              BDCEST                          WACEST
     I              BDUHCD                          WAUHCD
     I              BDBSVA                          WABSVA
     I              BDAIVA                          WAAIVA
     I              BDAOVA                          WAAOVA
     I              BDBGVA                          WABGVA
     I              BDAJST                          WAAJST
     I              BDE3ST                          WAE3ST
     I              BDG4CD                          WAG4CD
     I              BDCKNB                          WACKNB
     I              BDCAC7                          WACAC7
     I              BDBKC7                          WABKC7
     I              BDBCCD                          WABCCD
     I              BDR4CD                          WAR4CD
     I              BDB4DT                          WAB4DT
     I              BDATDT                          WAATDT
     I              BDH0DT                          WAH0DT
     I              BDH3DT                          WAH3DT
     I              BDH4DT                          WAH4DT
     I              BDH5DT                          WAH5DT
     I              BDANC7                          WAANC7
     I              BDCPTX                          WACPTX
     I              BDBSDY                          WABSDY
     I              BDUVST                          WAUVST
     I              BDUWST                          WAUWST
     I              BDUXST                          WAUXST
     I              BDAATM                          WAAATM
     I              BDAYNA                          WAAYNA
     I              BDA0NA                          WAA0NA
     I              BDAXDT                          WAAXDT
      *
     I@BDCPF7
      * A/R Header                Retrieval index       NV
      * Renamed input format fields
     I              BDAIC3                          WBAIC3
     I              BDCONB                          WBCONB
     I              BDCEST                          WBCEST
     I              BDUHCD                          WBUHCD
     I              BDBSVA                          WBBSVA
     I              BDAIVA                          WBAIVA
     I              BDAOVA                          WBAOVA
     I              BDBGVA                          WBBGVA
     I              BDAJST                          WBAJST
     I              BDE3ST                          WBE3ST
     I              BDG4CD                          WBG4CD
     I              BDCKNB                          WBCKNB
     I              BDCAC7                          WBCAC7
     I              BDBKC7                          WBBKC7
     I              BDBCCD                          WBBCCD
     I              BDR4CD                          WBR4CD
     I              BDB4DT                          WBB4DT
     I              BDATDT                          WBATDT
     I              BDH0DT                          WBH0DT
     I              BDH3DT                          WBH3DT
     I              BDH4DT                          WBH4DT
     I              BDH5DT                          WBH5DT
     I              BDANC7                          WBANC7
     I              BDCPTX                          WBCPTX
     I              BDBSDY                          WBBSDY
     I              BDUVST                          WBUVST
     I              BDUWST                          WBUWST
     I              BDUXST                          WBUXST
     I              BDAATM                          WBAATM
     I              BDAYNA                          WBAYNA
     I              BDA0NA                          WBA0NA
     I              BDAXDT                          WBAXDT
      *
     I@LOCPPM
      * WF A/R Aged CB by Name    Update index
      * Renamed input format fields
     I              LOAIC3                          WCAIC3
     I              LOAQTX                          WCAQTX
     I              LOANC7                          WCANC7
     I              LOCEST                          WCCEST
     I              LOCONB                          WCCONB
     I              LODXNB                          WCDXNB
     I              LOCAC7                          WCCAC7
     I              LOATDT                          WCATDT
     I              LOBCCD                          WCBCCD
     I              LON1SX                          WCN1SX
     I              LOAGBU                          WCAGBU
      *
     I@BFCPFO
      * A/R Detail                Retrieval index       V
      * Renamed input format fields
     I              BFAIC3                          WDAIC3
     I              BFCONB                          WDCONB
     I              BFCEST                          WDCEST
     I              BFDXNB                          WDDXNB
     I              BFUHCD                          WDUHCD
     I              BFBSVA                          WDBSVA
     I              BFCPTX                          WDCPTX
     I              BFNGNA                          WDNGNA
     I              BFB4DT                          WDB4DT
     I              BFDVDT                          WDDVDT
     I              BFYXNX                          WDYXNX
     I              BFHYDT                          WDHYDT
     I              BFG4CD                          WDG4CD
     I              BFCKNB                          WDCKNB
     I              BFA5ST                          WDA5ST
     I              BFAJST                          WDAJST
     I              BFB1VN                          WDB1VN
     I              BFEAZT                          WDEAZT
     I              BFC1NY                          WDC1NY
     I              BFIZTX                          WDIZTX
     I              BFETSX                          WDETSX
     I              BFW3SX                          WDW3SX
     I              BFW4SX                          WDW4SX
     I              BFW5SX                          WDW5SX
     I              BFW6SX                          WDW6SX
     I              BFW7SX                          WDW7SX
     I              BFW8SX                          WDW8SX
     I              BFQHDT                          WDQHDT
     I              BFQIDT                          WDQIDT
     I              BFQJDT                          WDQJDT
     I              BFQKDT                          WDQKDT
     I              BFQLDT                          WDQLDT
     I              BFGLVL                          WDGLVL
     I              BFGMVL                          WDGMVL
     I              BFGNVL                          WDGNVL
     I              BFGOVL                          WDGOVL
     I              BFGPVL                          WDGPVL
     I              BFUVST                          WDUVST
     I              BFUWST                          WDUWST
     I              BFUXST                          WDUXST
     I              BFAATM                          WDAATM
     I              BFAYNA                          WDAYNA
     I              BFA0NA                          WDA0NA
     I              BFAXDT                          WDAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IQPDLO1    E DSPDLOCPL0
      * UPD : WF A/R Aged CB by Name    Update index
      * Renamed input format fields
     I              LOAIC3                          WCAIC3
     I              LOAQTX                          WCAQTX
     I              LOANC7                          WCANC7
     I              LOCEST                          WCCEST
     I              LOCONB                          WCCONB
     I              LODXNB                          WCDXNB
     I              LOCAC7                          WCCAC7
     I              LOATDT                          WCATDT
     I              LOBCCD                          WCBCCD
     I              LON1SX                          WCN1SX
     I              LOAGBU                          WCAGBU
      *
     IYARDCS      DS                             59
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * I :  Company Number Pass   USR
     I                                    P   1   85P1AJAA
     IP2PARM      DS
      * FLD: A/R Header
      * N :  Company Number
     I                                    P   1   20P2AIC3
     IP3PARM      DS
      * FLD: Company Customer
      * N :  Credit Contact Name
     I                                        1  30 P3NJNA
      * N :  Credit Contact Telephone
     I                                       31  55 P3I0TX
      * N :  Credit Contact Bus. Title
     I                                       56  85 P3NKNA
      * N :  Credit Contact Fax Number
     I                                       86 110 P3I1TX
     IP4PARM      DS
      * FLD: *Arrays
      * N : MAP USR Age Value 1 A
     I                                    P   1   62P4EVVA
      * N : MAP USR Age Value 2 A
     I                                    P   7  122P4EWVA
      * N : MAP USR Age Value 3 A
     I                                    P  13  182P4EXVA
      * N : MAP USR Age Value 4 A
     I                                    P  19  242P4EYVA
      * N : MAP USR Age Value 5 A
     I                                    P  25  302P4EZVA
      * N :  USR Age Current A
     I                                    P  31  362P4EUVA
      * N :  USR Aging date - 1
     I                                    P  37  400P4B9DT
      * N :  USR Aging date - 2
     I                                    P  41  440P4CBDT
      * N :  USR Aging date - 3
     I                                    P  45  480P4CDDT
      * N :  USR Aging date - 4
     I                                    P  49  520P4CFDT
      * N :  USR Aging date - 5
     I                                    P  53  560P4CHDT
      * N :  USR Aging Date - current
     I                                    P  57  600P4CSDT
      * N :  A/R Aging Days - 1
     I                                    P  61  620P4AEDY
      * N :  A/R Aging Days - 2
     I                                    P  63  640P4AFDY
      * N :  A/R Aging Days - 3
     I                                    P  65  660P4AGDY
      * N :  A/R Aging Days - 4
     I                                    P  67  680P4AHDY
     IP5PARM      DS
      * FLD: A/R Aging Control
      * I :  A/R Aging Code
     I                                        1   6 P5G8AA
     IP6PARM      DS
      * I :  Include Charge Backs
     I                                        1   1 P6BUSX
     IP7PARM      DS
      * I :  Include Rebills
     I                                        1   1 P7DSSC
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AJAA    PARM           WP0001 155       Company Number
     C           P5G8AA    PARM           WP0002  6        A/R Aging Code
     C           P6BUSX    PARM           WP0003  1        Include Charge
     C           P7DSSC    PARM           WP0004  1        Include Rebills
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * PRT CB by Cust-zero co PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$HENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * PRT CB by Cust-zero co PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@LOCPII                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        A/R Customer Na
     C                     MOVEL'Y'       W0AL01  1        A/R Customer Nu
     C                     MOVEL'Y'       W0AL02  1        Invoice Suffix
     C                     MOVEL'Y'       W0AL03  1        Invoice Number
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $GWJVA           USR Fin Cur Due
     C                     Z-ADD*ZERO     $GWDVA           USR Tot. Cur  D
     C                     Z-ADD*ZERO     $GWKVA           USR Fin Age 1 w
     C                     Z-ADD*ZERO     $GWLVA           USR Fin Age 2 w
     C                     Z-ADD*ZERO     $GWMVA           USR Fin Age 3 w
     C                     Z-ADD*ZERO     $GWNVA           USR Fin Age 4 w
     C                     Z-ADD*ZERO     $GWOVA           USR Fin Age 5 w
     C                     Z-ADD*ZERO     $GVEVA           USR Final Total
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDLOAIC3    $DAIC3           Company Number
     C                     Z-ADDLOANC7    $DANC7           A/R Customer Nu
     C                     MOVELLOAQTX    $DAQTX           A/R Customer Na
     C                     MOVEL*BLANK    $DNJNA           Credit Contact
     C                     MOVEL*BLANK    $DI0TX           Credit Contact
     C                     MOVEL*BLANK    $DI1TX           Credit Contact
     C                     Z-ADD*ZERO     $DAGHA           USR Age Heading
     C                     Z-ADD*ZERO     $DAGHB           USR Age Heading
     C                     Z-ADD*ZERO     $DAGHC           USR Age Heading
     C                     Z-ADD*ZERO     $DAGHD           USR Age Heading
     C                     Z-ADD*ZERO     $DAGHE           USR Age Heading
     C                     Z-ADD*ZERO     $DAGHF           USR Age Heading
     C                     Z-ADD*ZERO     $DAGHG           USR Age Heading
     C                     Z-ADD*ZERO     $DAGHH           USR Age Heading
     C                     MOVELLOBCCD    $DBCCD           Salesperson Cod
      * Load related totals format
     C                     Z-ADDLOAIC3    $FAIC3           Company Number
     C                     MOVELLOAQTX    $FAQTX           A/R Customer Na
     C                     Z-ADDLOANC7    $FANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     $FWDVA           USR Tot. Cur  D
     C                     Z-ADD*ZERO     $FWEVA           USR Tot Age 1
     C                     Z-ADD*ZERO     $FWFVA           USR Tot Age 2
     C                     Z-ADD*ZERO     $FWGVA           USR Tot Age 3
     C                     Z-ADD*ZERO     $FWHVA           USR Tot Age 4
     C                     Z-ADD*ZERO     $FWIVA           USR Tot Age 5
     C                     Z-ADD*ZERO     $FWAVA           USR Tot. Due wi
     C                     MOVELLOBCCD    $FBCCD           Salesperson Cod
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDLOAIC3    $EAIC3           Company Number
     C                     MOVELLOAQTX    $EAQTX           A/R Customer Na
     C                     Z-ADDLOANC7    $EANC7           A/R Customer Nu
     C                     Z-ADDLOCONB    $ECONB           Invoice Number
     C                     Z-ADDLODXNB    $EDXNB           Sequence Number
     C                     MOVELLOCEST    $ECEST           Invoice Suffix
     C                     MOVEL*BLANK    $EPFTX           Text 1 Length U
     C                     Z-ADDLOCAC7    $ECAC7           Order Number Re
     C                     Z-ADDLOATDT    $EATDT           Due Date
     C                     MOVELLOBCCD    $EBCCD           Salesperson Cod
     C                     MOVELLON1SX    $EN1SX           CB Grouping Cod
     C                     MOVELLOAGBU    $EAGBU           Aging Bucket
     C                     Z-ADD*ZERO     $EAGVA           Age $ Due - Cur
     C                     Z-ADD*ZERO     $EACVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $EADVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $EAEVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $EAFVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $EAHVA           Age $ Due - Agi
     C                     MOVEL*BLANK    $ENGNA           Explanation
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $EACVA    $FWEVA           USR Tot Age 1
     C                     ADD  $EADVA    $FWFVA           USR Tot Age 2
     C                     ADD  $EAEVA    $FWGVA           USR Tot Age 3
     C                     ADD  $EAFVA    $FWHVA           USR Tot Age 4
     C                     ADD  $EAHVA    $FWIVA           USR Tot Age 5
     C                     ADD  $EAGVA    $FWDVA           USR Tot. Cur  D
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN LOAQTX    WZA001           A/R Customer Na
     C                     MOVELLOAQTX    WZA001
     C           *LIKE     DEFN LOANC7    WZA002           A/R Customer Nu
     C                     Z-ADDLOANC7    WZA002
     C           *LIKE     DEFN LOCEST    WZA003           Invoice Suffix
     C                     MOVELLOCEST    WZA003
     C           *LIKE     DEFN LOCONB    WZA004           Invoice Number
     C                     Z-ADDLOCONB    WZA004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @LOCPII                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
     C                     Z-ADDP1AJAA    P2AIC3           Company Number
      * ** Select company # if one is passed in
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Company Number is not equal to zero
      *   |- c2    : DB1.Company Number NE PAR.Company Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2AIC3    IFNE *ZERO                      *IF
     C           LOAIC3    IFNE P2AIC3                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * ** CB Selection
      * CASE: Include Charge Backs = N AND Invoice Suffix = CB
      *  - c1 AND c2
      *   |- c1    : PAR.Include Charge Backs is No
      *   |- c2    : DB1.Invoice Suffix is Charge Backs
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6BUSX    IFEQ 'N'                        *IF
     C           LOCEST    IFEQ 'CB'                       *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * ** RB Selection
      * CASE: Include Rebills = N AND Invoice Suffix = RB
      *  - c1 AND c2
      *   |- c1    : PAR.Include Rebills is No
      *   |- c2    : DB1.Invoice Suffix is Rebill
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P7DSSC    IFEQ 'N'                        *IF
     C           LOCEST    IFEQ 'RB'                       *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        A/R Customer Na
     C                     MOVEL*BLANK    W0AL01  1        A/R Customer Nu
     C                     MOVEL*BLANK    W0AL02  1        Invoice Suffix
     C                     MOVEL*BLANK    W0AL03  1        Invoice Number
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        A/R Customer Na
     C                     MOVEL'Y'       W0AL01  1        A/R Customer Nu
     C                     MOVEL'Y'       W0AL02  1        Invoice Suffix
     C                     MOVEL'Y'       W0AL03  1        Invoice Number
     C                     ELSE
      * Next record - Detect level breaks
     C           LOAQTX    IFNE WZA001                     A/R Customer Na
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           LOANC7    IFNE WZA002                     A/R Customer Nu
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           LOCEST    IFNE WZA003                     Invoice Suffix
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           LOCONB    IFNE WZA004                     Invoice Number
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of A/R Customer Number format
     C           $FWEVA    ADD  $FWDVA    $FWAVA           USR Tot. Due wi
     C                     ADD  $FWFVA    $FWAVA           USR Tot. Due wi
     C                     ADD  $FWGVA    $FWAVA           USR Tot. Due wi
     C                     ADD  $FWHVA    $FWAVA           USR Tot. Due wi
     C                     ADD  $FWIVA    $FWAVA           USR Tot. Due wi
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert A/R Customer Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $FANC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$FANC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VFANC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFANC7           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$FKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
      * USER: Process after print of A/R Customer Number format
     C                     Z-ADD*ZERO     $FWAVA           USR Tot. Due wi
     C                     ADD  $FWDVA    $GWDVA           USR Tot. Cur  D
     C                     ADD  $FWDVA    $GWJVA           USR Fin Cur Due
     C                     ADD  $FWEVA    $GWKVA           USR Fin Age 1 w
     C                     ADD  $FWFVA    $GWLVA           USR Fin Age 2 w
     C                     ADD  $FWGVA    $GWMVA           USR Fin Age 3 w
     C                     ADD  $FWHVA    $GWNVA           USR Fin Age 4 w
     C                     ADD  $FWIVA    $GWOVA           USR Fin Age 5 w
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of final totals format
     C           $GWJVA    ADD  $GWKVA    $GVEVA           USR Final Total
     C                     ADD  $GWLVA    $GVEVA           USR Final Total
     C                     ADD  $GWMVA    $GVEVA           USR Final Total
     C                     ADD  $GWNVA    $GVEVA           USR Final Total
     C                     ADD  $GWOVA    $GVEVA           USR Final Total
     C           W0PFM     IFEQ 'Y'
      * This format always starts a new page
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
      * Print format
     C                     WRITE$GFINTTL
     C                     END
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of PRT CB by Cust-zero co PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of PRT CB by Cust-zero co PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Print format
     C                     WRITE$C1STPAG
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print A/R Customer Name of PRT CB by Cust-zero co PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print A/R Customer Number of PRT CB by Cust-zero co PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of A/R Customer Number format
      * RTV Contact Info.      RT - Company Customer  * 
     C                     EXSR SDRVGN
      * ** Retrieve aging ranges from A/R Aging Control file
      * RTV A/R Aging Control  RT - A/R Aging Control  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP5G8AA    WL0001    P      A/R Aging Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0002    P4AEDY           A/R Aging Days
     C                     Z-ADDWL0003    P4AFDY           A/R Aging Days
     C                     Z-ADDWL0004    P4AGDY           A/R Aging Days
     C                     Z-ADDWL0005    P4AHDY           A/R Aging Days
     C                     MOVELWL0006    WUEUST    P      Age by Trans or
     C                     MOVELWL0007    WUA1TX    P      Default Y/N
     C                     MOVELWL0008    WUVSST    P      Record Status
     C                     Z-ADDP4AEDY    $DAGHA           USR Age Heading
     C           $DAGHA    ADD  1         $DAGHB           USR Age Heading
     C                     Z-ADDP4AFDY    $DAGHC           USR Age Heading
     C           $DAGHC    ADD  1         $DAGHD           USR Age Heading
     C                     Z-ADDP4AGDY    $DAGHE           USR Age Heading
     C           $DAGHE    ADD  1         $DAGHF           USR Age Heading
     C                     Z-ADDP4AHDY    $DAGHG           USR Age Heading
     C                     Z-ADDP4AHDY    $DAGHH           USR Age Heading
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert A/R Customer Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $DANC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$DANC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VDANC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDANC7           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Invoice Suffix of PRT CB by Cust-zero co PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Invoice Number of PRT CB by Cust-zero co PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Detail line. of PRT CB by Cust-zero co PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * ** Rtv organization                                   C000789
      * Rtv Plant Co/Org      XF - Company Defaults Internal  * 
     C                     CALL 'PMOVXFR'              90  Rtv Plant Co/Or
     C                     PARM *BLANK    W0RTN   7
     C                     PARM LOAIC3    WQ0001  30       Company Number
     C                     PARM *BLANK    WQ0002  1        Plant Company S
     C           WUYJSX    PARM *BLANK    WQ0003  1        Company Organiz
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMOVXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CLC Age Cust Inv. CB   IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           $ECEST    IFEQ 'CB'                       *IF
      * Only ages Chargebacks alone
      * RTV CLC Age Cust CB    RT - A/R Header  * 
     C                     EXSR SFRVGN
     C                     ELSE
      * CASE: PAR.Invoice Suffix is Rebill
     C           $ECEST    IFEQ 'RB'                       *IF
      * Only ages Chargebacks alone
      * RTV CLC Age Cust RB    RT - A/R Header  * 
     C                     EXSR SGRVGN
     C                     END                             *FI
     C                     END                             *FI
      * E2991 RMC 1/27/14 Use Orig inv for CB instead of deriving it
      * RTV CB Orig Inv Nbr  RT - A/R Header  * 
     C                     EXSR SHRVGN
     C                     Z-ADDYL0001    YL0002           Invoice Number
      * Transaction Amount
      * CASE: CUR.Age $ Due - Current - CB is greater than zero
     C           $EAGVA    IFGT *ZERO                      *IF
     C                     Z-ADD$EAGVA    YL0003           Transaction Amo
     C                     MOVEL'1'       YL0004           Aging Bucket
     C                     ELSE
      * CASE: CUR.Age $ Due - Aging 1 - CB is greater than zero
     C           $EACVA    IFGT *ZERO                      *IF
     C                     Z-ADD$EACVA    YL0003           Transaction Amo
     C                     MOVEL'2'       YL0004           Aging Bucket
     C                     ELSE
      * CASE: CUR.Age $ Due - Aging 2 - CB is greater than zero
     C           $EADVA    IFGT *ZERO                      *IF
     C                     Z-ADD$EADVA    YL0003           Transaction Amo
     C                     MOVEL'3'       YL0004           Aging Bucket
     C                     ELSE
      * CASE: CUR.Age $ Due - Aging 3 - CB is greater than zero
     C           $EAEVA    IFGT *ZERO                      *IF
     C                     Z-ADD$EAEVA    YL0003           Transaction Amo
     C                     MOVEL'4'       YL0004           Aging Bucket
     C                     ELSE
      * CASE: CUR.Age $ Due - Aging 4 - CB is greater than zero
     C           $EAFVA    IFGT *ZERO                      *IF
     C                     Z-ADD$EAFVA    YL0003           Transaction Amo
     C                     MOVEL'5'       YL0004           Aging Bucket
     C                     ELSE
      * CASE: CUR.Age $ Due - Aging 5 - CB is greater than zero
     C           $EAHVA    IFGT *ZERO                      *IF
     C                     Z-ADD$EAHVA    YL0003           Transaction Amo
     C                     MOVEL'6'       YL0004           Aging Bucket
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * *** FP1271 RMC - 02/07/08 update aging bucket here for sql table
      * Change A/R Aged CB by Nam - WF A/R Aged CB by Name  * 
     C                     EXSR SICHRC
     C                     MOVEL*BLANK    $ENGNA           Explanation
      * Get Rebill or Charge Back Explanation
      * CASE: DB1.Invoice Suffix is Rebill
     C           LOCEST    IFEQ 'RB'                       *IF
      * RTV Rebill ExplanationRT - A/R Detail  * 
     C                     EXSR SJRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * ** 07/12/2016 E4658 JBB  Fix Duplicate Explanations
      * ** Get sequence number based upon the Invoice Number
     C                     Z-ADD$ECONB    YL0005           Invoice Number
      * RTV Seq#/Comment for Inv# - A/R Detail  * 
     C                     EXSR SKRVGN
      * If record not found, use old way to get explanation
      * CASE: PGM.*Return code is Record Not Found
     C           W0RTN     IFEQ @CN,001                    *IF
      * ** Wrap rtv in an IF, add seq#                        C000789
      * Rtv Chrg Back Explan  IF
      * Rtv Chrg Back Explan  RT - A/R Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAIC3    WL0009           Company Number
     C                     Z-ADDYL0002    WL0010           Invoice Number
     C                     MOVEL'IN'      WL0011    P      Invoice Suffix
     C                     Z-ADD$EDXNB    WL0012           Sequence Number
     C                     MOVEL$ENGNA    WL0013    P      Explanation
     C                     Z-ADDYL0003    WL0014           Transaction Amo
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0012    $EDXNB           Sequence Number
     C                     MOVELWL0013    $ENGNA    P      Explanation
      * ** If no comment, see if there is one for DM
      * CASE: CUR.Explanation is Blank
     C           $ENGNA    IFEQ *BLANK                     *IF
      * ** Wrap rtv in an IF, add seq#                        C000789
      * Rtv Chrg Back Explan  IF
      * Rtv Chrg Back Explan  RT - A/R Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAIC3    WL0009           Company Number
     C                     Z-ADDYL0002    WL0010           Invoice Number
     C                     MOVEL'DM'      WL0011    P      Invoice Suffix
     C                     Z-ADD$EDXNB    WL0012           Sequence Number
     C                     MOVEL$ENGNA    WL0013    P      Explanation
     C                     Z-ADDYL0003    WL0014           Transaction Amo
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0012    $EDXNB           Sequence Number
     C                     MOVELWL0013    $ENGNA    P      Explanation
     C                     END                             *FI
      * ** Get explan. with AR Hdr trans amt instead of amount due
      * CASE: CUR.Explanation is Blank
     C           $ENGNA    IFEQ *BLANK                     *IF
      * RTV Trans Amt         RT - A/R Header  * 
     C                     EXSR SMRVGN
      * Rtv Chrg Back Explan  IF
      * Rtv Chrg Back Explan  RT - A/R Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAIC3    WL0009           Company Number
     C                     Z-ADDYL0002    WL0010           Invoice Number
     C                     MOVEL'IN'      WL0011    P      Invoice Suffix
     C                     Z-ADD$EDXNB    WL0012           Sequence Number
     C                     MOVEL$ENGNA    WL0013    P      Explanation
     C                     Z-ADDWUBSVA    WL0014           Transaction Amo
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0012    $EDXNB           Sequence Number
     C                     MOVELWL0013    $ENGNA    P      Explanation
      * ** If still no comment, see if there is one for DM w/AR trans amt
      * CASE: CUR.Explanation is Blank
     C           $ENGNA    IFEQ *BLANK                     *IF
      * Rtv Chrg Back Explan  IF
      * Rtv Chrg Back Explan  RT - A/R Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAIC3    WL0009           Company Number
     C                     Z-ADDYL0002    WL0010           Invoice Number
     C                     MOVEL'DM'      WL0011    P      Invoice Suffix
     C                     Z-ADD$EDXNB    WL0012           Sequence Number
     C                     MOVEL$ENGNA    WL0013    P      Explanation
     C                     Z-ADDWUBSVA    WL0014           Transaction Amo
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0012    $EDXNB           Sequence Number
     C                     MOVELWL0013    $ENGNA    P      Explanation
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Note Exists       RT - A/R Header Note Header  * 
     C                     EXSR SNRVGN
      * display asterisk if notes exist
      * CASE: LCL.Record Found USR is Record Found
     C           YL0006    IFEQ 'Y'                        *IF
     C                     MOVEL'*'       $EPFTX           Text 1 Length U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $EPFTX           Text 1 Length U
     C                     END                             *FI
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $EAIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$EAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VEAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VEAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Order Number Ref to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $ECAC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$ECAC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VECAC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VECAC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Due Date to display format
      * Convert date
     C           1000000   ADD  $EATDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VEATDT
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$ECOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$EDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of PRT CB by Cust-zero co PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  1         W0FSUM
     C                     END                             FI
      *
      * * A/R Customer Name of PRT CB by Cust-zero co PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * A/R Customer Number of PRT CB by Cust-zero co PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  5         W0FSUM
     C                     END                             FI
      *
      * * Invoice Suffix of PRT CB by Cust-zero co PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Invoice Number of PRT CB by Cust-zero co PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT CB by Cust-zero co PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
      * USER: Process top of page
      * RTV Aging Heading Info RT - A/R Summary  * 
     C                     EXSR SCRVGN
     C                     MOVELP6BUSX    $BBUSX           Include Charge
     C                     MOVELP7DSSC    $BDSSC           Include Rebills
      * Convert fields to external form
      * Convert Date of Last Aging to display format
      * Convert date
     C           1000000   ADD  $BDUDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBDUDT
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'A/R'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Aging Heading Info RT - A/R Summary  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BCAIC3    WQSC01           Company Number
      * Define keylist
     C           KPSSC     KLIST
     C                     KFLD           WQSC01           Company Number
     C                     KFLD           BCANC7           A/R Customer Nu
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           Company Number
      * Setup key
     C                     Z-ADDLOAIC3    WQSC01           Company Number
     C                     Z-ADDLOANC7    BCANC7           A/R Customer Nu
      * Establish starting position
     C           KPSSC     SETLL@BCREFE                    *
     C           KRSSC     READE@BCREFE                  90*
      * Data record not found
     C   90                MOVEL'USR0172' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBCAKTM    $BAKTM           Time of Last Ag
     C                     Z-ADDBCDUDT    $BDUDT           Date of Last Ag
     C                     GOTO SCEXIT                     *QUIT
     C           KRSSC     READE@BCREFE                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Contact Info.      RT - Company Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           EOAIC3           Company Number
     C                     KFLD           EOBKC7           Ship To Custome
      * Setup key
     C                     Z-ADD$DAIC3    EOAIC3           Company Number
     C                     Z-ADD$DANC7    EOBKC7           Ship To Custome
      * Establish starting position
     C           KRSSD     CHAIN@EOREXM              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $DNJNA           Credit Contact
     C                     MOVEL*BLANK    $DI0TX           Credit Contact
     C                     MOVEL*BLANK    P3NKNA           Credit Contact
     C                     MOVEL*BLANK    $DI1TX           Credit Contact
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELEONJNA    $DNJNA           Credit Contact
     C                     MOVELEOI0TX    $DI0TX           Credit Contact
     C                     MOVELEONKNA    P3NKNA           Credit Contact
     C                     MOVELEOI1TX    $DI1TX           Credit Contact
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV A/R Aging Control  RT - A/R Aging Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           ADG8AA           A/R Aging Code
      * Setup key
     C                     MOVELWL0001    ADG8AA           A/R Aging Code
      * Establish starting position
     C           KRSSE     CHAIN@ADCPHM              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3661' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0002           A/R Aging Days
     C                     Z-ADD*ZERO     WL0003           A/R Aging Days
     C                     Z-ADD*ZERO     WL0004           A/R Aging Days
     C                     Z-ADD*ZERO     WL0005           A/R Aging Days
     C                     MOVEL*BLANK    WL0006           Age by Trans or
     C                     MOVEL*BLANK    WL0007           Default Y/N
     C                     MOVEL*BLANK    WL0008           Record Status
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDADAEDY    WL0002           A/R Aging Days
     C                     Z-ADDADAFDY    WL0003           A/R Aging Days
     C                     Z-ADDADAGDY    WL0004           A/R Aging Days
     C                     Z-ADDADAHDY    WL0005           A/R Aging Days
     C                     MOVELADEUST    WL0006           Age by Trans or
     C                     MOVELADA1TX    WL0007           Default Y/N
     C                     MOVELADVSST    WL0008           Record Status
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV CLC Age Cust CB    RT - A/R Header  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001 112       Aging Amount pa
     C                     Z-ADD*ZERO     WN0002 112       USR Age Value 1
     C                     Z-ADD*ZERO     WN0003 112       USR Age Value 2
     C                     Z-ADD*ZERO     WN0004 112       USR Age Value 3
     C                     Z-ADD*ZERO     WN0005 112       USR Age Value 4
     C                     Z-ADD*ZERO     WN0006 112       USR Age Value 5
     C                     Z-ADD*ZERO     WN0007 112       USR Age Current
     C                     Z-ADD*ZERO     WN0008 112       USR Age Value 1
     C                     Z-ADD*ZERO     WN0009 112       USR Age Value 2
     C                     Z-ADD*ZERO     WN0010 112       USR Age Value 3
     C                     Z-ADD*ZERO     WN0011 112       USR Age Value 4
     C                     Z-ADD*ZERO     WN0012 112       USR Age Current
     C                     Z-ADD*ZERO     WN0013 112       USR Age Value 5
     C                     Z-ADD*ZERO     WN0014  70       USR Aging date
     C                     Z-ADD*ZERO     WN0015  70       USR Aging date
     C                     Z-ADD*ZERO     WN0016  70       USR Aging date
     C                     Z-ADD*ZERO     WN0017  70       USR Aging date
     C                     Z-ADD*ZERO     WN0018  70       USR Aging date
     C                     Z-ADD*ZERO     WN0019  70       USR Aging Date
     C                     Z-ADD*ZERO     WN0020 112       USR Age Value 1
     C                     Z-ADD*ZERO     WN0021 112       USR Age Value 2
     C                     Z-ADD*ZERO     WN0022 112       USR Age Value 3
     C                     Z-ADD*ZERO     WN0023 112       USR Age Value 4
     C                     Z-ADD*ZERO     WN0024 112       USR Age Value 5
     C                     Z-ADD*ZERO     WN0025 112       USR Total Credi
     C                     Z-ADD*ZERO     WN0026 112       USR Age Current
     C                     Z-ADD*ZERO     WN0027  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0028  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0029  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0030  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0031  70       Number Value -
     C                     Z-ADD*ZERO     WN0032 112       USR Work Amount
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * Clear all Aging related fields
     C                     Z-ADD0         WN0020           USR Age Value 1
     C                     Z-ADD0         WN0021           USR Age Value 2
     C                     Z-ADD0         WN0022           USR Age Value 3
     C                     Z-ADD0         WN0023           USR Age Value 4
     C                     Z-ADD0         WN0024           USR Age Value 5
     C                     Z-ADD0         WN0026           USR Age Current
     C                     Z-ADD0         WN0002           USR Age Value 1
     C                     Z-ADD0         WN0003           USR Age Value 2
     C                     Z-ADD0         WN0004           USR Age Value 3
     C                     Z-ADD0         WN0005           USR Age Value 4
     C                     Z-ADD0         WN0006           USR Age Value 5
     C                     Z-ADD0         WN0012           USR Age Current
     C                     Z-ADD0         WN0008           USR Age Value 1
     C                     Z-ADD0         WN0009           USR Age Value 2
     C                     Z-ADD0         WN0010           USR Age Value 3
     C                     Z-ADD0         WN0011           USR Age Value 4
     C                     Z-ADD0         WN0013           USR Age Value 5
     C                     Z-ADD0         WN0007           USR Age Current
     C                     Z-ADD0         WUVIVA           Age $ Due-Curre
     C                     Z-ADD0         WUVJVA           Age $ Due-Aging
     C                     Z-ADD0         WUVKVA           Age $ Due-Aging
     C                     Z-ADD0         WUVLVA           Age $ Due-Aging
     C                     Z-ADD0         WUVMVA           Age $ Due-Aging
     C                     Z-ADD0         WUVNVA           Age $ Due-Aging
     C                     Z-ADD0         $EAGVA           Age $ Due - Cur
     C                     Z-ADD0         $EACVA           Age $ Due - Agi
     C                     Z-ADD0         $EADVA           Age $ Due - Agi
     C                     Z-ADD0         $EAFVA           Age $ Due - Agi
     C                     Z-ADD0         $EAEVA           Age $ Due - Agi
     C                     Z-ADD0         $EAHVA           Age $ Due - Agi
      * ***** Change Log and Comments
      * ** 11/29/2006 LJB PK0039
      * ** Aging date ranges are now in the A/R Aging Control file
      * ** Retrieve the aging from the control file using the aging
      * ** code that is passed in from the calling program
      * *****
      * Declare restrictor key work fields
     C           *LIKE     DEFN BDAIC3    WQSF01           Company Number
     C           *LIKE     DEFN BDANC7    WQSF02           A/R Customer Nu
     C           *LIKE     DEFN BDCONB    WQSF03           Invoice Number
     C           *LIKE     DEFN BDCEST    WQSF04           Invoice Suffix
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           Company Number
     C                     KFLD           WQSF02           A/R Customer Nu
     C                     KFLD           WQSF03           Invoice Number
     C                     KFLD           WQSF04           Invoice Suffix
      * Setup key
     C                     Z-ADD$EAIC3    WQSF01           Company Number
     C                     Z-ADD$EANC7    WQSF02           A/R Customer Nu
     C                     Z-ADD$ECONB    WQSF03           Invoice Number
     C                     MOVEL$ECEST    WQSF04           Invoice Suffix
      * Establish starting position
     C           KRSSF     SETLL@BDCPDE                    *
     C           KRSSF     READE@BDCPDE                  90*
      * Data record not found
     C   90                MOVEL'USR0174' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Remaining Balance Due is not equal to zeros
     C           BDBGVA    IFNE 0                          *IF
      * Compute Aging Day Ranges
      * ** 11/29/2006 LJB PK0039
      * ** Retrieve the aging from the control file using the aging
      * ** code that is passed in from the calling program
      * RTV A/R Aging Control  RT - A/R Aging Control  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP5G8AA    WL0001    P      A/R Aging Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0002    WN0027           A/R Aging Days
     C                     Z-ADDWL0003    WN0028           A/R Aging Days
     C                     Z-ADDWL0004    WN0029           A/R Aging Days
     C                     Z-ADDWL0005    WN0030           A/R Aging Days
     C                     MOVELWL0006    WUEUST    P      Age by Trans or
     C                     MOVELWL0007    WUA1TX    P      Default Y/N
     C                     MOVELWL0008    WUVSST    P      Record Status
      * Read the A/R Header File for Aging
      * PAR.USR Aging date - 1 = DB1.Due Date + PAR.A/R Aging Days - 1 *D
     C           BDATDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWN0027    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0014
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0014
     C                     END
      * PAR.USR Aging date - 2 = DB1.Due Date + PAR.A/R Aging Days - 2 *D
     C           BDATDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWN0028    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0015
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0015
     C                     END
      * PAR.USR Aging date - 3 = DB1.Due Date + PAR.A/R Aging Days - 3 *D
     C           BDATDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWN0029    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0016
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0016
     C                     END
      * PAR.USR Aging date - 4 = DB1.Due Date + PAR.A/R Aging Days - 4 *D
     C           BDATDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWN0030    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0017
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0017
     C                     END
     C                     Z-ADDWN0017    WN0018           USR Aging date
      * Fields -USR Age Value 1 accumulates aged Invoices and DM
      * Fields USR Age Value A - Accumulates Chargebacks
      * Fields USR Age Value B  is both Invoices and CB
      * Field USR Total Credit Amount is OA or CM that is applied to Olde
      * Age Chargeback Headers
      * CASE: DB1.Invoice Suffix is Charge Backs and Rebills
     C           BDCEST    IFEQ 'CB'                       *IF
     C           BDCEST    OREQ 'RB'
      * Current Due for CB
      * CASE: JOB.*Job date LE DB1.Due Date
     C           ##JDT     IFLE BDATDT                     *IF
     C                     ADD  BDBGVA    WN0012           USR Age Current
     C                     END                             *FI
      * Past Due Date 1 for CB
      * CASE:
      *  - c1 AND c2
      *   |- c1    : JOB.*Job date GT DB1.Due Date
      *   |- c2    : JOB.*Job date LE PAR.USR Aging date - 1
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           ##JDT     IFGT BDATDT                     *IF
     C           ##JDT     IFLE WN0014                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  BDBGVA    WN0002           USR Age Value 1
     C                     END                             *FI
      * Past Due 2 for CB
      * CASE:
      *  - c1 AND c2
      *   |- c1    : JOB.*Job date GT PAR.USR Aging date - 1
      *   |- c2    : JOB.*Job date LE PAR.USR Aging date - 2
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           ##JDT     IFGT WN0014                     *IF
     C           ##JDT     IFLE WN0015                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  BDBGVA    WN0003           USR Age Value 2
     C                     END                             *FI
      * Past Due date 3 for CB
      * CASE:
      *  - c1 AND c2
      *   |- c1    : JOB.*Job date GT PAR.USR Aging date - 2
      *   |- c2    : JOB.*Job date LE PAR.USR Aging date - 3
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           ##JDT     IFGT WN0015                     *IF
     C           ##JDT     IFLE WN0016                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  BDBGVA    WN0004           USR Age Value 3
     C                     END                             *FI
      * Aging Value 4 for CB
      * CASE:
      *  - c1 AND c2
      *   |- c1    : JOB.*Job date GT PAR.USR Aging date - 3
      *   |- c2    : JOB.*Job date LE PAR.USR Aging date - 4
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           ##JDT     IFGT WN0016                     *IF
     C           ##JDT     IFLE WN0017                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  BDBGVA    WN0005           USR Age Value 4
     C                     END                             *FI
      * Age 5 is anything over date 4 for CB
      * CASE: JOB.*Job date GT PAR.USR Aging date - 4
     C           ##JDT     IFGT WN0017                     *IF
     C                     ADD  BDBGVA    WN0006           USR Age Value 5
     C                     END                             *FI
     C                     END                             *FI
      * Move Values to Output Parameters
      * This routine has been changed to age CB only
     C                     Z-ADDWN0012    $EAGVA           Age $ Due - Cur
     C                     Z-ADDWN0002    $EACVA           Age $ Due - Agi
     C                     Z-ADDWN0003    $EADVA           Age $ Due - Agi
     C                     Z-ADDWN0004    $EAEVA           Age $ Due - Agi
     C                     Z-ADDWN0005    $EAFVA           Age $ Due - Agi
     C                     Z-ADDWN0006    $EAHVA           Age $ Due - Agi
     C                     Z-ADDWN0026    WUVIVA           Age $ Due-Curre
     C                     Z-ADDWN0020    WUVJVA           Age $ Due-Aging
     C                     Z-ADDWN0021    WUVKVA           Age $ Due-Aging
     C                     Z-ADDWN0022    WUVLVA           Age $ Due-Aging
     C                     Z-ADDWN0023    WUVMVA           Age $ Due-Aging
     C                     Z-ADDWN0024    WUVNVA           Age $ Due-Aging
     C                     END                             *FI
     C           KRSSF     READE@BDCPDE                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV CLC Age Cust RB    RT - A/R Header  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0033 112       Aging Amount pa
     C                     Z-ADD*ZERO     WN0034 112       USR Age Value 1
     C                     Z-ADD*ZERO     WN0035 112       USR Age Value 2
     C                     Z-ADD*ZERO     WN0036 112       USR Age Value 3
     C                     Z-ADD*ZERO     WN0037 112       USR Age Value 4
     C                     Z-ADD*ZERO     WN0038 112       USR Age Value 5
     C                     Z-ADD*ZERO     WN0039 112       USR Age Current
     C                     Z-ADD*ZERO     WN0040 112       USR Age Value 1
     C                     Z-ADD*ZERO     WN0041 112       USR Age Value 2
     C                     Z-ADD*ZERO     WN0042 112       USR Age Value 3
     C                     Z-ADD*ZERO     WN0043 112       USR Age Value 4
     C                     Z-ADD*ZERO     WN0044 112       USR Age Current
     C                     Z-ADD*ZERO     WN0045 112       USR Age Value 5
     C                     Z-ADD*ZERO     WN0046  70       USR Aging date
     C                     Z-ADD*ZERO     WN0047  70       USR Aging date
     C                     Z-ADD*ZERO     WN0048  70       USR Aging date
     C                     Z-ADD*ZERO     WN0049  70       USR Aging date
     C                     Z-ADD*ZERO     WN0050  70       USR Aging date
     C                     Z-ADD*ZERO     WN0051  70       USR Aging Date
     C                     Z-ADD*ZERO     WN0052 112       USR Age Value 1
     C                     Z-ADD*ZERO     WN0053 112       USR Age Value 2
     C                     Z-ADD*ZERO     WN0054 112       USR Age Value 3
     C                     Z-ADD*ZERO     WN0055 112       USR Age Value 4
     C                     Z-ADD*ZERO     WN0056 112       USR Age Value 5
     C                     Z-ADD*ZERO     WN0057 112       USR Total Credi
     C                     Z-ADD*ZERO     WN0058 112       USR Age Current
     C                     Z-ADD*ZERO     WN0059  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0060  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0061  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0062  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0063  70       Number Value -
     C                     Z-ADD*ZERO     WN0064 112       USR Work Amount
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * Clear all Aging related fields
     C                     Z-ADD0         WN0052           USR Age Value 1
     C                     Z-ADD0         WN0053           USR Age Value 2
     C                     Z-ADD0         WN0054           USR Age Value 3
     C                     Z-ADD0         WN0055           USR Age Value 4
     C                     Z-ADD0         WN0056           USR Age Value 5
     C                     Z-ADD0         WN0058           USR Age Current
     C                     Z-ADD0         WN0034           USR Age Value 1
     C                     Z-ADD0         WN0035           USR Age Value 2
     C                     Z-ADD0         WN0036           USR Age Value 3
     C                     Z-ADD0         WN0037           USR Age Value 4
     C                     Z-ADD0         WN0038           USR Age Value 5
     C                     Z-ADD0         WN0044           USR Age Current
     C                     Z-ADD0         WN0040           USR Age Value 1
     C                     Z-ADD0         WN0041           USR Age Value 2
     C                     Z-ADD0         WN0042           USR Age Value 3
     C                     Z-ADD0         WN0043           USR Age Value 4
     C                     Z-ADD0         WN0045           USR Age Value 5
     C                     Z-ADD0         WN0039           USR Age Current
     C                     Z-ADD0         WUVIVA           Age $ Due-Curre
     C                     Z-ADD0         WUVJVA           Age $ Due-Aging
     C                     Z-ADD0         WUVKVA           Age $ Due-Aging
     C                     Z-ADD0         WUVLVA           Age $ Due-Aging
     C                     Z-ADD0         WUVMVA           Age $ Due-Aging
     C                     Z-ADD0         WUVNVA           Age $ Due-Aging
     C                     Z-ADD0         $EAGVA           Age $ Due - Cur
     C                     Z-ADD0         $EACVA           Age $ Due - Agi
     C                     Z-ADD0         $EADVA           Age $ Due - Agi
     C                     Z-ADD0         $EAFVA           Age $ Due - Agi
     C                     Z-ADD0         $EAEVA           Age $ Due - Agi
     C                     Z-ADD0         $EAHVA           Age $ Due - Agi
      * ***** Change Log and Comments
      * ** 11/29/2006 LJB PK0039
      * ** Aging date ranges are now in the A/R Aging Control file
      * ** Retrieve the aging from the control file using the aging
      * ** code that is passed in from the calling program
      * *****
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIC3    WQSG01           Company Number
     C           *LIKE     DEFN WAANC7    WQSG02           A/R Customer Nu
     C           *LIKE     DEFN WACONB    WQSG03           Invoice Number
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Company Number
     C                     KFLD           WQSG02           A/R Customer Nu
     C                     KFLD           WQSG03           Invoice Number
      * Setup key
     C                     Z-ADD$EAIC3    WQSG01           Company Number
     C                     Z-ADD$EANC7    WQSG02           A/R Customer Nu
     C                     Z-ADD$ECONB    WQSG03           Invoice Number
      * Establish starting position
     C           KRSSG     SETLL@BDCPLVF                   *
     C           KRSSG     READE@BDCPLVF                 90*
      * Data record not found
     C   90                MOVEL'USR0174' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Remaining Balance Due is not equal to zeros
     C           WABGVA    IFNE 0                          *IF
      * Compute Aging Day Ranges
      * ** 11/29/2006 LJB PK0039
      * ** Retrieve the aging from the control file using the aging
      * ** code that is passed in from the calling program
      * RTV A/R Aging Control  RT - A/R Aging Control  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP5G8AA    WL0001    P      A/R Aging Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0002    WN0059           A/R Aging Days
     C                     Z-ADDWL0003    WN0060           A/R Aging Days
     C                     Z-ADDWL0004    WN0061           A/R Aging Days
     C                     Z-ADDWL0005    WN0062           A/R Aging Days
     C                     MOVELWL0006    WUEUST    P      Age by Trans or
     C                     MOVELWL0007    WUA1TX    P      Default Y/N
     C                     MOVELWL0008    WUVSST    P      Record Status
      * Read the A/R Header File for Aging
      * PAR.USR Aging date - 1 = DB1.Due Date + PAR.A/R Aging Days - 1 *D
     C           WAATDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWN0059    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0046
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0046
     C                     END
      * PAR.USR Aging date - 2 = DB1.Due Date + PAR.A/R Aging Days - 2 *D
     C           WAATDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWN0060    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0047
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0047
     C                     END
      * PAR.USR Aging date - 3 = DB1.Due Date + PAR.A/R Aging Days - 3 *D
     C           WAATDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWN0061    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0048
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0048
     C                     END
      * PAR.USR Aging date - 4 = DB1.Due Date + PAR.A/R Aging Days - 4 *D
     C           WAATDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWN0062    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0049
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0049
     C                     END
     C                     Z-ADDWN0049    WN0050           USR Aging date
      * Fields -USR Age Value 1 accumulates aged Invoices and DM
      * Fields USR Age Value A - Accumulates Chargebacks
      * Fields USR Age Value B  is both Invoices and CB
      * Field USR Total Credit Amount is OA or CM that is applied to Olde
      * Age Chargeback Headers
      * CASE: DB1.Invoice Suffix is Charge Backs and Rebills
     C           WACEST    IFEQ 'CB'                       *IF
     C           WACEST    OREQ 'RB'
      * Current Due for CB
      * CASE: JOB.*Job date LE DB1.Due Date
     C           ##JDT     IFLE WAATDT                     *IF
     C                     ADD  WABGVA    WN0044           USR Age Current
     C                     END                             *FI
      * Past Due Date 1 for CB
      * CASE:
      *  - c1 AND c2
      *   |- c1    : JOB.*Job date GT DB1.Due Date
      *   |- c2    : JOB.*Job date LE PAR.USR Aging date - 1
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           ##JDT     IFGT WAATDT                     *IF
     C           ##JDT     IFLE WN0046                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  WABGVA    WN0034           USR Age Value 1
     C                     END                             *FI
      * Past Due 2 for CB
      * CASE:
      *  - c1 AND c2
      *   |- c1    : JOB.*Job date GT PAR.USR Aging date - 1
      *   |- c2    : JOB.*Job date LE PAR.USR Aging date - 2
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           ##JDT     IFGT WN0046                     *IF
     C           ##JDT     IFLE WN0047                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  WABGVA    WN0035           USR Age Value 2
     C                     END                             *FI
      * Past Due date 3 for CB
      * CASE:
      *  - c1 AND c2
      *   |- c1    : JOB.*Job date GT PAR.USR Aging date - 2
      *   |- c2    : JOB.*Job date LE PAR.USR Aging date - 3
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           ##JDT     IFGT WN0047                     *IF
     C           ##JDT     IFLE WN0048                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  WABGVA    WN0036           USR Age Value 3
     C                     END                             *FI
      * Aging Value 4 for CB
      * CASE:
      *  - c1 AND c2
      *   |- c1    : JOB.*Job date GT PAR.USR Aging date - 3
      *   |- c2    : JOB.*Job date LE PAR.USR Aging date - 4
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           ##JDT     IFGT WN0048                     *IF
     C           ##JDT     IFLE WN0049                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  WABGVA    WN0037           USR Age Value 4
     C                     END                             *FI
      * Age 5 is anything over date 4 for CB
      * CASE: JOB.*Job date GT PAR.USR Aging date - 4
     C           ##JDT     IFGT WN0049                     *IF
     C                     ADD  WABGVA    WN0038           USR Age Value 5
     C                     END                             *FI
     C                     END                             *FI
      * Move Values to Output Parameters
      * This routine has been changed to age CB only
     C                     Z-ADDWN0044    $EAGVA           Age $ Due - Cur
     C                     Z-ADDWN0034    $EACVA           Age $ Due - Agi
     C                     Z-ADDWN0035    $EADVA           Age $ Due - Agi
     C                     Z-ADDWN0036    $EAEVA           Age $ Due - Agi
     C                     Z-ADDWN0037    $EAFVA           Age $ Due - Agi
     C                     Z-ADDWN0038    $EAHVA           Age $ Due - Agi
     C                     Z-ADDWN0058    WUVIVA           Age $ Due-Curre
     C                     Z-ADDWN0052    WUVJVA           Age $ Due-Aging
     C                     Z-ADDWN0053    WUVKVA           Age $ Due-Aging
     C                     Z-ADDWN0054    WUVLVA           Age $ Due-Aging
     C                     Z-ADDWN0055    WUVMVA           Age $ Due-Aging
     C                     Z-ADDWN0056    WUVNVA           Age $ Due-Aging
     C                     END                             *FI
     C           KRSSG     READE@BDCPLVF                 90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV CB Orig Inv Nbr  RT - A/R Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WBAIC3           Company Number
     C                     KFLD           WBCONB           Invoice Number
     C                     KFLD           WBCEST           Invoice Suffix
      * Setup key
     C                     Z-ADD$EAIC3    WBAIC3           Company Number
     C                     Z-ADD$ECONB    WBCONB           Invoice Number
     C                     MOVEL$ECEST    WBCEST           Invoice Suffix
      * Establish starting position
     C           KRSSH     CHAIN@BDCPF7              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0174' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0001           Original Inv fo
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWBH3DT    YL0001           Original Inv fo
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SICHRC    BEGSR
      *================================================================
      * Change A/R Aged CB by Nam - WF A/R Aged CB by Name  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @LOCPPM
     C                     Z-ADD$EAIC3    WCAIC3           Company Number
     C                     MOVEL$EAQTX    WCAQTX    P      A/R Customer Na
     C                     Z-ADD$EANC7    WCANC7           A/R Customer Nu
     C                     MOVEL$ECEST    WCCEST    P      Invoice Suffix
     C                     Z-ADD$ECONB    WCCONB           Invoice Number
      *
     C           KLCHSI    KLIST
     C                     KFLD           WCAIC3           Company Number
     C                     KFLD           WCAQTX           A/R Customer Na
     C                     KFLD           WCANC7           A/R Customer Nu
     C                     KFLD           WCCEST           Invoice Suffix
     C                     KFLD           WCCONB           Invoice Number
     C           KLCHSI    CHAIN@LOCPPM              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDLOCPL0'MDACP
     C                     MOVEL'@LOCPPM' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SIEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDLO1    YARDCS
      * Move non-key fields to @LOCPPM
     C                     Z-ADD$EDXNB    WCDXNB           Sequence Number
     C                     Z-ADD$ECAC7    WCCAC7           Order Number Re
     C                     Z-ADD$EATDT    WCATDT           Due Date
     C                     MOVEL$EBCCD    WCBCCD    P      Salesperson Cod
     C                     MOVEL$EN1SX    WCN1SX    P      CB Grouping Cod
     C                     MOVELYL0004    WCAGBU    P      Aging Bucket
      *
      * Set PGM.*Record Data Changed flag
     C           QPDLO1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@LOCPPM                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDLOCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Rebill ExplanationRT - A/R Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BFAIC3    WQSJ01           Company Number
     C           *LIKE     DEFN BFQJDT    WQSJ02           A/R Dtl UnUsed
     C           *LIKE     DEFN BFCEST    WQSJ03           Invoice Suffix
     C           *LIKE     DEFN BFUHCD    WQSJ04           Adjustment Type
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Company Number
     C                     KFLD           WQSJ02           A/R Dtl UnUsed
     C                     KFLD           WQSJ03           Invoice Suffix
     C                     KFLD           WQSJ04           Adjustment Type
      * Setup key
     C                     Z-ADDLOAIC3    WQSJ01           Company Number
     C                     Z-ADDLOCONB    WQSJ02           A/R Dtl UnUsed
     C                     MOVEL'CB'      WQSJ03           Invoice Suffix
     C                     MOVE *BLANK    WQSJ04           Adjustment Type
     C                     MOVEL'RB'      WQSJ04           Adjustment Type
      * Establish starting position
     C           KRSSJ     SETLL@BECPYU                    *
     C           KRSSJ     READE@BECPYU                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0178' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $ENGNA           Explanation
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBFNGNA    $ENGNA           Explanation
     C           KRSSJ     READE@BECPYU                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * RTV Seq#/Comment for Inv# - A/R Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL*BLANK    $ENGNA           Explanation
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSK01           Company Number
     C           *LIKE     DEFN WDCONB    WQSK02           Invoice Number
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Company Number
     C                     KFLD           WQSK02           Invoice Number
      * Setup key
     C                     Z-ADD$EAIC3    WQSK01           Company Number
     C                     Z-ADDYL0001    WQSK02           Invoice Number
      * Establish starting position
     C           KRSSK     SETLL@BFCPFO                    *
     C           KRSSK     READE@BFCPFO                  90*
      * Data record not found
     C   90                MOVEL'USR0178' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.A/R Dtl UnUsed Date 3 EQ PAR.Invoice Number - CB
     C           WDQJDT    IFEQ YL0005                     *IF
     C                     Z-ADDWDDXNB    $EDXNB           Sequence Number
     C                     MOVELWDNGNA    $ENGNA           Explanation
     C                     GOTO SKEXIT                     *QUIT
     C                     END                             *FI
     C           KRSSK     READE@BFCPFO                  90*
     C                     ENDDO
      * USER: Exit processing
     C                     MOVEL'USR1160' W0RTN            *Return code
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Rtv Chrg Back Explan  RT - A/R Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * ***** Change Log and Comments
     C                     EXSR UBSUBR                     ***** Change Lo
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSL01           Company Number
     C           *LIKE     DEFN WDCONB    WQSL02           Invoice Number
     C           *LIKE     DEFN WDCEST    WQSL03           Invoice Suffix
      * Define keylist
     C           KPSSL     KLIST
     C                     KFLD           WQSL01           Company Number
     C                     KFLD           WQSL02           Invoice Number
     C                     KFLD           WQSL03           Invoice Suffix
     C                     KFLD           WDDXNB           Sequence Number
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WQSL01           Company Number
     C                     KFLD           WQSL02           Invoice Number
     C                     KFLD           WQSL03           Invoice Suffix
      * Setup key
     C                     Z-ADDWL0009    WQSL01           Company Number
     C                     Z-ADDWL0010    WQSL02           Invoice Number
     C                     MOVELWL0011    WQSL03           Invoice Suffix
     C                     Z-ADDWL0012    WDDXNB           Sequence Number
      * Establish starting position
     C           KPSSL     SETLL@BFCPFO                    *
     C           KRSSL     READE@BFCPFO                  90*
      * Data record not found
     C   90                MOVEL'USR0178' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * *** PK0333 ***
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DB1.Adjustment Type Code is Chargeback
      *   |- c2    : DB1.Adjustment Type Code is Accrual Chargeback
      *   '-
     C           WDUHCD    IFEQ 'CB'                       *IF
     C           WDUHCD    OREQ 'ACB'                      *OR
      * compare dollars
      * CASE: DB1.Transaction Amount EQ PAR.Transaction Amount
     C           WDBSVA    IFEQ WL0014                     *IF
     C                     MOVELWDNGNA    WL0013           Explanation
     C                     Z-ADDWDDXNB    WL0012           Sequence Number
     C                     GOTO SLEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSL     READE@BFCPFO                  90*
     C                     ENDDO
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * RTV Trans Amt         RT - A/R Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           WBAIC3           Company Number
     C                     KFLD           WBCONB           Invoice Number
     C                     KFLD           WBCEST           Invoice Suffix
      * Setup key
     C                     Z-ADD$EAIC3    WBAIC3           Company Number
     C                     Z-ADD$ECONB    WBCONB           Invoice Number
     C                     MOVEL$ECEST    WBCEST           Invoice Suffix
      * Establish starting position
     C           KRSSM     CHAIN@BDCPF7              90    *
      * Data record not found
     C   90                MOVEL'USR0174' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWBBSVA    WUBSVA           Transaction Amo
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Note Exists       RT - A/R Header Note Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN EDAIC3    WQSN01           Company Number
     C           *LIKE     DEFN EDCONB    WQSN02           Invoice Number
     C           *LIKE     DEFN EDCEST    WQSN03           Invoice Suffix
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WQSN01           Company Number
     C                     KFLD           WQSN02           Invoice Number
     C                     KFLD           WQSN03           Invoice Suffix
      * Setup key
     C                     Z-ADD$EAIC3    WQSN01           Company Number
     C                     Z-ADD$ECONB    WQSN02           Invoice Number
     C                     MOVEL$ECEST    WQSN03           Invoice Suffix
      * Establish starting position
     C           KRSSN     SETLL@EDCPVF                    *
     C           KRSSN     READE@EDCPVF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR4014' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       YL0006           Record Found US
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y'       YL0006           Record Found US
     C           KRSSN     READE@EDCPVF                  90*
     C                     ENDDO
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * ** 07/22/16 JBB E5262  Chargeback and Rebill Modifications
      *               Include Rebill in the report title
      * ** 07/13/16 JBB E6458  Get actual explanation from the original
      *    invoice detail record for based upon the Charge Back invoice
      *    number.
      * RMC E2991 1/28/14 for CB use Orig Inv for CB instead of deriving
      * ** 06/14/10 LJB C000789  Daily's Invoice #s are 5 digits and can
      *    be 1-5 or 2-6. Seq# is the last or the last 2 digits.
      * ** 06/09/10 LJB C000789  Wrap rtv explanation in IF so all recs
      *    are rtv'd even if the amounts are the same. Add Seq#.
      * ** 02/07/08  RMC FP1271 Update Aging bucket per invoice for sql t
      *    which shows the summary per sales person/bucket
      * ** 06
      * ** Put passed 15.5 co# into 3.0 co#
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * ** 06/07/2010 LJB C000789  Pass sequence#, pass back out so
      * **  next explanation will be selected if required.
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P2AIC3           Company Number
     C                     MOVEL*BLANK    P3NJNA           Credit Contact
     C                     MOVEL*BLANK    P3I0TX           Credit Contact
     C                     MOVEL*BLANK    P3NKNA           Credit Contact
     C                     MOVEL*BLANK    P3I1TX           Credit Contact
     C                     Z-ADD*ZERO     P4EVVA           USR Age Value 1
     C                     Z-ADD*ZERO     P4EWVA           USR Age Value 2
     C                     Z-ADD*ZERO     P4EXVA           USR Age Value 3
     C                     Z-ADD*ZERO     P4EYVA           USR Age Value 4
     C                     Z-ADD*ZERO     P4EZVA           USR Age Value 5
     C                     Z-ADD*ZERO     P4EUVA           USR Age Current
     C                     Z-ADD*ZERO     P4B9DT           USR Aging date
     C                     Z-ADD*ZERO     P4CBDT           USR Aging date
     C                     Z-ADD*ZERO     P4CDDT           USR Aging date
     C                     Z-ADD*ZERO     P4CFDT           USR Aging date
     C                     Z-ADD*ZERO     P4CHDT           USR Aging date
     C                     Z-ADD*ZERO     P4CSDT           USR Aging Date
     C                     Z-ADD*ZERO     P4AEDY           A/R Aging Days
     C                     Z-ADD*ZERO     P4AFDY           A/R Aging Days
     C                     Z-ADD*ZERO     P4AGDY           A/R Aging Days
     C                     Z-ADD*ZERO     P4AHDY           A/R Aging Days
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    LOAQTX           A/R Customer Na
     C                     MOVEL*LOVAL    LOANC7           A/R Customer Nu
     C                     MOVEL*LOVAL    LOCEST           Invoice Suffix
     C                     MOVEL*LOVAL    LOCONB           Invoice Number
      * Define work field Age by Trans or Due Date
     C                     MOVEL*BLANK    WUEUST  1
      * Define work field Default Y/N
     C                     MOVEL*BLANK    WUA1TX  1
      * Define work field Record Status
     C                     MOVEL*BLANK    WUVSST  1
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Company Organization
     C                     MOVEL*BLANK    WUYJSX  1
      * Define work field Age $ Due-Current-W/O CB
     C                     Z-ADD*ZERO     WUVIVA 112
      * Define work field Age $ Due-Aging 1-W/O CB
     C                     Z-ADD*ZERO     WUVJVA 112
      * Define work field Age $ Due-Aging 2-W/O CB
     C                     Z-ADD*ZERO     WUVKVA 112
      * Define work field Age $ Due-Aging 3-W/O CB
     C                     Z-ADD*ZERO     WUVLVA 112
      * Define work field Age $ Due-Aging 4-W/O CB
     C                     Z-ADD*ZERO     WUVMVA 112
      * Define work field Age $ Due-Aging 5-W/O CB
     C                     Z-ADD*ZERO     WUVNVA 112
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WACONB           Invoice Number
     C                     Z-ADD*ZERO     WABSVA           Transaction Amo
     C                     Z-ADD*ZERO     WAAIVA           Adjustment Amou
     C                     Z-ADD*ZERO     WAAOVA           Amount Paid
     C                     Z-ADD*ZERO     WABGVA           Remaining Balan
     C                     Z-ADD*ZERO     WACKNB           G/L Document Nu
     C                     Z-ADD*ZERO     WACAC7           Order Number Re
     C                     Z-ADD*ZERO     WABKC7           Ship To Custome
     C                     Z-ADD*ZERO     WAB4DT           Transaction Dat
     C                     Z-ADD*ZERO     WAATDT           Due Date
     C                     Z-ADD*ZERO     WAH0DT           Last Payment Da
     C                     Z-ADD*ZERO     WAH3DT           Original Inv fo
     C                     Z-ADD*ZERO     WAH4DT           Paid in Full Da
     C                     Z-ADD*ZERO     WAH5DT           Last G/L Post D
     C                     Z-ADD*ZERO     WAANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WABSDY           Days to Pay
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WCCONB           Invoice Number
     C                     Z-ADD*ZERO     WCDXNB           Sequence Number
     C                     Z-ADD*ZERO     WCCAC7           Order Number Re
     C                     Z-ADD*ZERO     WCATDT           Due Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDCONB           Invoice Number
     C                     Z-ADD*ZERO     WDDXNB           Sequence Number
     C                     Z-ADD*ZERO     WDBSVA           Transaction Amo
     C                     Z-ADD*ZERO     WDB4DT           Transaction Dat
     C                     Z-ADD*ZERO     WDDVDT           Payment/Deposit
     C                     Z-ADD*ZERO     WDYXNX           Deposit Time
     C                     Z-ADD*ZERO     WDHYDT           G/L Post Date
     C                     Z-ADD*ZERO     WDCKNB           G/L Document Nu
     C                     Z-ADD*ZERO     WDC1NY           G/L Posting Com
     C                     Z-ADD*ZERO     WDQHDT           TFS Adj Week-En
     C                     Z-ADD*ZERO     WDQIDT           A/R Orig Inv fo
     C                     Z-ADD*ZERO     WDQJDT           A/R Dtl UnUsed
     C                     Z-ADD*ZERO     WDQKDT           A/R Dtl UnUsed
     C                     Z-ADD*ZERO     WDQLDT           A/R Dtl UnUsed
     C                     Z-ADD*ZERO     WDGLVL           G/L Sub-Ledger
     C                     Z-ADD*ZERO     WDGMVL           A/R Dtl UnUsed
     C                     Z-ADD*ZERO     WDGNVL           A/R Dtl UnUsed
     C                     Z-ADD*ZERO     WDGOVL           A/R Dtl UnUsed
     C                     Z-ADD*ZERO     WDGPVL           A/R Dtl UnUsed
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Define work field Transaction Amount
     C                     Z-ADD*ZERO     WUBSVA 112
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SERVGN.
     C                     MOVEL*BLANK    WL0001  6
     C                     Z-ADD*ZERO     WL0002  30
     C                     Z-ADD*ZERO     WL0003  30
     C                     Z-ADD*ZERO     WL0004  30
     C                     Z-ADD*ZERO     WL0005  30
     C                     MOVEL*BLANK    WL0006  1
     C                     MOVEL*BLANK    WL0007  1
     C                     MOVEL*BLANK    WL0008  1
      * Define local variables for subroutine SLRVGN.
     C                     Z-ADD*ZERO     WL0009  30
     C                     Z-ADD*ZERO     WL0010  70
     C                     MOVEL*BLANK    WL0011  2
     C                     Z-ADD*ZERO     WL0012  30
     C                     MOVEL*BLANK    WL0013 30
     C                     Z-ADD*ZERO     WL0014 112
      * Define null work field Plant Company Sts
     C                     MOVEL*BLANK    YN0001  1
      * Define local work field Original Inv for CB
     C                     Z-ADD*ZERO     YL0001  70
      * Define local work field Invoice Number
     C                     Z-ADD*ZERO     YL0002  70
      * Define local work field Transaction Amount
     C                     Z-ADD*ZERO     YL0003 112
      * Define local work field Aging Bucket
     C                     MOVEL*BLANK    YL0004  1
      * Define local work field Invoice Number - CB
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field Record Found USR
     C                     MOVEL*BLANK    YL0006  1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     Z-ADDP1AJAA    P2AIC3           Company Number
      * ***** Change Log and Comments
     C                     EXSR UASUBR                     ***** Change Lo
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 USR1160
