      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF238 - Base Marketing Close: Create Invoice Charges
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     03/24/05
      *
      * Function:    If the function is error-free and Final, this program is called to:
      *                 1) Create two Invoice Charge records for the week
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 12/12/08  LeAnne Ramsey
      *           Recompile only. For our new TFS Yield Reports, we added new "head" fields
      *           to the Reference File.  These new "head" fields will hold "weekly"
      *           values. At this time, weekly values are exceeding 100,000 head. So, we made
      *           the new head fields 7,0. To be consistent, I changed the "daily" head
      *           field from 5,0 to 7,0. So, file TFP016 was recompiled to pick up the
      *           7,0 field size.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Ftfp005    if   e           k disk
      *    Charge codes
      *
      *
     Ftfl016a   if   e           k disk
      *  Base marketing fee transactions
      *
      *
     Ftfp021    o    e           k disk
      *  Invoice charges
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
      *
      *
      * Workfields
      *
     D wkcam           s                   like(icicam)
     D wkdam           s                   like(icicam)
     D wkhd            s                   like(btklhd)
      *
      *
      * Parms
      *
     D xxicsn          s                   like(icicsn)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *---------------------------------------------------------------
      *  Local data area
      *---------------------------------------------------------------
      *
     d lda            uds                  dtaara(*lda)
     D  ldcyr                  1      4  0
     D  ldcwk                  5      6  0
     D  ldcbdt                 7     14  0
     D  ldcbsyn               15     21  0
     D  ldcedt                22     29  0
     D  ldcesyn               30     36  0
     D  ldpfcd                37     37
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read each record in the Base Marketing Fee Transaction file for the
      * week, summing up the head and dollars.
      *
     C     ldcedt        setll     tfl016a
      *
     C                   dou       *in90 = *on                                  Main do
     C     ldcedt        reade     tfl016a                                90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   if        first = yes
     C                   move      no            first
     C                   endif
      *
      * Accumulate:
      *   1) Current amount
      *   2) Deferred amount
      *   3) Killed head
     C                   add       btbmcam       wkcam
     C                   add       btbmdam       wkdam
     C                   add       btklhd        wkhd
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      *
      * After processing all records for the week, write 2 Invoice Charge
      * records.
     C                   if        first = no
     C                   exsr      $charges
     C                   endif
      * EOF processing
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Write two Invoice Charge records
      *---------------------------------------------------------------
      *
     C     $charges      begsr
      *
      * Initialze Invoice Charge record.
      *
     C                   clear                   icrec
      *
      * Set the System-generated Flag to Yes
      * Set the Invoice Status to Open
      * Populate date field with the week-ending date from the LDA
      * Move accumulated Killed Head into the Units field
      *
     C                   move      yes           icsysfl
     C                   move      'O'           icinstcd
     C                   z-add     ldcedt        icicdt
     C                   z-add     wkhd          icunit
      *
      * Current:
      *
     C     'MFEECB    '  chain     tfp005                             92
     C                   if        *in92 = *off                                 If valid code
     C                   move      'MFEECB    '  iccccd
     C                   move      ccinfl        icinfl
     C                   move      ccsmcd        icsmcd
     C                   z-add     wkcam         icicam
     C                   exsr      $wrt021
     C                   endif                                                  If valid code
      *
      * Deferred:
      *
     C     'MFEEDB    '  chain     tfp005                             92
     C                   if        *in92 = *off                                 If good code
     C                   move      'MFEEDB    '  iccccd
     C                   move      ccinfl        icinfl
     C                   move      ccsmcd        icsmcd
     C                   z-add     wkdam         icicam
     C                   exsr      $wrt021
     C                   endif                                                  If good code
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write Invoice Charge records
      *---------------------------------------------------------------
      *
     C     $wrt021       begsr
      *
      * Get the next system-assigned 'Invoice Charge Number'.
      *
     C                   call      'TF807'
     C     icicsn        parm      0             xxicsn
      *
      *
      * Write Invoice Charge record.
      *
     C                   write     icrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
     C                   endsr
      /eject
