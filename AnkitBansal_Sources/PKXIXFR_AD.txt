// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKXIXFR
// ?Date: 14.08.2025 Time: 02:53:16
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?H16853 ISE 11/05/2020-Recompiled due to change in Buy Order Number
EXECUTE FUNCTION(PayEdt Create Crc FIX RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1239100;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(PAR.TH_Tattoo_Number);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.TH Held Over is *Zeros
 IF DB1.TH_Held_Over = *ZERO;

 EXECUTE FUNCTION(Rtv Hog Class         RT) TYPE(RTVOBJ) FILE(PKA8REP)           AB1127629;
 PARAMETER(DB1.HC_Class_Code);
 PARAMETER(WRK.HC_Description);
 PARAMETER(WRK.HC_Defect_Required);
 PARAMETER(WRK.HC_Price_Required);
 PARAMETER(WRK.HC_Resolution);
 PARAMETER(WRK.HC_Qualification);
 PARAMETER(WRK.HC_Class_Type);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // LCL.CD Carcass Number = CON.*ZERO
 LCL.CD_Carcass_Number = *ZERO;

 // PAR.Live wgt total 11.1   USR = CON.*ZERO
 PAR.Live_wgt_total_11_1_USR = *ZERO;

 //?Read the Evaluation trans and create Carcass Detail Records
 EXECUTE FUNCTION(PayEdt Create Crc FIX RT) TYPE(RTVOBJ) FILE(PKBVCPP)           AB1239099;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(LCL.CD_Carcass_Number);
 PARAMETER(PAR.Live_wgt_total_11_1_USR);
 PARAMETER(DB1.TH_Recalc_Live_Wgt);
 PARAMETER(DB1.TH_Source_Type);
 PARAMETER(DB1.TH_Payment_Type);
 PARAMETER(DB1.TH_Source_Code);
 PARAMETER(DB1.TH_Hog_Class_Type);
 PARAMETER(DB1.TH_HPS_Farm_Site);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.RS Record Status is Active
  IF DB1.RS_Record_Status = 'A';

  // PAR.CD Carcass Number = PAR.CD Carcass Number + CON.1
  PAR.CD_Carcass_Number = PAR.CD_Carcass_Number + 1;

  //?Producer/Farm Site
  CASE;

  // IF PAR.TH Source Type is External
  IF PAR.TH_Source_Type = 'E';

  // LCL.PL Location Code = PAR.PL Location Code
  LCL.PL_Location_Code = PAR.PL_Location_Code;

  //?Producer/Farm Site
  // IF PAR.TH Source Type is Internal
  IF PAR.TH_Source_Type = 'I';

  // LCL.Farm Site 6.0 USR = PAR.TH HPS Farm Site
  LCL.Farm_Site_6_0_USR = PAR.TH_HPS_Farm_Site;

  // LCL.PL Location Code = CVTVAR(LCL.Farm Site 6.0 USR)
  LCL.PL_Location_Code = CVTVAR(LCL.Farm_Site_6_0_USR);

  ENDIF;

  EXECUTE FUNCTION(Crt Carcass Detail    Rt) TYPE(RTVOBJ) FILE(PKB1CPP)           AB1147811;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.ET_Scale_Sequence_Number);
  PARAMETER(PAR.CD_Carcass_Number);
  PARAMETER(*ZERO);
  PARAMETER(DB1.ET_Record_Add_Del_Sts);
  PARAMETER(LCL.CD_Sort_Loss);
  PARAMETER(LCL.CD_STD_Yield);
  PARAMETER(DB1.ET_Hot_Wgt);
  PARAMETER(LCL.CD_Base_Carcass_CWT);
  PARAMETER(LCL.CD_Crc_Value_Per_CWT);
  PARAMETER(LCL.CD_Base_Carc_Value);
  PARAMETER(LCL.CD_Crc_Value_$_Per_Hd);
  PARAMETER(DB1.ET_Lean_Percent_NPPC);
  PARAMETER(LCL.CD_Lean_Premium_CWT);
  PARAMETER(LCL.CD_Lean_Premium_$_Per_Hd);
  PARAMETER(LCL.CD_Gross_Value_Per_CWT);
  PARAMETER(LCL.CD_Gross_Value_$_Per_HD);
  PARAMETER(DB1.ET_Kill_Date);
  PARAMETER(DB1.RU_Time);
  PARAMETER(DB1.ET_Shift);
  PARAMETER(LCL.CD_Carcass_Activity_Sts);
  PARAMETER(DB1.ET_Backfat_Thickness_Inch);
  PARAMETER(DB1.ET_Loin_Eye_Depth_Inches);
  PARAMETER(DB1.ET_Light_Reflectance);
  PARAMETER(DB1.ET_Trim_Area);
  PARAMETER(DB1.ET_Carcass_Sex);
  PARAMETER(LCL.CD_FFLI);
  PARAMETER(DB1.ET_Record_Created_W_Avg);
  PARAMETER(DB1.ET_Record_Created_Status);
  PARAMETER(DB1.ET_Lot);
  PARAMETER(DB1.ET_User_Error_Override);
  PARAMETER(DB1.ET_Backfat_Thickness_MM);
  PARAMETER(DB1.ET_Loineye_Depth_MM);
  PARAMETER(DB1.ET_Light_Reflectance_MM);
  PARAMETER(DB1.ET_Lean_Percent_FOM);
  PARAMETER(PAR.TH_Source_Type);
  PARAMETER(PAR.TH_Payment_Type);
  PARAMETER(DB1.ET_Adjust_Add_Type);
  PARAMETER(LCL.PL_Location_Code);
  PARAMETER(0);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.TH_Source_Code);
  PARAMETER(LCL.Loin_Eye_Wgt_USR);
  PARAMETER(LCL.Backfat_Wgt_USR);
  {
   //?USER: Processing if Data record not found

   //?9/20/02  RMC  -- Calc 2 dec. backfat and loin eye
   //?  and accum weighted for TH Avg Backf & Loin eye calc
   // Call program CLC MM to Inch -2 dec XF.
   CALL PROGRAM(CLC MM to Inch -2 dec XF) ('PKMMINC2');
   PARAMETER(LCL.CD_Backfat_Inch_2_dec);
   PARAMETER(LCL.CD_Loin_Eye_Inch_2_dec);
   PARAMETER(PAR.CD_Backfat_Thickness_MM);
   PARAMETER(PAR.CD_Loin_Eye_Depth_MM);

   // Wgt USR =       * Accum: Backfat * wgt
   PAR.Backfat_Wgt_USR = ( LCL.CD_Backfat_Inch_2_dec * PAR.CD_Carcass_Hot_Weight )
   + PAR.Backfat_Wgt_USR;

   // Wgt USR =       * Accum: Loin eye * wgt
   PAR.Loin_Eye_Wgt_USR = ( LCL.CD_Loin_Eye_Inch_2_dec * PAR.CD_Carcass_Hot_Weight )
   + PAR.Loin_Eye_Wgt_USR;

   EXECUTE FUNCTION(Crt Carcass Detail    CR) TYPE(CRTOBJ) FILE(PKB1CPP)           AB1104737;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.CD_Scale_Sequence_Number);
   PARAMETER(PAR.CD_Carcass_Number);
   PARAMETER(PAR.CD_Carcass_Number_Insert);
   PARAMETER(PAR.CD_Record_Add_Del_Sts);
   PARAMETER(PAR.CD_Sort_Loss);
   PARAMETER(PAR.CD_STD_Yield);
   PARAMETER(PAR.CD_Carcass_Hot_Weight);
   PARAMETER(PAR.CD_Base_Carcass_CWT);
   PARAMETER(PAR.CD_Crc_Value_Per_CWT);
   PARAMETER(PAR.CD_Base_Carc_Value);
   PARAMETER(PAR.CD_Crc_Value_$_Per_Hd);
   PARAMETER(PAR.CD_Lean_Percent);
   PARAMETER(PAR.CD_Lean_Premium_CWT);
   PARAMETER(PAR.CD_Lean_Premium_$_Per_Hd);
   PARAMETER(PAR.CD_Gross_Value_Per_CWT);
   PARAMETER(PAR.CD_Gross_Value_$_Per_HD);
   PARAMETER(PAR.CD_Kill_Date);
   PARAMETER(PAR.CD_Kill_Time);
   PARAMETER(PAR.CD_Shift);
   PARAMETER(PAR.CD_Carcass_Activity_Sts);
   PARAMETER(PAR.CD_Backfat_Thickness_Inch);
   PARAMETER(PAR.CD_Loin_Eye_Depth_Inch);
   PARAMETER(PAR.CD_Light_Reflectance);
   PARAMETER(PAR.CD_Trim_Area);
   PARAMETER(PAR.CD_Carcass_Sex);
   PARAMETER(PAR.CD_FFLI);
   PARAMETER(PAR.CD_Record_Created_W_Avg);
   PARAMETER(PAR.CD_Record_Created_Status);
   PARAMETER(PAR.CD_LOT);
   PARAMETER(PAR.CD_User_Error_Override);
   PARAMETER(PAR.CD_Backfat_Thickness_MM);
   PARAMETER(PAR.CD_Loin_Eye_Depth_MM);
   PARAMETER(PAR.CD_Light_Reflectance_MM);
   PARAMETER(PAR.CD_Lean_Percent_MM);
   PARAMETER(PAR.CD_Source_Type);
   PARAMETER(PAR.CD_Payment_Type);
   PARAMETER(WRK.CD_CA_Sort_Loss);
   PARAMETER(WRK.CD_CA_Std_Yield);
   PARAMETER(WRK.CD_CA_Base_Carcass_CWT);
   PARAMETER(WRK.CD_CA_Crc_Value_Per_CWT);
   PARAMETER(WRK.CD_CA_Base_Carc_Value);
   PARAMETER(WRK.CD_CA_Crc_Value_$_Per_Hd);
   PARAMETER(WRK.CD_CA_Lean_Premium_CWT);
   PARAMETER(WRK.CD_CA_Lean_Premium_$_P_Hd);
   PARAMETER(WRK.CD_CA_Gross_Value_Per_CWT);
   PARAMETER(WRK.CD_CA_Gross_Value_$_P_Hd);
   PARAMETER(PAR.CD_Adjust_Add_Type);
   PARAMETER(PAR.CD_Producer_Loc_Farm);
   PARAMETER(LCL.CD_Loin_Eye_Inch_2_dec);
   PARAMETER(LCL.CD_Backfat_Inch_2_dec);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(PAR.CD_Broken_Back_Sts);
   PARAMETER(WRK.CD_Adjust_Add_Source);
   PARAMETER(WRK.CD_Unused_Sts_3);
   PARAMETER(WRK.CD_Unused_Sts_4);
   PARAMETER(WRK.CD_Unused_Sts_5);
   PARAMETER(PAR.PD_Producer_Code);
   PARAMETER(PAR.SR_Source_Code);
   PARAMETER(WRK.RS_User_Changed);
   PARAMETER(WRK.RS_Date_Changed);
   PARAMETER(WRK.RS_Time_Changed);
   PARAMETER(WRK.RS_Record_Status);
   PARAMETER(WRK.RS_Job);
   PARAMETER(WRK.RS_Program);
   PARAMETER(WRK.RS_User_Added);
   PARAMETER(WRK.RS_Date_Added);
   PARAMETER(WRK.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // Call program Rtv System Date & Tim UP.
     CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
     PARAMETER(PAR.RS_Date_Added);
     PARAMETER(PAR.RS_Time_Added);

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

   //?PK0071 Fat-O-Meter
   CASE;

   // IF PAR.CD Trim Area is *Blank
   IF PAR.CD_Trim_Area = *BLANK;

   //?PK0071 Fat-O-Meter
   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Loss Percent       RT) TYPE(RTVOBJ) FILE(PKEKCPP)          AB1215872;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.CD_Trim_Area);
   PARAMETER(PAR.TB_Trim_Location);
   PARAMETER(PAR.TB_Extent);
   PARAMETER(PAR.Loss_Percent);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    QUIT;

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

    QUIT;

   }

   // PAR.Loss Percent          USR = PAR.Loss Percent / CON.100 *
   PAR.Loss_Percent_USR = PAR.Loss_Percent / 100;

   // PAR.LTA Wgt = PAR.CD Carcass/Hot Weight * PAR.Loss Percent          USR *
   PAR.LTA_Wgt = PAR.CD_Carcass_Hot_Weight * PAR.Loss_Percent_USR;

   EXECUTE FUNCTION(Rtv Loss Trans Next   RT) TYPE(RTVOBJ) FILE(PKBSCPP)           AB1135836;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.LTN_Record_Number);
   {
    //?USER: Processing if Data record not found

    // PAR.LTN Record Number = CON.1
    PAR.LTN_Record_Number = 1;

    QUIT;

    //?USER: Process Data record

    CASE;

    // IF DB1.LTN Record Number is Entry Allowed
    IF DB1.LTN_Record_Number >= 000001;
    AND DB1.LTN_Record_Number <= 699999;

    // PAR.LTN Record Number = DB1.LTN Record Number + CON.1
    PAR.LTN_Record_Number = DB1.LTN_Record_Number + 1;

    QUIT;

    ENDIF;

   }

   EXECUTE FUNCTION(Crt Loss Transaction  CR) TYPE(CRTOBJ) FILE(PKBSCPP)           AB1102905;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.LTN_Record_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.CD_Shift);
   PARAMETER(PAR.LTA_Wgt);
   PARAMETER(PAR.TB_Extent);
   PARAMETER(PAR.TB_Trim_Location);
   PARAMETER('B');
   PARAMETER('P');
   PARAMETER(*BLANK);
   PARAMETER(PAR.CD_Source_Type);
   PARAMETER(03);
   PARAMETER(*ZERO);
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(WRK.RS_User_Changed);
   PARAMETER(WRK.RS_Date_Changed);
   PARAMETER(WRK.RS_Time_Changed);
   PARAMETER(WRK.RS_Record_Status);
   PARAMETER(WRK.RS_Job);
   PARAMETER(WRK.RS_Program);
   PARAMETER(WRK.RS_User_Added);
   PARAMETER(WRK.RS_Date_Added);
   PARAMETER(WRK.RS_Time_Added);
   PARAMETER(JOB.*Job_date);
   PARAMETER(JOB.*Job_time);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // Call program Rtv System Date & Tim UP.
     CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
     PARAMETER(PAR.RS_Date_Added);
     PARAMETER(PAR.RS_Time_Added);

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

   ENDIF;

  }

  ENDIF;

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Rtv Hog Class         RT) TYPE(RTVOBJ) FILE(PKA8REP)           AB1127629;
 PARAMETER(DB1.HC_Class_Code);
 PARAMETER(WRK.HC_Description);
 PARAMETER(WRK.HC_Defect_Required);
 PARAMETER(WRK.HC_Price_Required);
 PARAMETER(WRK.HC_Resolution);
 PARAMETER(WRK.HC_Qualification);
 PARAMETER(WRK.HC_Class_Type);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // LCL.CD Carcass Number = CON.*ZERO
 LCL.CD_Carcass_Number = *ZERO;

 // PAR.Live wgt total 11.1   USR = CON.*ZERO
 PAR.Live_wgt_total_11_1_USR = *ZERO;

 //?Read the Evaluation trans and create Carcass Detail Records
 EXECUTE FUNCTION(PayEdt Create Crc FIX RT) TYPE(RTVOBJ) FILE(PKBVCPP)           AB1239099;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(LCL.CD_Carcass_Number);
 PARAMETER(PAR.Live_wgt_total_11_1_USR);
 PARAMETER(DB1.TH_Recalc_Live_Wgt);
 PARAMETER(DB1.TH_Source_Type);
 PARAMETER(DB1.TH_Payment_Type);
 PARAMETER(DB1.TH_Source_Code);
 PARAMETER(DB1.TH_Hog_Class_Type);
 PARAMETER(DB1.TH_HPS_Farm_Site);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.RS Record Status is Active
  IF DB1.RS_Record_Status = 'A';

  // PAR.CD Carcass Number = PAR.CD Carcass Number + CON.1
  PAR.CD_Carcass_Number = PAR.CD_Carcass_Number + 1;

  //?Producer/Farm Site
  CASE;

  // IF PAR.TH Source Type is External
  IF PAR.TH_Source_Type = 'E';

  // LCL.PL Location Code = PAR.PL Location Code
  LCL.PL_Location_Code = PAR.PL_Location_Code;

  //?Producer/Farm Site
  // IF PAR.TH Source Type is Internal
  IF PAR.TH_Source_Type = 'I';

  // LCL.Farm Site 6.0 USR = PAR.TH HPS Farm Site
  LCL.Farm_Site_6_0_USR = PAR.TH_HPS_Farm_Site;

  // LCL.PL Location Code = CVTVAR(LCL.Farm Site 6.0 USR)
  LCL.PL_Location_Code = CVTVAR(LCL.Farm_Site_6_0_USR);

  ENDIF;

  EXECUTE FUNCTION(Crt Carcass Detail    Rt) TYPE(RTVOBJ) FILE(PKB1CPP)           AB1147811;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.ET_Scale_Sequence_Number);
  PARAMETER(PAR.CD_Carcass_Number);
  PARAMETER(*ZERO);
  PARAMETER(DB1.ET_Record_Add_Del_Sts);
  PARAMETER(LCL.CD_Sort_Loss);
  PARAMETER(LCL.CD_STD_Yield);
  PARAMETER(DB1.ET_Hot_Wgt);
  PARAMETER(LCL.CD_Base_Carcass_CWT);
  PARAMETER(LCL.CD_Crc_Value_Per_CWT);
  PARAMETER(LCL.CD_Base_Carc_Value);
  PARAMETER(LCL.CD_Crc_Value_$_Per_Hd);
  PARAMETER(DB1.ET_Lean_Percent_NPPC);
  PARAMETER(LCL.CD_Lean_Premium_CWT);
  PARAMETER(LCL.CD_Lean_Premium_$_Per_Hd);
  PARAMETER(LCL.CD_Gross_Value_Per_CWT);
  PARAMETER(LCL.CD_Gross_Value_$_Per_HD);
  PARAMETER(DB1.ET_Kill_Date);
  PARAMETER(DB1.RU_Time);
  PARAMETER(DB1.ET_Shift);
  PARAMETER(LCL.CD_Carcass_Activity_Sts);
  PARAMETER(DB1.ET_Backfat_Thickness_Inch);
  PARAMETER(DB1.ET_Loin_Eye_Depth_Inches);
  PARAMETER(DB1.ET_Light_Reflectance);
  PARAMETER(DB1.ET_Trim_Area);
  PARAMETER(DB1.ET_Carcass_Sex);
  PARAMETER(LCL.CD_FFLI);
  PARAMETER(DB1.ET_Record_Created_W_Avg);
  PARAMETER(DB1.ET_Record_Created_Status);
  PARAMETER(DB1.ET_Lot);
  PARAMETER(DB1.ET_User_Error_Override);
  PARAMETER(DB1.ET_Backfat_Thickness_MM);
  PARAMETER(DB1.ET_Loineye_Depth_MM);
  PARAMETER(DB1.ET_Light_Reflectance_MM);
  PARAMETER(DB1.ET_Lean_Percent_FOM);
  PARAMETER(PAR.TH_Source_Type);
  PARAMETER(PAR.TH_Payment_Type);
  PARAMETER(DB1.ET_Adjust_Add_Type);
  PARAMETER(LCL.PL_Location_Code);
  PARAMETER(0);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.TH_Source_Code);
  PARAMETER(LCL.Loin_Eye_Wgt_USR);
  PARAMETER(LCL.Backfat_Wgt_USR);
  {
   //?USER: Processing if Data record not found

   //?9/20/02  RMC  -- Calc 2 dec. backfat and loin eye
   //?  and accum weighted for TH Avg Backf & Loin eye calc
   // Call program CLC MM to Inch -2 dec XF.
   CALL PROGRAM(CLC MM to Inch -2 dec XF) ('PKMMINC2');
   PARAMETER(LCL.CD_Backfat_Inch_2_dec);
   PARAMETER(LCL.CD_Loin_Eye_Inch_2_dec);
   PARAMETER(PAR.CD_Backfat_Thickness_MM);
   PARAMETER(PAR.CD_Loin_Eye_Depth_MM);

   // Wgt USR =       * Accum: Backfat * wgt
   PAR.Backfat_Wgt_USR = ( LCL.CD_Backfat_Inch_2_dec * PAR.CD_Carcass_Hot_Weight )
   + PAR.Backfat_Wgt_USR;

   // Wgt USR =       * Accum: Loin eye * wgt
   PAR.Loin_Eye_Wgt_USR = ( LCL.CD_Loin_Eye_Inch_2_dec * PAR.CD_Carcass_Hot_Weight )
   + PAR.Loin_Eye_Wgt_USR;

   EXECUTE FUNCTION(Crt Carcass Detail    CR) TYPE(CRTOBJ) FILE(PKB1CPP)           AB1104737;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.CD_Scale_Sequence_Number);
   PARAMETER(PAR.CD_Carcass_Number);
   PARAMETER(PAR.CD_Carcass_Number_Insert);
   PARAMETER(PAR.CD_Record_Add_Del_Sts);
   PARAMETER(PAR.CD_Sort_Loss);
   PARAMETER(PAR.CD_STD_Yield);
   PARAMETER(PAR.CD_Carcass_Hot_Weight);
   PARAMETER(PAR.CD_Base_Carcass_CWT);
   PARAMETER(PAR.CD_Crc_Value_Per_CWT);
   PARAMETER(PAR.CD_Base_Carc_Value);
   PARAMETER(PAR.CD_Crc_Value_$_Per_Hd);
   PARAMETER(PAR.CD_Lean_Percent);
   PARAMETER(PAR.CD_Lean_Premium_CWT);
   PARAMETER(PAR.CD_Lean_Premium_$_Per_Hd);
   PARAMETER(PAR.CD_Gross_Value_Per_CWT);
   PARAMETER(PAR.CD_Gross_Value_$_Per_HD);
   PARAMETER(PAR.CD_Kill_Date);
   PARAMETER(PAR.CD_Kill_Time);
   PARAMETER(PAR.CD_Shift);
   PARAMETER(PAR.CD_Carcass_Activity_Sts);
   PARAMETER(PAR.CD_Backfat_Thickness_Inch);
   PARAMETER(PAR.CD_Loin_Eye_Depth_Inch);
   PARAMETER(PAR.CD_Light_Reflectance);
   PARAMETER(PAR.CD_Trim_Area);
   PARAMETER(PAR.CD_Carcass_Sex);
   PARAMETER(PAR.CD_FFLI);
   PARAMETER(PAR.CD_Record_Created_W_Avg);
   PARAMETER(PAR.CD_Record_Created_Status);
   PARAMETER(PAR.CD_LOT);
   PARAMETER(PAR.CD_User_Error_Override);
   PARAMETER(PAR.CD_Backfat_Thickness_MM);
   PARAMETER(PAR.CD_Loin_Eye_Depth_MM);
   PARAMETER(PAR.CD_Light_Reflectance_MM);
   PARAMETER(PAR.CD_Lean_Percent_MM);
   PARAMETER(PAR.CD_Source_Type);
   PARAMETER(PAR.CD_Payment_Type);
   PARAMETER(WRK.CD_CA_Sort_Loss);
   PARAMETER(WRK.CD_CA_Std_Yield);
   PARAMETER(WRK.CD_CA_Base_Carcass_CWT);
   PARAMETER(WRK.CD_CA_Crc_Value_Per_CWT);
   PARAMETER(WRK.CD_CA_Base_Carc_Value);
   PARAMETER(WRK.CD_CA_Crc_Value_$_Per_Hd);
   PARAMETER(WRK.CD_CA_Lean_Premium_CWT);
   PARAMETER(WRK.CD_CA_Lean_Premium_$_P_Hd);
   PARAMETER(WRK.CD_CA_Gross_Value_Per_CWT);
   PARAMETER(WRK.CD_CA_Gross_Value_$_P_Hd);
   PARAMETER(PAR.CD_Adjust_Add_Type);
   PARAMETER(PAR.CD_Producer_Loc_Farm);
   PARAMETER(LCL.CD_Loin_Eye_Inch_2_dec);
   PARAMETER(LCL.CD_Backfat_Inch_2_dec);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(PAR.CD_Broken_Back_Sts);
   PARAMETER(WRK.CD_Adjust_Add_Source);
   PARAMETER(WRK.CD_Unused_Sts_3);
   PARAMETER(WRK.CD_Unused_Sts_4);
   PARAMETER(WRK.CD_Unused_Sts_5);
   PARAMETER(PAR.PD_Producer_Code);
   PARAMETER(PAR.SR_Source_Code);
   PARAMETER(WRK.RS_User_Changed);
   PARAMETER(WRK.RS_Date_Changed);
   PARAMETER(WRK.RS_Time_Changed);
   PARAMETER(WRK.RS_Record_Status);
   PARAMETER(WRK.RS_Job);
   PARAMETER(WRK.RS_Program);
   PARAMETER(WRK.RS_User_Added);
   PARAMETER(WRK.RS_Date_Added);
   PARAMETER(WRK.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // Call program Rtv System Date & Tim UP.
     CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
     PARAMETER(PAR.RS_Date_Added);
     PARAMETER(PAR.RS_Time_Added);

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

   //?PK0071 Fat-O-Meter
   CASE;

   // IF PAR.CD Trim Area is *Blank
   IF PAR.CD_Trim_Area = *BLANK;

   //?PK0071 Fat-O-Meter
   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Loss Percent       RT) TYPE(RTVOBJ) FILE(PKEKCPP)          AB1215872;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.CD_Trim_Area);
   PARAMETER(PAR.TB_Trim_Location);
   PARAMETER(PAR.TB_Extent);
   PARAMETER(PAR.Loss_Percent);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    QUIT;

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

    QUIT;

   }

   // PAR.Loss Percent          USR = PAR.Loss Percent / CON.100 *
   PAR.Loss_Percent_USR = PAR.Loss_Percent / 100;

   // PAR.LTA Wgt = PAR.CD Carcass/Hot Weight * PAR.Loss Percent          USR *
   PAR.LTA_Wgt = PAR.CD_Carcass_Hot_Weight * PAR.Loss_Percent_USR;

   EXECUTE FUNCTION(Rtv Loss Trans Next   RT) TYPE(RTVOBJ) FILE(PKBSCPP)           AB1135836;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.LTN_Record_Number);
   {
    //?USER: Processing if Data record not found

    // PAR.LTN Record Number = CON.1
    PAR.LTN_Record_Number = 1;

    QUIT;

    //?USER: Process Data record

    CASE;

    // IF DB1.LTN Record Number is Entry Allowed
    IF DB1.LTN_Record_Number >= 000001;
    AND DB1.LTN_Record_Number <= 699999;

    // PAR.LTN Record Number = DB1.LTN Record Number + CON.1
    PAR.LTN_Record_Number = DB1.LTN_Record_Number + 1;

    QUIT;

    ENDIF;

   }

   EXECUTE FUNCTION(Crt Loss Transaction  CR) TYPE(CRTOBJ) FILE(PKBSCPP)           AB1102905;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.LTN_Record_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.CD_Shift);
   PARAMETER(PAR.LTA_Wgt);
   PARAMETER(PAR.TB_Extent);
   PARAMETER(PAR.TB_Trim_Location);
   PARAMETER('B');
   PARAMETER('P');
   PARAMETER(*BLANK);
   PARAMETER(PAR.CD_Source_Type);
   PARAMETER(03);
   PARAMETER(*ZERO);
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(WRK.RS_User_Changed);
   PARAMETER(WRK.RS_Date_Changed);
   PARAMETER(WRK.RS_Time_Changed);
   PARAMETER(WRK.RS_Record_Status);
   PARAMETER(WRK.RS_Job);
   PARAMETER(WRK.RS_Program);
   PARAMETER(WRK.RS_User_Added);
   PARAMETER(WRK.RS_Date_Added);
   PARAMETER(WRK.RS_Time_Added);
   PARAMETER(JOB.*Job_date);
   PARAMETER(JOB.*Job_time);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // Call program Rtv System Date & Tim UP.
     CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
     PARAMETER(PAR.RS_Date_Added);
     PARAMETER(PAR.RS_Time_Added);

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

   ENDIF;

  }

  ENDIF;

 }

 ENDIF;

}


