     H/TITLE Clc Freight Amt       XF  Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     W* Warning: This program does not set on the LR indicator
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Execute external function
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISDREDD
     H* Date          : 12/01/20  Time  : 16:00:37
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Buy Order Load
      * I :  BOH Company Number
     I                                    P   1   20P1HMNB
      * I :  BOH Buy Order Number
     I                                    P   3   60P1BNNB
      * I :  BOL Load Number
     I                                    P   7   90P1BONB
      * I :  BOL Freight UOM
     I                                       10  11 P1CMST
      * I :  BOL Freight Unit Amt
     I                                    P  12  152P1AGPR
      * B :  BOL Freight Amt
     I                                    P  16  192P1ATVA
      * I :  BOL Freight Allocation
     I                                       20  20 P1I1ST
      * I :  BOL Head Received
     I                                    P  21  240P1DHNB
      * I :  BOL Live Wgt Received
     I                                    P  25  281P1DINB
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1HMNB    PARM           WP0001  30       BOH Company Num
     C           P1BNNB    PARM           WP0002  70       BOH Buy Order N
     C           P1BONB    PARM           WP0003  50       BOL Load Number
     C           P1CMST    PARM           WP0004  2        BOL Freight UOM
     C           P1AGPR    PARM           WP0005  72       BOL Freight Uni
     C           P1ATVA    PARM P1ATVA    WP0006  72       BOL Freight Amt
     C           P1I1ST    PARM           WP0007  1        BOL Freight All
     C           P1DHNB    PARM           WP0008  70       BOL Head Receiv
     C           P1DINB    PARM           WP0009  71       BOL Live Wgt Re
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Clc Freight Amt       XF
      * Calculate freight based on the unit of measure
     C                     Z-ADD*ZERO     P1ATVA           BOL Freight Amt
      * Miles = zeros
      * Clc UOM Extension     IF
      * Extension
      * CASE: PAR.Trans UOM USR is Flat
     C           P1CMST    IFEQ 'FL'                       *IF
      * * * * * *   FLAT    * * * * *
      * FLAT
      * CASE: PAR.Trans UOM USR is Flat
     C           P1CMST    IFEQ 'FL'                       *IF
     C           P1AGPR    MULT 1         P1ATVA           Trans Extended
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Head UOM
     C           P1CMST    IFEQ 'DH'                       *IF
     C           P1CMST    OREQ 'RH'
     C           P1CMST    OREQ 'YH'
     C           P1CMST    OREQ 'CH'
     C           P1CMST    OREQ 'KH'
     C           P1CMST    OREQ 'NH'
     C           P1CMST    OREQ 'DY'
     C           P1CMST    OREQ 'RX'
     C           P1CMST    OREQ 'HM'
     C           P1CMST    OREQ 'DE'
      * * * * * *    HEAD   * * * * *
      * HEAD
      * CASE: PAR.Trans UOM USR is Received Head
     C           P1CMST    IFEQ 'RH'                       *IF
     C           P1DHNB    MULT P1AGPR    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Received Hd less Yard Dd
     C           P1CMST    IFEQ 'RX'                       *IF
     C           P1DHNB    SUB  *ZERO     WUF6NB           Net Head Usr
     C           WUF6NB    MULT P1AGPR    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Killed Head
     C           P1CMST    IFEQ 'KH'                       *IF
     C           *ZERO     MULT P1AGPR    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Condemned Head
     C           P1CMST    IFEQ 'CH'                       *IF
     C           *ZERO     MULT P1AGPR    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Yard Deads Head
     C           P1CMST    IFEQ 'YH'                       *IF
     C           *ZERO     MULT P1AGPR    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is DOA Head
     C           P1CMST    IFEQ 'DH'                       *IF
     C           *ZERO     MULT P1AGPR    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Net Head
     C           P1CMST    IFEQ 'NH'                       *IF
     C                     Z-ADDP1DHNB    WUF6NB           Net Head Usr
     C                     SUB  *ZERO     WUF6NB           Net Head Usr
     C                     SUB  *ZERO     WUF6NB           Net Head Usr
     C           WUF6NB    MULT P1AGPR    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is DOA Head + Yard Dead Head
     C           P1CMST    IFEQ 'DY'                       *IF
     C           *ZERO     ADD  *ZERO     WUF6NB           Net Head Usr
     C           WUF6NB    MULT P1AGPR    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is DOA HD + Yard Dead + EUT
     C           P1CMST    IFEQ 'DE'                       *IF
     C           *ZERO     ADD  *ZERO     WUF6NB           Net Head Usr
     C                     ADD  *ZERO     WUF6NB           Net Head Usr
     C           WUF6NB    MULT P1AGPR    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Received Head /100 Miles
     C           P1CMST    IFEQ 'HM'                       *IF
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (x1 * x2 * (x3/x4))
      * x1    : PAR.PSM Miles to Company
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Head Killed
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x4    : CON.100
     C           *ZERO     MULT *ZERO     W0WA01           *Synon (15,2) w
     C           P1AGPR    DIV  100       W0WB02    H      *Synon (15,5) w
     C           W0WA01    MULT W0WB02    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    P1ATVA           Trans Extended
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Weight UOM
     C           P1CMST    IFEQ 'CW'                       *IF
     C           P1CMST    OREQ 'LW'
     C           P1CMST    OREQ 'NL'
     C           P1CMST    OREQ 'SW'
     C           P1CMST    OREQ 'LX'
     C           P1CMST    OREQ 'SX'
      * * * * * *    WEIGHT   * * * * *
      * WEIGHT
      * CASE: PAR.Trans UOM USR is Live Hundred Weight
     C           P1CMST    IFEQ 'LW'                       *IF
      * Live hundred wgt
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.TH Live Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           P1DINB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P1AGPR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is LW less Yard Dead Wgt
     C           P1CMST    IFEQ 'LX'                       *IF
      *  Calc wgt of yard dead based on Th avg live wgt
     C           *ZERO     MULT *ZERO     WUCCNB           Yard dead weigh
      *   Subtract Yard Dead wgt from Live Wgt
     C           P1DINB    SUB  WUCCNB    WUOONB           Live Weight
      * Live hundred wgt less Yd
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Live Weight           USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUOONB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P1AGPR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Carcass Hundred Weight
     C           P1CMST    IFEQ 'CW'                       *IF
      * Carcass Hundred Wgt
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           *ZERO     DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P1AGPR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Net Live Weight
     C           P1CMST    IFEQ 'NL'                       *IF
     C                     Z-ADDP1DHNB    WUF6NB           Net Head Usr
     C                     SUB  *ZERO     WUF6NB           Net Head Usr
     C                     SUB  *ZERO     WUF6NB           Net Head Usr
      * * Insert avg live weight
     C           WUF6NB    MULT *ZERO     WUVBNB           Net Live Weight
      * Net Live Weight
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Net Live Weight Usr
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUVBNB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P1AGPR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Shipped Weight - Doa's
     C           P1CMST    IFEQ 'SW'                       *IF
      *   Calc Avg shipped wgt, then calc wgt of DOA'S
      * This rule was defined on 01/14/97
      * The Calculations for Avg Shipped Weights are
      * Head Received should be the live hogs that walk across the scale
      * Doa's should be the hogs that died either after we collected
      *       or before we weighed them
      * Avg Shipped Weight : Shipped Weight /(Head Received + Doa's)
     C           P1DHNB    ADD  *ZERO     WUEXNB           Hd Cnt Org Ship
      * CASE: WRK.Hd Cnt Org Ship Usr is *Zeros
     C           WUEXNB    IFEQ 0                          *IF
     C                     Z-ADD*ZERO     WUY9NB           Avg Weight USR
     C                     ELSE
      * CASE: *OTHERWISE
     C           *ZERO     DIV  WUEXNB    WUY9NB           Avg Weight USR
     C                     END                             *FI
     C           WUY9NB    MULT *ZERO     WUEVNB           Doa's Avg Weigh
      *   Subtract doa's from Shipped Wgt
     C           *ZERO     SUB  WUEVNB    WUZ4NB           Ship Wgt Tot Us
      * Shipped Weight Total Ext
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Ship Wgt Tot Usr
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUZ4NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P1AGPR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is SW - Doa's WT - Yrd Dd WT
     C           P1CMST    IFEQ 'SX'                       *IF
      *   Calc Avg shipped wgt, then calc wgt of DOA'S and Yard Deads
      * This rule was defined on 01/14/97
      * The Calculations for Avg Shipped Weights are
      * Head Received should be the live hogs that walk across the scale
      * Doa's should be the hogs that died either after we collected
      *       or before we weighed them
      * Avg Shipped Weight : Shipped Weight /(Head Received + Doa's)
     C           P1DHNB    ADD  *ZERO     WUEXNB           Hd Cnt Org Ship
      * CASE: WRK.Hd Cnt Org Ship Usr is *Zeros
     C           WUEXNB    IFEQ 0                          *IF
     C                     Z-ADD*ZERO     WUY9NB           Avg Weight USR
     C                     ELSE
      * CASE: *OTHERWISE
     C           *ZERO     DIV  WUEXNB    WUY9NB           Avg Weight USR
     C                     END                             *FI
     C           WUY9NB    MULT *ZERO     WUCCNB           Yard dead weigh
     C           WUY9NB    MULT *ZERO     WUEVNB           Doa's Avg Weigh
      *   Subtract Doa's and Subtract Yard Dead wgt from Shipped Wgt
     C           *ZERO     SUB  WUEVNB    WUZ4NB           Ship Wgt Tot Us
     C                     SUB  WUCCNB    WUZ4NB           Ship Wgt Tot Us
      * Shipped wgt less Yd
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Ship Wgt Tot Usr
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUZ4NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT P1AGPR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    P1ATVA           Trans Extended
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Value UOM
     C           P1CMST    IFEQ 'GV'                       *IF
     C           P1CMST    OREQ 'BD'
      * * * * * *    VALUE    * * * * *
      * VALUE
      * CASE: PAR.Trans UOM USR is Gross Hundred Value
     C           P1CMST    IFEQ 'GV'                       *IF
      * Gross Hundred Value
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.TH Payment Gross
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           *ZERO     DIV  100       W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT P1AGPR    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Carcass Hundred Weight
     C           P1CMST    IFEQ 'CW'                       *IF
      * Carcass Hundred Value
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           *ZERO     DIV  100       W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT P1AGPR    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Base Market Dollars
     C           P1CMST    IFEQ 'BD'                       *IF
      * Clc Base Mkt Dollars  XF - STR Unit of Measure Calc  * 
     C                     CALL 'PKBSE01'              90  Clc Base Mkt Do
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1HMNB    WQ0001  30       BOH Company Num
     C                     PARM *ZERO     WQ0002  70       TH Purchase Dat
     C                     PARM P1DINB    WQ0003  71       TH Live Wgt
     C                     PARM *BLANK    WQ0004  5        DED D/A Code
     C           WUCSPR    PARM *ZERO     WQ0005  92       Base Mkt Prc Am
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKBSE01' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: WRK.Base Mkt Prc Amt Tot USR GE WRK.Zero USR
     C           WUCSPR    IFGE WUE9NB                     *IF
      * Base Market Dollars
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Base Mkt Prc Amt Tot USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUCSPR    DIV  100       W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT P1AGPR    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    P1ATVA           Trans Extended
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     P1ATVA           Trans Extended
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Percent UOM
     C           P1CMST    IFEQ *BLANK                     *IF
      * * * * * *    PERCENT   * * * * *
      * PERCENT
      * CASE: PAR.Trans UOM USR is Percent of Gross Value
     C           P1CMST    IFEQ *BLANK                     *IF
      * Percent of Gross Value
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.Trans Unit Amt Usr
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.TH Payment Gross
     C           P1AGPR    DIV  100       W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT *ZERO     W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    P1ATVA           Trans Extended
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Initialise indicators for re-entry
     C                     MOVE '0'       *IN
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Net Head Usr
     C                     Z-ADD*ZERO     WUF6NB  50
      * Define work field Yard dead weight      USR
     C                     Z-ADD*ZERO     WUCCNB  71
      * Define work field Live Weight           USR
     C                     Z-ADD*ZERO     WUOONB  71
      * Define work field Net Live Weight Usr
     C                     Z-ADD*ZERO     WUVBNB  71
      * Define work field Hd Cnt Org Ship Usr
     C                     Z-ADD*ZERO     WUEXNB  50
      * Define work field Avg Weight USR
     C                     Z-ADD*ZERO     WUY9NB  51
      * Define work field Doa's Avg Weight Usr
     C                     Z-ADD*ZERO     WUEVNB  71
      * Define work field Ship Wgt Tot Usr
     C                     Z-ADD*ZERO     WUZ4NB  71
      * Define work field Base Mkt Prc Amt Tot USR
     C                     Z-ADD*ZERO     WUCSPR  92
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WB02 155       *Synon (15,5) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     MOVEL'N'       W0PMT   1
      *================================================================
     CSR         ZZEXIT    ENDSR
