      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP333-Update Grow Finish Data with GF-to-GF Transfer Data
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     01/02/03
      *
      * FUNCTION:    This function process the GF-to-GF transfers attempting to
      *              find the groups that fed the origin GF group on each transfer.
      *
      *              The first attempt will try to find a Nursery group that fed the
      *              origin GF group on the transfer. (This addresses the typical scenario
      *              where pigs go from a BGF group to a Nursery group to a GF group.)
      *
      *              The second attmept will try to find a BGF group that fed the
      *              origin GF group on the transfer. (This addresses the situation where
      *              the transfer was from a BGF to GF group and then on to another GF group.)
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
      *
     Fhsl330b   uf   e           k disk
      *  Workfile: Grow finish-to-grow finish transfers
      *
      *
     Fhsl329a   uf a e           k disk    rename(w5rec:w5reca) prefix(p1)
      *  Workfile: Grow finish groups--Nursery sources
      *
      *
     Fhsp329    if   e           k disk
      *  Workfile: Grow finish groups--Nursery sources
      *
      *
     Fhsp351    if   e           k disk
      *  Workfile: BGF-to-GF Transfers
      *
      *
     Fhsp354    uf a e           k disk
      *  Workfile: BGF-GF-GF Transfers--Head
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D hadsomefl       s              1
      *
      *
      * Workfields
      *
     D wktothd         s                   like(w5rchd)
     D wktotcn         s              3  0
     D wkremhd         s                   like(w5rchd)
     D wkhd            s                   like(w5rchd)
     D wkcn            s              3  0
     D wkpr            s             15  8
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAIN
      ***************************************************************************************
      *
      * Process all GF-to-GF transfer records that are not flagged as Catch-22 records.
      *
     C     *loval        setll     hsl330b
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      hsl330b                                90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   if        w622fl = yes                                 If catch 22
     C                   move      no            w6srcfl
     C                   else
      *
      * Try to find a Nursery group that fed the Origin Grow Finish Group
      *
     C                   exsr      $nursery
      *
      * If you didn't find a Nursery group, then try to find a BGF group
      * that directly fed the origin GF group
      *
     C                   if        hadsomefl = no
     C                   exsr      $bgf
     C                   endif
      *
     C                   select
     C                   when      hadsomefl = yes
     C                   move      yes           w6srcfl
      *
     C                   when      hadsomefl = no
     C                   move      no            w6srcfl
     C                   endsl
     C                   endif                                                  If catch 22
      *
     C                   update    w6rec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      * Clean-up routine
      *
     C                   exsr      $cleanup
      *
      * EOF Processing
     C                   seton                                        lr
      /EJECT
      *----------------------------------------------------------------------
      * Try to find the Nursery group that fed the Origin Grow Finish Group
      *----------------------------------------------------------------------
      *
     C     $nursery      begsr
      *
     C                   move      no            hadsomefl
      *
      * Retrieve total head and total records for the origin group
      *
     C                   exsr      $nurorig
      *
      * If you had records for the origin group, then process your
      * destination group.
      *
     C                   if        wktotcn <> 0
     C                   exsr      $nurdest
     C                   move      yes           hadsomefl
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------
      * Retrieve total head and record counts for the origin group out of nursery groups
      *----------------------------------------------------------------------------------
      *
      * You will need these totals to calculate percents if you have to
      * distribute the head to multiple farm/service year/week records.
      *
     C     $nurorig      begsr
      *
     C                   z-add     0             wktothd
     C                   z-add     0             wktotcn
      *
      * Find all the records where the origin GF group on the GF-to-GF transfer
      * was the destination group on Nur-to-GF transfers.
      *
     C     w6orhgsn      setll     hsp329
      *
     C                   dou       *in91 = *on                                  Do totals
     C     w6orhgsn      reade     hsp329                                 91
     C                   if        *in91 = *off
     C                   add       w5rchd        wktothd
     C                   add       1             wktotcn
     C                   endif
     C                   enddo                                                  Do totals
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Process your destination group
      *----------------------------------------------------------------
      *
     C     $nurdest      begsr
      *
     C                   z-add     0             wkcn
     C                   z-add     w6rchd        wkremhd
      *
      * Read each record that exists for the origin grow finish group
      * 1) For each record, calculate the percent of total head that the
      *    record represents.
      * 2) Using this percent, calculate how many of the received head
      *    for your destination group should be associated with this nursery group.
      * 3) Then, write/update a record for your destination group.
      *
      *
     C     w6orhgsn      setll     hsp329
      *
     C                   dou       *in91 = *on                                  Do loop
     C     w6orhgsn      reade     hsp329                                 91
     C                   if        *in91 = *off
      *
     C                   add       1             wkcn
      *
      * Determine how many head should go with this record. If you are on
      * the last record (or only have 1 record), then use all the remaining
      * head; otherwise, go calculate the head to distribute to the record.
      *
     C                   select
     C                   when      wkcn = wktotcn
     C                   z-add     wkremhd       wkhd
     C                   other
     C                   exsr      $nurhead
     C                   endsl
      *
      * If you have distributed head, write/update the destination group
      * workfile record.
      *
     C                   if        wkhd <> 0
     C                   exsr      $nurupd329
     C                   endif
      *
     C                   endif
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------
      * Calculate the head to distribute to this record when it tracked back to a nursery
      *----------------------------------------------------------------------------------
      *
     C     $nurhead      begsr
      *
     C                   z-add     0             wkhd
      *
     C                   if        wktothd <> 0
     C     w5rchd        div       wktothd       wkpr
     C     w6rchd        mult      wkpr          wkhd
     C                   endif
      *
     C                   sub       wkhd          wkremhd
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------------
      * Update/write a record for your grow finish group when it tracked back to a Nursery
      *------------------------------------------------------------------------------------
      *
     C     $nurupd329    begsr
      *
      * If a record already exists, update it with the distributed head.
      *
     C     key01         chain     hsl329a                            92
     C                   if        *in92 = *off                                 If exists
     C                   add       wkhd          p1w5rchd
     C                   update    w5reca
     C                   else
      *
      * Write a new record
      *
     C                   z-add     wkhd          p1w5rchd
      *
     C                   z-add     w6dnfscd      p1w5dnfscd
     C                   z-add     w6dncell      p1w5dncell
     C                   z-add     w6dnhgsn      p1w5dnhgsn
     C                   move      w6dnhgcd      p1w5dnhgcd
     C                   move      w6dnppcd      p1w5dnppcd
      *
     C                   z-add     w5orcell      p1w5orcell
     C                   z-add     w5orfscd      p1w5orfscd
     C                   z-add     w5orhgsn      p1w5orhgsn
     C                   move      w5orhgcd      p1w5orhgcd
     C                   move      w5orppcd      p1w5orppcd
      *
     C                   write     w5reca
     C                   endif                                                  If exists
      *
     C                   endsr
      *eject
      *----------------------------------------------------------------------
      * Try to find BGF group(s) that fed the Origin Grow Finish Group
      *----------------------------------------------------------------------
      *
     C     $bgf          begsr
      *
      * Retrieve total head and total records for the origin GF group
      *
     C                   exsr      $bgforig
      *
      * If you had records for the origin group, then process your
      * destination group.
      *
     C                   if        wktotcn <> 0
     C                   exsr      $bgfdest
     C                   move      yes           hadsomefl
     C                   endif
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------
      * Retrieve total head and record counts for the origin group out of BGF groups
      *------------------------------------------------------------------------------
      *
      * You will need these totals to calculate percents if you have to
      * distribute the head to multiple farm/service year/week records.
      *
     C     $bgforig      begsr
      *
     C                   z-add     0             wktothd
     C                   z-add     0             wktotcn
      *
      * Find all the records where the origin GF group on the GF-to-GF transfer
      * was the destination group on BGF-to-GF transfers.
      *
     C     w6orhgsn      setll     hsp351
      *
     C                   dou       *in91 = *on                                  Do totals
     C     w6orhgsn      reade     hsp351                                 91
     C                   if        *in91 = *off
     C                   add       wcrchd        wktothd
     C                   add       1             wktotcn
     C                   endif
     C                   enddo                                                  Do totals
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Process your GF destination group using BGF data
      *----------------------------------------------------------------
      *
     C     $bgfdest      begsr
      *
     C                   z-add     0             wkcn
     C                   z-add     w6rchd        wkremhd
      *
      * Read each record that exists for the origin grow finish group
      * 1) For each record, calculate the percent of total head that the
      *    record represents.
      * 2) Using this percent, calculate how many of the received head
      *    for your destination group should be distributed.
      * 3) Then, write/update a record for your destination group.
      *
     C     w6orhgsn      setll     hsp351
      *
     C                   dou       *in91 = *on                                  Do loop
     C     w6orhgsn      reade     hsp351                                 91
     C                   if        *in91 = *off
      *
     C                   add       1             wkcn
      *
      * Determine how many head should go with this record. If you are on
      * the last record (or only have 1 record), then use all the remaining
      * head; otherwise, go calculate the head to distribute to the record.
      *
     C                   select
     C                   when      wkcn = wktotcn
     C                   z-add     wkremhd       wkhd
     C                   other
     C                   exsr      $bgfhead
     C                   endsl
      *
      * If you have distributed head, write/update the destination group
      * workfile record.
      *
     C                   if        wkhd <> 0
     C                   exsr      $bgfupd354
     C                   endif
      *
     C                   endif
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------
      * Calculate the head to distribute to this record when it tracked back to a BGF
      *----------------------------------------------------------------------------------
      *
     C     $bgfhead      begsr
      *
     C                   z-add     0             wkhd
      *
     C                   if        wktothd <> 0
     C     wcrchd        div       wktothd       wkpr
     C     w6rchd        mult      wkpr          wkhd
     C                   endif
      *
     C                   sub       wkhd          wkremhd
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------------
      * Update/write a record for your grow finish group when it tracked back to a Nursery
      *------------------------------------------------------------------------------------
      *
     C     $bgfupd354    begsr
      *
      * If a record already exists, update it with the distributed head.
      *
     C     key02         chain     hsp354                             92
     C                   if        *in92 = *off                                 If exists
     C                   add       wkhd          werchd
     C                   update    werec
     C                   else
      *
      * Write a new record
      *
     C                   z-add     wkhd          werchd
      *
     C                   z-add     w6dnhgsn      wednhgsn
     C                   move      w6dnhgcd      wednhgcd
     C                   move      w6dnppcd      wednppcd
     C                   z-add     w6dnfscd      wednfscd
     C                   z-add     w6dncell      wedncell
      *
     C                   z-add     wcorcell      weorcell
     C                   z-add     wcorfscd      weorfscd
     C                   z-add     wcsvyr        wesvyr
     C                   z-add     wcsvwk        wesvwk
      *
     C                   write     werec
     C                   endif                                                  If exists
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * You found no Nursery or Grow Finish source data for the group
      *----------------------------------------------------------------
      *
      * Write a record to the Grow Finish Groups-Nursery Sources for every
      * destination group that you could find nothing for.
      *
     C     $nothing      begsr
      *
     C                   z-add     0             p1w5rchd
      *
     C                   z-add     w6dnhgsn      p1w5dnhgsn
     C                   z-add     w6dnfscd      p1w5dnfscd
     C                   z-add     w6dncell      p1w5dncell
     C                   z-add     w6dnhgsn      p1w5dnhgsn
     C                   move      w6dnhgcd      p1w5dnhgcd
      *
     C                   z-add     0             p1w5orcell
     C                   z-add     0             p1w5orfscd
     C                   z-add     0             p1w5orhgsn
     C                   move      *blank        p1w5orhgcd
      *
     C                   write     w5reca
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Clean-up routine
      *----------------------------------------------------------------
      *
      * We are going to reread the GF-to-GF transfer file and
      * write a record to the Grow Finish Groups-Nursery Sources for every
      * destination group that does not already have a record.
      *
      *
     C     $cleanup      begsr
      *
     C     *loval        setll     hsl330b
      *
     C                   dou       *in91 = *on                                  Do clean loop
     C                   read(n)   hsl330b                                91
     C                   if        *in91 = *off and w6srcfl = no                If not EOF
      *
     C                   z-add     0             p1w5rchd
      *
     C                   z-add     w6dnhgsn      p1w5dnhgsn
     C                   z-add     w6dnfscd      p1w5dnfscd
     C                   z-add     w6dncell      p1w5dncell
     C                   z-add     w6dnhgsn      p1w5dnhgsn
     C                   move      w6dnhgcd      p1w5dnhgcd
      *
     C                   z-add     0             p1w5orcell
     C                   z-add     0             p1w5orfscd
     C                   z-add     0             p1w5orhgsn
     C                   move      *blank        p1w5orhgcd
      *
     C                   write     w5reca
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do clean loop
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
     C     key01         klist
     C                   kfld                    w5orhgsn
     C                   kfld                    w6dnhgsn
      *
     C     key02         klist
     C                   kfld                    w6orhgsn
     C                   kfld                    wcorfscd
     C                   kfld                    wcsvyr
     C                   kfld                    wcsvwk
      *
     C                   endsr
      /EJECT
