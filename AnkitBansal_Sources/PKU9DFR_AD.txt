// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKU9DFR
// ?Date: 14.08.2025 Time: 02:53:02
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?E4154 JJH 07/28/15 - Pen and Tattoo Scale Ticket Modifications
//?- This function is not updated and is not currently used in
//?  Production.
//?H16853 ISE 01/23/2021 - Increased the length from 5 to 7 and
//?                        corrected the alignment of Buy Order Number field
ENDDO;

// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


// PAR.TST Record Created Status = CND.PC Uploaded Record
PAR.TST_Record_Created_Status = 'P';

//?USER: Initialize subfile control

// Call program RTV Vldtn Vrbles       XF.
CALL PROGRAM(RTV Vldtn Vrbles       XF) ('PKIWXFR');
PARAMETER(WRK.TST_Val_Ms_Tme_Df_Txt_Us);
PARAMETER(WRK.TST_Val_Ms_Tme_Df_Val_Us);
PARAMETER(WRK.TST_Val_Ms_LTme_Lm_Txt_Us);
PARAMETER(WRK.TST_Val_Ms_LTme_Lm_Val_Us);
PARAMETER(WRK.TST_Val_Ms_#_Wt_Lm_Txt_Us);
PARAMETER(WRK.TST_Val_Ms_#_Wt_Lm_Val_Us);
PARAMETER(WRK.TST_Val_Ms_ALW_Min_Txt_Us);
PARAMETER(WRK.TST_VAl_Ms_ALW_MiN_Val_Us);
PARAMETER(WRK.TST_Val_Ms_ALW_Max_Txt_Us);
PARAMETER(WRK.TST_VAl_Ms_ALW_Max_Val_Us);
PARAMETER(CTL.BOH_Company_Number);

// CTL.TST Head = CON.*ZERO
CTL.TST_Head = *ZERO;

// CTL.TST Wgt = CON.*ZERO
CTL.TST_Wgt = *ZERO;

EXECUTE FUNCTION(Rtv SCL Tkt Totals    RT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1178311;
PARAMETER(CTL.BOH_Company_Number);
PARAMETER(CTL.BOH_Buy_Order_Number);
PARAMETER(CTL.BOL_Load_Number);
PARAMETER(CTL.TH_Tattoo_Number);
PARAMETER(CTL.TH_Kill_Date);
PARAMETER(CTL.TST_Head);
PARAMETER(CTL.TST_Wgt);
{
 //?USER: Initialize routine

 // PAR.Head Total USR = CON.*ZERO
 PAR.Head_Total_USR = *ZERO;

 // PAR.Weight Tot USR = CON.*ZERO
 PAR.Weight_Tot_USR = *ZERO;

 //?USER: Processing if Data record not found

 // PAR.Head Total USR = CON.*ZERO
 PAR.Head_Total_USR = *ZERO;

 // PAR.Weight Tot USR = CON.*ZERO
 PAR.Weight_Tot_USR = *ZERO;

 //?USER: Process Data record

 // PAR.Head Total USR = PAR.Head Total USR + DB1.TST Head
 PAR.Head_Total_USR = PAR.Head_Total_USR + DB1.TST_Head;

 // PAR.Weight Tot USR = PAR.Weight Tot USR + DB1.TST Wgt
 PAR.Weight_Tot_USR = PAR.Weight_Tot_USR + DB1.TST_Wgt;

}


CASE;

// IF CTL.TST Head is Not Zero
IF CTL.TST_Head <> *ZERO;

// CTL.TH Avg Live Wgt = CTL.TST Wgt / CTL.TST Head *Rounded
CTL.TH_Avg_Live_Wgt = CTL.TST_Wgt / CTL.TST_Head 'H';

ENDIF;

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// CTL.BOH Company Number = PAR.BOH Company Number
CTL.BOH_Company_Number = PAR.BOH_Company_Number;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

ENDIF;

EXECUTE FUNCTION(Rtv Producer Name     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1101542;
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PD_Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Pdctn Loc Name    RT) TYPE(RTVOBJ) FILE(PKAFREP)           AB1101543;
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PL_Location_Code);
PARAMETER(CTL.PL_Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Hog Class Desc    RT) TYPE(RTVOBJ) FILE(PKA8REP)           AB1127790;
PARAMETER(CTL.HC_Class_Code);
PARAMETER(CTL.HC_Description);
{
 //?USER: Processing if Data record not found

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.HC_Description = WRK.Blank_USR;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Hog Defect Desc   RT) TYPE(RTVOBJ) FILE(PKA7REP)           AB1127787;
PARAMETER(CTL.DF_Defect_Code);
PARAMETER(CTL.DF_Description);
{
 //?USER: Processing if Data record not found

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.DF_Description = WRK.Blank_USR;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Initialize subfile record from DBF record

//?Calculate average weight
CASE;

// IF RCD.TST Head is Not Zero
IF RCD.TST_Head <> *ZERO;

// RCD.TD Avg Live Wgt = RCD.TST Wgt / RCD.TST Head *
RCD.TD_Avg_Live_Wgt = RCD.TST_Wgt / RCD.TST_Head;

ENDIF;

// PAR.TST Record Created Status = DB1.TST Record Created Status
PAR.TST_Record_Created_Status = DB1.TST_Record_Created_Status;

//?Manual / Live Scale
CASE;

// IF RCD.TST Record Created Status is Manual Record
IF RCD.TST_Record_Created_Status = 'M';

// *MO.VE             1183529*Bu = ilt. in functions
RCD.@Desc_15 = 'Manual Entry';

//?Manual / Live Scale
// IF *OTHERWISE
IF *OTHERWISE;

// *MO.VE             1183529*Bu = ilt. in functions
RCD.@Desc_15 = 'Live Scale';

ENDIF;

//?Scale ticket printed or not
CASE;

// IF RCD.RS Record Status is Active
IF RCD.RS_Record_Status = 'A';

// *MO.VE             1183529*Bu = ilt. in functions
RCD.Description_30_USR = WRK.Blank_USR;

//?Scale ticket printed or not
// IF *OTHERWISE
IF *OTHERWISE;

// *MO.VE             1183529*Bu = ilt. in functions
RCD.Description_30_USR = 'Printed';

ENDIF;

//?USER: Process subfile control (Pre-confirm)

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?F5=Refresh
CASE;

// IF CTL.*CMD key is CF05
IF CTL.*CMD_key = '05';

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

ENDIF;

//?CALC: Subfile record function fields

//?Manual / Live Scale
CASE;

// IF RCD.TST Record Created Status is Manual Record
IF RCD.TST_Record_Created_Status = 'M';

// RCD.@Desc 15 = CON.Manual Entry
RCD.@Desc_15 = 'Manual Entry';

//?Manual / Live Scale
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.@Desc 15 = CON.Live Scale
RCD.@Desc_15 = 'Live Scale';

ENDIF;

//?Scale ticket printed or not
CASE;

// IF RCD.RS Record Status is Active
IF RCD.RS_Record_Status = 'A';

// RCD.Description 30 USR = WRK.Blank USR
RCD.Description_30_USR = WRK.Blank_USR;

//?Scale ticket printed or not
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Description 30 USR = CON.Printed
RCD.Description_30_USR = 'Printed';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?2=Revise
CASE;

// IF RCD.*SFLSEL is *Revise request
IF RCD.*SFLSEL = '2'/'2';

// Call program Zzzt Tatto Scl Tkt SUP E1.
CALL PROGRAM(Zzzt Tatto Scl Tkt SUP E1) ('PKVAE1R');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(RCD.TST_Sequence_Number);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(CTL.Name_USR);
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PL_Location_Code);
PARAMETER(CTL.PD_Name);
PARAMETER(CTL.PL_Name);
PARAMETER(CTL.HC_Class_Code);
PARAMETER(CTL.DF_Defect_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?4=Delete
CASE;

// IF RCD.*SFLSEL is *Delete request
IF RCD.*SFLSEL = '4'/'4';

//?Plant wants to delete either man or live scale
//?record but only if a scale ticket has not been printed
// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?USER: Final processing (Pre-confirm)

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

//?USER: Process subfile record (Post-confirm)

//?4=Delete
CASE;

// IF RCD.*SFLSEL is *Delete request
IF RCD.*SFLSEL = '4'/'4';

EXECUTE FUNCTION(Rtv/Dlt TTT Scale Rcd RT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1128297;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(RCD.TST_Sequence_Number);
{
 //?USER: Initialize routine

 //?E4154 JJH 07/28/15 Modify the 4=Delete logic so that the Pen file
 //?  is not updated when Un-Printed Tattoo Scale Tickets are deleted.
 //?USER: Process Data record

 EXECUTE FUNCTION(Delete Tattoo Scale Ticke) TYPE(DLTOBJ) FILE(PKB3CPP)          AB1113771;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TST_Sequence_Number);
}


// Call program Chg BOL/THDR Rec/Wgt  XF.
CALL PROGRAM(Chg BOL/THDR Rec/Wgt  XF) ('PKHFXFR');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);

EXECUTE FUNCTION(Upd Dtl Hd/Wgt SUP    RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1233072;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.Pen_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Scl Tkt Totals/Pen Rt) TYPE(RTVOBJ) FILE(PKB3CPP)          AB1178680;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.Pen_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(LCL.Head_Total_USR);
 PARAMETER(LCL.Weight_Tot_USR);
 {
  //?USER: Initialize routine

  // PAR.Head Total USR = CON.*ZERO
  PAR.Head_Total_USR = *ZERO;

  // PAR.Weight Tot USR = CON.*ZERO
  PAR.Weight_Tot_USR = *ZERO;

  //?USER: Processing if Data record not found

  // PAR.Head Total USR = CON.*ZERO
  PAR.Head_Total_USR = *ZERO;

  // PAR.Weight Tot USR = CON.*ZERO
  PAR.Weight_Tot_USR = *ZERO;

  //?USER: Process Data record

  // PAR.Head Total USR = PAR.Head Total USR + DB1.TST Head
  PAR.Head_Total_USR = PAR.Head_Total_USR + DB1.TST_Head;

  // PAR.Weight Tot USR = PAR.Weight Tot USR + DB1.TST Wgt
  PAR.Weight_Tot_USR = PAR.Weight_Tot_USR + DB1.TST_Wgt;

 }

 // LCL.TD Avg Live Wgt = LCL.Weight Tot USR / LCL.Head Total USR *
 LCL.TD_Avg_Live_Wgt = LCL.Weight_Tot_USR / LCL.Head_Total_USR;

 EXECUTE FUNCTION(Chg Dtl Hd/Wgt SUP    CH) TYPE(CHGOBJ) FILE(PKA2CPP)           AB1233073;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TD_Sequence_Number);
 PARAMETER(LCL.Weight_Tot_USR);
 PARAMETER(LCL.Head_Total_USR);
 PARAMETER(LCL.TD_Avg_Live_Wgt);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Exit program processing

//?F3=Exit
CASE;

// IF CTL.*CMD key is *Exit
IF CTL.*CMD_key = '03';

CASE;

// IF CTL.TST Head is GT 250
IF CTL.TST_Head > 265;

// AND CTL.TH Source Type is Internal
AND CTL.TH_Source_Type = 'I';

// Send error message - 'Head cannot exceed 250.'
ERROR(PRK0774);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

ENDIF;

// Call program Chg BOL/THDR Rec/Wgt  XF.
CALL PROGRAM(Chg BOL/THDR Rec/Wgt  XF) ('PKHFXFR');
PARAMETER(CTL.BOH_Company_Number);
PARAMETER(CTL.BOH_Buy_Order_Number);
PARAMETER(CTL.BOL_Load_Number);
PARAMETER(CTL.TH_Tattoo_Number);
PARAMETER(CTL.TH_Kill_Date);

