// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POQ8XFR
// ?Date: 14.08.2025 Time: 03:38:44
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Clear Existing Matrix and Create Weight Range/Lean%
CASE;

// IF PAR.Min Carcass Weight is Entered
IF PAR.Min_Carcass_Weight <> *ZERO;

// AND PAR.Max Carcass Weight is Entered
AND PAR.Max_Carcass_Weight <> *ZERO;

// AND PAR.Count USR is GT 0
AND PAR.Count_USR > *ZERO;

// AND PAR.Lean Percent 1 USR is GT Zero
AND PAR.Lean_Percent_1_USR > *ZERO;

// AND PAR.Lean Percent 2 USR is GT Zero
AND PAR.Lean_Percent_2_USR > *ZERO;

EXECUTE FUNCTION(Del Weight Range      RT) TYPE(RTVOBJ) FILE(PDI1REP)           AC1255918;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Cutout_Matrix_Code);
PARAMETER(PAR.Effective_Month_Day);
{
 //?USER: Process Data record

 //?*Delete Weight Range, Distribution, and Items.
 EXECUTE FUNCTION(Del Weight Range      IF) TYPE(EXCINTFUN)                      AC1255937;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Cutout_Matrix_Code);
 PARAMETER(DB1.Effective_Month_Day);
 PARAMETER(DB1.Min_Carcass_Weight);
 PARAMETER(DB1.Max_Carcass_Weight);
 {
  //?Execute internal function

  //?*Delete Distribution and Items
  EXECUTE FUNCTION(Del Distribution      RT) TYPE(RTVOBJ) FILE(PDIZREP)           AC1255914;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Cutout_Matrix_Code);
  PARAMETER(PAR.Effective_Month_Day);
  PARAMETER(PAR.Min_Carcass_Weight);
  PARAMETER(PAR.Max_Carcass_Weight);
  {
   //?USER: Process Data record

   //?*Delete Distribution and Items
   EXECUTE FUNCTION(Del Distribution      IF) TYPE(EXCINTFUN)                      AC1255934;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Cutout_Matrix_Code);
   PARAMETER(DB1.Effective_Month_Day);
   PARAMETER(DB1.Min_Carcass_Weight);
   PARAMETER(DB1.Max_Carcass_Weight);
   PARAMETER(DB1.Lean_Percent);
   {
    //?Execute internal function

    //?*Delete Items
    EXECUTE FUNCTION(Del Cutout Item       RT) TYPE(RTVOBJ) FILE(PDI4REP)           AC1255921;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Cutout_Matrix_Code);
    PARAMETER(PAR.Effective_Month_Day);
    PARAMETER(PAR.Min_Carcass_Weight);
    PARAMETER(PAR.Max_Carcass_Weight);
    PARAMETER(PAR.Lean_Percent);
    {
     //?USER: Process Data record

     //?*Delete Item
     EXECUTE FUNCTION(DLT Cutout Item        DL) TYPE(DLTOBJ) FILE(PDI4REP)          AC1255834;
     PARAMETER(DB1.Company_Number);
     PARAMETER(DB1.Cutout_Matrix_Code);
     PARAMETER(DB1.Effective_Month_Day);
     PARAMETER(DB1.Min_Carcass_Weight);
     PARAMETER(DB1.Max_Carcass_Weight);
     PARAMETER(DB1.Lean_Percent);
     PARAMETER(DB1.Item_Code);
    }

    //?*Delete Distribution
    EXECUTE FUNCTION(DLT Distribution       DL) TYPE(DLTOBJ) FILE(PDIZREP)          AC1254598;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Cutout_Matrix_Code);
    PARAMETER(PAR.Effective_Month_Day);
    PARAMETER(PAR.Min_Carcass_Weight);
    PARAMETER(PAR.Max_Carcass_Weight);
    PARAMETER(PAR.Lean_Percent);
   }

  }

  EXECUTE FUNCTION(Del Dist Backfat      RT) TYPE(RTVOBJ) FILE(PDJ0REP)           AC1333226;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Cutout_Matrix_Code);
  PARAMETER(PAR.Effective_Month_Day);
  PARAMETER(PAR.Min_Carcass_Weight);
  PARAMETER(PAR.Max_Carcass_Weight);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Del Distribution      IF) TYPE(EXCINTFUN)                      AC1934938;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Cutout_Matrix_Code);
   PARAMETER(DB1.Effective_Month_Day);
   PARAMETER(DB1.Min_Carcass_Weight);
   PARAMETER(DB1.Max_Carcass_Weight);
   PARAMETER(DB1.Backfat_Inches);
   {
    //?Execute internal function

    //?*Delete Distribution
    EXECUTE FUNCTION(DLT Dist Backfat       DL) TYPE(DLTOBJ) FILE(PDJ0REP)          AC1333075;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Cutout_Matrix_Code);
    PARAMETER(PAR.Effective_Month_Day);
    PARAMETER(PAR.Min_Carcass_Weight);
    PARAMETER(PAR.Max_Carcass_Weight);
    PARAMETER(PAR.Backfat_Inches);
   }

  }

  EXECUTE FUNCTION(Del Dist Loin-Eye     RT) TYPE(RTVOBJ) FILE(PDJ1REP)           AC1333227;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Cutout_Matrix_Code);
  PARAMETER(PAR.Effective_Month_Day);
  PARAMETER(PAR.Min_Carcass_Weight);
  PARAMETER(PAR.Max_Carcass_Weight);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(DLT Dist Loin-Eye      DL) TYPE(DLTOBJ) FILE(PDJ1REP)          AC1333094;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Cutout_Matrix_Code);
   PARAMETER(DB1.Effective_Month_Day);
   PARAMETER(DB1.Min_Carcass_Weight);
   PARAMETER(DB1.Max_Carcass_Weight);
   PARAMETER(DB1.Loin_Eye_Depth);
  }

  //?*Delete Weight Range
  EXECUTE FUNCTION(DLT Weight Range       DL) TYPE(DLTOBJ) FILE(PDI1REP)          AC1254506;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Cutout_Matrix_Code);
  PARAMETER(PAR.Effective_Month_Day);
  PARAMETER(PAR.Min_Carcass_Weight);
  PARAMETER(PAR.Max_Carcass_Weight);
 }

}


// LCL.Max Carcass Weight = PAR.Min Carcass Weight
LCL.Max_Carcass_Weight = PAR.Min_Carcass_Weight;

// LCL.Min Carcass Weight = LCL.Max Carcass Weight
LCL.Min_Carcass_Weight = LCL.Max_Carcass_Weight;

// DOW LCL.Max Carcass Weight LE PAR.Max Carcass Weight
DOW LCL.Max_Carcass_Weight <= PAR.Max_Carcass_Weight;

EXECUTE FUNCTION(Crt Weight Range      CR) TYPE(CRTOBJ) FILE(PDI1REP)           AC1254504;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Cutout_Matrix_Code);
PARAMETER(PAR.Effective_Month_Day);
PARAMETER(LCL.Min_Carcass_Weight);
PARAMETER(LCL.Max_Carcass_Weight);
PARAMETER(PAR.Min_Live_Weight);
PARAMETER(PAR.Max_Live_Weight);
PARAMETER(PAR.Cooler_Shrink_Percent);
PARAMETER(PAR.Std_Dressing_Yield_Pct);
PARAMETER(WRK.EDI_Status_1);
PARAMETER(WRK.EDI_Status_2);
PARAMETER(WRK.EDI_Status_3);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


// LCL.Lean Percent = PAR.Lean Percent 1 USR
LCL.Lean_Percent = PAR.Lean_Percent_1_USR;

// DOW LCL.Lean Percent LE PAR.Lean Percent 2 USR
DOW LCL.Lean_Percent <= PAR.Lean_Percent_2_USR;

EXECUTE FUNCTION(Crt Distribution      CR) TYPE(CRTOBJ) FILE(PDIZREP)           AC1254596;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Cutout_Matrix_Code);
PARAMETER(PAR.Effective_Month_Day);
PARAMETER(LCL.Min_Carcass_Weight);
PARAMETER(LCL.Max_Carcass_Weight);
PARAMETER(LCL.Lean_Percent);
PARAMETER(PAR.Average_Cold_Wgt);
PARAMETER(PAR.Population_Percent);
PARAMETER(PAR.Average_Lean_Percent);
PARAMETER(PAR.Average_Backfat_Inches);
PARAMETER(PAR.Average_Loin_Eye_Depth);
PARAMETER(PAR.Population_Head);
PARAMETER(WRK.EDI_Status_1);
PARAMETER(WRK.EDI_Status_2);
PARAMETER(WRK.EDI_Status_3);
PARAMETER(WRK.Record_Status);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


// LCL.Lean Percent = LCL.Lean Percent + CON.1
LCL.Lean_Percent = LCL.Lean_Percent + 1;

ENDDO;

// LCL.Min Carcass Weight = LCL.Max Carcass Weight + CON.1
LCL.Min_Carcass_Weight = LCL.Max_Carcass_Weight + 1;

// LCL.Max Carcass Weight = LCL.Max Carcass Weight + PAR.Count USR
LCL.Max_Carcass_Weight = LCL.Max_Carcass_Weight + PAR.Count_USR;

ENDDO;

//?Clear Existing Matrix and Create Weight Range/Lean%
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Dlt Cutout Item Ln%   RT) TYPE(RTVOBJ) FILE(PDI4REP)           AC1934936;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Cutout_Matrix_Code);
PARAMETER(PAR.Effective_Month_Day);
{
 //?USER: Process Data record

 //?*Delete Item
 EXECUTE FUNCTION(DLT Cutout Item        DL) TYPE(DLTOBJ) FILE(PDI4REP)          AC1255834;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Cutout_Matrix_Code);
 PARAMETER(DB1.Effective_Month_Day);
 PARAMETER(DB1.Min_Carcass_Weight);
 PARAMETER(DB1.Max_Carcass_Weight);
 PARAMETER(DB1.Lean_Percent);
 PARAMETER(DB1.Item_Code);
}


ENDIF;

EXECUTE FUNCTION(Crt Cutout Items Ln%  RT) TYPE(RTVOBJ) FILE(PDIZREP)           AC1650766;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Cutout_Matrix_Code);
PARAMETER(PAR.Effective_Month_Day);
PARAMETER(PAR.Cutout_Matrix_Type);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Crt Cutout Items Ln%  RT) TYPE(RTVOBJ) FILE(POB7REP)           AC1934913;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Cutout_Matrix_Code);
 PARAMETER(DB1.Effective_Month_Day);
 PARAMETER(DB1.Min_Carcass_Weight);
 PARAMETER(DB1.Max_Carcass_Weight);
 PARAMETER(DB1.Lean_Percent);
 PARAMETER(PAR.Cutout_Matrix_Type);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.Cutout Matrix Type is Blend (Lean %)
  IF PAR.Cutout_Matrix_Type = 'B';

  // OR PAR.Cutout Matrix Type is Blend (Backfat)
  OR PAR.Cutout_Matrix_Type = 'C';

  //?Calculate Yield
  CASE;

  // IF DB1.Yield Type is Fat
  IF DB1.Yield_Type = 'T';

  EXECUTE FUNCTION(Clc Tot Yield         Rt) TYPE(RTVOBJ) FILE(PDI4REP)           AC1651197;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Cutout_Matrix_Code);
  PARAMETER(DB1.Effective_Month_Day);
  PARAMETER(PAR.Min_Carcass_Weight);
  PARAMETER(PAR.Max_Carcass_Weight);
  PARAMETER(PAR.Lean_Percent);
  PARAMETER(PAR.Carcass_Yield_SUM);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.Carcass Yield SUM = PAR.Carcass Yield SUM + DB1.Percent of Carcass
   PAR.Carcass_Yield_SUM = PAR.Carcass_Yield_SUM + DB1.Percent_of_Carcass;

  }

  // PAR.Percent of Carcass = CON.100 - PAR.Carcass Yield SUM
  PAR.Percent_of_Carcass = 100 - PAR.Carcass_Yield_SUM;

  //?Calculate Yield
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Clc Cutout Yield Ln%  RT) TYPE(RTVOBJ) FILE(POB8REP)           AC1651429;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Cutout_Matrix_Code);
  PARAMETER(DB1.Effective_Month_Day);
  PARAMETER(PAR.Min_Carcass_Weight);
  PARAMETER(PAR.Max_Carcass_Weight);
  PARAMETER(PAR.Lean_Percent);
  PARAMETER(PAR.Percent_of_Carcass);
  PARAMETER(PAR.Avg_Piece_Wgt_5_2_USR);
  PARAMETER(DB1.Primal_Group_Code);
  PARAMETER(DB1.Pieces_Per_Head);
  {
   //?USER: Initialize routine

   // PAR.Percent of Carcass = CON.*ZERO
   PAR.Percent_of_Carcass = *ZERO;

   //?USER: Process Data record

   EXECUTE FUNCTION(Rtv Percent of Carc   RT) TYPE(RTVOBJ) FILE(PDI4REP)           AC1651433;
   PARAMETER(PAR.Company_Number);
   PARAMETER(DB1.Blend_Matrix_Code);
   PARAMETER(DB1.Blend_Matrix_Eff_MonthDay);
   PARAMETER(PAR.Min_Carcass_Weight);
   PARAMETER(PAR.Max_Carcass_Weight);
   PARAMETER(PAR.Lean_Percent);
   PARAMETER(PAR.Primal_Group_Code);
   PARAMETER(LCL.Percent_of_Carcass);
   {
    //?USER: Initialize routine

    // PAR.Percent of Carcass = CON.*ZERO
    PAR.Percent_of_Carcass = *ZERO;

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   // Blended % of Carcass
   PAR.Percent_of_Carcass = PAR.Percent_of_Carcass + ( LCL.Percent_of_Carcass * (
   DB1.Blend_Percent / 100 'H' ) 'H' );

   //?USER: Exit processing

   CASE;

   // IF PAR.Pieces Per Head is GT Zero
   IF PAR.Pieces_Per_Head > *ZERO;

   // Average Piece Weight
   PAR.Avg_Piece_Wgt_5_2_USR = ( PAR.Max_Carcass_Weight * ( PAR.Percent_of_Carcass / 100
   'H' ) 'H' ) / PAR.Pieces_Per_Head 'H';

   ENDIF;

  }

  ENDIF;

  //?Item Code
  CASE;

  // IF DB1.Item Code is Entered
  IF DB1.Item_Code <> *ZERO;

  // PAR.Item Code = DB1.Item Code
  PAR.Item_Code = DB1.Item_Code;

  //?Item Code
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Rtv RM Item Code      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1650791;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(DB1.Primal_Group_Code);
  PARAMETER(PAR.Avg_Piece_Wgt_5_2_USR);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   CASE;

   // IF DB1.Primal Group Code EQ PAR.Primal Group Code
   IF DB1.Primal_Group_Code = PAR.Primal_Group_Code;

   CASE;

   // IF PAR.Avg Piece Wgt 5.2 USR GE DB1.Minimum Piece Weight
   IF PAR.Avg_Piece_Wgt_5_2_USR >= DB1.Minimum_Piece_Weight;

   // AND PAR.Avg Piece Wgt 5.2 USR LE DB1.Maximum Piece Weight
   AND PAR.Avg_Piece_Wgt_5_2_USR <= DB1.Maximum_Piece_Weight;

   // PAR.Item Code = DB1.Item Code
   PAR.Item_Code = DB1.Item_Code;

   QUIT;

   ENDIF;

   ENDIF;

  }

  ENDIF;

  // IF PAR.Cutout Matrix Type is Formula (Lean %)
  IF PAR.Cutout_Matrix_Type = 'F';

  // OR PAR.Cutout Matrix Type is Formula (Backfat)
  OR PAR.Cutout_Matrix_Type = 'A';

  //?Calculate Yield
  CASE;

  // IF DB1.Yield Type is Formula
  IF DB1.Yield_Type = 'F';

  CASE;

  // IF PAR.Cutout Matrix Type is Formula (Lean %)
  IF PAR.Cutout_Matrix_Type = 'F';

  EXECUTE FUNCTION(Clc Cutout Yield Ln%  IF) TYPE(EXCINTFUN)                      AC1650785;
  PARAMETER(PAR.Primal_Yield);
  PARAMETER(DB1.Primal_Intercept);
  PARAMETER(DB1.Primal_C1_HCWT);
  PARAMETER(DB1.Primal_C3_HCWT_Seq);
  PARAMETER(DB1.Primal_C2_Ln_Pct_or_BkFt);
  PARAMETER(DB1.Primal_C4_Ln_Pct_or_Bkft);
  PARAMETER(DB1.Pieces_Per_Head);
  PARAMETER(PAR.Max_Carcass_Weight);
  PARAMETER(PAR.Lean_Percent);
  PARAMETER(PAR.Avg_Piece_Wgt_5_2_USR);
  {
   //?Execute internal function

   MOVE *ALL (To: PAR From: CON);

   CASE;

   // IF PAR.Primal C3 HCWT Sq is Not Entered
   IF PAR.Primal_C3_HCWT_Seq = *ZERO;

   // AND PAR.Primal C4 Ln% or Bkft Sq is Not Entered
   AND PAR.Primal_C4_Ln_Pct_or_Bkft = *ZERO;

   // Primal Yield
   PAR.Primal_Yield = ( ( ( ( ( ( PAR.Primal_Intercept + ( PAR.Max_Carcass_Weight
   * PAR.Primal_C1_HCWT 'H' ) ) + ( ( PAR.Max_Carcass_Weight * PAR.Max_Carcass_Weight 'H' )
   * PAR.Primal_C3_HCWT_Seq 'H' ) ) + ( PAR.Lean_Percent * PAR.Primal_C2_Ln_Pct_or_BkFt
   'H' ) ) + ( ( PAR.Lean_Percent * PAR.Lean_Percent 'H' ) * PAR.Primal_C4_Ln_Pct_or_Bkft
   'H' ) ) / 1000 'H' ) / PAR.Max_Carcass_Weight 'H' ) * 100 'H';

   // IF *OTHERWISE
   IF *OTHERWISE;

   // Primal Yield
   PAR.Primal_Yield = ( ( ( ( PAR.Primal_Intercept + ( PAR.Max_Carcass_Weight
   * PAR.Primal_C1_HCWT 'H' ) ) + ( ( PAR.Max_Carcass_Weight * PAR.Max_Carcass_Weight 'H' )
   * PAR.Primal_C3_HCWT_Seq 'H' ) ) + ( PAR.Lean_Percent * PAR.Primal_C2_Ln_Pct_or_BkFt
   'H' ) ) + ( ( PAR.Lean_Percent * PAR.Lean_Percent 'H' ) * PAR.Primal_C4_Ln_Pct_or_Bkft
   'H' ) ) / 1000 'H';

   ENDIF;

   //?Average Piece Weight
   CASE;

   // IF PAR.Pieces Per Head is GT Zero
   IF PAR.Pieces_Per_Head > *ZERO;

   // Average Piece Weight
   PAR.Avg_Piece_Wgt_5_2_USR = ( PAR.Max_Carcass_Weight * ( PAR.Primal_Yield / 100 'H' )
   'H' ) / PAR.Pieces_Per_Head 'H';

   ENDIF;

  }

  // IF PAR.Cutout Matrix Type is Formula (Backfat)
  IF PAR.Cutout_Matrix_Type = 'A';

  EXECUTE FUNCTION(Clc Cutout Yield BkFt IF) TYPE(EXCINTFUN)                      AC1934929;
  PARAMETER(PAR.Primal_Yield);
  PARAMETER(DB1.Primal_Intercept);
  PARAMETER(DB1.Primal_C1_HCWT);
  PARAMETER(DB1.Primal_C3_HCWT_Seq);
  PARAMETER(DB1.Primal_C2_Ln_Pct_or_BkFt);
  PARAMETER(DB1.Primal_C4_Ln_Pct_or_Bkft);
  PARAMETER(DB1.Pieces_Per_Head);
  PARAMETER(PAR.Max_Carcass_Weight);
  PARAMETER(PAR.Lean_Percent);
  PARAMETER(PAR.Avg_Piece_Wgt_5_2_USR);
  {
   //?Execute internal function

   MOVE *ALL (To: PAR From: CON);

   // Primal Yield
   PAR.Primal_Yield = ( ( ( ( PAR.Primal_Intercept + ( PAR.Max_Carcass_Weight
   * PAR.Primal_C1_HCWT 'H' ) ) + ( PAR.Backfat_Inches * PAR.Primal_C2_Ln_Pct_or_BkFt 'H' )
   ) / 1000 'H' ) / PAR.Max_Carcass_Weight 'H' ) * 100 'H';

   //?Average Piece Weight
   CASE;

   // IF PAR.Pieces Per Head is GT Zero
   IF PAR.Pieces_Per_Head > *ZERO;

   // Average Piece Weight
   PAR.Avg_Piece_Wgt_5_2_USR = ( PAR.Max_Carcass_Weight * ( PAR.Primal_Yield / 100 'H' )
   'H' ) / PAR.Pieces_Per_Head 'H';

   ENDIF;

  }

  ENDIF;

  // PAR.Percent of Carcass = PAR.Primal Yield
  PAR.Percent_of_Carcass = PAR.Primal_Yield;

  //?Calculate Yield
  // IF DB1.Yield Type is Standard
  IF DB1.Yield_Type = 'S';

  // PAR.Percent of Carcass = DB1.Primal Yield
  PAR.Percent_of_Carcass = DB1.Primal_Yield;

  //?Calculate Yield
  // IF DB1.Yield Type is Picnic
  IF DB1.Yield_Type = 'P';

  CASE;

  // IF PAR.Cutout Matrix Type is Formula (Lean %)
  IF PAR.Cutout_Matrix_Type = 'F';

  EXECUTE FUNCTION(Clc Cutout Yield Ln%  IF) TYPE(EXCINTFUN)                      AC1650785;
  PARAMETER(PAR.Primal_Yield);
  PARAMETER(DB1.Primal_Intercept);
  PARAMETER(DB1.Primal_C1_HCWT);
  PARAMETER(DB1.Primal_C3_HCWT_Seq);
  PARAMETER(DB1.Primal_C2_Ln_Pct_or_BkFt);
  PARAMETER(DB1.Primal_C4_Ln_Pct_or_Bkft);
  PARAMETER(DB1.Pieces_Per_Head);
  PARAMETER(PAR.Max_Carcass_Weight);
  PARAMETER(PAR.Lean_Percent);
  PARAMETER(PAR.Avg_Piece_Wgt_5_2_USR);
  {
   //?Execute internal function

   MOVE *ALL (To: PAR From: CON);

   CASE;

   // IF PAR.Primal C3 HCWT Sq is Not Entered
   IF PAR.Primal_C3_HCWT_Seq = *ZERO;

   // AND PAR.Primal C4 Ln% or Bkft Sq is Not Entered
   AND PAR.Primal_C4_Ln_Pct_or_Bkft = *ZERO;

   // Primal Yield
   PAR.Primal_Yield = ( ( ( ( ( ( PAR.Primal_Intercept + ( PAR.Max_Carcass_Weight
   * PAR.Primal_C1_HCWT 'H' ) ) + ( ( PAR.Max_Carcass_Weight * PAR.Max_Carcass_Weight 'H' )
   * PAR.Primal_C3_HCWT_Seq 'H' ) ) + ( PAR.Lean_Percent * PAR.Primal_C2_Ln_Pct_or_BkFt
   'H' ) ) + ( ( PAR.Lean_Percent * PAR.Lean_Percent 'H' ) * PAR.Primal_C4_Ln_Pct_or_Bkft
   'H' ) ) / 1000 'H' ) / PAR.Max_Carcass_Weight 'H' ) * 100 'H';

   // IF *OTHERWISE
   IF *OTHERWISE;

   // Primal Yield
   PAR.Primal_Yield = ( ( ( ( PAR.Primal_Intercept + ( PAR.Max_Carcass_Weight
   * PAR.Primal_C1_HCWT 'H' ) ) + ( ( PAR.Max_Carcass_Weight * PAR.Max_Carcass_Weight 'H' )
   * PAR.Primal_C3_HCWT_Seq 'H' ) ) + ( PAR.Lean_Percent * PAR.Primal_C2_Ln_Pct_or_BkFt
   'H' ) ) + ( ( PAR.Lean_Percent * PAR.Lean_Percent 'H' ) * PAR.Primal_C4_Ln_Pct_or_Bkft
   'H' ) ) / 1000 'H';

   ENDIF;

   //?Average Piece Weight
   CASE;

   // IF PAR.Pieces Per Head is GT Zero
   IF PAR.Pieces_Per_Head > *ZERO;

   // Average Piece Weight
   PAR.Avg_Piece_Wgt_5_2_USR = ( PAR.Max_Carcass_Weight * ( PAR.Primal_Yield / 100 'H' )
   'H' ) / PAR.Pieces_Per_Head 'H';

   ENDIF;

  }

  // IF PAR.Cutout Matrix Type is Formula (Backfat)
  IF PAR.Cutout_Matrix_Type = 'A';

  EXECUTE FUNCTION(Clc Cutout Yield BkFt IF) TYPE(EXCINTFUN)                      AC1934929;
  PARAMETER(PAR.Primal_Yield);
  PARAMETER(DB1.Primal_Intercept);
  PARAMETER(DB1.Primal_C1_HCWT);
  PARAMETER(DB1.Primal_C3_HCWT_Seq);
  PARAMETER(DB1.Primal_C2_Ln_Pct_or_BkFt);
  PARAMETER(DB1.Primal_C4_Ln_Pct_or_Bkft);
  PARAMETER(DB1.Pieces_Per_Head);
  PARAMETER(PAR.Max_Carcass_Weight);
  PARAMETER(PAR.Lean_Percent);
  PARAMETER(PAR.Avg_Piece_Wgt_5_2_USR);
  {
   //?Execute internal function

   MOVE *ALL (To: PAR From: CON);

   // Primal Yield
   PAR.Primal_Yield = ( ( ( ( PAR.Primal_Intercept + ( PAR.Max_Carcass_Weight
   * PAR.Primal_C1_HCWT 'H' ) ) + ( PAR.Backfat_Inches * PAR.Primal_C2_Ln_Pct_or_BkFt 'H' )
   ) / 1000 'H' ) / PAR.Max_Carcass_Weight 'H' ) * 100 'H';

   //?Average Piece Weight
   CASE;

   // IF PAR.Pieces Per Head is GT Zero
   IF PAR.Pieces_Per_Head > *ZERO;

   // Average Piece Weight
   PAR.Avg_Piece_Wgt_5_2_USR = ( PAR.Max_Carcass_Weight * ( PAR.Primal_Yield / 100 'H' )
   'H' ) / PAR.Pieces_Per_Head 'H';

   ENDIF;

  }

  ENDIF;

  EXECUTE FUNCTION(Clc Cushion Yield     RT) TYPE(RTVOBJ) FILE(PDI4REP)           AC1651211;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Cutout_Matrix_Code);
  PARAMETER(DB1.Effective_Month_Day);
  PARAMETER(PAR.Min_Carcass_Weight);
  PARAMETER(PAR.Max_Carcass_Weight);
  PARAMETER(PAR.Lean_Percent);
  PARAMETER(2801000);
  PARAMETER(PAR.Carcass_Yield);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.Carcass Yield SUM = PAR.Carcass Yield SUM + DB1.Percent of Carcass
   PAR.Carcass_Yield_SUM = PAR.Carcass_Yield_SUM + DB1.Percent_of_Carcass;

  }

  // PAR.Percent of Carcass = PAR.Primal Yield - PAR.Carcass Yield
  PAR.Percent_of_Carcass = PAR.Primal_Yield - PAR.Carcass_Yield;

  //?Calculate Yield
  // IF DB1.Yield Type is Fat
  IF DB1.Yield_Type = 'T';

  EXECUTE FUNCTION(Clc Tot Yield         Rt) TYPE(RTVOBJ) FILE(PDI4REP)           AC1651197;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Cutout_Matrix_Code);
  PARAMETER(DB1.Effective_Month_Day);
  PARAMETER(PAR.Min_Carcass_Weight);
  PARAMETER(PAR.Max_Carcass_Weight);
  PARAMETER(PAR.Lean_Percent);
  PARAMETER(PAR.Carcass_Yield_SUM);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.Carcass Yield SUM = PAR.Carcass Yield SUM + DB1.Percent of Carcass
   PAR.Carcass_Yield_SUM = PAR.Carcass_Yield_SUM + DB1.Percent_of_Carcass;

  }

  // PAR.Percent of Carcass = CON.100 - PAR.Carcass Yield SUM
  PAR.Percent_of_Carcass = 100 - PAR.Carcass_Yield_SUM;

  ENDIF;

  //?Item Code
  CASE;

  // IF DB1.Item Code is Entered
  IF DB1.Item_Code <> *ZERO;

  // PAR.Item Code = DB1.Item Code
  PAR.Item_Code = DB1.Item_Code;

  //?Item Code
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Rtv RM Item Code      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1650791;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(DB1.Primal_Group_Code);
  PARAMETER(PAR.Avg_Piece_Wgt_5_2_USR);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   CASE;

   // IF DB1.Primal Group Code EQ PAR.Primal Group Code
   IF DB1.Primal_Group_Code = PAR.Primal_Group_Code;

   CASE;

   // IF PAR.Avg Piece Wgt 5.2 USR GE DB1.Minimum Piece Weight
   IF PAR.Avg_Piece_Wgt_5_2_USR >= DB1.Minimum_Piece_Weight;

   // AND PAR.Avg Piece Wgt 5.2 USR LE DB1.Maximum Piece Weight
   AND PAR.Avg_Piece_Wgt_5_2_USR <= DB1.Maximum_Piece_Weight;

   // PAR.Item Code = DB1.Item Code
   PAR.Item_Code = DB1.Item_Code;

   QUIT;

   ENDIF;

   ENDIF;

  }

  ENDIF;

  ENDIF;

  EXECUTE FUNCTION(Crt Cutout Item       CR) TYPE(CRTOBJ) FILE(PDI4REP)           AC1255832;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Cutout_Matrix_Code);
  PARAMETER(PAR.Effective_Month_Day);
  PARAMETER(PAR.Min_Carcass_Weight);
  PARAMETER(PAR.Max_Carcass_Weight);
  PARAMETER(PAR.Lean_Percent);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Percent_of_Carcass);
  PARAMETER(DB1.Primal_Group_Code);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

}


