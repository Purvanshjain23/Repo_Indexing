     H/TITLE DSP Pricing Details    DF Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by  : 2E  Version:  1181
     H* Function type : Display file
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISTADAM
     H* Date          : 09/11/07  Time  : 10:58:52
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPMMXDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: DSP Pricing Details    DF Display file
      *
     FCABZRELDIF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : Company Item              Active Items Only
      *
     FCABBREL1IF  E           K        DISK
      * RTV : Customer                  Retrieval index       NV
      *
     FOMF0CPL2IF  E           K        DISK
      * RSQ : Commodity Mrkt Price      Market Date Descending
      *
     FCAEOREL1IF  E           K        DISK
      * RTV : Company Customer          Retrieval index
      *
     FOMHOREL0IF  E           K        DISK
      * RTV : Customer Accrual          Retrieval index
      *
     FOMHLREL1IF  E           K        DISK
      * RTV : Accrual Code Master       Retrieval index
      *
     FOMHPREL1IF  E           K        DISK
      * RTV : Customer Accrual Item     Retrieval index
      *
     FOPBGWKLDIF  E           K        DISK
      * RSQ : Order Detail              Co/Order#/Item/Whse Not
      *
     FPOC8REL1IF  E           K        DISK
      * RTV : Customer Accrual Str      Retrieval index
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FPOC6REL1IF  E           K        DISK
      * RTV : Customer Price Header     Retrieval index
      *
     FPOC7REL1IF  E           K        DISK
      * RTV : Customer Price Detail     Retrieval index
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : Application Profile       Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
     E                    J3          3  1
     E                    K3          3  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    J7          7  1
     E                    K7          7  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    #L3         3  1
     E                    #L7         7  1
     E                    UCT        40  1               CENTER TABLE
      * Screen: Field position and name array
     E                    W0BEG   7 022  5 0A
     E                    W0END   7 022  5 0A
     E                    W0NAM   7 022 10
     I@BZREJU
      * Company Item              Retrieval index       NV
      * Renamed input format fields
     I              BZAIC3                          WAAIC3
     I              BZHGCD                          WAHGCD
     I              BZAVNA                          WAAVNA
     I              BZAWNA                          WAAWNA
     I              BZL7NA                          WAL7NA
     I              BZL8NA                          WAL8NA
     I              BZL6NA                          WAL6NA
     I              BZMFNA                          WAMFNA
     I              BZADCD                          WAADCD
     I              BZAWPC                          WAAWPC
     I              BZLXST                          WALXST
     I              BZAECD                          WAAECD
     I              BZAXPC                          WAAXPC
     I              BZLYST                          WALYST
     I              BZAFCD                          WAAFCD
     I              BZAICD                          WAAICD
     I              BZAIWG                          WAAIWG
     I              BZHICD                          WAHICD
     I              BZRBCD                          WARBCD
     I              BZFZST                          WAFZST
     I              BZAVST                          WAAVST
     I              BZCZWG                          WACZWG
     I              BZC0WG                          WAC0WG
     I              BZURTN                          WAURTN
     I              BZAJC8                          WAAJC8
     I              BZRINB                          WARINB
     I              BZRHNB                          WARHNB
     I              BZRGNB                          WARGNB
     I              BZLNCD                          WALNCD
     I              BZTFNB                          WATFNB
     I              BZN0CD                          WAN0CD
     I              BZX4ST                          WAX4ST
     I              BZTMVA                          WATMVA
     I              BZTNVA                          WATNVA
     I              BZBLPR                          WABLPR
     I              BZBMPR                          WABMPR
     I              BZLRCD                          WALRCD
     I              BZU9ST                          WAU9ST
     I              BZCMCO                          WACMCO
     I              BZQ1CD                          WAQ1CD
     I              BZQ8CD                          WAQ8CD
     I              BZCHTM                          WACHTM
     I              BZQZCD                          WAQZCD
     I              BZXWST                          WAXWST
     I              BZXXST                          WAXXST
     I              BZVMST                          WAVMST
     I              BZSWGH                          WASWGH
     I              BZPPHE                          WAPPHE
     I              BZR3CD                          WAR3CD
     I              BZSDCD                          WASDCD
     I              BZICN1                          WAICN1
     I              BZSVCD                          WASVCD
     I              BZICN2                          WAICN2
     I              BZSWCD                          WASWCD
     I              BZV2NB                          WAV2NB
     I              BZSXCD                          WASXCD
     I              BZITCN                          WAITCN
     I              BZSYCD                          WASYCD
     I              BZITC5                          WAITC5
     I              BZSZCD                          WASZCD
     I              BZICN6                          WAICN6
     I              BZS0CD                          WAS0CD
     I              BZICN7                          WAICN7
     I              BZS1CD                          WAS1CD
     I              BZICN8                          WAICN8
     I              BZS2CD                          WAS2CD
     I              BZICN9                          WAICN9
     I              BZS3CD                          WAS3CD
     I              BZICN0                          WAICN0
     I              BZS4CD                          WAS4CD
     I              BZSFNB                          WASFNB
     I              BZA3WG                          WAA3WG
     I              BZSJNB                          WASJNB
     I              BZLLCD                          WALLCD
     I              BZLMCD                          WALMCD
     I              BZP3ST                          WAP3ST
     I              BZSKNB                          WASKNB
     I              BZSLNB                          WASLNB
     I              BZSMNB                          WASMNB
     I              BZP4ST                          WAP4ST
     I              BZCFNB                          WACFNB
     I              BZCGNB                          WACGNB
     I              BZILNB                          WAILNB
     I              BZCHNB                          WACHNB
     I              BZCINB                          WACINB
     I              BZCJNB                          WACJNB
     I              BZCMNB                          WACMNB
     I              BZCNNB                          WACNNB
     I              BZCRNB                          WACRNB
     I              BZCSNB                          WACSNB
     I              BZCVNB                          WACVNB
     I              BZCWNB                          WACWNB
     I              BZCXNB                          WACXNB
     I              BZCZNB                          WACZNB
     I              BZC0NB                          WAC0NB
     I              BZN1CD                          WAN1CD
     I              BZB4NB                          WAB4NB
     I              BZB5NB                          WAB5NB
     I              BZX5ST                          WAX5ST
     I              BZX6ST                          WAX6ST
     I              BZX7ST                          WAX7ST
     I              BZPCCT                          WAPCCT
     I              BZBDNB                          WABDNB
     I              BZBJNB                          WABJNB
     I              BZSUST                          WASUST
     I              BZSVST                          WASVST
     I              BZSYST                          WASYST
     I              BZSZST                          WASZST
     I              BZS1ST                          WAS1ST
     I              BZXRCD                          WAXRCD
     I              BZXTCD                          WAXTCD
     I              BZXUCD                          WAXUCD
     I              BZF5WG                          WAF5WG
     I              BZF6WG                          WAF6WG
     I              BZF7WG                          WAF7WG
     I              BZBLNB                          WABLNB
     I              BZBNNB                          WABNNB
     I              BZS2ST                          WAS2ST
     I              BZS4ST                          WAS4ST
     I              BZS5ST                          WAS5ST
     I              BZS6ST                          WAS6ST
     I              BZS8ST                          WAS8ST
     I              BZS9ST                          WAS9ST
     I              BZTCST                          WATCST
     I              BZTDST                          WATDST
     I              BZUVST                          WAUVST
     I              BZUWST                          WAUWST
     I              BZUXST                          WAUXST
     I              BZVSST                          WAVSST
     I              BZAATM                          WAAATM
     I              BZAYNA                          WAAYNA
     I              BZA0NA                          WAA0NA
     I              BZAXDT                          WAAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Customer
      * I : MAP Ship To Customer
     I                                    P   1   40P1BKC7
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'CD3 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0001
      * Application Code
     I                                       11  16 ZA0002
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0003
      * Application Code
     I                                       11  16 ZA0004
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1BKC7    PARM           WP0001  70       Ship To Custome
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * RTV Customer Name      RT - Customer  * 
     C                     EXSR SARVGN
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    BZAIC3
     C                     Z-ADD#2HGCD    BZHGCD
     C           KPOS      SETLL@BZREZG
     C                     READ @BZREZG                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2AIC3    WZAIC3
     C                     MOVEL#2AIC3    WZAIC3           Company Number
     C           *LIKE     DEFN #2HGCD    WZHGCD
     C                     MOVEL#2HGCD    WZHGCD           Item Code
     C           *LIKE     DEFN #2LNCD    WZLNCD
     C                     MOVEL#2LNCD    WZLNCD           Default Commod
     C           *LIKE     DEFN #2LRCD    WZLRCD
     C                     MOVEL#2LRCD    WZLRCD           Commodity Price
     C           *LIKE     DEFN #2AICD    WZAICD
     C                     MOVEL#2AICD    WZAICD           U/M - Pricing
     C           *LIKE     DEFN #2Q8CD    WZQ8CD
     C                     MOVEL#2Q8CD    WZQ8CD           Price Method De
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@BZREZG                  90*
     C  N82                READ @BZREZG                  90*
     C                     END
      *
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2HGCD    IFNE *ZERO                      Item Code
     C           BZHGCD    CABNE#2HGCD    BB020            Item Code
     C                     END
     C                     END
     C           #2LNCD    IFNE *BLANK                     Default Commod
     C           BZLNCD    CABNE#2LNCD    BB020            Default Commod
     C                     END
     C           #2LRCD    IFNE *BLANK                     Commodity Price
     C           BZLRCD    CABNE#2LRCD    BB020            Commodity Price
     C                     END
     C           #2AICD    IFNE *BLANK                     U/M - Pricing
     C           BZAICD    CABNE#2AICD    BB020            U/M - Pricing
     C                     END
     C           #2Q8CD    IFNE *BLANK                     Price Method De
     C           BZQ8CD    CABNE#2Q8CD    BB020            Price Method De
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
     C                     EXSR MC#1FN
     C                     SUB  1         ##RR
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @BZREZG                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate Market Price Date
      * External date
     C                     Z-ADDVCEQDT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     Z-ADDXDINDT    #CEQDT
      * Validate Company Number and convert to internal.
      * CD3 Ext/Int
     C                     MOVELV2AIC3    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC3  3
     C                     MOVEA*BLANKS   K3
     C                     Z-ADD3         C       30
     C                     Z-ADD3         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUDMCD    J3
     C                     MOVE *BLANKS   W0RTN
     C                     DO   3
     C           J3,C      IFNE ' '
     C                     MOVEAJ3,C      K3,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK3        JUSTC3
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC3    TESTC   1
     C           TESTC     IFGT '?'
     C           TESTC     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC3     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC3    WUDMCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ 'USR0752'                  *IF
      * Setup message data for message
      * Send message 'CD3 Non numeric data'
     C                     MOVEL'USR0752' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #2AIC3           CD3 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUDMCD    #2AIC3           CD3 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * Validate Item Code and convert to internal.
      * CD7 Ext/Int
     C                     MOVELV2HGCD    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC7  7
     C                     MOVEA*BLANKS   K7
     C                     Z-ADD7         C       30
     C                     Z-ADD7         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUEOCD    J7
     C                     MOVE *BLANKS   W0RTN
     C                     DO   7
     C           J7,C      IFNE ' '
     C                     MOVEAJ7,C      K7,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK7        JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC7    TEST7   1
     C           TEST7     IFGT '?'
     C           TEST7     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC7     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC7    WUEOCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ 'USR0752'                  *IF
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                     MOVEL'USR0802' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #2HGCD           CD7 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUEOCD    #2HGCD           CD7 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZAIC3    CASNE#2AIC3    FBRQRL
     C           WZHGCD    CASNE#2HGCD    FBRQRL
     C           WZLNCD    CASNE#2LNCD    FBRQRL
     C           WZLRCD    CASNE#2LRCD    FBRQRL
     C           WZAICD    CASNE#2AICD    FBRQRL
     C           WZQ8CD    CASNE#2Q8CD    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * CASE: CTL.Market Price Date NE LCL.Market Price Date
     C           #CEQDT    IFNE YL0001                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     Z-ADD#CEQDT    YL0001           Market Price Da
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: Process command keys
      * CASE: CTL.*CMD key is CF04
     C           *IN04     IFEQ '1'                        *IF
      * CASE: PGM.*Cursor field <IS> CTL.Item Code
     C           W0CFL     IFEQ 'V2HGCD'                   *IF
      * SEL Item Default       SR - Item Default  * 
     C                     CALL 'OMZ8SRR'              90  SEL Item Defaul
     C                     PARM *BLANK    W0RTN   7
     C           #2HGCD    PARM #2HGCD    WQ0001  70       Item Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'OMZ8SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9933  *
     C                     END
     C                     END                             *FI
      * CASE: PGM.*Cursor field <IS> CTL.Commodity Price Group
     C           W0CFL     IFEQ '#2LRCD'                   *IF
      * SEL Commod Grp Active  SR - Commodity Group  * 
     C                     CALL 'PDECSRR'              90  SEL Commod Grp
     C                     PARM *BLANK    W0RTN   7
     C           #2LRCD    PARM #2LRCD    WQ0002  7        Commodity Price
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDECSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9935  *
     C                     END
     C                     END                             *FI
      * CASE: PGM.*Cursor field <IS> CTL.U/M - Pricing
     C           W0CFL     IFEQ '#2AICD'                   *IF
      * SEL Unit of Measure    SR - Unit of Measure  * 
     C                     CALL 'CAB5SRR'              90  SEL Unit of Mea
     C                     PARM *BLANK    W0RTN   7
     C           #2AICD    PARM #2AICD    WQ0003  2        U/M - Primary D
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAB5SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9936  *
     C                     END
     C                     END                             *FI
      * CASE: PGM.*Cursor field <IS> CTL.Price Method Default
     C           W0CFL     IFEQ '#2Q8CD'                   *IF
      * SEL PD Price Meth Head SR - Price Method Header  * 
     C                     CALL 'PDZDSRR'              90  SEL PD Price Me
     C                     PARM *BLANK    W0RTN   7
     C           #2AIC3    PARM #2AIC3    WQ0004  30       Company Number
     C           #2Q8CD    PARM #2Q8CD    WQ0005  3        Price Method Co
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDZDSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993237*
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @BZREZG fields to subfile
      *================================================================
     C                     MOVELBZAWNA    #1AWNA           Description Lin
     C                     MOVELBZL7NA    #1L7NA           Item Label Line
     C                     MOVELBZL8NA    #1L8NA           Item Label Line
     C                     MOVELBZL6NA    #1L6NA           Item Label Line
     C                     MOVELBZMFNA    #1MFNA           Item Label Line
     C                     MOVELBZADCD    #1ADCD           U/M - Primary
     C                     Z-ADDBZAWPC    #1AWPC           Conversion Fact
     C                     MOVELBZLXST    #1LXST           Operation Facto
     C                     MOVELBZAECD    #1AECD           U/M - Second
     C                     Z-ADDBZAXPC    #1AXPC           Conversion Fact
     C                     MOVELBZLYST    #1LYST           Operation Facto
     C                     MOVELBZAFCD    #1AFCD           U/M - Third
     C                     Z-ADDBZAIWG    #1AIWG           Unit Weight
     C                     MOVELBZHICD    #1HICD           Quality Level
     C                     MOVELBZRBCD    #1RBCD           Item Level
     C                     MOVELBZFZST    #1FZST           Production Date
     C                     MOVELBZAVST    #1AVST           Catch Weight St
     C                     Z-ADDBZCZWG    #1CZWG           Minimum Weight
     C                     Z-ADDBZC0WG    #1C0WG           Maximum Weight
     C                     Z-ADDBZURTN    #1URTN           Number Cases On
     C                     Z-ADDBZAJC8    #1AJC8           Vendor - Item D
     C                     Z-ADDBZRINB    #1RINB           Item Structure
     C                     Z-ADDBZRHNB    #1RHNB           Item Structure
     C                     Z-ADDBZRGNB    #1RGNB           Item Structure
     C                     Z-ADDBZTFNB    #1TFNB           Transportation
     C                     MOVELBZN0CD    #1N0CD           Item Type Code
     C                     MOVELBZX4ST    #1X4ST           Package Type Co
     C                     Z-ADDBZTMVA    #1TMVA           Maximum Audit V
     C                     Z-ADDBZTNVA    #1TNVA           Minimum Audit V
     C                     Z-ADDBZBLPR    #1BLPR           Market Overage
     C                     Z-ADDBZBMPR    #1BMPR           Standard Overag
     C                     MOVELBZU9ST    #1U9ST           Item Pricing Op
     C                     Z-ADDBZCMCO    #1CMCO           Item Pricing Co
     C                     MOVELBZQ1CD    #1Q1CD           Default Warehou
     C                     Z-ADDBZCHTM    #1CHTM           Fresh Chilling
     C                     MOVELBZQZCD    #1QZCD           Base/Conv/Loss
     C                     MOVELBZXWST    #1XWST           Variety/Rendere
     C                     MOVELBZXXST    #1XXST           Case Ready Stat
     C                     MOVELBZVMST    #1VMST           Credit Item Sta
     C                     Z-ADDBZSWGH    #1SWGH           Std Weight/Head
     C                     Z-ADDBZPPHE    #1PPHE           Pieces Per Head
     C                     MOVELBZR3CD    #1R3CD           Department Code
     C                     MOVELBZSDCD    #1SDCD           Group for Packa
     C                     Z-ADDBZICN1    #1ICN1           Item Category N
     C                     MOVELBZSVCD    #1SVCD           MTO Code
     C                     Z-ADDBZICN2    #1ICN2           Item Category N
     C                     MOVELBZSWCD    #1SWCD           Item Category C
     C                     Z-ADDBZV2NB    #1V2NB           Item Category N
     C                     MOVELBZSXCD    #1SXCD           Item Category C
     C                     Z-ADDBZITCN    #1ITCN           Item Category N
     C                     MOVELBZSYCD    #1SYCD           G/L Sub Code
     C                     Z-ADDBZITC5    #1ITC5           Item Category N
     C                     MOVELBZSZCD    #1SZCD           Item Category C
     C                     Z-ADDBZICN6    #1ICN6           Item Category N
     C                     MOVELBZS0CD    #1S0CD           Item Category C
     C                     Z-ADDBZICN7    #1ICN7           Item Category N
     C                     MOVELBZS1CD    #1S1CD           Item Category C
     C                     Z-ADDBZICN8    #1ICN8           Item Category N
     C                     MOVELBZS2CD    #1S2CD           Item Category C
     C                     Z-ADDBZICN9    #1ICN9           Item Category N
     C                     MOVELBZS3CD    #1S3CD           Item Category C
     C                     Z-ADDBZICN0    #1ICN0           Item Category N
     C                     MOVELBZS4CD    #1S4CD           Item Category C
     C                     Z-ADDBZSFNB    #1SFNB           Pallet Tare Wei
     C                     Z-ADDBZA3WG    #1A3WG           Misc Tare Weigh
     C                     Z-ADDBZSJNB    #1SJNB           CI Unused Numbe
     C                     MOVELBZLLCD    #1LLCD           Packaging Code
     C                     MOVELBZLMCD    #1LMCD           Grade Code
     C                     MOVELBZP3ST    #1P3ST           TF Co-Ownership
     C                     Z-ADDBZSKNB    #1SKNB           Agrimetrics gro
     C                     Z-ADDBZSLNB    #1SLNB           Agrimetrics pac
     C                     Z-ADDBZSMNB    #1SMNB           Agrimetrics gra
     C                     MOVELBZP4ST    #1P4ST           PA Base Avail R
     C                     Z-ADDBZCFNB    #1CFNB           PM Pounds per H
     C                     Z-ADDBZCGNB    #1CGNB           PM Line Time Ef
     C                     Z-ADDBZILNB    #1ILNB           PM % 2nds Facto
     C                     Z-ADDBZCHNB    #1CHNB           Use/Freeze/Sell
     C                     Z-ADDBZCINB    #1CINB           PM Batch Size
     C                     Z-ADDBZCJNB    #1CJNB           PM Lot Size
     C                     Z-ADDBZCMNB    #1CMNB           Partial Item Co
     C                     Z-ADDBZCNNB    #1CNNB           WIP Item Code
     C                     Z-ADDBZCRNB    #1CRNB           WIP Reject Code
     C                     Z-ADDBZCSNB    #1CSNB           Std Costing Uni
     C                     Z-ADDBZCVNB    #1CVNB           FP Std Green We
     C                     Z-ADDBZCWNB    #1CWNB           PM Standard LBS
     C                     Z-ADDBZCXNB    #1CXNB           PM Raw Meat LBS
     C                     Z-ADDBZCZNB    #1CZNB           PM Formula LBS/
     C                     Z-ADDBZC0NB    #1C0NB           PM Finished LBS
     C                     MOVELBZN1CD    #1N1CD           SH Unused (was
     C                     Z-ADDBZB4NB    #1B4NB           PM R/M Type Cod
     C                     Z-ADDBZB5NB    #1B5NB           PM Line Number
     C                     MOVELBZX5ST    #1X5ST           Seconds Item
     C                     MOVELBZX6ST    #1X6ST           Print on Realiz
     C                     MOVELBZX7ST    #1X7ST           Unit Weight Cha
     C                     MOVELBZPCCT    #1PCCT           Piece Count Ite
     C                     Z-ADDBZBDNB    #1BDNB           Pieces Per Bag
     C                     Z-ADDBZBJNB    #1BJNB           Bags Per Unit
     C                     MOVELBZSUST    #1SUST           Export/Domestic
     C                     MOVELBZSVST    #1SVST           Print On Schedu
     C                     MOVELBZSYST    #1SYST           Fresh Inv Alloc
     C                     MOVELBZSZST    #1SZST           Fresh Sched As
     C                     MOVELBZS1ST    #1S1ST           Frozen Sched As
     C                     MOVELBZXRCD    #1XRCD           Primal Group Co
     C                     MOVELBZXTCD    #1XTCD           UPC Code 1
     C                     MOVELBZXUCD    #1XUCD           UPC Code 2
     C                     Z-ADDBZF5WG    #1F5WG           Item Target Pri
     C                     Z-ADDBZF6WG    #1F6WG           Minimum Piece W
     C                     Z-ADDBZF7WG    #1F7WG           Maximum Piece W
     C                     Z-ADDBZBLNB    #1BLNB           Seaboard Equiva
     C                     Z-ADDBZBNNB    #1BNNB           Production Qty
     C                     MOVELBZS2ST    #1S2ST           Scheduling Posi
     C                     MOVELBZS4ST    #1S4ST           Sold 100% Froze
     C                     MOVELBZS5ST    #1S5ST           Maximum Shifts
     C                     MOVELBZS6ST    #1S6ST           Value Added Sts
     C                     MOVELBZS8ST    #1S8ST           Label Type
     C                     MOVELBZS9ST    #1S9ST           Item TF Exempt
     C                     MOVELBZTCST    #1TCST           Item TF Classif
     C                     MOVELBZTDST    #1TDST           Default Workcen
     C                     MOVELBZUVST    #1UVST           EDI Status 1
     C                     MOVELBZUWST    #1UWST           EDI Status 2
     C                     MOVELBZUXST    #1UXST           EDI Status 3
     C                     MOVELBZVSST    #1VSST           Record Status
     C                     Z-ADDBZAATM    #1AATM           Job Time
     C                     MOVELBZAYNA    #1AYNA           User Id
     C                     MOVELBZA0NA    #1A0NA           Job Name
     C                     Z-ADDBZAXDT    #1AXDT           Job Date
     C                     Z-ADDBZAIC3    #1AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V1AIC3
     C                     Z-ADDBZHGCD    #1HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V1HGCD
     C                     MOVELBZAVNA    #1AVNA           Description Lin
     C                     MOVELBZLNCD    #1LNCD           Default Commod
     C                     MOVELBZLRCD    #1LRCD           Commodity Price
     C                     MOVELBZAICD    #1AICD           U/M - Pricing
     C                     MOVELBZQ8CD    #1Q8CD           Price Method De
     C                     Z-ADD*ZERO     #RGIDT           Pricing Date Us
      * Clear external version also
     C                     Z-ADD*ZERO     VRGIDT
     C                     Z-ADD*ZERO     #RGDPR           Published Price
     C                     Z-ADD*ZERO     #RGEPR           Absorbed Freigh
     C                     Z-ADD*ZERO     #RGFPR           Accrual (Pricin
     C                     Z-ADD*ZERO     #RGHPR           Customer Price
     C                     Z-ADD*ZERO     #RGGPR           Deviated Price
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MC#1FN    BEGSR
      *================================================================
      * CALC: Subfile record function fields
      *================================================================
      * CALC: Subfile record function fields
      * Get Published Price
      * Set date to use for retrieving price
      * CASE: CTL.Market Price Date is Entered
     C           #CEQDT    IFGT *ZERO                      *IF
     C                     Z-ADD#CEQDT    YL0002           Market Pricing
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD##JDT     YL0002           Market Pricing
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0001  70       Date Used for C
     C                     MOVEL*BLANK    WN0002  2        U/M - Primary
     C                     Z-ADD*ZERO     WN0003  94       Conversion Fact
     C                     MOVEL*BLANK    WN0004  1        Operation Facto
     C                     MOVEL*BLANK    WN0005  2        U/M - Second
     C                     Z-ADD*ZERO     WN0006  94       Conversion Fact
     C                     MOVEL*BLANK    WN0007  1        Operation Facto
     C                     MOVEL*BLANK    WN0008  2        U/M - Third
     C                     MOVEL*BLANK    WN0009  2        U/M - Pricing
     C                     MOVEL*BLANK    WN0010  3        Default Commod
     C                     Z-ADD*ZERO     WN0011 114       Price Adjustmen
      *
      * RTV Pricing: MKTPRC    IF
      * Conversion Documentation
     C                     EXSR UASUBR                     Conversion Docu
      * *** Price Routine was call on or after Shipping, Calculate Price
      * CASE: PAR.Event Called From is All Values
     C           '99'      IFEQ '02'                       *IF
     C           '99'      OREQ '99'
     C           '99'      OREQ '**'
     C           '99'      OREQ 'AO'
     C           '99'      OREQ 'AI'
      * *** Calculate Date Method Price if Selected
      * CASE: PAR.Date Method Code is Entered
     C           *BLANK    IFNE *BLANK                     *IF
      * CLC Date Method        XF - Market Date Method  * 
     C                     CALL 'PDLJXFR'              90  CLC Date Method
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0006  30       Company Number
     C                     PARM *BLANK    WQ0007  3        Date Method Cod
     C                     PARM YL0003    WQ0008  70       Actual Shipped
     C                     PARM YL0004    WQ0009  70       Requested Ship
     C                     PARM YL0005    WQ0010  70       Date of Orig. E
     C                     PARM #1LNCD    WQ0011  3        Commodity Marke
     C                     PARM YL0002    WQ0012  70       Market Pricing
     C           YL0006    PARM YL0006    WQ0013  1        Price Status
     C           #RGIDT    PARM *ZERO     WQ0014  70       Pricing Date Us
     C           #RGDPR    PARM #RGDPR    WQ0015 114       Pricing Retriev
     C                     PARM '99'      WQ0016  2        Event Called Fr
     C                     PARM #1LRCD    WQ0017  7        Commodity Price
     C           WN0001    PARM WN0001    WQ0018  70       Date Used for C
     C           YL0007    PARM *BLANK    WQ0019  5        Date Error Retu
     C                     PARM #1HGCD    WQ0020  70       Item Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDLJXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
      * *** Rtv Mkt Price if Day Code is Blank or Error in WPA or DOS
      * CASE: PAR.Date Method Code is Not Entered
     C           *BLANK    IFEQ *BLANK                     *IF
      * *** Load Date used for calculation (to retrieve Market date)
      * CASE: PAR.Market Pricing Date is NE Zero
     C           YL0002    IFNE *ZERO                      *IF
     C                     Z-ADDYL0002    WN0001           Date Used for C
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Date Used for Calculation is not entered
     C           WN0001    IFEQ *ZERO                      *IF
      * CASE: PAR.Actual Shipped Date is entered
     C           YL0003    IFNE *ZERO                      *IF
     C                     Z-ADDYL0003    WN0001           Date Used for C
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    WN0001           Date Used for C
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * RTV Market Price       RT - Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#1LNCD    WL0001    P      Commodity Marke
     C                     MOVEL#1LRCD    WL0002    P      Commodity Price
     C                     Z-ADDWN0001    WL0003           Market Price Da
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0004    #RGDPR           Commodity Marke
     C                     Z-ADDWL0005    #RGIDT           USR Date Priced
      * Flag as Unpriced if Price Date doesn't match Market date entered
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Pricing Date Used NE PAR.Date Used for Calculati
      *   |- c2    : PGM.*Return code is *Record does not exist
      *   '-
     C           #RGIDT    IFNE WN0001                     *IF
     C           W0RTN     OREQ 'Y2U0005'                  *OR
     C                     MOVEL'U'       YL0006           Price Status
      * If no pricing record was found then flag as pricing error.
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
     C                     MOVEL*BLANK    YL0007           Error Return
     C                     MOVEL'MKT'     YL0007           Error Return
     C                     END                             *FI
     C                     END                             *FI
      * If record not found use default commodity market from company/ite
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * RTV Dflt Comm Mrkt     XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDMNXFR'              90  RTV Dflt Comm M
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0021  30       Company Number
     C                     PARM #1HGCD    WQ0022  70       Item Code
     C           WN0010    PARM *BLANK    WQ0023  3        Default Commod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDMNXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PAR.Commodity Market Code NE PAR.Default Commod Mark basis
     C           #1LNCD    IFNE WN0010                     *IF
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0010    WL0001    P      Commodity Marke
     C                     MOVEL#1LRCD    WL0002    P      Commodity Price
     C                     Z-ADDWN0001    WL0003           Market Price Da
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0004    #RGDPR           Commodity Marke
     C                     Z-ADDWL0005    #RGIDT           USR Date Priced
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert Price to CWT
      * CASE: PAR.Pricing Retrieved Amount is Not Zeros
     C           #RGDPR    IFNE *ZERO                      *IF
      * CLC Convert Price - CW XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDKUXFR'              90  CLC Convert Pri
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0024  30       Company Number
     C                     PARM #1HGCD    WQ0025  70       Item Code
     C                     PARM #RGDPR    WQ0026 114       Unit Price
     C           WN0011    PARM *ZERO     WQ0027 114       Price Adjustmen
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDKUXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     Z-ADDWN0011    #RGDPR           Pricing Retriev
     C                     END                             *FI
      * Get Absorbed Freight
      * RTV Abs Freight Rate   RT - Company Customer  * 
     C                     EXSR SCRVGN
      * Get Accruals
      *
     C                     Z-ADD*ZERO     WN0012  30       Item Structure
     C                     Z-ADD*ZERO     WN0013  30       Item Structure
     C                     Z-ADD*ZERO     WN0014  30       Item Structure
     C                     Z-ADD*ZERO     WN0015 114       Price Adjustmen
      *
      * RTV Pricing: ACCRLS    IF
      * ** Routine to Accumulate Accrual Rate
      * CASE: PAR.Event Called From is All Values
     C           '99'      IFEQ '02'                       *IF
     C           '99'      OREQ '99'
     C           '99'      OREQ '**'
     C           '99'      OREQ 'AO'
     C           '99'      OREQ 'AI'
     C                     Z-ADD*ZERO     YL0009           Accrual Rate
      * ** This will read all accrual codes that are setup for the
      * ** ShipTo customer and accumulate the Accrual Rates.
      * ** If Actual Shipped Date is zeros, use Requested Ship Date
      * CASE: PAR.Actual Shipped Date is entered
     C           YL0003    IFNE *ZERO                      *IF
     C                     Z-ADDYL0003    WUFADT           USR Date Shippe
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD#RGIDT    WUFADT           USR Date Shippe
     C                     END                             *FI
      * Rtv Accrual Info      RT - Customer Accrual  * 
     C                     EXSR SDRVGN
     C                     END                             *FI
      * ** Convert Price to CWT
      * CASE: PAR.Pricing Retrieved Amount is Not Zeros
     C           #RGFPR    IFNE *ZERO                      *IF
      * CLC Convert Price - CW XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDKUXFR'              90  CLC Convert Pri
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0028  30       Company Number
     C                     PARM #1HGCD    WQ0029  70       Item Code
     C                     PARM #RGFPR    WQ0030 114       Unit Price
     C           WN0015    PARM *ZERO     WQ0031 114       Price Adjustmen
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDKUXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     Z-ADDWN0015    #RGFPR           Pricing Retriev
     C                     END                             *FI
      * Conversion Documentation
     C                     EXSR UBSUBR                     Conversion Docu
      * Calc Customer Price
      * RCD.Customer Price 9.4    USR =
      *    *COMPUTE (x1 + x2 + x3)
      * x1    : RCD.Published Price       USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : RCD.Absorbed Freight 7.2  USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : RCD.Accrual (Pricing)     USR
     C           #RGDPR    ADD  #RGEPR    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  #RGFPR    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #RGHPR           Customer Price
      * Look in Customer Price Header/Detail for Deviated price
      * Rtv get deviated price RT - Customer Price Header  * 
     C                     EXSR SJRVGN
      *================================================================
     CSR         MCEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADDP1BKC7    #PBKC7           Ship To Custome
      * Clear external version also
     C                     MOVEL*BLANK    VPBKC7
     C                     MOVEL*BLANK    #CAYTX           Customer Name
     C                     Z-ADD*ZERO     #CEQDT           Market Price Da
      * Clear external version also
     C                     Z-ADD*ZERO     VCEQDT
     C                     Z-ADD*ZERO     #2AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V2AIC3
     C                     Z-ADD*ZERO     #2HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V2HGCD
     C                     MOVEL*BLANK    #2LNCD           Default Commod
     C                     MOVEL*BLANK    #2LRCD           Commodity Price
     C                     MOVEL*BLANK    #2AICD           U/M - Pricing
     C                     MOVEL*BLANK    #2Q8CD           Price Method De
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #1AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#1AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V1AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1HGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1HGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Pricing Date Used to display format
      * Convert date
     C           1000000   ADD  #RGIDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VRGIDT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Ship To Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #PBKC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#PBKC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VPBKC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VPBKC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Market Price Date to display format
      * Convert date
     C           1000000   ADD  #CEQDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCEQDT
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2HGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2HGCD           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Customer Name      RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           BBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADD#PBKC7    BBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSA     CHAIN@BBREE9              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0170' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #CAYTX           Customer Name
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBBAYTX    #CAYTX           Customer Name
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Market Price       RT - Commodity Mrkt Price  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN F0LQCD    WQSB01           Commodity Marke
     C           *LIKE     DEFN F0LRCD    WQSB02           Commodity Price
      * Define keylist
     C           KPSSB     KLIST
     C                     KFLD           WQSB01           Commodity Marke
     C                     KFLD           WQSB02           Commodity Price
     C                     KFLD           F0EQDT           Market Price Da
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Commodity Marke
     C                     KFLD           WQSB02           Commodity Price
      * Setup key
     C                     MOVELWL0001    WQSB01           Commodity Marke
     C                     MOVELWL0002    WQSB02           Commodity Price
     C                     Z-ADDWL0003    F0EQDT           Market Price Da
      * Establish starting position
     C           KPSSB     SETLL@F0CPEP                    *
     C           KRSSB     READE@F0CPEP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1222' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0004           Commodity Marke
     C                     Z-ADD*ZERO     WL0005           USR Date Priced
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDF0A5PR    WL0004           Commodity Marke
     C                     Z-ADDF0EQDT    WL0005           USR Date Priced
     C                     GOTO SBEXIT                     *QUIT
     C           KRSSB     READE@F0CPEP                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Abs Freight Rate   RT - Company Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           EOAIC3           Company Number
     C                     KFLD           EOBKC7           Ship To Custome
      * Setup key
     C                     Z-ADD#1AIC3    EOAIC3           Company Number
     C                     Z-ADD#PBKC7    EOBKC7           Ship To Custome
      * Establish starting position
     C           KRSSC     CHAIN@EOREXM              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     #RGEPR           Absorbed Freigh
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDEOTBNB    #RGEPR           Absorbed Freigh
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Accrual Info      RT - Customer Accrual  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0016  30       Item Structure
     C                     Z-ADD*ZERO     WN0017  30       Item Structure
     C                     Z-ADD*ZERO     WN0018  30       Item Structure
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     #RGFPR           Pricing Retriev
      * Declare restrictor key work fields
     C           *LIKE     DEFN HOBKC7    WQSD01           Ship To Custome
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Ship To Custome
      * Setup key
     C                     Z-ADD#PBKC7    WQSD01           Ship To Custome
      * Establish starting position
     C           KRSSD     SETLL@HORELA                    *
     C           KRSSD     READE@HORELA                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1520' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUBKPR           Accrual Rate
     C                     Z-ADD*ZERO     #RGFPR           Pricing Retriev
     C                     Z-ADD*ZERO     WN0016           Item Structure
     C                     Z-ADD*ZERO     WN0017           Item Structure
     C                     Z-ADD*ZERO     WN0018           Item Structure
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * ** The par.period begin date is either the Actual Shipped date
      * ** from the Order Detail file unless it is zeros, then it is
      * ** replaced by the Requested Ship Date.
      * ** Select the record where the ASD is within the date range
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Period Beginning Date GE DB1.Period Beginning Da
      *   |- c2    : PAR.Period Beginning Date LE DB1.Period Ending Date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUFADT    IFGE HOBFDT                     *IF
     C           WUFADT    IFLE HOA2DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * RTV Accrual Info-All   RT - Accrual Code Master  * 
     C                     EXSR SERVGN
      * CASE: LCL.Affect Invoice Price is yes
     C           YL0010    IFEQ 'Y'                        *IF
      * ** Accumulate rate based on All Products Y/N value
      * CASE: DB1.All Products (Y/N) is Yes
     C           HOTTST    IFEQ 'Y'                        *IF
      * ** If YES, then use the rate from the Customer Accrual record
     C                     ADD  HOBKPR    #RGFPR           Pricing Retriev
     C                     ELSE
      * CASE: DB1.All Products (Y/N) is Yes + Exceptions
     C           HOTTST    IFEQ 'X'                        *IF
      * ** If YES + Exceptions, then add the rate from either the Custome
      * ** Accrual Str or Customer Accrual Item file. The value in
      * ** the Accrual Detail Search field will determine which file.
      * ** If no record in either file then add the Customer Accural rate
      * CASE: DB1.Accrual Detail Search is Item
     C           HOQFSX    IFEQ 'I'                        *IF
      * Rtv Item Accrual Rate RT - Customer Accrual Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#PBKC7    WL0006           Ship To Custome
     C                     MOVELHOOJCD    WL0007    P      Accrual Code
     C                     Z-ADDHOGUNY    WL0008           CAH Sequence No
     C                     Z-ADD#1HGCD    WL0009           Item Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0010    YL0011           Accrual Rate
     C                     ELSE
      * CASE: DB1.Accrual Detail Search is Item Structure
     C           HOQFSX    IFEQ 'S'                        *IF
      * ** Retrieve the Item Structure fields from the Order Detail
      * Rtv Item FOB Price    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0011           Company Number
     C                     Z-ADDYL0008    WL0012           Order Number
     C                     Z-ADD#1HGCD    WL0013           Item Code
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0014    YN0035           Price Overage O
     C                     Z-ADDWL0015    YN0036           Contract Number
     C                     MOVELWL0016    YN0037    P      Price Status
     C                     MOVELWL0017    YN0038    P      U/M - Ordered
     C                     Z-ADDWL0018    YN0039           Unit Price
     C                     Z-ADDWL0019    YN0040           Unit Price - Cr
     C                     Z-ADDWL0020    YN0041           Unit Price Orde
     C                     Z-ADDWL0021    YN0042           Unit Weight Ord
     C                     Z-ADDWL0022    YN0043           Actual Shipped
     C                     MOVELWL0023    YN0044    P      Affect Inventor
     C                     MOVELWL0024    YN0045    P      Affect Sales Do
     C                     MOVELWL0025    YN0046    P      Affect Sales Pn
     C                     Z-ADDWL0026    WN0016           Item Structure
     C                     Z-ADDWL0027    WN0017           Item Structure
     C                     Z-ADDWL0028    WN0018           Item Structure
     C                     MOVELWL0029    YN0047    P      Affect Trade Fu
     C                     MOVELWL0030    YN0048    P      Affect Commissi
     C                     MOVELWL0031    YN0049    P      Affect Pricing
     C                     MOVELWL0032    YN0050    P      Ord TF Exempt C
      * RTV Cust Accrl Str     RT - Customer Accrual Str  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#PBKC7    WL0033           Ship To Custome
     C                     MOVELHOOJCD    WL0034    P      Accrual Code
     C                     Z-ADDHOGUNY    WL0035           CAH Sequence No
     C                     Z-ADDWN0016    WL0036           Item Structure
     C                     Z-ADDWN0017    WL0037           Item Structure
     C                     Z-ADDWN0018    WL0044           Item Structure
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0038    YL0011           Accrual Rate
     C                     MOVELWL0039    YN0027    P      Accrual Rate Ty
     C                     MOVELWL0040    YN0051    P      CAS Unused Sts
     C                     MOVELWL0041    YN0052    P      CAS Unused Sts
     C                     Z-ADDWL0042    YN0053           CAS Rate Unused
     C                     Z-ADDWL0043    YN0054           CAS Rate Unused
     C                     END                             *FI
     C                     END                             *FI
      * ** If accrual rate is still zeros, use rate from cust accrual rec
      * CASE: LCL.Accrual Rate is equal to zero
     C           YL0011    IFEQ *ZERO                      *IF
     C                     Z-ADDHOBKPR    YL0011           Accrual Rate
     C                     END                             *FI
     C                     ADD  YL0011    #RGFPR           Pricing Retriev
     C                     ELSE
      * CASE: DB1.All Products (Y/N) is No
     C           HOTTST    IFEQ 'N'                        *IF
      * ** If NO, then only accumulate the rate if there is a record
      * ** in either the Customer Accrual Str or Customer Accrual Item
      * ** file. If no record in either file, just add zeros.
      * CASE: DB1.Accrual Detail Search is Item
     C           HOQFSX    IFEQ 'I'                        *IF
      * Rtv Item Accrual Rate RT - Customer Accrual Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#PBKC7    WL0006           Ship To Custome
     C                     MOVELHOOJCD    WL0007    P      Accrual Code
     C                     Z-ADDHOGUNY    WL0008           CAH Sequence No
     C                     Z-ADD#1HGCD    WL0009           Item Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0010    YL0011           Accrual Rate
     C                     ELSE
      * CASE: DB1.Accrual Detail Search is Item Structure
     C           HOQFSX    IFEQ 'S'                        *IF
      * Rtv Item FOB Price    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0011           Company Number
     C                     Z-ADDYL0008    WL0012           Order Number
     C                     Z-ADD#1HGCD    WL0013           Item Code
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0014    YN0035           Price Overage O
     C                     Z-ADDWL0015    YN0036           Contract Number
     C                     MOVELWL0016    YN0037    P      Price Status
     C                     MOVELWL0017    YN0038    P      U/M - Ordered
     C                     Z-ADDWL0018    YN0039           Unit Price
     C                     Z-ADDWL0019    YN0040           Unit Price - Cr
     C                     Z-ADDWL0020    YN0041           Unit Price Orde
     C                     Z-ADDWL0021    YN0042           Unit Weight Ord
     C                     Z-ADDWL0022    YN0043           Actual Shipped
     C                     MOVELWL0023    YN0044    P      Affect Inventor
     C                     MOVELWL0024    YN0045    P      Affect Sales Do
     C                     MOVELWL0025    YN0046    P      Affect Sales Pn
     C                     Z-ADDWL0026    WN0016           Item Structure
     C                     Z-ADDWL0027    WN0017           Item Structure
     C                     Z-ADDWL0028    WN0018           Item Structure
     C                     MOVELWL0029    YN0047    P      Affect Trade Fu
     C                     MOVELWL0030    YN0048    P      Affect Commissi
     C                     MOVELWL0031    YN0049    P      Affect Pricing
     C                     MOVELWL0032    YN0050    P      Ord TF Exempt C
      * RTV Cust Accrl Str     RT - Customer Accrual Str  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#PBKC7    WL0033           Ship To Custome
     C                     MOVELHOOJCD    WL0034    P      Accrual Code
     C                     Z-ADDHOGUNY    WL0035           CAH Sequence No
     C                     Z-ADDWN0016    WL0036           Item Structure
     C                     Z-ADDWN0017    WL0037           Item Structure
     C                     Z-ADDWN0018    WL0044           Item Structure
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0038    YL0011           Accrual Rate
     C                     MOVELWL0039    YN0027    P      Accrual Rate Ty
     C                     MOVELWL0040    YN0051    P      CAS Unused Sts
     C                     MOVELWL0041    YN0052    P      CAS Unused Sts
     C                     Z-ADDWL0042    YN0053           CAS Rate Unused
     C                     Z-ADDWL0043    YN0054           CAS Rate Unused
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  YL0011    #RGFPR           Pricing Retriev
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSD     READE@HORELA                  90*
     C                     ENDDO
      * USER: Exit processing
      * RTV Item Pricing Info  RT - Company Item  * 
     C                     EXSR SIRVGN
      * CASE:
      *  - c1 OR c3 OR c4
      *   |- c1    : LCL.U/M - Pricing is Carcass Hundred Weight
      *   |- c3    : LCL.U/M - Pricing is Thousand
      *   |- c4    : LCL.U/M - Pricing is Tons
      *   '-
     C           YL0012    IFEQ 'CW'                       *IF
     C           YL0012    OREQ 'M'                        *OR
     C           YL0012    OREQ 'TN'                       *OR
      * Hundred Weight
      * CASE: LCL.U/M - Pricing is Hundred Weight
     C           YL0012    IFEQ 'CW'                       *IF
      * PAR.Pricing Retrieved Amount =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pricing Retrieved Amount
      * *     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CON.100
     C           #RGFPR    MULT 100       W0WB00           *Synon (15,5) w
     C                     Z-ADDW0WB00    #RGFPR           Pricing Retriev
     C                     END                             *FI
      * Thousand
      * CASE: LCL.U/M - Pricing is Thousand
     C           YL0012    IFEQ 'M'                        *IF
      * PAR.Pricing Retrieved Amount =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pricing Retrieved Amount
      * *     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CON.1000
     C           #RGFPR    MULT 1000      W0WB00           *Synon (15,5) w
     C                     Z-ADDW0WB00    #RGFPR           Pricing Retriev
     C                     END                             *FI
      * Tons
      * CASE: LCL.U/M - Pricing is Tons
     C           YL0012    IFEQ 'TN'                       *IF
      * PAR.Pricing Retrieved Amount =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pricing Retrieved Amount
      * *     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CON.2000
     C           #RGFPR    MULT 2000      W0WB00           *Synon (15,5) w
     C                     Z-ADDW0WB00    #RGFPR           Pricing Retriev
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Accrual Info-All   RT - Accrual Code Master  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           HLOJCD           Accrual Code
      * Setup key
     C                     MOVELHOOJCD    HLOJCD           Accrual Code
      * Establish starting position
     C           KRSSE     CHAIN@HLREK4              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1514' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0010           Affect Invoice
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELHLFFTX    YL0010           Affect Invoice
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Item Accrual Rate RT - Customer Accrual Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           HPBKC7           Ship To Custome
     C                     KFLD           HPOJCD           Accrual Code
     C                     KFLD           HPGUNY           CAH Sequence No
     C                     KFLD           HPHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0006    HPBKC7           Ship To Custome
     C                     MOVELWL0007    HPOJCD           Accrual Code
     C                     Z-ADDWL0008    HPGUNY           CAH Sequence No
     C                     Z-ADDWL0009    HPHGCD           Item Code
      * Establish starting position
     C           KRSSF     CHAIN@HPRELD              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1522' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0010           Accrual Rate
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDHPBKPR    WL0010           Accrual Rate
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Item FOB Price    RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSG01           Company Number
     C           *LIKE     DEFN OMC4NB    WQSG02           Order Number
     C           *LIKE     DEFN OMHGCD    WQSG03           Item Code
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Company Number
     C                     KFLD           WQSG02           Order Number
     C                     KFLD           WQSG03           Item Code
      * Setup key
     C                     Z-ADDWL0011    WQSG01           Company Number
     C                     Z-ADDWL0012    WQSG02           Order Number
     C                     Z-ADDWL0013    WQSG03           Item Code
      * Establish starting position
     C           KRSSG     SETLL@BGWKFW                    *
     C           KRSSG     READE@BGWKFW                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1309' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0014           Price Overage O
     C                     Z-ADD*ZERO     WL0015           Contract Number
     C                     MOVEL*BLANK    WL0016           Price Status
     C                     MOVEL*BLANK    WL0017           U/M - Ordered
     C                     Z-ADD*ZERO     WL0018           Unit Price
     C                     Z-ADD*ZERO     WL0019           Unit Price - Cr
     C                     Z-ADD*ZERO     WL0020           Unit Price Orde
     C                     Z-ADD*ZERO     WL0021           Unit Weight Ord
     C                     Z-ADD*ZERO     WL0022           Actual Shipped
     C                     MOVEL*BLANK    WL0023           Affect Inventor
     C                     MOVEL*BLANK    WL0024           Affect Sales Do
     C                     MOVEL*BLANK    WL0025           Affect Sales Pn
     C                     Z-ADD*ZERO     WL0026           Item Structure
     C                     Z-ADD*ZERO     WL0027           Item Structure
     C                     Z-ADD*ZERO     WL0028           Item Structure
     C                     MOVEL*BLANK    WL0029           Affect Trade Fu
     C                     MOVEL*BLANK    WL0030           Affect Commissi
     C                     MOVEL*BLANK    WL0031           Affect Pricing
     C                     MOVEL*BLANK    WL0032           Ord TF Exempt C
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDOMBZPR    WL0014           Price Overage O
     C                     Z-ADDOML6NB    WL0015           Contract Number
     C                     MOVELOMU1ST    WL0016           Price Status
     C                     MOVELOMAGCD    WL0017           U/M - Ordered
     C                     Z-ADDOMAKPR    WL0018           Unit Price
     C                     Z-ADDOMALPR    WL0019           Unit Price - Cr
     C                     Z-ADDOMAUPR    WL0020           Unit Price Orde
     C                     Z-ADDOMAVWG    WL0021           Unit Weight Ord
     C                     Z-ADDOMGNDT    WL0022           Actual Shipped
     C                     MOVELOMAMST    WL0023           Affect Inventor
     C                     MOVELOMANST    WL0024           Affect Sales Do
     C                     MOVELOMVAST    WL0025           Affect Sales Pn
     C                     Z-ADDOMRGNB    WL0026           Item Structure
     C                     Z-ADDOMRHNB    WL0027           Item Structure
     C                     Z-ADDOMRINB    WL0028           Item Structure
     C                     MOVELOMF0SX    WL0029           Affect Trade Fu
     C                     MOVELOMF1SX    WL0030           Affect Commissi
     C                     MOVELOMF2SX    WL0031           Affect Pricing
     C                     MOVELOMF4SX    WL0032           Ord TF Exempt C
     C           KRSSG     READE@BGWKFW                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Cust Accrl Str     RT - Customer Accrual Str  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0038           Accrual Rate
     C                     MOVEL*BLANK    WL0039           Accrual Rate Ty
     C                     MOVEL*BLANK    WL0040           CAS Unused Sts
     C                     MOVEL*BLANK    WL0041           CAS Unused Sts
     C                     Z-ADD*ZERO     WL0042           CAS Rate Unused
     C                     Z-ADD*ZERO     WL0043           CAS Rate Unused
      * Declare restrictor key work fields
     C           *LIKE     DEFN C8BKC7    WQSH01           Ship To Custome
     C           *LIKE     DEFN C8OJCD    WQSH02           Accrual Code
     C           *LIKE     DEFN C8GUNY    WQSH03           CAH Sequence No
     C           *LIKE     DEFN C8RGNB    WQSH04           Item Structure
     C           *LIKE     DEFN C8RHNB    WQSH05           Item Structure
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WQSH01           Ship To Custome
     C                     KFLD           WQSH02           Accrual Code
     C                     KFLD           WQSH03           CAH Sequence No
     C                     KFLD           WQSH04           Item Structure
     C                     KFLD           WQSH05           Item Structure
      * Setup key
     C                     Z-ADDWL0033    WQSH01           Ship To Custome
     C                     MOVELWL0034    WQSH02           Accrual Code
     C                     Z-ADDWL0035    WQSH03           CAH Sequence No
     C                     Z-ADDWL0036    WQSH04           Item Structure
     C                     Z-ADDWL0037    WQSH05           Item Structure
      * Establish starting position
     C           KRSSH     SETLL@C8RES1                    *
     C           KRSSH     READE@C8RES1                  90*
      * Data record not found
     C   90                MOVEL'USR3294' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Item Structure Class Code is Equal Zero
     C           C8RINB    IFEQ *ZERO                      *IF
      * PAR = DB1 By name
     C                     Z-ADDC8BKPR    WL0038           Accrual Rate
     C                     MOVELC8SHSX    WL0039           Accrual Rate Ty
     C                     MOVELC8QTSX    WL0040           CAS Unused Sts
     C                     MOVELC8QUSX    WL0041           CAS Unused Sts
     C                     Z-ADDC8FKPR    WL0042           CAS Rate Unused
     C                     Z-ADDC8FLPR    WL0043           CAS Rate Unused
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Item Structure Class Code EQ PAR.Item Structure Class U
     C           C8RINB    IFEQ WL0044                     *IF
      * PAR = DB1 By name
     C                     Z-ADDC8BKPR    WL0038           Accrual Rate
     C                     MOVELC8SHSX    WL0039           Accrual Rate Ty
     C                     MOVELC8QTSX    WL0040           CAS Unused Sts
     C                     MOVELC8QUSX    WL0041           CAS Unused Sts
     C                     Z-ADDC8FKPR    WL0042           CAS Rate Unused
     C                     Z-ADDC8FLPR    WL0043           CAS Rate Unused
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSH     READE@C8RES1                  90*
     C                     ENDDO
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Item Pricing Info  RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WAHGCD           Item Code
      * Setup key
     C                     Z-ADD#1AIC3    WAAIC3           Company Number
     C                     Z-ADD#1HGCD    WAHGCD           Item Code
      * Establish starting position
     C           KRSSI     CHAIN@BZREJU              90    *
      * Data record not found
     C   90                MOVEL'USR0326' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAAICD    YL0012           U/M - Pricing
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv get deviated price RT - Customer Price Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN C6BKC7    WQSJ01           Ship To Custome
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Ship To Custome
      * Setup key
     C                     Z-ADD#PBKC7    WQSJ01           Ship To Custome
      * Establish starting position
     C           KRSSJ     SETLL@C6RESO                    *
     C           KRSSJ     READE@C6RESO                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3290' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     #RGGPR           Customer Price
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : DB1.Price Start Date LE PAR.Pricing Date Used
      *   |- c2    : DB1.Price End Date GE PAR.Pricing Date Used
      *   |- c3    : DB1.Record Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C6PLDT    IFLE #RGIDT                     *IF
     C           C6PMDT    IFGE #RGIDT                     *IF
     C           C6VSST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Max Wt and price  RT - Customer Price Detail  * 
     C                     EXSR SKRVGN
     C                     END                             *FI
     C           KRSSJ     READE@C6RESO                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv Max Wt and price  RT - Customer Price Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           C7BKC7           Ship To Custome
     C                     KFLD           C7BVTM           Price Code
     C                     KFLD           C7HGCD           Item Code
      * Setup key
     C                     Z-ADDC6BKC7    C7BKC7           Ship To Custome
     C                     Z-ADDC6BVTM    C7BVTM           Price Code
     C                     Z-ADD#1HGCD    C7HGCD           Item Code
      * Establish starting position
     C           KRSSK     CHAIN@C7RESR              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3292' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0013           Maximum Weight
     C                     Z-ADD*ZERO     #RGGPR           Customer Price
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDC7KWWG    YL0013           Maximum Weight
     C                     Z-ADDC7FIPR    #RGGPR           Customer Price
     C                     GOTO SKEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * RTV Program Setup      RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0019    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSL     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    YL0017           Allow Multi-Com
     C                     MOVELDRMPNA    YL0018           Default Printer
     C                     MOVELDRBCCD    YL0016           Salesperson Cod
     C                     MOVELDRBUVN    WN0020           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0045    DTAJVN           User Profile Na
     C                     MOVELWL0046    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSM     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0047           Company Number
     C                     MOVELDTAJCD    WL0048           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSN01           Application Cod
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WQSN01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSN01           Application Cod
     C                     MOVEL'A/R'     WQSN01           Application Cod
      * Establish starting position
     C           KRSSN     SETLL@DNRESF                    *
     C           KRSSN     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SORVGN
     C                     END                             *FI
     C           KRSSN     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSO01           Application Cod
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           WQSO01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSO01           Application Cod
      * Establish starting position
     C           KRSSO     SETLL@DNRESF                    *
     C           KRSSO     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSO     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Conversion Documentation
      *================================================================
      * Market Price will be converted to CWT because Overages will be
      * by CWT if it is Customer Overage, and Market Price may not be.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Conversion Documentation
      *================================================================
      * *****
      * ** 05/25/2007 LJB DLY029
      * ** Accumulate rate for all Accrual Codes for this Ship To
      * ** Customer based on the value in the All Products Y/N field
      * **
      * ** If Actual Shipped Date is zeros, use the Requested Ship Date.
      * **
      * ** If YES, then use the rate from the Customer Accrual record.
      * **
      * ** If YES + EXCEPTIONS, then use the rate from either the Custome
      * ** Accrual Structure or Customer Accrual Item file which is based
      * ** on the value in Accrual Detail Search field. If no record in
      * ** either file, then use the rate in the Customer Accrual record.
      * **
      * ** If NO, then only accumulate the rate if there is a record
      * ** in either the Customer Accrual Str or Customer Accrual Item
      * ** file. If no record in either file, just add zeros.
      * **
      * ** Price will be converted to CWT
      * *****
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C           ZINPOS    IFGE 02560
     C           ZINPOS    ANDLE06144
      * Cursor in the subfile record area
      * Reset cursor position to the basic (first) record for lookup
     C           W0CRW     SUB  10        W0CSRR  50
     C           02560     ADD  W0CCL     ZINPOS
      * Calculate rrn of the cursor position
     C                     ADD  ##SFRC    W0CSRR
     C                     END
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     END
     C           W0CFL     IFEQ *BLANK
     C                     Z-ADD0         W0CSRR
     C                     END
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD10        ZHSTRW  40
     C                     Z-ADD23        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              92    *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field USR First Position
     C                     MOVEL*BLANK    WUI3ST  1
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field USR Date Shipped
     C                     Z-ADD*ZERO     WUFADT  70
      * Define work field Accrual Code
     C                     MOVEL*BLANK    WUOJCD  3
      * Define work field Period Ending Date
     C                     Z-ADD*ZERO     WUA2DT  70
      * Define work field Accrual Rate
     C                     Z-ADD*ZERO     WUBKPR  96
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAHGCD           Item Code
     C                     Z-ADD*ZERO     WAAWPC           Conversion Fact
     C                     Z-ADD*ZERO     WAAXPC           Conversion Fact
     C                     Z-ADD*ZERO     WAAIWG           Unit Weight
     C                     Z-ADD*ZERO     WACZWG           Minimum Weight
     C                     Z-ADD*ZERO     WAC0WG           Maximum Weight
     C                     Z-ADD*ZERO     WAURTN           Number Cases On
     C                     Z-ADD*ZERO     WAAJC8           Vendor - Item D
     C                     Z-ADD*ZERO     WARINB           Item Structure
     C                     Z-ADD*ZERO     WARHNB           Item Structure
     C                     Z-ADD*ZERO     WARGNB           Item Structure
     C                     Z-ADD*ZERO     WATFNB           Transportation
     C                     Z-ADD*ZERO     WATMVA           Maximum Audit V
     C                     Z-ADD*ZERO     WATNVA           Minimum Audit V
     C                     Z-ADD*ZERO     WABLPR           Market Overage
     C                     Z-ADD*ZERO     WABMPR           Standard Overag
     C                     Z-ADD*ZERO     WACMCO           Item Pricing Co
     C                     Z-ADD*ZERO     WACHTM           Fresh Chilling
     C                     Z-ADD*ZERO     WASWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WAPPHE           Pieces Per Head
     C                     Z-ADD*ZERO     WAICN1           Item Category N
     C                     Z-ADD*ZERO     WAICN2           Item Category N
     C                     Z-ADD*ZERO     WAV2NB           Item Category N
     C                     Z-ADD*ZERO     WAITCN           Item Category N
     C                     Z-ADD*ZERO     WAITC5           Item Category N
     C                     Z-ADD*ZERO     WAICN6           Item Category N
     C                     Z-ADD*ZERO     WAICN7           Item Category N
     C                     Z-ADD*ZERO     WAICN8           Item Category N
     C                     Z-ADD*ZERO     WAICN9           Item Category N
     C                     Z-ADD*ZERO     WAICN0           Item Category N
     C                     Z-ADD*ZERO     WASFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     WAA3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     WASJNB           CI Unused Numbe
     C                     Z-ADD*ZERO     WASKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WASLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WASMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WACFNB           PM Pounds per H
     C                     Z-ADD*ZERO     WACGNB           PM Line Time Ef
     C                     Z-ADD*ZERO     WAILNB           PM % 2nds Facto
     C                     Z-ADD*ZERO     WACHNB           Use/Freeze/Sell
     C                     Z-ADD*ZERO     WACINB           PM Batch Size
     C                     Z-ADD*ZERO     WACJNB           PM Lot Size
     C                     Z-ADD*ZERO     WACMNB           Partial Item Co
     C                     Z-ADD*ZERO     WACNNB           WIP Item Code
     C                     Z-ADD*ZERO     WACRNB           WIP Reject Code
     C                     Z-ADD*ZERO     WACSNB           Std Costing Uni
     C                     Z-ADD*ZERO     WACVNB           FP Std Green We
     C                     Z-ADD*ZERO     WACWNB           PM Standard LBS
     C                     Z-ADD*ZERO     WACXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     WACZNB           PM Formula LBS/
     C                     Z-ADD*ZERO     WAC0NB           PM Finished LBS
     C                     Z-ADD*ZERO     WAB4NB           PM R/M Type Cod
     C                     Z-ADD*ZERO     WAB5NB           PM Line Number
     C                     Z-ADD*ZERO     WABDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WABJNB           Bags Per Unit
     C                     Z-ADD*ZERO     WAF5WG           Item Target Pri
     C                     Z-ADD*ZERO     WAF6WG           Minimum Piece W
     C                     Z-ADD*ZERO     WAF7WG           Maximum Piece W
     C                     Z-ADD*ZERO     WABLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     WABNNB           Production Qty
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0WB00 155       *Synon (15,5) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL
     C                     MOVE ZZFLB     @1FLB
     C                     MOVE ZZFMB     @1FMB
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'Y'       W0PMT   1
      * Define local variables for subroutine SBRVGN.
     C                     MOVEL*BLANK    WL0001  3
     C                     MOVEL*BLANK    WL0002  7
     C                     Z-ADD*ZERO     WL0003  70
     C                     Z-ADD*ZERO     WL0004 114
     C                     Z-ADD*ZERO     WL0005  70
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0006  70
     C                     MOVEL*BLANK    WL0007  3
     C                     Z-ADD*ZERO     WL0008  50
     C                     Z-ADD*ZERO     WL0009  70
     C                     Z-ADD*ZERO     WL0010  96
      * Define local variables for subroutine SGRVGN.
     C                     Z-ADD*ZERO     WL0011  30
     C                     Z-ADD*ZERO     WL0012  70
     C                     Z-ADD*ZERO     WL0013  70
     C                     Z-ADD*ZERO     WL0014 114
     C                     Z-ADD*ZERO     WL0015  70
     C                     MOVEL*BLANK    WL0016  1
     C                     MOVEL*BLANK    WL0017  2
     C                     Z-ADD*ZERO     WL0018 114
     C                     Z-ADD*ZERO     WL0019 114
     C                     Z-ADD*ZERO     WL0020 114
     C                     Z-ADD*ZERO     WL0021 112
     C                     Z-ADD*ZERO     WL0022  70
     C                     MOVEL*BLANK    WL0023  1
     C                     MOVEL*BLANK    WL0024  1
     C                     MOVEL*BLANK    WL0025  1
     C                     Z-ADD*ZERO     WL0026  30
     C                     Z-ADD*ZERO     WL0027  30
     C                     Z-ADD*ZERO     WL0028  30
     C                     MOVEL*BLANK    WL0029  1
     C                     MOVEL*BLANK    WL0030  1
     C                     MOVEL*BLANK    WL0031  1
     C                     MOVEL*BLANK    WL0032  2
      * Define local variables for subroutine SHRVGN.
     C                     Z-ADD*ZERO     WL0033  70
     C                     MOVEL*BLANK    WL0034  3
     C                     Z-ADD*ZERO     WL0035  50
     C                     Z-ADD*ZERO     WL0036  30
     C                     Z-ADD*ZERO     WL0037  30
     C                     Z-ADD*ZERO     WL0038  96
     C                     MOVEL*BLANK    WL0039  2
     C                     MOVEL*BLANK    WL0040  1
     C                     MOVEL*BLANK    WL0041  1
     C                     Z-ADD*ZERO     WL0042  96
     C                     Z-ADD*ZERO     WL0043  96
     C                     Z-ADD*ZERO     WL0044  30
      * Define local variables for subroutine SMRVGN.
     C                     MOVEL*BLANK    WL0045 10
     C                     MOVEL*BLANK    WL0046  6
     C                     Z-ADD*ZERO     WL0047  30
     C                     MOVEL*BLANK    WL0048  3
      * Define local work field Market Price Date
     C                     Z-ADD*ZERO     YL0001  70
      * Define local work field Market Pricing Date
     C                     Z-ADD*ZERO     YL0002  70
      * Define local work field Actual Shipped Date
     C                     Z-ADD*ZERO     YL0003  70
      * Define local work field Requested Ship Date
     C                     Z-ADD*ZERO     YL0004  70
      * Define local work field Date of Orig. Entry Det.
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field Price Status
     C                     MOVEL*BLANK    YL0006  1
      * Define local work field Error Return
     C                     MOVEL*BLANK    YL0007  5
      * Define local work field Order Number
     C                     Z-ADD*ZERO     YL0008  70
      * Define local work field Accrual Rate
     C                     Z-ADD*ZERO     YL0009  96
      * Define null work field All Products (Y/N)
     C                     MOVEL*BLANK    YN0001  1
      * Define null work field Accrual Rate Type
     C                     MOVEL*BLANK    YN0002  2
      * Define null work field Comm Threshold Period
     C                     MOVEL*BLANK    YN0003  2
      * Define null work field CAH Unused Date 1
     C                     Z-ADD*ZERO     YN0004  70
      * Define null work field CAH Unused Date 2
     C                     Z-ADD*ZERO     YN0005  70
      * Define null work field Comm Min Amt /Period
     C                     Z-ADD*ZERO     YN0006 112
      * Define null work field Comm Retroactive Sts
     C                     MOVEL*BLANK    YN0007  1
      * Define null work field Accrual Detail Search
     C                     MOVEL*BLANK    YN0008  1
      * Define null work field Broker Code
     C                     MOVEL*BLANK    YN0009  6
      * Define null work field Max Accrual Amount
     C                     Z-ADD*ZERO     YN0010 112
      * Define null work field Accrual Description
     C                     MOVEL*BLANK    YN0011 30
      * Define null work field Automatic Accrual (Y/N)
     C                     MOVEL*BLANK    YN0012  1
      * Define null work field Print On Invoice (Y/N)
     C                     MOVEL*BLANK    YN0013  1
      * Define null work field Accrue Difference (Y/N)
     C                     MOVEL*BLANK    YN0014  1
      * Define null work field Add-on/Allowance
     C                     MOVEL*BLANK    YN0015  1
      * Define null work field Accrual Type
     C                     MOVEL*BLANK    YN0016  2
      * Define null work field Sub Ledger Code
     C                     MOVEL*BLANK    YN0017  2
      * Define null work field Reverse Accrual Code
     C                     MOVEL*BLANK    YN0018  3
      * Define null work field U/M - Primary Dft
     C                     MOVEL*BLANK    YN0019  2
      * Define null work field G/L Code Dr
     C                     MOVEL*BLANK    YN0020  8
      * Define null work field G/L Code Cr
     C                     MOVEL*BLANK    YN0021  8
      * Define null work field G/L Code Difference Dr
     C                     MOVEL*BLANK    YN0022  8
      * Define null work field G/L Code Difference Cr
     C                     MOVEL*BLANK    YN0023  8
      * Define null work field Ledger Accrual (Y/N)
     C                     MOVEL*BLANK    YN0024  1
      * Define null work field All Products (Y/N)
     C                     MOVEL*BLANK    YN0025  1
      * Define null work field Accrual Rate
     C                     Z-ADD*ZERO     YN0026  96
      * Define null work field Accrual Rate Type
     C                     MOVEL*BLANK    YN0027  2
      * Define null work field Accrual Detail Search
     C                     MOVEL*BLANK    YN0028  1
      * Define null work field Standard Schedule (Y/N)
     C                     MOVEL*BLANK    YN0029  1
      * Define null work field Affect Sales Realz Rpt
     C                     MOVEL*BLANK    YN0030  1
      * Define local work field Affect Invoice Price
     C                     MOVEL*BLANK    YL0010  1
      * Define null work field Invoice Print Type
     C                     MOVEL*BLANK    YN0031  2
      * Define null work field Max Accrual Amount
     C                     Z-ADD*ZERO     YN0032 112
      * Define null work field Max Accrual Amount Type
     C                     MOVEL*BLANK    YN0033  2
      * Define null work field Record Status
     C                     MOVEL*BLANK    YN0034  1
      * Define local work field Accrual Rate
     C                     Z-ADD*ZERO     YL0011  96
      * Define null work field Price Overage Override
     C                     Z-ADD*ZERO     YN0035 114
      * Define null work field Contract Number
     C                     Z-ADD*ZERO     YN0036  70
      * Define null work field Price Status
     C                     MOVEL*BLANK    YN0037  1
      * Define null work field U/M - Ordered
     C                     MOVEL*BLANK    YN0038  2
      * Define null work field Unit Price
     C                     Z-ADD*ZERO     YN0039 114
      * Define null work field Unit Price - Credit
     C                     Z-ADD*ZERO     YN0040 114
      * Define null work field Unit Price Ordered U/M
     C                     Z-ADD*ZERO     YN0041 114
      * Define null work field Unit Weight Ordered U/M
     C                     Z-ADD*ZERO     YN0042 112
      * Define null work field Actual Shipped Date
     C                     Z-ADD*ZERO     YN0043  70
      * Define null work field Affect Inventory Status
     C                     MOVEL*BLANK    YN0044  1
      * Define null work field Affect Sales Doll Status
     C                     MOVEL*BLANK    YN0045  1
      * Define null work field Affect Sales Pnds Status
     C                     MOVEL*BLANK    YN0046  1
      * Define null work field Affect Trade Fund
     C                     MOVEL*BLANK    YN0047  1
      * Define null work field Affect Commission
     C                     MOVEL*BLANK    YN0048  1
      * Define null work field Affect Pricing
     C                     MOVEL*BLANK    YN0049  1
      * Define null work field Ord TF Exempt Code
     C                     MOVEL*BLANK    YN0050  2
      * Define null work field CAS Unused Sts 1
     C                     MOVEL*BLANK    YN0051  1
      * Define null work field CAS Unused Sts 2
     C                     MOVEL*BLANK    YN0052  1
      * Define null work field CAS Rate Unused 1
     C                     Z-ADD*ZERO     YN0053  96
      * Define null work field CAS Rate Unused 2
     C                     Z-ADD*ZERO     YN0054  96
      * Define null work field U/M - Primary
     C                     MOVEL*BLANK    YN0055  2
      * Define null work field Conversion Factor 1
     C                     Z-ADD*ZERO     YN0056  94
      * Define null work field Operation Factor 1
     C                     MOVEL*BLANK    YN0057  1
      * Define null work field U/M - Second
     C                     MOVEL*BLANK    YN0058  2
      * Define null work field Conversion Factor 2
     C                     Z-ADD*ZERO     YN0059  94
      * Define null work field Operation Factor 2
     C                     MOVEL*BLANK    YN0060  1
      * Define null work field U/M - Third
     C                     MOVEL*BLANK    YN0061  2
      * Define local work field U/M - Pricing
     C                     MOVEL*BLANK    YL0012  2
      * Define null work field Unit Weight
     C                     Z-ADD*ZERO     YN0062 112
      * Define null work field Production Date Control
     C                     MOVEL*BLANK    YN0063  1
      * Define null work field Catch Weight Status
     C                     MOVEL*BLANK    YN0064  1
      * Define null work field Default Commod Mark basis
     C                     MOVEL*BLANK    YN0065  3
      * Define null work field Commodity Price Group
     C                     MOVEL*BLANK    YN0066  7
      * Define local work field Maximum Weight
     C                     Z-ADD*ZERO     YL0013 112
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0014  3
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0015  30
      * Define local work field Salesperson Code
     C                     MOVEL*BLANK    YL0016  3
      * Define local work field Allow Multi-Company
     C                     MOVEL*BLANK    YL0017  1
      * Define local work field Default Printer
     C                     MOVEL*BLANK    YL0018 10
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD14        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Program Notes
      * CASE: *OTHERWISE
      * Created by  :  ISTADAM
      * Date        :  Sept 10th 2007
      * Project     :  DLY029T
      * Description : Display records from the Company Item file
      *               showing pricing information. The pricing is based o
      *               the Market Price Date that the user can set.
      *               They can also filter the subfile based on various
      *               fields from the Company Item file.
      *
     C                     MOVEL*BLANK    WN0019 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0019           User Profile Na
      *
     C                     MOVEL*BLANK    WN0020 10        User Code Model
      *
      * VAL User/Application   IF
      * RTV Program Setup      RT - User Profile Control  * 
     C                     EXSR SLRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0019    ZA0001           User Profile Na
     C                     MOVEL'A/R'     ZA0002           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0020    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0019    WL0045    P      User Profile Na
     C                     MOVEL'A/R'     WL0046    P      Application Cod
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0047    YL0015           Company Number
     C                     MOVELWL0048    YL0014    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0020    WL0045    P      User Profile Na
     C                     MOVEL'A/R'     WL0046    P      Application Cod
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0047    YL0015           Company Number
     C                     MOVELWL0048    YL0014    P      Warehouse Code
     C                     END                             *FI
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0019    ZA0003           User Profile Na
     C                     MOVEL'A/R'     ZA0004           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SNRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
**
01047010560130202306023110235202357
02366023700256202567025760260802613
02622026260263102640026510266002671
02682
**
01053010850130702308023170235402363
02367023720256402573026050261002619
02623026280263802649026580266902680
02691
**
VPBKC7    #CAYTX    VCEQDT    V2AIC3    V2HGCD    #2LNCD    #2LRCD
#2AICD    #2Q8CD    V1AIC3    V1HGCD    #1AVNA    #1LNCD    #1LRCD
#1AICD    #1Q8CD    VRGIDT    #RGDPR    #RGEPR    #RGFPR    #RGHPR
#RGGPR
