// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMCRXFR
// ?Date: 14.08.2025 Time: 03:42:37
// ?------------------------------------------------------------------------------------------------

//?Execute user function

CASE;

// IF PAR.Reprint Status USR is Reprint
IF PAR.Reprint_Status_USR = 'R';

//?** Reprint Combo Invoice, does not fax        E002016
EXECUTE FUNCTION(SEL Inv to Prnt& Post  RT) TYPE(RTVOBJ) FILE(PMAFCPP)          AC1802083;
PARAMETER(PAR.Job_Name_CDE);
PARAMETER(PAR.Job_Number_Cde);
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Count_USR);
PARAMETER(LCL.Process_Cust_Types_Usr);
PARAMETER(LCL.Status_Y_or_N);
PARAMETER(PAR.Reprint_Status_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // LCL.Break = CND.No
 LCL.Break = 'N';

 CASE;

 // IF DB1.One Invoice Per PO is Yes
 IF DB1.One_Invoice_Per_PO = 'Y';

 // AND DB1.WF Inv/Comb Billing Type is Invoice or Debit Memo
 AND DB1.WF_Inv_Comb_Billing_Type = '3'/'1';

 //?This process is already restricting by Job and company
 //?CHG:  Actual Shipped Date/Ship To Customer/Customer PO
 CASE;

 // IF LCL.Actual Shipped Date NE DB1.Actual Shipped Date
 IF LCL.Actual_Shipped_Date <> DB1.Actual_Shipped_Date;

 // LCL.Break = CND.Yes
 LCL.Break = 'Y';

 //?CHG:  Actual Shipped Date/Ship To Customer/Customer PO
 // IF LCL.Ship To Customer NE DB1.Ship To Customer
 IF LCL.Ship_To_Customer <> DB1.Ship_To_Customer;

 // LCL.Break = CND.Yes
 LCL.Break = 'Y';

 //?CHG:  Actual Shipped Date/Ship To Customer/Customer PO
 // IF LCL.Customer Purchase Order # NE DB1.Customer Purchase Order #
 IF LCL.Customer_Purchase_Order_# <> DB1.Customer_Purchase_Order_#;

 // LCL.Break = CND.Yes
 LCL.Break = 'Y';

 ENDIF;

 //?Break logic print the combine invoice on the first one
 CASE;

 // IF LCL.Break is Yes
 IF LCL.Break = 'Y';

 //?* establish first logic break, only select print of combine invoice
 //?when the ship to and customer po number changes
 //?** Depending on option, format for Form or No Form    E002016
 CASE;

 // IF PAR.Reprint Status USR is Reprint
 IF PAR.Reprint_Status_USR = 'R';

 // Call program PRT Inv/Fast FaxCMB 6LPPF.
 CALL PROGRAM(PRT Inv/Fast FaxCMB 6LPPF) ('PMCKPFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(LCL.Status_Y_or_N);
 PARAMETER(DB1.Job_Name_CDE);
 PARAMETER(DB1.Job_Number_Cde);

 //?** Depending on option, format for Form or No Form    E002016
 // IF *OTHERWISE
 IF *OTHERWISE;

 // Call program PRT Inv/Memo 8LPI CB   PF.
 CALL PROGRAM(PRT Inv/Memo 8LPI CB   PF) ('PMCJPFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(PAR.Status_Y_or_N);
 PARAMETER(DB1.Job_Name_CDE);
 PARAMETER(DB1.Job_Number_Cde);

 //?Dlt trailer for Invoiced order, Seaboard only         E002966
 CASE;

 // IF DB1.WF Inv/Comb Billing Type is Invoice
 IF DB1.WF_Inv_Comb_Billing_Type = '1';

 EXECUTE FUNCTION(Rtv Plant Co/Org      RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1826265;
 PARAMETER(DB1.Company_Number);
 PARAMETER(NLL.Plant_Company_Sts);
 PARAMETER(LCL.Company_Organization);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Company Organization is Seaboard
 IF LCL.Company_Organization = 'S';

 EXECUTE FUNCTION(RTV Ld Id for Orders  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1912980;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(NLL.Scheduled_Ship_Date);
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Load_Plan_Order);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 // AND LCL.Load Plan Order is yes
 AND LCL.Load_Plan_Order = 'Y';

 EXECUTE FUNCTION(RTV Carrier & Trailer  RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC2038863;
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Trailer_Id);
 PARAMETER(LCL.Carrier_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?* Not an error if no trailer                          E002966
 EXECUTE FUNCTION(RTV/DLT Assigned Trlr  RT) TYPE(RTVOBJ) FILE(PDLYREP)          AC2086635;
 PARAMETER(LCL.Carrier_Code);
 PARAMETER(LCL.Trailer_Id);
 {
  //?USER: Processing if Data record not found

  //?* Not an error, may have been deleted from another order on load
  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  //?USER: Process Data record

  EXECUTE FUNCTION(DLT Trailer            DO) TYPE(DLTOBJ) FILE(PDLYREP)          AC1496470;
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Trailer_Id);
 }

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 // LCL.Ship To Customer = DB1.Ship To Customer
 LCL.Ship_To_Customer = DB1.Ship_To_Customer;

 // LCL.Customer Purchase Order # = DB1.Customer Purchase Order #
 LCL.Customer_Purchase_Order_# = DB1.Customer_Purchase_Order_#;

 // LCL.Actual Shipped Date = DB1.Actual Shipped Date
 LCL.Actual_Shipped_Date = DB1.Actual_Shipped_Date;

 ENDIF;

 ENDIF;

}


// IF PAR.Reprint Status USR is Reprint(Form)
IF PAR.Reprint_Status_USR = 'Y';

EXECUTE FUNCTION(SEL Inv to Prnt& Post  RT) TYPE(RTVOBJ) FILE(PMAFCPP)          AC1802083;
PARAMETER(PAR.Job_Name_CDE);
PARAMETER(PAR.Job_Number_Cde);
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Count_USR);
PARAMETER(LCL.Process_Cust_Types_Usr);
PARAMETER(LCL.Status_Y_or_N);
PARAMETER(PAR.Reprint_Status_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // LCL.Break = CND.No
 LCL.Break = 'N';

 CASE;

 // IF DB1.One Invoice Per PO is Yes
 IF DB1.One_Invoice_Per_PO = 'Y';

 // AND DB1.WF Inv/Comb Billing Type is Invoice or Debit Memo
 AND DB1.WF_Inv_Comb_Billing_Type = '3'/'1';

 //?This process is already restricting by Job and company
 //?CHG:  Actual Shipped Date/Ship To Customer/Customer PO
 CASE;

 // IF LCL.Actual Shipped Date NE DB1.Actual Shipped Date
 IF LCL.Actual_Shipped_Date <> DB1.Actual_Shipped_Date;

 // LCL.Break = CND.Yes
 LCL.Break = 'Y';

 //?CHG:  Actual Shipped Date/Ship To Customer/Customer PO
 // IF LCL.Ship To Customer NE DB1.Ship To Customer
 IF LCL.Ship_To_Customer <> DB1.Ship_To_Customer;

 // LCL.Break = CND.Yes
 LCL.Break = 'Y';

 //?CHG:  Actual Shipped Date/Ship To Customer/Customer PO
 // IF LCL.Customer Purchase Order # NE DB1.Customer Purchase Order #
 IF LCL.Customer_Purchase_Order_# <> DB1.Customer_Purchase_Order_#;

 // LCL.Break = CND.Yes
 LCL.Break = 'Y';

 ENDIF;

 //?Break logic print the combine invoice on the first one
 CASE;

 // IF LCL.Break is Yes
 IF LCL.Break = 'Y';

 //?* establish first logic break, only select print of combine invoice
 //?when the ship to and customer po number changes
 //?** Depending on option, format for Form or No Form    E002016
 CASE;

 // IF PAR.Reprint Status USR is Reprint
 IF PAR.Reprint_Status_USR = 'R';

 // Call program PRT Inv/Fast FaxCMB 6LPPF.
 CALL PROGRAM(PRT Inv/Fast FaxCMB 6LPPF) ('PMCKPFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(LCL.Status_Y_or_N);
 PARAMETER(DB1.Job_Name_CDE);
 PARAMETER(DB1.Job_Number_Cde);

 //?** Depending on option, format for Form or No Form    E002016
 // IF *OTHERWISE
 IF *OTHERWISE;

 // Call program PRT Inv/Memo 8LPI CB   PF.
 CALL PROGRAM(PRT Inv/Memo 8LPI CB   PF) ('PMCJPFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(PAR.Status_Y_or_N);
 PARAMETER(DB1.Job_Name_CDE);
 PARAMETER(DB1.Job_Number_Cde);

 //?Dlt trailer for Invoiced order, Seaboard only         E002966
 CASE;

 // IF DB1.WF Inv/Comb Billing Type is Invoice
 IF DB1.WF_Inv_Comb_Billing_Type = '1';

 EXECUTE FUNCTION(Rtv Plant Co/Org      RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1826265;
 PARAMETER(DB1.Company_Number);
 PARAMETER(NLL.Plant_Company_Sts);
 PARAMETER(LCL.Company_Organization);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Company Organization is Seaboard
 IF LCL.Company_Organization = 'S';

 EXECUTE FUNCTION(RTV Ld Id for Orders  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1912980;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(NLL.Scheduled_Ship_Date);
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Load_Plan_Order);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 // AND LCL.Load Plan Order is yes
 AND LCL.Load_Plan_Order = 'Y';

 EXECUTE FUNCTION(RTV Carrier & Trailer  RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC2038863;
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Trailer_Id);
 PARAMETER(LCL.Carrier_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?* Not an error if no trailer                          E002966
 EXECUTE FUNCTION(RTV/DLT Assigned Trlr  RT) TYPE(RTVOBJ) FILE(PDLYREP)          AC2086635;
 PARAMETER(LCL.Carrier_Code);
 PARAMETER(LCL.Trailer_Id);
 {
  //?USER: Processing if Data record not found

  //?* Not an error, may have been deleted from another order on load
  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  //?USER: Process Data record

  EXECUTE FUNCTION(DLT Trailer            DO) TYPE(DLTOBJ) FILE(PDLYREP)          AC1496470;
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Trailer_Id);
 }

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 // LCL.Ship To Customer = DB1.Ship To Customer
 LCL.Ship_To_Customer = DB1.Ship_To_Customer;

 // LCL.Customer Purchase Order # = DB1.Customer Purchase Order #
 LCL.Customer_Purchase_Order_# = DB1.Customer_Purchase_Order_#;

 // LCL.Actual Shipped Date = DB1.Actual Shipped Date
 LCL.Actual_Shipped_Date = DB1.Actual_Shipped_Date;

 ENDIF;

 ENDIF;

}


// IF *OTHERWISE
IF *OTHERWISE;

//?**  Invoice Print, this routine fax/emails invoice E002016
EXECUTE FUNCTION(SEL InvRep Fax         RT) TYPE(RTVOBJ) FILE(PMAFCPP)          AC1803931;
PARAMETER(PAR.Job_Name_CDE);
PARAMETER(PAR.Job_Number_Cde);
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Count_USR);
PARAMETER(LCL.Process_Cust_Types_Usr);
PARAMETER(LCL.Status_Y_or_N);
PARAMETER(PAR.Reprint_Status_USR);
{
 //?USER: Initialize routine

 //?***** Change Log and Comments
 DO;

 //?** 02/21/2014 LJB E002966
 //?** Delete the trailer record if this is an Invoiced order for
 //?**  Seaboard only
 //?** 04/01/2010 LJB P000198 (sub task: E000673)
 //?** Fax flag will no longer be maintained. Fax and Email are now
 //?** stored in Cust Distribution Entry.
 ENDDO;

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // LCL.Break = CND.No
 LCL.Break = 'N';

 CASE;

 // IF DB1.One Invoice Per PO is Yes
 IF DB1.One_Invoice_Per_PO = 'Y';

 //?This process is already restricting by Job and company
 //?BRK:  Actual Shipped Date/Ship To Customer/Customer PO
 CASE;

 // IF LCL.Actual Shipped Date NE DB1.Actual Shipped Date
 IF LCL.Actual_Shipped_Date <> DB1.Actual_Shipped_Date;

 // LCL.Break = CND.Yes
 LCL.Break = 'Y';

 //?BRK:  Actual Shipped Date/Ship To Customer/Customer PO
 // IF LCL.Ship To Customer NE DB1.Ship To Customer
 IF LCL.Ship_To_Customer <> DB1.Ship_To_Customer;

 // LCL.Break = CND.Yes
 LCL.Break = 'Y';

 //?BRK:  Actual Shipped Date/Ship To Customer/Customer PO
 // IF LCL.Customer Purchase Order # NE DB1.Customer Purchase Order #
 IF LCL.Customer_Purchase_Order_# <> DB1.Customer_Purchase_Order_#;

 // LCL.Break = CND.Yes
 LCL.Break = 'Y';

 ENDIF;

 //?Break logic print the combine invoice on the first one
 CASE;

 // IF LCL.Break is Yes
 IF LCL.Break = 'Y';

 //?* establish first logic break, only select print of combine invoice
 //?when the ship to and customer po number changes
 CASE;

 // IF DB1.Order Value Total is not equal to zeros
 IF DB1.Order_Value_Total <> *ZERO;

 // AND DB1.Order Weight Total is Not equal zero
 AND DB1.Order_Weight_Total <> *ZERO;

 // AND DB1.WF Inv/Comb Billing Type is Invoice or Debit Memo
 AND DB1.WF_Inv_Comb_Billing_Type = '3'/'1';

 //?** Don't fax if the amount and weight are zeros.   04/19/06 LJB
 // Call program PRT Inv/Fast FaxCMB 6LPPF.
 CALL PROGRAM(PRT Inv/Fast FaxCMB 6LPPF) ('PMCKPFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(LCL.Status_Y_or_N);
 PARAMETER(DB1.Job_Name_CDE);
 PARAMETER(DB1.Job_Number_Cde);

 //?Dlt trailer for Invoiced order, Seaboard only         E002966
 CASE;

 // IF DB1.WF Inv/Comb Billing Type is Invoice
 IF DB1.WF_Inv_Comb_Billing_Type = '1';

 EXECUTE FUNCTION(Rtv Plant Co/Org      RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1826265;
 PARAMETER(DB1.Company_Number);
 PARAMETER(NLL.Plant_Company_Sts);
 PARAMETER(LCL.Company_Organization);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Company Organization is Seaboard
 IF LCL.Company_Organization = 'S';

 EXECUTE FUNCTION(RTV Ld Id for Orders  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1912980;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(NLL.Scheduled_Ship_Date);
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Load_Plan_Order);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 // AND LCL.Load Plan Order is yes
 AND LCL.Load_Plan_Order = 'Y';

 EXECUTE FUNCTION(RTV Carrier & Trailer  RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC2038863;
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Trailer_Id);
 PARAMETER(LCL.Carrier_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?* Delete trailer. Not an error if trailer doesn't exist E002966
 EXECUTE FUNCTION(RTV/DLT Assigned Trlr  RT) TYPE(RTVOBJ) FILE(PDLYREP)          AC2086635;
 PARAMETER(LCL.Carrier_Code);
 PARAMETER(LCL.Trailer_Id);
 {
  //?USER: Processing if Data record not found

  //?* Not an error, may have been deleted from another order on load
  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  //?USER: Process Data record

  EXECUTE FUNCTION(DLT Trailer            DO) TYPE(DLTOBJ) FILE(PDLYREP)          AC1496470;
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Trailer_Id);
 }

 ENDIF;

 ENDIF;

 ENDIF;

 // LCL.Ship To Customer = DB1.Ship To Customer
 LCL.Ship_To_Customer = DB1.Ship_To_Customer;

 // LCL.Customer Purchase Order # = DB1.Customer Purchase Order #
 LCL.Customer_Purchase_Order_# = DB1.Customer_Purchase_Order_#;

 // LCL.Actual Shipped Date = DB1.Actual Shipped Date
 LCL.Actual_Shipped_Date = DB1.Actual_Shipped_Date;

 // Call program PRC Fax One Cust Combo XF.
 CALL PROGRAM(PRC Fax One Cust Combo XF) ('PMC6XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Bill_to_Customer_Ship_To);
 PARAMETER(LCL.Fax_Recipient);

 ENDIF;

 ENDIF;

 ENDIF;

}


ENDIF;

