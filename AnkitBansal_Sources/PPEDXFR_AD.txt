// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPEDXFR
// ?Date: 14.08.2025 Time: 03:40:05
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// PAR.Yld Program USR = CND.Yield Calculation
PAR.Yld_Program_USR = 'YC';

//?If all CUT lines have been approved, perform auto e-o-shift for
//?  CUT TRIM and CUT MISC
EXECUTE FUNCTION(Rtv Dept All Apprvd   RT) TYPE(RTVOBJ) FILE(POCSCPP)           AC1686668;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Production_Shift);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Initialize routine

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 CASE;

 // IF DB1.YDL Process Status is 04=Yield Approved AC
 IF DB1.YDL_Process_Status = '04';

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.Production Line Code is Trim
 IF DB1.Production_Line_Code = 'TRIM';

 // OR DB1.Production Line Code is Miscellaneous
 OR DB1.Production_Line_Code = 'MISC';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 ENDIF;

 ENDIF;

}


CASE;

// IF LCL.Record Found USR is Record Not Found
IF LCL.Record_Found_USR = 'N';

//?I. End of Shift           TRIM
EXECUTE FUNCTION(Rtv Dte/Shft/PrcSts   RT) TYPE(RTVOBJ) FILE(POCSCPP)           AC1665298;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER('TRIM');
PARAMETER(WRK.Production_Date);
PARAMETER(WRK.Production_Shift);
PARAMETER(PAR.YDL_Post_Status);
PARAMETER(PAR.YDL_Process_Status);
PARAMETER(WRK.Record_Found_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF PAR.YDL Process Status is 00-Reporting Not Started
IF PAR.YDL_Process_Status = *BLANK;

// Call program Zzz Process Shift End XF.
CALL PROGRAM(Zzz Process Shift End XF) ('POVOXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER('TRIM');
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Production_Shift);

ENDIF;

//?II. Calc Yield          TRIM
// Call program Zzz Calculate Yield   XF.
CALL PROGRAM(Zzz Calculate Yield   XF) ('POWEXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER('TRIM');
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Production_Shift);
PARAMETER(PAR.YDL_Post_Status);
PARAMETER(PAR.YDL_Process_Status);
PARAMETER(PAR.Record_Found_USR);
PARAMETER(PAR.Yld_Program_USR);
PARAMETER(PAR.User_Department);
PARAMETER(PAR.User_Access);

//?I. End of Shift              MISC
EXECUTE FUNCTION(Rtv Dte/Shft/PrcSts   RT) TYPE(RTVOBJ) FILE(POCSCPP)           AC1665298;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER('MISC');
PARAMETER(WRK.Production_Date);
PARAMETER(WRK.Production_Shift);
PARAMETER(PAR.YDL_Post_Status);
PARAMETER(PAR.YDL_Process_Status);
PARAMETER(WRK.Record_Found_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF PAR.YDL Process Status is 00-Reporting Not Started
IF PAR.YDL_Process_Status = *BLANK;

// Call program Zzz Process Shift End XF.
CALL PROGRAM(Zzz Process Shift End XF) ('POVOXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER('MISC');
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Production_Shift);

ENDIF;

//?II. Calc Yield              MISC
// Call program Zzz Calculate Yield   XF.
CALL PROGRAM(Zzz Calculate Yield   XF) ('POWEXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER('MISC');
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Production_Shift);
PARAMETER(PAR.YDL_Post_Status);
PARAMETER(PAR.YDL_Process_Status);
PARAMETER(PAR.Record_Found_USR);
PARAMETER(PAR.Yld_Program_USR);
PARAMETER(PAR.User_Department);
PARAMETER(PAR.User_Access);

//?III. Approve Yield - Set next open shift
//?Mark CUT TRIM/MISC as Posted and sts 04
EXECUTE FUNCTION(Upd Process/Post Sts  RT) TYPE(RTVOBJ) FILE(POCSCPP)           AC1686688;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER('TRIM');
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Production_Shift);
PARAMETER('P');
PARAMETER(04);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Process/Post Sts  CH) TYPE(CHGOBJ) FILE(POCSCPP)           AC1686723;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Department_Code);
 PARAMETER(DB1.Production_Line_Code);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Production_Shift);
 PARAMETER(PAR.YDL_Post_Status);
 PARAMETER(PAR.YDL_Process_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


EXECUTE FUNCTION(Upd Process/Post Sts  RT) TYPE(RTVOBJ) FILE(POCSCPP)           AC1686688;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER('MISC');
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Production_Shift);
PARAMETER('P');
PARAMETER(04);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Process/Post Sts  CH) TYPE(CHGOBJ) FILE(POCSCPP)           AC1686723;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Department_Code);
 PARAMETER(DB1.Production_Line_Code);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Production_Shift);
 PARAMETER(PAR.YDL_Post_Status);
 PARAMETER(PAR.YDL_Process_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


//?Rtv next shift from the dept/line sent in to use for the trim/misc next sh
EXECUTE FUNCTION(Rtv Dte/Shft/PrcSts   RT) TYPE(RTVOBJ) FILE(POCSCPP)           AC1665298;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER(PAR.Production_Line_Code);
PARAMETER(LCL.Production_Date_USR);
PARAMETER(LCL.Production_Shift_USR);
PARAMETER(PAR.YDL_Post_Status);
PARAMETER(PAR.YDL_Process_Status);
PARAMETER(PAR.Record_Found_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


//?Create the next shif for CUT TRIM & CUT MISC
EXECUTE FUNCTION(Crt Daily Line Header CR) TYPE(CRTOBJ) FILE(POCSCPP)           AC1664739;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER('TRIM');
PARAMETER(LCL.Production_Date_USR);
PARAMETER(LCL.Production_Shift_USR);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER('O');
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(WRK.BLANK);
PARAMETER(WRK.BLANK);
PARAMETER(WRK.BLANK);
PARAMETER(WRK.BLANK);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 //?USER: Processing after Data update

 EXECUTE FUNCTION(Crt Yld Daily Yld Cmp RT) TYPE(RTVOBJ) FILE(POCZREP)           AC1669586;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Department_Code);
 PARAMETER(DB1.Production_Line_Code);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Production_Shift);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt Yld Daily Yld Cmp CR) TYPE(CRTOBJ) FILE(POC0CPP)           AC1669587;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Department_Code);
  PARAMETER(PAR.Production_Line_Code);
  PARAMETER(PAR.Production_Date);
  PARAMETER(PAR.Production_Shift);
  PARAMETER(DB1.Yld_Component_Code);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(DB1.YC_Component_Group);
  PARAMETER(WRK.YDL_Unused_Sts_1);
  PARAMETER(WRK.YDL_Unused_Sts_2);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

}


EXECUTE FUNCTION(Crt Daily Line Header CR) TYPE(CRTOBJ) FILE(POCSCPP)           AC1664739;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER('MISC');
PARAMETER(LCL.Production_Date_USR);
PARAMETER(LCL.Production_Shift_USR);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER('O');
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(WRK.BLANK);
PARAMETER(WRK.BLANK);
PARAMETER(WRK.BLANK);
PARAMETER(WRK.BLANK);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 //?USER: Processing after Data update

 EXECUTE FUNCTION(Crt Yld Daily Yld Cmp RT) TYPE(RTVOBJ) FILE(POCZREP)           AC1669586;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Department_Code);
 PARAMETER(DB1.Production_Line_Code);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Production_Shift);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt Yld Daily Yld Cmp CR) TYPE(CRTOBJ) FILE(POC0CPP)           AC1669587;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Department_Code);
  PARAMETER(PAR.Production_Line_Code);
  PARAMETER(PAR.Production_Date);
  PARAMETER(PAR.Production_Shift);
  PARAMETER(DB1.Yld_Component_Code);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(DB1.YC_Component_Group);
  PARAMETER(WRK.YDL_Unused_Sts_1);
  PARAMETER(WRK.YDL_Unused_Sts_2);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

}


//?IV. Mark Dept CUT as posted
EXECUTE FUNCTION(Rtv Dept Open Line    RT) TYPE(RTVOBJ) FILE(POCSCPP)           AC1673376;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Production_Shift);
PARAMETER(PAR.Record_Found_USR);
{
 //?USER: Initialize routine

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 CASE;

 // IF DB1.YDL Post Status is Open
 IF DB1.YDL_Post_Status = 'O';

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 QUIT;

 ENDIF;

}


CASE;

// IF PAR.Record Found USR is Record Not Found
IF PAR.Record_Found_USR = 'N';

EXECUTE FUNCTION(Chg Post Status       RT) TYPE(RTVOBJ) FILE(POCRCPP)           AC1673260;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Production_Shift);
PARAMETER('P');
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Post Status       CH) TYPE(CHGOBJ) FILE(POCRCPP)           AC1673261;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Department_Code);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Production_Shift);
 PARAMETER(PAR.YDH_Post_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


ENDIF;

ENDIF;

