// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKLEPVR
// ?Date: 14.08.2025 Time: 02:52:03
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

//?USER: Load screen

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// DTL.CC Company Number = WRK.CC Company Number
DTL.CC_Company_Number = WRK.CC_Company_Number;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

// DTL.@Status Detail/Summary = CND.Detail
DTL.@Status_Detail_Summary = 'D';

// DTL.Report Type Desc Usr = Condition name of DTL.@Status Detail/Summary
DTL.Report_Type_Desc_Usr = RTVCND(DTL.@Status_Detail_Summary);

// DTL.TH Source Code = CON.ODB
DTL.TH_Source_Code = 'ODB';

// DTL.BOH Commodity Market Code = CON.ISM
DTL.BOH_Commodity_Market_Code = 'ISM';

// DTL.BOH Commodity Price Group = CON.SG
DTL.BOH_Commodity_Price_Group = 'SG';

// DTL.BOH Market Date Method = CON.CUR
DTL.BOH_Market_Date_Method = 'CUR';

// DTL.PO Option Code = CND.Cash Basis Price
DTL.PO_Option_Code = 'CBP';

// DTL.CMP Program Code = CON.SB3
DTL.CMP_Program_Code = 'SB3';

// DTL.BOH Payment Type = CND.Carcass Merit
DTL.BOH_Payment_Type = 'C';

// DTL.TH Payment Sts = CND.Sl Carcass Merit
DTL.TH_Payment_Sts = 'SC';

// DTL.PO Description = Condition name of DTL.PO Option Code
DTL.PO_Description = RTVCND(DTL.PO_Option_Code);

// DTL.Payment Type Desc USR 7 = Condition name of DTL.BOH Payment Type
DTL.Payment_Type_Desc_USR_7 = RTVCND(DTL.BOH_Payment_Type);

// DTL.Description 30 USR = Condition name of DTL.TH Payment Sts
DTL.Description_30_USR = RTVCND(DTL.TH_Payment_Sts);

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(PAR.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?USER: Process command keys

//?Prompts
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.TH Source Code
IF PGM.*Cursor_field = DTL.TH_Source_Code;

// Call program Sel Source            SR.
CALL PROGRAM(Sel Source            SR) ('PKDRSRR');
PARAMETER(DTL.TH_Source_Code);

// IF PGM.*Cursor field <IS> DTL.BOH Commodity Market Code
IF PGM.*Cursor_field = DTL.BOH_Commodity_Market_Code;

// Call program Sel Commodity Market  XF.
CALL PROGRAM(Sel Commodity Market  XF) ('PDEDSRR');
PARAMETER(DTL.BOH_Commodity_Market_Code);

// IF PGM.*Cursor field <IS> DTL.BOH Commodity Price Group
IF PGM.*Cursor_field = DTL.BOH_Commodity_Price_Group;

// Call program Sel Commodity Group   XF.
CALL PROGRAM(Sel Commodity Group   XF) ('PDECSRR');
PARAMETER(DTL.BOH_Commodity_Price_Group);

// IF PGM.*Cursor field <IS> DTL.BOH Market Date Method
IF PGM.*Cursor_field = DTL.BOH_Market_Date_Method;

// Call program Sel Market Date Method UP.
CALL PROGRAM(Sel Market Date Method UP) ('PDZWXFR');
PARAMETER(PGM.*Return_code);
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.BOH_Market_Date_Method);
PARAMETER(DTL.Market_Date_Method_Desc);
PARAMETER('H');

// IF PGM.*Cursor field <IS> DTL.PO Option Code
IF PGM.*Cursor_field = DTL.PO_Option_Code;

// Call program Sel Pricing Option    SR.
CALL PROGRAM(Sel Pricing Option    SR) ('PKELSRR');
PARAMETER(DTL.PO_Option_Code);

// IF PGM.*Cursor field <IS> DTL.CMP Program Code
IF PGM.*Cursor_field = DTL.CMP_Program_Code;

// Call program Sel Carc Merit Pgm    SR.
CALL PROGRAM(Sel Carc Merit Pgm    SR) ('PKBASRR');
PARAMETER(DTL.CMP_Program_Code);

ENDIF;

ENDIF;

//?USER: Validate fields

EXECUTE FUNCTION(Rtv Contract f/Val    RT) TYPE(RTVOBJ) FILE(PKAPCPP)           AB1199507;
PARAMETER(DTL.PC_Contract_Code);
PARAMETER(WRK.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF WRK.Record Found USR is Record Not Found
IF WRK.Record_Found_USR = 'N';

// Send error message - 'Producer Contract not found.'
ERROR(PRK0035);

ENDIF;

EXECUTE FUNCTION(Rtv Source Desc       RT) TYPE(RTVOBJ) FILE(PKAAREP)           AB1124642;
PARAMETER(DTL.TH_Source_Code);
PARAMETER(DTL.SR_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF DTL.SR Description EQ WRK.Blank USR
IF DTL.SR_Description = WRK.Blank_USR;

// Send error message - 'Source not found.'
ERROR(PRK0005);

ENDIF;

// Call program Val Commodity Market  XF.
CALL PROGRAM(Val Commodity Market  XF) ('PDG1XFR');
PARAMETER(DTL.BOH_Commodity_Market_Code);
PARAMETER(DTL.Market_Code_Desc_USR);
PARAMETER(WRK.Invalid_Y_N_USR);

CASE;

// IF WRK.Invalid Y/N USR is Yes
IF WRK.Invalid_Y_N_USR = 'Y';

// Send error message - 'Commodity Market Code is invalid.'
ERROR(PRK0028);
MSGPARM(DTL.BOH_Commodity_Market_Code);

ENDIF;

// Call program Val Commodity Group   XF.
CALL PROGRAM(Val Commodity Group   XF) ('PDG2XFR');
PARAMETER(DTL.BOH_Commodity_Price_Group);
PARAMETER(DTL.Market_Group_Desc_USR);
PARAMETER(WRK.Invalid_Y_N_USR);

CASE;

// IF WRK.Invalid Y/N USR is Yes
IF WRK.Invalid_Y_N_USR = 'Y';

// Send error message - 'Commodity Price Group is invalid.'
ERROR(PRK0027);
MSGPARM(DTL.BOH_Commodity_Price_Group);

ENDIF;

// Call program Val Market Date Method UP.
CALL PROGRAM(Val Market Date Method UP) ('PDZUXFR');
PARAMETER(PGM.*Return_code);
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.BOH_Market_Date_Method);
PARAMETER(DTL.Market_Date_Method_Desc);
PARAMETER('H');

CASE;

// IF DTL.Market Date Method Desc EQ WRK.Blank USR
IF DTL.Market_Date_Method_Desc = WRK.Blank_USR;

// Send error message - 'Invalid Market Date Method.'
ERROR(PRK0556);
MSGPARM(DTL.BOH_Market_Date_Method);

ENDIF;

EXECUTE FUNCTION(Rtv Price Option Info RT) TYPE(RTVOBJ) FILE(PKAKREP)           AB1116516;
PARAMETER(DTL.PO_Option_Code);
PARAMETER(DTL.PO_Description);
PARAMETER(WRK.PO_Unused_Code_1);
PARAMETER(WRK.PO_Unused_Code_2);
PARAMETER(WRK.PO_Floor_Price_Req);
PARAMETER(WRK.PO_Ceiling_Price_Req);
PARAMETER(WRK.PO_Market_Req);
PARAMETER(WRK.PO_Base_Prch_Prc_Req);
PARAMETER(WRK.PO_Comp_Price_Adj_Req);
PARAMETER(WRK.PO_Rsrv_Acct_Bal_Sts_Req);
PARAMETER(WRK.PO_Mkt_Crc_Prc_Adj_Req);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF DTL.PO Description EQ WRK.Blank USR
IF DTL.PO_Description = WRK.Blank_USR;

// Send error message - 'Pricing Option not found.'
ERROR(PRK0025);

ENDIF;

EXECUTE FUNCTION(Rtv CMP Description  RT) TYPE(RTVOBJ) FILE(PKARREP)            AB1124280;
PARAMETER(DTL.CMP_Program_Code);
PARAMETER(DTL.CMP_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = 999;

}


CASE;

// IF DTL.CMP Description EQ WRK.Blank USR
IF DTL.CMP_Description = WRK.Blank_USR;

// Send error message - 'Carcass Merit Program not found.'
ERROR(PRK0039);

ENDIF;

//?CALC: Screen function fields

// DTL.Damage Reporting Desc = Condition name of DTL.Damage Reporting Steps
DTL.Damage_Reporting_Desc = RTVCND(DTL.Damage_Reporting_Steps);

// DTL.PO Description = Condition name of DTL.PO Option Code
DTL.PO_Description = RTVCND(DTL.PO_Option_Code);

// DTL.Payment Type Desc USR 7 = Condition name of DTL.BOH Payment Type
DTL.Payment_Type_Desc_USR_7 = RTVCND(DTL.BOH_Payment_Type);

// DTL.Description 30 USR = Condition name of DTL.TH Payment Sts
DTL.Description_30_USR = RTVCND(DTL.TH_Payment_Sts);

//?USER: User defined action

//?Step 1 -- Create damage file with actuals by initializing boh and th
//?Step 2 -- change payment date to FROM date, paym prc parms to step 3
//?Step 3 -- run payment edit
//?Step 4 -- Update Damage file with selected Contract's info.
// WRK.Company Number Alpha Usr = CVTVAR(DTL.CC Company Number)
WRK.Company_Number_Alpha_Usr = CVTVAR(DTL.CC_Company_Number);

// WRK.Date Alpha USR = CVTVAR(DTL.Date From USR)
WRK.Date_Alpha_USR = CVTVAR(DTL.Date_From_USR);

// WRK.Date Alpha Usr 2 = CVTVAR(DTL.Date To   USR)
WRK.Date_Alpha_Usr_2 = CVTVAR(DTL.Date_To_USR);

// Execute command - 'SBM Damage Reporting Steps 1 or 4'
EXECUTE COMMAND(PRK0755);
PARAMETER(WRK.Company_Number_Alpha_Usr);
PARAMETER(WRK.Date_Alpha_USR);
PARAMETER(WRK.Date_Alpha_Usr_2);
PARAMETER(DTL.PC_Contract_Code);
PARAMETER(DTL.TH_Source_Code);
PARAMETER(DTL.BOH_Commodity_Market_Code);
PARAMETER(DTL.BOH_Commodity_Price_Group);
PARAMETER(DTL.BOH_Market_Date_Method);
PARAMETER(DTL.PO_Option_Code);
PARAMETER(DTL.CMP_Program_Code);
PARAMETER(DTL.BOH_Payment_Type);
PARAMETER(DTL.TH_Payment_Sts);
PARAMETER(DTL.Damage_Reporting_Steps);

