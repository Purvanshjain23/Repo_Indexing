     H/TITLE Display Synon References  Display file
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Display file
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISABANS
     H* Date          : 08/12/25  Time  : 07:45:50
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPVLHDFR#  CF   E             WORKSTN
     F                                     SFILE(#SFLRCD:##RR)
     F                                     INFDS(INFDS#)
      * DSP: Display Synon References  Display file
      *
     FPVCUREL1  IF   E           K DISK
     F                                     INFDS(INFDS1)
      * RTV : Synon References          Retrieval index
      *
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D INFDS1        E DS                  EXTNAME(Y2I1DSP)
      * File information data structure
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  ##RRMX         S              5  0
     D  WZD1VN         S                   LIKE(#2D1VN)
     D  WZF5AB         S                   LIKE(#2F5AB)
     D  WZF6AB         S                   LIKE(#2F6AB)
     D  WZF7AB         S                   LIKE(#2F7AB)
     D  WZF8AB         S                   LIKE(#2F8AB)
     D  WZF9AB         S                   LIKE(#2F9AB)
     D  WZGAAB         S                   LIKE(#2GAAB)
     D  ##RROK         S              5  0
     D  ##RR           S              5  0
     D  ##RRRD         S              9  0
     D  ##SPG          S              3  0
     D  ##SLIN         S              3  0
     D  ##SFLN         S              9  0
     D  WQA3N          S              3  0
     D  WQB3N          S              3  0
     D  WQC3N          S              3  0
     D  WQD1           S              1
     D  WQE1           S              1
     D  WQF1           S              1
     D  WQG3N          S              3  0
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0DCF          S              1
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  Y#SFRC         S              4  0
     D  ZHSTRW         S              4  0
     D  ZHNDRW         S              4  0
     D  ZHRLEN         S              4  0
     D  ZHF4RW         S              4  0
     D  ZHWK1#         S              4  0
     D  YZSFDL         S              4  0
     D  ##SFPG         S              3  0
     D  W0SLM          S              9  0
     D  W0SPG          S              3  0
     D  W0RR0          S              4  0
     D  W0GRP          S              1
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     D                 DS
     D  ZAMSDA                 1    132
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
     C                   DO        *HIVAL
      * Initialise & load subfile page
     C                   EXSR      BAIZSF
     C                   MOVEL     'N'           W0RSF
      * Display screen until reload requested
      * Display screen
     C                   DOW       W0RSF = 'N'
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * HOME: Request subfile reload
     C   30              CAS                     FBRQRL
      * Display next SFL page
     C   27              CAS                     BBLDSF
      * Process screen input
     C                   CAS                     DAPR##
     C                   END
      *
     C                   END                                                    OD W0RSF
     C                   END                                                    OD *HIVAL
      *****************************************************************
      /EJECT
     CSR   BAIZSF        BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                   SETON                                        80
     C                   WRITE     #SFLCTL
     C                   SETOFF                                       80
      * Reset no of records in subfile
     C                   Z-ADD     *ZERO         ##RRMX               81         SETOF 81
      * Position DBF file
     C     KPOS          KLIST
     C                   KFLD                    CUD1VN                         Program Name
     C                   KFLD                    CUF5AB                         Caller Function
     C                   KFLD                    CUF6AB                         Called Function
     C                   KFLD                    CUF7AB                         Called Function
     C                   KFLD                    CUF8AB                         Function Type
     C                   KFLD                    CUF9AB                         Function Base F
     C                   KFLD                    CUGAAB                         Function Access
      * Setup key
     C                   MOVEL     #2D1VN        CUD1VN
     C                   MOVEL     #2F5AB        CUF5AB
     C                   MOVEL     #2F6AB        CUF6AB
     C                   MOVEL     #2F7AB        CUF7AB
     C                   MOVEL     #2F8AB        CUF8AB
     C                   MOVEL     #2F9AB        CUF9AB
     C                   MOVEL     #2GAAB        CUGAAB
     C     KPOS          SETLL     @CUREX1
     C                   READ      @CUREX1                              8782    *82=EOF
      * Save previous selector values
     C                   MOVEL     #2D1VN        WZD1VN                         Program Name
     C                   MOVEL     #2F5AB        WZF5AB                         Caller Function
     C                   MOVEL     #2F6AB        WZF6AB                         Called Function
     C                   MOVEL     #2F7AB        WZF7AB                         Called Function
     C                   MOVEL     #2F8AB        WZF8AB                         Function Type
     C                   MOVEL     #2F9AB        WZF9AB                         Function Base F
     C                   MOVEL     #2GAAB        WZGAAB                         Function Access
      * Load subfile page
     C                   Z-ADD     0             ##RROK
     C                   EXSR      BBLDSF
      *================================================================
     CSR   BAEXIT        ENDSR
      /EJECT
     CSR   BBLDSF        BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27              DO
     C  N82              READP     @CUREX1                                90    *
     C  N82              READ      @CUREX1                                90    *
     C                   END
      *
      * Start at previous highest record in SFL
     C                   Z-ADD     ##RRMX        ##RR
      * Reset count of DBF records read
     C                   Z-ADD     0             ##RRRD
      * Set required pages based on *Set Cursor or *Subfile Pages
     C                   IF        W0RR0 > 0
     C     W0RR0         DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C                   ADD       1             ##SPG
     C                   END
     C                   IF        W0SPG > ##SPG
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
     C                   ELSE
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
      * Compute lines required based on pages
     C     ##SPG         MULT      ##SFPG        ##SFLN
     C                   IF        ##SFLN > 999
     C                   Z-ADD     999           ##SFLN
     C                   END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
      * Check selection fields - if fail, read next record
     C                   DOW       NOT *IN82 AND
     C                             ##RROK < ##SFLN AND
     C                             ##RRRD < W0SLM
     C                   IF        #2D1VN = ' '
     C                   IF        #2F5AB <> ' '
     C     CUF5AB        CABNE     #2F5AB        BB020                          Caller Function
     C                   END
     C                   END
     C                   IF        #2D1VN = ' ' OR
     C                             #2F5AB = ' '
     C                   IF        #2F6AB <> ' '
     C     CUF6AB        CABNE     #2F6AB        BB020                          Called Function
     C                   END
     C                   END
     C                   IF        #2D1VN = ' ' OR
     C                             #2F5AB = ' ' OR
     C                             #2F6AB = ' '
      * Scan for search string
     C                   IF        #2F7AB <> ' '
     C                   CALL      'QCLSCAN'
     C                   PARM                    CUF7AB                         Called Function
      * Length
     C                   PARM      25            WQA3N
      * Start
     C                   PARM      1             WQB3N
      * Mask
     C                   PARM                    #2F7AB
      * Length
     C                   PARM      25            WQC3N
      * Translate
     C                   PARM      '1'           WQD1
      * Trim
     C                   PARM      '1'           WQE1
      * Wild
     C                   PARM      '?'           WQF1
      * Result
     C                   PARM                    WQG3N
     C     WQG3N         CABLT     1             BB020
     C                   END
     C                   END
     C                   IF        #2D1VN = ' ' OR
     C                             #2F5AB = ' ' OR
     C                             #2F6AB = ' ' OR
     C                             #2F7AB = ' '
     C                   IF        #2F8AB <> ' '
     C     CUF8AB        CABNE     #2F8AB        BB020                          Function Type
     C                   END
     C                   END
     C                   IF        #2D1VN = ' ' OR
     C                             #2F5AB = ' ' OR
     C                             #2F6AB = ' ' OR
     C                             #2F7AB = ' ' OR
     C                             #2F8AB = ' '
     C                   IF        #2F9AB <> ' '
     C     CUF9AB        CABNE     #2F9AB        BB020                          Function Base F
     C                   END
     C                   END
     C                   IF        #2D1VN = ' ' OR
     C                             #2F5AB = ' ' OR
     C                             #2F6AB = ' ' OR
     C                             #2F7AB = ' ' OR
     C                             #2F8AB = ' ' OR
     C                             #2F9AB = ' '
     C                   IF        #2GAAB <> ' '
     C     CUGAAB        CABNE     #2GAAB        BB020                          Function Access
     C                   END
     C                   END
      * Load SFL fields
     C                   EXSR      MBFL#1
      * Output to subfile
     C                   ADD       1             ##RR
     C                   ADD       1             ##RROK               81        *
      * If SFLRCD invalid, note that errors present
     C   98
     CANN99              SETON                                        99        *
     C                   WRITE     #SFLRCD
     C     BB020         TAG
      * Increment scan check count
     C                   ADD       1             ##RRRD
     C                   READ      @CUREX1                                82    *82=EOF
     C                   END                                                    OD 1 - ##SFPG
      *................................................................
     C     BB900         TAG
      *................................................................
      * If no DBF records found, display error message
      * Send message '*No data to display'
     C                   IF        ##RR = *ZERO AND
     C                             *IN82
     C                   MOVEL     'Y2U0008'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
      * Calculate top line
     C                   IF        ##RR > ##RRMX
     C     ##RROK        DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C     ##RR          SUB       ##SLIN        ##SFRC
     C                   ELSE
     C     ##RR          SUB       ##SFPG        ##SFRC
     C                   END
     C                   ADD       1             ##SFRC
     C                   Z-ADD     ##RR          ##RRMX
     C                   END
      * If scan limit reached, display error message
      * Send message '*Scan limit reached'
     C                   IF        ##RRRD >= W0SLM
     C                   MOVEL     'Y2U0017'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   ELSE
     C                   Z-ADD     0             ##RROK
     C                   END
      *================================================================
     CSR   BBEXIT        ENDSR
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen
      *================================================================
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
      * Update screen time
     C                   TIME                    ##TME
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #SFLCTL
      * Maintain subfile position where possible
     C                   IF        @#SFRC > *ZERO
     C                   Z-ADD     @#SFRC        ##SFRC
     C                   END
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   SETOFF                                         8392    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPR##        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
     C                   IF        YPMTFD <> ' ' AND
     C                             YPMRRN = *ZERO
     C                   GOTO      DAEXIT
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DATAG1
      * Change of position specified
     C     WZD1VN        CASNE     #2D1VN        FBRQRL
     C     WZF5AB        CASNE     #2F5AB        FBRQRL
     C     WZF6AB        CASNE     #2F6AB        FBRQRL
     C     WZF7AB        CASNE     #2F7AB        FBRQRL
     C     WZF8AB        CASNE     #2F8AB        FBRQRL
     C     WZF9AB        CASNE     #2F9AB        FBRQRL
     C     WZGAAB        CASNE     #2GAAB        FBRQRL
     C                   END
     C     DATAG1        TAG
      * Reload subfile requested
     C                   IF        YPMTFD = ' '
     C     W0RSF         CABEQ     'Y'           DAEXIT
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DAEXIT
      * If error, quit processing
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   FBRQRL        BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                   MOVEL     'Y'           W0RSF
      *================================================================
     CSR   FBEXIT        ENDSR
      /EJECT
     CSR   MBFL#1        BEGSR
      *================================================================
      * Move @CUREX1 fields to subfile
      *================================================================
     C                   MOVEL     CUGBAB        #1GBAB                         Function Access
     C                   MOVEL     CUGCAB        #1GCAB                         Path
     C                   MOVEL     CUD1VN        #1D1VN                         Program Name
     C                   MOVEL     CUF5AB        #1F5AB                         Caller Function
     C                   MOVEL     CUF6AB        #1F6AB                         Called Function
     C                   MOVEL     CUF7AB        #1F7AB                         Called Function
     C                   MOVEL     CUF8AB        #1F8AB                         Function Type
     C                   MOVEL     CUF9AB        #1F9AB                         Function Base F
     C                   MOVEL     CUGAAB        #1GAAB                         Function Access
      *================================================================
     CSR   MBEXIT        ENDSR
      /EJECT
     CSR   MEIZ#2        BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                   EVAL      #2D1VN = ' '                                 Program Name
     C                   EVAL      #2F5AB = ' '                                 Caller Function
     C                   EVAL      #2F6AB = ' '                                 Called Function
     C                   EVAL      #2F7AB = ' '                                 Called Function
     C                   EVAL      #2F8AB = ' '                                 Function Type
     C                   EVAL      #2F9AB = ' '                                 Function Base F
     C                   EVAL      #2GAAB = ' '                                 Function Access
      *================================================================
     CSR   MEEXIT        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      * Save sfl rrn at top of page
     C                   Z-ADD     @#SFRC        Y#SFRC
      *
      * Initialise sfl workfields
     C                   Z-ADD     7             ZHSTRW
     C                   Z-ADD     23            ZHNDRW
     C                   Z-ADD     1             ZHRLEN
     C                   Z-ADD     *ZERO         ZHF4RW
     C                   Z-ADD     *ZERO         ZHWK1#
      *
      * Resolve prompt row number on sfl
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C                   Z-ADD     ZHWK1#        YZSFDL
     C     ZHWK1#        MULT      ZHRLEN        ZHWK1#
     C     ZHCSRW        SUB       ZHWK1#        ZHF4RW
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
      * Save first changed  rrn
      *
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW AND
     C                             YPMTFD <> '*NONE'
     C                   IF        ##RR <> *ZERO
     C                   READC     #SFLRCD                                92    *
     C                   IF        NOT *IN92
     C                   Z-ADD     ##RR          YAFSCH
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   END
     C                   END
      *
      * Calculate rrn for prompt slf record
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C     ZHWK1#        ADD       Y#SFRC        YPMRRN
      *
      * Chain to sfl record
     C     YPMRRN        CHAIN     #SFLRCD                            9292      *
     C                   IF        NOT *IN92
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   ELSE
     C                   Z-ADD     *ZERO         YPMRRN
     C                   END
      *
      * Test first changed rrn/prompt rrn
     C                   IF        YAFSCH = *ZERO
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
      * If prompt rrn < first changed rrn
     C                   IF        YPMRRN <> *ZERO AND
     C                             YPMRRN < YAFSCH
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      *ZERO         YYLGCT                         # of grps
     C                   PARM      *BLANK        YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
     C                   MOVEL     'N'           W0PMT
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
     C                   Z-ADD     17            ##SFPG                         SFLPAG
     C                   Z-ADD     1             ##SFRC
      * Maximum record number
     C                   Z-ADD     *ZERO         ##RRMX
      * Scan limit
     C                   Z-ADD     000000500     W0SLM
      * Subfile pages
     C                   Z-ADD     1             W0SPG
      * Processed Subfile record
     C                   Z-ADD     0             W0RR0
      *................................................................
     C                   EVAL      W0GRP = ' '
      * Initialise subfile control
     C                   EXSR      MEIZ#2
      *================================================================
     CSR   ZZEXIT        ENDSR
