// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUZ9XFR
// ?Date: 14.08.2025 Time: 03:51:48
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Update Order Detail (OPBGWKP) Record in QTEMP.
//?The following needs to be updated after 'Additional Validations'
//?routine has been called:
//?Market Pricing Date
//?Commodity Market Code
//?Date Method Code
//?Price Method Code
//?Price Overage Override
//?Weight Ordered
//?Unit Price_Credit
//?OD Ceiling Price
//?OD Market Begin Date
//?OD Market Ending Date
EXECUTE FUNCTION(Upd Block Order Qtemp RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC2216093;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.Market_Pricing_Date);
PARAMETER(PAR.Commodity_Market_Code);
PARAMETER(PAR.Date_Method_Code);
PARAMETER(PAR.Price_Method_Code);
PARAMETER(PAR.Price_Overage_Override);
PARAMETER(PAR.Weight_Ordered);
PARAMETER(PAR.Unit_Price_Credit);
PARAMETER(PAR.OD_Ceiling_Price);
PARAMETER(PAR.OD_Market_Begin_Date);
PARAMETER(PAR.OD_Market_Ending_Date);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Block Order Qtemp CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC2216165;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(PAR.Market_Pricing_Date);
 PARAMETER(PAR.Commodity_Market_Code);
 PARAMETER(PAR.Date_Method_Code);
 PARAMETER(PAR.Price_Method_Code);
 PARAMETER(PAR.Price_Overage_Override);
 PARAMETER(PAR.Weight_Ordered);
 PARAMETER(PAR.Unit_Price_Credit);
 PARAMETER(DB1.OD_Ceiling_Price);
 PARAMETER(DB1.OD_Market_Begin_Date);
 PARAMETER(DB1.OD_Market_Ending_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp 2 IF) TYPE(EXCINTFUN)                      AC2165057;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // DB1.User Profile Name = CON.INFORMATIC
  DB1.User_Profile_Name = 'INFORMATIC';

  // DB1.User Id = CON.INFORMATIC
  DB1.User_Id = 'INFORMATIC';

  // DB1.Job Name = CON.AUTOUPLOAD
  DB1.Job_Name = 'AUTOUPLOAD';

  //?Calc Gross Weight from tares...    copied from Dsp Gross Wgt function
  DO;

  // Call program Rtv Tare Weight        XF.
  CALL PROGRAM(Rtv Tare Weight        XF) ('PBI3XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(LCL.Misc_Tare_Weight);

  //?wi464 change
  // Call program RTV Itm BxID & Tares  XF.
  CALL PROGRAM(RTV Itm BxID & Tares  XF) ('PBI4XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(LCL.Box_Weight);
  PARAMETER(LCL.Number_Cases_On_A_Pallet);
  PARAMETER(LCL.Pallet_Tare_Weight);
  PARAMETER(LCL.Box_iD);
  PARAMETER(DB1.OD_Pallet_Type);

  // LCL.Total Tare USR = LCL.Box Weight + LCL.Misc Tare Weight
  LCL.Total_Tare_USR = LCL.Box_Weight + LCL.Misc_Tare_Weight;

  // Box + Misc Tare
  LCL.Weight_1_1_U = ( LCL.Box_Weight + LCL.Misc_Tare_Weight ) * DB1.Quantity_Ordered 'H';

  //?Pallet Tare
  CASE;

  // IF DB1.Palletize is yes
  IF DB1.Palletize = 'Y';

  CASE;

  // IF LCL.Number Cases On A Pallet is GT Zero
  IF LCL.Number_Cases_On_A_Pallet > *ZERO;

  // Pallet Weight
  LCL.Weight_1_2_U = ( DB1.Quantity_Ordered / LCL.Number_Cases_On_A_Pallet 'H' )
  * LCL.Pallet_Tare_Weight 'H';

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Weight 1.2             .U = CON.*ZERO
  LCL.Weight_1_2_U = *ZERO;

  ENDIF;

  //?Pallet Tare
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Weight 1.2             .U = CON.*ZERO
  LCL.Weight_1_2_U = *ZERO;

  ENDIF;

  // Estimated Gross
  DB1.OD_Estimated_Gross_Weight = ( DB1.Weight_Ordered + LCL.Weight_1_1_U )
  + LCL.Weight_1_2_U;

  ENDDO;

 }

}


