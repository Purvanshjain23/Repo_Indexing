     H/TITLE Exc Retry Upd WIM Inv  XF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 01/10/24  Time  : 15:54:51
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPVADCPL3  IF   E           K DISK
      * RSQ : WIM API Failure Log       Surrogate # SEL Not Proc
      *
     FCADPREL1  IF   E           K DISK
      * RTV : System Values             Retrieval index       NV
      *
     FCAADREL1  IF   E           K DISK
      * RTV : Warehouse Codes           Retrieval index       NV
      *
     FPNG0REL1  IF   E           K DISK
      * RTV : EDI WHS Interchange       Retrieval index
      *
     FPVADCPL0  UF   E           K DISK
      * UPD : WIM API Failure Log       Update index
      *
      * Long constants
     D @CN#            S              6    DIM(20)CTDATA PERRCD(1)
     D @CN             S             25    DIM(20) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D QPVAD1        E DS                  EXTNAME(PVADCPL0)
      * UPD : WIM API Failure Log       Update index
      * Renamed input format fields
     D  WDH1NZ       E                     EXTFLD(ADH1NZ)
     D  WDVJU1       E                     EXTFLD(ADVJU1)
     D  WDCNAB       E                     EXTFLD(ADCNAB)
     D  WDVKU1       E                     EXTFLD(ADVKU1)
     D  WDEIAB       E                     EXTFLD(ADEIAB)
     D  WDCOAB       E                     EXTFLD(ADCOAB)
     D  WDAIC3       E                     EXTFLD(ADAIC3)
     D  WDHGCD       E                     EXTFLD(ADHGCD)
     D  WDVPCD       E                     EXTFLD(ADVPCD)
     D  WDNOSC       E                     EXTFLD(ADNOSC)
     D  WDNPSC       E                     EXTFLD(ADNPSC)
     D  WDA9DT       E                     EXTFLD(ADA9DT)
     D  WDELDT       E                     EXTFLD(ADELDT)
     D  WDF1ST       E                     EXTFLD(ADF1ST)
     D  WDVQNA       E                     EXTFLD(ADVQNA)
     D  WDA1AB       E                     EXTFLD(ADA1AB)
     D  WDC4NB       E                     EXTFLD(ADC4NB)
     D  WDXLCD       E                     EXTFLD(ADXLCD)
     D  WDL9AA       E                     EXTFLD(ADL9AA)
     D  WDAHWG       E                     EXTFLD(ADAHWG)
     D  WDA5QT       E                     EXTFLD(ADA5QT)
     D  WDOSSC       E                     EXTFLD(ADOSSC)
     D  WDOTSC       E                     EXTFLD(ADOTSC)
     D  WDN6SC       E                     EXTFLD(ADN6SC)
     D  WDVSST       E                     EXTFLD(ADVSST)
     D  WDBGTS       E                     EXTFLD(ADBGTS)
     D  WDRUU1       E                     EXTFLD(ADRUU1)
     D  WDRVU1       E                     EXTFLD(ADRVU1)
     D  WDBHTS       E                     EXTFLD(ADBHTS)
     D  WDRWU1       E                     EXTFLD(ADRWU1)
     D  WDRXU1       E                     EXTFLD(ADRXU1)
      *
     D YARDCS          DS           392
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
      * Outward parameters
     D PARC            DS           157
      * RCD : PAR API WIM Inv Shipping2
      * I :  Company Number
     D  PAAIC3                 1      2P 0
      * I :  Item Code
     D  PAHGCD                 3      6P 0
      * I :  Ship From Warehouse
     D  PAVPCD                 7      9
      * I :  WIM Inventory Trans ID
     D  PANOSC                10     12
      * I :  WIM Inventory Trans Type
     D  PANPSC                13     15
      * I :  Transaction Date
     D  PAA9DT                16     19P 0
      * I :  Production Date
     D  PAELDT                20     23P 0
      * I :  Item Transaction Source
     D  PAF1ST                24     25
      * I :  Transaction Description
     D  PAVQNA                26     55
      * I :  Transaction Reason Code
     D  PAA1AB                56     58
      * I :  Order Number
     D  PAC4NB                59     62P 0
      * I :  Shift Number
     D  PAXLCD                63     63
      * I :  Ship To Warehouse
     D  PAL9AA                64     66
      * I :  Transaction Weight
     D  PAAHWG                67     72P 2
      * I :  Transaction Quantity
     D  PAA5QT                73     78P 2
      * I :  USR Unship Flag
     D  PAUSST                79     79
      * I :  Inter-Plant Transfer USR
     D  PAA5TX                80     80
      * O :  API EccResult-MsgId U
     D  PACLAB                81     87
      * O :  API EccResult-MsgDesc U
     D  PAVGU1                88    137
      * B :  API Request Key U
     D  PACKAB               138    147
      * I :  API Mode U
     D  PACJAB               148    157
      *
     D YL0019          DS           500
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  W0CLPG         S             10
     D  XDTSDL         S             26
     D  YL0001         S             40
     D  YL0002         S             10
     D  YN0001         S             10
     D  YL0003         S              5  0
     D  WL0001         S             10
     D  WL0002         S             15  5
     D  YL0004         S              1
     D  YL0005         S              1
     D  YL0006         S             80
     D  ZQ             S              5  0
     D  YL0007         S              1
     D  YL0008         S             26
     D  YL0009         S              2
     D  YL0010         S              2
     D  YL0011         S              2
     D  YL0012         S              6
     D  YL0013         S              6  0
     D  YL0014         S              1
     D  YL0015         S              3
     D  WL0003         S              3
     D  WL0004         S              1
     D  WL0005         S              3
     D  Y0CX01         S              1
     D  WL0006         S             11  0
     D  WL0007         S              1
     D  WN0001         S             45
     D  WN0002         S              7
     D  WN0003         S             50
     D  WN0004         S             10
     D  WN0005         S             10
     D  WN0006         S              3  0
     D  WN0007         S              7  0
     D  WN0008         S              3
     D  WN0009         S              3
     D  WN0010         S              3
     D  WN0011         S              7  0
     D  WN0012         S              7  0
     D  WN0013         S              2
     D  WN0014         S             30
     D  WN0015         S              3
     D  WN0016         S              7  0
     D  WN0017         S              1
     D  WN0018         S              3
     D  WN0019         S             11  2
     D  WN0020         S             11  2
     D  WN0021         S              1
     D  WN0022         S              1
     D  WN0023         S              1
     D  WN0024         S             26
     D  WN0025         S             50
     D  WN0026         S             15
     D  WN0027         S             26
     D  WN0028         S             50
     D  WN0029         S             15
     D  YARDC          S              1
     D  ##TMS          S             26
     D  YL0016         S              1
     D  WL0008         S              3
     D  WL0009         S              6
     D  WL0010         S              1
     D  YL0017         S              7
     D  YL0018         S             10
     D  YN0002         S             50
     D  WQ0001         S              5  0
     D  WQ0002         S             50
     D  WQ0003         S             80
     D  WQ0004         S            500
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  YRSW00         S              5  0
     D  YRSW01         S              5  0
     D  W0PMT          S              1
     D                 DS
     D  ZAMSDA                 1    132
     I@ADCPNN
      * WIM API Failure Log       Surrogate # SEL Not Proc
      * Renamed input format fields
     I              ADH1NZ                      WAH1NZ
     I              ADVJU1                      WAVJU1
     I              ADCNAB                      WACNAB
     I              ADVKU1                      WAVKU1
     I              ADEIAB                      WAEIAB
     I              ADCOAB                      WACOAB
     I              ADAIC3                      WAAIC3
     I              ADHGCD                      WAHGCD
     I              ADVPCD                      WAVPCD
     I              ADNOSC                      WANOSC
     I              ADNPSC                      WANPSC
     I              ADA9DT                      WAA9DT
     I              ADELDT                      WAELDT
     I              ADF1ST                      WAF1ST
     I              ADVQNA                      WAVQNA
     I              ADA1AB                      WAA1AB
     I              ADC4NB                      WAC4NB
     I              ADXLCD                      WAXLCD
     I              ADL9AA                      WAL9AA
     I              ADAHWG                      WAAHWG
     I              ADA5QT                      WAA5QT
     I              ADOSSC                      WAOSSC
     I              ADOTSC                      WAOTSC
     I              ADN6SC                      WAN6SC
     I              ADVSST                      WAVSST
     I              ADBGTS                      WABGTS
     I              ADRUU1                      WARUU1
     I              ADRVU1                      WARVU1
     I              ADBHTS                      WABHTS
     I              ADRWU1                      WARWU1
     I              ADRXU1                      WARXU1
      *
     I@DPRETD
      * System Values             Retrieval index       NV
      * Renamed input format fields
     I              DPDOCD                      WBDOCD
     I              DPAUNA                      WBAUNA
     I              DPI5ST                      WBI5ST
     I              DPBXTX                      WBBXTX
     I              DPM8NB                      WBM8NB
     I              DPUVST                      WBUVST
     I              DPUWST                      WBUWST
     I              DPUXST                      WBUXST
     I              DPVSST                      WBVSST
     I              DPAATM                      WBAATM
     I              DPAYNA                      WBAYNA
     I              DPA0NA                      WBA0NA
     I              DPAXDT                      WBAXDT
      *
     I@ADREAO
      * Warehouse Codes           Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                      WCAJCD
     I              ADF8NA                      WCF8NA
     I              ADACNA                      WCACNA
     I              ADADNA                      WCADNA
     I              ADAENA                      WCAENA
     I              ADAJNA                      WCAJNA
     I              ADBTTX                      WCBTTX
     I              ADAOCD                      WCAOCD
     I              ADBGCD                      WCBGCD
     I              ADVHST                      WCVHST
     I              ADMPNA                      WCMPNA
     I              ADWPST                      WCWPST
     I              ADXUST                      WCXUST
     I              ADT0ST                      WCT0ST
     I              ADT1ST                      WCT1ST
     I              ADDBNB                      WCDBNB
     I              ADT2ST                      WCT2ST
     I              ADT3ST                      WCT3ST
     I              ADT4ST                      WCT4ST
     I              ADT6ST                      WCT6ST
     I              ADBWC3                      WCBWC3
     I              ADBTC3                      WCBTC3
     I              ADBUC3                      WCBUC3
     I              ADBVC3                      WCBVC3
     I              ADFCAA                      WCFCAA
     I              ADRQSX                      WCRQSX
     I              ADRRSX                      WCRRSX
     I              ADRSSX                      WCRSSX
     I              ADRTSX                      WCRTSX
     I              ADT7ST                      WCT7ST
     I              ADT8ST                      WCT8ST
     I              ADRNSX                      WCRNSX
     I              ADROSX                      WCROSX
     I              ADRPSX                      WCRPSX
     I              ADUVST                      WCUVST
     I              ADUWST                      WCUWST
     I              ADUXST                      WCUXST
     I              ADVSST                      WCVSST
     I              ADAATM                      WCAATM
     I              ADAYNA                      WCAYNA
     I              ADA0NA                      WCA0NA
     I              ADAXDT                      WCAXDT
      *
     I@ADCPNK
      * WIM API Failure Log       Update index
      * Renamed input format fields
     I              ADH1NZ                      WDH1NZ
     I              ADVJU1                      WDVJU1
     I              ADCNAB                      WDCNAB
     I              ADVKU1                      WDVKU1
     I              ADEIAB                      WDEIAB
     I              ADCOAB                      WDCOAB
     I              ADAIC3                      WDAIC3
     I              ADHGCD                      WDHGCD
     I              ADVPCD                      WDVPCD
     I              ADNOSC                      WDNOSC
     I              ADNPSC                      WDNPSC
     I              ADA9DT                      WDA9DT
     I              ADELDT                      WDELDT
     I              ADF1ST                      WDF1ST
     I              ADVQNA                      WDVQNA
     I              ADA1AB                      WDA1AB
     I              ADC4NB                      WDC4NB
     I              ADXLCD                      WDXLCD
     I              ADL9AA                      WDL9AA
     I              ADAHWG                      WDAHWG
     I              ADA5QT                      WDA5QT
     I              ADOSSC                      WDOSSC
     I              ADOTSC                      WDOTSC
     I              ADN6SC                      WDN6SC
     I              ADVSST                      WDVSST
     I              ADBGTS                      WDBGTS
     I              ADRUU1                      WDRUU1
     I              ADRVU1                      WDRVU1
     I              ADBHTS                      WDBHTS
     I              ADRWU1                      WDRWU1
     I              ADRXU1                      WDRXU1
      *
     I@G0REJZ
      * EDI WHS Interchange       Retrieval index
      * Renamed input format fields
     I              G0AJCD                      WEAJCD
     I              G0M4AA                      WEM4AA
     I              G0M7AA                      WEM7AA
     I              G0J5NX                      WEJ5NX
     I              G0X2T1                      WEX2T1
     I              G0JBSC                      WEJBSC
     I              G0JCSC                      WEJCSC
     I              G0JDSC                      WEJDSC
     I              G0JESC                      WEJESC
     I              G0QGU1                      WEQGU1
     I              G0F5NZ                      WEF5NZ
     I              G0LSSC                      WELSSC
     I              G0LTSC                      WELTSC
     I              G0AHAB                      WEAHAB
     I              G0F6NZ                      WEF6NZ
     I              G0VSST                      WEVSST
     I              G0MJDT                      WEMJDT
     I              G0BETM                      WEBETM
     I              G0CCVN                      WECCVN
     I              G0CDVN                      WECDVN
     I              G0MKDT                      WEMKDT
     I              G0BFTM                      WEBFTM
     I              G0CEVN                      WECEVN
     I              G0CFVN                      WECFVN
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Exc Retry Upd WIM Inv  XF
      * NOTE: The following JS calls this process every 1 hr interval.
      *       From 5AM to 11:59PM.
      *       TEST: WIMUPIVTST
      *       PROD: WIMUPIVRET
      *       12AM - 4AM will allow JS 'WIMEDIRST' to process any records
      *       within that time frame hence we will cancel those records
      *       here.
      *       Carlisle WIM Restoration runs daily @2:45PM via Stored
      *       Procedure. (Bruce P. team)
      * Setup Eradani's Environment Libraries.
      * Upd Setup Eradani Libs CL - /UT User Programs  * 
     C                   CALL      'PVBFUPC'                            90      Upd Setup Erada
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PVBFUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
      * Selects Only 'Not Processed' Records.
      * Exc Retry Upd WIM Inv  RT - WIM API Failure Log  * 
     C                   EXSR      SARVGN
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Exc Retry Upd WIM Inv  RT - WIM API Failure Log  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * RTV System Value Alpha RT - System Values  * Email for Business
     C                   EXSR      SBRVGN
      * RTV Data Libraries     RT - System Values  * In TEST or PROD
     C                   EXSR      SCRVGN
      * 1/10/24 DN SR08283-Changed to use System Values 'APIWAITTM2' inst
      * RTV Numeric Value      RT - System Values  * API Wait Time in Sec
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  @CN(005)      WL0001                         System Value Co
     C                   EXSR      SDRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0002        YL0003                         System Value Nu
     C                   EVAL      YL0004 = ' '                                 Successful Comp
     C                   EVAL      YL0005 = ' '                                 API Call Failed
      * Format Email Subject Line.
      * CASE: *OTHERWISE
     C                   Z-ADD     *ZERO         ZQ
     C     @CN(006)      CAT(P)    @CN(007):ZQ   YL0006                         Email Subject 2
      * If Not PROD Then Append 'TEST' to Email Subject Line.
      * CASE: LCL.Library List Code is Not PRKFLIB
     C                   IF        YL0002 <> @CN(008)
     C                   Z-ADD     1             ZQ
     C     YL0006        CAT(P)    @CN(009):ZQ   YL0006                         Email Subject 2
     C                   END                                                    *FI
      * Establish starting position
     C     *LOVAL        SETLL     @ADCPNN                                      *
     C                   READ      @ADCPNN                                90    *
      * Data record not found
     C   90              MOVEL     'USR5324'     W0RTN
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   MOVEL     'N'           YL0007                         Cancelled Flag
      * Cancel Transactions Between Midnight thru 4AM for Restoration Whs
      * CASE: *OTHERWISE
      * Format Time.
      * CASE: *OTHERWISE
     C                   MOVEL     WABGTS        YL0008                         Date Timestamp
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     12            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0008:ZQ     YL0009                 90      Hour 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     15            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0008:ZQ     YL0010                 90      Minute 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     18            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0008:ZQ     YL0011                 90      Second 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     *ZERO         ZQ
     C     YL0009        CAT(P)    YL0010:ZQ     YL0012                         Time Alpha usr
     C                   Z-ADD     *ZERO         ZQ
     C     YL0012        CAT(P)    YL0011:ZQ     YL0012                         Time Alpha usr
     C                   MOVE      YL0012        YL0013                         USR From Time 6
      * Make sure Warehouse is 'Restoration' Enabled.
      * CASE: LCL.USR From Time 6.0 is Between Midnight & 4AM
      * If Carlisle or EDI Warehouse is setup for Restoration then
      * we want to cancel this transaction since the WIM Restoration
      * job will process it at 3:30AM daily.
      * Verify if Carlisle Warehouse is Setup for 846 Restoration.
      * CASE: *OTHERWISE
      * Rtv Live w/Carl,AutoRstRT - Warehouse Codes  * Ship From Whse
      * Move input parameters to subroutine local variables.
     C                   IF        YL0013 >= 000000 AND
     C                             YL0013 <= 040000
     C                   MOVEL(P)  WAVPCD        WL0003                         Warehouse Code
     C                   EXSR      SERVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0004        YL0014                         WHS Live with C
     C                   MOVEL(P)  WL0005        YL0015                         WHS Auto Inv Re
      * Check Carlisle Whse Else EDI Whse.
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.WHS Live with Carlisle is Yes
      *   |- c2    : LCL.WHS Auto Inv Restoration is Yes
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0014 = 'Y'
     C                   IF        YL0015 = 'Y'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Verify Ship To Warehouse if 'Transfer' Inventory Transaction.
      * CASE: DB1.WIM Inventory Trans ID is Transfer
     C                   IF        Y0CX01 = '1'
      * Rtv Live w/Carl,AutoRstRT - Warehouse Codes  * Ship To Whse
      * Move input parameters to subroutine local variables.
     C                   IF        WANOSC = 'T'
     C                   MOVEL(P)  WAL9AA        WL0003                         Warehouse Code
     C                   EXSR      SERVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0004        YL0014                         WHS Live with C
     C                   MOVEL(P)  WL0005        YL0015                         WHS Auto Inv Re
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.WHS Live with Carlisle is Yes
      *   |- c2    : LCL.WHS Auto Inv Restoration is Yes
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0014 = 'Y'
     C                   IF        YL0015 = 'Y'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Chg Record Processed  CH - WIM API Failure Log  * 'X' Cancel
      * Move input parameters to subroutine local variables.
     C                   IF        Y0CX01 = '1'
     C                   Z-ADD     WAH1NZ        WL0006                         Surrogate Nbr
     C                   MOVEL(P)  'X'           WL0007                         Record Processe
     C                   EXSR      SFCHRC
     C                   MOVEL     'Y'           YL0007                         Cancelled Flag
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * Chg Record Processed  CH - WIM API Failure Log  * 'X' Cancel
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WAH1NZ        WL0006                         Surrogate Nbr
     C                   MOVEL(P)  'X'           WL0007                         Record Processe
     C                   EXSR      SFCHRC
     C                   MOVEL     'Y'           YL0007                         Cancelled Flag
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * ELSE Verify if EDI Warehouse is Setup for 846 Restoration.
      * CASE: *OTHERWISE
      * Rtv Whs 846 Active    RT - EDI WHS Interchange  * Ship From Whse
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  WAVPCD        WL0008                         Warehouse Code
     C                   MOVEL(P)  'WHSRST'      WL0009                         Interchange Cod
     C                   EXSR      SGRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0010        YL0016                         Record Status
      * CASE: LCL.Record Status is Active
      * Verify Ship To Warehouse if 'Transfer' Inventory Transaction.
      * CASE: DB1.WIM Inventory Trans ID is Transfer
     C                   IF        YL0016 = 'A'
      * Rtv Whs 846 Active    RT - EDI WHS Interchange  * Ship To Whse
      * Move input parameters to subroutine local variables.
     C                   IF        WANOSC = 'T'
     C                   MOVEL(P)  WAL9AA        WL0008                         Warehouse Code
     C                   MOVEL(P)  'WHSRST'      WL0009                         Interchange Cod
     C                   EXSR      SGRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0010        YL0016                         Record Status
      * CASE: LCL.Record Status is Active
      * Chg Record Processed  CH - WIM API Failure Log  * 'X' Cancel
      * Move input parameters to subroutine local variables.
     C                   IF        YL0016 = 'A'
     C                   Z-ADD     WAH1NZ        WL0006                         Surrogate Nbr
     C                   MOVEL(P)  'X'           WL0007                         Record Processe
     C                   EXSR      SFCHRC
     C                   MOVEL     'Y'           YL0007                         Cancelled Flag
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * Chg Record Processed  CH - WIM API Failure Log  * 'X' Cancel
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WAH1NZ        WL0006                         Surrogate Nbr
     C                   MOVEL(P)  'X'           WL0007                         Record Processe
     C                   EXSR      SFCHRC
     C                   MOVEL     'Y'           YL0007                         Cancelled Flag
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * If Transaction Not Cancelled Then Continue.
      * CASE: LCL.Cancelled Flag USR is No
     C                   IF        YL0007 = 'N'
     C                   EVAL      YL0017 = ' '                                 API EccResult-M
     C                   EVAL      YL0018 = ' '                                 API Request Key
      * Retry to Update WIM Inventory Transaction Tables.
      * *****************************************************************
      * Call API Wrapper Program for wim.ordershipping.inventory API.
      * 1/6/24 DN SR08283-Added 'API Request Key U' & 'API Mode U' Parms.
      * API WIM Inv Shipping   UP - WIM Item Trans Detail  * 
     C                   CLEAR                   PARC
     C                   Z-ADD     WAAIC3        PAAIC3                         Company Number
     C                   Z-ADD     WAHGCD        PAHGCD                         Item Code
     C                   MOVEL(P)  WAVPCD        PAVPCD                         Ship From Wareh
     C                   MOVEL(P)  WANOSC        PANOSC                         WIM Inventory T
     C                   MOVEL(P)  WANPSC        PANPSC                         WIM Inventory T
     C                   Z-ADD     WAA9DT        PAA9DT                         Transaction Dat
     C                   Z-ADD     WAELDT        PAELDT                         Production Date
     C                   MOVEL(P)  WAF1ST        PAF1ST                         Item Transactio
     C                   MOVEL(P)  WAVQNA        PAVQNA                         Transaction Des
     C                   MOVEL(P)  WAA1AB        PAA1AB                         Transaction Rea
     C                   Z-ADD     WAC4NB        PAC4NB                         Order Number
     C                   MOVEL(P)  WAXLCD        PAXLCD                         Shift Number
     C                   MOVEL(P)  WAL9AA        PAL9AA                         Ship To Warehou
     C                   Z-ADD     WAAHWG        PAAHWG                         Transaction Wei
     C                   Z-ADD     WAA5QT        PAA5QT                         Transaction Qua
     C                   MOVEL(P)  WAOSSC        PAUSST                         USR Unship Flag
     C                   MOVEL(P)  WAOTSC        PAA5TX                         Inter-Plant Tra
     C                   MOVEL(P)  YL0018        PACKAB                         API Request Key
     C                   MOVEL(P)  '*SNDRCV'     PACJAB                         API Mode U
      *
     C                   CALL      'PVAYUPR'                            90      API WIM Inv Shi
     C                   PARM      YL0003        WQ0001                         API Wait Time U
     C                   PARM                    PARC                           RCD: *Arrays
      *
     C                   MOVEL     PACLAB        YL0017                         API EccResult-M
     C                   MOVEL     PACKAB        YL0018                         API Request Key
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PVAYUPR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
      * *****************************************************************
      * API Call Successful? Yes, Update Record Processed.
      * CASE: LCL.API EccResult-MsgId U is Success
     C                   IF        YL0017 = @CN(010)
     C                   MOVEL     'Y'           YL0004                         Successful Comp
      * Chg Record Processed  CH - WIM API Failure Log  * 'Y' Processed
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WAH1NZ        WL0006                         Surrogate Nbr
     C                   MOVEL(P)  'Y'           WL0007                         Record Processe
     C                   EXSR      SFCHRC
     C                   ELSE
      * CASE: *OTHERWISE
      * 12/22/23 DN SR07943-Added 'API EccResult-MsgId U is Entered' Cond
      * CASE: LCL.API EccResult-MsgId U is Entered
     C                   IF        YL0017 <> ' '
     C                   MOVEL     'Y'           YL0005                         API Call Failed
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   READ      @ADCPNN                                90    *
     C                   ENDDO
      * USER: Exit processing
      * 12/21/23 DN SR07943-Added 'Partial Completion USR is Yes' c3 Cond
      * Send Email to Business Based on Completion.
      * CASE:
      *  - (c1 AND c2) OR c3
      *   |- c1    : LCL.API Call Failed USR is Yes
      *   |- c2    : LCL.Successful Completion USR is Yes
      *   |- c3    : LCL.API Call Failed USR is Yes
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0005 = 'Y'
     C                   IF        YL0004 = 'Y'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 <> '1'
     C                   IF        YL0005 = 'Y'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Format/Send Email Message.
      * CASE: *OTHERWISE
     C                   IF        Y0CX01 = '1'
     C                   Z-ADD     1             ZQ
     C     @CN(011)      CAT(P)    @CN(012):ZQ   YL0019                         Email Message 2
     C                   Z-ADD     *ZERO         ZQ
     C     YL0019        CAT(P)    @CN(013):ZQ   YL0019                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0019        CAT(P)    @CN(014):ZQ   YL0019                         Email Message 2
      * Both Failed & Completed Transactions ELSE Failed API.
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.API Call Failed USR is Yes
      *   |- c2    : LCL.Successful Completion USR is Yes
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0005 = 'Y'
     C                   IF        YL0004 = 'Y'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   Z-ADD     1             ZQ
     C     YL0019        CAT(P)    @CN(015):ZQ   YL0019                         Email Message 2
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     1             ZQ
     C     YL0019        CAT(P)    @CN(016):ZQ   YL0019                         Email Message 2
     C                   END                                                    *FI
     C                   Z-ADD     1             ZQ
     C     YL0019        CAT(P)    @CN(017):ZQ   YL0019                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0019        CAT(P)    @CN(018):ZQ   YL0019                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0019        CAT(P)    @CN(019):ZQ   YL0019                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0019        CAT(P)    @CN(020):ZQ   YL0019                         Email Message 2
      * Exc ESNDMAIL Generic2 CL - /UT User Programs  * 
     C                   CALL      'PUX2UPC'                            90      Exc ESNDMAIL Ge
     C                   PARM      YL0001        WQ0002                         Email Address
     C                   PARM      YL0006        WQ0003                         Email Subject 2
     C                   PARM      YL0019        WQ0004                         Email Message 2
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUX2UPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   ELSE
      * CASE: *OTHERWISE
      * 12/21/23 DN SR07943-Commented Out, Not Needed. Per Lee C.
     C                   END                                                    *FI
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * RTV System Value Alpha RT - System Values  * Email for Business
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WBDOCD                         System Value Co
      * Setup key
     C                   MOVEL     @CN(002)      WBDOCD                         System Value Co
      * Establish starting position
     C     KRSSB         CHAIN     @DPRETD                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0759'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      YL0001 = ' '                                 System Value Al
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WBBXTX        YL0001                         System Value Al
     C                   ENDIF
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * RTV Data Libraries     RT - System Values  * In TEST or PROD
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KPSSC         KLIST
     C                   KFLD                    WBDOCD                         System Value Co
      * Setup key
     C                   EVALR     WBDOCD = ' '                                 System Value Co
     C                   MOVEL     'DTALIB'      WBDOCD                         System Value Co
      * Establish starting position
     C     KPSSC         SETLL     @DPRETD                                      *
     C                   READ      @DPRETD                                90    *
      * Data record not found
     C   90              MOVEL     'USR0759'     W0RTN
      * USER: Process Data record
      * CASE: DB1.System Value Code is Data File Library
     C                   DOW       NOT *IN90
     C                   IF        WBDOCD = @CN(003)
     C                   MOVEL     WBBXTX        YL0002                         Library List Co
     C                   ELSE
      * CASE: DB1.System Value Code is History File Library
     C                   IF        WBDOCD = @CN(004)
     C                   MOVEL     WBBXTX        YN0001                         @Library List C
     C                   GOTO      SCEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   READ      @DPRETD                                90    *
     C                   ENDDO
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * RTV Numeric Value      RT - System Values  * API Wait Time in Se
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    WBDOCD                         System Value Co
      * Setup key
     C                   MOVEL     WL0001        WBDOCD                         System Value Co
      * Establish starting position
     C     KRSSD         CHAIN     @DPRETD                            90        *
      * Data record not found
     C   90              MOVEL     'USR0759'     W0RTN
      * USER: Process Data record
     C                   IF        NOT *IN90
     C                   Z-ADD     WBM8NB        WL0002                         System Value Nu
     C                   GOTO      SDEXIT                                       *QUIT
     C                   ENDIF
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SERVGN        BEGSR
      *================================================================
      * Rtv Live w/Carl,AutoRstRT - Warehouse Codes  * Ship From Whse
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0004 = ' '                                 WHS Live with C
     C                   EVAL      WL0005 = ' '                                 WHS Auto Inv Re
      * Define keylist
     C     KRSSE         KLIST
     C                   KFLD                    WCAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     WL0003        WCAJCD                         Warehouse Code
      * Establish starting position
     C     KRSSE         CHAIN     @ADREAO                            90        *
      * Data record not found
     C   90              MOVEL     'USR0007'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WCRRSX        WL0004                         WHS Live with C
     C                   MOVEL     WCRPSX        WL0005                         WHS Auto Inv Re
     C                   ENDIF
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFCHRC        BEGSR
      *================================================================
      * Chg Record Processed  CH - WIM API Failure Log  * 'X' Cancel
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                   EVAL      WN0001 = ' '                                 API Name
     C                   EVAL      WN0002 = ' '                                 API EccResult M
     C                   EVAL      WN0003 = ' '                                 API EccResult-M
     C                   EVAL      WN0004 = ' '                                 API Request Key
     C                   EVAL      WN0005 = ' '                                 Called From Pro
     C                   Z-ADD     *ZERO         WN0006                         Company Number
     C                   Z-ADD     *ZERO         WN0007                         Item Code
     C                   EVAL      WN0008 = ' '                                 Ship From Wareh
     C                   EVAL      WN0009 = ' '                                 WIM Inventory T
     C                   EVAL      WN0010 = ' '                                 WIM Inventory T
     C                   Z-ADD     *ZERO         WN0011                         Transaction Dat
     C                   Z-ADD     *ZERO         WN0012                         Production Date
     C                   EVAL      WN0013 = ' '                                 Item Transactio
     C                   EVAL      WN0014 = ' '                                 Transaction Des
     C                   EVAL      WN0015 = ' '                                 Transaction Rea
     C                   Z-ADD     *ZERO         WN0016                         Order Number
     C                   EVAL      WN0017 = ' '                                 Shift Number
     C                   EVAL      WN0018 = ' '                                 Ship To Warehou
     C                   Z-ADD     *ZERO         WN0019                         Transaction Wei
     C                   Z-ADD     *ZERO         WN0020                         Transaction Qua
     C                   EVAL      WN0021 = ' '                                 Unship Flag
     C                   EVAL      WN0022 = ' '                                 Inter Plant Tra
     C                   EVAL      WN0023 = ' '                                 Record Status
     C                   MOVEL     XDTSDL        WN0024                         Create Date Tim
     C                   EVAL      WN0025 = ' '                                 Create User ID
     C                   EVAL      WN0026 = ' '                                 Create Program
     C                   MOVEL     XDTSDL        WN0027                         Update Date Tim
     C                   EVAL      WN0028 = ' '                                 Update User Id
     C                   EVAL      WN0029 = ' '                                 Update Program
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @ADCPNK
     C                   Z-ADD     WL0006        WDH1NZ                         Surrogate Nbr
      *
     C     KLCHSF        KLIST
     C                   KFLD                    WDH1NZ                         Surrogate Nbr
     C     KLCHSF        CHAIN     @ADCPNK                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PVADCPL0'    MDACP
     C                   MOVEL     '@ADCPNK'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SFEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SFEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QPVAD1        YARDCS
      * Move non-key fields to @ADCPNK
     C                   MOVEL(P)  WL0007        WDN6SC                         Record Processe
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QPVAD1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * USER: Processing before Data update
      * Set Chg Time Stamp DDL IF
      * *** Set CHANGE Time Stamp Info.
      * PAR.Update Date Timestamp = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WDBHTS                         Update Date Tim
     C                   EVAL      WDRWU1 = ' '                                 Update User Id
     C                   MOVEL     ##USR         WDRWU1                         Update User Id
     C                   EVAL      WDRXU1 = ' '                                 Update Program
     C                   MOVEL     ##PGM         WDRXU1                         Update Program
      * Set PGM.*Record Data Changed flag
     C                   IF        QPVAD1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @ADCPNK                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PVADCPL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * Rtv Whs 846 Active    RT - EDI WHS Interchange  * Ship From Whse
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    WEAJCD                         Warehouse Code
     C                   KFLD                    WEM4AA                         Interchange Cod
      * Setup key
     C                   MOVEL     WL0008        WEAJCD                         Warehouse Code
     C                   MOVEL     WL0009        WEM4AA                         Interchange Cod
      * Establish starting position
     C     KRSSG         CHAIN     @G0REJZ                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR4409'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WL0010 = ' '                                 Record Status
     C                   GOTO      SGEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WEVSST        WL0010                         Record Status
     C                   ENDIF
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAH1NZ                         Surrogate Nbr
     C                   Z-ADD     *ZERO         WAAIC3                         Company Number
     C                   Z-ADD     *ZERO         WAHGCD                         Item Code
     C                   Z-ADD     *ZERO         WAA9DT                         Transaction Dat
     C                   Z-ADD     *ZERO         WAELDT                         Production Date
     C                   Z-ADD     *ZERO         WAC4NB                         Order Number
     C                   Z-ADD     *ZERO         WAAHWG                         Transaction Wei
     C                   Z-ADD     *ZERO         WAA5QT                         Transaction Qua
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(001)      XDTSDL
     C                   MOVEL     XDTSDL        WABGTS                         Create Date Tim
     C                   MOVEL     XDTSDL        WABHTS                         Update Date Tim
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WBM8NB                         System Value Nu
     C                   Z-ADD     *ZERO         WBAATM                         Job Time
     C                   Z-ADD     *ZERO         WBAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WEF5NZ                         EDI Company # 9
     C                   Z-ADD     *ZERO         WEF6NZ                         Hold til ship w
     C                   Z-ADD     *ZERO         WEMJDT                         Create Date
     C                   Z-ADD     *ZERO         WEBETM                         Create Time
     C                   Z-ADD     *ZERO         WEMKDT                         Change Date
     C                   Z-ADD     *ZERO         WEBFTM                         Change Time
      * Define *Synon program work fields
     C                   Z-ADD     *ZEROS        YRSW00                         *Synon (5,0) wo
     C                   Z-ADD     *ZEROS        YRSW01                         *Synon (5,0) wo
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SDRVGN.
     C                   EVAL      WL0001 = ' '
     C                   Z-ADD     *ZERO         WL0002
      * Define local variables for subroutine SERVGN.
     C                   EVAL      WL0003 = ' '
     C                   EVAL      WL0004 = ' '
     C                   EVAL      WL0005 = ' '
      * Define local variables for subroutine SFCHRC.
     C                   Z-ADD     *ZERO         WL0006
     C                   EVAL      WL0007 = ' '
      * Define local variables for subroutine SGRVGN.
     C                   EVAL      WL0008 = ' '
     C                   EVAL      WL0009 = ' '
     C                   EVAL      WL0010 = ' '
      * Define local work field Email Address f/Bus USR
     C                   EVAL      YL0001 = ' '
      * Define local work field Library List Code
     C                   EVAL      YL0002 = ' '
      * Define null work field @Library List Code
     C                   EVAL      YN0001 = ' '
      * Define local work field API Wait Time U
     C                   Z-ADD     *ZERO         YL0003
      * Define local work field Successful Completion USR
     C                   EVAL      YL0004 = ' '
      * Define local work field API Call Failed USR
     C                   EVAL      YL0005 = ' '
      * Define local work field Email Subject 2 USR
     C                   EVAL      YL0006 = ' '
      * Define local work field Cancelled Flag USR
     C                   EVAL      YL0007 = ' '
      * Define local work field Date Timestamp Txt U
     C                   EVAL      YL0008 = ' '
      * Define local work field Hour 2A USR
     C                   EVAL      YL0009 = ' '
      * Define local work field Minute 2A USR
     C                   EVAL      YL0010 = ' '
      * Define local work field Second 2A USR
     C                   EVAL      YL0011 = ' '
      * Define local work field Time Alpha usr 6
     C                   EVAL      YL0012 = ' '
      * Define local work field USR From Time 6.0
     C                   Z-ADD     *ZERO         YL0013
      * Define local work field WHS Live with Carlisle
     C                   EVAL      YL0014 = ' '
      * Define local work field WHS Auto Inv Restoration
     C                   EVAL      YL0015 = ' '
      * Define local work field Record Status
     C                   EVAL      YL0016 = ' '
      * Define local work field API EccResult-MsgId U
     C                   EVAL      YL0017 = ' '
      * Define local work field API Request Key U
     C                   EVAL      YL0018 = ' '
      * Define null work field API EccResult-MsgDesc U
     C                   EVAL      YN0002 = ' '
      * Define local work field Email Message 2 USR
     C                   EVAL      YL0019 = ' '
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
00002 WIMAPIFLBS
00003 DTALIB
00004 HISLIB
00005 APIWAITTM2
00006 WIM API Call was Reran fo
00007 r Failed Inv Trans
00008 PRKFLIB
00009 - TEST
00010 ECC0000
00011 The Job Schedule for the
00012 WIM Outbound API (wim.ord
00013 ershipping.inventory)
00014 call was reran and
00015 was partially successful
00016 was not successful
00017 due to JS application
00018 connectivity issue. It
00019 will retry to run again
00020 in the next hour.
