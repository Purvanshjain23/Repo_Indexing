      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HPS Data Mart
      * PROGRAM:     HP206-Build DataMart Farm Buildings
      *              (BGF only)
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     01/30/03
      *
      * FUNCTION:    This file in the Data Mart will be re-created with
      *              each load of the Data Mart. There is one record for each
      *              farm/building.
      *
      *              Only BGF farms are included.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 09/29/03  Barb Gutierrez
      *           Recompile only.
      *
      * 12/28/04  LeAnne Fedor
      *           Recompile only. New field 'Farm Size' added to Datamart Farm Site
      *           file.
      *
      * 01/16/06  LeAnne Fedor
      *           Recompile only.
      *           We have removed "Bin Set" from HSP020-Building/Rooms and put it in our new
      *           HSP113-Rooms/Bin Sets file.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS:
      ****************************************************************
      *
     Fhsp018    if   e           k disk    rename(fsrec:fsrechps) prefix(p2)
      *  Farm site
      *
      *
     FhppB018   if   e           k disk
      *  Datamart BGF: Farm site
      *
      *
     Fhsp019    if   e           k disk
      *  Farm buildings
      *
      *
     Fhppb019   o    e             disk    rename(fbrec:fbrec1) prefix(p1)
      *  Datamart BGF: Farm buildings
      *
      *
     Fhsp020    if   e           k disk
      *  Building rooms
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields and counts
      *
     D actfl           s              1a
     D actbldg         s              3  0
      *
      *
      * Workfields
      *
     D wkcphd          s              5  0
     D wkfld           s              5  0
      *
      *
      * Parm fields
      *
     D xxfssqft        s              7  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Process the Datamart BGF Farm Master
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hppb018                                90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Calculate a 'hog capacity' per building that will ultimately be
      * put into every record that we write to the Datamart file.
      *
     C                   exsr      $capacity
      *
      *
      * Retrieve the 'buildings' for this farm from the HPS file and
      * write corresponding records to the Datamart Farm Buildings file
      *
     C                   exsr      $buildings
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
     C                   seton                                        lr
      /eject
      *-------------------------------------------------------------------------
      * Calculate the 'hog capacity' per building
      *-------------------------------------------------------------------------
      *
     C     $capacity     begsr
      *
     C                   z-add     0             wkcphd
     C                   z-add     0             actbldg
      *
     C     fsfscd        setll     hsp019
      *
      * For each building on the farm, determine if it has any active rooms.
      *
     C                   dou       *in91 = *on                                  Do buildings
     C     fsfscd        reade     hsp019                                 91
     C                   if        *in91 = *off                                 If not EOF
     C                   exsr      $rooms
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do buildings
      *
      * You now know how many 'active' buildings are on the farm.
      * So, calculate the hog capacity for buildings in two steps as:
      *
      * hog capacity for the farm =
      *   total square feet of barns on the farm / targeted square feet per pig
      *
      * hog capacity for each building =
      *    hog capacity for the farm / number of active buildings
      *
      * (You will need values from the HPS Farm site file for the calcs.)
      *
      *
     C                   if        actbldg <> 0                                 If active bldgs
      *
     C     fsfscd        chain     hsp018                             92
     C                   if        *in92 = *off and p2fshdsqft <> 0
      *
      * Call the generic program to retrieve total square feet of all active
      * rooms on the farm.
     C                   call      'HP8003'
     C                   parm                    fsfscd
     C                   parm      0             xxfssqft
      *
     C     xxfssqft      div(h)    p2fshdsqft    wkfld
     C     wkfld         div(h)    actbldg       wkcphd
     C                   endif
      *
     C                   endif                                                  If active bldgs
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------
      * Determine if the building is 'active'.
      *-------------------------------------------------------------------------
      *
      * Read all 'rooms' for the building. If any 'room' is active; then, the
      * building will be considered 'active'.
      *
     C     $rooms        begsr
      *
     C                   move      no            actfl
     C     key01         setll     hsp020
      *
     C                   dou       *in93 = *on or actfl = yes                   Do loop
     C     key01         reade     hsp020                                 93
     C                   if        *in93 = *off and brrmst = 'A'                If active
     C                   move      yes           actfl
     C                   endif                                                  If active
     C                   enddo                                                  Do loop
      *
     C                   if        actfl = yes
     C                   add       1             actbldg
     C                   endif
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------
      * Process all buildings for this farm
      *-------------------------------------------------------------------------
      *
     C     $buildings    begsr
      *
     C     fsfscd        setll     hsp019
      *
     C                   dou       *in91 = *on                                  Do buildings
     C     fsfscd        reade     hsp019                                 91
     C                   if        *in91 = *off                                 If not EOF
     C                   z-add     fbfscd        p1fbfscd
     C                   move      fbblcd        p1fbblcd
     C                   move      fbblds        p1fbblds
     C                   z-add     wkcphd        p1fbcphd
      *
      *
      * Calculate the 'pig day capacity' for the building by multiplying
      * the head capacity by 7 days.
      *
     C     wkcphd        mult      7             p1fbcppd
      *
      *
      * Create a 'building' description field that concatenates the
      * word 'building' and the building code.
      *
     C                   eval      p1fbblcdds = 'Bldg' + ' ' + %trim(p1fbblcd)
      *
      * You have to set the active/inactive value for this building...just execute
      * the 'rooms' subroutine again to make the determination.
      *
     C                   exsr      $rooms
      *
     C                   if        actfl = yes
     C                   move      'A'           p1fbaist
     C                   else
     C                   move      'I'           p1fbaist
     C                   endif
      *
      * Write the Datamart record.
      *
     C                   write     fbrec1
     C                   clear                   fbrec1
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do buildings
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key list
      *
     C     key01         klist
     C                   kfld                    fbfscd
     C                   kfld                    fbblcd
      *
     C                   endsr
      /eject
