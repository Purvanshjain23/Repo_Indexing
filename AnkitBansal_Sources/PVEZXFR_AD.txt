// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PVEZXFR
// ?Date: 14.08.2025 Time: 03:51:59
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Retrieve order number
EXECUTE FUNCTION(CHG Next Order Number  CH) TYPE(CHGOBJ) FILE(CAASREP)          AC1263775;
PARAMETER(*ZERO);
PARAMETER(PAR.Next_Order_Number);
{
 //?USER: Processing before Data update

 //?Assumes Credit memo numbers always automatically assigned
 // PGM.*Record Data Changed = CND.*YES
 PGM.*Record_Data_Changed = 'Y';

 // PAR.USR Next Order Number = DB1.Next Order Number
 PAR.USR_Next_Order_Number = DB1.Next_Order_Number;

 // DB1.Next Order Number = DB1.Next Order Number + CON.1
 DB1.Next_Order_Number = DB1.Next_Order_Number + 1;

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?Copy order header from Qtemp
EXECUTE FUNCTION(CPY Copy Orders Templt RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1455073;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Next_Order_Number);
PARAMETER(PAR.Absorbed_Freight_Rate_CWT);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(CRT Order Header WF    CR) TYPE(CRTOBJ) FILE(OPBFCPP)          AC1454783;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Next_Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER('N');
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 {
  //?USER: Processing before Data update

  // DB1.Age Code = CND.Blank
  DB1.Age_Code = *BLANK;

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // DB1.User Id = CON.INFORMATIC
  DB1.User_Id = 'INFORMATIC';

  // DB1.Job Name = CON.AUTOUPLOAD
  DB1.Job_Name = 'AUTOUPLOAD';

  // Call program RTV System Date/Time   UP.
  CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
  PARAMETER(DB1.Date_of_Original_Entry);
  PARAMETER(DB1.Time_of_Original_Entry);

  //?USER: Processing if Data record already exists

  RETURN;

 }

 EXECUTE FUNCTION(CRT OP Order Events    CR) TYPE(CRTOBJ) FILE(OPEYCPP)          AC1170141;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Next_Order_Number);
 PARAMETER(1);
 PARAMETER('01');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(JOB.*Job_date);
 PARAMETER('Y');
 PARAMETER('N');
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.Ship_To_Customer);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 // PAR.Absorbed Freight Rate CWT = DB1.Absorbed Freight Rate CWT
 PAR.Absorbed_Freight_Rate_CWT = DB1.Absorbed_Freight_Rate_CWT;

}


EXECUTE FUNCTION(CHG Order Number WRKF CH) TYPE(CHGOBJ) FILE(OPBFCPP)           AC2228404;
PARAMETER(PAR.Company_Number);
PARAMETER(9999999);
PARAMETER(PAR.Next_Order_Number);
{
 //?USER: Processing after Data read

 // DB1.Order Number = PAR.Next Order Number
 DB1.Order_Number = PAR.Next_Order_Number;

}


EXECUTE FUNCTION(RTV Order Number WRKF  CH) TYPE(RTVOBJ) FILE(OPBGWKP)          AC2228406;
PARAMETER(PAR.Company_Number);
PARAMETER(9999999);
PARAMETER(PAR.Next_Order_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(CHG Order Number WRKF  CH) TYPE(CHGOBJ) FILE(OPBGWKP)          AC2228405;
 PARAMETER(DB1.Company_Number);
 PARAMETER(9999999);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Order_Group_Code);
 PARAMETER(DB1.Detail_Line_Status);
 PARAMETER(DB1.Detail_Line_Status_Last);
 PARAMETER(DB1.Billing_Detail_Cost_Dol);
 PARAMETER(DB1.Billing_Detail_Gross_Dol);
 PARAMETER(DB1.Billing_Detail_Net_Dol);
 PARAMETER(DB1.Quantity_to_Substitute);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Extended_Amount);
 PARAMETER(DB1.Market_Pricing_Date);
 PARAMETER(DB1.Commodity_Market_Code);
 PARAMETER(DB1.Date_Method_Code);
 PARAMETER(DB1.Price_Method_Code);
 PARAMETER(DB1.Price_Overage_Override);
 PARAMETER(DB1.Contract_Number);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Pricing_Date_Used);
 PARAMETER(DB1.U_M_Base_Price);
 PARAMETER(DB1.U_M_Ordered);
 PARAMETER(DB1.Work_Confirm_Status);
 PARAMETER(DB1.Work_Over_Short_Status);
 PARAMETER(DB1.OD_Production_Plan_Sts);
 PARAMETER(DB1.Order_Desc_Line_One);
 PARAMETER(DB1.Order_Desc_Line_Two);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Catch_Weight_Status);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Audit_Reason_Code);
 PARAMETER(DB1.Production_Date_Control);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.Quantity_Ordered);
 PARAMETER(DB1.Weight_Ordered);
 PARAMETER(DB1.Quantity_Scheduled);
 PARAMETER(DB1.Weight_Scheduled);
 PARAMETER(DB1.Quantity_Shipped_Total);
 PARAMETER(DB1.Weight_Shipped_Total);
 PARAMETER(DB1.Unit_Cost_Pricing_U_M);
 PARAMETER(DB1.Unit_Cost_Per_Pound);
 PARAMETER(DB1.Unit_Price);
 PARAMETER(DB1.Unit_Price_Credit);
 PARAMETER(DB1.Unit_Price_Ordered_U_M);
 PARAMETER(DB1.Unit_Weight_Ordered_U_M);
 PARAMETER(DB1.Tare_Weight_Total);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Affect_Inventory_Status);
 PARAMETER(DB1.Affect_Sales_Doll_Status);
 PARAMETER(DB1.Affect_Sales_Pnds_Status);
 PARAMETER(DB1.Item_Structure_Type_Code);
 PARAMETER(DB1.Item_Structure_Group_Code);
 PARAMETER(DB1.Item_Structure_Class_Code);
 PARAMETER(DB1.Item_Level);
 PARAMETER(DB1.Quality_Level);
 PARAMETER(DB1.Pricing_Product_Class_Rep);
 PARAMETER(DB1.Season_Product_Class_Repo);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.User_Profile_Name);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.Substituted_Flag);
 PARAMETER(DB1.OD_Schedule_Override_Sts);
 PARAMETER(DB1.Invoice_Unit_Price);
 PARAMETER(DB1.Invoice_Extended_Amt);
 PARAMETER(DB1.Ham_Group_Number);
 PARAMETER(DB1.OD_Adj_Type_Override);
 PARAMETER(DB1.Affect_Trade_Fund);
 PARAMETER(DB1.Affect_Commission);
 PARAMETER(DB1.Affect_Pricing);
 PARAMETER(DB1.Released_by_User_Sts_Y_N);
 PARAMETER(DB1.Ord_TF_Exempt_Code);
 PARAMETER(DB1.OD_Pallet_Type);
 PARAMETER(DB1.Production_Warehouse);
 PARAMETER(DB1.OD_Price_Type);
 PARAMETER(DB1.Warehouse_Pallets_Loaded);
 PARAMETER(DB1.Consumed_Item_Code);
 PARAMETER(DB1.Deadline_Depart_Date_LH);
 PARAMETER(DB1.OD_Price_Type_Ref_Num);
 PARAMETER(DB1.OD_Firm_Date);
 PARAMETER(DB1.Deadline_Depart_Time_LH);
 PARAMETER(DB1.Price_Code);
 PARAMETER(DB1.Maximum_Net_Weight);
 PARAMETER(DB1.Substitution_Line_Number);
 PARAMETER(DB1.Max_Qty_to_sched_per_day);
 PARAMETER(DB1.Warehouse_Pallet_Tare);
 PARAMETER(DB1.Warehouse_Avg_Pallet_Tare);
 PARAMETER(DB1.OD_Item_Target_Price);
 PARAMETER(DB1.OD_Estimated_Gross_Weight);
 PARAMETER(DB1.OD_Maximum_Unit_Weight);
 PARAMETER(DB1.Order_Gate_Final_Price);
 PARAMETER(DB1.OD_Ceiling_Price);
 PARAMETER(DB1.OD_Gate_Final_Price_Adj);
 PARAMETER(DB1.OD_Weighted_Avg_Price);
 PARAMETER(DB1.OD_Original_Ordered_Qty);
 PARAMETER(DB1.OD_Cancel_Date);
 PARAMETER(DB1.OD_Unused_Prc_7);
 PARAMETER(DB1.OD_Unused_Prc_8);
 PARAMETER(DB1.OD_MPR_Sent_to_USDA_Sts);
 PARAMETER(DB1.OD_MPR_Prc_Ready_to_Send);
 PARAMETER(DB1.OD_UnUsed_Price_Sts_3);
 PARAMETER(DB1.Weight_Amount_Entered);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
 PARAMETER(DB1.Production_Ovr_AgeDte_To);
 PARAMETER(DB1.OD_Spot_Buy);
 PARAMETER(DB1.OD_Clm_Full_Return_to_Plt);
 PARAMETER(DB1.Order_Line_Error_Type);
 PARAMETER(DB1.OD_Market_Begin_Date);
 PARAMETER(DB1.OD_Market_Ending_Date);
 PARAMETER(DB1.OD_Atch_to_Ord_ActShpDte);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 PARAMETER(PAR.Next_Order_Number);
 {
  //?USER: Processing after Data read

  // DB1.Order Number = PAR.Next Order Number
  DB1.Order_Number = PAR.Next_Order_Number;

 }

}


//?Copy order detail from Qtemp
//?FP1054 pass in order type
EXECUTE FUNCTION(CPY Copy Orders Templt RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1455076;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Next_Order_Number);
PARAMETER(PAR.Next_Order_Number);
PARAMETER(PAR.Order_Type_Sales);
{
 //?USER: Initialize routine

 //?***** PA PROCESS - USE REQUESTED SHIP DATE FOR Ship Date USR *****
 //?USER: Process Data record

 CASE;

 // IF DB1.Detail Line Status is Not cancelled
 IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

 CASE;

 // IF DB1.OD Production Plan Sts is Yes
 IF DB1.OD_Production_Plan_Sts = *BLANK;

 //?Allocate production
 // PAR.Quantity Scheduled = DB1.Quantity Scheduled
 PAR.Quantity_Scheduled = DB1.Quantity_Scheduled;

 // PAR.Weight Scheduled = DB1.Weight Scheduled
 PAR.Weight_Scheduled = DB1.Weight_Scheduled;

 // Call program UPD Avail-To-Sell  ORD XF.
 CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Next_Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Quantity_Ordered);
 PARAMETER(DB1.Weight_Ordered);
 PARAMETER(PAR.Quantity_Scheduled);
 PARAMETER(PAR.Weight_Scheduled);
 PARAMETER('OA');
 PARAMETER(JOB.*PROGRAM);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
 PARAMETER(DB1.Production_Ovr_AgeDte_To);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Quantity Scheduled = DB1.Quantity Ordered
 PAR.Quantity_Scheduled = DB1.Quantity_Ordered;

 // PAR.Weight Scheduled = DB1.Weight Ordered
 PAR.Weight_Scheduled = DB1.Weight_Ordered;

 ENDIF;

 //?--------------
 //?06/17/09 PKD FP1054 Do not calculate Extended Amount
 //?--------------
 EXECUTE FUNCTION(Rtv Item Target Price  RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1623375;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(LCL.Item_Target_Price);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(CRT Order Detail WF    CR) TYPE(CRTOBJ) FILE(OPBGWKP)          AC1454779;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Next_Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Order_Group_Code);
 PARAMETER(DB1.Detail_Line_Status);
 PARAMETER(DB1.Detail_Line_Status_Last);
 PARAMETER(DB1.Billing_Detail_Cost_Dol);
 PARAMETER(DB1.Billing_Detail_Gross_Dol);
 PARAMETER(DB1.Billing_Detail_Net_Dol);
 PARAMETER(DB1.Quantity_to_Substitute);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(PAR.Extended_Amount);
 PARAMETER(DB1.Market_Pricing_Date);
 PARAMETER(DB1.Commodity_Market_Code);
 PARAMETER(DB1.Date_Method_Code);
 PARAMETER(DB1.Price_Method_Code);
 PARAMETER(DB1.Price_Overage_Override);
 PARAMETER(DB1.Contract_Number);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Pricing_Date_Used);
 PARAMETER(DB1.U_M_Base_Price);
 PARAMETER(DB1.U_M_Ordered);
 PARAMETER(DB1.Work_Confirm_Status);
 PARAMETER(DB1.Work_Over_Short_Status);
 PARAMETER(DB1.OD_Production_Plan_Sts);
 PARAMETER(DB1.Order_Desc_Line_One);
 PARAMETER(DB1.Order_Desc_Line_Two);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Catch_Weight_Status);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Audit_Reason_Code);
 PARAMETER(DB1.Production_Date_Control);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.Quantity_Ordered);
 PARAMETER(DB1.Weight_Ordered);
 PARAMETER(PAR.Quantity_Scheduled);
 PARAMETER(PAR.Weight_Scheduled);
 PARAMETER(DB1.Quantity_Shipped_Total);
 PARAMETER(DB1.Weight_Shipped_Total);
 PARAMETER(DB1.Unit_Cost_Pricing_U_M);
 PARAMETER(DB1.Unit_Cost_Per_Pound);
 PARAMETER(DB1.Unit_Price);
 PARAMETER(DB1.Unit_Price_Credit);
 PARAMETER(DB1.Unit_Price_Ordered_U_M);
 PARAMETER(DB1.Unit_Weight_Ordered_U_M);
 PARAMETER(DB1.Tare_Weight_Total);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Affect_Inventory_Status);
 PARAMETER(DB1.Affect_Sales_Doll_Status);
 PARAMETER(DB1.Affect_Sales_Pnds_Status);
 PARAMETER(DB1.Item_Structure_Type_Code);
 PARAMETER(DB1.Item_Structure_Group_Code);
 PARAMETER(DB1.Item_Structure_Class_Code);
 PARAMETER(DB1.Item_Level);
 PARAMETER(DB1.Quality_Level);
 PARAMETER(DB1.Pricing_Product_Class_Rep);
 PARAMETER(DB1.Season_Product_Class_Repo);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.User_Profile_Name);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.Substituted_Flag);
 PARAMETER(DB1.OD_Schedule_Override_Sts);
 PARAMETER(DB1.Invoice_Unit_Price);
 PARAMETER(DB1.Invoice_Extended_Amt);
 PARAMETER(DB1.Ham_Group_Number);
 PARAMETER(DB1.OD_Adj_Type_Override);
 PARAMETER(DB1.Affect_Trade_Fund);
 PARAMETER(DB1.Affect_Commission);
 PARAMETER(DB1.Affect_Pricing);
 PARAMETER(DB1.Released_by_User_Sts_Y_N);
 PARAMETER(DB1.Ord_TF_Exempt_Code);
 PARAMETER(DB1.OD_Pallet_Type);
 PARAMETER(DB1.Production_Warehouse);
 PARAMETER(DB1.OD_Price_Type);
 PARAMETER(DB1.Warehouse_Pallets_Loaded);
 PARAMETER(DB1.Consumed_Item_Code);
 PARAMETER(DB1.Deadline_Depart_Date_LH);
 PARAMETER(DB1.OD_Price_Type_Ref_Num);
 PARAMETER(DB1.OD_Firm_Date);
 PARAMETER(DB1.Deadline_Depart_Time_LH);
 PARAMETER(DB1.Price_Code);
 PARAMETER(DB1.Maximum_Net_Weight);
 PARAMETER(DB1.Substitution_Line_Number);
 PARAMETER(DB1.Max_Qty_to_sched_per_day);
 PARAMETER(DB1.Warehouse_Pallet_Tare);
 PARAMETER(DB1.Warehouse_Avg_Pallet_Tare);
 PARAMETER(LCL.Item_Target_Price);
 PARAMETER(DB1.OD_Estimated_Gross_Weight);
 PARAMETER(DB1.OD_Maximum_Unit_Weight);
 PARAMETER(DB1.Order_Gate_Final_Price);
 PARAMETER(DB1.OD_Ceiling_Price);
 PARAMETER(DB1.OD_Gate_Final_Price_Adj);
 PARAMETER(DB1.OD_Weighted_Avg_Price);
 PARAMETER(DB1.OD_Original_Ordered_Qty);
 PARAMETER(DB1.OD_Cancel_Date);
 PARAMETER(DB1.OD_Unused_Prc_7);
 PARAMETER(DB1.OD_Unused_Prc_8);
 PARAMETER(DB1.OD_MPR_Sent_to_USDA_Sts);
 PARAMETER(DB1.OD_MPR_Prc_Ready_to_Send);
 PARAMETER(DB1.OD_UnUsed_Price_Sts_3);
 PARAMETER(DB1.Weight_Amount_Entered);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
 PARAMETER(DB1.Production_Ovr_AgeDte_To);
 PARAMETER(DB1.OD_Spot_Buy);
 PARAMETER(DB1.OD_Clm_Full_Return_to_Plt);
 PARAMETER(DB1.Order_Line_Error_Type);
 PARAMETER(DB1.OD_Market_Begin_Date);
 PARAMETER(DB1.OD_Market_Ending_Date);
 PARAMETER(DB1.OD_Atch_to_Ord_ActShpDte);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 {
  //?USER: Processing before Data update

  // DB1.Age Code = CND.Blank
  DB1.Age_Code = *BLANK;

  EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // DB1.User Id = CON.INFORMATIC
  DB1.User_Id = 'INFORMATIC';

  // DB1.Job Name = CON.AUTOUPLOAD
  DB1.Job_Name = 'AUTOUPLOAD';

  // Call program Rtv First Consumed Itm XF.
  CALL PROGRAM(Rtv First Consumed Itm XF) ('POP1XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Consumed_Item_Code);

  //?USER: Processing after Data update

  //?WI642   JM-03/04/25-Crt chg log if dtl has been sent to MPR USDA
  CASE;

  // IF DB1.OD MPR Prc Ready to Send is yes
  IF DB1.OD_MPR_Prc_Ready_to_Send = 'Y';

  //?Always create price type log ORDPRT
  // LCL.Text 3 Length USR = DB1.Order Sequence Number
  LCL.Text_3_Length_USR = DB1.Order_Sequence_Number;

  // LCL.Change Log Prior Value = CONCAT(LCL.Text 3 Length USR,CND.Not Entered,CON.1)
  LCL.Change_Log_Prior_Value = LCL.Text_3_Length_USR + *BLANK (1);

  // LCL.Change Log New Value = PAR.OD Price Type
  LCL.Change_Log_New_Value = PAR.OD_Price_Type;

  // Call program CRT Load/OrderChg n/ld XF.
  CALL PROGRAM(CRT Load/OrderChg n/ld XF) ('PBFLXFR');
  PARAMETER(*ZERO);
  PARAMETER('ORDPRT');
  PARAMETER('SLS');
  PARAMETER(LCL.Change_Log_Prior_Value);
  PARAMETER(LCL.Change_Log_New_Value);
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);

  ENDIF;

  //?WI642   JM-03/04/25-Create Load Order change log.
  CASE;

  // IF DB1.Order Number is ne 9999999
  IF DB1.Order_Number <> 9999999;

  // LCL.Text 3 Length USR = DB1.Order Sequence Number
  LCL.Text_3_Length_USR = DB1.Order_Sequence_Number;

  // LCL.Weight Beg Inv usr = CND.Not Entered
  LCL.Weight_Beg_Inv_usr = *ZERO;

  // LCL.Text USR 7 = LCL.Weight Beg Inv usr
  LCL.Text_USR_7 = LCL.Weight_Beg_Inv_usr;

  // LCL.Change Log Prior Value = CONCAT(LCL.Text 3 Length USR,LCL.Text USR 7,CON.1)
  LCL.Change_Log_Prior_Value = LCL.Text_3_Length_USR + LCL.Text_USR_7 (1);

  // LCL.Weight Beg Inv usr = PAR.Weight Ordered
  LCL.Weight_Beg_Inv_usr = PAR.Weight_Ordered;

  // LCL.Change Log New Value = CVTVAR(LCL.Weight Beg Inv usr)
  LCL.Change_Log_New_Value = CVTVAR(LCL.Weight_Beg_Inv_usr);

  // Call program CRT Load/OrderChg n/ld XF.
  CALL PROGRAM(CRT Load/OrderChg n/ld XF) ('PBFLXFR');
  PARAMETER(*ZERO);
  PARAMETER('ORDWGT');
  PARAMETER('SLS');
  PARAMETER(LCL.Change_Log_Prior_Value);
  PARAMETER(LCL.Change_Log_New_Value);
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);

  // LCL.Weight Beg Inv usr = CND.Not Entered
  LCL.Weight_Beg_Inv_usr = *ZERO;

  // LCL.Text USR 7 = LCL.Weight Beg Inv usr
  LCL.Text_USR_7 = LCL.Weight_Beg_Inv_usr;

  // LCL.Change Log Prior Value = CONCAT(LCL.Text 3 Length USR,LCL.Text USR 7,CON.1)
  LCL.Change_Log_Prior_Value = LCL.Text_3_Length_USR + LCL.Text_USR_7 (1);

  // LCL.Weight Beg Inv usr = PAR.Quantity Ordered
  LCL.Weight_Beg_Inv_usr = PAR.Quantity_Ordered;

  // LCL.Change Log New Value = CVTVAR(LCL.Weight Beg Inv usr)
  LCL.Change_Log_New_Value = CVTVAR(LCL.Weight_Beg_Inv_usr);

  // Call program CRT Load/OrderChg n/ld XF.
  CALL PROGRAM(CRT Load/OrderChg n/ld XF) ('PBFLXFR');
  PARAMETER(*ZERO);
  PARAMETER('ORDQTY');
  PARAMETER('SLS');
  PARAMETER(LCL.Change_Log_Prior_Value);
  PARAMETER(LCL.Change_Log_New_Value);
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);

  ENDIF;

 }

 ENDIF;

}


//?Copy order detail financials
EXECUTE FUNCTION(CPY Copy Orders Templt RT) TYPE(RTVOBJ) FILE(OMCRWKP)          AC1455081;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Next_Order_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(CRT Ship/Detl Fin. WF  CR) TYPE(CRTOBJ) FILE(OMCRWKP)          AC1455083;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Next_Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Sequence_Number);
 PARAMETER(DB1.Financial_Type);
 PARAMETER(DB1.Transaction_Amount);
 PARAMETER(DB1.Financial_Text);
 PARAMETER(DB1.Enterprise_Code_1);
 PARAMETER(DB1.Enterprise_Code_2);
 PARAMETER(DB1.SH_Expense_Bucket);
 PARAMETER(DB1.G_L_Sub_Account);
 PARAMETER(DB1.Financial_Charge_Status);
 PARAMETER(DB1.Special_Charge_Rate);
 PARAMETER(DB1.Accrual_Code);
 PARAMETER(DB1.Financial_Code);
 PARAMETER(DB1.GL_Document_Number);
 PARAMETER(DB1.GL_Update_Status);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 {
  //?USER: Processing before Data update

  // DB1.Job Time = JOB.*Job time
  DB1.Job_Time = JOB.*Job_time;

  // DB1.User Id = JOB.*USER
  DB1.User_Id = JOB.*USER;

  // DB1.Job Name = JOB.*JOB
  DB1.Job_Name = JOB.*JOB;

  // DB1.Job Date = JOB.*Job date
  DB1.Job_Date = JOB.*Job_date;

 }

}


//?Copy order detail comments
EXECUTE FUNCTION(CPY Copy Orders Templt RT) TYPE(RTVOBJ) FILE(OPCPCPP)          AC1455089;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Next_Order_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(CRT Detail Comment WF  CR) TYPE(CRTOBJ) FILE(OPCPCPP)          AC1455094;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Next_Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Sequence_Number);
 PARAMETER(DB1.Comment_Text);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


//?Copy shipping instructions  3/24/04 RMC
EXECUTE FUNCTION(CPY Copy Orders Templt RT) TYPE(RTVOBJ) FILE(PDIECPP)          AC1685835;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Next_Order_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(CRT PD Ship Inst WF   CR) TYPE(CRTOBJ) FILE(PDIECPP)           AC1685839;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Next_Order_Number);
 PARAMETER(DB1.Sequence_Number);
 PARAMETER(DB1.Shipping_Instructions);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


//?Copy export documents header   3/25/04 RMC
EXECUTE FUNCTION(CPY Copy Orders Templt RT) TYPE(RTVOBJ) FILE(PDMRREP)          AC1685980;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Next_Order_Number);
{
 //?USER: Process Data record

 // LCL.ED Remark Constant 2 = DB1.ED Remark Constant 2
 LCL.ED_Remark_Constant_2 = DB1.ED_Remark_Constant_2;

 CASE;

 // IF DB1.ED Export Document Type is Application for Export
 IF DB1.ED_Export_Document_Type = 'A';

 // LCL.Order Alpha = CVTVAR(PAR.Next Order Number)
 LCL.Order_Alpha = CVTVAR(PAR.Next_Order_Number);

 // LCL.Text-17               USR = CONCAT(CON.Order No.,LCL.Order Alpha,CON.1)
 LCL.Text_17_USR = 'Order No.' + LCL.Order_Alpha (1);

 // Execute function *Move-Right.
 EXECUTE FUNCTION(*Move-Right) TYPE(EXCUSRSRC) ('PDUIUFR');
 PARAMETER(LCL.ED_Remark_Constant_2);
 PARAMETER(LCL.Text_17_USR);
 {
  C                     MOVE #IPANA    #OO9NA
 }

 ENDIF;

 EXECUTE FUNCTION(Crt Exp Doc Order WF  CR) TYPE(CRTOBJ) FILE(PDMRREP)           AC1685981;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Next_Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Area_Office);
 PARAMETER(DB1.ED_Destination);
 PARAMETER(DB1.ED_Consignor_Name);
 PARAMETER(DB1.ED_Consignor_Addr_1);
 PARAMETER(DB1.ED_Consignor_Addr_2);
 PARAMETER(DB1.ED_Consignor_Addr_3);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(DB1.ED_Consignee_Name);
 PARAMETER(DB1.ED_Consignee_Addr_1);
 PARAMETER(DB1.ED_Consignee_Addr_2);
 PARAMETER(DB1.ED_Consignee_Addr_3);
 PARAMETER(DB1.ED_Consignee_Addr_4);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(DB1.ED_Plant_Location_City);
 PARAMETER(DB1.ED_Plant_Location_State);
 PARAMETER(DB1.ED_Plant_Number);
 PARAMETER(DB1.ED_Processing_Plant_Sts);
 PARAMETER(DB1.ED_Attachment_Subtype);
 PARAMETER(DB1.ED_Attachment_Type_Sts);
 PARAMETER(DB1.ED_Xlate_Desc_to_Country);
 PARAMETER(DB1.ED_Unmarked_Txt);
 PARAMETER(DB1.ED_Shipping_Marks_Txt);
 PARAMETER(DB1.ED_Date_of_Slaughter);
 PARAMETER(DB1.ED_Place_of_Slaughter_Txt);
 PARAMETER(DB1.ED_Date_of_Processing);
 PARAMETER(DB1.ED_Place_of_processing_Tx);
 PARAMETER(DB1.ED_Continue_Comment_Txt);
 PARAMETER(DB1.ED_Remark_Constant_1);
 PARAMETER(LCL.ED_Remark_Constant_2);
 PARAMETER(DB1.ED_Remark_Constant_3);
 PARAMETER(DB1.ED_Remark_Constant_4);
 PARAMETER(DB1.ED_Remark_Constant_5);
 PARAMETER(DB1.ED_Remark_Constant_7);
 PARAMETER(DB1.ED_Remark_Constant_8);
 PARAMETER(DB1.ED_Certify_that_the_meat);
 PARAMETER(DB1.ED_Inspector_Name);
 PARAMETER(DB1.ED_Origin_Country);
 PARAMETER(DB1.ED_Port_of_Loading);
 PARAMETER(DB1.ED_Transportion);
 PARAMETER(DB1.ED_Seal_Number_1);
 PARAMETER(DB1.ED_Seal_Number_2);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Nm);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Ad_1);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Ad_2);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Fax);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Phne);
 PARAMETER(DB1.ED_Seaboard_Plant_Fax);
 PARAMETER(DB1.ED_USDA_Cert_Nbr_US);
 PARAMETER(DB1.ED_USDA_Cert_Nbr_CA);
 PARAMETER(DB1.ED_Can_Port_of_Entry);
 PARAMETER(DB1.ED_Can_Reinsp_Est_Nbr);
 PARAMETER(DB1.ED_Can_Reinsp_Est_Name);
 PARAMETER(DB1.ED_Can_Reinsp_Est_City);
 PARAMETER(DB1.ED_Herm_Sealed_Cntr_Sts);
 PARAMETER(DB1.ED_Herm_Sealed_Cntr_Type);
 PARAMETER(DB1.ED_Herm_Sealed_Cntr_p_Crt);
 PARAMETER(DB1.ED_Whole_Bird_Sts);
 PARAMETER(DB1.ED_Marked_Sts);
 PARAMETER(DB1.ED_Tamper_Evident_Sts);
 PARAMETER(DB1.ED_Plant_Contact_Name);
 PARAMETER(DB1.ED_Plant_Contact_Phone);
 PARAMETER(DB1.ED_Modified_Text);
 PARAMETER(DB1.ED_Issued_Crt_for_Exp_Txt);
 PARAMETER(DB1.ED_Species);
 PARAMETER(DB1.ED_Slaughter_Plant_Name);
 PARAMETER(DB1.ED_Slaughter_Plant_Addr_1);
 PARAMETER(DB1.ED_Slaughter_Plant_Addr_2);
 PARAMETER(DB1.ED_Packaging_Plant_Name);
 PARAMETER(DB1.ED_Packaging_Plant_Addr_1);
 PARAMETER(DB1.ED_Packaging_Plant_Addr_2);
 PARAMETER(DB1.ED_Manufact_Plant_Name);
 PARAMETER(DB1.ED_Manufact_Plant_Addr_1);
 PARAMETER(DB1.ED_Manufact_Plant_Addr_2);
 PARAMETER(DB1.ED_USDA_Name_1);
 PARAMETER(DB1.ED_USDA_Name_2);
 PARAMETER(DB1.ED_USDA_Name_3);
 PARAMETER(DB1.ED_Title_of_Official);
 PARAMETER(DB1.ED_Letter_of_Credit_Nbr);
 PARAMETER(DB1.ED_Unused_prd_mo_yr);
 PARAMETER(DB1.ED_Nbr_of_prods_on_1st_pg);
 PARAMETER(DB1.ED_Importer_Name);
 PARAMETER(DB1.ED_Importer_Addr_1);
 PARAMETER(DB1.ED_Importer_Addr_2);
 PARAMETER(DB1.ED_Purchaser_Name);
 PARAMETER(DB1.ED_Purchaser_Addr_1);
 PARAMETER(DB1.ED_Purchaser_Addr_2);
 PARAMETER(DB1.ED_Place_Drct_Shpmnt_Nm);
 PARAMETER(DB1.ED_Place_Drct_Shpmnt_Ad_1);
 PARAMETER(DB1.ED_Place_Drct_Shpmnt_Ad_2);
 PARAMETER(DB1.ED_Place_Drct_Shpmnt_Ad_3);
 PARAMETER(DB1.ED_Currency);
 PARAMETER(DB1.ED_Conditions_of_Sale);
 PARAMETER(DB1.ED_Total_Unit_Price);
 PARAMETER(DB1.ED_Invoice_Total);
 PARAMETER(DB1.ED_Live_with_PHIS);
 PARAMETER(DB1.ED_Print_Status);
 PARAMETER(DB1.ED_Total_Net_Weight_lbs);
 PARAMETER(DB1.ED_Total_Net_Weight_MT);
 PARAMETER(DB1.ED_Nbr_of_Packages);
 PARAMETER(DB1.ED_Customer_PO_#);
 PARAMETER(DB1.ED_Total_Gross_Weight_lbs);
 PARAMETER(DB1.ED_Total_Gross_Weight_MT);
 PARAMETER(DB1.ED_Plant_Number_Dtl);
 PARAMETER(DB1.ED_Language_Xlate_Desc_2);
 PARAMETER(DB1.ED_Slaughter_Date_CofE_3);
 PARAMETER(DB1.ED_Production_mo_yr_ln_3);
 PARAMETER(DB1.ED_Remark_Constant_6);
 PARAMETER(DB1.ED_Allow_Print_bef_Ship);
 PARAMETER(DB1.ED_Cert_of_Orig_Sbd_addr);
 PARAMETER(DB1.ED_Use_item_label_1_2);
 PARAMETER(DB1.ED_Slg_Proc_Date_Format);
 PARAMETER(DB1.ED_Total_Package_UOM);
 PARAMETER(DB1.ED_Export_Certificate_Nbr);
 PARAMETER(DB1.ED_Sail_Date);
 PARAMETER(DB1.ED_Sworn_on_Date);
 PARAMETER(DB1.ED_Consignee_Address_Nbr);
 PARAMETER(DB1.ED_Form_Identification_Tx);
 PARAMETER(DB1.ED_Cold_Storage_Name);
 PARAMETER(DB1.ED_Cold_Storage_Addr_1);
 PARAMETER(DB1.ED_Cold_Storage_Addr_2);
 PARAMETER(DB1.ED_Cold_Storage_Plant_Nbr);
 PARAMETER(DB1.ED_Slaughter_Date_CofE_1);
 PARAMETER(DB1.ED_Production_mo_yr_ln_1);
 PARAMETER(DB1.ED_Production_mo_yr_ln_2);
 PARAMETER(DB1.ED_Booking_Nbr);
 PARAMETER(DB1.ED_Document_Date);
 PARAMETER(DB1.ED_Packing_Date);
 PARAMETER(DB1.ED_Expiration_Date);
 PARAMETER(DB1.ED_Packing_Date_To);
 PARAMETER(DB1.ED_Unused_Date_2);
 PARAMETER(DB1.ED_Print_Kilograms);
 PARAMETER(DB1.ED_MPR_Canadian_Province);
 PARAMETER(DB1.ED_Container_Nbrs);
 PARAMETER(DB1.ED_Slaughter_Date_CofE_2);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


//?Copy export documents detail   3/25/04 RMC
EXECUTE FUNCTION(CPY Copy Orders Templt RT) TYPE(RTVOBJ) FILE(PDMSREP)          AC1686002;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Next_Order_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Crt Exp Doc Order WF  CR) TYPE(CRTOBJ) FILE(PDMSREP)           AC1686003;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Next_Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.ED_Item_Code);
 PARAMETER(DB1.ED_Item_Label_Line_1);
 PARAMETER(DB1.ED_Item_Label_Line_2);
 PARAMETER(DB1.ED_Chilled_Frozen_Text);
 PARAMETER(DB1.ED_Unmarked_Txt);
 PARAMETER(DB1.ED_Product_Net_Weight_lbs);
 PARAMETER(DB1.ED_Product_Net_Weight_MT);
 PARAMETER(DB1.ED_Product_UOM);
 PARAMETER(DB1.ED_Product_Nbr_of_Pkgs);
 PARAMETER(DB1.ED_Product_Pkg_Type);
 PARAMETER(DB1.ED_Shipping_Marks_Txt);
 PARAMETER(DB1.ED_Pieces_per_Bag);
 PARAMETER(DB1.ED_Bags_per_Unit);
 PARAMETER(DB1.ED_Total_Nbr_of_Pieces);
 PARAMETER(DB1.ED_Product_Unit_Price);
 PARAMETER(DB1.ED_Producet_Extended_Amt);
 PARAMETER(DB1.ED_Print_Status);
 PARAMETER(DB1.ED_Plant_Number_Dtl);
 PARAMETER(DB1.ED_Language_Xlate_Desc_2);
 PARAMETER(DB1.ED_Consignee_Address_Nbr);
 PARAMETER(DB1.ED_Date_of_Slaughter_Dtl);
 PARAMETER(DB1.ED_HACCP_Category);
 PARAMETER(DB1.ED_Slaughter_Date_Range);
 PARAMETER(DB1.ED_Production_Date_Range);
 PARAMETER(DB1.ED_Product_UID);
 PARAMETER(DB1.ED_Language_Xlate_Desc);
 PARAMETER(DB1.ED_Unused_Status_1);
 PARAMETER(DB1.ED_Unused_Status_2);
 PARAMETER(DB1.ED_Harmonized_Tariff_Cde);
 PARAMETER(DB1.ED_Nbr_of_Packing_Units);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // DB1.Record Status = CND.Active
  DB1.Record_Status = 'A';

  //?USER: Processing after Data update

  // Call program Rtv/Chg Hdr Shpd Amts XF.
  CALL PROGRAM(Rtv/Chg Hdr Shpd Amts XF) ('POIYXFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);

 }

}


//?Copy export doc hdr ext        7/17/18 RMC         r13074
EXECUTE FUNCTION(CPY Copy Orders Templt RT) TYPE(RTVOBJ) FILE(PUA6CPP)          AC2156862;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Next_Order_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Crt Exp Doc Order ExWFCR) TYPE(CRTOBJ) FILE(PUA6CPP)           AC2156863;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Next_Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.EDE_Reason_f_Replcmnt_Sts);
 PARAMETER(DB1.EDE_Shipment_Type_Sts);
 PARAMETER(DB1.EDE_Frozen_Shelf_Life_Sts);
 PARAMETER(DB1.EDE_ISO_Alpha_2_code);
 PARAMETER(DB1.EDE_USDA_Export_Mark_Sts);
 PARAMETER(DB1.EDE_Special_Printing_Ctl);
 PARAMETER(DB1.EDE_Appl_Billing_First_Nm);
 PARAMETER(DB1.EDE_Appl_Billing_Last_Nm);
 PARAMETER(DB1.EDE_Unused_Date);
 PARAMETER(DB1.EDE_Country_of_Final_Dest);
 PARAMETER(DB1.EDE_I_Certify_Stmt);
 PARAMETER(DB1.EDE_Attachment_Type_Txt);
 PARAMETER(DB1.EDE_Attachment_Sub_Type);
 PARAMETER(DB1.EDE_Transit_Country);
 PARAMETER(DB1.EDE_Container_Number);
 PARAMETER(DB1.EDE_Unused_Text_25);
 PARAMETER(DB1.EDE_Additional_Stmt);
 PARAMETER(DB1.EDE_Maturity_lt_30_Months);
 PARAMETER(DB1.EDE_Seal_Nos);
 PARAMETER(DB1.EDE_IFS_PHIS_Doc_Filename);
 PARAMETER(DB1.EDE_Port_of_Entry);
 PARAMETER(DB1.EDE_Unused_2);
 PARAMETER(DB1.EDE_Unused_3);
 PARAMETER(DB1.EDE_Unused_4);
 PARAMETER(DB1.EDE_Unused_5);
 PARAMETER(DB1.EDE_Consignee_Tele_PHIS);
 PARAMETER(DB1.EDE_Unused_6);
 PARAMETER(DB1.EDE_Unused_7);
 PARAMETER(DB1.EDE_Unused_8);
 PARAMETER(DB1.EDE_Unused_9);
 PARAMETER(DB1.EDE_Unused_10);
 PARAMETER(DB1.EDE_Unused_11);
 PARAMETER(DB1.EDE_Consignor_Tele_PHIS);
 PARAMETER(DB1.EDE_PHIS_Process_Status);
 PARAMETER(DB1.EDE_ETL_Process_Timestamp);
 PARAMETER(DB1.EDE_PHIS_Action);
 PARAMETER(DB1.EDE_Return_Cde_Error);
 PARAMETER(DB1.EDE_Application_UID);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(UPS CRTOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359517;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


//?Copy Intended for Export in OHE           09/10/2009  E00157 LJB
//?E12926 6/13/18 RMC Abs frt rate
//?E2438 2/27/13  Type code == sales channel
EXECUTE FUNCTION(CPY Copy Orders Templt RT) TYPE(RTVOBJ) FILE(PMAMREP)          AC1953002;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.OHE_Spot_Buy);
PARAMETER(PAR.Type_Code);
PARAMETER(PAR.OHE_Intended_for_ExportCC);
PARAMETER(PAR.Absorbed_Freight_Rate_CWT);
PARAMETER(PAR.Next_Order_Number);
{
 //?USER: Processing if Data record not found

 //?07/31/19 DN R15161-Set New OHE Fields.
 EXECUTE FUNCTION(CRT OHE Intended ExportCR) TYPE(CRTOBJ) FILE(PMAMREP)          AC1953266;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Next_Order_Number);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER('O');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.OHE_Carrier_SCAC_Code);
 PARAMETER(PAR.OHE_Spot_Buy);
 PARAMETER(LCL.OHE_PO_ACK_Flag);
 PARAMETER(PAR.OHE_Override_Type_Code);
 PARAMETER(LCL.OHE_Backhaul_Status);
 PARAMETER(LCL.OHE_Backhaul_ETA_AM_PM);
 PARAMETER(LCL.OHE_Load_Haul_Type);
 PARAMETER(LCL.OHE_Backhaul_Carrier_Code);
 PARAMETER(LCL.OHE_Bookings_Confirmed);
 PARAMETER(LCL.OHE_EDI_Error_Reasons);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(PAR.OHE_Intended_for_ExportCC);
 PARAMETER(LCL.OHE_EDI_943_Action);
 PARAMETER(LCL.OHE_EDI_944_Action);
 PARAMETER(LCL.OHE_EDI_940_Action);
 PARAMETER(LCL.OHE_EDI_945_Action);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.OHE_Orig_ABS_Freight_Rate);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.EDI_Status_1);
 PARAMETER(LCL.EDI_Status_2);
 PARAMETER(LCL.EDI_Status_3);
 PARAMETER('A');
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  // DB1.Job Time = JOB.*Job time
  DB1.Job_Time = JOB.*Job_time;

  // DB1.Job Date = JOB.*Job date
  DB1.Job_Date = JOB.*Job_date;

  // DB1.Job Name = JOB.*PROGRAM
  DB1.Job_Name = JOB.*PROGRAM;

  // DB1.User Id = JOB.*USER
  DB1.User_Id = JOB.*USER;

 }

 //?USER: Process Data record

 EXECUTE FUNCTION(CHG New fields        CH) TYPE(CHGOBJ) FILE(PMAMREP)           AC2154754;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Next_Order_Number);
 PARAMETER(PAR.OHE_Spot_Buy);
 PARAMETER(PAR.OHE_Override_Type_Code);
 PARAMETER(PAR.OHE_Intended_for_ExportCC);
 PARAMETER(PAR.OHE_Orig_ABS_Freight_Rate);
 {
  //?USER: Processing before Data update

  // DB1.Job Time = JOB.*Job time
  DB1.Job_Time = JOB.*Job_time;

  // DB1.Job Date = JOB.*Job date
  DB1.Job_Date = JOB.*Job_date;

  // DB1.Job Name = JOB.*PROGRAM
  DB1.Job_Name = JOB.*PROGRAM;

  // DB1.User Id = JOB.*USER
  DB1.User_Id = JOB.*USER;

 }

}


