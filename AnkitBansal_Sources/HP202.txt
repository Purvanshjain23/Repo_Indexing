      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HPS Data Mart
      * PROGRAM:     HP202 - Build DataMart Wean Pig Predictions
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     02/12/02
      *
      * FUNCTION:    This file in the DataMart will be re-created with
      *              each load of the DataMart.
      *
      * Basically, values for predictions come from one of the following sources:
      *    1) actual weekly records
      *       Note: If we do not have an actual for services (in the weeks where we
      *       expect actuals), we will just write a record with all zeros and go to
      *       the next week.
      *    2) rolling averages records
      *    3) last year's quarter averages
      *    4) targets
      *    5) quarter predictions
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 06/25/02  LeAnne Fedor
      *           We used to clear the wean predictions file before each run. Now,
      *           we delete out all records with a wean date on/after the initial
      *           wean date of our run.
      *
      * 10/03/02  LeAnne Fedor
      *           Added new 'target table' logic.
      *
      * 11/21/02  LeAnne Fedor
      *           We added 'fall out rate' to our Target Tables. So, I added the 'target
      *           table' logic for 'fall out rate'.
      *
      * 09/29/03  Barb Gutierrez
      *           Recompile only.
      *
      * 06/30/04  LeAnne Fedor
      *           Recompile only.
      *
      * 09/13/04  LeAnne Fedor
      *           Six new Weekly Wean Projection fields were added to the Datamart
      *           file:
      *                projected 1 week out weaned pigs
      *                projected 2 week out weaned pigs
      *                projected 1 week out weaned sows
      *                projected 2 week out weaned sows
      *                projected 1 week out sow culls
      *                projected 1 week out boar culls
      *
      * 12/28/04  LeAnne Fedor
      *           Recompile only. New field 'Farm Size' added to Datamart Farm Site
      *           file.
      *
      * 02/01/05  LeAnne Fedor
      *           Recompile only. New fields (Sire Line Company and Prime Line) added
      *           to Datamart BGF: Weekly Production file.
      *
      * 02/07/05  LeAnne Fedor
      *           Recompile only due to file changes in Datamart BGF Weekly Production file:
      *                    Added: Transferred In Open Gilts
      *                  Removed: Total Lactation Pounds
      *
      * 07/05/05  LeAnne Fedor
      *           Recompile only due to file changes in Datamart BGF Weekly Production file:
      *           Added 1 new field: Average Daily Beginning Piglet Inventory
      *
      * 08/23/05  LeAnne Fedor
      *           Recompile only. New field added to Datamart BGF Weekly Production file:
      *                Field: Man hours
      *
      * 03/23/06  LeAnne Fedor
      *           Recompile only. New fields added to Datamart BGF Weekly Production file.
      *
      * 04/24/06  LeAnne Fedor
      *           Recompile only. New fields added to Datamart BGF Weekly Production file.
      *                 Cognos Report Grouping
      *                 Weaning Cognos Report Grouping
      *                 Report PCP Cognos Report Grouping
      *                 Report Farrowed Cognos Report Grouping
      *
      * 06/15/06  LeAnne Fedor
      *           Recompile only. New field added to Datamart BGF Weekly Production file:
      *                Field: Total Gilt Weight @ 28 Weeks
      *
      * 09/26/07  LeAnne Ramsey
      *           Recompile only. Added a third field to the keys in HSP096.
      *
      * 08/04/08  LeAnne Ramsey
      *           Recompile only. Fields deleted from Weekly Production file.
      *             BPPSGLSV - Nbr Gilts Bred w/Passed Date
      *             BPWSLB   - Weekly Ending Lbs Supplement Used
      *             BPP2LT   - Total P2 Litters Farrowed
      *             BPTDGB   - Total Days Gilt Breeding Age
      *             BPIOGLHD - Transferred in Open GiltsAge
      *             BPOOGLHD - Gilts Transferred Out Open
      *             BP17WNLT - 17+ Day Weaned Sows
      *             BPTGLLB  - Total Gilt Weight at 28 Weeks
      *
      * 11/06/08  LeAnne Ramsey
      *           Recompile only:
      *           Added 3 new fields to: HSP096-BGF Yearly Targets
      *                                  HPPB092-Datamart BGF: Weekly Production
      *            1) Target open gilt pool eligible
      *            2) Target litters farrowed/mated female/year
      *            3) Target pigs weaned/mated female/year
      *
      * 05/28/09  LeAnne Ramsey
      *           Recompile only. Added new field "Farrowing Crates" to:
      *                 HSP096-BGF Yearly Targets
      *                 HPPB092-Datamart BGF: Weekly Production
      *
      * 09/01/09  LeAnne Ramsey
      *           Recompile only. Added new field "Report Total Litters Farrowed" to:
      *                 HPPB092-Datamart BGF: Weekly Production
      *
      * 01/14/10  LeAnne Ramsey
      *           Recompile only. Changed text on BPLVHD and BPLVLB in:
      *                HPPB092-Datamart BGF: Weekly Production
      *
      * 10/18/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one.
      *
      * 11/10/10  LeAnne Ramsey (E1151)
      *           Recompile only. Increased some head fields from 5,0 to 6,0 in HSP096.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp032    if   e           k disk
      *  Production variables
      *
      *
     Fhsp083    if   e           k disk
      *  Quarterly predictions
      *
      *
     Fhsl086c   if   e           k disk
      *  BGF weekly wean projections
      *
      *
     Fhsp096    if   e           k disk
      *  BGF Yearly targets
      *
      *
     Fhsl097c   if   e           k disk
      *  BGF Target table/farm links
      *
      *
     Fhsp100    if   e           k disk
      *  Quarterly averages
      *
      *
     Fhsp314    if   e           k disk
      *  Workfile: Wean pig rolling averages
      *
      *
     Fhppb018   if   e           k disk
      *  Datamart: BGF farm site
      *
      *
     Fhppb092   if   e           k disk
      *  Datamart: BGF weekly production
      *
      *
     Fhplb092a  if   e           k disk    rename(bprec:bpreca)
      *  Datamart: BGF weekly production
      *
      *
     Fhplb092b  if   e           k disk    rename(bprec:bprecb)
      *  Datamart: BGF weekly production
      *
      *
     Fhplb192c  uf   e           k disk    rename(wprec:wprecc)
      *  Datamart: BGF Weaned pig projections
      *
      *
     Fhppb192   o    e             disk
      *  Datamart: BGF Weaned pig projections
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
     D actual          c                   'Act '
     D rolling         c                   'Roll'
     D quarter         c                   'Qrtr'
     D targets         c                   'Targ'
     D low             c                   'Low '
     D high            c                   'High'
     D override        c                   'Over'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      * Wean year/week/quarter/date arrays
      *
     D arwnyr          s              4  0 dim(156)
     D arwnwk          s              2  0 dim(156)
     D arwnqr          s              1  0 dim(156)
     D arwndt          s             10D   dim(156)
      *
      * Breed/services year/week/quarter/date arrays
      *
     D arsvyr          s              4  0 dim(156)
     D arsvwk          s              2  0 dim(156)
     D arsvqr          s              1  0 dim(156)
     D arsvdt          s             10D   dim(156)
      *
      * Out-of-nursery year/week/quarter/date arrays
      *
     D aronyr          s              4  0 dim(156)
     D aronwk          s              2  0 dim(156)
     D aronqr          s              1  0 dim(156)
     D arondt          s             10D   dim(156)
      *
      * Out-of-grow finish year/week/quarter/date arrays
      *
     D arofyr          s              4  0 dim(156)
     D arofwk          s              2  0 dim(156)
     D arofqr          s              1  0 dim(156)
     D arofdt          s             10D   dim(156)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      *
      * Counters, save fields, control fields
      *
     D x               s              3  0
     D procfl          s              1
     D targetfl        s              1
     D writezero       s              1
      *
     D count           s              3  0
     D countsv         s              3  0
     D countcr         s              3  0
     D countfr         s              3  0
     D countfo         s              3  0
     D countba         s              3  0
     D countpm         s              3  0
     D countnrm        s              3  0
     D countfrm        s              3  0
      *
      *
     D wkstandpr       s              5  4
     D wkpredwk        s              3  0
     D wkactwk         s              3  0
     D wkrollwk        s              3  0
     D wkactroll       s              3  0
     D wkweanday       s              3  0
     D wknurday        s              3  0
     D wkgfday         s              3  0
     D wkpvcd          s                   like(pvpvcd)
     D wkttbcd         s                   like(bfttbcd)
      *
     D svwnyr          s                   like(bpcdyr)
     D svwnwk          s                   like(bpcdwk)
     D svwndt          s                   like(bpwedt)
      *
      *
      * Workfields
      *
     D wksysyr         s                   like(bpcdyr)
     D wklastyr        s                   like(bpcdyr)
     D wkccyymmdd      s              8  0
     D wkyymmdd        s              6  0
     D wksysdt         s              8  0
     D wkcymdiso       s               d   datfmt(*iso)
     D wkweandt        s              8  0
     D wkdays          s              3  0
      *
     D wkfld155        s             15  5
     D wkfld152        s             15  2
      *
      * Parm fields
      *
     D xxcocd          s              3  0 inz(350)
     D xxreturn        s              7a
     D xxjulian        s              5  0
     D xxcyymmdd       s              7  0
     D xxhpscdyr       s                   like(bpcdyr)
     D xxhpscdwk       s                   like(bpcdwk)
     D xxhpspicdt      s                   like(bppicdt)
     D xxcdwk          s                   like(bpcdwk)
     D xxday           s              1a
     D xxacyr          s                   like(bpacyr)
     D xxacpe          s                   like(bpacpe)
     D xxacwk          s                   like(bpacwk)
     D xxacqr          s              1  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Read all records in the DataMart BGF Farm file
      *
     C     *loval        setll     hppb018
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hppb018                                90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Determine whether you will process this farm or not.
      *
     C                   exsr      $determine
     C                   if        procfl = yes                                 If process farm
      *
      * Initialize counters for the farm
      *
     C                   exsr      $clear
      *
      * Retrieve the Target Table Code in effect for the farm as of the
      * System Date
     C                   exsr      $table
      *
      * You will always write the same number of 'weekly' prediction records
      * for each farm. This number has been retrieved from the Production
      * Variables file in the initialization routine.
      *
     C                   do        wkpredwk                                     Do prediction weeks
     C                   exsr      $build
     C                   exsr      $project
     C                   exsr      $write
     C                   enddo                                                  Do prediction weeks
      *
     C                   endif                                                  If process farm
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
     C                   seton                                        lr
      /eject
      *-----------------------------------------------------------------------------------
      * Build the weekly prediction record
      *-----------------------------------------------------------------------------------
      *
     C     $build        begsr
      *
     C                   add       1             x
      *
     C                   z-add     fsfscd        wpfscd
     C                   z-add     fscell        wpcell
     C                   z-add     fspod         wppod
      *
     C                   z-add     arwnyr(x)     wpwnyr
     C                   z-add     arwnwk(x)     wpwnwk
     C                   z-add     arwnqr(x)     wpwnqr
     C                   movel     arwndt(x)     wpwndt
      *
     C                   z-add     arsvyr(x)     wpsvyr
     C                   z-add     arsvwk(x)     wpsvwk
     C                   z-add     arsvqr(x)     wpsvqr
     C                   movel     arsvdt(x)     wpsvdt
      *
     C                   z-add     aronyr(x)     wponyr
     C                   z-add     aronwk(x)     wponwk
     C                   z-add     aronqr(x)     wponqr
     C                   movel     arondt(x)     wpondt
      *
     C                   z-add     arofyr(x)     wpofyr
     C                   z-add     arofwk(x)     wpofwk
     C                   z-add     arofqr(x)     wpofqr
     C                   movel     arofdt(x)     wpofdt
      *
      * We always start our build by attempting to retrieve the 'services head'.
      * If the 'write a zero' record flag is YES when we come out of our services
      * retrieval, we will just write a record with zero values and go to the
      * next week.
      *
     C                   exsr      $services
     C                   if        writezero = yes                              If write zero rec
     C                   else
      *
      * If your retrieved 'services' did not come from 'actuals', see if you need
      * to override your retrieved 'services' with the user's current prediction
      * value.
      *
     C                   if        wpsvcd <> actual
     C                   exsr      $predsv
     C                   endif
      *
      * Conception rate
      * Farrowing rate
      * Fall-out rate
      * Born alive
      * Piglet mortality
     C                   exsr      $concept
     C                   exsr      $farrow
     C                   exsr      $fallout
     C                   exsr      $bornalive
     C                   exsr      $mortality
      *
      * Predict wean pigs
     C                   exsr      $weanpig
      *
      * Nursery removal
     C                   exsr      $removaln
      *
      * Grow finish removal
     C                   exsr      $removalf
      *
     C                   endif                                                  If write zero rec
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve services head
      *-----------------------------------------------------------------------------------
      *
     C     $services     begsr
      *
     C                   move      no            writezero
      *
     C                   select
      * Actuals
     C                   when      x <= wkactwk
     C     key01         chain     hplb092b                           92
     C                   if        *in92 = *off
     C                   eval      wpsvhd = bpwnsv + bplwnsv + bprtsv + bpglsv
     C                   endif
      *
     C                   if        *in92 = *on or wpsvhd = 0
     C                   move      yes           writezero
     C                   else
     C                   move      actual        wpsvcd
     C                   endif
      *
      * Rolling averages
     C                   when      x >= wkactwk and x <= wkactroll
     C                   exsr      $rollsv
      *
      * Last year's quarter averages
      *
     C                   when      x > wkactroll
     C                   exsr      $quartsv
     C                   endsl
      *
      * If service head is zero, try the 'target' logic.
      *
     C                   if        wpsvhd = 0
     C                   exsr      $targetsv
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve services from the next rolling averages record
      *-----------------------------------------------------------------------------------
      *
     C     $rollsv       begsr
      *
     C                   add       1             countsv
     C                   z-add     countsv       count
      *
     C     key02         chain     hsp314                             92
     C                   if        *in92 = *off and ratosv <> 0
     C                   z-add     ratosv        wpsvhd
     C                   move      rolling       wpsvcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve services from quarter averages from a year ago
      *-----------------------------------------------------------------------------------
      *
     C     $quartsv      begsr
      *
      * Set up your key 'year' by subtracting 1 from the services year array
      *
     C     arsvyr(x)     sub       1             wklastyr
      *
     C     key03         chain     hsp100                             92
     C                   if        *in92 = *off and qaatosv <> 0
     C                   z-add     qaatosv       wpsvhd
     C                   move      quarter       wpsvcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve services from Targets
      *-----------------------------------------------------------------------------------
      *
     C     $targetsv     begsr
      *
     C     key11         chain     hsp096                             92
     C                   if        *in92 = *off and bytosv <> 0
     C                   z-add     bytosv        wpsvhd
     C                   move      targets       wpsvcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve services predictions for the wean year/quarter
      *-----------------------------------------------------------------------------------
      *
      * Now, at this point, you probably have some value for 'services'. But, if your
      * value did not come from an actual, we will compare it to the user's quarterly
      * predictions values for the wean year/quarter and populate/override it.
      *
      * So, check the high/low/override prediction values for the year/quarter/cell/group
      * type and reset your services accordingly.
      *
     C     $predsv       begsr
      *
     C     key05         chain     hsp083                             92
     C                   if        *in92 = *off                                 If hit
      *
     C                   select
      * Override
     C                   when      qpotosv <> 0
     C                   z-add     qpotosv       wpsvhd
     C                   move      override      wpsvcd
      *
      * Low
     C                   when      wpsvhd < qpltosv
     C                   z-add     qpltosv       wpsvhd
     C                   move      low           wpsvcd
      * High
     C                   when      wpsvhd > qphtosv
     C                   z-add     qphtosv       wpsvhd
     C                   move      high          wpsvcd
     C                   endsl
      *
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Conception rate
      *-----------------------------------------------------------------------------------
      *
     C     $concept      begsr
      *
      * If your Services came from an Actual record, you will try to populate Conception Rate
      * Head with the value from that Actual record...and then calculate the Conception
      * Rate.
     C                   if        wpsvcd = actual
     C                   z-add     bppgrhd       wpcrhd
     C                   if        wpsvhd <> 0 and wpcrhd <> 0
     C     wpcrhd        div       wpsvhd        wkfld155
     C     wkfld155      mult(h)   100           wpcrpr
     C                   move      actual        wpcrcd
     C                   endif
     C                   endif
      *
      * Now, if Conception Rate was zero from the Actual, try to get a Rate value from the
      * Rolling Averages.
      *
     C                   if        wpcrpr = 0
     C                   exsr      $rollcr
     C                   endif
      *
      * If Conception Rate is still zero, try Last Year's quarter averages.
      *
     C                   if        wpcrpr = 0
     C                   exsr      $quartcr
     C                   endif
      *
      * If Conception Rate is still zero, try Targets.
      *
     C                   if        wpcrpr = 0
     C                   exsr      $targetcr
     C                   endif
      *
      * Now, unless your rate came from Actuals, retrieve the Quarterly Prediction value and
      * see if you need to override the rate that you have. And, you must also back-in to
      * the Conception Rate Head if your source was not Actual.
      *
     C                   if        wpcrcd <> actual
     C                   exsr      $predcr
     C     wpsvhd        mult      wpcrpr        wkfld155
     C     wkfld155      mult(h)   .01           wpcrhd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Conception Rate from the next rolling averages record
      *-----------------------------------------------------------------------------------
      *
     C     $rollcr       begsr
      *
     C                   add       1             countcr
     C                   z-add     countcr       count
      *
     C     key02         chain     hsp314                             92
     C                   if        *in92 = *off and racrpr <> 0
     C                   z-add     racrpr        wpcrpr
     C                   move      rolling       wpcrcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Conception Rate from quarter averages from a year ago
      *-----------------------------------------------------------------------------------
      *
     C     $quartcr      begsr
      *
      * Set up your key 'year' by subtracting 1 from the services year array
      *
     C     arsvyr(x)     sub       1             wklastyr
      *
     C     key03         chain     hsp100                             92
     C                   if        *in92 = *off
     C                   z-add     qacrpr        wpcrpr
     C                   move      quarter       wpcrcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Conception Rate from Targets
      *-----------------------------------------------------------------------------------
      *
     C     $targetcr     begsr
      *
     C     key11         chain     hsp096                             92
     C                   if        *in92 = *off and bycrpr <> 0
     C                   z-add     bycrpr        wpcrpr
     C                   move      targets       wpcrcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Conception Rate prediction for the services quarter
      *-----------------------------------------------------------------------------------
      *
      * Now, at this point, you probably have some value for 'conception rate.' But, we
      * will compare it to the 'quarterly predictions' values for the services quarter and
      * override it/populate it as necessary.
      *
      * So, always check the high/low/override prediction values for this year/quarter/
      * cell/group type.
      *
     C     $predcr       begsr
      *
     C     key05         chain     hsp083                             92
     C                   if        *in92 = *off                                 If hit
      *
     C                   select
      * Override
     C                   when      qpocrpr <> 0
     C                   z-add     qpocrpr       wpcrpr
     C                   move      override      wpcrcd
      * Low
     C                   when      wpcrpr < qplcrpr
     C                   z-add     qplcrpr       wpcrpr
     C                   move      low           wpcrcd
      * High
     C                   when      wpcrpr > qphcrpr
     C                   z-add     qphcrpr       wpcrpr
     C                   move      high          wpcrcd
     C                   endsl
      *
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Farrowing rate
      *-----------------------------------------------------------------------------------
      *
     C     $farrow       begsr
      *
      * If your Services came from an Actual record, you will try to populate Farrowing Rate
      * Head with the value from that Actual record...and then calculate the Farrowing Rate.
      *
     C                   if        wpsvcd = actual
     C                   z-add     bpfgrhd       wpfrhd
     C                   if        wpfrhd <> 0 and wpsvhd <> 0
     C     wpfrhd        div       wpsvhd        wkfld155
     C     wkfld155      mult(h)   100           wpfrpr
     C                   move      actual        wpfrcd
     C                   endif
     C                   endif
      *
      * Now, if Farrowing Head was zero on the Actual, then try to retrieve values from the
      * Rolling Averages.
      *
     C                   if        wpfrhd = 0
     C                   exsr      $rollfr
     C                   endif
      *
      * If Farrowing Rate is still zero, try Last Year's quarter averages.
      *
     C                   if        wpfrpr = 0
     C                   exsr      $quartfr
     C                   endif
      *
      * If Farrowing Rate is still zero, try Targets
      *
     C                   if        wpfrpr = 0
     C                   exsr      $targetfr
     C                   endif
      *
      * Now, if your Farrowing Rate came from any source other than Actual,
      * retrieve the Quarterly Prediction values and see if you need to override the
      * rate that you already have. Also, back into the Farrowing Head.
      *
     C                   if        wpfrcd <> actual
     C                   exsr      $predfr
      *
     C     wpsvhd        mult      wpfrpr        wkfld155
     C     wkfld155      mult(h)   .01           wpfrhd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Farrowing Rate from the next rolling averages record
      *-----------------------------------------------------------------------------------
      *
     C     $rollfr       begsr
      *
     C                   add       1             countfr
     C                   z-add     countfr       count
      *
     C     key02         chain     hsp314                             92
     C                   if        *in92 = *off and rafrpr <> 0
     C                   z-add     rafrpr        wpfrpr
     C                   move      rolling       wpfrcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Farrowing Rate from quarter averages from a year ago
      *-----------------------------------------------------------------------------------
      *
     C     $quartfr      begsr
      *
      * Set up your key 'year' by subtracting 1 from the wean year array
      *
     C     arwnyr(x)     sub       1             wklastyr
      *
     C     key04         chain     hsp100                             92
     C                   if        *in92 = *off and qafrpr <> 0
     C                   z-add     qafrpr        wpfrpr
     C                   move      quarter       wpfrcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Farrowing Rate from Targets
      *-----------------------------------------------------------------------------------
      *
     C     $targetfr     begsr
      *
     C     key11         chain     hsp096                             92
     C                   if        *in92 = *off and byfrpr <> 0
     C                   z-add     byfrpr        wpfrpr
     C                   move      targets       wpfrcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Farrowing Rate prediction from quarterly predictions
      *-----------------------------------------------------------------------------------
      *
      * Now, at this point, you probably have some value for 'farrowing rate.' But, we
      * will compare it to the 'quarterly predictions' values for the wean quarter and
      * override it/populate it as necessary.
      *
      * So, always check the high/low/override prediction values for this year/quarter/
      * cell/group type.
      *
     C     $predfr       begsr
      *
     C     key05         chain     hsp083                             92
     C                   if        *in92 = *off                                 If hit
      *
     C                   select
      * Override
     C                   when      qpofrpr <> 0
     C                   z-add     qpofrpr       wpfrpr
     C                   move      override      wpfrcd
      * Low
     C                   when      wpfrpr < qplfrpr
     C                   z-add     qplfrpr       wpfrpr
     C                   move      low           wpfrcd
      * High
     C                   when      wpfrpr > qphfrpr
     C                   z-add     qphfrpr       wpfrpr
     C                   move      high          wpfrcd
     C                   endsl
      *
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Fall-out Rate
      *-----------------------------------------------------------------------------------
      *
     C     $fallout      begsr
      *
      * If your Services came from an Actual record and you had 'farrowed head' in that record,
      * try to calcualte a 'fall-out' rate.
      *
     C                   if        wpsvcd = actual and bpfgrhd <> 0
     C     bppgrhd       sub       bpfgrhd       wkfld152
     C                   if        bppgrhd <> 0
     C     wkfld152      div       bppgrhd       wkfld155
     C     wkfld155      mult(h)   100           wpfopr
     C                   move      actual        wpfocd
     C                   endif
     C                   endif
      *
      *
      * Now, if you don't have a rate, try to retrieve values from the Rolling Averages.
      *
     C                   if        wpfopr = 0
     C                   exsr      $rollfo
     C                   endif
      *
      * If Fall-out Rate is still zero, try Last Year's quarter averages.
      *
     C                   if        wpfopr = 0
     C                   exsr      $quartfo
     C                   endif
      *
      *
      * If Fall Out Rate is still zero, try Targets.
      *
     C                   if        wpfopr = 0
     C                   exsr      $targetfo
     C                   endif
      *
      * Now, unless your rate came from Actuals, retrieve the Quarterly Prediction values
      * to see if you need to override the rate that you have.
      *
     C                   if        wpfocd <> actual
     C                   exsr      $predfo
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Fall-Out Rate from the next rolling averages record
      *-----------------------------------------------------------------------------------
      *
     C     $rollfo       begsr
      *
     C                   add       1             countfo
     C                   z-add     countfo       count
      *
     C     key02         chain     hsp314                             92
     C                   if        *in92 = *off and rafopr <> 0
     C                   z-add     rafopr        wpfopr
     C                   move      rolling       wpfocd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Fall-out Rate from quarter averages from a year ago
      *-----------------------------------------------------------------------------------
      *
     C     $quartfo      begsr
      *
      * Set up your key 'year' by subtracting 1 from the wean year array
      *
     C     arwnyr(x)     sub       1             wklastyr
      *
     C     key04         chain     hsp100                             92
     C                   if        *in92 = *off
     C                   z-add     qafopr        wpfopr
     C                   move      quarter       wpfocd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Fall Out Rate from Targets
      *-----------------------------------------------------------------------------------
      *
     C     $targetfo     begsr
      *
     C     key11         chain     hsp096                             92
     C                   if        *in92 = *off and byfopr <> 0
     C                   z-add     byfopr        wpfopr
     C                   move      targets       wpfocd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Fall-out Rate prediction from quarterly predictions
      *-----------------------------------------------------------------------------------
      *
      * Now, at this point, you probably have some value for 'fall-out rate.' But, we
      * will compare it to the 'quarterly predictions' values for the wean quarter and
      * override it/populate it as necessary.
      *
      * So, always check the high/low/override prediction values for this year/quarter/
      * cell/group type.
      *
     C     $predfo       begsr
      *
     C     key05         chain     hsp083                             92
     C                   if        *in92 = *off                                 If hit
      *
     C                   select
      * Override
     C                   when      qpofopr <> 0
     C                   z-add     qpofopr       wpfopr
     C                   move      override      wpfocd
      * Low
     C                   when      wpfopr < qplfopr
     C                   z-add     qplfopr       wpfopr
     C                   move      low           wpfocd
      * High
     C                   when      wpfopr > qphfopr
     C                   z-add     qphfopr       wpfopr
     C                   move      high          wpfocd
     C                   endsl
      *
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Born Alive
      *-----------------------------------------------------------------------------------
      *
     C     $bornalive    begsr
      *
      * We will never go to the Actual Weekly records for Born Alive data. We will make 4
      * attempts to get this data:
      *    1) rolling averages
      *    2) last year's quarterly averages
      *    3) targets
      *    4) current predictions
      *
     C                   exsr      $rollba
      *
      * Quarterly averages
     C                   if        wpbahd = 0
     C                   exsr      $quartba
     C                   endif
      *
      * Targets
     C                   if        wpbahd = 0
     C                   exsr      $targetba
     C                   endif
      *
      *
      * Now, even if you have a value, you will retrieve the Quarterly Prediction value and
      * see if you need to override the 'born alive per litter head' that you have.
      *
     C                   exsr      $predba
      *
      * Now, we will ALWAYS recalc the 'total born alive' value. But, first,
      * if 'total litters farrowed' is zero, we will put 'farrowed head' into 'total
      * litters farrowed'.
      *
     C                   if        wptolt = 0
     C                   z-add     wpfrhd        wptolt
     C                   endif
      *
      * Now, recalc 'total born alive' as:
      *       'born alive per litter' times 'total litters farrowed'
      *
     C     wpltbahd      mult      wptolt        wpbahd
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve born alive from the next rolling averages record
      *-----------------------------------------------------------------------------------
      *
     C     $rollba       begsr
      *
     C                   add       1             countba
     C                   z-add     countba       count
      *
     C     key02         chain     hsp314                             92
     C                   if        *in92 = *off
     C                   z-add     rabahd        wpbahd
     C                   z-add     ratolt        wptolt
      *
      * Calculate the 'born alive per litter' value
      *
     C                   if        wptolt <> 0
     C     wpbahd        div(h)    wptolt        wpltbahd
     C                   move      rolling       wpbacd
     C                   endif
      *
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve born alive from quarter averages from a year ago
      *-----------------------------------------------------------------------------------
      *
     C     $quartba      begsr
      *
      * Set up your key 'year' by subtracting 1 from the wean year array
      *
     C     arwnyr(x)     sub       1             wklastyr
      *
     C     key04         chain     hsp100                             92
     C                   if        *in92 = *off
     C                   z-add     qaabahd       wpbahd
     C                   z-add     qaatolt       wptolt
      *
      * Calculate the 'born alive per litter' value
      *
     C                   if        wptolt <> 0
     C     wpbahd        div(h)    wptolt        wpltbahd
     C                   move      quarter       wpbacd
     C                   endif
      *
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve born alive from Targets
      *-----------------------------------------------------------------------------------
      *
     C     $targetba     begsr
      *
     C     key11         chain     hsp096                             92
     C                   if        *in92 = *off and byltbahd <> 0
     C                   z-add     byltbahd      wpltbahd
     C                   move      targets       wpbacd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve born alive predictions for the wean quarter
      *-----------------------------------------------------------------------------------
      *
      * Now, at this point, you may have some value for 'born alive'. But, we will
      * compare it to the 'quarterly predictions' values for the wean quarter and
      * override it/populate it as necessary.
      *
      * Whatever your values are, check the high/low/override prediction values for
      * the year/quarter/cell/group type. And, reset your values accordingly.
      *
     C     $predba       begsr
      *
     C     key05         chain     hsp083                             92
     C                   if        *in92 = *off                                 If hit
      *
     C                   select
      * Override
     C                   when      qpoltbahd <> 0
     C                   z-add     qpoltbahd     wpltbahd
     C                   move      override      wpbacd
      *
      * Low
     C                   when      wpltbahd < qplltbahd
     C                   z-add     qplltbahd     wpltbahd
     C                   move      low           wpbacd
      * High
     C                   when      wpltbahd > qphltbahd
     C                   z-add     qphltbahd     wpltbahd
     C                   move      high          wpbacd
     C                   endsl
      *
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Piglet mortality
      *-----------------------------------------------------------------------------------
      *
     C     $mortality    begsr
      *
      * We will never go to the Actual Weekly records for Piglet Mortality data. Make 4
      * attempts to get this data:
      *    1) rolling averages
      *    2) last year's quarterly averages
      *    3) targets
      *    4) current predictions
      *
      * Rolling averages
     C                   exsr      $rollpm
      *
      * Last year's quarterly averages
      *
     C                   if        wppmpr = 0
     C                   exsr      $quartpm
     C                   endif
      *
      * Targets
     C                   if        wppmpr = 0
     C                   exsr      $targetpm
     C                   endif
      *
      *
      * Now, even if you have a value, you will retrieve the Quarterly Prediction value and
      * see if you need to override the 'piglet mortality' that you have.
      *
     C                   exsr      $predpm
      *
      * Now, we will ALWAYS recalc the 'mortality head' value as:
      *       mortality percent * total born alive
      *
     C     wppmpr        mult      wpbahd        wkfld155
     C     wkfld155      mult(h)   .01           wppmhd
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Piglet Mortality from the next rolling averages record
      *-----------------------------------------------------------------------------------
      *
     C     $rollpm       begsr
      *
     C                   add       1             countpm
     C                   z-add     countpm       count
      *
     C     key02         chain     hsp314                             92
     C                   if        *in92 = *off and rapmpr <> 0
     C                   z-add     rapmhd        wppmhd
     C                   z-add     rapmpr        wppmpr
     C                   move      rolling       wppmcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Piglet Mortality from quarter averages from a year ago
      *-----------------------------------------------------------------------------------
      *
     C     $quartpm      begsr
      *
      * Set up your key 'year' by subtracting 1 from the wean year array
      *
     C     arwnyr(x)     sub       1             wklastyr
      *
     C     key04         chain     hsp100                             92
     C                   if        *in92 = *off and qapmpr <> 0
     C                   z-add     qaapmhd       wppmhd
     C                   z-add     qapmpr        wppmpr
     C                   move      quarter       wppmcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Piglet Mortality from Targets
      *-----------------------------------------------------------------------------------
      *
     C     $targetpm     begsr
      *
     C     key11         chain     hsp096                             92
     C                   if        *in92 = *off and bytolspr <> 0
     C                   z-add     bytolspr      wppmpr
     C                   move      targets       wppmcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Piglet Mortaltiy predictions for the wean quarter
      *-----------------------------------------------------------------------------------
      *
      * Now, at this point, you may have some value for 'piglet mortality'. But, we will
      * compare it to the 'quarterly predictions' values for the wean quarter and
      * override it/populate it as necessary.
      *
      * Whatever your values are, check the high/low/override prediction values for
      * the year/quarter/cell/group type. And, reset your values accordingly.
      *
     C     $predpm       begsr
      *
     C     key05         chain     hsp083                             92
     C                   if        *in92 = *off                                 If hit
      *
     C                   select
      * Override
     C                   when      qpopmpr <> 0
     C                   z-add     qpopmpr       wppmpr
     C                   move      override      wppmcd
      *
      * Low
     C                   when      wppmpr < qplpmpr
     C                   z-add     qplpmpr       wppmpr
     C                   move      low           wppmcd
      * High
     C                   when      wppmpr > qphpmpr
     C                   z-add     qphpmpr       wppmpr
     C                   move      high          wppmcd
     C                   endsl
      *
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Predict wean pigs
      *-----------------------------------------------------------------------------------
      *
     C     $weanpig      begsr
      *
      * If you are predicting wean pigs for Week 1 or Week 2, you will take the
      * Production Variable value (a percent) times the Ending Piglet Inventory of
      * the last actual record for this farm.
      *
     C                   select
     C                   when      count = 1 or count = 2
     C     fsfscd        chain     hplb092a                           92
     C                   if        *in92 = *off
     C                   z-add     bpenplhd      wpenplhd
     C     wkstandpr     mult(h)   bpenplhd      wpwnhd
     C                   endif
     C                   other
      *
      * Wean head is calculated as:
      *   total born alive less piglet mortaltiy head
      *
     C     wpbahd        sub       wppmhd        wpwnhd
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Nursery removal
      *-----------------------------------------------------------------------------------
      *
     C     $removaln     begsr
      *
      * You will never have 'actuals' for Nursery Removal.
      * So, try to retrieve a removal rate from the Rolling Averages.
      *
     C                   exsr      $rollnrm
      *
      * If Nursery Removal Rate is still zero, try last Year's Quarter averages.
      *
     C                   if        wpnrmpr = 0
     C                   exsr      $quartnrm
     C                   endif
      *
      * Retrieve the Quarterly Prediction values to see if you need to override the rate
      * that you have.
      *
     C                   exsr      $prednrm
      *
      * Now, calculate 2 'removal' values:
      * 1) removal head
      *     Weaned pigs * Nursery removal rate
      * 2) out-of-nursery head
      *     Weaned pigs - removal head
      *
     C     wpnrmpr       div       100           wkfld155
     C     wpwnhd        mult      wkfld155      wpnrmhd
      *
     C     wpwnhd        sub       wpnrmhd       wponhd
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Nursery Removal Rate from the next rolling averages record
      *-----------------------------------------------------------------------------------
      *
     C     $rollnrm      begsr
      *
     C                   add       1             countnrm
     C                   z-add     countnrm      count
      *
     C     key02         chain     hsp314                             92
     C                   if        *in92 = *off and ranrmpr <> 0
     C                   z-add     ranrmpr       wpnrmpr
     C                   move      rolling       wpnrmcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Nursery Removal Rate from quarter averages from a year ago
      *-----------------------------------------------------------------------------------
      *
     C     $quartnrm     begsr
      *
      * Set up your key 'year' by subtracting 1 from the out-of-nursery year array
      *
     C     aronyr(x)     sub       1             wklastyr
      *
     C     key06         chain     hsp100                             92
     C                   if        *in92 = *off
     C                   z-add     qanrmpr       wpnrmpr
     C                   move      quarter       wpnrmcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Nursery Removal Rate prediction value from quarterly predictions
      *-----------------------------------------------------------------------------------
      *
      * Now, at this point, you probably have some value for 'nursery removal rate.' But,
      * we will compare it to the 'quarterly predictions' values for the out-of-nursery
      * quarter and override it/populate it as necessary.
      *
      * So, always check the high/low/override prediction values for this year/quarter/
      * cell/group type.
      *
     C     $prednrm      begsr
      *
     C     key07         chain     hsp083                             92
     C                   if        *in92 = *off                                 If hit
      *
     C                   select
      * Override
     C                   when      qponrmpr <> 0
     C                   z-add     qponrmpr      wpnrmpr
     C                   move      override      wpnrmcd
      * Low
     C                   when      wpnrmpr < qplnrmpr
     C                   z-add     qplnrmpr      wpnrmpr
     C                   move      low           wpnrmcd
      * High
     C                   when      wpnrmpr > qphnrmpr and
     C                             qphnrmpr <> 0
     C                   z-add     qphnrmpr      wpnrmpr
     C                   move      high          wpnrmcd
     C                   endsl
      *
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Grow finish removal
      *-----------------------------------------------------------------------------------
      *
     C     $removalf     begsr
      *
      * You will never have 'actuals' for Grow Finish Removal.
      * So, try to retrieve values from the Rolling Averages.
      *
     C                   exsr      $rollfrm
      *
      * If Grow Finish Removal Rate is still zero, try last Year's Quarter averages.
      *
     C                   if        wpfrmpr = 0
     C                   exsr      $quartfrm
     C                   endif
      *
      * Retrieve the Quarterly Prediction values to see if you need to override the rate
      * that you have.
      *
     C                   exsr      $predfrm
      *
      *
      * Now, calculate 2 'removal' values:
      * 1) removal head
      *     Out-of-nursery head * finisher removal rate
      * 2) out-of-grow finish head
      *     out-of-nursery head - removal head
      *
     C     wpfrmpr       div       100           wkfld155
     C     wponhd        mult      wkfld155      wpfrmhd
      *
     C     wponhd        sub       wpfrmhd       wpofhd
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Grow Finish Removal Rate from the next rolling averages record
      *-----------------------------------------------------------------------------------
      *
     C     $rollfrm      begsr
      *
     C                   add       1             countfrm
     C                   z-add     countfrm      count
      *
     C     key02         chain     hsp314                             92
     C                   if        *in92 = *off and rafrmpr <> 0
     C                   z-add     rafrmpr       wpfrmpr
     C                   move      rolling       wpfrmcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Grow Finish Removal Rate from quarter averages from a year ago
      *-----------------------------------------------------------------------------------
      *
     C     $quartfrm     begsr
      *
      * Set up your key 'year' by subtracting 1 from the out-of-finisher year array
      *
     C     arofyr(x)     sub       1             wklastyr
      *
     C     key08         chain     hsp100                             92
     C                   if        *in92 = *off
     C                   z-add     qafrmpr       wpfrmpr
     C                   move      quarter       wpfrmcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Grow Finish Removal Rate prediction value from quarterly predictions
      *-----------------------------------------------------------------------------------
      *
      * Now, at this point, you probably have some value for 'finisher removal rate.' But,
      * we will compare it to the 'quarterly predictions' values for the out-of-grow finish
      * quarter and override it/populate it as necessary.
      *
      * So, always check the high/low/override prediction values for this year/quarter/
      * cell/group type.
      *
     C     $predfrm      begsr
      *
     C     key09         chain     hsp083                             92
     C                   if        *in92 = *off                                 If hit
      *
     C                   select
      * Override
     C                   when      qpofrmpr <> 0
     C                   z-add     qpofrmpr      wpfrmpr
     C                   move      override      wpfrmcd
      * Low
     C                   when      wpfrmpr < qplfrmpr
     C                   z-add     qplfrmpr      wpfrmpr
     C                   move      low           wpfrmcd
      * High
     C                   when      wpfrmpr > qphfrmpr and
     C                             qphfrmpr <> 0
     C                   z-add     qphfrmpr      wpfrmpr
     C                   move      high          wpnrmcd
     C                   endsl
      *
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve Week 1 and Week 2 Weekly Wean Projections for this Wean Date.
      *-----------------------------------------------------------------------------------
      *
     C     $project      begsr
      *
      * Get the Wean Date into an 8,0 field for keying purposes.
      *
     C                   movel     wpwndt        wkweandt
      *
     C     key12         setll     hsl086c
      *
     C                   dou       *in93 = *on                                  Do projects
     C     key12         reade     hsl086c                                93
     C                   if        *in93 = *off
      *
      * You may have 0, 1 or 2 records for this farm/date.
      *
      * If this record has a Wean Date that is 1 week after the report date,
      *     this is Week 1 data
      * If this record has a Wean Date that is 2 weeks after the report date,
      *     this is Week 2 data
      *
      * So, determine elapsed days between Report Date and Wean Date of the
      * BGF Weekly Wean Projection record.
      *
     C     *iso          movel     pwrpwedt      wkcymdiso
     C     wpwndt        subdur    wkcymdiso     wkdays:*d
      *
     C                   select
     C                   when      wkdays = 7
     C                   z-add     pwtopwhd      wpw1wphd
     C                   z-add     pwpwsohd      wpw1wshd
     C                   z-add     pwsocuhd      wpw1schd
     C                   z-add     pwbocuhd      wpw1bchd
      *
     C                   when      wkdays = 14
     C                   z-add     pwtopwhd      wpw2wphd
     C                   z-add     pwpwsohd      wpw2wshd
     C                   endsl
      *
     C                   endif
     C                   enddo                                                  Do projects
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Write record
      *-----------------------------------------------------------------------------------
      *
     C     $write        begsr
      *
     C                   write     wprec
     C                   clear                   wprec
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Clear counters
      *-----------------------------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   z-add     0             x
     C                   z-add     0             count
     C                   z-add     0             countsv
     C                   z-add     0             countcr
     C                   z-add     0             countfr
     C                   z-add     0             countfo
     C                   z-add     0             countba
     C                   z-add     0             countpm
     C                   z-add     0             countnrm
     C                   z-add     0             countfrm
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve the Target Table Code in effect for the Farm as of the System Date
      *-----------------------------------------------------------------------------------
      *
     C     $table        begsr
      *
     C     key10         setgt     hsl097c
     C     fsfscd        readpe    hsl097c                                92
     C                   if        *in92 = *off
     C                   move      bfttbcd       wkttbcd
     C                   else
     C                   move      *blank        wkttbcd
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Determine whether you will process this farm or not.
      *-----------------------------------------------------------------------------------
      *
      * We are not going to process a farm if the farm did not have any
      * actual weekly records in the past X number of weeks. Using the 'service date' from
      * the first entry in your 'service date array', see if this farm has any actual
      * weekly records on or after this date.
      *
     C     $determine    begsr
      *
     C                   z-add     1             x
     C     key01         setll     hplb092b
      *
     C     fsfscd        reade     hplb092b                               92
     C                   if        *in92 = *off                                 If record
     C                   move      yes           procfl
     C                   else
     C                   move      no            procfl
     C                   endif                                                  If record
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------------------------
      * Build year/week/quarter/date arrays with an occurrence for each week you will predict
      *--------------------------------------------------------------------------------------
      *
      * We will be writing prediction records for each farm for the same prediction weeks.
      * Building these arrays will keep you from constantly having to recalculate these
      * values for each record for each farm.
      *
     C     $bldwnarr     begsr
      *
     C                   z-add     0             x
      *
      * Find the last week of data in the Datamart BGF: Weekly Production file. We'll
      * start our predicitons with the subsequent week.
      *
     C     *hival        setgt     hppb092
     C                   readp     hppb092                                92
     C                   if        *in92 = *off                                 If any weekly
      *
     C                   z-add     bpcdyr        svwnyr
     C                   z-add     bpcdwk        svwnwk
     C                   movel     bpwedt        svwndt
      *
     C                   do        wkpredwk                                     Do X weeks
      *
      * Increment array index
      *
     C                   add       1             x
      *
      * Increment year/week
      *
     C                   add       1             svwnwk
     C                   select
     C                   when      svwnwk < 53
     C                   z-add     svwnwk        arwnwk(x)
     C                   z-add     svwnyr        arwnyr(x)
     C                   when      svwnwk >= 53
     C                   z-add     1             arwnwk(x)
     C     1             add       svwnyr        arwnyr(x)
     C                   endsl
      *
      * Increment date
      *
     C     svwndt        adddur    7:*days       arwndt(x)
      *
      * Save fields for next pass
      *
     C                   z-add     arwnyr(x)     svwnyr
     C                   z-add     arwnwk(x)     svwnwk
     C                   movel     arwndt(x)     svwndt
      *
      * You have to have the accounting period associated with this date to
      * get the 'quarter' that you need. So, call a SYNON program to go against
      * the OMS calendar file.
      * Get the date from the date format into an 8,0 field.
      *
     C     *iso          movel     arwndt(x)     wkccyymmdd
     C                   exsr      $synon
     C                   if        xxreturn = *blank                            If valid date
      *
      * Retrieve the 'quarter' that goes with this services date.
      *
     C                   call      'HP8006'
     C                   parm                    xxacpe
     C     arwnqr(x)     parm      0             xxacqr
     C                   endif                                                  If valid date
      *
     C                   enddo                                                  Do X weeks
     C                   endif                                                  If any weekly
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------------
      * Build year/week/quarter/date arrays for the 'services' that go with each prediction week
      *-----------------------------------------------------------------------------------------
      *
      * We will be writing prediction records for each farm for the same prediction weeks.
      * The 'services' values will always be X days prior to this wean week. So, build
      * arrays to hold the services year/week/date. By doing this, we don't have to
      * constantly recalculate the services date stuff.
      *
     C     $bldsvarr     begsr
      *
     C                   z-add     0             x
      *
     C                   do        wkpredwk                                     Do X weeks
      *
      * Increment array index
      *
     C                   add       1             x
      *
      *
      * Subtract X days from this wean (prediction) week to get the services date.
      *
     C     arwndt(x)     subdur    wkweanday:*d  arsvdt(x)
      *
      *
      * Now, find the calendar year/week associated with this date. Use a SYNON
      * program and go against the OMS calendar file.
      * So, get the date from the date format into an 8,0 field.
      *
     C     *iso          movel     arsvdt(x)     wkccyymmdd
      *
     C                   exsr      $synon
     C                   if        xxreturn = *blank                            If valid date
     C                   z-add     xxhpscdyr     arsvyr(x)
     C                   z-add     xxhpscdwk     arsvwk(x)
      *
      * Retrieve the 'quarter' that goes with this services date.
      *
     C                   call      'HP8006'
     C                   parm                    xxacpe
     C     arsvqr(x)     parm      0             xxacqr
      *
     C                   endif                                                  If valid date
      *
     C                   enddo                                                  Do X weeks
      *
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------------
      * Build year/week/quarter/date arrays for out-of-nursery week
      *-----------------------------------------------------------------------------------------
      *
      * We will be writing prediction records for each farm for the same prediction weeks.
      * The 'out-of-nursery' values will always be X days after the wean week. So, build
      * arrays to hold the out-of-nursery year/week/date. By doing this, we don't have to
      * constantly recalculate this stuff.
      *
     C     $bldonarr     begsr
      *
     C                   z-add     0             x
      *
     C                   do        wkpredwk                                     Do X weeks
      *
      * Increment array index
      *
     C                   add       1             x
      *
      *
      * Add X days to the wean (prediction) week to get the out-of-nursery date.
      *
     C     arwndt(x)     adddur    wknurday:*d   arondt(x)
      *
      *
      * Now, find the calendar year/week associated with this date. Use a SYNON
      * program and go against the OMS calendar file.
      * So, get the date from the date format into an 8,0 field.
      *
     C     *iso          movel     arondt(x)     wkccyymmdd
      *
     C                   exsr      $synon
     C                   if        xxreturn = *blank                            If valid date
     C                   z-add     xxhpscdyr     aronyr(x)
     C                   z-add     xxhpscdwk     aronwk(x)
      *
      * Retrieve the 'quarter' that goes with this out-of-nursery date.
      *
     C                   call      'HP8006'
     C                   parm                    xxacpe
     C     aronqr(x)     parm      0             xxacqr
      *
     C                   endif                                                  If valid date
      *
     C                   enddo                                                  Do X weeks
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------------
      * Build year/week/quarter/date arrays for out-of-grow finish week
      *-----------------------------------------------------------------------------------------
      *
      * We will be writing prediction records for each farm for the same prediction weeks.
      * The 'out-of-grow finish' values will always be X days after the wean week. So, build
      * arrays to hold the out-of-grow finish year/week/date. By doing this, we don't have to
      * constantly recalculate this stuff.
      *
     C     $bldofarr     begsr
      *
     C                   z-add     0             x
      *
     C                   do        wkpredwk                                     Do X weeks
      *
      * Increment array index
      *
     C                   add       1             x
      *
      *
      * Add X days to the out-of-nursery week to get the out-of-grow finish date.
      *
     C     arondt(x)     adddur    wkgfday:*d    arofdt(x)
      *
      *
      * Now, find the calendar year/week associated with this date. Use a SYNON
      * program and go against the OMS calendar file.
      * So, get the date from the date format into an 8,0 field.
      *
     C     *iso          movel     arofdt(x)     wkccyymmdd
      *
     C                   exsr      $synon
     C                   if        xxreturn = *blank                            If valid date
     C                   z-add     xxhpscdyr     arofyr(x)
     C                   z-add     xxhpscdwk     arofwk(x)
      *
      * Retrieve the 'quarter' that goes with this out-of-nursery date.
      *
     C                   call      'HP8006'
     C                   parm                    xxacpe
     C     arofqr(x)     parm      0             xxacqr
      *
     C                   endif                                                  If valid date
      *
     C                   enddo                                                  Do X weeks
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      *  Use SYNON program to retrieve year/week
      *---------------------------------------------------------------
      *
     C     $synon        begsr
      *
     C                   z-add     wkccyymmdd    wkyymmdd
     C                   if        wkccyymmdd >= 20000000
     C     wkyymmdd      add       1000000       xxcyymmdd
     C                   else
     C                   z-add     wkyymmdd      xxcyymmdd
     C                   endif
      *
     C                   call      'POF3XFR'
     C                   parm      *blank        xxreturn
     C                   parm                    xxcocd
     C                   parm                    xxcyymmdd
     C                   parm      0             xxjulian
     C                   parm      0             xxacyr
     C                   parm      0             xxacpe
     C                   parm      0             xxacwk
     C                   parm      *blank        xxday
     C                   parm      0             xxcdwk
     C                   parm      0             xxhpspicdt
     C                   parm      0             xxhpscdyr
     C                   parm      0             xxhpscdwk
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Delete 'prediction' records
      *---------------------------------------------------------------
      *
      * Delete out all existing 'prediction' records that have a wean date
      * on/after the starting 'wean date' for this run.
      *
     C     $delete       begsr
      *
     C     arwndt(1)     setll     hplb192c
      *
     C                   dou       *in91 = *on                                  Do delete
     C                   read      hplb192c                               91
     C                   if        *in91 = *off                                 If not EOF
     C                   delete    wprecc
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do delete
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    fsfscd
     C                   kfld                    arsvdt(x)
      *
     C     key02         klist
     C                   kfld                    fsfscd
     C                   kfld                    count
      *
     C     key03         klist
     C                   kfld                    wklastyr
     C                   kfld                    arsvqr(x)
     C                   kfld                    fsfscd
      *
     C     key04         klist
     C                   kfld                    wklastyr
     C                   kfld                    arwnqr(x)
     C                   kfld                    fsfscd
      *
     C     key05         klist
     C                   kfld                    arwnyr(x)
     C                   kfld                    arwnqr(x)
     C                   kfld                    fscell
     C                   kfld                    fsgtcd
      *
      *
     C     key06         klist
     C                   kfld                    wklastyr
     C                   kfld                    aronqr(x)
     C                   kfld                    fsfscd
      *
      *
     C     key07         klist
     C                   kfld                    aronyr(x)
     C                   kfld                    aronqr(x)
     C                   kfld                    fscell
     C                   kfld                    fsgtcd
      *
      *
     C     key08         klist
     C                   kfld                    wklastyr
     C                   kfld                    arofqr(x)
     C                   kfld                    fsfscd
      *
      *
     C     key09         klist
     C                   kfld                    arofyr(x)
     C                   kfld                    arofqr(x)
     C                   kfld                    fscell
     C                   kfld                    fsgtcd
      *
      *
     C     key10         klist
     C                   kfld                    fsfscd
     C                   kfld                    wksysdt
      *
      *
     C     key11         klist
     C                   kfld                    wkttbcd
     C                   kfld                    wksysyr
      *
      *
     C     key12         klist
     C                   kfld                    wpfscd
     C                   kfld                    wkweandt
      *
      * Retrieve the 'standard percent of ending piglet inventory into nursery'.
      * It is in our new Production Variables file...retrieve using a key field
      * value of '9'.  There should always be a record with a value.
      *
     C                   z-add     9             wkpvcd
     C     wkpvcd        chain     hsp032                             92
     C                   if        *in92 = *off                                 If predict
     C     .01           mult      pvpvval       wkstandpr
     C                   endif                                                  If predict
      *
      * Retrieve the number of 'weeks' to predict. This value is stored
      * in our new Production Variables file...retrieve using a key field
      * value of '1'.  There should always be a record with a value.
      *
     C                   z-add     1             wkpvcd
     C     wkpvcd        chain     hsp032                             92
     C                   if        *in92 = *off and pvpvval > 0                 If predict
     C                   z-add     pvpvval       wkpredwk
     C                   endif                                                  If predict
      *
      * Retrieve the number of elapsed days between breeding the sow and
      * weaning the piglets. This variable is stored in our new Production
      * Variables file...retrieve using a key field value of '2'. There
      * should always be a record. Then, divide it by 7 days to get the
      * number of 'actual' weekly records we expect to find.
      *
     C                   z-add     2             wkpvcd
     C     wkpvcd        chain     hsp032                             92
     C                   if        *in92 = *off and pvpvval > 0                 If wean
     C                   z-add     pvpvval       wkweanday
     C     wkweanday     div       7             wkactwk
     C                   endif                                                  If wean
      *
      *
      * Retrieve the 'standard days in the Nursery'.
      * This value is stored in our new Production Variables file...retrieve using a key
      * value of '4'.
      *
     C                   z-add     4             wkpvcd
     C     wkpvcd        chain     hsp032                             92
     C                   if        *in92 = *off
     C                   z-add     pvpvval       wknurday
     C                   endif
      *
      * Retrieve 'standard days in Grow Finish'.
      * This value is stored in our new Production Variables file...retrieve using a key
      * value of '5'.
      *
     C                   z-add     5             wkpvcd
     C     wkpvcd        chain     hsp032                             92
     C                   if        *in92 = *off
     C                   z-add     pvpvval       wkgfday
     C                   endif
      *
      *
      * Retrieve the number of 'weeks' that were used when we created
      * our 'rolling averages' in a previous job step. This variable is
      * stored in our new Production Production variables file...retrieve
      * using a key field value of '3'.
      *
     C                   z-add     3             wkpvcd
     C     wkpvcd        chain     hsp032                             92
     C                   if        *in92 = *off and pvpvval > 0                 If predict
     C                   z-add     pvpvval       wkrollwk
     C                   endif                                                  If predict
      *
      * Add the 'actual' and 'roll' values together.
      *
     C     wkactwk       add       wkrollwk      wkactroll
      *
      * Now, build arrays with the year/week/date of each week that you
      * will be predicting. (This is the 'wean' week.)
      *
     C                   exsr      $bldwnarr
      *
      * Now, build arrays with the year/week/date of each service year/week/date
      * that goes with the 'wean' arrays.
      *
     C                   exsr      $bldsvarr
      *
      * Now, build arrays with the year/week/date for out-of-nursery.
      *
     C                   exsr      $bldonarr
      *
      *
      * Now, build arrays with the year/week/date for out-of-grow finish.
      *
     C                   exsr      $bldofarr
      *
      * Delete out all existing 'prediction' records that have a wean date
      * on/after the starting 'wean date' for this run.
      *
     C                   exsr      $delete
      *
      *
      * Put system date into a workfield
      * Also, extract the CCYY portion and put into a workfield.
      *
     C     *mdy          movel     udate         wkcymdiso
     C                   movel     wkcymdiso     wksysdt
     C                   extrct    wkcymdiso:*y  wksysyr
      *
     C                   endsr
      /eject
