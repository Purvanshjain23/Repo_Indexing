     H/TITLE Upd Ord Sweep 2/MG AutoXF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 03/28/25  Time  : 12:04:21
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADPREL1  IF   E           K DISK
      * RTV : System Values             Retrieval index       NV
      *
      * Long constants
     D @CN#            S              6    DIM(01)CTDATA PERRCD(1)
     D @CN             S             25    DIM(01) ALT(@CN#)
     D YDOW            S              1     DIM(7)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      /EJECT
     D XDINT           DS
      * Internal date
     D  XDINDT                 1      7  0
     D  XDINYY                 1      3  0
     D  XDINMM                 4      5  0
     D  XDINDD                 6      7  0
      /EJECT
     D XD2T            DS
      * Internal date
     D  XDINT2                 1      7  0
     D  XDINY2                 1      3  0
     D  XDINM2                 4      5  0
     D  XDIND2                 6      7  0
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              3
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  YL0001         S              3  0
     D  YL0002         S             15  5
     D  YL0003         S              7  0
     D  YL0004         S             15  5
     D  YL0005         S              5  0
     D  YL0006         S              7  0
     D  XDWK1          S              8  0
     D  XDAY1          S              6  0
     D  XDAY2          S              6  0
     D  XDURR          S              8  0
     D  XDSEL          S              1
     D  XDCDW          S              7
     D  XDWSL          S              1  0
     D  XDSTP          S              1  0
     D  XDWNB          S              6  0
     D  XDLSW          S              1  0
     D  YY             S              6  0
     D  XDWK3          S              7  1
     D  XDWK2          S              6  0
     D  YL0007         S              7  0
     D  YN0001         S              7  0
     D  YL0008         S              7  0
     D  WQ0001         S              3  0
     D  WQ0002         S              7  0
     D  WQ0003         S              7  0
     D  WQ0004         S              7  0
     D  WQ0005         S              7  0
     D  W0CLPG         S             10
     D  YL0009         S             15  5
     D  YN0002         S              7
     D  WQ0006         S              7
     D  WQ0007         S             30
     D  WQ0008         S             15
     D  WQ0009         S              2
     D  WQ0010         S             15  5
     D  WQ0011         S             15  5
     D  WQ0012         S             15  5
     D  WQ0013         S             15  5
     D  WQ0014         S             15  5
     D  WQ0015         S             15  5
     D  WQ0016         S              3
     D  WQ0017         S              2
     D  WQ0018         S              2
     D  WQ0019         S              1
     D  WQ0020         S             20
     D  WQ0021         S              3
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * I :  Company Number Alpha
     D  P1E6TX                 1      3
     D                 DS
     D  ZAMSDA                 1    132
     I@DPRETD
      * System Values             Retrieval index       NV
      * Renamed input format fields
     I              DPDOCD                      WADOCD
     I              DPAUNA                      WAAUNA
     I              DPI5ST                      WAI5ST
     I              DPBXTX                      WABXTX
     I              DPM8NB                      WAM8NB
     I              DPUVST                      WAUVST
     I              DPUWST                      WAUWST
     I              DPUXST                      WAUXST
     I              DPVSST                      WAVSST
     I              DPAATM                      WAAATM
     I              DPAYNA                      WAAYNA
     I              DPA0NA                      WAA0NA
     I              DPAXDT                      WAAXDT
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C     P1E6TX        PARM                    WP0001                         Company Number
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Upd Ord Sweep 2/MG AutoXF
      * NOTE: JS 'TMSORDSWP' will call this program 24/7 every 30 mins.
      * Company Must Be Entered & Job Time NOT within 2:30am - 5:30am Els
      * CASE:
      *  - c1 OR c2 OR c3
      *   |- c1    : PAR.Company Number Alpha is Zero
      *   |- c2    : PAR.Company Number Alpha is Not Entered
      *   |- c3    : JOB.*Job time is Between 2:30am & 5:30am
      *   '-
      * Job time added to not disrupt critical JS.
     C                   IF        P1E6TX = '000' OR
     C                             P1E6TX = ' ' OR
     C                             ##JTM >= 023000 AND
     C                             ##JTM <= 053000
     C                   EVAL      P0RTN = ' '                                  *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
      * Format/Set All Parameter Variables.
      * CASE: *OTHERWISE
      * Set Company.
     C                   MOVE      P1E6TX        YL0001                         Company Number
     C                   Z-ADD     YL0001        YL0002                         Company Number
      * Set From Date.
     C                   Z-ADD     ##JDT         YL0003                         Job Date Usr
      * LCL.From Date Pass        USR = LCL.Job Date Usr
     C                   Z-ADD     YL0003        YL0004                         From Date Pass
      * Set Through Date Based on # of Days Value in System Values.
      * RTV Numeric Value      RT - System Values  * 
     C                   EXSR      SARVGN
      * LCL.USR Through Date = JOB.*Job date + LCL.Days *DAYS
     C     ##JDT         ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     YL0005        XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0006
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0006
     C                   END
      * CLC TMS Sweep Dates    XF - Calendar Master  * From sweep date
     C                   CALL      'PBTGXFR'                            90      CLC TMS Sweep D
     C                   PARM      *BLANK        W0RTN
     C                   PARM      YL0001        WQ0001                         Company Number
     C                   PARM      YL0006        WQ0002                         Post to G_L Dat
     C     YL0007        PARM      *ZERO         WQ0003                         Date 0 RGT
     C                   PARM      *ZERO         WQ0004                         Date 1 RGT
     C     YL0008        PARM      *ZERO         WQ0005                         Date 2 RGT
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PBTGXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * For Thur: Sat, Sun, Mon dates are put into date 2 for end date
      * CASE: LCL.Date 2 RGT is Entered
     C                   IF        YL0008 <> 0
     C                   Z-ADD     YL0008        YL0006                         USR Through Dat
     C                   ELSE
      * CASE: *OTHERWISE
      * For Mon, Tue, Wed, or Fri date 0 is used for From date
     C                   Z-ADD     YL0007        YL0006                         USR Through Dat
     C                   END                                                    *FI
      * LCL.Thru Date Pass        USR = LCL.USR Through Date
     C                   Z-ADD     YL0006        YL0009                         Thru Date Pass
      * Call Program to Sweep Orders to MercuryGate.
      * SBM Sweep Ords to MG   CL - Order Header TRG  * 
     C                   CALL      'PBTJUPC'                            90      SBM Sweep Ords
     C                   PARM      *BLANK        WQ0006                         Return Code Usr
     C                   PARM      *BLANK        WQ0007                         Ship To Name
     C                   PARM      *BLANK        WQ0008                         Customer Purcha
     C                   PARM      'Y'           WQ0009                         OH Load Plan Re
     C                   PARM      YL0009        WQ0010                         Thru Date Pass
     C                   PARM      YL0004        WQ0011                         From Date Pass
     C                   PARM      *ZERO         WQ0012                         Date 0
     C                   PARM      YL0002        WQ0013                         Company Number
     C                   PARM      *ZERO         WQ0014                         Customer Number
     C                   PARM      *ZERO         WQ0015                         Order Number 1
     C                   PARM      *BLANK        WQ0016                         Warehouse Code
     C                   PARM      *BLANK        WQ0017                         Trans Type 1 PA
     C                   PARM      *BLANK        WQ0018                         Trans Type 2 PA
     C                   PARM      'A'           WQ0019                         Change Flag USR
     C                   PARM      *BLANK        WQ0020                         USR Description
     C                   PARM      'SWP'         WQ0021                         Pricing Event C
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PBTJUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * RTV Numeric Value      RT - System Values  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    WADOCD                         System Value Co
      * Setup key
     C                   MOVEL     @CN(001)      WADOCD                         System Value Co
      * Establish starting position
     C     KRSSA         CHAIN     @DPRETD                            90        *
      * Data record not found
     C   90              MOVEL     'USR0759'     W0RTN
      * USER: Process Data record
     C                   IF        NOT *IN90
     C                   Z-ADD     WAM8NB        YL0005                         System Value Nu
     C                   GOTO      SAEXIT                                       *QUIT
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   XCVFA         BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C                   IF        XDAY1 > 109267
     C                   ADD       2             XDAY1
     C                   ELSE
     C                   IF        XDAY1 > 36218
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      * Full years (up to the date)
     C     XDAY1         DIV       365.25        XDWK1
     C                   MVR                     XDWK3
     C                   Z-ADD     XDWK1         XDINYY
      * The date is the end of a year
     C                   IF        XDWK3 = 0
     C                   Z-ADD     12            XDINMM
     C                   Z-ADD     31            XDINDD
     C                   ELSE
      * Year days up to the date
     C     XDWK1         MULT      365.25        XDWK2
     C                   SUB       XDWK2         XDAY1
     C                   ADD       1             XDINYY
      * Leap year ?
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
      * March 1 (relative day of the year)
     C                   IF        XDWK1 = 0
     C                   Z-ADD     60            XDWK1
     C                   ELSE
     C                   Z-ADD     59            XDWK1
     C                   END
      * Define date base month and offset day -
      *  - January (thru February)
     C                   IF        XDAY1 <= XDWK1
     C                   Z-ADD     1             XDINMM
     C                   ELSE
     C                   SUB       XDWK1         XDAY1
      *  - March (thru July)
     C                   IF        XDAY1 <= 153
     C                   Z-ADD     3             XDINMM
     C                   ELSE
      *  - August (thru December)
     C                   Z-ADD     8             XDINMM
     C                   SUB       153           XDAY1
     C                   END
      * Calculate 2 month base and offset day
     C     XDAY1         SUB       1             XDWK1
     C                   DIV       61            XDWK1
     C                   MVR                     XDAY1
     C                   ADD       1             XDAY1
     C                   MULT      2             XDWK1
     C                   ADD       XDWK1         XDINMM
     C                   END
      * Calculate date increment,
     C                   IF        XDAY1 > 31
     C                   ADD       1             XDINMM
     C                   SUB       31            XDAY1
     C                   END
     C                   Z-ADD     XDAY1         XDINDD
     C                   END
      *================================================================
     CSR   XCVFAE        ENDSR
      /EJECT
     CSR   XCVTA         BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C     XDINYY        SUB       1             XDWK1
     C     XDWK1         MULT      365.25        XDAY1
     C                   IF        XDWK1 >= 300
     C                   SUB       2             XDAY1
     C                   ELSE
     C                   IF        XDWK1 >= 100
     C                   SUB       1             XDAY1
     C                   END
     C                   END
      * (from the beginning of the year to the beginning of the month:)
     C     XDINMM        SUB       1             XDWK1
      *     ...+31*(MM-1) (for January-February) ...
     C                   IF        XDINMM < 3
     C                   MULT      31            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                   MULT      30            XDWK1
     C                   ADD       XDWK1         XDAY1
      *         ...-2 (for preceding February) ...
     C                   SUB       2             XDAY1
      *         ...+1 (for preceding February, if leap year) ...
     C                   IF        XDINYY <> 100 AND
     C                             XDINYY <> 300
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
     C                   IF        XDWK1 = 0
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C                   IF        XDINMM < 8
     C     XDINMM        MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C     XDINMM        ADD       1             XDWK1
     C                   MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   END
     C                   END
      * ...+DD (days in the month up to the ending date)
     C                   ADD       XDINDD        XDAY1
      *================================================================
     CSR   XCVTAE        ENDSR
      /EJECT
     CSR   XDADY         BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
      * None days of week selected
     C                   IF        XDURR = 0 OR
     C                             XDWSL = 0
     C                   Z-ADD     XDAY2         XDAY1
      * Return Code: Unable to increment date.
     C                   IF        XDURR <> *ZERO
     C                   MOVEL     'Y2U0059'     W0RTN
     C                   ENDIF
     C                   GOTO      XDADYE
     C                   ENDIF
      * All days of week selected
     C                   IF        XDWSL = 7
     C     XDAY2         ADD       XDURR         XDAY1
     C                   GOTO      XDADYM
     C                   ENDIF
      * Some days of week selected
     C                   IF        XDURR >= 0
     C                   Z-ADD     1             XDSTP
     C                   ELSE
     C                   Z-ADD     -1            XDSTP
     C                   ENDIF
      * Get number of full weeks in the duration
     C     XDURR         DIV       XDWSL         XDWNB
      * Isolate the last week
     C                   MVR                     XDLSW
     C                   IF        XDLSW = 0
     C     XDWSL         MULT      XDSTP         XDLSW
     C                   SUB       XDSTP         XDWNB
     C                   ENDIF
      * Increment the date by the full weeks
     C     XDWNB         MULT      7             XDWK1
     C     XDAY2         ADD       XDWK1         XDAY1
      * Determine day of week of the beginning date
     C     XDAY2         ADD       3             YY
     C                   DIV       7             YY
     C                   MVR                     YY
     C                   IF        YY = 0
     C                   Z-ADD     7             YY
     C                   ENDIF
      * Loop: Increment the date by the last week
      * Increment the date
     C                   DOW       XDLSW <> 0
     C                   ADD       XDSTP         XDAY1
      * Increment the day of week
     C                   ADD       XDSTP         YY
      * Put day of week into the range 1-7
     C                   IF        YY = 0
     C                   Z-ADD     7             YY
     C                   ELSE
     C                   IF        YY = 8
     C                   Z-ADD     1             YY
     C                   ELSE
     C                   IF        YY = -1
     C                   Z-ADD     6             YY
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      * Selected day of the last week has been processed
     C                   IF        YDOW(YY) = XDSEL
     C                   SUB       XDSTP         XDLSW
     C                   ENDIF
      * End of loop
     C                   ENDDO
     C     XDADYM        TAG
     C                   IF        XDINDD < 1
     C                   Z-ADD     1             XDINDD
     C                   MOVEL     'Y2U0006'     W0RTN
     C                   ENDIF
      *================================================================
     CSR   XDADYE        ENDSR
      /EJECT
     CSR   XDOWS         BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                   MOVEA     XDCDW         YDOW
     C                   Z-ADD     0             XDWSL
     C                   Z-ADD     1             YY
     C                   DOW       YY <= 7
     C                   IF        YDOW(YY) = XDSEL
     C                   ADD       1             XDWSL
     C                   END
     C                   ADD       1             YY
     C                   END
      *================================================================
     CSR   XDOWSE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAM8NB                         System Value Nu
     C                   Z-ADD     *ZERO         WAAATM                         Job Time
     C                   Z-ADD     *ZERO         WAAXDT                         Job Date
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     @CN(1)        @CN(1)
     C                   MOVEL     'N'           W0PMT
      * Define local work field Company Number
     C                   Z-ADD     *ZERO         YL0001
      * Define local work field Company Number Pass   USR
     C                   Z-ADD     *ZERO         YL0002
      * Define local work field Job Date Usr
     C                   Z-ADD     *ZERO         YL0003
      * Define local work field From Date Pass        USR
     C                   Z-ADD     *ZERO         YL0004
      * Define local work field Days
     C                   Z-ADD     *ZERO         YL0005
      * Define local work field USR Through Date
     C                   Z-ADD     *ZERO         YL0006
      * Define local work field Date 0 RGT
     C                   Z-ADD     *ZERO         YL0007
      * Define null work field Date 1 RGT
     C                   Z-ADD     *ZERO         YN0001
      * Define local work field Date 2 RGT
     C                   Z-ADD     *ZERO         YL0008
      * Define local work field Thru Date Pass        USR
     C                   Z-ADD     *ZERO         YL0009
      * Define null work field Return Code Usr
     C                   EVAL      YN0002 = ' '
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 TMSORDSWP
