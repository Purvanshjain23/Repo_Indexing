     H/TITLE PRT Sls/Cmp w/Sum/bySlsPF Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by  : 2E  Version:  1135
     H* Function type : Print file
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISSMASO
     H* Date          : 05/10/04  Time  : 18:45:22
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FOMHSTPLSIF  E           K        DISK
      * RSQ : Sales History            o/VP/Mgr/Sls/Itm Typ/Grp
      *
     FCAABREL1IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       V
      *
     FPDIFREL0IF  E           K        DISK
      * RTV : VP Level                  Retrieval index
      *
     FCAALREL1IF  E           K        DISK
      * RTV : Manager Level             Retrieval index       NV
      *
     FCAAPREL2IF  E           K        DISK
      * RTV : Salesperson               Retrieval index       V
      *
     FOME8REL0IF  E           K        DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FOME9REL0IF  E           K        DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FOMT0PFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: PRT Sls/Cmp w/Sum/bySlsPF Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    YK01      200  8  A            Product Type Su
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
     IYD01        DS
     I                                        1   30YI0101
     I                                        4   80YI01
      *
     IYM01        DS                        200
     I                                        1  112WAR1VA
     I                                       12  222WAR2VA
     I                                       23  332WAR4VA
     I                                       34  442WAR5VA
     I                                       45  552WAR7VA
     I                                       56  662WAR8VA
     I                                       67  772WASAVA
     I                                       78  882WASCVA
     I                                       89  992WASDVA
     I                                      100 1102WASFVA
     I                                      111 1212WASGVA
     I                                      122 1322WASIVA
     I                                      133 1350WAA5C3
      *
     IYW01        DS
     I                                        1  112XAR1VA
     I                                       12  222XAR2VA
     I                                       23  332XAR4VA
     I                                       34  442XAR5VA
     I                                       45  552XAR7VA
     I                                       56  662XAR8VA
     I                                       67  772XASAVA
     I                                       78  882XASCVA
     I                                       89  992XASDVA
     I                                      100 1102XASFVA
     I                                      111 1212XASGVA
     I                                      122 1322XASIVA
     I                                      133 1350XAA5C3
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Sales History
      * I : RST Company Number
     I                                    P   1   20P1AIC3
      * I :  Original Salesperson
     I                                        3   5 P1R5CD
      * I :  Manager Level Code
     I                                        6   7 P1BFCD
      * I :  VP Level Code
     I                                        8  10 P1Q4CD
      * N :  Weight Billed
     I                                    P  11  162P1BYWG
      * N :  FOB Gross Amount
     I                                    P  17  222P1USVA
      * I :  Item Structure Type Code
     I                                    P  23  240P1RGNB
      * I :  Item Structure Group Code
     I                                    P  25  260P1RHNB
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Prior From Period Year
     I                                    P   1   30P2PFPY
      * N :  Prior To Period Year
     I                                    P   4   60P2PTPY
      * N :  USR Prior From Julian Per
     I                                        7  14 P2F8TX
      * N :  USR Prior To Julian Per
     I                                       15  22 P2F9TX
      * N :  USR From Julian Period
     I                                       23  30 P2F6TX
      * N :  USR To Julian Period
     I                                       31  38 P2F7TX
      * I :  USR From Date
     I                                    P  39  420P2BDDT
      * I :  USR To Date
     I                                    P  43  460P2FDDT
     IP3PARM      DS
      * FLD: Sales Report Parms
      * N :  Prm From Period Year
     I                                    P   1   30P3PPER
      * N :  Prm From Period
     I                                    P   4   50P3FPER
      * N :  Prm From Period Week
     I                                    P   6   70P3E5NB
      * N :  Prm To Period Year
     I                                    P   8  100P3PDYR
      * N :  Prm To Period
     I                                    P  11  120P3ACCT
      * N :  Prm To Period Week
     I                                    P  13  140P3PDWK
     IP4PARM      DS
      * I :  USR Check Y/N Status
     I                                        1   1 P4JDST
     IP5PARM      DS
      * I :  Billing Activity Type
     I                                        1   1 P5OBST
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1R5CD    PARM           WP0002  3        Original Salesp
     C           P1BFCD    PARM           WP0003  2        Manager Level C
     C           P1Q4CD    PARM           WP0004  3        VP Level Code
     C           P1RGNB    PARM           WP0005  30       Item Structure
     C           P1RHNB    PARM           WP0006  30       Item Structure
     C           P2BDDT    PARM           WP0007  70       USR From Date
     C           P2FDDT    PARM           WP0008  70       USR To Date
     C           P4JDST    PARM           WP0009  1        USR Check Y/N S
     C           P5OBST    PARM           WP0010  1        Billing Activit
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * PRT Sls/Cmp w/Sum/bySlsPF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$PENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * PRT Sls/Cmp w/Sum/bySlsPF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN F4AIC3    WQKA01           Company Number
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           Company Number
      * Setup key
     C                     Z-ADDP1AIC3    WQKA01           Company Number
      * Establish starting position
     C           KRSA      SETLL@HSTPOV                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
      * USER: Null report processing
      * CLC Set for Null Rpt   US - /UT User Source  * 
     C                     MOVEL'Y'       W0AP1P
     C                     MOVEL'Y'       W0NEWP
     C                     MOVEL'Y'       WUGGST           USR Display fie
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        VP Level Code
     C                     MOVEL'Y'       W0AL02  1        Manager Level C
     C                     MOVEL'Y'       W0AL03  1        Sales Route Cod
     C                     MOVEL'Y'       W0AL04  1        Item Structure
     C                     MOVEL'Y'       W0AL05  1        Item Structure
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $BAIC3           Company Number
     C                     MOVEL*BLANK    $BADTX           Name
     C                     Z-ADD*ZERO     $BBDDT           USR From Date
     C                     Z-ADD*ZERO     $BZZNB           USR From Period
     C                     Z-ADD*ZERO     $BZ1NB           Usr From Period
     C                     Z-ADD*ZERO     $BFDDT           USR To Date
     C                     Z-ADD*ZERO     $BZ8NB           USR To Period
     C                     Z-ADD*ZERO     $BZ9NB           USR To Period W
     C                     MOVEL*BLANK    $BQ4CD           VP Level Code
     C                     MOVEL*BLANK    $BMJNA           VP Level Descri
     C                     MOVEL*BLANK    $BBFCD           Manager Level C
     C                     MOVEL*BLANK    $BAUNA           Description
     C                     MOVEL*BLANK    $BR4CD           Sales Route Cod
     C                     MOVEL*BLANK    $BR5CD           Original Salesp
     C                     MOVEL*BLANK    $BALTX           Salesperson Nam
     C                     Z-ADD*ZERO     $BRGNB           Item Structure
     C                     MOVEL*BLANK    $BDCTX           Item Structure
     C                     Z-ADD*ZERO     $BRHNB           Item Structure
     C                     MOVEL*BLANK    $BDDTX           Item Structure
     C                     MOVEL*BLANK    $BOBST           Billing Activit
     C                     MOVEL*BLANK    $BNCNA           USR Desc. 10
     C                     MOVEL*BLANK    $BJDST           USR Check Y/N S
      * Load related totals format
     C                     Z-ADD*ZERO     $OAIC3           Company Number
     C                     Z-ADD*ZERO     $OQQVA           Vol 5 Cur $
     C                     Z-ADD*ZERO     $OQSVA           Vol 5 Prior $
     C                     Z-ADD*ZERO     $OQ7VA           Vol 5 Cur Diff
     C                     Z-ADD*ZERO     $OQWVA           Vol 5 PTD Cur $
     C                     Z-ADD*ZERO     $OQYVA           Vol 5 PTD Prior
     C                     Z-ADD*ZERO     $ORAVA           Vol 5 PTD Diff
     C                     Z-ADD*ZERO     $OQ2VA           Vol 5 YTD Cur $
     C                     Z-ADD*ZERO     $OQ3VA           Vol 5 YTD Prior
     C                     Z-ADD*ZERO     $ORCVA           Vol 5 YTD Diff
     C                     Z-ADD*ZERO     $OQPVA           Vol 5 Cur #
     C                     Z-ADD*ZERO     $OQRVA           Vol 5 Prior #
     C                     Z-ADD*ZERO     $OQ8VA           Vol 5 Cur Diff
     C                     Z-ADD*ZERO     $OQVVA           Vol 5 PTD Cur #
     C                     Z-ADD*ZERO     $OQXVA           Vol 5 PTD Prior
     C                     Z-ADD*ZERO     $OQ9VA           Vol 5 PTD Diff
     C                     Z-ADD*ZERO     $OQ1VA           Vol 5 YTD Cur #
     C                     Z-ADD*ZERO     $OQ4VA           Vol 5 YTD Prior
     C                     Z-ADD*ZERO     $ORBVA           Vol 5 YTD Diff
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDF4AIC3    $CAIC3           Company Number
     C                     MOVEL*BLANK    $CADTX           Name
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDF4AIC3    $DAIC3           Company Number
     C                     MOVELF4Q4CD    $DQ4CD           VP Level Code
     C                     MOVEL*BLANK    $DMJNA           VP Level Descri
      * Load related totals format
     C                     Z-ADDF4AIC3    $NAIC3           Company Number
     C                     MOVELF4Q4CD    $NQ4CD           VP Level Code
     C                     Z-ADD*ZERO     $NQQVA           Vol 5 Cur $
     C                     Z-ADD*ZERO     $NQSVA           Vol 5 Prior $
     C                     Z-ADD*ZERO     $NQ7VA           Vol 5 Cur Diff
     C                     Z-ADD*ZERO     $NQWVA           Vol 5 PTD Cur $
     C                     Z-ADD*ZERO     $NQYVA           Vol 5 PTD Prior
     C                     Z-ADD*ZERO     $NRAVA           Vol 5 PTD Diff
     C                     Z-ADD*ZERO     $NQ2VA           Vol 5 YTD Cur $
     C                     Z-ADD*ZERO     $NQ3VA           Vol 5 YTD Prior
     C                     Z-ADD*ZERO     $NRCVA           Vol 5 YTD Diff
     C                     Z-ADD*ZERO     $NQPVA           Vol 5 Cur #
     C                     Z-ADD*ZERO     $NQRVA           Vol 5 Prior #
     C                     Z-ADD*ZERO     $NQ8VA           Vol 5 Cur Diff
     C                     Z-ADD*ZERO     $NQVVA           Vol 5 PTD Cur #
     C                     Z-ADD*ZERO     $NQXVA           Vol 5 PTD Prior
     C                     Z-ADD*ZERO     $NQ9VA           Vol 5 PTD Diff
     C                     Z-ADD*ZERO     $NQ1VA           Vol 5 YTD Cur #
     C                     Z-ADD*ZERO     $NQ4VA           Vol 5 YTD Prior
     C                     Z-ADD*ZERO     $NRBVA           Vol 5 YTD Diff
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDF4AIC3    $EAIC3           Company Number
     C                     MOVELF4BFCD    $EBFCD           Manager Level C
     C                     MOVEL*BLANK    $EAUNA           Description
     C                     MOVELF4Q4CD    $EQ4CD           VP Level Code
      * Load related totals format
     C                     Z-ADDF4AIC3    $MAIC3           Company Number
     C                     MOVELF4BFCD    $MBFCD           Manager Level C
     C                     Z-ADD*ZERO     $MQQVA           Vol 5 Cur $
     C                     Z-ADD*ZERO     $MQSVA           Vol 5 Prior $
     C                     Z-ADD*ZERO     $MQ7VA           Vol 5 Cur Diff
     C                     Z-ADD*ZERO     $MQWVA           Vol 5 PTD Cur $
     C                     Z-ADD*ZERO     $MQYVA           Vol 5 PTD Prior
     C                     Z-ADD*ZERO     $MRAVA           Vol 5 PTD Diff
     C                     Z-ADD*ZERO     $MQ2VA           Vol 5 YTD Cur $
     C                     Z-ADD*ZERO     $MQ3VA           Vol 5 YTD Prior
     C                     Z-ADD*ZERO     $MRCVA           Vol 5 YTD Diff
     C                     Z-ADD*ZERO     $MQPVA           Vol 5 Cur #
     C                     Z-ADD*ZERO     $MQRVA           Vol 5 Prior #
     C                     Z-ADD*ZERO     $MQ8VA           Vol 5 Cur Diff
     C                     Z-ADD*ZERO     $MQVVA           Vol 5 PTD Cur #
     C                     Z-ADD*ZERO     $MQXVA           Vol 5 PTD Prior
     C                     Z-ADD*ZERO     $MQ9VA           Vol 5 PTD Diff
     C                     Z-ADD*ZERO     $MQ1VA           Vol 5 YTD Cur #
     C                     Z-ADD*ZERO     $MQ4VA           Vol 5 YTD Prior
     C                     Z-ADD*ZERO     $MRBVA           Vol 5 YTD Diff
     C                     MOVELF4Q4CD    $MQ4CD           VP Level Code
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDF4AIC3    $FAIC3           Company Number
     C                     MOVELF4R4CD    $FR4CD           Sales Route Cod
     C                     MOVELF4R5CD    $FR5CD           Original Salesp
     C                     MOVEL*BLANK    $FALTX           Salesperson Nam
     C                     MOVELF4BFCD    $FBFCD           Manager Level C
     C                     MOVELF4Q4CD    $FQ4CD           VP Level Code
      * Load related totals format
     C                     Z-ADDF4AIC3    $LAIC3           Company Number
     C                     MOVELF4R4CD    $LR4CD           Sales Route Cod
     C                     MOVELF4R5CD    $LR5CD           Original Salesp
     C                     Z-ADD*ZERO     $LQQVA           Vol 5 Cur $
     C                     Z-ADD*ZERO     $LQSVA           Vol 5 Prior $
     C                     Z-ADD*ZERO     $LQ7VA           Vol 5 Cur Diff
     C                     Z-ADD*ZERO     $LQWVA           Vol 5 PTD Cur $
     C                     Z-ADD*ZERO     $LQYVA           Vol 5 PTD Prior
     C                     Z-ADD*ZERO     $LRAVA           Vol 5 PTD Diff
     C                     Z-ADD*ZERO     $LQ2VA           Vol 5 YTD Cur $
     C                     Z-ADD*ZERO     $LQ3VA           Vol 5 YTD Prior
     C                     Z-ADD*ZERO     $LRCVA           Vol 5 YTD Diff
     C                     Z-ADD*ZERO     $LQPVA           Vol 5 Cur #
     C                     Z-ADD*ZERO     $LQRVA           Vol 5 Prior #
     C                     Z-ADD*ZERO     $LQ8VA           Vol 5 Cur Diff
     C                     Z-ADD*ZERO     $LQVVA           Vol 5 PTD Cur #
     C                     Z-ADD*ZERO     $LQXVA           Vol 5 PTD Prior
     C                     Z-ADD*ZERO     $LQ9VA           Vol 5 PTD Diff
     C                     Z-ADD*ZERO     $LQ1VA           Vol 5 YTD Cur #
     C                     Z-ADD*ZERO     $LQ4VA           Vol 5 YTD Prior
     C                     Z-ADD*ZERO     $LRBVA           Vol 5 YTD Diff
     C                     MOVELF4BFCD    $LBFCD           Manager Level C
     C                     MOVELF4Q4CD    $LQ4CD           VP Level Code
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDF4AIC3    $GAIC3           Company Number
     C                     MOVELF4R4CD    $GR4CD           Sales Route Cod
     C                     MOVELF4BFCD    $GBFCD           Manager Level C
     C                     MOVELF4Q4CD    $GQ4CD           VP Level Code
     C                     Z-ADDF4RGNB    $GRGNB           Item Structure
     C                     MOVEL*BLANK    $GDCTX           Item Structure
      * Load related totals format
     C                     Z-ADDF4AIC3    $KAIC3           Company Number
     C                     MOVELF4R4CD    $KR4CD           Sales Route Cod
     C                     MOVELF4BFCD    $KBFCD           Manager Level C
     C                     MOVELF4Q4CD    $KQ4CD           VP Level Code
     C                     Z-ADDF4RGNB    $KRGNB           Item Structure
     C                     MOVEL*BLANK    $KDCTX           Item Structure
     C                     Z-ADD*ZERO     $KQQVA           Vol 5 Cur $
     C                     Z-ADD*ZERO     $KQSVA           Vol 5 Prior $
     C                     Z-ADD*ZERO     $KQ7VA           Vol 5 Cur Diff
     C                     Z-ADD*ZERO     $KQWVA           Vol 5 PTD Cur $
     C                     Z-ADD*ZERO     $KQYVA           Vol 5 PTD Prior
     C                     Z-ADD*ZERO     $KRAVA           Vol 5 PTD Diff
     C                     Z-ADD*ZERO     $KQ2VA           Vol 5 YTD Cur $
     C                     Z-ADD*ZERO     $KQ3VA           Vol 5 YTD Prior
     C                     Z-ADD*ZERO     $KRCVA           Vol 5 YTD Diff
     C                     Z-ADD*ZERO     $KQPVA           Vol 5 Cur #
     C                     Z-ADD*ZERO     $KQRVA           Vol 5 Prior #
     C                     Z-ADD*ZERO     $KQ8VA           Vol 5 Cur Diff
     C                     Z-ADD*ZERO     $KQVVA           Vol 5 PTD Cur #
     C                     Z-ADD*ZERO     $KQXVA           Vol 5 PTD Prior
     C                     Z-ADD*ZERO     $KQ9VA           Vol 5 PTD Diff
     C                     Z-ADD*ZERO     $KQ1VA           Vol 5 YTD Cur #
     C                     Z-ADD*ZERO     $KQ4VA           Vol 5 YTD Prior
     C                     Z-ADD*ZERO     $KRBVA           Vol 5 YTD Diff
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
     C           W0AL05    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDF4AIC3    $HAIC3           Company Number
     C                     MOVELF4R4CD    $HR4CD           Sales Route Cod
     C                     MOVELF4BFCD    $HBFCD           Manager Level C
     C                     MOVELF4Q4CD    $HQ4CD           VP Level Code
     C                     Z-ADDF4RGNB    $HRGNB           Item Structure
     C                     Z-ADDF4RHNB    $HRHNB           Item Structure
      * Load related totals format
     C                     Z-ADDF4AIC3    $JAIC3           Company Number
     C                     MOVELF4R4CD    $JR4CD           Sales Route Cod
     C                     MOVELF4BFCD    $JBFCD           Manager Level C
     C                     MOVELF4Q4CD    $JQ4CD           VP Level Code
     C                     Z-ADDF4RGNB    $JRGNB           Item Structure
     C                     Z-ADDF4RHNB    $JRHNB           Item Structure
     C                     MOVEL*BLANK    $JDDTX           Item Structure
     C                     Z-ADD*ZERO     $JQQVA           Vol 5 Cur $
     C                     Z-ADD*ZERO     $JQSVA           Vol 5 Prior $
     C                     Z-ADD*ZERO     $JQ7VA           Vol 5 Cur Diff
     C                     Z-ADD*ZERO     $JQWVA           Vol 5 PTD Cur $
     C                     Z-ADD*ZERO     $JQYVA           Vol 5 PTD Prior
     C                     Z-ADD*ZERO     $JRAVA           Vol 5 PTD Diff
     C                     Z-ADD*ZERO     $JQ2VA           Vol 5 YTD Cur $
     C                     Z-ADD*ZERO     $JQ3VA           Vol 5 YTD Prior
     C                     Z-ADD*ZERO     $JRCVA           Vol 5 YTD Diff
     C                     Z-ADD*ZERO     $JQPVA           Vol 5 Cur #
     C                     Z-ADD*ZERO     $JQRVA           Vol 5 Prior #
     C                     Z-ADD*ZERO     $JQ8VA           Vol 5 Cur Diff
     C                     Z-ADD*ZERO     $JQVVA           Vol 5 PTD Cur #
     C                     Z-ADD*ZERO     $JQXVA           Vol 5 PTD Prior
     C                     Z-ADD*ZERO     $JQ9VA           Vol 5 PTD Diff
     C                     Z-ADD*ZERO     $JQ1VA           Vol 5 YTD Cur #
     C                     Z-ADD*ZERO     $JQ4VA           Vol 5 YTD Prior
     C                     Z-ADD*ZERO     $JRBVA           Vol 5 YTD Diff
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP05  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDF4AIC3    $IAIC3           Company Number
     C                     Z-ADDF4UENB    $IUENB           Order Secondary
     C                     MOVELF4MONA    $IMONA           A/R City
     C                     MOVELF4RJCD    $IRJCD           A/R State
     C                     MOVELF4RKCD    $IRKCD           A/R County Code
     C                     MOVELF4GPTX    $IGPTX           A/R Zip/Postal
     C                     Z-ADDF4BTC7    $IBTC7           Parent Customer
     C                     MOVELF4AQTX    $IAQTX           A/R Customer Na
     C                     Z-ADDF4BKC7    $IBKC7           Ship To Custome
     C                     MOVELF4BRTX    $IBRTX           Ship To Name
     C                     MOVELF4HNNA    $IHNNA           Ship To City
     C                     MOVELF4DBCD    $IDBCD           Ship To State C
     C                     MOVELF4CKTX    $ICKTX           Ship To Zip/Pos
     C                     MOVELF4R4CD    $IR4CD           Sales Route Cod
     C                     MOVELF4R5CD    $IR5CD           Original Salesp
     C                     MOVELF4BFCD    $IBFCD           Manager Level C
     C                     MOVELF4Q4CD    $IQ4CD           VP Level Code
     C                     MOVELF4RLCD    $IRLCD           Order Header Re
     C                     MOVELF4JNCD    $IJNCD           Order Type - Sa
     C                     MOVELF4Q2CD    $IQ2CD           Shipping Method
     C                     MOVELF4U2ST    $IU2ST           Export Status
     C                     Z-ADDF4ATIN    $IATIN           Attach to Invoi
     C                     Z-ADDF4T3NB    $IT3NB           Attach to Order
     C                     Z-ADDF4RSRN    $IRSRN           Resell Referenc
     C                     Z-ADDF4ORIT    $IORIT           Original Item
     C                     Z-ADDF4D0WG    $ID0WG           Weight Ordered
     C                     Z-ADDF4AWDT    $IAWDT           Invoice Date
     C                     Z-ADDF4HDDT    $IHDDT           Deadline Depart
     C                     MOVELF4VAST    $IVAST           Affect Sales Pn
     C                     MOVELF4UMCD    $IUMCD           Export Country
     C                     Z-ADDF4HCDT    $IHCDT           LD Arrival Date
     C                     Z-ADDF4BZNB    $IBZNB           OM Week
     C                     Z-ADDF4BYWG    $IBYWG           Weight Billed
     C                     Z-ADDF4S5NB    $IS5NB           Shipped Item Co
     C                     Z-ADDF4USVA    $IUSVA           FOB Gross Amoun
     C                     Z-ADDF4UTVA    $IUTVA           Standard Overag
     C                     MOVELF4RMCD    $IRMCD           Order Detail Re
     C                     Z-ADDF4BZPR    $IBZPR           Price Overage O
     C                     MOVELF4RDCD    $IRDCD           Date Method Cod
     C                     MOVELF4Q7CD    $IQ7CD           Price Method Co
     C                     Z-ADDF4R1NB    $IR1NB           Rated Freight
     C                     Z-ADDF4CONB    $ICONB           Invoice Number
     C                     MOVELF4CEST    $ICEST           Invoice Suffix
     C                     Z-ADDF4GNDT    $IGNDT           Actual Shipped
     C                     Z-ADDF4AODT    $IAODT           Scheduled Ship
     C                     MOVELF4LQCD    $ILQCD           Commodity Marke
     C                     MOVELF4HICD    $IHICD           Quality Level
     C                     MOVELF4RBCD    $IRBCD           Item Level
     C                     Z-ADDF4GIDT    $IGIDT           Pricing Date Us
     C                     MOVELF4Z1ST    $IZ1ST           Modified Flag
     C                     Z-ADDF4ULVA    $IULVA           Absorbed Freigh
     C                     Z-ADDF4UNVA    $IUNVA           Automatic Accru
     C                     Z-ADDF4UOVA    $IUOVA           Non Automatic A
     C                     Z-ADDF4UPVA    $IUPVA           Financials Amou
     C                     Z-ADDF4UQVA    $IUQVA           Financials Amou
     C                     MOVELF4SDCD    $ISDCD           Group for Packa
     C                     MOVELF4QZCD    $IQZCD           Base/Conv/Loss
     C                     MOVELF4XWST    $IXWST           Variety/Rendere
     C                     MOVELF4T9CD    $IT9CD           Customer Group
     C                     MOVELF4UBCD    $IUBCD           Customer Group
     C                     Z-ADDF4CFC7    $ICFC7           Order Group Cod
     C                     MOVELF4X1CD    $IX1CD           Shipping Zone C
     C                     MOVELF4GASX    $IGASX           Invoice Price T
     C                     Z-ADDF4DUPR    $IDUPR           Invoice Unit Pr
     C                     Z-ADDF4B6VL    $IB6VL           Invoice Extende
     C                     Z-ADDF4IANX    $IIANX           Req Shipping Te
     C                     Z-ADDF4IBNX    $IIBNX           Actual Shipping
     C                     MOVELF4RPCD    $IRPCD           Age Code
     C                     Z-ADDF4NYDT    $INYDT           Req Delivery Da
     C                     Z-ADDF4BZTM    $IBZTM           Req Delivery Ti
     C                     Z-ADDF4Z4NB    $IZ4NB           MPC Number
     C                     MOVELF4XACD    $IXACD           Shipping Line
     C                     MOVELF4OANA    $IOANA           Sail Port Delv
     C                     MOVELF4OKTX    $IOKTX           Sail Port City
     C                     MOVELF4K4TX    $IK4TX           Vessel Name
     C                     MOVELF4NBBO    $INBBO           Booking Number
     C                     Z-ADDF4OCFR    $IOCFR           Ocean Freight
     C                     Z-ADDF4C0C7    $IC0C7           Claim Number
     C                     Z-ADDF4A1AA    $IA1AA           Ham Group Numbe
     C                     MOVELF4VEST    $IVEST           Palletize
     C                     MOVELF4UVST    $IUVST           EDI Status 1
     C                     MOVELF4UWST    $IUWST           EDI Status 2
     C                     MOVELF4UXST    $IUXST           EDI Status 3
     C                     Z-ADDF4CDPR    $ICDPR           Market Value
     C                     Z-ADDF4D0PR    $ID0PR           Default Cmdty M
     C                     Z-ADDF4D0VL    $ID0VL           Raw Material Co
     C                     MOVELF4IRSX    $IIRSX           Sales Expense P
     C                     Z-ADDF4CEVL    $ICEVL           Sales Expense T
     C                     MOVELF4ISSX    $IISSX           Data Mart Proce
     C                     MOVELF4ITSX    $IITSX           LH Load Type
     C                     MOVELF4IUSX    $IIUSX           Sale Country
     C                     Z-ADDF4OHDT    $IOHDT           LD Sail Date
     C                     Z-ADDF4D9PR    $ID9PR           HST Unused Pric
     C                     Z-ADDF4CFVL    $ICFVL           HST Item Target
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN F4AIC3    WZA001           Company Number
     C                     Z-ADDF4AIC3    WZA001
     C           *LIKE     DEFN F4Q4CD    WZA002           VP Level Code
     C                     MOVELF4Q4CD    WZA002
     C           *LIKE     DEFN F4BFCD    WZA003           Manager Level C
     C                     MOVELF4BFCD    WZA003
     C           *LIKE     DEFN F4R4CD    WZA004           Sales Route Cod
     C                     MOVELF4R4CD    WZA004
     C           *LIKE     DEFN F4RGNB    WZA005           Item Structure
     C                     Z-ADDF4RGNB    WZA005
     C           *LIKE     DEFN F4RHNB    WZA006           Item Structure
     C                     Z-ADDF4RHNB    WZA006
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@HSTPOV                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Concat DB1 Period Year, Period, Week - "WRK.USR DB Julian Period"
      * Concat YEAR/PER/Week to 8 - /UT User Source  * 
     C                     CALL 'OMSJUPR'              90  CLC Concat Yr/P
     C                     PARM F4ESNB    WQ0017  40       Prm From Period
     C                     PARM F4ETNB    WQ0018  20       Prm From Period
     C                     PARM F4BZNB    WQ0019  20       Prm From Period
     C           WUGATX    PARM *BLANK    WQ0020  8        USR Julian Year
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'OMSJUPR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * Check Sales VP
      * CASE: PAR.VP Level Code is Entered
     C           P1Q4CD    IFNE *BLANK                     *IF
      * CASE: PAR.VP Level Code NE DB1.VP Level Code
     C           P1Q4CD    IFNE F4Q4CD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Check Sales Manager
      * CASE: PAR.Manager Level Code is Entered
     C           P1BFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Manager Level Code NE DB1.Manager Level Code
     C           P1BFCD    IFNE F4BFCD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Check Salesperson
      * CASE: PAR.Original Salesperson is entered
     C           P1R5CD    IFNE *BLANK                     *IF
      * CASE: PAR.Original Salesperson NE DB1.Original Salesperson
     C           P1R5CD    IFNE F4R5CD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Check Item Structure Type
      * CASE: PAR.Item Structure Type Code is greater than zero
     C           P1RGNB    IFGT *ZERO                      *IF
      * CASE: PAR.Item Structure Type Code NE DB1.Item Structure Type Cod
     C           P1RGNB    IFNE F4RGNB                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Check Item Structure Group
      * CASE: PAR.Item Structure Group Code is Entered
     C           P1RHNB    IFNE *ZERO                      *IF
      * CASE: PAR.Item Structure Group Code NE DB1.Item Structure Group C
     C           P1RHNB    IFNE F4RHNB                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Check for Date Range
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * CASE: WRK.USR DB Julian Period GT PAR.USR To Julian Period
     C           WUGATX    IFGT P2F7TX                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Validate Billing Type
      * CASE: PAR.Billing Activity Type EQ WRK.BLANK
     C           P5OBST    IFEQ WUGSTX                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Bill Type, Event   RT - OP Order Header  * 
     C                     EXSR SJRVGN
      * CASE: PAR.Billing Activity Type NE WRK.Billing Activity Type
     C           P5OBST    IFNE WUOBST                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Skip if don't affect sales $ or pnds.
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Affect Sales Doll Status is Not Yes
      *   |- c2    : DB1.Affect Sales Pnds Status is Not Yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           F4ANST    IFEQ *BLANK                     *IF
     C           F4ANST    OREQ 'N'
     C           F4VAST    IFEQ *BLANK                     *IF
     C           F4VAST    OREQ 'N'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        VP Level Code
     C                     MOVEL*BLANK    W0AL02  1        Manager Level C
     C                     MOVEL*BLANK    W0AL03  1        Sales Route Cod
     C                     MOVEL*BLANK    W0AL04  1        Item Structure
     C                     MOVEL*BLANK    W0AL05  1        Item Structure
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        VP Level Code
     C                     MOVEL'Y'       W0AL02  1        Manager Level C
     C                     MOVEL'Y'       W0AL03  1        Sales Route Cod
     C                     MOVEL'Y'       W0AL04  1        Item Structure
     C                     MOVEL'Y'       W0AL05  1        Item Structure
     C                     ELSE
      * Next record - Detect level breaks
     C           F4AIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           F4Q4CD    IFNE WZA002                     VP Level Code
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           F4BFCD    IFNE WZA003                     Manager Level C
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           F4R4CD    IFNE WZA004                     Sales Route Cod
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           F4RGNB    IFNE WZA005                     Item Structure
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C           F4RHNB    IFNE WZA006                     Item Structure
     C           W0AL04    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL05
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL05    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Prod Structure Group Code format
      * Rtv Group Description  RT - OM Item Structure Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$JRHNB    WL0019           Item Structure
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    WURGNB           Item Structure
     C                     MOVELWL0021    $JDDTX    P      Item Structure
      * Divide totals by 1000 to condense (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
      * Rtv. Prd Typ Sum/Array - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$JRGNB    WL0034           USR Prod Struct
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0022    WUR1VA           Usr Prod Type C
     C                     Z-ADDWL0023    WUR2VA           Usr Prod Type P
     C                     Z-ADDWL0024    WUR4VA           Usr Prod Type P
     C                     Z-ADDWL0025    WUR5VA           Usr Prod Type P
     C                     Z-ADDWL0026    WUR7VA           Usr Prod Type Y
     C                     Z-ADDWL0027    WUR8VA           Usr Prod Type Y
     C                     Z-ADDWL0028    WUSAVA           Usr Prod Type C
     C                     Z-ADDWL0029    WUSCVA           Usr Prod Type P
     C                     Z-ADDWL0030    WUSDVA           Usr Prod Type P
     C                     Z-ADDWL0031    WUSFVA           Usr Prod Type P
     C                     Z-ADDWL0032    WUSGVA           Usr Prod Type Y
     C                     Z-ADDWL0033    WUSIVA           Usr Prod Type Y
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ADD  $JQQVA    WUR1VA           Usr Prod Type C
     C                     ADD  $JQSVA    WUR2VA           Usr Prod Type P
     C                     ADD  $JQSVA    WUR3VA           Usr Prod Type D
     C                     ADD  $JQWVA    WUR4VA           Usr Prod Type P
     C                     ADD  $JQYVA    WUR5VA           Usr Prod Type P
     C                     ADD  $JQ2VA    WUR7VA           Usr Prod Type Y
     C                     ADD  $JQ3VA    WUR8VA           Usr Prod Type Y
     C                     ADD  $JQPVA    WUSAVA           Usr Prod Type C
     C                     ADD  $JQRVA    WUSCVA           Usr Prod Type P
     C                     ADD  $JQRVA    WUSBVA           Usr Prod Type D
     C                     ADD  $JQVVA    WUSDVA           Usr Prod Type P
     C                     ADD  $JQXVA    WUSFVA           Usr Prod Type P
     C                     ADD  $JQ1VA    WUSGVA           Usr Prod Type Y
     C                     ADD  $JQ4VA    WUSIVA           Usr Prod Type Y
      * Change Prd Type Sum/array - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWUR1VA    WL0035           Usr Prod Type C
     C                     Z-ADDWUR2VA    WL0036           Usr Prod Type P
     C                     Z-ADDWUR4VA    WL0037           Usr Prod Type P
     C                     Z-ADDWUR5VA    WL0038           Usr Prod Type P
     C                     Z-ADDWUR7VA    WL0039           Usr Prod Type Y
     C                     Z-ADDWUR8VA    WL0040           Usr Prod Type Y
     C                     Z-ADDWUSAVA    WL0041           Usr Prod Type C
     C                     Z-ADDWUSCVA    WL0042           Usr Prod Type P
     C                     Z-ADDWUSDVA    WL0043           Usr Prod Type P
     C                     Z-ADDWUSFVA    WL0044           Usr Prod Type P
     C                     Z-ADDWUSGVA    WL0045           Usr Prod Type Y
     C                     Z-ADDWUSIVA    WL0046           Usr Prod Type Y
     C                     Z-ADD$JRGNB    WL0047           USR Prod Struct
     C                     EXSR SLCHRC
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD$JQQVA    WUR1VA           Usr Prod Type C
     C                     Z-ADD$JQSVA    WUR2VA           Usr Prod Type P
     C                     Z-ADD$JQSVA    WUR3VA           Usr Prod Type D
     C                     Z-ADD$JQWVA    WUR4VA           Usr Prod Type P
     C                     Z-ADD$JQYVA    WUR5VA           Usr Prod Type P
     C                     Z-ADD$JQ2VA    WUR7VA           Usr Prod Type Y
     C                     Z-ADD$JQ3VA    WUR8VA           Usr Prod Type Y
     C                     Z-ADD$JQPVA    WUSAVA           Usr Prod Type C
     C                     Z-ADD$JQRVA    WUSCVA           Usr Prod Type P
     C                     Z-ADD$JQRVA    WUSBVA           Usr Prod Type D
     C                     Z-ADD$JQVVA    WUSDVA           Usr Prod Type P
     C                     Z-ADD$JQXVA    WUSFVA           Usr Prod Type P
     C                     Z-ADD$JQ1VA    WUSGVA           Usr Prod Type Y
     C                     Z-ADD$JQ4VA    WUSIVA           Usr Prod Type Y
      * Create Prd Typ Sum/Array - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWUR1VA    WL0048           Usr Prod Type C
     C                     Z-ADDWUR2VA    WL0049           Usr Prod Type P
     C                     Z-ADDWUR4VA    WL0050           Usr Prod Type P
     C                     Z-ADDWUR5VA    WL0051           Usr Prod Type P
     C                     Z-ADDWUR7VA    WL0052           Usr Prod Type Y
     C                     Z-ADDWUR8VA    WL0053           Usr Prod Type Y
     C                     Z-ADDWUSAVA    WL0054           Usr Prod Type C
     C                     Z-ADDWUSCVA    WL0055           Usr Prod Type P
     C                     Z-ADDWUSDVA    WL0056           Usr Prod Type P
     C                     Z-ADDWUSFVA    WL0057           Usr Prod Type P
     C                     Z-ADDWUSGVA    WL0058           Usr Prod Type Y
     C                     Z-ADDWUSIVA    WL0059           Usr Prod Type Y
     C                     Z-ADD$JRGNB    WL0060           USR Prod Struct
     C                     EXSR SMCRRC
     C                     END                             *FI
     C                     END                             *FI
      * Calculate Differences             (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
     C           $JQPVA    SUB  $JQRVA    $JQ8VA           Vol 5 Cur Diff
     C           $JQQVA    SUB  $JQSVA    $JQ7VA           Vol 5 Cur Diff
     C           $JQVVA    SUB  $JQXVA    $JQ9VA           Vol 5 PTD Diff
     C           $JQWVA    SUB  $JQYVA    $JRAVA           Vol 5 PTD Diff
     C           $JQ1VA    SUB  $JQ4VA    $JRBVA           Vol 5 YTD Diff
     C           $JQ2VA    SUB  $JQ3VA    $JRCVA           Vol 5 YTD Diff
     C                     END                             *FI
      * Accumulate totals                 (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
     C                     ADD  $JQPVA    $KQPVA           Vol 5 Cur #
     C                     ADD  $JQQVA    $KQQVA           Vol 5 Cur $
     C                     ADD  $JQRVA    $KQRVA           Vol 5 Prior #
     C                     ADD  $JQSVA    $KQSVA           Vol 5 Prior $
     C                     ADD  $JQVVA    $KQVVA           Vol 5 PTD Cur #
     C                     ADD  $JQWVA    $KQWVA           Vol 5 PTD Cur $
     C                     ADD  $JQXVA    $KQXVA           Vol 5 PTD Prior
     C                     ADD  $JQYVA    $KQYVA           Vol 5 PTD Prior
     C                     ADD  $JQ1VA    $KQ1VA           Vol 5 YTD Cur #
     C                     ADD  $JQ2VA    $KQ2VA           Vol 5 YTD Cur $
     C                     ADD  $JQ4VA    $KQ4VA           Vol 5 YTD Prior
     C                     ADD  $JQ3VA    $KQ3VA           Vol 5 YTD Prior
     C                     ADD  $JQ8VA    $KQ8VA           Vol 5 Cur Diff
     C                     ADD  $JQ7VA    $KQ7VA           Vol 5 Cur Diff
     C                     ADD  $JQ9VA    $KQ9VA           Vol 5 PTD Diff
     C                     ADD  $JRAVA    $KRAVA           Vol 5 PTD Diff
     C                     ADD  $JRBVA    $KRBVA           Vol 5 YTD Diff
     C                     ADD  $JRCVA    $KRCVA           Vol 5 YTD Diff
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 4
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$JKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP05
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Prod Structure Type Code format
      * Divide totals by 1000 to condense (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
      * Rtv. Prd Typ Sum/Array - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$KRGNB    WL0034           USR Prod Struct
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0022    WUR1VA           Usr Prod Type C
     C                     Z-ADDWL0023    WUR2VA           Usr Prod Type P
     C                     Z-ADDWL0024    WUR4VA           Usr Prod Type P
     C                     Z-ADDWL0025    WUR5VA           Usr Prod Type P
     C                     Z-ADDWL0026    WUR7VA           Usr Prod Type Y
     C                     Z-ADDWL0027    WUR8VA           Usr Prod Type Y
     C                     Z-ADDWL0028    WUSAVA           Usr Prod Type C
     C                     Z-ADDWL0029    WUSCVA           Usr Prod Type P
     C                     Z-ADDWL0030    WUSDVA           Usr Prod Type P
     C                     Z-ADDWL0031    WUSFVA           Usr Prod Type P
     C                     Z-ADDWL0032    WUSGVA           Usr Prod Type Y
     C                     Z-ADDWL0033    WUSIVA           Usr Prod Type Y
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ADD  $KQQVA    WUR1VA           Usr Prod Type C
     C                     ADD  $KQSVA    WUR2VA           Usr Prod Type P
     C                     ADD  $KQSVA    WUR3VA           Usr Prod Type D
     C                     ADD  $KQWVA    WUR4VA           Usr Prod Type P
     C                     ADD  $KQYVA    WUR5VA           Usr Prod Type P
     C                     ADD  $KQ2VA    WUR7VA           Usr Prod Type Y
     C                     ADD  $KQ3VA    WUR8VA           Usr Prod Type Y
     C                     ADD  $KQPVA    WUSAVA           Usr Prod Type C
     C                     ADD  $KQRVA    WUSCVA           Usr Prod Type P
     C                     ADD  $KQRVA    WUSBVA           Usr Prod Type D
     C                     ADD  $KQVVA    WUSDVA           Usr Prod Type P
     C                     ADD  $KQXVA    WUSFVA           Usr Prod Type P
     C                     ADD  $KQ1VA    WUSGVA           Usr Prod Type Y
     C                     ADD  $KQ4VA    WUSIVA           Usr Prod Type Y
      * Change Prd Type Sum/array - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWUR1VA    WL0035           Usr Prod Type C
     C                     Z-ADDWUR2VA    WL0036           Usr Prod Type P
     C                     Z-ADDWUR4VA    WL0037           Usr Prod Type P
     C                     Z-ADDWUR5VA    WL0038           Usr Prod Type P
     C                     Z-ADDWUR7VA    WL0039           Usr Prod Type Y
     C                     Z-ADDWUR8VA    WL0040           Usr Prod Type Y
     C                     Z-ADDWUSAVA    WL0041           Usr Prod Type C
     C                     Z-ADDWUSCVA    WL0042           Usr Prod Type P
     C                     Z-ADDWUSDVA    WL0043           Usr Prod Type P
     C                     Z-ADDWUSFVA    WL0044           Usr Prod Type P
     C                     Z-ADDWUSGVA    WL0045           Usr Prod Type Y
     C                     Z-ADDWUSIVA    WL0046           Usr Prod Type Y
     C                     Z-ADD$KRGNB    WL0047           USR Prod Struct
     C                     EXSR SLCHRC
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD$KQQVA    WUR1VA           Usr Prod Type C
     C                     Z-ADD$KQSVA    WUR2VA           Usr Prod Type P
     C                     Z-ADD$KQSVA    WUR3VA           Usr Prod Type D
     C                     Z-ADD$KQWVA    WUR4VA           Usr Prod Type P
     C                     Z-ADD$KQYVA    WUR5VA           Usr Prod Type P
     C                     Z-ADD$KQ2VA    WUR7VA           Usr Prod Type Y
     C                     Z-ADD$KQ3VA    WUR8VA           Usr Prod Type Y
     C                     Z-ADD$KQPVA    WUSAVA           Usr Prod Type C
     C                     Z-ADD$KQRVA    WUSCVA           Usr Prod Type P
     C                     Z-ADD$KQRVA    WUSBVA           Usr Prod Type D
     C                     Z-ADD$KQVVA    WUSDVA           Usr Prod Type P
     C                     Z-ADD$KQXVA    WUSFVA           Usr Prod Type P
     C                     Z-ADD$KQ1VA    WUSGVA           Usr Prod Type Y
     C                     Z-ADD$KQ4VA    WUSIVA           Usr Prod Type Y
      * Create Prd Typ Sum/Array - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWUR1VA    WL0048           Usr Prod Type C
     C                     Z-ADDWUR2VA    WL0049           Usr Prod Type P
     C                     Z-ADDWUR4VA    WL0050           Usr Prod Type P
     C                     Z-ADDWUR5VA    WL0051           Usr Prod Type P
     C                     Z-ADDWUR7VA    WL0052           Usr Prod Type Y
     C                     Z-ADDWUR8VA    WL0053           Usr Prod Type Y
     C                     Z-ADDWUSAVA    WL0054           Usr Prod Type C
     C                     Z-ADDWUSCVA    WL0055           Usr Prod Type P
     C                     Z-ADDWUSDVA    WL0056           Usr Prod Type P
     C                     Z-ADDWUSFVA    WL0057           Usr Prod Type P
     C                     Z-ADDWUSGVA    WL0058           Usr Prod Type Y
     C                     Z-ADDWUSIVA    WL0059           Usr Prod Type Y
     C                     Z-ADD$KRGNB    WL0060           USR Prod Struct
     C                     EXSR SMCRRC
     C                     END                             *FI
     C                     END                             *FI
      * Calculate Differences             (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
     C           $KQPVA    SUB  $KQRVA    $KQ8VA           Vol 5 Cur Diff
     C           $KQQVA    SUB  $KQSVA    $KQ7VA           Vol 5 Cur Diff
     C           $KQVVA    SUB  $KQXVA    $KQ9VA           Vol 5 PTD Diff
     C           $KQWVA    SUB  $KQYVA    $KRAVA           Vol 5 PTD Diff
     C           $KQ1VA    SUB  $KQ4VA    $KRBVA           Vol 5 YTD Diff
     C           $KQ2VA    SUB  $KQ3VA    $KRCVA           Vol 5 YTD Diff
     C                     END                             *FI
      * Accumulate totals                 (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
     C                     ADD  $KQPVA    $LQPVA           Vol 5 Cur #
     C                     ADD  $KQQVA    $LQQVA           Vol 5 Cur $
     C                     ADD  $KQRVA    $LQRVA           Vol 5 Prior #
     C                     ADD  $KQSVA    $LQSVA           Vol 5 Prior $
     C                     ADD  $KQVVA    $LQVVA           Vol 5 PTD Cur #
     C                     ADD  $KQWVA    $LQWVA           Vol 5 PTD Cur $
     C                     ADD  $KQXVA    $LQXVA           Vol 5 PTD Prior
     C                     ADD  $KQYVA    $LQYVA           Vol 5 PTD Prior
     C                     ADD  $KQ1VA    $LQ1VA           Vol 5 YTD Cur #
     C                     ADD  $KQ2VA    $LQ2VA           Vol 5 YTD Cur $
     C                     ADD  $KQ4VA    $LQ4VA           Vol 5 YTD Prior
     C                     ADD  $KQ3VA    $LQ3VA           Vol 5 YTD Prior
     C                     ADD  $KQ8VA    $LQ8VA           Vol 5 Cur Diff
     C                     ADD  $KQ7VA    $LQ7VA           Vol 5 Cur Diff
     C                     ADD  $KQ9VA    $LQ9VA           Vol 5 PTD Diff
     C                     ADD  $KRAVA    $LRAVA           Vol 5 PTD Diff
     C                     ADD  $KRBVA    $LRBVA           Vol 5 YTD Diff
     C                     ADD  $KRCVA    $LRCVA           Vol 5 YTD Diff
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$KKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Sales Route Code format
      * Do not print if Summary Only
      * CASE: PAR.USR Check Y/N Status is yes
     C           P4JDST    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
      * Calculate Differences             (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
     C           $LQPVA    SUB  $LQRVA    $LQ8VA           Vol 5 Cur Diff
     C           $LQQVA    SUB  $LQSVA    $LQ7VA           Vol 5 Cur Diff
     C           $LQVVA    SUB  $LQXVA    $LQ9VA           Vol 5 PTD Diff
     C           $LQWVA    SUB  $LQYVA    $LRAVA           Vol 5 PTD Diff
     C           $LQ1VA    SUB  $LQ4VA    $LRBVA           Vol 5 YTD Diff
     C           $LQ2VA    SUB  $LQ3VA    $LRCVA           Vol 5 YTD Diff
     C                     END                             *FI
      * Accumulate totals                 (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
     C                     ADD  $LQPVA    $MQPVA           Vol 5 Cur #
     C                     ADD  $LQQVA    $MQQVA           Vol 5 Cur $
     C                     ADD  $LQRVA    $MQRVA           Vol 5 Prior #
     C                     ADD  $LQSVA    $MQSVA           Vol 5 Prior $
     C                     ADD  $LQVVA    $MQVVA           Vol 5 PTD Cur #
     C                     ADD  $LQWVA    $MQWVA           Vol 5 PTD Cur $
     C                     ADD  $LQXVA    $MQXVA           Vol 5 PTD Prior
     C                     ADD  $LQYVA    $MQYVA           Vol 5 PTD Prior
     C                     ADD  $LQ1VA    $MQ1VA           Vol 5 YTD Cur #
     C                     ADD  $LQ2VA    $MQ2VA           Vol 5 YTD Cur $
     C                     ADD  $LQ4VA    $MQ4VA           Vol 5 YTD Prior
     C                     ADD  $LQ3VA    $MQ3VA           Vol 5 YTD Prior
     C                     ADD  $LQ8VA    $MQ8VA           Vol 5 Cur Diff
     C                     ADD  $LQ7VA    $MQ7VA           Vol 5 Cur Diff
     C                     ADD  $LQ9VA    $MQ9VA           Vol 5 PTD Diff
     C                     ADD  $LRAVA    $MRAVA           Vol 5 PTD Diff
     C                     ADD  $LRBVA    $MRBVA           Vol 5 YTD Diff
     C                     ADD  $LRCVA    $MRCVA           Vol 5 YTD Diff
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$LKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Manager Level Code format
      * Do not print if Summary Only
      * CASE: PAR.USR Check Y/N Status is yes
     C           P4JDST    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
      * Calculate Differences             (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
     C           $MQPVA    SUB  $MQRVA    $MQ8VA           Vol 5 Cur Diff
     C           $MQQVA    SUB  $MQSVA    $MQ7VA           Vol 5 Cur Diff
     C           $MQVVA    SUB  $MQXVA    $MQ9VA           Vol 5 PTD Diff
     C           $MQWVA    SUB  $MQYVA    $MRAVA           Vol 5 PTD Diff
     C           $MQ1VA    SUB  $MQ4VA    $MRBVA           Vol 5 YTD Diff
     C           $MQ2VA    SUB  $MQ3VA    $MRCVA           Vol 5 YTD Diff
     C                     END                             *FI
      * Accumulate totals                 (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
     C                     ADD  $MQPVA    $NQPVA           Vol 5 Cur #
     C                     ADD  $MQQVA    $NQQVA           Vol 5 Cur $
     C                     ADD  $MQRVA    $NQRVA           Vol 5 Prior #
     C                     ADD  $MQSVA    $NQSVA           Vol 5 Prior $
     C                     ADD  $MQVVA    $NQVVA           Vol 5 PTD Cur #
     C                     ADD  $MQWVA    $NQWVA           Vol 5 PTD Cur $
     C                     ADD  $MQXVA    $NQXVA           Vol 5 PTD Prior
     C                     ADD  $MQYVA    $NQYVA           Vol 5 PTD Prior
     C                     ADD  $MQ1VA    $NQ1VA           Vol 5 YTD Cur #
     C                     ADD  $MQ2VA    $NQ2VA           Vol 5 YTD Cur $
     C                     ADD  $MQ4VA    $NQ4VA           Vol 5 YTD Prior
     C                     ADD  $MQ3VA    $NQ3VA           Vol 5 YTD Prior
     C                     ADD  $MQ8VA    $NQ8VA           Vol 5 Cur Diff
     C                     ADD  $MQ7VA    $NQ7VA           Vol 5 Cur Diff
     C                     ADD  $MQ9VA    $NQ9VA           Vol 5 PTD Diff
     C                     ADD  $MRAVA    $NRAVA           Vol 5 PTD Diff
     C                     ADD  $MRBVA    $NRBVA           Vol 5 YTD Diff
     C                     ADD  $MRCVA    $NRCVA           Vol 5 YTD Diff
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$MKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of VP Level Code format
      * Do not print if Summary Only
      * CASE: PAR.USR Check Y/N Status is yes
     C           P4JDST    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
      * Calculate Differences             (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
     C           $NQPVA    SUB  $NQRVA    $NQ8VA           Vol 5 Cur Diff
     C           $NQQVA    SUB  $NQSVA    $NQ7VA           Vol 5 Cur Diff
     C           $NQVVA    SUB  $NQXVA    $NQ9VA           Vol 5 PTD Diff
     C           $NQWVA    SUB  $NQYVA    $NRAVA           Vol 5 PTD Diff
     C           $NQ1VA    SUB  $NQ4VA    $NRBVA           Vol 5 YTD Diff
     C           $NQ2VA    SUB  $NQ3VA    $NRCVA           Vol 5 YTD Diff
     C                     END                             *FI
      * Accumulate totals                 (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
     C                     ADD  $NQPVA    $OQPVA           Vol 5 Cur #
     C                     ADD  $NQQVA    $OQQVA           Vol 5 Cur $
     C                     ADD  $NQRVA    $OQRVA           Vol 5 Prior #
     C                     ADD  $NQSVA    $OQSVA           Vol 5 Prior $
     C                     ADD  $NQVVA    $OQVVA           Vol 5 PTD Cur #
     C                     ADD  $NQWVA    $OQWVA           Vol 5 PTD Cur $
     C                     ADD  $NQXVA    $OQXVA           Vol 5 PTD Prior
     C                     ADD  $NQYVA    $OQYVA           Vol 5 PTD Prior
     C                     ADD  $NQ1VA    $OQ1VA           Vol 5 YTD Cur #
     C                     ADD  $NQ2VA    $OQ2VA           Vol 5 YTD Cur $
     C                     ADD  $NQ4VA    $OQ4VA           Vol 5 YTD Prior
     C                     ADD  $NQ3VA    $OQ3VA           Vol 5 YTD Prior
     C                     ADD  $NQ8VA    $OQ8VA           Vol 5 Cur Diff
     C                     ADD  $NQ7VA    $OQ7VA           Vol 5 Cur Diff
     C                     ADD  $NQ9VA    $OQ9VA           Vol 5 PTD Diff
     C                     ADD  $NRAVA    $ORAVA           Vol 5 PTD Diff
     C                     ADD  $NRBVA    $ORBVA           Vol 5 YTD Diff
     C                     ADD  $NRCVA    $ORCVA           Vol 5 YTD Diff
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$NKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of final totals format
      * Calculate Differences             (case is to enable grouping)
      * CASE: WRK.USR Status (Y/N) EQ WRK.USR Status (Y/N)
     C           WUE6ST    IFEQ WUE6ST                     *IF
     C           $OQPVA    SUB  $OQRVA    $OQ8VA           Vol 5 Cur Diff
     C           $OQQVA    SUB  $OQSVA    $OQ7VA           Vol 5 Cur Diff
     C           $OQVVA    SUB  $OQXVA    $OQ9VA           Vol 5 PTD Diff
     C           $OQWVA    SUB  $OQYVA    $ORAVA           Vol 5 PTD Diff
     C           $OQ1VA    SUB  $OQ4VA    $ORBVA           Vol 5 YTD Diff
     C           $OQ2VA    SUB  $OQ3VA    $ORCVA           Vol 5 YTD Diff
     C                     END                             *FI
     C                     Z-ADDP1AIC3    $OAIC3           Company Number
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $OAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$OAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VOAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VOAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$OFINTTL
     C                     END
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of PRT Sls/Cmp w/Sum/bySlsPF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of PRT Sls/Cmp w/Sum/bySlsPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
     C                     Z-ADDP3FPER    $BZZNB           USR From Period
     C                     Z-ADDP3E5NB    $BZ1NB           Usr From Period
     C                     Z-ADDP3ACCT    $BZ8NB           USR To Period
     C                     Z-ADDP3PDWK    $BZ9NB           USR To Period W
     C                     Z-ADDP2BDDT    $BBDDT           USR From Date
     C                     Z-ADDP2FDDT    $BFDDT           USR To Date
     C                     Z-ADDP1AIC3    $BAIC3           Company Number
      * RTV Company Name - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BAIC3    WL0009           Company Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    $BADTX    P      Name
     C                     MOVELP1Q4CD    $BQ4CD           VP Level Code
      * RTV VP Level Descript  RT - PD VP Level  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$BQ4CD    WL0011    P      VP Level Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0012    $BMJNA    P      VP Level Descri
     C                     MOVELP1BFCD    $BBFCD           Manager Level C
      * RTV Manager Descript   RT - Manager Level  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$BBFCD    WL0013    P      Manager Level C
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0014    $BAUNA    P      Description
     C                     MOVELP1R5CD    $BR5CD           Original Salesp
      * RTV Salesperson Name   RT - Salesperson  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$BR5CD    WL0015    P      Salesperson Cod
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0015    $BR5CD    P      Salesperson Cod
     C                     MOVELWL0016    $BALTX    P      Salesperson Nam
     C                     Z-ADDP1RGNB    $BRGNB           Item Structure
      * Rtv Type Description   RT - OM Item Structure Type  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BRGNB    WL0017           Item Structure
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0018    $BDCTX    P      Item Structure
     C                     Z-ADDP1RHNB    $BRHNB           Item Structure
      * Rtv Group Description  RT - OM Item Structure Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BRHNB    WL0019           Item Structure
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    WURGNB           Item Structure
     C                     MOVELWL0021    $BDDTX    P      Item Structure
     C                     MOVELP5OBST    $BOBST           Billing Activit
      * 1PG.USR Desc. 10 = Condition name of 1PG.Billing Activity Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1167313   Y2LSNO  70       List number
     C                     PARM $BOBST    W0INVL 25        Billing Activit
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BNCNA    PARM           W0CNNM 25        USR Desc. 10
      *
      * Summary Only flag
     C                     MOVELP4JDST    $BJDST           USR Check Y/N S
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert USR From Date to display format
      * Convert date
     C           1000000   ADD  $BBDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBBDDT
      * Convert USR To Date to display format
      * Convert date
     C           1000000   ADD  $BFDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBFDDT
     C                     MOVEL'0'       *IN79
     C           WUGGST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$B1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of PRT Sls/Cmp w/Sum/bySlsPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Accounting Company Number format
      * RTV Company Name - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0009           Company Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    $CADTX    P      Name
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP00
     C                     END                             FI
      * Print VP Level Code of PRT Sls/Cmp w/Sum/bySlsPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of VP Level Code format
      * Do not print if Summary Only
      * CASE: PAR.USR Check Y/N Status is yes
     C           P4JDST    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV VP Level Descript  RT - PD VP Level  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$DQ4CD    WL0011    P      VP Level Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0012    $DMJNA    P      VP Level Descri
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Manager Level Code of PRT Sls/Cmp w/Sum/bySlsPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Manager Level Code format
      * Do not print if Summary Only
      * CASE: PAR.USR Check Y/N Status is yes
     C           P4JDST    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Manager Descript   RT - Manager Level  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$EBFCD    WL0013    P      Manager Level C
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0014    $EAUNA    P      Description
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$EKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Sales Route Code of PRT Sls/Cmp w/Sum/bySlsPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Sales Route Code format
      * Do not print if Summary Only
      * CASE: PAR.USR Check Y/N Status is yes
     C           P4JDST    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Salesperson Name   RT - Salesperson  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$FR5CD    WL0015    P      Salesperson Cod
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0015    $FR5CD    P      Salesperson Cod
     C                     MOVELWL0016    $FALTX    P      Salesperson Nam
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$FKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Item Structure Type Code of PRT Sls/Cmp w/Sum/bySlsPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Prod Structure Type Code format
      * Rtv Type Description   RT - OM Item Structure Type  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$GRGNB    WL0017           Item Structure
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0018    $GDCTX    P      Item Structure
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$GKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Item Structure Group Code of PRT Sls/Cmp w/Sum/bySlsPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP05    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP05    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$HKEYHDR
      * Reset format print flag
     C                     MOVE *BLANK    W0AP05
     C                     END                             FI
      * Print Detail Line of PRT Sls/Cmp w/Sum/bySlsPF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
      * USER: On print of detail format
      * FOB amount
      * CASE: DB1.Affect Sales Doll Status is Not Yes
     C           F4ANST    IFEQ *BLANK                     *IF
     C           F4ANST    OREQ 'N'
     C                     Z-ADD*ZERO     $IUSVA           FOB Gross Amoun
     C                     END                             *FI
      * Weight Billed
      * CASE: DB1.Affect Sales Pnds Status is Not Yes
     C           F4VAST    IFEQ *BLANK                     *IF
     C           F4VAST    OREQ 'N'
     C                     Z-ADD*ZERO     $IBYWG           Weight Billed
     C                     END                             *FI
      * Calculate Current Range Sales
      * CASE:
      *  - c1 AND c2
      *   |- c1    : WRK.USR DB Julian Period GE PAR.USR From Julian Peri
      *   |- c2    : WRK.USR DB Julian Period LE PAR.USR To Julian Period
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGATX    IFGE P2F6TX                     *IF
     C           WUGATX    IFLE P2F7TX                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  $IBYWG    $JQPVA           Vol 5 Cur #
     C                     ADD  $IUSVA    $JQQVA           Vol 5 Cur $
      * Add to Work amount to later check for zero, if Zero do not print
     C                     ADD  $IBYWG    WURJVA           USR Work Amount
     C                     ADD  $IUSVA    WURJVA           USR Work Amount
     C                     END                             *FI
      * Calculate Prior Range Sales
      * CASE:
      *  - c1 AND c2
      *   |- c1    : WRK.USR DB Julian Period GE PAR.USR Prior From Julia
      *   |- c2    : WRK.USR DB Julian Period LE PAR.USR Prior To Julian
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGATX    IFGE P2F8TX                     *IF
     C           WUGATX    IFLE P2F9TX                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  $IBYWG    $JQRVA           Vol 5 Prior #
     C                     ADD  $IUSVA    $JQSVA           Vol 5 Prior $
      * Add to Work amount to later check for zero, if Zero do not print
     C                     ADD  $IBYWG    WURJVA           USR Work Amount
     C                     ADD  $IUSVA    WURJVA           USR Work Amount
     C                     END                             *FI
      * Calculate PTD Cur Sales
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : DB1.Accounting Year Code EQ PAR.Prm To Period Year
      *   |- c2    : DB1.Accounting Period Code EQ PAR.Prm To Period
      *   |- c3    : DB1.OM Week LE PAR.Prm To Period Week
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           F4ESNB    IFEQ P3PDYR                     *IF
     C           F4ETNB    IFEQ P3ACCT                     *IF
     C           F4BZNB    IFLE P3PDWK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  $IBYWG    $JQVVA           Vol 5 PTD Cur #
     C                     ADD  $IUSVA    $JQWVA           Vol 5 PTD Cur $
      * Add to Work amount to later check for zero, if Zero do not print
     C                     ADD  $IBYWG    WURJVA           USR Work Amount
     C                     ADD  $IUSVA    WURJVA           USR Work Amount
     C                     END                             *FI
      * Calculate PTD Prior Sales
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : DB1.Accounting Year Code EQ PAR.Prior To Period Year
      *   |- c2    : DB1.Accounting Period Code EQ PAR.Prm To Period
      *   |- c3    : DB1.OM Week LE PAR.Prm To Period Week
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           F4ESNB    IFEQ P2PTPY                     *IF
     C           F4ETNB    IFEQ P3ACCT                     *IF
     C           F4BZNB    IFLE P3PDWK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  $IBYWG    $JQXVA           Vol 5 PTD Prior
     C                     ADD  $IUSVA    $JQYVA           Vol 5 PTD Prior
      * Add to Work amount to later check for zero, if Zero do not print
     C                     ADD  $IBYWG    WURJVA           USR Work Amount
     C                     ADD  $IUSVA    WURJVA           USR Work Amount
     C                     END                             *FI
      * Calculate YTD Cur Sales
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Accounting Year Code EQ PAR.Prm To Period Year
      *   |- c2    : WRK.USR DB Julian Period LE PAR.USR To Julian Period
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           F4ESNB    IFEQ P3PDYR                     *IF
     C           WUGATX    IFLE P2F7TX                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  $IBYWG    $JQ1VA           Vol 5 YTD Cur #
     C                     ADD  $IUSVA    $JQ2VA           Vol 5 YTD Cur $
      * Add to Work amount to later check for zero, if Zero do not print
     C                     ADD  $IBYWG    WURJVA           USR Work Amount
     C                     ADD  $IUSVA    WURJVA           USR Work Amount
     C                     END                             *FI
      * Calculate YTD Prior Sales
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Accounting Year Code EQ PAR.Prior To Period Year
      *   |- c2    : WRK.USR DB Julian Period LE PAR.USR Prior To Julian
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           F4ESNB    IFEQ P2PTPY                     *IF
     C           WUGATX    IFLE P2F9TX                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  $IBYWG    $JQ4VA           Vol 5 YTD Prior
     C                     ADD  $IUSVA    $JQ3VA           Vol 5 YTD Prior
      * Add to Work amount to later check for zero, if Zero do not print
     C                     ADD  $IBYWG    WURJVA           USR Work Amount
     C                     ADD  $IUSVA    WURJVA           USR Work Amount
     C                     END                             *FI
      * Mention hidden format
     C   99N99             WRITE$IDTLRCD
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of PRT Sls/Cmp w/Sum/bySlsPF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  13        W0FSUM
     C                     END                             FI
      *
      * * Company Number of PRT Sls/Cmp w/Sum/bySlsPF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  7         W0FSUM
     C                     END                             FI
      *
      * * VP Level Code of PRT Sls/Cmp w/Sum/bySlsPF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Manager Level Code of PRT Sls/Cmp w/Sum/bySlsPF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  1         W0FSUM
     C                     END                             FI
      *
      * * Sales Route Code of PRT Sls/Cmp w/Sum/bySlsPF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  1         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Type Code of PRT Sls/Cmp w/Sum/bySlsPF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  1         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Group Code of PRT Sls/Cmp w/Sum/bySlsPF
     C           W0AP05    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail Line of PRT Sls/Cmp w/Sum/bySlsPF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD0         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'OMS'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Day/Wk/Prd/Yr      RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           AFAIC3           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0001    AFAIC3           Company Number
     C                     Z-ADDWL0002    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSSC     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0003           Julian Date
     C                     Z-ADD*ZERO     WL0004           Accounting Year
     C                     Z-ADD*ZERO     WL0005           Accounting Peri
     C                     Z-ADD*ZERO     WL0006           OM Week
     C                     MOVEL*BLANK    WL0007           Day of Week
     C                     Z-ADD*ZERO     WL0008           Week Number
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDAFCQNB    WL0003           Julian Date
     C                     Z-ADDAFESNB    WL0004           Accounting Year
     C                     Z-ADDAFETNB    WL0005           Accounting Peri
     C                     Z-ADDAFBZNB    WL0006           OM Week
     C                     MOVELAFA9ST    WL0007           Day of Week
     C                     Z-ADDAFEINB    WL0008           Week Number
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Company Name - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADDWL0009    ABAIC3           Company Number
      * Establish starting position
     C           KRSSD     CHAIN@ABREAK              90    *
      * Data record not found
     C   90                MOVEL'USR0003' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    WL0010           Name
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV VP Level Descript  RT - PD VP Level  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           IFQ4CD           VP Level Code
      * Setup key
     C                     MOVELWL0011    IFQ4CD           VP Level Code
      * Establish starting position
     C           KRSSE     CHAIN@IFRERZ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1661' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0012           VP Level Descri
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELIFMJNA    WL0012           VP Level Descri
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Manager Descript   RT - Manager Level  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           ALBFCD           Manager Level C
      * Setup key
     C                     MOVELWL0013    ALBFCD           Manager Level C
      * Establish starting position
     C           KRSSF     CHAIN@ALREBO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0030' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0014           Description
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELALAUNA    WL0014           Description
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Salesperson Name   RT - Salesperson  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           APBCCD           Salesperson Cod
      * Setup key
     C                     MOVELWL0015    APBCCD           Salesperson Cod
      * Establish starting position
     C           KRSSG     CHAIN@APREBU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0039' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0015           Salesperson Cod
     C                     MOVEL*BLANK    WL0016           Salesperson Nam
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAPBCCD    WL0015           Salesperson Cod
     C                     MOVELAPALTX    WL0016           Salesperson Nam
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Type Description   RT - OM Item Structure Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           E8RGNB           Item Structure
      * Setup key
     C                     Z-ADDWL0017    E8RGNB           Item Structure
      * Establish starting position
     C           KRSSH     CHAIN@E8REBB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1166' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0018           Item Structure
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELE8DCTX    WL0018           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Group Description  RT - OM Item Structure Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           E9RHNB           Item Structure
      * Setup key
     C                     Z-ADDWL0019    E9RHNB           Item Structure
      * Establish starting position
     C           KRSSI     CHAIN@E9REA8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1168' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0020           Item Structure
     C                     MOVEL*BLANK    WL0021           Item Structure
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDE9RGNB    WL0020           Item Structure
     C                     MOVELE9DDTX    WL0021           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Bill Type, Event   RT - OP Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDF4AIC3    BEAIC3           Company Number
     C                     Z-ADDF4C4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSSJ     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEJPCD    WUJPCD           Event Code
     C                     MOVELBEOBST    WUOBST           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv. Prd Typ Sum/Array - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*LOVAL    YD01
      * Move key fields to Product Type Summary
     C                     Z-ADDWL0034    YI0101           USR Prod Struct
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFGT YD01
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0034
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWAR1VA    WL0022           Usr Prod Type C
     C                     Z-ADDWAR2VA    WL0023           Usr Prod Type P
     C                     Z-ADDWAR4VA    WL0024           Usr Prod Type P
     C                     Z-ADDWAR5VA    WL0025           Usr Prod Type P
     C                     Z-ADDWAR7VA    WL0026           Usr Prod Type Y
     C                     Z-ADDWAR8VA    WL0027           Usr Prod Type Y
     C                     Z-ADDWASAVA    WL0028           Usr Prod Type C
     C                     Z-ADDWASCVA    WL0029           Usr Prod Type P
     C                     Z-ADDWASDVA    WL0030           Usr Prod Type P
     C                     Z-ADDWASFVA    WL0031           Usr Prod Type P
     C                     Z-ADDWASGVA    WL0032           Usr Prod Type Y
     C                     Z-ADDWASIVA    WL0033           Usr Prod Type Y
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLCHRC    BEGSR
      *================================================================
      * Change Prd Type Sum/array - *Arrays  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to Product Type Summary
     C                     Z-ADDWL0047    YI0101           USR Prod Struct
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0047
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to Product Type Summary
     C                     Z-ADDWL0035    WAR1VA           Usr Prod Type C
     C                     Z-ADDWL0036    WAR2VA           Usr Prod Type P
     C                     Z-ADDWL0037    WAR4VA           Usr Prod Type P
     C                     Z-ADDWL0038    WAR5VA           Usr Prod Type P
     C                     Z-ADDWL0039    WAR7VA           Usr Prod Type Y
     C                     Z-ADDWL0040    WAR8VA           Usr Prod Type Y
     C                     Z-ADDWL0041    WASAVA           Usr Prod Type C
     C                     Z-ADDWL0042    WASCVA           Usr Prod Type P
     C                     Z-ADDWL0043    WASDVA           Usr Prod Type P
     C                     Z-ADDWL0044    WASFVA           Usr Prod Type P
     C                     Z-ADDWL0045    WASGVA           Usr Prod Type Y
     C                     Z-ADDWL0046    WASIVA           Usr Prod Type Y
     C                     Z-ADDWL0047    WAA5C3           USR Prod Struct
      *
      *
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMCRRC    BEGSR
      *================================================================
      * Create Prd Typ Sum/Array - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL01      IFEQ 200
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C                     Z-ADD*ZERO     XAR1VA           Usr Prod Type C
     C                     Z-ADD*ZERO     XAR2VA           Usr Prod Type P
     C                     Z-ADD*ZERO     XAR4VA           Usr Prod Type P
     C                     Z-ADD*ZERO     XAR5VA           Usr Prod Type P
     C                     Z-ADD*ZERO     XAR7VA           Usr Prod Type Y
     C                     Z-ADD*ZERO     XAR8VA           Usr Prod Type Y
     C                     Z-ADD*ZERO     XASAVA           Usr Prod Type C
     C                     Z-ADD*ZERO     XASCVA           Usr Prod Type P
     C                     Z-ADD*ZERO     XASDVA           Usr Prod Type P
     C                     Z-ADD*ZERO     XASFVA           Usr Prod Type P
     C                     Z-ADD*ZERO     XASGVA           Usr Prod Type Y
     C                     Z-ADD*ZERO     XASIVA           Usr Prod Type Y
     C                     Z-ADD*ZERO     XAA5C3           USR Prod Struct
      * Move all fields to Product Type Summary
     C                     Z-ADDWL0048    XAR1VA           Usr Prod Type C
     C                     Z-ADDWL0049    XAR2VA           Usr Prod Type P
     C                     Z-ADDWL0050    XAR4VA           Usr Prod Type P
     C                     Z-ADDWL0051    XAR5VA           Usr Prod Type P
     C                     Z-ADDWL0052    XAR7VA           Usr Prod Type Y
     C                     Z-ADDWL0053    XAR8VA           Usr Prod Type Y
     C                     Z-ADDWL0054    XASAVA           Usr Prod Type C
     C                     Z-ADDWL0055    XASCVA           Usr Prod Type P
     C                     Z-ADDWL0056    XASDVA           Usr Prod Type P
     C                     Z-ADDWL0057    XASFVA           Usr Prod Type P
     C                     Z-ADDWL0058    XASGVA           Usr Prod Type Y
     C                     Z-ADDWL0059    XASIVA           Usr Prod Type Y
     C                     Z-ADDWL0060    XAA5C3           USR Prod Struct
      *
      * Move key fields to Product Type Summary
     C                     Z-ADDXAA5C3    YI0101           USR Prod Struct
      *
      * Check for duplicate primary key
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFEQ XAA5C3
      * Array element already exists
     C                     MOVEL'Y2U0003' W0RTN   7
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Insert after last used element
     C           YL01      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK01,Y    IFNE *HIVAL
      * If so, reuse MODS index
     C                     MOVELYK01,Y    YD01
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI01
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to Product Type Summary
     C                     Z-ADDXAA5C3    YI0101           USR Prod Struct
      *
     C                     MOVELYD01      YK01,Y
     C           YI01      OCUR YM01
      * Update MODS fields
     C                     Z-ADDXAR1VA    WAR1VA           Usr Prod Type C
     C                     Z-ADDXAR2VA    WAR2VA           Usr Prod Type P
     C                     Z-ADDXAR4VA    WAR4VA           Usr Prod Type P
     C                     Z-ADDXAR5VA    WAR5VA           Usr Prod Type P
     C                     Z-ADDXAR7VA    WAR7VA           Usr Prod Type Y
     C                     Z-ADDXAR8VA    WAR8VA           Usr Prod Type Y
     C                     Z-ADDXASAVA    WASAVA           Usr Prod Type C
     C                     Z-ADDXASCVA    WASCVA           Usr Prod Type P
     C                     Z-ADDXASDVA    WASDVA           Usr Prod Type P
     C                     Z-ADDXASFVA    WASFVA           Usr Prod Type P
     C                     Z-ADDXASGVA    WASGVA           Usr Prod Type Y
     C                     Z-ADDXASIVA    WASIVA           Usr Prod Type Y
     C                     Z-ADDXAA5C3    WAA5C3           USR Prod Struct
      * Only sort if element is out of position
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE200
     C           YK01,YR01 ANDGTYD01
     C                     ADD  1         YR01    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK01
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL01
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P1BYWG           Weight Billed
     C                     Z-ADD*ZERO     P1USVA           FOB Gross Amoun
     C                     Z-ADD*ZERO     P2PFPY           Prior From Peri
     C                     Z-ADD*ZERO     P2PTPY           Prior To Period
     C                     MOVEL*BLANK    P2F8TX           USR Prior From
     C                     MOVEL*BLANK    P2F9TX           USR Prior To Ju
     C                     MOVEL*BLANK    P2F6TX           USR From Julian
     C                     MOVEL*BLANK    P2F7TX           USR To Julian P
     C                     Z-ADD*ZERO     P3PPER           Prm From Period
     C                     Z-ADD*ZERO     P3FPER           Prm From Period
     C                     Z-ADD*ZERO     P3E5NB           Prm From Period
     C                     Z-ADD*ZERO     P3PDYR           Prm To Period Y
     C                     Z-ADD*ZERO     P3ACCT           Prm To Period
     C                     Z-ADD*ZERO     P3PDWK           Prm To Period W
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field USR Display field
     C                     MOVEL*BLANK    WUGGST  1
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field Julian Date
     C                     Z-ADD*ZERO     WUCQNB  50
      * Define work field Day of Week
     C                     MOVEL*BLANK    WUA9ST  1
      * Define work field Week Number
     C                     Z-ADD*ZERO     WUEINB  20
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    F4AIC3           Company Number
     C                     MOVEL*LOVAL    F4Q4CD           VP Level Code
     C                     MOVEL*LOVAL    F4BFCD           Manager Level C
     C                     MOVEL*LOVAL    F4R4CD           Sales Route Cod
     C                     MOVEL*LOVAL    F4RGNB           Item Structure
     C                     MOVEL*LOVAL    F4RHNB           Item Structure
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field USR DB Julian Period
     C                     MOVEL*BLANK    WUGATX  8
      * Define work field USR Work Amount 1
     C                     Z-ADD*ZERO     WURJVA 112
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      * Define work field Event Code
     C                     MOVEL*BLANK    WUJPCD  2
      * Define work field Billing Activity Type
     C                     MOVEL*BLANK    WUOBST  1
      * Define work field USR Status (Y/N)
     C                     MOVEL*BLANK    WUE6ST  1
      * Define work field Usr Prod Type Cur $
     C                     Z-ADD*ZERO     WUR1VA 112
      * Define work field Usr Prod Type Prior $
     C                     Z-ADD*ZERO     WUR2VA 112
      * Define work field Usr Prod Type PTD Cur $
     C                     Z-ADD*ZERO     WUR4VA 112
      * Define work field Usr Prod Type PTD Prior $
     C                     Z-ADD*ZERO     WUR5VA 112
      * Define work field Usr Prod Type YTD Cur $
     C                     Z-ADD*ZERO     WUR7VA 112
      * Define work field Usr Prod Type YTD Prior $
     C                     Z-ADD*ZERO     WUR8VA 112
      * Define work field Usr Prod Type Cur #
     C                     Z-ADD*ZERO     WUSAVA 112
      * Define work field Usr Prod Type Prior #
     C                     Z-ADD*ZERO     WUSCVA 112
      * Define work field Usr Prod Type PTD Cur #
     C                     Z-ADD*ZERO     WUSDVA 112
      * Define work field Usr Prod Type PTD Prior #
     C                     Z-ADD*ZERO     WUSFVA 112
      * Define work field Usr Prod Type YTD Cur #
     C                     Z-ADD*ZERO     WUSGVA 112
      * Define work field Usr Prod Type YTD Prior #
     C                     Z-ADD*ZERO     WUSIVA 112
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01    50
     C                     Z-ADD1         Y       50
     C                     ENDIF
      *
      * Define work field Usr Prod Type Diff $
     C                     Z-ADD*ZERO     WUR3VA 112
      * Define work field Usr Prod Type Diff #
     C                     Z-ADD*ZERO     WUSBVA 112
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SCRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     Z-ADD*ZERO     WL0003  50
     C                     Z-ADD*ZERO     WL0004  40
     C                     Z-ADD*ZERO     WL0005  20
     C                     Z-ADD*ZERO     WL0006  30
     C                     MOVEL*BLANK    WL0007  1
     C                     Z-ADD*ZERO     WL0008  20
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0009  30
     C                     MOVEL*BLANK    WL0010 30
      * Define local variables for subroutine SERVGN.
     C                     MOVEL*BLANK    WL0011  3
     C                     MOVEL*BLANK    WL0012 30
      * Define local variables for subroutine SFRVGN.
     C                     MOVEL*BLANK    WL0013  2
     C                     MOVEL*BLANK    WL0014 30
      * Define local variables for subroutine SGRVGN.
     C                     MOVEL*BLANK    WL0015  3
     C                     MOVEL*BLANK    WL0016 30
      * Define local variables for subroutine SHRVGN.
     C                     Z-ADD*ZERO     WL0017  30
     C                     MOVEL*BLANK    WL0018 30
      * Define local variables for subroutine SIRVGN.
     C                     Z-ADD*ZERO     WL0019  30
     C                     Z-ADD*ZERO     WL0020  30
     C                     MOVEL*BLANK    WL0021 30
      * Define local variables for subroutine SKRVGN.
     C                     Z-ADD*ZERO     WL0022 112
     C                     Z-ADD*ZERO     WL0023 112
     C                     Z-ADD*ZERO     WL0024 112
     C                     Z-ADD*ZERO     WL0025 112
     C                     Z-ADD*ZERO     WL0026 112
     C                     Z-ADD*ZERO     WL0027 112
     C                     Z-ADD*ZERO     WL0028 112
     C                     Z-ADD*ZERO     WL0029 112
     C                     Z-ADD*ZERO     WL0030 112
     C                     Z-ADD*ZERO     WL0031 112
     C                     Z-ADD*ZERO     WL0032 112
     C                     Z-ADD*ZERO     WL0033 112
     C                     Z-ADD*ZERO     WL0034  30
      * Define local variables for subroutine SLCHRC.
     C                     Z-ADD*ZERO     WL0035 112
     C                     Z-ADD*ZERO     WL0036 112
     C                     Z-ADD*ZERO     WL0037 112
     C                     Z-ADD*ZERO     WL0038 112
     C                     Z-ADD*ZERO     WL0039 112
     C                     Z-ADD*ZERO     WL0040 112
     C                     Z-ADD*ZERO     WL0041 112
     C                     Z-ADD*ZERO     WL0042 112
     C                     Z-ADD*ZERO     WL0043 112
     C                     Z-ADD*ZERO     WL0044 112
     C                     Z-ADD*ZERO     WL0045 112
     C                     Z-ADD*ZERO     WL0046 112
     C                     Z-ADD*ZERO     WL0047  30
      * Define local variables for subroutine SMCRRC.
     C                     Z-ADD*ZERO     WL0048 112
     C                     Z-ADD*ZERO     WL0049 112
     C                     Z-ADD*ZERO     WL0050 112
     C                     Z-ADD*ZERO     WL0051 112
     C                     Z-ADD*ZERO     WL0052 112
     C                     Z-ADD*ZERO     WL0053 112
     C                     Z-ADD*ZERO     WL0054 112
     C                     Z-ADD*ZERO     WL0055 112
     C                     Z-ADD*ZERO     WL0056 112
     C                     Z-ADD*ZERO     WL0057 112
     C                     Z-ADD*ZERO     WL0058 112
     C                     Z-ADD*ZERO     WL0059 112
     C                     Z-ADD*ZERO     WL0060  30
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
     C                     MOVEL'N'       WUGGST           USR Display fie
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
      * Retrieve Year/Period/Week for From Date from Calendar file
      * RTV Day/Wk/Prd/Yr      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0001           Company Number
     C                     Z-ADDP2BDDT    WL0002           Post to G/L Dat
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    WUCQNB           Julian Date
     C                     Z-ADDWL0004    P3PPER           Accounting Year
     C                     Z-ADDWL0005    P3FPER           Accounting Peri
     C                     Z-ADDWL0006    P3E5NB           OM Week
     C                     MOVELWL0007    WUA9ST    P      Day of Week
     C                     Z-ADDWL0008    WUEINB           Week Number
      * Retrieve Year/Period/Week for To Date from Calendar file
      * RTV Day/Wk/Prd/Yr      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0001           Company Number
     C                     Z-ADDP2FDDT    WL0002           Post to G/L Dat
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    WUCQNB           Julian Date
     C                     Z-ADDWL0004    P3PDYR           Accounting Year
     C                     Z-ADDWL0005    P3ACCT           Accounting Peri
     C                     Z-ADDWL0006    P3PDWK           OM Week
     C                     MOVELWL0007    WUA9ST    P      Day of Week
     C                     Z-ADDWL0008    WUEINB           Week Number
      * Create Prior From Period Year
     C           P3PPER    SUB  1         P2PFPY           Prior From Peri
      * Create Prior To Period Year
     C           P3PDYR    SUB  1         P2PTPY           Prior To Period
      * From Julian Period - "USR From Julian Period"
      * Concat YEAR/PER/Week to 8 - /UT User Source  * 
     C                     CALL 'OMSJUPR'              90  CLC Concat Yr/P
     C                     PARM P3PPER    WQ0001  40       Prm From Period
     C                     PARM P3FPER    WQ0002  20       Prm From Period
     C                     PARM P3E5NB    WQ0003  20       Prm From Period
     C           P2F6TX    PARM *BLANK    WQ0004  8        USR Julian Year
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'OMSJUPR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * To Julian Period - "USR To Julian Period"
      * Concat YEAR/PER/Week to 8 - /UT User Source  * 
     C                     CALL 'OMSJUPR'              90  CLC Concat Yr/P
     C                     PARM P3PDYR    WQ0005  40       Prm From Period
     C                     PARM P3ACCT    WQ0006  20       Prm From Period
     C                     PARM P3PDWK    WQ0007  20       Prm From Period
     C           P2F7TX    PARM *BLANK    WQ0008  8        USR Julian Year
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'OMSJUPR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * From PRIOR Julian Period - "USR Prior From Julian Per"
      * Concat YEAR/PER/Week to 8 - /UT User Source  * 
     C                     CALL 'OMSJUPR'              90  CLC Concat Yr/P
     C                     PARM P2PFPY    WQ0009  40       Prm From Period
     C                     PARM P3FPER    WQ0010  20       Prm From Period
     C                     PARM P3E5NB    WQ0011  20       Prm From Period
     C           P2F8TX    PARM *BLANK    WQ0012  8        USR Julian Year
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'OMSJUPR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * From PRIOR Julian Period - "USR Prior To Julian Per"
      * Concat YEAR/PER/Week to 8 - /UT User Source  * 
     C                     CALL 'OMSJUPR'              90  CLC Concat Yr/P
     C                     PARM P2PTPY    WQ0013  40       Prm From Period
     C                     PARM P3ACCT    WQ0014  20       Prm From Period
     C                     PARM P3PDWK    WQ0015  20       Prm From Period
     C           P2F9TX    PARM *BLANK    WQ0016  8        USR Julian Year
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'OMSJUPR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
