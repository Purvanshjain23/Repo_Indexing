      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP1016
      * TITLE:       Revise Group Overrides
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     08/30/04
      *
      *
      * FUNCTION: Uses an edit record format to add/change/delete group override records.
      *
      *           This program is called from HP4016 - Work with Group Overrides.
      *
      *           The field 'mode' contains the value passed into
      *           this program from the calling program.  The field
      *           'd1mode' is the screen field that displays the
      *           value of 'mode'.  Mode will be CREATE, REVISE or
      *           DELETE.           Once in the program, mode and
      *           d1mode will never change.  However, the action
      *           being performed can change depending on the function
      *           keys the user takes.
      *
      *           The user may delete an existing record by taking
      *           F11=DELETE from this program or option 4=DELETE
      *           from the WORK WITH. If the user is deleting with
      *           4=DELETE, no panel will be displayed from this program
      *           unless there is an error on the attempted deletion.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 01/27/05  LeAnne Fedor
      *           Recompile only. Two new fields (sire line company, prime line)
      *           added to Sire Line Master file and Datamart files.
      *
      * 08/02/06  LeAnne Fedor
      *           Recompile only. Two new fields (ration 8 feed pounds, ration paylean flag)
      *           added to Datamart Group Header file.
      *
      * 08/10/07  LeAnne Ramsey
      *           Recompile only. New "target" fields renamed in the Datamart Group
      *           Header file.
      *
      * 09/21/07  LeAnne Ramsey
      *           Recompile only. New "target" fields added/removed in the Datamart Group
      *           Header file.
      *
      * 07/02/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/14/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one in file HSP098-Sire Lines.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 10/14/16  Barb Gutierrez
      *           Recompile only. Added fields Sold days in phase, Avg Sold days in phase,
      *           Wgt open date, and company number to HPFF034.         E6136
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd1016   cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhppf034   if   e           k disk    rename(hgrec:hgrecdm) prefix(p1)
      *    Datamart FIN: Group header
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp034    if   e           k disk
      *    Hog group
      *
      *
     Fhsp098    if   e           k disk
      *    Sire lines
      *
      *
     Fhsp130    uf a e           k disk
      *    Group overrides
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D view            c                   'VIEW  '
     D select          c                   'SELECT'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D action          s                   like(mode)
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Work fields
      *
     D wkhgsn          s                   like(gohgsn)
      *
      *
      * Parm fields
      *
     D xxhgcd          s                   like(hghgcd)
     D xxhgsn          s                   like(gohgsn)
     D xxaist          s                   like(fsaist)
     D xxfscd          s                   like(fsfscd)
     D xxfsnm          s                   like(fsfsnm)
     D xxalphfscd      s              5a
      *
     D xxsicd          s                   like(gosicd)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     update        $upd1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Clear input fields and output only fields when creating
      *
     C                   select
     C                   when      mode = create                                WH create
     C                   move      *blank        d1hgcd
     C                   move      *blank        d1sicd
     C                   z-add     0             d1obfs
     C                   z-add     0             d1onfs
     C                   exsr      $clear
      *
      * If incoming mode is REVISE or DELETE, then retrieve the database
      * record.  Do not lock the record.  Typically, in DELETE mode, these
      * values will not be displayed. However, if there is an error on the
      * delete action, the panel will be displayed with messages.
      *
     C                   when      mode = revise or mode = delete               WH revise/delete
     C     wkhgsn        chain(n)  hsp130                             92
     C                   if        *in92 = *off                                 If found
     C                   move      gosicd        d1sicd
     C                   z-add     goobfs        d1obfs
     C                   z-add     goonfs        d1onfs
      *
      * Retrieve:
      *  1) Group values
      *  2) Datamart values for the current group
      *  3) Various output values associated with origin farms
      *
     C                   exsr      $group
     C                   exsr      $datamart
     C                   exsr      $farms
     C                   else
      *
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
      *
     C                   endif                                                  If found
     C                   endsl
      *
      * If the user is deleting and there were no errors when retrieving the
      * record, go on to the update routine without displaying the screen.
      * Otherwise, display the screen.
      *
     C                   if        error = 0 and action = delete                If no error
     C                   eval      routne = update
     C                   else
     C                   eval      routne = scrn1
     C                   endif                                                  If no error
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      *
      * Set indicators to control input/output fields and available
      * function keys.
      *
     c                   select
     C                   when      mode = revise
     C                   seton                                        60
      *
     C                   when      mode = create
     C                   seton                                        61
      *
     C                   when      mode = delete
     C                   seton                                        62
     c                   endsl
      *
      * Write screen 1 to CRT
      *
     C                   write     hp1016k1
     C                   write     hp1016ec
     C                   exfmt     hp1016r1
      *
      * Clear messages
      *
     C                   exsr      $clmsg
      *
      * Reset action to be equal to the incoming mode.  This is required
      * in case the user took F11-Delete and got an error on the
      * deletion and now needs to be able to change the record and take
      * an action other than delete
      *
     C                   eval      action = mode
      *
      * Get user's input and set routine
      *
     C                   select
      *
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4=prompt
     C                   exsr      $f4s1
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      routne = set1
      *
     C                   when      *in09 = *on                                  F9-accept
     C                   exsr      $edit1
      *
     C                   if        error = 0
     C                   exsr      $upd1
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      *in11 = *on or mode = delete                 F11-delete
     C                   eval      action = delete
     C                   eval      routne = update
     C                   other
      *
      * User has pressed enter
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit input fields for screen 1
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * *IN62 will be on if the record the user is trying to access has
      * been deleted by another user.  So, only perform the edits for the
      * fields on the screen if the indicator is off
      *
     C                   if        *in62 = *off                                 If here
      *
     C                   move      *blank        d1obpod
     C                   move      *blank        d1obcell
     C                   move      *blank        d1oncell
      *
      * If creating a new record, validate:
      *   1) hog group
      *
     C                   if        action = create                              If create
     C                   exsr      $hgcd
     C                   endif                                                  If create
      *
      * Always validate:
      *   1) sire line code
      *   2) origin BGF farm site
      *   3) origin Nursery farm site
      *
     C                   exsr      $sicd
     C                   exsr      $obfs
     C                   exsr      $onfs
      *
      * And, finally, the user must enter something!
      *
     C                   if        d1sicd = *blank and                          If nothing
     C                             d1obfs = 0 and
     C                             d1onfs = 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09226'     mgid(e)
     C                   endif
     C                   else
      *
      * You had some entry; so, go get some farm stuff.
      *
     C                   exsr      $farms
     C                   endif                                                  If nothing
     C                   endif                                                  If here
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate hog group
      *----------------------------------------------------------------
      *
      * Validations:
      *   1) required
      *   2) must exist in Hog Group master
      *   3) cannot have a status of VOID
      *   4) cannot be a BGF group
      *
     C     $hgcd         begsr
      *
     C                   move      *blank        d1gscd
     C                   move      *blank        d1ppcd
     C                   move      *blank        d1fscd
     C                   move      *blank        d1fsnm
     C                   move      *blank        d1blcd
     C                   move      *blank        d1rmcd
      *
     C                   select
     C                   when      d1hgcd = *blank
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     d1hgcd        chain     hsp034                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00261'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      hggscd        d1gscd
     C                   move      hgppcd        d1ppcd
     C                   z-add     hgfscd        d1fscd
     C                   move      hgblcd        d1blcd
     C                   move      hgrmcd        d1rmcd
      *
     C     hgfscd        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   move      fsfsnm        d1fsnm
     C                   endif
      *
      * Cannot be a BGF group
      *
     C                   if        hgppcd = 'BGF  '
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00394'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
      * Cannot have a VOID status
      *
     C                   if        hggscd = 'VD'
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00477'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
      * Cannot aleady exist in the Override file
      *
     C     hghgsn        chain(n)  hsp130                             92
     C                   if        *in92 = *off
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01217'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   endif                                                  If not found
     C                   endsl
      *
      * Save Hog Group Number for later creation of Override record and
      * retrieve the current Datamart values for display.
      *
     C                   if        *in35 = *off
     C                   z-add     hghgsn        wkhgsn
     C                   exsr      $datamart
     C                   else
     C                   z-add     0             wkhgsn
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve group values
      *----------------------------------------------------------------
      *
     C     $group        begsr
      *
     C     d1hgcd        chain     hsp034                             92
     C                   if        *in92 = *off                                 If found
     C                   move      hggscd        d1gscd
     C                   move      hgppcd        d1ppcd
     C                   z-add     hgfscd        d1fscd
     C                   move      hgblcd        d1blcd
     C                   move      hgrmcd        d1rmcd
      *
     C     hgfscd        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   move      fsfsnm        d1fsnm
     C                   endif
     C                   endif                                                  If found
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve the current Datamart values for a group
      *----------------------------------------------------------------
      *
     C     $datamart     begsr
      *
     C     d1hgcd        chain     hppf034                            92
     C                   if        *in92 = *off                                 If found
     C                   move      p1hgsicd      d1dmsicd
     C                   z-add     p1hgobfs      d1dmobfs
     C                   z-add     p1hgonfs      d1dmonfs
     C                   z-add     p1hgobpod     d1dmobpod
     C                   z-add     p1hgobcell    d1dmobcell
     C                   z-add     p1hgoncell    d1dmoncell
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve various output data associated with origin farms
      *----------------------------------------------------------------
      *
      * We are retrieving for output only:
      *   1) origin bgf pod
      *   2) origin bgf cell
      *   3) nursery cell
      *
     C     $farms        begsr
      *
      * Origin BGF pod and cell
      *
     C                   if        d1obfs <> 0
     C     d1obfs        chain     hsp018                             92
     C                   if        *in92 = *off                                 If found
     C                   z-add     fspod         d1obpod
     C                   z-add     fscell        d1obcell
     C                   endif                                                  If found
     C                   endif
      *
      *
      * Origin nursery cell
      *
     C                   if        d1onfs <> 0
     C     d1onfs        chain     hsp018                             92
     C                   if        *in92 = *off                                 If found
     C                   z-add     fscell        d1oncell
     C                   endif                                                  If found
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate sire line
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) optional
      *  2) if entered, must exist in the master file
      *
      *
     C     $sicd         begsr
      *
     C                   select
     C                   when      d1sicd = *blank
     C                   other
      *
     C                   eval      d1sicd = %triml(d1sicd)
     C     d1sicd        chain     hsp098                             92
     C                   if        *in92 = *on                                  If no hit
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01153'
     C                   clear                   mgw
     C                   movea     d1sicd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If no hit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit origin BGF farm site
      *---------------------------------------------------------------
      *
      * Validations:
      *  1) not required
      *  2) if entered, it must be a BGF farm
      *
     C     $obfs         begsr
      *
      *
     C                   select
     C                   when      d1obfs = 0
      *
     C                   when      d1obfs < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1obfs        chain     hsp018                             92
     C                   if        *in92 = *on                                  If no hit
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1obfs        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   if        fsppcd <> 'BGF  '                            If not BGF
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09227'     mgid(e)
     C                   clear                   mgw
     C                   move      d1obfs        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fsppcd        mgw(6)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If not BGF
      *
     C                   endif                                                  If no hit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit origin Nursery farm site
      *---------------------------------------------------------------
      *
      * Validations:
      *  1) not required
      *  2) if entered, it cannot be a BGF farm
      *
     C     $onfs         begsr
      *
     C                   select
     C                   when      d1onfs = 0
      *
     C                   when      d1onfs < 0
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1onfs        chain     hsp018                             92
     C                   if        *in92 = *on                                  If no hit
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1onfs        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      *
     C                   if        fsppcd = 'BGF  '                             If BGF
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09228'     mgid(e)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If BGF
      *
     C                   endif                                                  If no hit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      *  F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      *
     C                   select
      *
      * Hog group
     C                   when      fld = 'D1HGCD' and *in61 = *on
     C                   call      'HP5048'
     C                   parm      *blank        xxhgcd
     C                   seton                                        55
     C                   if        xxhgcd <> *blank
     C                   move      xxhgcd        d1hgcd
     C                   endif
      *
      * Sire line
     C                   when      fld = 'D1SICD'
     C                   call      'HP5016'
     C                   parm      *blank        xxaist
     C                   parm      *blank        xxsicd
     C                   seton                                        56
     C                   if        xxsicd <> *blank
     C                   movel     xxsicd        d1sicd
     C                   endif
      *
      * Origin BGF farm site
      *
     C                   when      fld = 'D1OBFS'
     C                   call      'HP5045'
     C                   parm      ' '           xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        57
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1obfs
     C                   endif
      *
      * Origin Nursery farm site
      *
     C                   when      fld = 'D1ONFS'
     C                   call      'HP5041'
     C                   parm      *blank        xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        58
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1onfs
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Write/update/delete record in database file
      *----------------------------------------------------------------
      *
     C     $upd1         begsr
      *
      * If the user is deleting,
      *   perform deletion integrity checks---if there are any
      *
     C                   if        action = delete                              If delete
     C                   endif                                                  If delete
      *
      * If user action is revising or deleting, determine that the
      * record he is accessing still exists prior to attempting to
      * update.  Lock the record for update.
      *
     C                   if        error = 0 and                                If OK
     C                             (action = delete or action = revise)
      *
     C     wkhgsn        chain     hsp130                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
      *
     C                   endif                                                  If not found
     C                   endif                                                  If OK
      *
      * If there are no errors, delete, revise or create the record.
      *
     C                   if        error = 0                                    If no error
      *
     c                   select
     C                   when      action = delete
     C                   delete    gorec
     C                   other
      *
      * Move DSPF fields to database file fields
      *
     C                   z-add     wkhgsn        gohgsn
     C                   move      d1sicd        gosicd
     C                   z-add     d1obfs        goobfs
     C                   z-add     d1onfs        goonfs
      *
     C                   if        action = create                              If create
     C                   write     gorec
     C                   else
     C                   update    gorec
     C                   endif                                                  If create
     C                   endsl
     C                   endif                                                  If no error
      *
      * Set next routine
      *
     C                   select
     C                   when      mode = create                                Wh creating
     C                   if        error = 0
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09040'
     C                   eval      routne = set1
     c                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      error <> 0                                   Wh errors
     C                   eval      routne = scrn1
     C                   other
      *
     C                   eval      routne = exit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        lr
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Clear screen fields
      *---------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   move      *blank        d1gscd
     C                   move      *blank        d1ppcd
     C                   move      *blank        d1fscd
     C                   move      *blank        d1fsnm
     C                   move      *blank        d1blcd
     C                   move      *blank        d1rmcd
      *
     C                   z-add     0             d1obpod
     C                   z-add     0             d1obcell
     C                   z-add     0             d1oncell
      *
     C                   move      *blank        d1dmsicd
     C                   z-add     0             d1dmobfs
     C                   z-add     0             d1dmonfs
     C                   z-add     0             d1dmobpod
     C                   z-add     0             d1dmobcell
     C                   z-add     0             d1dmoncell
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *   None
      *
      * Parm Lists
      *
     C     *entry        plist
     C     d1mode        parm                    mode
     C                   parm                    d1hgcd
     C     wkhgsn        parm                    xxhgsn
     C                   parm                    rtncd
      *
     C                   eval      action = mode
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
