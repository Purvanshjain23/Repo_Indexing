     H/TITLE PRC System Gen Trans   XF Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISJBADE
     H* Date          : 09/16/16  Time  : 09:32:15
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPDMCCPL1IF  E           K        DISK
      * RTV : A/R Lockbox Check         Retrieval index
      *
     FPDMDCPL2IF  E           K        DISK
      * RSQ : A/R Lockbox Invoice       bx/ddte/bch/itm/inv
      *
     FARBDCPLGIF  E           K        DISK
      * RSQ : A/R Header                RSQ Inv/Sfx (Open)  N
      *
     FPDMDCPL3IF  E           K        DISK
      * RSQ : A/R Lockbox Invoice       Rtv Key + Seq Counter(D)
      *
     FPDMDCPL0IF  E           K        DISK                      A
      * UPD : A/R Lockbox Invoice       Update index
      *
     FPDMCCPL0UF  E           K        DISK
      * UPD : A/R Lockbox Check         Update index
      *
     I@MCCPTY
      * A/R Lockbox Check         Retrieval index
      * Renamed input format fields
     I              MCBEC3                          WABEC3
     I              MCLWDT                          WALWDT
     I              MCYWNX                          WAYWNX
     I              MCBFC3                          WABFC3
     I              MCBGC3                          WABGC3
     I              MCO1TX                          WAO1TX
     I              MCLXDT                          WALXDT
     I              MCZZVA                          WAZZVA
     I              MCCWC7                          WACWC7
     I              MCO2TX                          WAO2TX
     I              MCABSX                          WAABSX
     I              MCADSX                          WAADSX
      *
     I@MDCPT7
      * A/R Lockbox Invoice       bx/ddte/bch/itm/inv
      * Renamed input format fields
     I              MDBEC3                          WBBEC3
     I              MDLWDT                          WBLWDT
     I              MDYWNX                          WBYWNX
     I              MDBFC3                          WBBFC3
     I              MDBGC3                          WBBGC3
     I              MDNMC5                          WBNMC5
     I              MDNMC4                          WBNMC4
     I              MDNMC3                          WBNMC3
     I              MDZ0VA                          WBZ0VA
     I              MDAIC3                          WBAIC3
     I              MDUHCD                          WBUHCD
     I              MDAFSX                          WBAFSX
     I              MDNGNA                          WBNGNA
      *
     I@BDCPU3
      * A/R Header                RSQ Inv/Sfx (Open)  N
      * Renamed input format fields
     I              BDAIC3                          WCAIC3
     I              BDCONB                          WCCONB
     I              BDCEST                          WCCEST
     I              BDUHCD                          WCUHCD
     I              BDBSVA                          WCBSVA
     I              BDAIVA                          WCAIVA
     I              BDAOVA                          WCAOVA
     I              BDBGVA                          WCBGVA
     I              BDAJST                          WCAJST
     I              BDE3ST                          WCE3ST
     I              BDG4CD                          WCG4CD
     I              BDCKNB                          WCCKNB
     I              BDCAC7                          WCCAC7
     I              BDBKC7                          WCBKC7
     I              BDBCCD                          WCBCCD
     I              BDR4CD                          WCR4CD
     I              BDB4DT                          WCB4DT
     I              BDATDT                          WCATDT
     I              BDH0DT                          WCH0DT
     I              BDH3DT                          WCH3DT
     I              BDH4DT                          WCH4DT
     I              BDH5DT                          WCH5DT
     I              BDANC7                          WCANC7
     I              BDCPTX                          WCCPTX
     I              BDBSDY                          WCBSDY
     I              BDUVST                          WCUVST
     I              BDUWST                          WCUWST
     I              BDUXST                          WCUXST
     I              BDAATM                          WCAATM
     I              BDAYNA                          WCAYNA
     I              BDA0NA                          WCA0NA
     I              BDAXDT                          WCAXDT
      *
     I@MDCPUB
      * A/R Lockbox Invoice       Rtv Key + Seq Counter(D)
      * Renamed input format fields
     I              MDBEC3                          WDBEC3
     I              MDLWDT                          WDLWDT
     I              MDYWNX                          WDYWNX
     I              MDBFC3                          WDBFC3
     I              MDBGC3                          WDBGC3
     I              MDNMC5                          WDNMC5
     I              MDNMC4                          WDNMC4
     I              MDNMC3                          WDNMC3
     I              MDZ0VA                          WDZ0VA
     I              MDAIC3                          WDAIC3
     I              MDUHCD                          WDUHCD
     I              MDAFSX                          WDAFSX
     I              MDNGNA                          WDNGNA
      *
     I@MDCPT0
      * A/R Lockbox Invoice       Update index
      * Renamed input format fields
     I              MDBEC3                          WEBEC3
     I              MDLWDT                          WELWDT
     I              MDYWNX                          WEYWNX
     I              MDBFC3                          WEBFC3
     I              MDBGC3                          WEBGC3
     I              MDNMC5                          WENMC5
     I              MDNMC4                          WENMC4
     I              MDNMC3                          WENMC3
     I              MDZ0VA                          WEZ0VA
     I              MDAIC3                          WEAIC3
     I              MDUHCD                          WEUHCD
     I              MDAFSX                          WEAFSX
     I              MDNGNA                          WENGNA
      *
     I@MCCPTX
      * A/R Lockbox Check         Update index
      * Renamed input format fields
     I              MCBEC3                          WFBEC3
     I              MCLWDT                          WFLWDT
     I              MCYWNX                          WFYWNX
     I              MCBFC3                          WFBFC3
     I              MCBGC3                          WFBGC3
     I              MCO1TX                          WFO1TX
     I              MCLXDT                          WFLXDT
     I              MCZZVA                          WFZZVA
     I              MCCWC7                          WFCWC7
     I              MCO2TX                          WFO2TX
     I              MCABSX                          WFABSX
     I              MCADSX                          WFADSX
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * Outward parameters
     IPARC        DS                             23
      * KEY : A/R Lockbox Invoice       bx/ddte/bch/itm/inv
      * I :  LckBx Number
     I                                    P   1   40PABEC3
      * I :  LckBx Deposit Date
     I                                    P   5   80PALWDT
      * I :  LckBx Deposit Time
     I                                    P   9  110PAYWNX
      * I :  LckBx Batch Number
     I                                    P  12  130PABFC3
      * I :  LckBx Item Number
     I                                    P  14  150PABGC3
      * I :  LckBx Invoice Number
     I                                    P  16  200PANMC3
      *
     IQPDMD1    E DSPDMDCPL0
      * UPD : A/R Lockbox Invoice       Update index
      * Renamed input format fields
     I              MDBEC3                          WEBEC3
     I              MDLWDT                          WELWDT
     I              MDYWNX                          WEYWNX
     I              MDBFC3                          WEBFC3
     I              MDBGC3                          WEBGC3
     I              MDNMC5                          WENMC5
     I              MDNMC4                          WENMC4
     I              MDNMC3                          WENMC3
     I              MDZ0VA                          WEZ0VA
     I              MDAIC3                          WEAIC3
     I              MDUHCD                          WEUHCD
     I              MDAFSX                          WEAFSX
     I              MDNGNA                          WENGNA
      *
     IQPDMC1    E DSPDMCCPL0
      * UPD : A/R Lockbox Check         Update index
      * Renamed input format fields
     I              MCBEC3                          WFBEC3
     I              MCLWDT                          WFLWDT
     I              MCYWNX                          WFYWNX
     I              MCBFC3                          WFBFC3
     I              MCBGC3                          WFBGC3
     I              MCO1TX                          WFO1TX
     I              MCLXDT                          WFLXDT
     I              MCZZVA                          WFZZVA
     I              MCCWC7                          WFCWC7
     I              MCO2TX                          WFO2TX
     I              MCABSX                          WFABSX
     I              MCADSX                          WFADSX
      *
     IYARDCS      DS                             71
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * I :  LckBx Number-Alpha    USR
     I                                        1   7 P1YXCD
     IP2PARM      DS
      * I :  LckBx Dpst Dte-Alpha  USR
     I                                        1   7 P2YYCD
     IP3PARM      DS
      * I :  lckBx Dpst Tme-Alpha  USR
     I                                        1   4 P3F2AA
     IP4PARM      DS
      * FLD: A/R Lockbox Check
      * N :  LckBx Number
     I                                    P   1   40P4BEC3
      * N :  LckBx Deposit Date
     I                                    P   5   80P4LWDT
      * N :  LckBx Deposit Time
     I                                    P   9  110P4YWNX
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1YXCD    PARM           WP0001  7        LckBx Number-Al
     C           P2YYCD    PARM           WP0002  7        LckBx Dpst Dte-
     C           P3F2AA    PARM           WP0003  4        lckBx Dpst Tme-
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * PRC System Gen Trans   XF
     C                     MOVE P1YXCD    P4BEC3           LckBx Number
     C                     MOVE P2YYCD    P4LWDT           LckBx Deposit D
     C                     MOVE P3F2AA    P4YWNX           LckBx Deposit T
      * PRC System Gen Trans   RT - A/R Lockbox Check  * 
     C                     EXSR SARVGN
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * PRC System Gen Trans   RT - A/R Lockbox Check  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0001  1        LckBx Invoice F
     C                     MOVEL*BLANK    WN0002  1        LckBx Hold Flag
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WABEC3    WQSA01           LckBx Number
     C           *LIKE     DEFN WALWDT    WQSA02           LckBx Deposit D
     C           *LIKE     DEFN WAYWNX    WQSA03           LckBx Deposit T
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           LckBx Number
     C                     KFLD           WQSA02           LckBx Deposit D
     C                     KFLD           WQSA03           LckBx Deposit T
      * Setup key
     C                     Z-ADDP4BEC3    WQSA01           LckBx Number
     C                     Z-ADDP4LWDT    WQSA02           LckBx Deposit D
     C                     Z-ADDP4YWNX    WQSA03           LckBx Deposit T
      * Establish starting position
     C           KRSSA     SETLL@MCCPTY                    *
     C           KRSSA     READE@MCCPTY                  90*
      * Data record not found
     C   90                MOVEL'USR2650' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PRC System Gen Trans   RT - A/R Lockbox Invoice  * 
     C                     EXSR SBRVGN
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     MOVEL'Y'       WN0001           LckBx Invoice F
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WN0001           LckBx Invoice F
     C                     END                             *FI
      * CHG Inv & Hld Flag     CH - A/R Lockbox Check  * 
     C                     EXSR SFCHRC
     C           KRSSA     READE@MCCPTY                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * PRC System Gen Trans   RT - A/R Lockbox Invoice  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0003  2        Invoice Suffix
     C                     Z-ADD*ZERO     WN0004 112       Remaining Balan
     C                     Z-ADD*ZERO     WN0005  10       LckBx Seq Count
     C                     Z-ADD*ZERO     WN0006  90       Save Invoice Nu
     C                     Z-ADD*ZERO     WN0007 112       LckBx Total Inv
     C                     Z-ADD*ZERO     WN0008 112       Remaining Inv D
     C                     Z-ADD*ZERO     WN0009 112       Total Inv for C
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'N'       WN0002           LckBx Hold Flag
     C                     Z-ADD0         WN0009           Total Inv for C
     C                     Z-ADD0         WN0006           Save Invoice Nu
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBBEC3    WQSB02           LckBx Number
     C           *LIKE     DEFN WBLWDT    WQSB03           LckBx Deposit D
     C           *LIKE     DEFN WBYWNX    WQSB04           LckBx Deposit T
     C           *LIKE     DEFN WBBFC3    WQSB05           LckBx Batch Num
     C           *LIKE     DEFN WBBGC3    WQSB06           LckBx Item Numb
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB02           LckBx Number
     C                     KFLD           WQSB03           LckBx Deposit D
     C                     KFLD           WQSB04           LckBx Deposit T
     C                     KFLD           WQSB05           LckBx Batch Num
     C                     KFLD           WQSB06           LckBx Item Numb
      * Setup key
     C                     Z-ADDWABEC3    WQSB02           LckBx Number
     C                     Z-ADDWALWDT    WQSB03           LckBx Deposit D
     C                     Z-ADDWAYWNX    WQSB04           LckBx Deposit T
     C                     Z-ADDWABFC3    WQSB05           LckBx Batch Num
     C                     Z-ADDWABGC3    WQSB06           LckBx Item Numb
      * Establish starting position
     C           KRSSB     SETLL@MDCPT7                    *
     C           KRSSB     READE@MDCPT7                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2652' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y'       WN0002           LckBx Hold Flag
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.LckBx Invoice Number is eq zero
     C           WBNMC3    IFEQ 0                          *IF
      * Blank Invoice Number.
     C                     EXSR UASUBR                     Blank Invoice N
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.LckBx Invoice Number EQ PAR.Save Invoice Number   USR
     C           WBNMC3    IFEQ WN0006                     *IF
      * *** skip record ***
     C                     ELSE
      * CASE: *OTHERWISE
      * Process Invoice
     C                     EXSR UBSUBR                     Process Invoice
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWBNMC3    WN0006           Save Invoice Nu
     C                     ADD  WBZ0VA    WN0009           Total Inv for C
     C                     MOVEL*BLANK    W0RTN            *Return code
     C           KRSSB     READE@MDCPT7                  90*
     C                     ENDDO
      * USER: Exit processing
      * CASE: PAR.LckBx Check Amount LT PAR.Total Inv for Chk     USR
     C           WAZZVA    IFLT WN0009                     *IF
      * payments < check
     C                     EXSR UKSUBR                     payments < chec
     C                     ELSE
      * CASE: PAR.LckBx Check Amount NE PAR.Total Inv for Chk     USR
     C           WAZZVA    IFNE WN0009                     *IF
      * payments not= check
     C                     EXSR ULSUBR                     payments not= c
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Remaining/Open Inv RT - A/R Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCCONB    WQSC02           Invoice Number
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC02           Invoice Number
      * Setup key
     C                     Z-ADDWBNMC3    WQSC02           Invoice Number
      * Establish starting position
     C           KRSSC     SETLL@BDCPU3                    *
     C           KRSSC     READE@BDCPU3                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0174' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUAIC3           Company Number
     C                     MOVEL*BLANK    WN0003           Invoice Suffix
     C                     Z-ADD*ZERO     WN0004           Remaining Balan
     C                     Z-ADD*ZERO     WUY4CD           A/R Customer Nu
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWCAIC3    WUAIC3           Company Number
     C                     MOVELWCCEST    WN0003           Invoice Suffix
     C                     Z-ADDWCBGVA    WN0004           Remaining Balan
     C                     Z-ADDWCANC7    WUY4CD           A/R Customer Nu
     C                     GOTO SCEXIT                     *QUIT
     C           KRSSC     READE@BDCPU3                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Highest Seq Cnter  RT - A/R Lockbox Invoice  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDBEC3    WQSD02           LckBx Number
     C           *LIKE     DEFN WDLWDT    WQSD03           LckBx Deposit D
     C           *LIKE     DEFN WDYWNX    WQSD04           LckBx Deposit T
     C           *LIKE     DEFN WDBFC3    WQSD05           LckBx Batch Num
     C           *LIKE     DEFN WDBGC3    WQSD06           LckBx Item Numb
     C           *LIKE     DEFN WDNMC5    WQSD07           LckBx Seq Numbe
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD02           LckBx Number
     C                     KFLD           WQSD03           LckBx Deposit D
     C                     KFLD           WQSD04           LckBx Deposit T
     C                     KFLD           WQSD05           LckBx Batch Num
     C                     KFLD           WQSD06           LckBx Item Numb
     C                     KFLD           WQSD07           LckBx Seq Numbe
      * Setup key
     C                     Z-ADDWBBEC3    WQSD02           LckBx Number
     C                     Z-ADDWBLWDT    WQSD03           LckBx Deposit D
     C                     Z-ADDWBYWNX    WQSD04           LckBx Deposit T
     C                     Z-ADDWBBFC3    WQSD05           LckBx Batch Num
     C                     Z-ADDWBBGC3    WQSD06           LckBx Item Numb
     C                     Z-ADDWBNMC5    WQSD07           LckBx Seq Numbe
      * Establish starting position
     C           KRSSD     SETLL@MDCPUB                    *
     C           KRSSD     READE@MDCPUB                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2652' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0005           LckBx Seq Count
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWDNMC4    WN0005           LckBx Seq Count
     C                     GOTO SDEXIT                     *QUIT
     C           KRSSD     READE@MDCPUB                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SECRRC    BEGSR
      *================================================================
      * CRT A/R Lockbox Invoic CR - A/R Lockbox Invoice  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @MDCPT0
     C                     Z-ADDWL0001    WEBEC3           LckBx Number
     C                     Z-ADDWL0002    WELWDT           LckBx Deposit D
     C                     Z-ADDWL0003    WEYWNX           LckBx Deposit T
     C                     Z-ADDWL0004    WEBFC3           LckBx Batch Num
     C                     Z-ADDWL0005    WEBGC3           LckBx Item Numb
     C                     Z-ADDWL0006    WENMC5           LckBx Seq Numbe
     C                     Z-ADDWL0007    WENMC4           LckBx Seq Count
     C                     Z-ADDWL0008    WENMC3           LckBx Invoice N
     C                     Z-ADDWL0009    WEZ0VA           LckBx Invoice A
     C                     Z-ADDWL0010    WEAIC3           Company Number
     C                     MOVELWL0011    WEUHCD           Adjustment Type
     C                     MOVELWL0012    WEAFSX           LckBx Trans Sou
     C                     MOVELWL0013    WENGNA           Explanation
      *
     C           KLCRSE    KLIST
     C                     KFLD           WEBEC3           LckBx Number
     C                     KFLD           WELWDT           LckBx Deposit D
     C                     KFLD           WEYWNX           LckBx Deposit T
     C                     KFLD           WEBFC3           LckBx Batch Num
     C                     KFLD           WEBGC3           LckBx Item Numb
     C                     KFLD           WENMC5           LckBx Seq Numbe
     C                     KFLD           WENMC4           LckBx Seq Count
      * Check for duplicate primary key
     C           KLCRSE    SETLL@MDCPT0                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR2653' W0RTN   7
      * Send message 'A/R Lockbox Invoice    EX'
     C                     MOVEL'USR2653' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C                     WRITE@MDCPT0                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCHRC    BEGSR
      *================================================================
      * CHG Inv & Hld Flag     CH - A/R Lockbox Check  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0010 10        LckBx Check Num
     C                     Z-ADD*ZERO     WN0011  70       LckBx Check Dat
     C                     Z-ADD*ZERO     WN0012 112       LckBx Check Amo
     C                     Z-ADD*ZERO     WN0013  70       LckBx Customer
     C                     MOVEL*BLANK    WN0014 30        LckBx Customer
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @MCCPTX
     C                     Z-ADDWABEC3    WFBEC3           LckBx Number
     C                     Z-ADDWALWDT    WFLWDT           LckBx Deposit D
     C                     Z-ADDWAYWNX    WFYWNX           LckBx Deposit T
     C                     Z-ADDWABFC3    WFBFC3           LckBx Batch Num
     C                     Z-ADDWABGC3    WFBGC3           LckBx Item Numb
      *
     C           KLCHSF    KLIST
     C                     KFLD           WFBEC3           LckBx Number
     C                     KFLD           WFLWDT           LckBx Deposit D
     C                     KFLD           WFYWNX           LckBx Deposit T
     C                     KFLD           WFBFC3           LckBx Batch Num
     C                     KFLD           WFBGC3           LckBx Item Numb
     C           KLCHSF    CHAIN@MCCPTX              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDMCCPL0'MDACP
     C                     MOVEL'@MCCPTX' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDMC1    YARDCS
      * Move non-key fields to @MCCPTX
     C                     MOVELWN0001    WFABSX    P      LckBx Invoice F
     C                     MOVELWN0002    WFADSX    P      LckBx Hold Flag
      *
      * Set PGM.*Record Data Changed flag
     C           QPDMC1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@MCCPTX                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDMCCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Blank Invoice Number.
      *================================================================
     C                     MOVEL'Y'       WN0002           LckBx Hold Flag
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Process Invoice
      *================================================================
      * *** Calculate total Invoice Amount ***
     C                     Z-ADD0         WN0007           LckBx Total Inv
      * RTV Total Invoice Amt  XF - A/R Lockbox Invoice  * 
     C                     CLEARPARC
     C                     Z-ADDWBBEC3    PABEC3           LckBx Number
     C                     Z-ADDWBLWDT    PALWDT           LckBx Deposit D
     C                     Z-ADDWBYWNX    PAYWNX           LckBx Deposit T
     C                     Z-ADDWBBFC3    PABFC3           LckBx Batch Num
     C                     Z-ADDWBBGC3    PABGC3           LckBx Item Numb
     C                     Z-ADDWBNMC3    PANMC3           LckBx Invoice N
      *
     C                     CALL 'PDJAXFR'              90  RTV Total Invoi
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: A/R Lockbo
     C           WN0007    PARM WN0007    WQ0001 112       LckBx Total Inv
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDJAXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * *** Get A/R Remaining Balance ***
      * RTV Remaining/Open Inv RT - A/R Header  * 
     C                     EXSR SCRVGN
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
      * Process Payments against A/R Invoices.
     C                     EXSR UCSUBR                     Process Payment
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       WN0002           LckBx Hold Flag
     C                     END                             *FI
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Process Payments against A/R Invoices.
      *================================================================
      * CASE: PAR.Lckbx Total Inv Amt   USR is less or equal to zero
     C           WN0007    IFLE 0                          *IF
      * Net Payment <= 0            - Hold Check
     C                     EXSR UDSUBR                     Net Payment <=
     C                     ELSE
      * CASE: PAR.Remaining Balance Due is less or equal to zero
     C           WN0004    IFLE 0                          *IF
      * Remaining Balance <= 0      - Hold Check
     C                     EXSR UESUBR                     Remaining Balan
     C                     ELSE
      * CASE: PAR.Lckbx Total Inv Amt   USR GT PAR.Remaining Balance Due
     C           WN0007    IFGT WN0004                     *IF
      * Payment > Remaining Balance - Hold Check
     C                     EXSR UFSUBR                     Payment > Remai
     C                     ELSE
      * CASE: PAR.Remaining Balance Due GT PAR.Lckbx Total Inv Amt   USR
     C           WN0004    IFGT WN0007                     *IF
      * Remaining Balance > Payment - (WO/CB)
     C                     EXSR UGSUBR                     Remaining Balan
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Net Payment <= 0            - Hold Check
      *================================================================
     C                     MOVEL'Y'       WN0002           LckBx Hold Flag
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * Remaining Balance <= 0      - Hold Check
      *================================================================
     C                     MOVEL'Y'       WN0002           LckBx Hold Flag
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * Payment > Remaining Balance - Hold Check
      *================================================================
     C                     MOVEL'Y'       WN0002           LckBx Hold Flag
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * Remaining Balance > Payment - (WO/CB)
      *================================================================
      * Get Next Sequence Counter.
     C                     EXSR UHSUBR                     Get Next Sequen
     C           WN0004    SUB  WN0007    WN0008           Remaining Inv D
      * CASE: PAR.Remaining Inv Diff    USR is less than 50
     C           WN0008    IFLT 50                         *IF
      * Create Write Off Transaction.
     C                     EXSR UISUBR                     Create Write Of
     C                     ELSE
      * CASE: *OTHERWISE
      * Create Charge Back Transaction.
     C                     EXSR UJSUBR                     Create Charge B
     C                     END                             *FI
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         UHSUBR    BEGSR
      *================================================================
      * Get Next Sequence Counter.
      *================================================================
      * RTV Highest Seq Cnter  RT - A/R Lockbox Invoice  * 
     C                     EXSR SDRVGN
     C                     ADD  1         WN0005           LckBx Seq Count
      *================================================================
     CSR         UHEXIT    ENDSR
      /EJECT
     CSR         UISUBR    BEGSR
      *================================================================
      * Create Write Off Transaction.
      *================================================================
      * CRT A/R Lockbox Invoic CR - A/R Lockbox Invoice  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWBBEC3    WL0001           LckBx Number
     C                     Z-ADDWBLWDT    WL0002           LckBx Deposit D
     C                     Z-ADDWBYWNX    WL0003           LckBx Deposit T
     C                     Z-ADDWBBFC3    WL0004           LckBx Batch Num
     C                     Z-ADDWBBGC3    WL0005           LckBx Item Numb
     C                     Z-ADDWBNMC5    WL0006           LckBx Seq Numbe
     C                     Z-ADDWN0005    WL0007           LckBx Seq Count
     C                     Z-ADDWBNMC3    WL0008           LckBx Invoice N
     C                     Z-ADDWN0008    WL0009           LckBx Invoice A
     C                     Z-ADDWBAIC3    WL0010           Company Number
     C                     MOVEL'WO'      WL0011    P      Adjustment Type
     C                     MOVEL'S'       WL0012    P      LckBx Trans Sou
     C                     MOVELWBNGNA    WL0013    P      Explanation
     C                     EXSR SECRRC
      *================================================================
     CSR         UIEXIT    ENDSR
      /EJECT
     CSR         UJSUBR    BEGSR
      *================================================================
      * Create Charge Back Transaction.
      *================================================================
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           WN0003    IFEQ 'CB'                       *IF
      * *** No charge back trans against charge backs invoices. ***
     C                     ELSE
      * CASE: *OTHERWISE
      * *** create charge back ***
      * *** PK0333 ***  No changes here.  This should make a CB record.
      * CRT A/R Lockbox Invoic CR - A/R Lockbox Invoice  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWBBEC3    WL0001           LckBx Number
     C                     Z-ADDWBLWDT    WL0002           LckBx Deposit D
     C                     Z-ADDWBYWNX    WL0003           LckBx Deposit T
     C                     Z-ADDWBBFC3    WL0004           LckBx Batch Num
     C                     Z-ADDWBBGC3    WL0005           LckBx Item Numb
     C                     Z-ADDWBNMC5    WL0006           LckBx Seq Numbe
     C                     Z-ADDWN0005    WL0007           LckBx Seq Count
     C                     Z-ADDWBNMC3    WL0008           LckBx Invoice N
     C                     Z-ADDWN0008    WL0009           LckBx Invoice A
     C                     Z-ADDWBAIC3    WL0010           Company Number
     C                     MOVEL'CB'      WL0011    P      Adjustment Type
     C                     MOVEL'S'       WL0012    P      LckBx Trans Sou
     C                     MOVELWBNGNA    WL0013    P      Explanation
     C                     EXSR SECRRC
      * *** hold for verification ***
     C                     MOVEL'Y'       WN0002           LckBx Hold Flag
     C                     END                             *FI
      *================================================================
     CSR         UJEXIT    ENDSR
      /EJECT
     CSR         UKSUBR    BEGSR
      *================================================================
      * payments < check
      *================================================================
     C                     MOVEL'Y'       WN0002           LckBx Hold Flag
      *================================================================
     CSR         UKEXIT    ENDSR
      /EJECT
     CSR         ULSUBR    BEGSR
      *================================================================
      * payments not= check
      *================================================================
     C                     MOVEL'Y'       WN0002           LckBx Hold Flag
      *================================================================
     CSR         ULEXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P4BEC3           LckBx Number
     C                     Z-ADD*ZERO     P4LWDT           LckBx Deposit D
     C                     Z-ADD*ZERO     P4YWNX           LckBx Deposit T
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WABEC3           LckBx Number
     C                     Z-ADD*ZERO     WALWDT           LckBx Deposit D
     C                     Z-ADD*ZERO     WAYWNX           LckBx Deposit T
     C                     Z-ADD*ZERO     WABFC3           LckBx Batch Num
     C                     Z-ADD*ZERO     WABGC3           LckBx Item Numb
     C                     Z-ADD*ZERO     WALXDT           LckBx Check Dat
     C                     Z-ADD*ZERO     WAZZVA           LckBx Check Amo
     C                     Z-ADD*ZERO     WACWC7           LckBx Customer
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBBEC3           LckBx Number
     C                     Z-ADD*ZERO     WBLWDT           LckBx Deposit D
     C                     Z-ADD*ZERO     WBYWNX           LckBx Deposit T
     C                     Z-ADD*ZERO     WBBFC3           LckBx Batch Num
     C                     Z-ADD*ZERO     WBBGC3           LckBx Item Numb
     C                     Z-ADD*ZERO     WBNMC5           LckBx Seq Numbe
     C                     Z-ADD*ZERO     WBNMC4           LckBx Seq Count
     C                     Z-ADD*ZERO     WBNMC3           LckBx Invoice N
     C                     Z-ADD*ZERO     WBZ0VA           LckBx Invoice A
     C                     Z-ADD*ZERO     WBAIC3           Company Number
      * Define work field Company Number
     C                     Z-ADD*ZERO     WUAIC3  30
      * Define work field Unused Parm - CD7     USR
     C                     Z-ADD*ZERO     WUY4CD  70
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCCONB           Invoice Number
     C                     Z-ADD*ZERO     WCBSVA           Transaction Amo
     C                     Z-ADD*ZERO     WCAIVA           Adjustment Amou
     C                     Z-ADD*ZERO     WCAOVA           Amount Paid
     C                     Z-ADD*ZERO     WCBGVA           Remaining Balan
     C                     Z-ADD*ZERO     WCCKNB           G/L Document Nu
     C                     Z-ADD*ZERO     WCCAC7           Order Number Re
     C                     Z-ADD*ZERO     WCBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WCB4DT           Transaction Dat
     C                     Z-ADD*ZERO     WCATDT           Due Date
     C                     Z-ADD*ZERO     WCH0DT           Last Payment Da
     C                     Z-ADD*ZERO     WCH3DT           Original Inv fo
     C                     Z-ADD*ZERO     WCH4DT           Paid in Full Da
     C                     Z-ADD*ZERO     WCH5DT           Last G/L Post D
     C                     Z-ADD*ZERO     WCANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WCBSDY           Days to Pay
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SECRRC.
     C                     Z-ADD*ZERO     WL0001  70
     C                     Z-ADD*ZERO     WL0002  70
     C                     Z-ADD*ZERO     WL0003  40
     C                     Z-ADD*ZERO     WL0004  30
     C                     Z-ADD*ZERO     WL0005  30
     C                     Z-ADD*ZERO     WL0006  20
     C                     Z-ADD*ZERO     WL0007  10
     C                     Z-ADD*ZERO     WL0008  90
     C                     Z-ADD*ZERO     WL0009 112
     C                     Z-ADD*ZERO     WL0010  30
     C                     MOVEL*BLANK    WL0011  3
     C                     MOVEL*BLANK    WL0012  1
     C                     MOVEL*BLANK    WL0013 30
      *================================================================
     CSR         ZZEXIT    ENDSR
