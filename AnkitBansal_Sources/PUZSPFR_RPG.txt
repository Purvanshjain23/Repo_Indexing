     H/TITLE PRT Regulation Code PF    Print file
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Print file
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISELOUC
     H* Date          : 05/29/23  Time  : 12:07:24
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2  IF   E           K DISK
      * RSQ : Application               RSQ Application Code
      *
     FPUC8REL1  IF   E           K DISK
      * RTV : Regulation Code Mst       Retrieval index
      *
     FPUZSPFR$  O    E             PRINTER OFLIND(*IN97)
     F                                     INFDS(INFDS$)
      * PRT: PRT Regulation Code PF    Print file
      *
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D INFDS$        E DS                  EXTNAME(Y2I$DSP)
      * Printer file information data structure
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S             10
     D  WP0002         S              3
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  W0PFM          S              1
     D  @$WRK          S              4  0
     D  @$HDL          S              4  0
     D  W0PGL          S              4  0
     D  W0OFL          S              4  0
     D  W0NEWP         S              1
     D  WUAUNA         S             30
     D  WQSA01         S                   LIKE(DNDNCD)
     D  WQSB01         S                   LIKE(DNDNCD)
     D  WUDSC4         S             40
     D  WUDE40         S             40
     D  YL0001         S              1
     D  W0FSUM         S                   LIKE(@$CLN)
     D  W0DTLN         S                   LIKE(@$CLN)
     D  W0COLN         S                   LIKE(@$CLN)
     D  W0AL1P         S              1
     D  W0AL00         S              1
     D  W0AP1P         S              1
     D  W0AP00         S              1
     D  W0APDT         S              1
     D  W0ACDT         S              1
     D  WZA001         S                   LIKE(C8CAAB)
     D  W0EOFA         S              1
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  @1FFL          S             10
     D  @1FLB          S             10
     D  @1FMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     D UCT             S              1    DIM(40)                              CENTER TABLE
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * FLD: PFS Regulation Code Mst
      * I : RST PFS Regulation Code
     D  P1B4AB                 1     10
      * I : RST PFS Regulation Origin
     D  P1B5AB                11     13
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C     P1B4AB        PARM                    WP0001                         PFS Regulation
     C     P1B5AB        PARM                    WP0002                         PFS Regulation
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * PRT Regulation Code PF: Mainline
     C                   EXSR      A0MAIN
      * Print headers then End of report format
     C                   EXSR      Q0PRNT
     C                   WRITE     $HENDRPT
      * Exit program
     C                   EXSR      ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR   A0MAIN        BEGSR
      *================================================================
      * PRT Regulation Code PF: Mainline
      *================================================================
      * Establish starting position
     C     *LOVAL        SETLL     @C8REMU                                      *
      * Read first record with user selection
     C                   EXSR      A3READ
      * USER: Null report processing
     C                   IF        W0EOFA <> '0'
     C                   MOVEL     'Y'           YL0001                         USR Display fie
     C                   ELSE
      * Request all headings
     C                   MOVEL     'Y'           W0AL1P                         First page
     C                   MOVEL     'Y'           W0AL00                         Regulation Code
      * Set column headings flag
     C                   MOVE      'Y'           W0ACDT
      * Print report body
      * Prepare heading formats for printing
     C                   DOW       W0EOFA = '0'
     C                   EXSR      A1PHDR
      * Print report detail line
     C                   EXSR      A2PDTL
      * Read next record with user selection
     C                   EXSR      A3READ
      * Print totals
     C                   EXSR      A4PTOT
     C                   END                                                    WOD
     C                   END                                                    FI
      *================================================================
     CSR   A0EXIT        ENDSR
      /EJECT
     CSR   A1PHDR        BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
      * Signal that format is now ready to print
     C                   IF        W0AL1P = 'Y'
     C                   MOVE      'Y'           W0AP1P
     C                   END
      *
      * Load key header format
     C                   IF        W0AL00 = 'Y'
     C                   MOVEL     C8CAAB        $DCAAB                         Regulation Code
      * Load related totals format
     C                   MOVEL     C8CAAB        $FCAAB                         Regulation Code
      * Signal that format is now ready to print
     C                   MOVE      'Y'           W0AP00
     C                   END
      *
      *================================================================
     CSR   A1EXIT        ENDSR
      /EJECT
     CSR   A2PDTL        BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                   MOVEL     C8CAAB        $ECAAB                         Regulation Code
     C                   MOVEL     C8CBAB        $ECBAB                         Regulation ID
     C                   MOVEL     C8CCAB        $ECCAB                         Regulation Orig
     C                   MOVEL     C8UVU1        $EUVU1                         Regulation Desc
     C                   MOVEL     C8UWU1        $EUWU1                         ShipTo Est Stm
     C                   MOVEL     C8CDAB        $ECDAB                         Ship To Cust Ty
     C                   MOVEL     C8OHSC        $EOHSC                         Default Regulat
     C                   MOVEL     C8VSST        $EVSST                         Record Status
     C                   MOVEL     C8UXU1        $EUXU1                         NonComp Stm1 St
     C                   MOVEL     C8UYU1        $EUYU1                         NonComp Stm2 St
     C                   MOVEL     C8UZU1        $EUZU1                         Compliancy Stm1
     C                   MOVEL     C8U0U1        $EU0U1                         Compliancy Stm2
     C                   Z-ADD     C8MJDT        $EMJDT                         Create Date
     C                   Z-ADD     C8BETM        $EBETM                         Create Time
     C                   MOVEL     C8CCVN        $ECCVN                         Create User
     C                   MOVEL     C8CDVN        $ECDVN                         Create Program
     C                   Z-ADD     C8MKDT        $EMKDT                         Change Date
     C                   Z-ADD     C8BFTM        $EBFTM                         Change Time
     C                   MOVEL     C8CEVN        $ECEVN                         Change User
     C                   MOVEL     C8CFVN        $ECFVN                         Change Program
      * Signal that format is now ready to print
     C                   MOVE      'Y'           W0APDT
      * Call print routine
     C                   EXSR      Q0PRNT
      *
      *================================================================
     CSR   A2EXIT        ENDSR
      /EJECT
     CSR   A3READ        BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C                   MOVEL     C8CAAB        WZA001
      * Read next record
     C                   DOU       W0RSL = 'Y' OR
     C                             W0EOFA = '1'
     C                   READ      @C8REMU                                90    *
      * Transfer error indicator to EOF flag
     C                   MOVEL     *IN90         W0EOFA
      * Quit if no record read
      * Select record unless user action states otherwise
     C                   IF        W0EOFA <> '1'
     C                   MOVEL     'Y'           W0RSL
     C                   END                                                    FI
     C                   END                                                    UOD
      *
      * Reset key level breaks
     C                   EVAL      W0AL00 = ' '                                 Regulation Code
      * End of file - Signal all level breaks
     C                   IF        W0EOFA = '1'
     C                   MOVEL     'Y'           W0AL00                         Regulation Code
     C                   ELSE
      * Next record - Detect level breaks
      * Set on level break indicator
     C                   IF        C8CAAB <> WZA001
     C                   MOVEL     'Y'           W0AL00
     C                   END
     C                   END
      *================================================================
     CSR   A3EXIT        ENDSR
      /EJECT
     CSR   A4PTOT        BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
      * Mention hidden format
     C                   IF        W0AL00 = 'Y'
     C   99
     CANN99              WRITE     $FKEYTTL
      * Signal header format is no longer ready
     C                   EVAL      W0AP00 = ' '
     C                   END
      *
      * Mention hidden format
     C                   IF        W0EOFA = '1'
     C   99
     CANN99              WRITE     $GFINTTL
     C                   END
      *
      *================================================================
     CSR   A4EXIT        ENDSR
      /EJECT
     CSR   Q0PRNT        BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                   EXSR      Q1FSEL
      * Calculate length of formats selected for printing
     C                   EXSR      Q2PLEN
      * Add column heading length to print length
     C                   ADD       W0COLN        W0FSUM
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C                   IF        W0NEWP <> 'Y'
     C                   IF        W0FSUM > W0OFL
     C                   MOVE      'Y'           W0NEWP
     C                   ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                   ADD       W0DTLN        W0FSUM
     C                   IF        W0FSUM > W0PGL
     C                   MOVE      'Y'           W0NEWP
     C                   END
     C                   END
     C                   END
      * Print Standard report header of PRT Regulation Code PF
      * If it is ready to print, then do so,
     C                   IF        W0NEWP = 'Y'
     C                   EXSR      Q3PTNP
     C                   END                                                    FI
      *
      * Print First Page Format of PRT Regulation Code PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C                   IF        W0AP1P = 'Y' OR
     C                             W0NEWP = 'Y' AND
     C                             W0AP1P = 'P'
     C                   MOVEL     '0'           *IN79
     C                   IF        YL0001 = 'N'
     C                   MOVEL     '1'           *IN79
     C                   END                                                    *FI
      * Print format
     C                   WRITE     $C1STPAG
      *
      * Reset format print flag
     C                   EVALR     W0AP1P = ' '
      * Clear first page flag.
     C                   EVALR     W0AL1P = ' '
     C                   END                                                    FI
      * Print Regulation Code of PRT Regulation Code PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
      * Mention hidden format
     C                   IF        W0AP00 = 'Y' OR
     C                             W0NEWP = 'Y' AND
     C                             W0AP00 = 'P'
     C   99
     CANN99              WRITE     $DKEYHDR
      * Reset format print flag
     C                   EVALR     W0AP00 = ' '
     C                   END                                                    FI
      * Print Detail line. of PRT Regulation Code PF
      * If new page then set column headings active
     C                   IF        W0NEWP = 'Y'
     C                   MOVE      'Y'           W0ACDT
     C                   END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
      * Convert fields to external form
      * Print column headings if required
     C                   IF        W0APDT = 'Y' OR
     C                             W0NEWP = 'Y' AND
     C                             W0APDT = 'P'
     C                   IF        W0ACDT = 'Y'
     C                   WRITE     $ECOLHDG
      * Clear column headings control flag
     C                   EVALR     W0ACDT = ' '
     C                   END                                                    FI
      * Print format
     C                   WRITE     $EDTLRCD
      *
      * Reset format print flag
     C                   EVALR     W0APDT = ' '
     C                   END                                                    FI
      * Clear new page flag
     C                   EVALR     W0NEWP = ' '
      *================================================================
     CSR   Q0EXIT        ENDSR
      /EJECT
     CSR   Q1FSEL        BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR   Q1EXIT        ENDSR
      /EJECT
     CSR   Q2PLEN        BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C                   Z-ADD     @$CLN         W0FSUM
     C                   Z-ADD     *ZERO         W0DTLN
     C                   Z-ADD     *ZERO         W0COLN
      * * First Page Format of PRT Regulation Code PF
     C                   IF        W0AP1P = 'Y'
     C                   ADD       3             W0FSUM
     C                   END                                                    FI
      *
      * * Regulation Code of PRT Regulation Code PF
     C                   IF        W0AP00 = 'Y'
     C                   ADD       0             W0FSUM
     C                   END                                                    FI
      *
      * * Detail line. of PRT Regulation Code PF
     C                   IF        W0APDT = 'Y'
     C                   Z-ADD     13            W0DTLN
     C                   IF        W0ACDT = 'Y'
     C                   Z-ADD     0             W0COLN
     C                   END                                                    FI
     C                   END                                                    FI
      *
      *================================================================
     CSR   Q2EXIT        ENDSR
      /EJECT
     CSR   Q3PTNP        BEGSR
      *================================================================
      * Format select
      *================================================================
     C                   WRITE     $APAGHDR
      * Clear page overflow indicator
     C                   SETOFF                                       97        *
      *================================================================
     CSR   Q3EXIT        ENDSR
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    WQSA01                         Application Cod
      * Setup key
     C                   EVALR     WQSA01 = ' '                                 Application Cod
     C                   MOVEL     'OMS'         WQSA01                         Application Cod
      * Establish starting position
     C     KRSSA         SETLL     @DNRESF                                      *
     C     KRSSA         READE     @DNRESF                                90    *
      * Data record not found
     C   90              MOVEL     'USR0755'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C                   DOW       NOT *IN90
      * PAR = DB1 By name
     C                   IF        DNRSCD = ' '
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                   EXSR      SBRVGN
     C                   END                                                    *FI
     C     KRSSA         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WQSB01                         Application Cod
      * Setup key
     C                   MOVEL     DNRSCD        WQSB01                         Application Cod
      * Establish starting position
     C     KRSSB         SETLL     @DNRESF                                      *
     C     KRSSB         READE     @DNRESF                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0755'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WUAUNA = ' '                                 Description
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C     KRSSB         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   UASUBR        BEGSR
      *================================================================
      * Modifications History
      *================================================================
      * Eric L 05-2023 WI572 Creation
      *================================================================
     CSR   UAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Reclaim resources of called programs
     C                   CALL      'Y2RCRSC'
      *
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Define work field Description
     C                   EVAL      WUAUNA = ' '
      * Define work field USR Description 40
     C                   EVAL      WUDSC4 = ' '
      * Define work field USR Description 40   2
     C                   EVAL      WUDE40 = ' '
      * Initialize KEY fields.
     C                   MOVEL     *LOVAL        C8CAAB                         Regulation Code
     C                   MOVEL     *LOVAL        C8CBAB                         Regulation ID
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   MOVE      ZZFFL         @1FFL
     C                   MOVE      ZZFLB         @1FLB
     C                   MOVE      ZZFMB         @1FMB
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
     C                   MOVEL     'N'           W0PMT
      * Define local work field USR Display field
     C                   EVAL      YL0001 = ' '
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       $ACMP
     C                   IN        *DTAARA
      *................................................................
     C                   MOVEL     ##PGM         $APGM
     C                   MOVEL     ##USR         $AUSR
     C                   EVAL      W0PFM = ' '
     C                   Z-ADD     *ZERO         @$WRK
     C                   Z-ADD     *ZERO         @$HDL
     C                   Z-ADD     *ZERO         @$CLN
     C                   Z-ADD     *ZERO         @$PGN
      * Adjust page length and overflow as necessary
     C     @$PGL         SUB       2             W0PGL
     C                   IF        @$OFL >= W0PGL
     C     W0PGL         SUB       2             W0OFL
     C                   ELSE
     C                   Z-ADD     @$OFL         W0OFL
     C                   END
      * Clear overflow indicator
     C                   SETOFF                                       97
      * Request new page
     C                   MOVEL     'Y'           W0NEWP
      * USER: Initialize program
      * Modifications History
     C                   EXSR      UASUBR                                       Modifications H
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                   EXSR      SARVGN
     C                   EVAL      WUDSC4 = ' '                                 USR Description
     C                   MOVEL     WUAUNA        WUDSC4                         USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                   MOVEA     WUDSC4        UCT                            LOAD ARRAY
     C                   Z-ADD     40            UX                2 0          SET COUNTER
     C     UX            DOWGT     0
     C     UCT(UX)       IFEQ      ' '
     C                   SUB       1             UX
     C                   ELSE
     C                   Z-ADD     UX            UXH               2 0
     C                   Z-ADD     0             UX
     C                   END
     C                   END
     C     40            SUB       UXH           UX
     C     UX            DIV       2             UX
     C     UX            IFGT      0
     C                   MOVE      *BLANKS       UCT
     C                   MOVEA     WUDSC4        UCT(UX)
     C                   END
     C                   MOVEA     UCT           WUDE40                         LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                   MOVE      WUDE40        $ACMP
     C                   MOVEL     'N'           YL0001                         USR Display fie
      *================================================================
     CSR   ZZEXIT        ENDSR
