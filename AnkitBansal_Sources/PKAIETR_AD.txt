// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKAIETR
// ?Date: 14.08.2025 Time: 02:48:44
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Number
EXECUTE FUNCTION(C2206 Kill Plan Str Wk) TYPE(EXCINTFUN)                        AB1188762;
{
 //?Execute internal function

 //?12/30/96   SLM     Establish number of Kill Plan for the
 //?                   week was not accumulating correctly
 //?                   if this the beginning year starts on
 //?                   another day then Monday.
}


// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


//?USER: Load existing header

EXECUTE FUNCTION(Rtv Dates  1296       RT) TYPE(RTVOBJ) FILE(PKCFREP)           AB1188759;
PARAMETER(CTL.CW_Year);
PARAMETER(CTL.CW_Week_Number);
PARAMETER(CTL.CW_Week_Start_Date);
PARAMETER(CTL.CW_Week_End_Date);
PARAMETER(CTL.CW_Mon_Date);
PARAMETER(CTL.CW_Tue_Date);
PARAMETER(CTL.CW_Wed_Date);
PARAMETER(CTL.CW_Thu_Date);
PARAMETER(CTL.CW_Fri_Date);
PARAMETER(CTL.CW_Sat_Date);
PARAMETER(CTL.CW_Sun_Date);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(C2206 Kill Plan Str Wk) TYPE(EXCINTFUN)                        AB1188762;
 {
  //?Execute internal function

  //?12/30/96   SLM     Establish number of Kill Plan for the
  //?                   week was not accumulating correctly
  //?                   if this the beginning year starts on
  //?                   another day then Monday.
 }

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Plnd Kill/Hld Ovr RT) TYPE(RTVOBJ) FILE(PKAOCPP)           AB1100895;
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(CTL.CW_Week_Start_Date);
PARAMETER(CTL.Planned_Kill_USR);
PARAMETER(CTL.CW_Week_Start_Date);
PARAMETER(CTL.CW_Week_End_Date);
PARAMETER(CTL.CW_Mon_Date);
PARAMETER(CTL.CW_Tue_Date);
PARAMETER(CTL.CW_Wed_Date);
PARAMETER(CTL.CW_Thu_Date);
PARAMETER(CTL.CW_Fri_Date);
PARAMETER(CTL.CW_Sat_Date);
PARAMETER(CTL.CW_Sun_Date);
PARAMETER(CTL.Mon_Hold_Over_Head_USR);
PARAMETER(CTL.tue_Hold_Over_Head_USR);
PARAMETER(CTL.wed_Hold_Over_Head_USR);
PARAMETER(CTL.thu_Hold_Over_Head_USR);
PARAMETER(CTL.Fri_Hold_Over_Head_USR);
PARAMETER(CTL.sat_Hold_Over_Head_USR);
PARAMETER(CTL.Sun_Head_Held_Over_USR);
PARAMETER(CTL.Mon_Planned_Kill_USR);
PARAMETER(CTL.Tue_Planned_Kill_USR);
PARAMETER(CTL.Wed_Planned_Kill_USR);
PARAMETER(CTL.Thu_Planned_Kill_USR);
PARAMETER(CTL.Fri_Planned_Kill_USR);
PARAMETER(CTL.Sat_Planned_Kill_USR);
PARAMETER(CTL.Sun_Planned_Kill_USR);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(C2206 Kill Plan Str Wk) TYPE(EXCINTFUN)                        AB1188762;
 {
  //?Execute internal function

  //?12/30/96   SLM     Establish number of Kill Plan for the
  //?                   week was not accumulating correctly
  //?                   if this the beginning year starts on
  //?                   another day then Monday.
 }

 // PAR.KP Plan Head = CON.*ZERO
 PAR.KP_Planned_Kill = *ZERO;

 // PAR.Mon Hold Over Head USR = CON.*ZERO
 PAR.Mon_Hold_Over_Head_USR = *ZERO;

 // PAR.tue Hold Over Head USR = CON.*ZERO
 PAR.tue_Hold_Over_Head_USR = *ZERO;

 // PAR.wed Hold Over Head USR = CON.*ZERO
 PAR.wed_Hold_Over_Head_USR = *ZERO;

 // PAR.thu Hold Over Head USR = CON.*ZERO
 PAR.thu_Hold_Over_Head_USR = *ZERO;

 // PAR.Fri Hold Over Head USR = CON.*ZERO
 PAR.Fri_Hold_Over_Head_USR = *ZERO;

 // PAR.sat Hold Over Head USR = CON.*ZERO
 PAR.sat_Hold_Over_Head_USR = *ZERO;

 // PAR.Sun Head Held Over USR = CON.*ZERO
 PAR.Sun_Head_Held_Over_USR = *ZERO;

 // PAR.Mon Planned Kill USR = CON.*ZERO
 PAR.Mon_Planned_Kill_USR = *ZERO;

 // PAR.Tue Planned Kill USR = CON.*ZERO
 PAR.Tue_Planned_Kill_USR = *ZERO;

 // PAR.Wed Planned Kill USR = CON.*ZERO
 PAR.Wed_Planned_Kill_USR = *ZERO;

 // PAR.Thu Planned Kill USR = CON.*ZERO
 PAR.Thu_Planned_Kill_USR = *ZERO;

 // PAR.Fri Planned Kill USR = CON.*ZERO
 PAR.Fri_Planned_Kill_USR = *ZERO;

 // PAR.Sat Planned Kill USR = CON.*ZERO
 PAR.Sat_Planned_Kill_USR = *ZERO;

 // PAR.Sun Planned Kill USR = CON.*ZERO
 PAR.Sun_Planned_Kill_USR = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.KP Kill Date LE PAR.CW Week End Date
 IF DB1.KP_Kill_Cut_Date <= PAR.CW_Week_End_Date;

 CASE;

 // IF PAR.CW Mon Date EQ DB1.KP Kill Date
 IF PAR.CW_Mon_Date = DB1.KP_Kill_Cut_Date;

 // PAR.KP Head = PAR.KP Head + DB1.KP Head
 PAR.KP_Planned_Kill = PAR.KP_Planned_Kill + DB1.KP_Planned_Kill;

 // PAR.Mon Hold Over Head USR = PAR.Mon Hold Over Head USR + DB1.KP Head Hold Over
 PAR.Mon_Hold_Over_Head_USR = PAR.Mon_Hold_Over_Head_USR + DB1.KP_Head_Hold_Over;

 // PAR.Mon Planned Kill USR = PAR.Mon Planned Kill USR + DB1.KP Head
 PAR.Mon_Planned_Kill_USR = PAR.Mon_Planned_Kill_USR + DB1.KP_Planned_Kill;

 // IF PAR.CW Tue Date EQ DB1.KP Kill Date
 IF PAR.CW_Tue_Date = DB1.KP_Kill_Cut_Date;

 // PAR.KP Head = PAR.KP Head + DB1.KP Head
 PAR.KP_Planned_Kill = PAR.KP_Planned_Kill + DB1.KP_Planned_Kill;

 // PAR.tue Hold Over Head USR = PAR.tue Hold Over Head USR + DB1.KP Head Hold Over
 PAR.tue_Hold_Over_Head_USR = PAR.tue_Hold_Over_Head_USR + DB1.KP_Head_Hold_Over;

 // PAR.Tue Planned Kill USR = PAR.Tue Planned Kill USR + DB1.KP Head
 PAR.Tue_Planned_Kill_USR = PAR.Tue_Planned_Kill_USR + DB1.KP_Planned_Kill;

 // IF PAR.CW Wed Date EQ DB1.KP Kill Date
 IF PAR.CW_Wed_Date = DB1.KP_Kill_Cut_Date;

 // PAR.KP Head = PAR.KP Head + DB1.KP Head
 PAR.KP_Planned_Kill = PAR.KP_Planned_Kill + DB1.KP_Planned_Kill;

 // PAR.wed Hold Over Head USR = PAR.wed Hold Over Head USR + DB1.KP Head Hold Over
 PAR.wed_Hold_Over_Head_USR = PAR.wed_Hold_Over_Head_USR + DB1.KP_Head_Hold_Over;

 // PAR.Wed Planned Kill USR = PAR.Wed Planned Kill USR + DB1.KP Head
 PAR.Wed_Planned_Kill_USR = PAR.Wed_Planned_Kill_USR + DB1.KP_Planned_Kill;

 // IF PAR.CW Thu Date EQ DB1.KP Kill Date
 IF PAR.CW_Thu_Date = DB1.KP_Kill_Cut_Date;

 // PAR.KP Head = PAR.KP Head + DB1.KP Head
 PAR.KP_Planned_Kill = PAR.KP_Planned_Kill + DB1.KP_Planned_Kill;

 // PAR.thu Hold Over Head USR = PAR.thu Hold Over Head USR + DB1.KP Head Hold Over
 PAR.thu_Hold_Over_Head_USR = PAR.thu_Hold_Over_Head_USR + DB1.KP_Head_Hold_Over;

 // PAR.Thu Planned Kill USR = PAR.Thu Planned Kill USR + DB1.KP Head
 PAR.Thu_Planned_Kill_USR = PAR.Thu_Planned_Kill_USR + DB1.KP_Planned_Kill;

 // IF PAR.CW Fri Date EQ DB1.KP Kill Date
 IF PAR.CW_Fri_Date = DB1.KP_Kill_Cut_Date;

 // PAR.KP Head = PAR.KP Head + DB1.KP Head
 PAR.KP_Planned_Kill = PAR.KP_Planned_Kill + DB1.KP_Planned_Kill;

 // PAR.Fri Hold Over Head USR = PAR.Fri Hold Over Head USR + DB1.KP Head Hold Over
 PAR.Fri_Hold_Over_Head_USR = PAR.Fri_Hold_Over_Head_USR + DB1.KP_Head_Hold_Over;

 // PAR.Fri Planned Kill USR = PAR.Fri Planned Kill USR + DB1.KP Head
 PAR.Fri_Planned_Kill_USR = PAR.Fri_Planned_Kill_USR + DB1.KP_Planned_Kill;

 // IF PAR.CW Sat Date EQ DB1.KP Kill Date
 IF PAR.CW_Sat_Date = DB1.KP_Kill_Cut_Date;

 // PAR.KP Head = PAR.KP Head + DB1.KP Head
 PAR.KP_Planned_Kill = PAR.KP_Planned_Kill + DB1.KP_Planned_Kill;

 // PAR.sat Hold Over Head USR = PAR.sat Hold Over Head USR + DB1.KP Head Hold Over
 PAR.sat_Hold_Over_Head_USR = PAR.sat_Hold_Over_Head_USR + DB1.KP_Head_Hold_Over;

 // PAR.Sat Planned Kill USR = PAR.Sat Planned Kill USR + DB1.KP Head
 PAR.Sat_Planned_Kill_USR = PAR.Sat_Planned_Kill_USR + DB1.KP_Planned_Kill;

 // IF PAR.CW Sun Date EQ DB1.KP Kill Date
 IF PAR.CW_Sun_Date = DB1.KP_Kill_Cut_Date;

 // PAR.KP Head = PAR.KP Head + DB1.KP Head
 PAR.KP_Planned_Kill = PAR.KP_Planned_Kill + DB1.KP_Planned_Kill;

 // PAR.Sun Head Held Over USR = PAR.Sun Head Held Over USR + DB1.KP Head Hold Over
 PAR.Sun_Head_Held_Over_USR = PAR.Sun_Head_Held_Over_USR + DB1.KP_Head_Hold_Over;

 // PAR.Sun Planned Kill USR = PAR.Sun Planned Kill USR + DB1.KP Plan Head
 PAR.Sun_Planned_Kill_USR = PAR.Sun_Planned_Kill_USR + DB1.KP_Planned_Kill;

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 QUIT;

 ENDIF;

}


//?USER: Validate subfile record fields

//?Select Producer Location
CASE;

// IF PGM.*Cursor field <IS> RCD.PD Producer Code
IF PGM.*Cursor_field = RCD.PD_Producer_Code;

// OR PGM.*Cursor field <IS> RCD.PL Location Code
OR PGM.*Cursor_field = RCD.PL_Location_Code;

CASE;

// IF CTL.*CMD key is CF04
IF CTL.*CMD_key = '04';

CASE;

// IF RCD.PD Producer Code is Blank
IF RCD.PD_Producer_Code = *BLANK;

CASE;

// IF RCD.PL Location Code EQ WRK.Blank USR
IF RCD.PL_Location_Code = WRK.Blank_USR;

// Call program Zzz Producer Loc/PrPln SR.
CALL PROGRAM(Zzz Producer Loc/PrPln SR) ('PKQGSRR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);

// IF *OTHERWISE
IF *OTHERWISE;

// Send information message - 'Prompt Not Valid for this field'
MESSAGE(PRK0383 *INFO);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// Send information message - 'Prompt Not Valid for this field'
MESSAGE(PRK0383 *INFO);

ENDIF;

ENDIF;

ENDIF;

//?USER: Validate subfile record relations

//?5=Display Delivery Schedule
DO;

//?Mon Delivery Schedule
CASE;

// IF RCD.Mon *SFLSEL USR is Select Option 5
IF RCD.Mon_SFLSEL_USR = '5'/'5';

// Call program Zzz Delivery Schedule DF.
CALL PROGRAM(Zzz Delivery Schedule DF) ('PKAVDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Mon_Date);

ENDIF;

//?Tue Delivery Schedule
CASE;

// IF RCD.Tue *SFLSEL USR is Select Option 5
IF RCD.Tue_SFLSEL_USR = '5'/'5';

// Call program Zzz Delivery Schedule DF.
CALL PROGRAM(Zzz Delivery Schedule DF) ('PKAVDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Tue_Date);

ENDIF;

//?Wed Delivery Schedule
CASE;

// IF RCD.Wed *SFLSEL USR is Select Option 5
IF RCD.Wed_SFLSEL_USR = '5'/'5';

// Call program Zzz Delivery Schedule DF.
CALL PROGRAM(Zzz Delivery Schedule DF) ('PKAVDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Wed_Date);

ENDIF;

//?Thu Delivery Schedule
CASE;

// IF RCD.Thu *SFLSEL USR is Select Option 5
IF RCD.Thu_SFLSEL_USR = '5'/'5';

// Call program Zzz Delivery Schedule DF.
CALL PROGRAM(Zzz Delivery Schedule DF) ('PKAVDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Thu_Date);

ENDIF;

//?Fri Delivery Schedule
CASE;

// IF RCD.Fri *SFLSEL USR is Select Option 5
IF RCD.Fri_SFLSEL_USR = '5'/'5';

// Call program Zzz Delivery Schedule DF.
CALL PROGRAM(Zzz Delivery Schedule DF) ('PKAVDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Fri_Date);

ENDIF;

//?Sat Delivery Schedule
CASE;

// IF RCD.Sat *SFLSEL USR is Select Option 5
IF RCD.Sat_SFLSEL_USR = '5'/'5';

// Call program Zzz Delivery Schedule DF.
CALL PROGRAM(Zzz Delivery Schedule DF) ('PKAVDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Sat_Date);

ENDIF;

//?Sun Delivery Schedule
CASE;

// IF RCD.Sun *SFLSEL USR is Select Option 5
IF RCD.Sun_SFLSEL_USR = '5'/'5';

// Call program Zzz Delivery Schedule DF.
CALL PROGRAM(Zzz Delivery Schedule DF) ('PKAVDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Sun_Date);

ENDIF;

ENDDO;

//?7=Dsp Producer Location
DO;

CASE;

// IF RCD.Mon *SFLSEL USR is *Option 7 request
IF RCD.Mon_SFLSEL_USR = '7'/'7';

// OR RCD.Tue *SFLSEL USR is *Option 7 request
OR RCD.Tue_SFLSEL_USR = '7'/'7';

// OR RCD.Wed *SFLSEL USR is *Option 7 request
OR RCD.Wed_SFLSEL_USR = '7'/'7';

// OR RCD.Thu *SFLSEL USR is *Option 7 request
OR RCD.Thu_SFLSEL_USR = '7'/'7';

// OR RCD.Fri *SFLSEL USR is *Option 7 request
OR RCD.Fri_SFLSEL_USR = '7'/'7';

// OR RCD.Sat *SFLSEL USR is *Option 7 request
OR RCD.Sat_SFLSEL_USR = '7'/'7';

// OR RCD.Sun *SFLSEL USR is *Option 7 request
OR RCD.Sun_SFLSEL_USR = '7'/'7';

// Call program Dsp Producer History  DF.
CALL PROGRAM(Dsp Producer History  DF) ('PKRUDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

ENDIF;

ENDDO;

//?8=Work With Buy Orders
DO;

//?Mon Work With Buy Orders
CASE;

// IF RCD.Mon *SFLSEL USR is Select Option 8
IF RCD.Mon_SFLSEL_USR = '8'/'8';

CASE;

// IF RCD.PD Producer Code is Blank
IF RCD.PD_Producer_Code = *BLANK;

// OR RCD.PL Location Code is Blank
OR RCD.PL_Location_Code = *BLANK;

// Send error message - 'Producer and Location are required.'
ERROR(PRK0749);
MSGPARM(RCD.PD_Producer_Code);
MSGPARM(RCD.PL_Location_Code);
MSGPARM(RCD.Mon_SFLSEL_USR);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program ZzzProducer Buy Orders DF.
CALL PROGRAM(ZzzProducer Buy Orders DF) ('PKAMDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Mon_Date);
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PPP_Mon_Plan_Head);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Buy_Order_Copy_Sts_USR);

ENDIF;

ENDIF;

//?Tue Work With Buy Orders
CASE;

// IF RCD.Tue *SFLSEL USR is Select Option 8
IF RCD.Tue_SFLSEL_USR = '8'/'8';

CASE;

// IF RCD.PD Producer Code is Blank
IF RCD.PD_Producer_Code = *BLANK;

// OR RCD.PL Location Code is Blank
OR RCD.PL_Location_Code = *BLANK;

// Send error message - 'Producer and Location are required.'
ERROR(PRK0749);
MSGPARM(RCD.PD_Producer_Code);
MSGPARM(RCD.PL_Location_Code);
MSGPARM(RCD.Tue_SFLSEL_USR);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program ZzzProducer Buy Orders DF.
CALL PROGRAM(ZzzProducer Buy Orders DF) ('PKAMDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Tue_Date);
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PPP_Tue_Plan_Head);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Buy_Order_Copy_Sts_USR);

ENDIF;

ENDIF;

//?Wed Work With Buy Orders
CASE;

// IF RCD.Wed *SFLSEL USR is Select Option 8
IF RCD.Wed_SFLSEL_USR = '8'/'8';

CASE;

// IF RCD.PD Producer Code is Blank
IF RCD.PD_Producer_Code = *BLANK;

// OR RCD.PL Location Code is Blank
OR RCD.PL_Location_Code = *BLANK;

// Send error message - 'Producer and Location are required.'
ERROR(PRK0749);
MSGPARM(RCD.PD_Producer_Code);
MSGPARM(RCD.PL_Location_Code);
MSGPARM(RCD.Wed_SFLSEL_USR);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program ZzzProducer Buy Orders DF.
CALL PROGRAM(ZzzProducer Buy Orders DF) ('PKAMDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Wed_Date);
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PPP_Wed_Plan_Head);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Buy_Order_Copy_Sts_USR);

ENDIF;

ENDIF;

//?Thu Work With Buy Orders
CASE;

// IF RCD.Thu *SFLSEL USR is Select Option 8
IF RCD.Thu_SFLSEL_USR = '8'/'8';

CASE;

// IF RCD.PD Producer Code is Blank
IF RCD.PD_Producer_Code = *BLANK;

// OR RCD.PL Location Code is Blank
OR RCD.PL_Location_Code = *BLANK;

// Send error message - 'Producer and Location are required.'
ERROR(PRK0749);
MSGPARM(RCD.PD_Producer_Code);
MSGPARM(RCD.PL_Location_Code);
MSGPARM(RCD.Thu_SFLSEL_USR);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program ZzzProducer Buy Orders DF.
CALL PROGRAM(ZzzProducer Buy Orders DF) ('PKAMDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Thu_Date);
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PPP_Thu_Plan_Head);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Buy_Order_Copy_Sts_USR);

ENDIF;

ENDIF;

//?Fri Work With Buy Orders
CASE;

// IF RCD.Fri *SFLSEL USR is Select Option 8
IF RCD.Fri_SFLSEL_USR = '8'/'8';

CASE;

// IF RCD.PD Producer Code is Blank
IF RCD.PD_Producer_Code = *BLANK;

// OR RCD.PL Location Code is Blank
OR RCD.PL_Location_Code = *BLANK;

// Send error message - 'Producer and Location are required.'
ERROR(PRK0749);
MSGPARM(RCD.PD_Producer_Code);
MSGPARM(RCD.PL_Location_Code);
MSGPARM(RCD.Fri_SFLSEL_USR);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program ZzzProducer Buy Orders DF.
CALL PROGRAM(ZzzProducer Buy Orders DF) ('PKAMDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Fri_Date);
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PPP_Fri_Plan_Head);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Buy_Order_Copy_Sts_USR);

ENDIF;

ENDIF;

//?Sat Work With Buy Orders
CASE;

// IF RCD.Sat *SFLSEL USR is Select Option 8
IF RCD.Sat_SFLSEL_USR = '8'/'8';

CASE;

// IF RCD.PD Producer Code is Blank
IF RCD.PD_Producer_Code = *BLANK;

// OR RCD.PL Location Code is Blank
OR RCD.PL_Location_Code = *BLANK;

// Send error message - 'Producer and Location are required.'
ERROR(PRK0749);
MSGPARM(RCD.PD_Producer_Code);
MSGPARM(RCD.PL_Location_Code);
MSGPARM(RCD.Sat_SFLSEL_USR);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program ZzzProducer Buy Orders DF.
CALL PROGRAM(ZzzProducer Buy Orders DF) ('PKAMDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Sat_Date);
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PPP_Sat_Plan_Head);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Buy_Order_Copy_Sts_USR);

ENDIF;

ENDIF;

//?Sun Work With Buy Orders
CASE;

// IF RCD.Sun *SFLSEL USR is Select Option 8
IF RCD.Sun_SFLSEL_USR = '8'/'8';

CASE;

// IF RCD.PD Producer Code is Blank
IF RCD.PD_Producer_Code = *BLANK;

// OR RCD.PL Location Code is Blank
OR RCD.PL_Location_Code = *BLANK;

// Send error message - 'Producer and Location are required.'
ERROR(PRK0749);
MSGPARM(RCD.PD_Producer_Code);
MSGPARM(RCD.PL_Location_Code);
MSGPARM(RCD.Sun_SFLSEL_USR);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program ZzzProducer Buy Orders DF.
CALL PROGRAM(ZzzProducer Buy Orders DF) ('PKAMDFR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(CTL.CW_Sun_Date);
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PPP_Sun_Plan_Head);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Buy_Order_Copy_Sts_USR);

ENDIF;

ENDIF;

//?Load Planned Head after Copy
CASE;

// IF PAR.Buy Order Copy Sts USR is *Yes
IF PAR.Buy_Order_Copy_Sts_USR = *YES;

EXECUTE FUNCTION(Rtv Head Planned      RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1155175;
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(CTL.CW_Mon_Date);
PARAMETER(RCD.PPP_Mon_Plan_Head);
{
 //?USER: Initialize routine

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.Head_BO_USR = *ZERO;

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Head Delv Plan    RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1155176;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(PAR.Buy_Order_Head_Total_USR);
 {
  //?USER: Initialize routine

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Buy_Order_Head_Total_USR = *ZERO;

  //?USER: Process Data record

  // PAR.Buy Order Head Total  USR = PAR.Buy Order Head Total  USR + DB1.BOL Pln Head Delv
  PAR.Buy_Order_Head_Total_USR = PAR.Buy_Order_Head_Total_USR + DB1.BOL_Pln_Head_Delv;

 }

 // PAR.Head BO USR = PAR.Head BO USR + PAR.Buy Order Head Total  USR
 PAR.Head_BO_USR = PAR.Head_BO_USR + PAR.Buy_Order_Head_Total_USR;

}


EXECUTE FUNCTION(Rtv Head Planned      RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1155175;
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(CTL.CW_Tue_Date);
PARAMETER(RCD.PPP_Tue_Plan_Head);
{
 //?USER: Initialize routine

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.Head_BO_USR = *ZERO;

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Head Delv Plan    RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1155176;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(PAR.Buy_Order_Head_Total_USR);
 {
  //?USER: Initialize routine

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Buy_Order_Head_Total_USR = *ZERO;

  //?USER: Process Data record

  // PAR.Buy Order Head Total  USR = PAR.Buy Order Head Total  USR + DB1.BOL Pln Head Delv
  PAR.Buy_Order_Head_Total_USR = PAR.Buy_Order_Head_Total_USR + DB1.BOL_Pln_Head_Delv;

 }

 // PAR.Head BO USR = PAR.Head BO USR + PAR.Buy Order Head Total  USR
 PAR.Head_BO_USR = PAR.Head_BO_USR + PAR.Buy_Order_Head_Total_USR;

}


EXECUTE FUNCTION(Rtv Head Planned      RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1155175;
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(CTL.CW_Wed_Date);
PARAMETER(RCD.PPP_Wed_Plan_Head);
{
 //?USER: Initialize routine

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.Head_BO_USR = *ZERO;

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Head Delv Plan    RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1155176;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(PAR.Buy_Order_Head_Total_USR);
 {
  //?USER: Initialize routine

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Buy_Order_Head_Total_USR = *ZERO;

  //?USER: Process Data record

  // PAR.Buy Order Head Total  USR = PAR.Buy Order Head Total  USR + DB1.BOL Pln Head Delv
  PAR.Buy_Order_Head_Total_USR = PAR.Buy_Order_Head_Total_USR + DB1.BOL_Pln_Head_Delv;

 }

 // PAR.Head BO USR = PAR.Head BO USR + PAR.Buy Order Head Total  USR
 PAR.Head_BO_USR = PAR.Head_BO_USR + PAR.Buy_Order_Head_Total_USR;

}


EXECUTE FUNCTION(Rtv Head Planned      RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1155175;
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(CTL.CW_Thu_Date);
PARAMETER(RCD.PPP_Thu_Plan_Head);
{
 //?USER: Initialize routine

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.Head_BO_USR = *ZERO;

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Head Delv Plan    RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1155176;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(PAR.Buy_Order_Head_Total_USR);
 {
  //?USER: Initialize routine

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Buy_Order_Head_Total_USR = *ZERO;

  //?USER: Process Data record

  // PAR.Buy Order Head Total  USR = PAR.Buy Order Head Total  USR + DB1.BOL Pln Head Delv
  PAR.Buy_Order_Head_Total_USR = PAR.Buy_Order_Head_Total_USR + DB1.BOL_Pln_Head_Delv;

 }

 // PAR.Head BO USR = PAR.Head BO USR + PAR.Buy Order Head Total  USR
 PAR.Head_BO_USR = PAR.Head_BO_USR + PAR.Buy_Order_Head_Total_USR;

}


EXECUTE FUNCTION(Rtv Head Planned      RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1155175;
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(CTL.CW_Fri_Date);
PARAMETER(RCD.PPP_Fri_Plan_Head);
{
 //?USER: Initialize routine

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.Head_BO_USR = *ZERO;

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Head Delv Plan    RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1155176;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(PAR.Buy_Order_Head_Total_USR);
 {
  //?USER: Initialize routine

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Buy_Order_Head_Total_USR = *ZERO;

  //?USER: Process Data record

  // PAR.Buy Order Head Total  USR = PAR.Buy Order Head Total  USR + DB1.BOL Pln Head Delv
  PAR.Buy_Order_Head_Total_USR = PAR.Buy_Order_Head_Total_USR + DB1.BOL_Pln_Head_Delv;

 }

 // PAR.Head BO USR = PAR.Head BO USR + PAR.Buy Order Head Total  USR
 PAR.Head_BO_USR = PAR.Head_BO_USR + PAR.Buy_Order_Head_Total_USR;

}


EXECUTE FUNCTION(Rtv Head Planned      RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1155175;
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(CTL.CW_Sat_Date);
PARAMETER(RCD.PPP_Sat_Plan_Head);
{
 //?USER: Initialize routine

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.Head_BO_USR = *ZERO;

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Head Delv Plan    RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1155176;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(PAR.Buy_Order_Head_Total_USR);
 {
  //?USER: Initialize routine

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Buy_Order_Head_Total_USR = *ZERO;

  //?USER: Process Data record

  // PAR.Buy Order Head Total  USR = PAR.Buy Order Head Total  USR + DB1.BOL Pln Head Delv
  PAR.Buy_Order_Head_Total_USR = PAR.Buy_Order_Head_Total_USR + DB1.BOL_Pln_Head_Delv;

 }

 // PAR.Head BO USR = PAR.Head BO USR + PAR.Buy Order Head Total  USR
 PAR.Head_BO_USR = PAR.Head_BO_USR + PAR.Buy_Order_Head_Total_USR;

}


EXECUTE FUNCTION(Rtv Head Planned      RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1155175;
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(CTL.CW_Sun_Date);
PARAMETER(RCD.PPP_Sun_Plan_Head);
{
 //?USER: Initialize routine

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.Head_BO_USR = *ZERO;

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Head Delv Plan    RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1155176;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(PAR.Buy_Order_Head_Total_USR);
 {
  //?USER: Initialize routine

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Buy_Order_Head_Total_USR = *ZERO;

  //?USER: Process Data record

  // PAR.Buy Order Head Total  USR = PAR.Buy Order Head Total  USR + DB1.BOL Pln Head Delv
  PAR.Buy_Order_Head_Total_USR = PAR.Buy_Order_Head_Total_USR + DB1.BOL_Pln_Head_Delv;

 }

 // PAR.Head BO USR = PAR.Head BO USR + PAR.Buy Order Head Total  USR
 PAR.Head_BO_USR = PAR.Head_BO_USR + PAR.Buy_Order_Head_Total_USR;

}


// PAR.Buy Order Copy Sts USR = CND.*No
PAR.Buy_Order_Copy_Sts_USR = *NO;

ENDIF;

ENDDO;

//?9=Edit Standard Delivery Schedule
DO;

CASE;

// IF RCD.Mon *SFLSEL USR is *Option 9 (Reusable)
IF RCD.Mon_SFLSEL_USR = '9';

// OR RCD.Tue *SFLSEL USR is *Option 9 (Reusable)
OR RCD.Tue_SFLSEL_USR = '9';

// OR RCD.Wed *SFLSEL USR is *Option 9 (Reusable)
OR RCD.Wed_SFLSEL_USR = '9';

// OR RCD.Thu *SFLSEL USR is *Option 9 (Reusable)
OR RCD.Thu_SFLSEL_USR = '9';

// OR RCD.Fri *SFLSEL USR is *Option 9 (Reusable)
OR RCD.Fri_SFLSEL_USR = '9';

// OR RCD.Sat *SFLSEL USR is *Option 9 (Reusable)
OR RCD.Sat_SFLSEL_USR = '9';

// OR RCD.Sun *SFLSEL USR is *Option 9 (Reusable)
OR RCD.Sun_SFLSEL_USR = '9';

// Call program Edt Std Delv Sched    EF.
CALL PROGRAM(Edt Std Delv Sched    EF) ('PKAEEFR');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);

ENDIF;

ENDDO;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

//?CALC: Subfile record function fields

CTL.Mon_Head_SUM = SUM(RCD.PPP_Mon_Plan_Head);

CTL.Tue_Head_SUM = SUM(RCD.PPP_Tue_Plan_Head);

CTL.Wed_Head_SUM = SUM(RCD.PPP_Wed_Plan_Head);

CTL.Thu_Head_SUM = SUM(RCD.PPP_Thu_Plan_Head);

CTL.Fri_Head_SUM = SUM(RCD.PPP_Fri_Plan_Head);

CTL.Sat_Head_SUM = SUM(RCD.PPP_Sat_Plan_Head);

CTL.Sun_Head_SUM = SUM(RCD.PPP_Sun_Plan_Head);

//?CALC: Header function fields

//?Add Hold Over Hogs
CTL.Mon_Head_SUM = SUM(CTL.Mon_Hold_Over_Head_USR);

CTL.Tue_Head_SUM = SUM(CTL.tue_Hold_Over_Head_USR);

CTL.Wed_Head_SUM = SUM(CTL.wed_Hold_Over_Head_USR);

CTL.Thu_Head_SUM = SUM(CTL.thu_Hold_Over_Head_USR);

CTL.Fri_Head_SUM = SUM(CTL.Fri_Hold_Over_Head_USR);

CTL.Sat_Head_SUM = SUM(CTL.sat_Hold_Over_Head_USR);

CTL.Sun_Head_SUM = SUM(CTL.Sun_Head_Held_Over_USR);

//?Add Mon total to week total
CTL.Week_Head_SUM = SUM(CTL.Mon_Head_SUM);

//?Add Tue total to week total
CTL.Week_Head_SUM = SUM(CTL.Tue_Head_SUM);

//?Add Wed total to week total
CTL.Week_Head_SUM = SUM(CTL.Wed_Head_SUM);

//?Add Thu total to week total
CTL.Week_Head_SUM = SUM(CTL.Thu_Head_SUM);

//?Add Fri total to week total
CTL.Week_Head_SUM = SUM(CTL.Fri_Head_SUM);

//?Add Sat total to week total
CTL.Week_Head_SUM = SUM(CTL.Sat_Head_SUM);

//?Add Sun total to week total
CTL.Week_Head_SUM = SUM(CTL.Sun_Head_SUM);

EXECUTE FUNCTION(Surplus/Shortage DRV) TYPE(DRVFLD)                             AB1100490;
PARAMETER(CTL.Surplus_Shortage_DRV);
PARAMETER(CTL.Week_Head_SUM);
PARAMETER(CTL.Planned_Kill_USR);
{
 //?Calculate derived field

 // PAR.Surplus/Shortage DRV = PAR.Purch Pln Head Owned - PAR.Planned Kill USR
 PAR.Surplus_Shortage_DRV = PAR.PPWS_Plan_Head - PAR.Planned_Kill_USR;

}


EXECUTE FUNCTION(Mon Surplus/Shortage DRV) TYPE(DRVFLD)                         AB1111328;
PARAMETER(CTL.Mon_Surplus_Shortage_DRV);
PARAMETER(CTL.Mon_Planned_Kill_USR);
PARAMETER(CTL.Mon_Head_SUM);
{
 //?Calculate derived field

 // PAR.Mon Surplus/Shortage DRV = PAR.Mon Head SUM - PAR.Mon Planned Kill USR
 PAR.Mon_Surplus_Shortage_DRV = PAR.Mon_Head_SUM - PAR.Mon_Planned_Kill_USR;

}


EXECUTE FUNCTION(Tue Surplus/Shortage DRV) TYPE(DRVFLD)                         AB1111329;
PARAMETER(CTL.Tue_Surplus_Shortage_DRV);
PARAMETER(CTL.Tue_Planned_Kill_USR);
PARAMETER(CTL.Tue_Head_SUM);
{
 //?Calculate derived field

 // PAR.Tue Surplus/Shortage DRV = PAR.Tue Head SUM - PAR.Tue Planned Kill USR
 PAR.Tue_Surplus_Shortage_DRV = PAR.Tue_Head_SUM - PAR.Tue_Planned_Kill_USR;

}


EXECUTE FUNCTION(Wed Surplus/Shortage DRV) TYPE(DRVFLD)                         AB1111330;
PARAMETER(CTL.Wed_Surplus_Shortage_DRV);
PARAMETER(CTL.Wed_Planned_Kill_USR);
PARAMETER(CTL.Wed_Head_SUM);
{
 //?Calculate derived field

 // PAR.Wed Surplus/Shortage DRV = PAR.Wed Head SUM - PAR.Wed Planned Kill USR
 PAR.Wed_Surplus_Shortage_DRV = PAR.Wed_Head_SUM - PAR.Wed_Planned_Kill_USR;

}


EXECUTE FUNCTION(Thu Surplus/Shortage DRV) TYPE(DRVFLD)                         AB1111331;
PARAMETER(CTL.Thu_Surplus_Shortage_DRV);
PARAMETER(CTL.Thu_Planned_Kill_USR);
PARAMETER(CTL.Thu_Head_SUM);
{
 //?Calculate derived field

 // PAR.Thu Surplus/Shortage DRV = PAR.Thu Head SUM - PAR.Thu Planned Kill USR
 PAR.Thu_Surplus_Shortage_DRV = PAR.Thu_Head_SUM - PAR.Thu_Planned_Kill_USR;

}


EXECUTE FUNCTION(Fri Surplus/Shortage DRV) TYPE(DRVFLD)                         AB1111332;
PARAMETER(CTL.Fri_Surplus_Shortage_DRV);
PARAMETER(CTL.Fri_Planned_Kill_USR);
PARAMETER(CTL.Fri_Head_SUM);
{
 //?Calculate derived field

 // PAR.Fri Surplus/Shortage DRV = PAR.Fri Head SUM - PAR.Fri Planned Kill USR
 PAR.Fri_Surplus_Shortage_DRV = PAR.Fri_Head_SUM - PAR.Fri_Planned_Kill_USR;

}


EXECUTE FUNCTION(Sat Surplus/Shortage DRV) TYPE(DRVFLD)                         AB1111333;
PARAMETER(CTL.Sat_Surplus_Shortage_DRV);
PARAMETER(CTL.Sat_Planned_Kill_USR);
PARAMETER(CTL.Sat_Head_SUM);
{
 //?Calculate derived field

 // PAR.Sat Surplus/Shortage DRV = PAR.Sat Head SUM - PAR.Sat Planned Kill USR
 PAR.Sat_Surplus_Shortage_DRV = PAR.Sat_Head_SUM - PAR.Sat_Planned_Kill_USR;

}


EXECUTE FUNCTION(Sun Surplus/Shortage DRV) TYPE(DRVFLD)                         AB1113170;
PARAMETER(CTL.Sun_Surplus_Shortage_DRV);
PARAMETER(CTL.Sun_Planned_Kill_USR);
PARAMETER(CTL.Sun_Head_SUM);
{
 //?Calculate derived field

 // PAR.Sun Surplus/Shortage DRV = PAR.Sun Head SUM - PAR.Sun Planned Kill USR
 PAR.Sun_Surplus_Shortage_DRV = PAR.Sun_Head_SUM - PAR.Sun_Planned_Kill_USR;

}


//?USER: Create header DBF record

EXECUTE FUNCTION(Crt Purchase Plan Wk  CR) TYPE(CRTOBJ) FILE(PKAUCPP)           AB1100447;
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(CTL.CW_Year);
PARAMETER(CTL.CW_Week_Number);
PARAMETER(CTL.PPWS_Head_Est);
PARAMETER(CTL.Week_Head_SUM);
PARAMETER(CTL.PPWS_Sts);
PARAMETER(CTL.RS_User_Changed);
PARAMETER(CTL.RS_Date_Changed);
PARAMETER(CTL.RS_Time_Changed);
PARAMETER(CTL.RS_Record_Status);
PARAMETER(CTL.RS_Job);
PARAMETER(CTL.RS_Program);
PARAMETER(CTL.RS_User_Added);
PARAMETER(CTL.RS_Date_Added);
PARAMETER(CTL.RS_Time_Added);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


//?USER: Change header DBF record

EXECUTE FUNCTION(Chg Purchase Plan Wk  CH) TYPE(CHGOBJ) FILE(PKAUCPP)           AB1100448;
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(CTL.CW_Year);
PARAMETER(CTL.CW_Week_Number);
PARAMETER(CTL.PPWS_Head_Est);
PARAMETER(CTL.Week_Head_SUM);
PARAMETER(CTL.PPWS_Sts);
PARAMETER(CTL.RS_User_Changed);
PARAMETER(CTL.RS_Date_Changed);
PARAMETER(CTL.RS_Time_Changed);
PARAMETER(CTL.RS_Record_Status);
PARAMETER(CTL.RS_Job);
PARAMETER(CTL.RS_Program);
PARAMETER(CTL.RS_User_Added);
PARAMETER(CTL.RS_Date_Added);
PARAMETER(CTL.RS_Time_Added);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


//?USER: Change detail DBF record

EXECUTE FUNCTION(Delete Run Log Header) TYPE(CHGOBJ) FILE(PKAVCPP)              AA1100471;
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PPP_Week_Head_Est);
PARAMETER(RCD.PPP_Mon_Head_Est);
PARAMETER(RCD.PPP_Mon_Plan_Head);
PARAMETER(RCD.PPP_Tue_Head_Est);
PARAMETER(RCD.PPP_Tue_Plan_Head);
PARAMETER(RCD.PPP_Wed_Head_Est);
PARAMETER(RCD.PPP_Wed_Plan_Head);
PARAMETER(RCD.PPP_Thu_Head_Est);
PARAMETER(RCD.PPP_Thu_Plan_Head);
PARAMETER(RCD.PPP_Fri_Head_Est);
PARAMETER(RCD.PPP_Fri_Plan_Head);
PARAMETER(RCD.PPP_Sat_Head_Est);
PARAMETER(RCD.PPP_Sat_Plan_Head);
PARAMETER(RCD.PPP_Sun_Head_Est);
PARAMETER(RCD.PPP_Sun_Plan_Head);
PARAMETER(RCD.RS_User_Changed);
PARAMETER(RCD.RS_Date_Changed);
PARAMETER(RCD.RS_Time_Changed);
PARAMETER(RCD.RS_Record_Status);
PARAMETER(RCD.RS_Job);
PARAMETER(RCD.RS_Program);
PARAMETER(RCD.RS_User_Added);
PARAMETER(RCD.RS_Date_Added);
PARAMETER(RCD.RS_Time_Added);

//?USER: Create detail DBF record

EXECUTE FUNCTION(Chg Run Log Header    CH) TYPE(CRTOBJ) FILE(PKAVCPP)           AA1100470;
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(CTL.CW_Year);
PARAMETER(CTL.CW_Week_Number);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.PPP_Week_Head_Est);
PARAMETER(RCD.PPP_Mon_Head_Est);
PARAMETER(RCD.PPP_Mon_Plan_Head);
PARAMETER(RCD.PPP_Tue_Head_Est);
PARAMETER(RCD.PPP_Tue_Plan_Head);
PARAMETER(RCD.PPP_Wed_Head_Est);
PARAMETER(RCD.PPP_Wed_Plan_Head);
PARAMETER(RCD.PPP_Thu_Head_Est);
PARAMETER(RCD.PPP_Thu_Plan_Head);
PARAMETER(RCD.PPP_Fri_Head_Est);
PARAMETER(RCD.PPP_Fri_Plan_Head);
PARAMETER(RCD.PPP_Sat_Head_Est);
PARAMETER(RCD.PPP_Sat_Plan_Head);
PARAMETER(RCD.PPP_Sun_Head_Est);
PARAMETER(RCD.PPP_Sun_Plan_Head);
PARAMETER(RCD.RS_User_Changed);
PARAMETER(RCD.RS_Date_Changed);
PARAMETER(RCD.RS_Time_Changed);
PARAMETER(RCD.RS_Record_Status);
PARAMETER(RCD.RS_Job);
PARAMETER(RCD.RS_Program);
PARAMETER(RCD.RS_User_Added);
PARAMETER(RCD.RS_Date_Added);
PARAMETER(RCD.RS_Time_Added);

//?USER: Process command keys

//?CMD Key 14:  Display Weekly Summary
CASE;

// IF CTL.*CMD key is CF14
IF CTL.*CMD_key = '14';

EXECUTE FUNCTION(Rtv Week Nbr f/ a Dte RT) TYPE(RTVOBJ) FILE(PKCFREP)           AB1127384;
PARAMETER(WRK.CW_Year);
PARAMETER(WRK.CW_Week_Number);
PARAMETER(JOB.*Job_date);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// Call program Dsp Weekly Summary    DF.
CALL PROGRAM(Dsp Weekly Summary    DF) ('PKAQDFR');
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(WRK.CW_Year);
PARAMETER(WRK.CW_Week_Number);
PARAMETER(CTL.CW_Week_Start_Date);
PARAMETER(CTL.CW_Week_End_Date);

ENDIF;

//?CMD Key 15:  Display Producers
CASE;

// IF CTL.*CMD key is CF15
IF CTL.*CMD_key = '15';

// Call program Dsp Producers         DF.
CALL PROGRAM(Dsp Producers         DF) ('PKLMDFR');
PARAMETER(WRK.Blank_USR);
PARAMETER(PAR.Oms_System_Value_Alpha);

ENDIF;

// PGM.*Continue transaction = CND.*NO
PGM.*Continue_transaction = 'N';

QUIT;

