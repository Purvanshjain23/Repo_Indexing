// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMTYXFR
// ?Date: 14.08.2025 Time: 03:44:06
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?04/08/08
//?Recalc FOB Gross for sales since 9/23/07 which was when the TFs
//? were recalculated.  The FOB gross s/have been recalcd at that time'
//?DO FOR 360 / 960 THEN CHANGE AND DO FOR 363/364 IN DPMFLIB
EXECUTE FUNCTION(CNV Fob Gross 2008    RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC1876773;
PARAMETER(363);
PARAMETER(1070923);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Order Type - Sales is Regular Order
 IF DB1.Order_Type_Sales = 'OR';

 // OR DB1.Order Type - Sales is Debit Memo DB
 OR DB1.Order_Type_Sales = 'DB';

 // OR DB1.Order Type - Sales is Credit Memo CB
 OR DB1.Order_Type_Sales = 'CB';

 //?Retrieve Freight Overage from Ship Pricing Detail
 EXECUTE FUNCTION(RTV Freight Overage    RT) TYPE(RTVOBJ) FILE(PDIMCPP)          AC1388024;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER('CFRTOV');
 PARAMETER(WRK.Componant_Price);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Calculate Pricing Freight Overage
 // WRK.*Synon (15,5) work field = WRK.Componant Price / CON.100 *Rounded
 WRK.*Synon_155_work_field = WRK.Componant_Price / 100 'H';

 // WRK.Componant Price = DB1.Weight Billed * WRK.*Synon (15,5) work field *Rounded
 WRK.Componant_Price = DB1.Weight_Billed * WRK.*Synon_155_work_field 'H';

 //?Calculate FOB Gross Amount - subtract Absorbed freight
 // LCL.FOB Gross Amount = DB1.Extended Amount - DB1.Absorbed Freight Amount
 LCL.FOB_Gross_Amount = DB1.Extended_Amount - DB1.Absorbed_Freight_Amount;

 //?Calculate FOB Gross Amount - subtract freight overage
 // LCL.FOB Gross Amount = LCL.FOB Gross Amount - WRK.Componant Price
 LCL.FOB_Gross_Amount = LCL.FOB_Gross_Amount - WRK.Componant_Price;

 //?Calculate FOB Gross Amount - subtract freight financials?? 0 here ??
 //?Calculate FOB Gross Amount - subtract customer accruals    10/12/00
 // LCL.FOB Gross Amount = LCL.FOB Gross Amount - DB1.Ledgrd Trd Fund Accrl Amt
 LCL.FOB_Gross_Amount = LCL.FOB_Gross_Amount - DB1.Ledgrd_Trd_Fund_Accrl_Amt;

 CASE;

 // IF LCL.FOB Gross Amount NE DB1.FOB Gross Amount
 IF LCL.FOB_Gross_Amount <> DB1.FOB_Gross_Amount;

 EXECUTE FUNCTION(CHG FOB & Std Ovrg     CH) TYPE(CHGOBJ) FILE(OMHSTPP)          AC1388606;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(LCL.FOB_Gross_Amount);
 PARAMETER(DB1.Standard_Overage_Amount);
 {
  //?USER: Processing after Data read

  // DB1.Data Mart Process Sts = CND.no
  DB1.Data_Mart_Process_Sts = 'N';

  // DB1.Process Sts for 3C = CND.No
  DB1.Process_Sts_for_3C = 'N';

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

}


EXECUTE FUNCTION(CNV Fob Gross 2008    RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC1876773;
PARAMETER(364);
PARAMETER(1070923);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Order Type - Sales is Regular Order
 IF DB1.Order_Type_Sales = 'OR';

 // OR DB1.Order Type - Sales is Debit Memo DB
 OR DB1.Order_Type_Sales = 'DB';

 // OR DB1.Order Type - Sales is Credit Memo CB
 OR DB1.Order_Type_Sales = 'CB';

 //?Retrieve Freight Overage from Ship Pricing Detail
 EXECUTE FUNCTION(RTV Freight Overage    RT) TYPE(RTVOBJ) FILE(PDIMCPP)          AC1388024;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER('CFRTOV');
 PARAMETER(WRK.Componant_Price);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Calculate Pricing Freight Overage
 // WRK.*Synon (15,5) work field = WRK.Componant Price / CON.100 *Rounded
 WRK.*Synon_155_work_field = WRK.Componant_Price / 100 'H';

 // WRK.Componant Price = DB1.Weight Billed * WRK.*Synon (15,5) work field *Rounded
 WRK.Componant_Price = DB1.Weight_Billed * WRK.*Synon_155_work_field 'H';

 //?Calculate FOB Gross Amount - subtract Absorbed freight
 // LCL.FOB Gross Amount = DB1.Extended Amount - DB1.Absorbed Freight Amount
 LCL.FOB_Gross_Amount = DB1.Extended_Amount - DB1.Absorbed_Freight_Amount;

 //?Calculate FOB Gross Amount - subtract freight overage
 // LCL.FOB Gross Amount = LCL.FOB Gross Amount - WRK.Componant Price
 LCL.FOB_Gross_Amount = LCL.FOB_Gross_Amount - WRK.Componant_Price;

 //?Calculate FOB Gross Amount - subtract freight financials?? 0 here ??
 //?Calculate FOB Gross Amount - subtract customer accruals    10/12/00
 // LCL.FOB Gross Amount = LCL.FOB Gross Amount - DB1.Ledgrd Trd Fund Accrl Amt
 LCL.FOB_Gross_Amount = LCL.FOB_Gross_Amount - DB1.Ledgrd_Trd_Fund_Accrl_Amt;

 CASE;

 // IF LCL.FOB Gross Amount NE DB1.FOB Gross Amount
 IF LCL.FOB_Gross_Amount <> DB1.FOB_Gross_Amount;

 EXECUTE FUNCTION(CHG FOB & Std Ovrg     CH) TYPE(CHGOBJ) FILE(OMHSTPP)          AC1388606;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(LCL.FOB_Gross_Amount);
 PARAMETER(DB1.Standard_Overage_Amount);
 {
  //?USER: Processing after Data read

  // DB1.Data Mart Process Sts = CND.no
  DB1.Data_Mart_Process_Sts = 'N';

  // DB1.Process Sts for 3C = CND.No
  DB1.Process_Sts_for_3C = 'N';

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

}


