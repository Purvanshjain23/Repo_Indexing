// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDPHDFR
// ?Date: 14.08.2025 Time: 03:29:11
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?***** Change Log and Comments
DO;

//?041625 SG S020798 Passed parameter to PDJ1UPR as N
//?041805 slm OMS012A Added new validation rules on when the user
//?           is allowed to select the option
//?071106 slm Allow the Completed Deb/Crdd to use the 7=details
//?           also allow the Cancel
//?** FT299 LJB 04/18/2007
//?** For printing Acknowledgements, if the user does not have
//?** multi-warehouse authority, then restrict to the user profile whse
//?** DLY029 RMC 09/20/07
//?** In post-confirm, post memo, display print options prompt
//?  and user quit if F3. this way it wont be displayed from the cl
//?   after some updating has already occurred.
//?** FT133 LJB 11/02/2007
//?** Allow Credit to work with Memos, however, do not allow to
//?** edit, post, update, or change the memos
//?** Per Aubri, default print hold and save initial values to *YES
//?** then only display print option window once per option to post
//?031413 slm e2176 Final process will use the pmt screen to allow
//?the user to select to email the ack to the warehouse
//?The OPTION 10 do not select the email on ack         '
//?due to user is not being allowed to select to do so or not
//?E4057 JJH 04/27/15 - Price Credit Memo Fixes
//?- Pass in new parm: Attach to Order Number to Post Credit/Debit
//?  IF - Order Header TRG
//?E4057 JJH 07/08/15 - Additional Modifications
//?- Change the title from Memo Number to Order Number in CTL
//?P16169 RMC 12/01/2020 ADDED F5 REFRESH, SUBMIT MEMO POST IN PDIPSUPR
//?  FOR ONE MEMO LIKE IT DOES WHEN THE INVOICE IS 0
ENDDO;

//?Set Application Code by Billing Type input parm
CASE;

// IF PAR.Billing Activity Type is Credit Memo
IF PAR.Billing_Activity_Type = '2';

// PAR.Application Code = CND.Credit Memos
PAR.Application_Code = 'C/M';

//?Set Application Code by Billing Type input parm
// IF PAR.Billing Activity Type is Debit Memo
IF PAR.Billing_Activity_Type = '3';

// PAR.Application Code = CND.Debit Memos
PAR.Application_Code = 'D/M';

//?Set Application Code by Billing Type input parm
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Application Code = CND.Memo Processing
PAR.Application_Code = 'MEMO';

ENDIF;

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER(PAR.Application_Code);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PAR.First Time Flag = CND.Yes
PAR.First_Time_Flag = 'Y';

//?** Set default options             FT133 LJB 11/06/2007
// PAR.Status - Y or N = CND.no
PAR.Status_Y_or_N = 'N';

// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// PAR.PRT Number of Copies = CON.1
PAR.PRT_Number_of_Copies = 1;

// PAR.PRT Hold Output Sts = CND.*YES
PAR.PRT_Hold_Output_Sts = *YES;

// PAR.PRT Save Output Sts = CND.*YES
PAR.PRT_Save_Output_Sts = *YES;

EXECUTE FUNCTION(Rtv Profile Model     RT) TYPE(RTVOBJ) FILE(CADRREP)           AC1445577;
PARAMETER(JOB.*USER);
PARAMETER(LCL.User_Code_Model);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Allow Multi-Whs   RT) TYPE(RTVOBJ) FILE(CADRREP)           AC1512192;
PARAMETER(JOB.*USER);
PARAMETER(WRK.Allow_Multi_Warehouse);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Initialize subfile control

CASE;

// IF PAR.First Time Flag is Yes
IF PAR.First_Time_Flag = 'Y';

// CTL.Company Number = PAR.Company Number
CTL.Company_Number = PAR.Company_Number;

//?Set up Description
CASE;

// IF PAR.Billing Activity Type is Credit Memo
IF PAR.Billing_Activity_Type = '2';

// CTL.Description = CON.*** Credit Memos Only ***
CTL.Description = '*** Credit Memos Only ***';

//?Set up Description
// IF PAR.Billing Activity Type is Debit Memo
IF PAR.Billing_Activity_Type = '3';

// CTL.Description = CON.*** Debit Memos Only ***
CTL.Description = '*** Debit Memos Only ***';

//?Set up Description
// IF *OTHERWISE
IF *OTHERWISE;

// CTL.Description = CON.*BLANK
CTL.Description = *BLANK;

ENDIF;

// PAR.First Time Flag = CND.NO
PAR.First_Time_Flag = 'N';

ENDIF;

//?USER: Initialize subfile record from DBF record

//?Billing Type exclusion
CASE;

// IF PAR.Billing Activity Type EQ WRK.BLANK
IF PAR.Billing_Activity_Type = WRK.BLANK;

//?Exclude invoice/transfer types
CASE;

// IF DB1.Billing Activity Type is Invoice or Transfer
IF DB1.Billing_Activity_Type = '1'/'4';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Billing Type exclusion
// IF *OTHERWISE
IF *OTHERWISE;

//?Match passed billing activity type
CASE;

// IF DB1.Billing Activity Type NE PAR.Billing Activity Type
IF DB1.Billing_Activity_Type <> PAR.Billing_Activity_Type;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Match to CTL company (if any)
CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

//?Exclude if no match to existing CTL company
CASE;

// IF CTL.Company Number is not equal to zero
IF CTL.Company_Number <> *ZERO;

CASE;

// IF DB1.Company Number NE CTL.Company Number
IF DB1.Company_Number <> CTL.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

ENDIF;

//?Skip cancelled memos
CASE;

// IF DB1.Header Status is Cancelled
IF DB1.Header_Status = 'X';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** 11/02/2007 FT133 LJB Don't restrict Credit to debit memos only
//?USER: Process subfile control (Pre-confirm)

//?Select on Company Name
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.Company Number
AND PGM.*Cursor_field = CTL.Company_Number;

// Call program SEL Company - plants   SR.
CALL PROGRAM(SEL Company - plants   SR) ('PPF2SRR');
PARAMETER(CTL.Company_Number);

ENDIF;

//?Select on Shipped to Customer
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.Ship To Customer
AND PGM.*Cursor_field = CTL.Ship_To_Customer;

// Call program SEL Cust/ShpTo Flag 'Y'SR.
CALL PROGRAM(SEL Cust/ShpTo Flag 'Y'SR) ('PDYSSRR');
PARAMETER(CTL.Ship_To_Customer);

ENDIF;

CASE;

// IF CTL.*CMD key is *Refresh
IF CTL.*CMD_key = '05';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.*SFLSEL is *Edit
IF RCD.*SFLSEL = '2'/'2';

//?Edit Memo.
DO;

CASE;

// IF RCD.Header Status is Confirmed & Complete
IF RCD.Header_Status = 'C'/'R';

// Send error message - 'Memo has been Posted; Cannot process'
ERROR(USR2081);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

//?Edit Memo.
DO;

//?** Do not allow Credit to edit memos               FT133 LJB
CASE;

// IF LCL.User Code Model is Credit
IF LCL.User_Code_Model = 'PORKCRDT';

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

QUIT;

//?** Do not allow Credit to edit memos               FT133 LJB
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(CHG Reset Order in Use CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1317222;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER('Y');
{
 //?USER: Processing after Data read

 //?If setting order in use to YES, order can't already be in use
 CASE;

 // IF PAR.Order in Use is yes
 IF PAR.Order_in_Use = 'Y';

 CASE;

 // IF DB1.Order in Use is yes
 IF DB1.Order_in_Use = 'Y';

 // Send error message - 'Order &1 is in use by another user'
 ERROR(USR0508);
 MSGPARM(PAR.Order_Number);

 // PGM.*Return code = CND.*DBF update error
 PGM.*Return_code = 'Y2U0004';

 QUIT;

 ENDIF;

 ENDIF;

 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


CASE;

// IF PGM.*Return code is *DBF update error
IF PGM.*Return_code = 'Y2U0004';

// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Call program EDT Cr/Dr Memo Header  E1.
CALL PROGRAM(EDT Cr/Dr Memo Header  E1) ('PDPIE1R');
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(PAR.Billing_Activity_Type);

EXECUTE FUNCTION(CHG Reset Order in Use CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1317222;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER('N');
{
 //?USER: Processing after Data read

 //?If setting order in use to YES, order can't already be in use
 CASE;

 // IF PAR.Order in Use is yes
 IF PAR.Order_in_Use = 'Y';

 CASE;

 // IF DB1.Order in Use is yes
 IF DB1.Order_in_Use = 'Y';

 // Send error message - 'Order &1 is in use by another user'
 ERROR(USR0508);
 MSGPARM(PAR.Order_Number);

 // PGM.*Return code = CND.*DBF update error
 PGM.*Return_code = 'Y2U0004';

 QUIT;

 ENDIF;

 ENDIF;

 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDDO;

ENDIF;

ENDDO;

// IF RCD.*SFLSEL is *Cancel
IF RCD.*SFLSEL = '4'/'4';

//?Cancel Memo.
DO;

//?** Do not allow Credit to Cancel memos         FT133 LJB
CASE;

// IF LCL.User Code Model is Credit
IF LCL.User_Code_Model = 'PORKCRDT';

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

QUIT;

//?** Do not allow Credit to Cancel memos         FT133 LJB
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF RCD.Header Status is Confirmed & Complete
IF RCD.Header_Status = 'C'/'R';

// Send error message - 'Memo has been Posted; Cannot process'
ERROR(USR2081);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

ENDIF;

ENDDO;

// IF RCD.*SFLSEL is *Comments
IF RCD.*SFLSEL = '8'/'8';

//?Edit Memo Comments.
DO;

CASE;

// IF RCD.Header Status is Confirmed & Complete
IF RCD.Header_Status = 'C'/'R';

// Send error message - 'Memo has been Posted; Cannot process'
ERROR(USR2081);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

//?Edit Memo Comments.
DO;

EXECUTE FUNCTION(CHG Reset Order in Use CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1317222;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER('Y');
{
 //?USER: Processing after Data read

 //?If setting order in use to YES, order can't already be in use
 CASE;

 // IF PAR.Order in Use is yes
 IF PAR.Order_in_Use = 'Y';

 CASE;

 // IF DB1.Order in Use is yes
 IF DB1.Order_in_Use = 'Y';

 // Send error message - 'Order &1 is in use by another user'
 ERROR(USR0508);
 MSGPARM(PAR.Order_Number);

 // PGM.*Return code = CND.*DBF update error
 PGM.*Return_code = 'Y2U0004';

 QUIT;

 ENDIF;

 ENDIF;

 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


CASE;

// IF PGM.*Return code is *Data update error
IF PGM.*Return_code = 'Y2U0004';

// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Call program EDT OP Order Comment   EF.
CALL PROGRAM(EDT OP Order Comment   EF) ('PDAGEFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);

EXECUTE FUNCTION(CHG Reset Order in Use CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1317222;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER('N');
{
 //?USER: Processing after Data read

 //?If setting order in use to YES, order can't already be in use
 CASE;

 // IF PAR.Order in Use is yes
 IF PAR.Order_in_Use = 'Y';

 CASE;

 // IF DB1.Order in Use is yes
 IF DB1.Order_in_Use = 'Y';

 // Send error message - 'Order &1 is in use by another user'
 ERROR(USR0508);
 MSGPARM(PAR.Order_Number);

 // PGM.*Return code = CND.*DBF update error
 PGM.*Return_code = 'Y2U0004';

 QUIT;

 ENDIF;

 ENDIF;

 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


ENDIF;

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDDO;

ENDIF;

ENDDO;

// IF RCD.*SFLSEL is *Details
IF RCD.*SFLSEL = '7'/'7';

//?Edit Memo Details.
DO;

//?Edit memo details
CASE;

// IF RCD.Header Status is Cancelled
IF RCD.Header_Status = 'X';

// Send error message - 'Memo has been Posted; Cannot process'
ERROR(USR2081);
MSGPARM(RCD.*SFLSEL);

//?Edit memo details
// IF *OTHERWISE
IF *OTHERWISE;

//?Edit Memo Details.
DO;

//?** Do not allow Credit to modify memos       FT133 LJB
CASE;

// IF LCL.User Code Model is Credit
IF LCL.User_Code_Model = 'PORKCRDT';

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

QUIT;

//?** Do not allow Credit to modify memos       FT133 LJB
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(CHG Reset Order in Use CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1317222;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER('Y');
{
 //?USER: Processing after Data read

 //?If setting order in use to YES, order can't already be in use
 CASE;

 // IF PAR.Order in Use is yes
 IF PAR.Order_in_Use = 'Y';

 CASE;

 // IF DB1.Order in Use is yes
 IF DB1.Order_in_Use = 'Y';

 // Send error message - 'Order &1 is in use by another user'
 ERROR(USR0508);
 MSGPARM(PAR.Order_Number);

 // PGM.*Return code = CND.*DBF update error
 PGM.*Return_code = 'Y2U0004';

 QUIT;

 ENDIF;

 ENDIF;

 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


CASE;

// IF PGM.*Return code is *Data update error
IF PGM.*Return_code = 'Y2U0004';

// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Call program EDT Cr/Dr Memo Lines   EF.
CALL PROGRAM(EDT Cr/Dr Memo Lines   EF) ('PDPGEFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Type_Sales);
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Ship_To_Name);
PARAMETER(RCD.Order_Date);
PARAMETER(RCD.Price_Status);
PARAMETER(RCD.Claim_Number);
PARAMETER(PAR.Application_Code);

EXECUTE FUNCTION(CHG Reset Order in Use CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1317222;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER('N');
{
 //?USER: Processing after Data read

 //?If setting order in use to YES, order can't already be in use
 CASE;

 // IF PAR.Order in Use is yes
 IF PAR.Order_in_Use = 'Y';

 CASE;

 // IF DB1.Order in Use is yes
 IF DB1.Order_in_Use = 'Y';

 // Send error message - 'Order &1 is in use by another user'
 ERROR(USR0508);
 MSGPARM(PAR.Order_Number);

 // PGM.*Return code = CND.*DBF update error
 PGM.*Return_code = 'Y2U0004';

 QUIT;

 ENDIF;

 ENDIF;

 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDDO;

ENDIF;

ENDDO;

// IF RCD.*SFLSEL is *Display
IF RCD.*SFLSEL = '5'/'5';

//?Display Memo.
DO;

// Call program DSP Credit/Debit Memo  D1.
CALL PROGRAM(DSP Credit/Debit Memo  D1) ('PDIXD1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Date);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDDO;

// IF RCD.*SFLSEL is *Print
IF RCD.*SFLSEL = '6'/'6';

//?Print Memo.
DO;

CASE;

// IF RCD.Order Value Total EQ WRK.ZERO
IF RCD.Order_Value_Total = WRK.ZERO;

// Send error message - 'Memo not eligible to print (Zero dollars)'
ERROR(USR2375);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

//?Load Parameters.
DO;

// PAR.Company Number Pass   USR = RCD.Company Number
PAR.Company_Number_Pass_USR = RCD.Company_Number;

// PAR.Order Number 1  PASS  USR = RCD.Order Number
PAR.Order_Number_1_PASS_USR = RCD.Order_Number;

// PAR.Order Number 2  PASS  USR = RCD.Order Number
PAR.Order_Number_2_PASS_USR = RCD.Order_Number;

// PAR.Date 1          PASS  USR = CON.*ZERO
PAR.Date_1_PASS_USR = *ZERO;

// PAR.Date 2          PASS  USR = CON.*ZERO
PAR.Date_2_PASS_USR = *ZERO;

ENDDO;

// Call program PRT Prmt for CM/DM's   UP.
CALL PROGRAM(PRT Prmt for CM/DM's   UP) ('PDNUUPR');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(PAR.Application_Code);
PARAMETER('PDQYPCLP');
PARAMETER('Print Memo');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(PAR.Order_Number_1_PASS_USR);
PARAMETER(PAR.System_Value_Numeric);

CASE;

// IF WRK.Return Code Usr is *Blank
IF WRK.Return_Code_Usr = *BLANK;

// Send information message - 'Print has been submitted.'
MESSAGE(USR1832 *INFO);

ENDIF;

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDIF;

ENDDO;

// IF RCD.*SFLSEL is *Print Acknowledgment
IF RCD.*SFLSEL = '10';

//?Print Memo Acknowledgement.
DO;

CASE;

// IF RCD.Header Status is Confirmed & Complete
IF RCD.Header_Status = 'C'/'R';

// Send error message - 'Memo has been Posted; Cannot process'
ERROR(USR2081);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

//?Print Memo Acknowledgement.
DO;

//?Load Parameters.
DO;

// PAR.Company Number Pass   USR = RCD.Accounting Company Number
PAR.Company_Number_Pass_USR = RCD.Company_Number;

// PAR.Order Number 1  PASS  USR = RCD.Order Number
PAR.Order_Number_1_PASS_USR = RCD.Order_Number;

// PAR.Order Number 2  PASS  USR = RCD.Order Number
PAR.Order_Number_2_PASS_USR = RCD.Order_Number;

// PAR.Date 2          PASS  USR = CON.*ZERO
PAR.Date_2_PASS_USR = *ZERO;

// PAR.Thru Date Pass        USR = CON.*ZERO
PAR.Thru_Date_Pass_USR = *ZERO;

// PAR.Date 1          PASS  USR = CON.*ZERO
PAR.Date_1_PASS_USR = *ZERO;

// WRK.Date 3          PASS  USR = CON.*ZERO
WRK.Date_3_PASS_USR = *ZERO;

ENDDO;

//?e2176 slm 03/14/2013
//?do not send by email
// Call program PRT Acknowldg. CLP 1   UP.
CALL PROGRAM(PRT Acknowldg. CLP 1   UP) ('PDJ1UPR');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(PAR.Application_Code);
PARAMETER('PDJWPCLP');
PARAMETER('Print Acknowledgement');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(PAR.Date_1_PASS_USR);
PARAMETER(PAR.Date_2_PASS_USR);
PARAMETER(PAR.Thru_Date_Pass_USR);
PARAMETER(PAR.Order_Number_1_PASS_USR);
PARAMETER(PAR.Order_Number_2_PASS_USR);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(RCD.Export_Status);
PARAMETER(WRK.Order_Type_Sales);
PARAMETER(WRK.Shipping_Method);
PARAMETER(PAR.Billing_Activity_Type);
PARAMETER(WRK.USR_Warehouse_Code);
PARAMETER(WRK.USR_CDE_Parm_1);
PARAMETER(WRK.USR_CDE_Parm_2);
PARAMETER(WRK.USR_CDE_Parm_3);
PARAMETER(WRK.USR_CDE_Parm_4);
PARAMETER(WRK.USR_CDE_Parm_5);
PARAMETER(WRK.USR_CDE_Parm_6);
PARAMETER(WRK.USR_CDE_Parm_7);
PARAMETER(WRK.USR_CDE_Parm_8);
PARAMETER(WRK.USR_CDE_Parm_9);
PARAMETER(WRK.USR_Select_Omit_Flag);
PARAMETER(WRK.Date_3_PASS_USR);
PARAMETER('N');
PARAMETER(*BLANK);
PARAMETER('N');

CASE;

// IF WRK.Return Code Usr is *Blank
IF WRK.Return_Code_Usr = *BLANK;

// Send information message - 'Print has been submitted.'
MESSAGE(USR1832 *INFO);

ENDIF;

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDDO;

ENDIF;

ENDDO;

// IF RCD.*SFLSEL is *Post Cr/Dr Memo
IF RCD.*SFLSEL = '11';

//?** Do not allow Credit to post memos            FT133 LJB
CASE;

// IF LCL.User Code Model is Credit
IF LCL.User_Code_Model = 'PORKCRDT';

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

QUIT;

//?** Do not allow Credit to post memos            FT133 LJB
// IF *OTHERWISE
IF *OTHERWISE;

//?Post Memo.
DO;

CASE;

// IF RCD.Header Status is Confirmed & Complete
IF RCD.Header_Status = 'C'/'R';

// Send error message - 'Memo has been Posted; Cannot process'
ERROR(USR2081);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

//?Post Memo.
DO;

CASE;

// IF RCD.Order Value Total EQ WRK.ZERO
IF RCD.Order_Value_Total = WRK.ZERO;

// Send error message - 'Memo not eligible to Post--has Zero value'
ERROR(USR2376);
MSGPARM(RCD.*SFLSEL);

// IF RCD.Order Type Print Status is yes
IF RCD.Order_Type_Print_Status = 'Y';

//?Post date required
CASE;

// IF CTL.Actual Shipped Date EQ WRK.ZERO
IF CTL.Actual_Shipped_Date = WRK.ZERO;

// Call program SEL Actual Shipped Dte PV.
CALL PROGRAM(SEL Actual Shipped Dte PV) ('PDV4PVR');
PARAMETER(RCD.Company_Number);
PARAMETER(CTL.Actual_Shipped_Date);

CASE;

// IF CTL.Actual Shipped Date EQ WRK.ZERO
IF CTL.Actual_Shipped_Date = WRK.ZERO;

// Send error message - 'Memo Post Date Required'
ERROR(USR2090);
MSGPARM(WRK.Actual_Shipped_Date);

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

//?Post date required
// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

//?E00473 RMC 8/12/09 Post date must be >= Order date
CASE;

// IF CTL.Actual Shipped Date LT RCD.Order Date
IF CTL.Actual_Shipped_Date < RCD.Order_Date;

//?new validation per alice/leanner/tim w     RMC 8/12/09 E00473
// Send error message - 'Memo Post Date &1 cannot be earlier than transaction date.'
ERROR(USR4185);
MSGPARM(CTL.Actual_Shipped_Date);

// LCL.Error Status = CND.yes
LCL.Error_Status = 'Y';

//?E00473 RMC 8/12/09 Post date must be >= Order date
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Memo not eligible to Post--has not been printed on Pre-Invoice report.'
ERROR(USR2003);
MSGPARM(RCD.*SFLSEL);

ENDIF;

ENDDO;

ENDIF;

ENDDO;

ENDIF;

// IF RCD.*SFLSEL is Option 13
IF RCD.*SFLSEL = '13';

//?Print Claim Form, Display, then Delete.
DO;

// Call program Prt Claim-Claim All   XF.
CALL PROGRAM(Prt Claim-Claim All   XF) ('PPL7XFR');
PARAMETER(RCD.Claim_Number);
PARAMETER(RCD.Company_Number);
PARAMETER('QPRINT');
PARAMETER(*YES);
PARAMETER(*NO);
PARAMETER(1);
PARAMETER(PAR.Status_Y_or_N);
PARAMETER('Y');
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*NO);
PARAMETER(*NO);
PARAMETER('R');

// Call program DSP&DLT Spool File     UP.
CALL PROGRAM(DSP&DLT Spool File     UP) ('PDP5UPR');
PARAMETER('PPL4PFR$');

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDDO;

ENDIF;

//?USER: Final processing (Pre-confirm)

CASE;

// IF LCL.Error Status is yes
IF LCL.Error_Status = 'Y';

// CTL.Actual Shipped Date = CON.*ZERO
CTL.Actual_Shipped_Date = *ZERO;

// LCL.Error Status = CND.no
LCL.Error_Status = 'N';

ENDIF;

CASE;

// IF CTL.*CMD key is *Create
IF CTL.*CMD_key = '06';

//?Create a new Memo.
DO;

// WRK.Order Number = CON.*ZERO
WRK.Order_Number = *ZERO;

//?Setup company number.
CASE;

// IF CTL.Company Number EQ WRK.ZERO
IF CTL.Company_Number = WRK.ZERO;

// CTL.Company Number = PAR.Company Number
CTL.Company_Number = PAR.Company_Number;

ENDIF;

// Call program EDT Cr/Dr Memo Header  E1.
CALL PROGRAM(EDT Cr/Dr Memo Header  E1) ('PDPIE1R');
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(CTL.Company_Number);
PARAMETER(WRK.Order_Number);
PARAMETER(PAR.Billing_Activity_Type);

CASE;

// IF WRK.Order Number is Not equal to zeros
IF WRK.Order_Number <> *ZERO;

//?Credit/Debit Memo Order Created.
DO;

// Call program CLC Tot Ord Val Memo   XF.
CALL PROGRAM(CLC Tot Ord Val Memo   XF) ('PDQEXFR');
PARAMETER(CTL.Company_Number);
PARAMETER(WRK.Order_Number);
PARAMETER(WRK.Unused_Parm_Value_USR);
PARAMETER(WRK.USR_Order_Weight);
PARAMETER(WRK.USR_Production);

EXECUTE FUNCTION(RTV All Dtl Price Sts  RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1426019;
PARAMETER(CTL.Company_Number);
PARAMETER(WRK.Order_Number);
PARAMETER(WRK.Price_Status);
{
 //?USER: Initialize routine

 // PAR.Price Status = CND.Priced
 PAR.Price_Status = 'P';

 //?USER: Processing if Data record not found

 // PAR.Price Status = CND.Unpriced
 PAR.Price_Status = 'U';

 //?USER: Process Data record

 //?Assumes is priced unless finds 1 item which is unpriced
 CASE;

 // IF DB1.Price Status is Unpriced
 IF DB1.Price_Status = 'U';

 // PAR.Price Status = CND.Unpriced
 PAR.Price_Status = 'U';

 QUIT;

 ENDIF;

}


CASE;

// IF WRK.Price Status is Priced
IF WRK.Price_Status = 'P';

EXECUTE FUNCTION(CHG Price Status       CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1320326;
PARAMETER(CTL.Company_Number);
PARAMETER(WRK.Order_Number);
PARAMETER(WRK.Price_Status);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


ENDIF;

EXECUTE FUNCTION(CHG Reset Order in Use CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1317222;
PARAMETER(CTL.Company_Number);
PARAMETER(WRK.Order_Number);
PARAMETER('N');
{
 //?USER: Processing after Data read

 //?If setting order in use to YES, order can't already be in use
 CASE;

 // IF PAR.Order in Use is yes
 IF PAR.Order_in_Use = 'Y';

 CASE;

 // IF DB1.Order in Use is yes
 IF DB1.Order_in_Use = 'Y';

 // Send error message - 'Order &1 is in use by another user'
 ERROR(USR0508);
 MSGPARM(PAR.Order_Number);

 // PGM.*Return code = CND.*DBF update error
 PGM.*Return_code = 'Y2U0004';

 QUIT;

 ENDIF;

 ENDIF;

 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDDO;

ENDIF;

ENDDO;

// IF CTL.*CMD key is *Print Acknowledgements
IF CTL.*CMD_key = '13';

//?Print Acknowledgements.
DO;

//?** FT299 LJB 04/18/2007
//?Restrict to user profile warehouse if multi-warehouse is not Yes
CASE;

// IF WRK.Allow Multi Warehouse is yes
IF WRK.Allow_Multi_Warehouse = 'Y';

// WRK.USR Warehouse Code = CND.Warehouse Code Blank
WRK.USR_Warehouse_Code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.USR Warehouse Code = PAR.Warehouse Code
WRK.USR_Warehouse_Code = PAR.Warehouse_Code;

ENDIF;

//?e2176 slm 3/14/2013
//?the next program will allow user to select
//?email of acknowledgements
// Call program PRT Acknowledgements   PV.
CALL PROGRAM(PRT Acknowledgements   PV) ('PDJ4PVR');
PARAMETER(WRK.USR_Warehouse_Code);
PARAMETER(PAR.Billing_Activity_Type);

ENDDO;

// IF CTL.*CMD key is *Pre-Invoice Report
IF CTL.*CMD_key = '14';

//?Print Pre-Invoice Register
CASE;

// IF LCL.User Code Model is Credit
IF LCL.User_Code_Model = 'PORKCRDT';

// Send error message - 'Function not allowed.'
ERROR(USR1833);

QUIT;

//?Print Pre-Invoice Register
// IF *OTHERWISE
IF *OTHERWISE;

//?Print Pre-Invoice Register.
DO;

// WRK.@Yes/No Flag = CND.Blank
WRK.AAYes_No_Flag = *BLANK;

// Call program PRT Invoices/Pre Reg.  PV.
CALL PROGRAM(PRT Invoices/Pre Reg.  PV) ('PDTJPVR');
PARAMETER(PAR.Application_Code);
PARAMETER('P');
PARAMETER(PAR.Billing_Activity_Type);
PARAMETER('BT');
PARAMETER(WRK.AAYes_No_Flag);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDDO;

ENDIF;

ENDIF;

//?USER: Process subfile record (Post-confirm)

CASE;

// IF RCD.*SFLSEL is *Delete request
IF RCD.*SFLSEL = '4'/'4';

//?Delete Request.
DO;

CASE;

// IF RCD.Claim Number is Zero
IF RCD.Claim_Number = *ZERO;

//?Delete single memo.
DO;

// Call program UPD Cancel Order       XF.
CALL PROGRAM(UPD Cancel Order       XF) ('OPV9XFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.AR_Customer_Number);
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(PAR.Billing_Activity_Type);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDDO;

// IF *OTHERWISE
IF *OTHERWISE;

//?Check for other memos on the claim, and delete all of them.
DO;

EXECUTE FUNCTION(RTV cnt of ords for memo) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1574117;
PARAMETER(RCD.Claim_Number);
PARAMETER(PAR.Count_Records_USR);
{
 //?USER: Initialize routine

 // PAR.Count Records         USR = CND.Equal to Zero
 PAR.Count_Records_USR = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.Header Status is Cancelled
 IF DB1.Header_Status = 'X';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Count Records         USR = PAR.Count Records         USR + CON.1
 PAR.Count_Records_USR = PAR.Count_Records_USR + 1;

 ENDIF;

}


CASE;

// IF PAR.Count Records         USR is Greater Than One
IF PAR.Count_Records_USR > 1;

//?Warn the user that multiple memos exist for claim, then delete.
DO;

// Call program Zzz Cancel Confirm     DF.
CALL PROGRAM(Zzz Cancel Confirm     DF) ('PDXXDFR');
PARAMETER(RCD.Claim_Number);
PARAMETER(PAR.Cancelled_Flag_USR);

CASE;

// IF PAR.Cancelled Flag USR is Yes
IF PAR.Cancelled_Flag_USR = 'Y';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDDO;

// IF *OTHERWISE
IF *OTHERWISE;

//?Delete the single memo associated with the claim.
DO;

// Call program UPD Cancel Order       XF.
CALL PROGRAM(UPD Cancel Order       XF) ('OPV9XFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.AR_Customer_Number);
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(PAR.Billing_Activity_Type);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDDO;

ENDIF;

ENDDO;

ENDIF;

ENDDO;

// IF RCD.*SFLSEL is *Post Cr/Dr Memo
IF RCD.*SFLSEL = '11';

//?** Only prompt for print options once per Post
CASE;

// IF PAR.Status - Y or N is no
IF PAR.Status_Y_or_N = 'N';

// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// PAR.PRT Number of Copies = CON.1
PAR.PRT_Number_of_Copies = 1;

// PAR.PRT Hold Output Sts = CND.*YES
PAR.PRT_Hold_Output_Sts = *YES;

// PAR.PRT Save Output Sts = CND.*YES
PAR.PRT_Save_Output_Sts = *YES;

// Call program PMT Prt Opt w/PSz SHR  PV.
CALL PROGRAM(PMT Prt Opt w/PSz SHR  PV) ('PDV8PVR');
PARAMETER('Post Memo Reports');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Application_Code);
PARAMETER(*MISSING);
PARAMETER(1);

// PAR.Status - Y or N = CND.yes
PAR.Status_Y_or_N = 'Y';

ENDIF;

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.System Value Numeric = PAR.PRT Number of Copies
PAR.System_Value_Numeric = PAR.PRT_Number_of_Copies;

//?Post Memo.
DO;

CASE;

// IF RCD.Claim Number is Zero
IF RCD.Claim_Number = *ZERO;

//?Post single memo.
DO;

//?E4057 JJH 04/27/15 - New I Parm:  Attach to Order Number
EXECUTE FUNCTION(Post Credit/Debit      IF) TYPE(EXCINTFUN)                     AC1574185;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(CTL.Actual_Shipped_Date);
PARAMETER(RCD.AR_Customer_Number);
PARAMETER(RCD.Header_Status);
PARAMETER(RCD.Date_of_Original_Entry);
PARAMETER(RCD.Load_ID);
PARAMETER(RCD.Absorbed_Freight_Rate_CWT);
PARAMETER(RCD.Affect_Auto_Accruals);
PARAMETER(RCD.Attach_to_Order_Number);
PARAMETER(RCD.Invoice_Number);
PARAMETER(RCD.Invoice_Suffix);
PARAMETER(RCD.Billing_Activity_Type);
PARAMETER(RCD.Claim_Number);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(PAR.Application_Code);
{
 //?Execute internal function

 //?E4057 JJH 04/27/15 - New I Parm: Attach to Order Number
 EXECUTE FUNCTION(UPD Event,Sts Ship Dtl RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1367535;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('R');
 PARAMETER(PAR.Actual_Shipped_Date);
 PARAMETER('06');
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CHG Act Shp,Sts,Evt    CH) TYPE(CHGOBJ) FILE(OPBGWKP)          AC1437412;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(PAR.Detail_Line_Status);
  PARAMETER(DB1.Detail_Line_Status_Last);
  PARAMETER(PAR.Actual_Shipped_Date);
  PARAMETER(PAR.Event_Code);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

 // PAR.Event Number = CON.*ZERO
 PAR.Event_Number = *ZERO;

 EXECUTE FUNCTION(RTV Next Event Number  RT) TYPE(RTVOBJ) FILE(OPEYCPP)          AC1306444;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Event_Number);
 {
  //?USER: Processing if Data record not found

  // PAR.Event Number = CON.1
  PAR.Event_Number = 1;

  //?USER: Process Data record

  // PAR.Event Number = DB1.Event Number
  PAR.Event_Number = DB1.Event_Number;

 }

 // PAR.Event Number = PAR.Event Number + CON.1
 PAR.Event_Number = PAR.Event_Number + 1;

 EXECUTE FUNCTION(CRT OP Order Events    CR) TYPE(CRTOBJ) FILE(OPEYCPP)          AC1170141;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Event_Number);
 PARAMETER('06');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Invoice_Number);
 PARAMETER(PAR.Invoice_Suffix);
 PARAMETER(JOB.*Job_date);
 PARAMETER('Y');
 PARAMETER('Y');
 PARAMETER('Y');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Ship_To_Customer);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 EXECUTE FUNCTION(CHG Invc#,Dte,Evt,PrtS CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1345003;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Actual_Shipped_Date);
 PARAMETER('R');
 PARAMETER(PAR.Header_Status);
 PARAMETER(*BLANK);
 PARAMETER(PAR.Invoice_Number);
 PARAMETER(PAR.Invoice_Suffix);
 PARAMETER(PAR.Actual_Shipped_Date);
 PARAMETER('06');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // Call program TRG Order Hdr CHG Trig XT.
  CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.AR_Customer_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Ship_To_Name);
  PARAMETER(DB1.Ship_To_Address_Line_1);
  PARAMETER(DB1.Ship_To_Address_Line_2);
  PARAMETER(DB1.Ship_To_Address_Line_3);
  PARAMETER(DB1.Ship_To_City);
  PARAMETER(DB1.Ship_To_State_Code);
  PARAMETER(DB1.Ship_To_Zip_Postal_Code);
  PARAMETER(DB1.Bill_to_Customer);
  PARAMETER(DB1.Bill_to_Name);
  PARAMETER(DB1.Bill_to_Address_Line_1);
  PARAMETER(DB1.Bill_to_Address_Line_2);
  PARAMETER(DB1.Bill_to_Address_Line_3);
  PARAMETER(DB1.Bill_to_City);
  PARAMETER(DB1.Bill_to_State_Code);
  PARAMETER(DB1.Bill_to_Zip_Postal_Code);
  PARAMETER(DB1.Customer_Purchase_Order_#);
  PARAMETER(DB1.Order_Date);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Cancel_Date);
  PARAMETER(DB1.Terms_Code);
  PARAMETER(DB1.Special_Instructions);
  PARAMETER(DB1.Special_Instructions_2);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Comment_Print_Acknowledge);
  PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
  PARAMETER(DB1.Comment_Print_Pick_Slip);
  PARAMETER(DB1.Comment_Print_Ship_Doc);
  PARAMETER(DB1.Reason_Code);
  PARAMETER(DB1.Order_in_Use);
  PARAMETER(DB1.Header_Status);
  PARAMETER(DB1.Header_Status_Last);
  PARAMETER(DB1.Order_Type_Print_Status);
  PARAMETER(DB1.Scheduled_Ship_Date);
  PARAMETER(DB1.User_Original_Entry);
  PARAMETER(DB1.Date_of_Original_Entry);
  PARAMETER(DB1.Order_Value_Total);
  PARAMETER(DB1.Order_Weight_Total);
  PARAMETER(DB1.Credit_Hold);
  PARAMETER(DB1.Production_Hold);
  PARAMETER(DB1.New_Customer_Hold);
  PARAMETER(DB1.Requested_Delivery_Date);
  PARAMETER(DB1.Requested_Delivery_Time);
  PARAMETER(DB1.Accounts_Receiv_Ent_1);
  PARAMETER(DB1.Accounts_Receiv_Ent_2);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.Rated_Freight);
  PARAMETER(DB1.LTL_Flag);
  PARAMETER(DB1.Price_Audit);
  PARAMETER(DB1.Price_Status);
  PARAMETER(DB1.Shipping_Method);
  PARAMETER(DB1.Export_Status);
  PARAMETER(DB1.Palletize);
  PARAMETER(DB1.Shrink_Wrap);
  PARAMETER(DB1.Slip_Sheet);
  PARAMETER(DB1.Age_Code);
  PARAMETER(DB1.Reefer_Temperature);
  PARAMETER(DB1.Load_Type);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(DB1.Load_Plan_Order);
  PARAMETER(DB1.Print_Pick_Slip);
  PARAMETER(DB1.Resell_Reference_Number);
  PARAMETER(DB1.Special_Comment_1);
  PARAMETER(DB1.Special_Comment_2);
  PARAMETER(DB1.Affect_Auto_Accruals);
  PARAMETER(DB1.Sales_Route_Code);
  PARAMETER(DB1.Manager_Level_Code);
  PARAMETER(DB1.VP_Level_Code);
  PARAMETER(DB1.Attach_to_Order_Number);
  PARAMETER(DB1.Reason_for_Price_Audit);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Invoice_Date);
  PARAMETER(DB1.Event_Code);
  PARAMETER(DB1.Trans_Contol_AS400_Plant);
  PARAMETER(DB1.Modified_Flag);
  PARAMETER(DB1.A_R_order_Value_Total);
  PARAMETER(DB1.Billing_Activity_Type);
  PARAMETER(DB1.Block_Order_Flag);
  PARAMETER(DB1.Order_Certification_Flag);
  PARAMETER(DB1.Invoice_Order_Value_Tot);
  PARAMETER(DB1.Process_Sts_for_3C);
  PARAMETER(DB1.Order_Conf_Fax_Sts);
  PARAMETER(DB1.Manifest_Fax_Sts);
  PARAMETER(DB1.Invoice_Fax_Sts);
  PARAMETER(DB1.Transfer_in_Storage_Ind);
  PARAMETER(DB1.Email_Cust_On_Order_Ship);
  PARAMETER(DB1.Order_Emailed);
  PARAMETER(DB1.Export_Docs_Go_w_Driver);
  PARAMETER(DB1.Shipping_Temp_Code_C_F);
  PARAMETER(DB1.Broker_Order_Status);
  PARAMETER(DB1.Air_Freight_Order);
  PARAMETER(DB1.Order_Requires_Review);
  PARAMETER(DB1.OH_Load_Plan_Ready);
  PARAMETER(DB1.Export_USDA_Approved);
  PARAMETER(DB1.HPB_Ship_to_Warehouse);
  PARAMETER(DB1.OH_TF_Exempt_Code);
  PARAMETER(DB1.OH_Appt_Confirmation_Dt);
  PARAMETER(DB1.JPN_Invoice_Issuance_Date);
  PARAMETER(DB1.Load_Actual_Shipped_Date);
  PARAMETER(DB1.Load_BOL_Complete_Date);
  PARAMETER(DB1.Load_Truck_Departure_Date);
  PARAMETER(DB1.Maximum_Gross_Weight);
  PARAMETER(DB1.Time_of_Original_Entry);
  PARAMETER(DB1.OH_Appt_Confirmation_Tm);
  PARAMETER(DB1.Load_BOL_Complete_Time);
  PARAMETER(DB1.Load_Truck_Departure_Time);
  PARAMETER(DB1.Act_Frt_Reference_Amount);
  PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
  PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
  PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
  PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);

 }

 // PAR.Company Number Pass   USR = PAR.Company Number
 PAR.Company_Number_Pass_USR = PAR.Company_Number;

 // PAR.Invoice Number PASS = PAR.Invoice Number
 PAR.Invoice_Number_PASS = PAR.Invoice_Number;

 //?Order selection
 //?05/30/08 PKD/RMC FP1110 Needed to call the accruals rountine here also.
 CASE;

 // IF PAR.Affect Auto Accruals is Affect Auto Accruals
 IF PAR.Affect_Auto_Accruals = 'Y';

 //?E4057 JJH 04/23/15 - New I parm for: Attach to Order Number
 // Call program UPD Auto Accruals      XF.
 CALL PROGRAM(UPD Auto Accruals      XF) ('PDT5XFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.AR_Customer_Number);
 PARAMETER(PAR.Date_of_Original_Entry);
 PARAMETER(PAR.Load_ID);
 PARAMETER(PAR.Absorbed_Freight_Rate_CWT);
 PARAMETER(PAR.Attach_to_Order_Number);
 PARAMETER(PAR.Actual_Shipped_Date);
 PARAMETER(PAR.Billing_Activity_Type);

 ENDIF;

 // Call program UPD Post InvoicesSBMCLUP.
 CALL PROGRAM(UPD Post InvoicesSBMCLUP) ('PDIPSUPR');
 PARAMETER(PGM.*Return_code);
 PARAMETER('PDIPSPCL');
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.PRT_Printer_Device);
 PARAMETER(PAR.PRT_Hold_Output_Sts);
 PARAMETER(PAR.PRT_Save_Output_Sts);
 PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
 PARAMETER(PAR.PRT_Night_Queue);
 PARAMETER(PAR.Company_Number_Pass_USR);
 PARAMETER(PAR.Invoice_Number_PASS);
 PARAMETER(PAR.System_Value_Numeric);
 PARAMETER('OR');

 //?Update Claim.
 DO;

 CASE;

 // IF PAR.Claim Number is Not Zero
 IF PAR.Claim_Number <> *ZERO;

 EXECUTE FUNCTION(CHG Status only        CH) TYPE(CHGOBJ) FILE(PDMKCPP)          AC1573743;
 PARAMETER(PAR.Claim_Number);
 PARAMETER('C');
 {
  //?USER: Processing after Data read

  CASE;

  // IF PAR.Claim Status is Completed
  IF PAR.Claim_Status = 'C';

  // AND PAR.Claim Status NE DB1.Claim Status
  AND PAR.Claim_Status <> DB1.Claim_Status;

  // DB1.Memo Post Date = JOB.*Job date
  DB1.Memo_Post_Date = JOB.*Job_date;

  // DB1.Memo Post Time = JOB.*Job time
  DB1.Memo_Post_Time = JOB.*Job_time;

  // IF PAR.Claim Status is Memo Processing
  IF PAR.Claim_Status = 'M';

  // AND PAR.Claim Status NE DB1.Claim Status
  AND PAR.Claim_Status <> DB1.Claim_Status;

  // DB1.Memo Created = CND.Yes
  DB1.Memo_Created = 'Y';

  // DB1.Memo Created Date = JOB.*Job date
  DB1.Memo_Created_Date = JOB.*Job_date;

  // DB1.Memo Created Time = JOB.*Job time
  DB1.Memo_Created_Time = JOB.*Job_time;

  // DB1.Memo Created User = JOB.*USER
  DB1.Memo_Created_User = JOB.*USER;

  ENDIF;

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

 ENDDO;

}


// Send information message - 'Memos have been submitted to Post.'
MESSAGE(USR2005 *INFO);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDDO;

// IF *OTHERWISE
IF *OTHERWISE;

//?Check for other memos on the claim, and post all of them.
DO;

EXECUTE FUNCTION(RTV cnt of ords for memo) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1574117;
PARAMETER(RCD.Claim_Number);
PARAMETER(PAR.Count_Records_USR);
{
 //?USER: Initialize routine

 // PAR.Count Records         USR = CND.Equal to Zero
 PAR.Count_Records_USR = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.Header Status is Cancelled
 IF DB1.Header_Status = 'X';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Count Records         USR = PAR.Count Records         USR + CON.1
 PAR.Count_Records_USR = PAR.Count_Records_USR + 1;

 ENDIF;

}


CASE;

// IF PAR.Count Records         USR is Greater Than One
IF PAR.Count_Records_USR > 1;

//?Warn the user that multiple memos exist for claim, then post.
DO;

// Call program DSP Post Confirm       DF.
CALL PROGRAM(DSP Post Confirm       DF) ('PDXYDFR');
PARAMETER(RCD.Claim_Number);
PARAMETER(CTL.Actual_Shipped_Date);
PARAMETER(PAR.Post_Flag_USR);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(PAR.Application_Code);

CASE;

// IF PAR.Post Flag USR is Yes
IF PAR.Post_Flag_USR = 'Y';

// Send information message - 'Memos have been submitted to Post.'
MESSAGE(USR2005 *INFO);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDDO;

// IF *OTHERWISE
IF *OTHERWISE;

//?Post the single memo associated with the claim.
DO;

EXECUTE FUNCTION(Post Credit/Debit      IF) TYPE(EXCINTFUN)                     AC1574185;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(CTL.Actual_Shipped_Date);
PARAMETER(RCD.AR_Customer_Number);
PARAMETER(RCD.Header_Status);
PARAMETER(RCD.Date_of_Original_Entry);
PARAMETER(RCD.Load_ID);
PARAMETER(RCD.Absorbed_Freight_Rate_CWT);
PARAMETER(RCD.Affect_Auto_Accruals);
PARAMETER(*MISSING);
PARAMETER(RCD.Invoice_Number);
PARAMETER(RCD.Invoice_Suffix);
PARAMETER(RCD.Billing_Activity_Type);
PARAMETER(RCD.Claim_Number);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(PAR.Application_Code);
{
 //?Execute internal function

 //?E4057 JJH 04/27/15 - New I Parm: Attach to Order Number
 EXECUTE FUNCTION(UPD Event,Sts Ship Dtl RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1367535;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('R');
 PARAMETER(PAR.Actual_Shipped_Date);
 PARAMETER('06');
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CHG Act Shp,Sts,Evt    CH) TYPE(CHGOBJ) FILE(OPBGWKP)          AC1437412;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(PAR.Detail_Line_Status);
  PARAMETER(DB1.Detail_Line_Status_Last);
  PARAMETER(PAR.Actual_Shipped_Date);
  PARAMETER(PAR.Event_Code);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

 // PAR.Event Number = CON.*ZERO
 PAR.Event_Number = *ZERO;

 EXECUTE FUNCTION(RTV Next Event Number  RT) TYPE(RTVOBJ) FILE(OPEYCPP)          AC1306444;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Event_Number);
 {
  //?USER: Processing if Data record not found

  // PAR.Event Number = CON.1
  PAR.Event_Number = 1;

  //?USER: Process Data record

  // PAR.Event Number = DB1.Event Number
  PAR.Event_Number = DB1.Event_Number;

 }

 // PAR.Event Number = PAR.Event Number + CON.1
 PAR.Event_Number = PAR.Event_Number + 1;

 EXECUTE FUNCTION(CRT OP Order Events    CR) TYPE(CRTOBJ) FILE(OPEYCPP)          AC1170141;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Event_Number);
 PARAMETER('06');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Invoice_Number);
 PARAMETER(PAR.Invoice_Suffix);
 PARAMETER(JOB.*Job_date);
 PARAMETER('Y');
 PARAMETER('Y');
 PARAMETER('Y');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Ship_To_Customer);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 EXECUTE FUNCTION(CHG Invc#,Dte,Evt,PrtS CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1345003;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Actual_Shipped_Date);
 PARAMETER('R');
 PARAMETER(PAR.Header_Status);
 PARAMETER(*BLANK);
 PARAMETER(PAR.Invoice_Number);
 PARAMETER(PAR.Invoice_Suffix);
 PARAMETER(PAR.Actual_Shipped_Date);
 PARAMETER('06');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // Call program TRG Order Hdr CHG Trig XT.
  CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.AR_Customer_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Ship_To_Name);
  PARAMETER(DB1.Ship_To_Address_Line_1);
  PARAMETER(DB1.Ship_To_Address_Line_2);
  PARAMETER(DB1.Ship_To_Address_Line_3);
  PARAMETER(DB1.Ship_To_City);
  PARAMETER(DB1.Ship_To_State_Code);
  PARAMETER(DB1.Ship_To_Zip_Postal_Code);
  PARAMETER(DB1.Bill_to_Customer);
  PARAMETER(DB1.Bill_to_Name);
  PARAMETER(DB1.Bill_to_Address_Line_1);
  PARAMETER(DB1.Bill_to_Address_Line_2);
  PARAMETER(DB1.Bill_to_Address_Line_3);
  PARAMETER(DB1.Bill_to_City);
  PARAMETER(DB1.Bill_to_State_Code);
  PARAMETER(DB1.Bill_to_Zip_Postal_Code);
  PARAMETER(DB1.Customer_Purchase_Order_#);
  PARAMETER(DB1.Order_Date);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Cancel_Date);
  PARAMETER(DB1.Terms_Code);
  PARAMETER(DB1.Special_Instructions);
  PARAMETER(DB1.Special_Instructions_2);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Comment_Print_Acknowledge);
  PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
  PARAMETER(DB1.Comment_Print_Pick_Slip);
  PARAMETER(DB1.Comment_Print_Ship_Doc);
  PARAMETER(DB1.Reason_Code);
  PARAMETER(DB1.Order_in_Use);
  PARAMETER(DB1.Header_Status);
  PARAMETER(DB1.Header_Status_Last);
  PARAMETER(DB1.Order_Type_Print_Status);
  PARAMETER(DB1.Scheduled_Ship_Date);
  PARAMETER(DB1.User_Original_Entry);
  PARAMETER(DB1.Date_of_Original_Entry);
  PARAMETER(DB1.Order_Value_Total);
  PARAMETER(DB1.Order_Weight_Total);
  PARAMETER(DB1.Credit_Hold);
  PARAMETER(DB1.Production_Hold);
  PARAMETER(DB1.New_Customer_Hold);
  PARAMETER(DB1.Requested_Delivery_Date);
  PARAMETER(DB1.Requested_Delivery_Time);
  PARAMETER(DB1.Accounts_Receiv_Ent_1);
  PARAMETER(DB1.Accounts_Receiv_Ent_2);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.Rated_Freight);
  PARAMETER(DB1.LTL_Flag);
  PARAMETER(DB1.Price_Audit);
  PARAMETER(DB1.Price_Status);
  PARAMETER(DB1.Shipping_Method);
  PARAMETER(DB1.Export_Status);
  PARAMETER(DB1.Palletize);
  PARAMETER(DB1.Shrink_Wrap);
  PARAMETER(DB1.Slip_Sheet);
  PARAMETER(DB1.Age_Code);
  PARAMETER(DB1.Reefer_Temperature);
  PARAMETER(DB1.Load_Type);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(DB1.Load_Plan_Order);
  PARAMETER(DB1.Print_Pick_Slip);
  PARAMETER(DB1.Resell_Reference_Number);
  PARAMETER(DB1.Special_Comment_1);
  PARAMETER(DB1.Special_Comment_2);
  PARAMETER(DB1.Affect_Auto_Accruals);
  PARAMETER(DB1.Sales_Route_Code);
  PARAMETER(DB1.Manager_Level_Code);
  PARAMETER(DB1.VP_Level_Code);
  PARAMETER(DB1.Attach_to_Order_Number);
  PARAMETER(DB1.Reason_for_Price_Audit);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Invoice_Date);
  PARAMETER(DB1.Event_Code);
  PARAMETER(DB1.Trans_Contol_AS400_Plant);
  PARAMETER(DB1.Modified_Flag);
  PARAMETER(DB1.A_R_order_Value_Total);
  PARAMETER(DB1.Billing_Activity_Type);
  PARAMETER(DB1.Block_Order_Flag);
  PARAMETER(DB1.Order_Certification_Flag);
  PARAMETER(DB1.Invoice_Order_Value_Tot);
  PARAMETER(DB1.Process_Sts_for_3C);
  PARAMETER(DB1.Order_Conf_Fax_Sts);
  PARAMETER(DB1.Manifest_Fax_Sts);
  PARAMETER(DB1.Invoice_Fax_Sts);
  PARAMETER(DB1.Transfer_in_Storage_Ind);
  PARAMETER(DB1.Email_Cust_On_Order_Ship);
  PARAMETER(DB1.Order_Emailed);
  PARAMETER(DB1.Export_Docs_Go_w_Driver);
  PARAMETER(DB1.Shipping_Temp_Code_C_F);
  PARAMETER(DB1.Broker_Order_Status);
  PARAMETER(DB1.Air_Freight_Order);
  PARAMETER(DB1.Order_Requires_Review);
  PARAMETER(DB1.OH_Load_Plan_Ready);
  PARAMETER(DB1.Export_USDA_Approved);
  PARAMETER(DB1.HPB_Ship_to_Warehouse);
  PARAMETER(DB1.OH_TF_Exempt_Code);
  PARAMETER(DB1.OH_Appt_Confirmation_Dt);
  PARAMETER(DB1.JPN_Invoice_Issuance_Date);
  PARAMETER(DB1.Load_Actual_Shipped_Date);
  PARAMETER(DB1.Load_BOL_Complete_Date);
  PARAMETER(DB1.Load_Truck_Departure_Date);
  PARAMETER(DB1.Maximum_Gross_Weight);
  PARAMETER(DB1.Time_of_Original_Entry);
  PARAMETER(DB1.OH_Appt_Confirmation_Tm);
  PARAMETER(DB1.Load_BOL_Complete_Time);
  PARAMETER(DB1.Load_Truck_Departure_Time);
  PARAMETER(DB1.Act_Frt_Reference_Amount);
  PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
  PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
  PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
  PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);

 }

 // PAR.Company Number Pass   USR = PAR.Company Number
 PAR.Company_Number_Pass_USR = PAR.Company_Number;

 // PAR.Invoice Number PASS = PAR.Invoice Number
 PAR.Invoice_Number_PASS = PAR.Invoice_Number;

 //?Order selection
 //?05/30/08 PKD/RMC FP1110 Needed to call the accruals rountine here also.
 CASE;

 // IF PAR.Affect Auto Accruals is Affect Auto Accruals
 IF PAR.Affect_Auto_Accruals = 'Y';

 //?E4057 JJH 04/23/15 - New I parm for: Attach to Order Number
 // Call program UPD Auto Accruals      XF.
 CALL PROGRAM(UPD Auto Accruals      XF) ('PDT5XFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.AR_Customer_Number);
 PARAMETER(PAR.Date_of_Original_Entry);
 PARAMETER(PAR.Load_ID);
 PARAMETER(PAR.Absorbed_Freight_Rate_CWT);
 PARAMETER(PAR.Attach_to_Order_Number);
 PARAMETER(PAR.Actual_Shipped_Date);
 PARAMETER(PAR.Billing_Activity_Type);

 ENDIF;

 // Call program UPD Post InvoicesSBMCLUP.
 CALL PROGRAM(UPD Post InvoicesSBMCLUP) ('PDIPSUPR');
 PARAMETER(PGM.*Return_code);
 PARAMETER('PDIPSPCL');
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.PRT_Printer_Device);
 PARAMETER(PAR.PRT_Hold_Output_Sts);
 PARAMETER(PAR.PRT_Save_Output_Sts);
 PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
 PARAMETER(PAR.PRT_Night_Queue);
 PARAMETER(PAR.Company_Number_Pass_USR);
 PARAMETER(PAR.Invoice_Number_PASS);
 PARAMETER(PAR.System_Value_Numeric);
 PARAMETER('OR');

 //?Update Claim.
 DO;

 CASE;

 // IF PAR.Claim Number is Not Zero
 IF PAR.Claim_Number <> *ZERO;

 EXECUTE FUNCTION(CHG Status only        CH) TYPE(CHGOBJ) FILE(PDMKCPP)          AC1573743;
 PARAMETER(PAR.Claim_Number);
 PARAMETER('C');
 {
  //?USER: Processing after Data read

  CASE;

  // IF PAR.Claim Status is Completed
  IF PAR.Claim_Status = 'C';

  // AND PAR.Claim Status NE DB1.Claim Status
  AND PAR.Claim_Status <> DB1.Claim_Status;

  // DB1.Memo Post Date = JOB.*Job date
  DB1.Memo_Post_Date = JOB.*Job_date;

  // DB1.Memo Post Time = JOB.*Job time
  DB1.Memo_Post_Time = JOB.*Job_time;

  // IF PAR.Claim Status is Memo Processing
  IF PAR.Claim_Status = 'M';

  // AND PAR.Claim Status NE DB1.Claim Status
  AND PAR.Claim_Status <> DB1.Claim_Status;

  // DB1.Memo Created = CND.Yes
  DB1.Memo_Created = 'Y';

  // DB1.Memo Created Date = JOB.*Job date
  DB1.Memo_Created_Date = JOB.*Job_date;

  // DB1.Memo Created Time = JOB.*Job time
  DB1.Memo_Created_Time = JOB.*Job_time;

  // DB1.Memo Created User = JOB.*USER
  DB1.Memo_Created_User = JOB.*USER;

  ENDIF;

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

 ENDDO;

}


// Send information message - 'Memos have been submitted to Post.'
MESSAGE(USR2005 *INFO);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDDO;

ENDIF;

ENDDO;

ENDIF;

ENDDO;

ENDIF;

ENDIF;

