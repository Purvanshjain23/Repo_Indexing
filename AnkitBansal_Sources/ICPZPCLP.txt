/********************************************************************/
/*                                                                  */
/*  SYNOPSIS - PRINT PROGRAM WITH BASIC SELECTIONS                  */
/*                                                                  */
/*                                                                  */
/*                                                                  */
/*  COMPANY   - DATAWRIGHT INC.                                     */
/*  SYSTEM    - IDeAS/400 CROSS APPLICATIONS                        */
/*  USER NAME - GARST                                               */
/*  DATE      -  6/18/90                                            */
/*  COPYRIGHT 1990 DATAWRIGHT INC.                                  */
/*                                                                  */
/*      PARAMETERS RECEIVED:                                        */
/*                                                                  */
/*          &COMP       - COMPANY NUMBER                            */
/*          &CYCL       - CYCLE CODE                                */
/*          &DATE       - TRANSACTION DATE                          */
/*          &WHSE       - WAREHOUSE CODE                            */
/*          &ENTER1     - ENTERPRISE CODE 1 - ONLY FOR POST         */
/*          &ENTER2     - ENTERPRISE CODE 2 - ONLY FOR POST         */
/*          &PSTATUS    - PHYSICAL STATUS (P=POST, ' '=CLEAR)       */
/*          &PGM        - PROGRAM NAME                              */
/*          &MSGE       - PROGRAM EXECUTION STATUS MESSAGE          */
/*          &MSGC       - PROGRAM COMPLETION INFO MESSAGE           */
/********************************************************************/

 ICPZPCLP:   PGM        PARM(&PGM &MSGE &MSGC &COMPL &CYCL &DATEL +
                          &WHSE &ENTER1 &ENTER2 &PSTATUS &OUTQ)

        DCL     &COMP       *DEC    (3 0)    /* CO. NUMBER     */
        DCL     &COMPL      *DEC
        DCL     &DATE       *DEC    (7 0)
        DCL     &DATEL      *DEC             /* TRANS. DTE     */
        DCL     &CYCL       *CHAR   3        /* CYCLE CODE     */
        DCL     &PGM        *CHAR   10       /* PGM NAME       */
        DCL     &WHSE       *CHAR   3        /* WHSE CODE      */
        DCL     &ENTER1     *CHAR   6        /*  ENTERPRISE 1  */
        DCL     &ENTER2     *CHAR   4        /*  ENTERPRISE 2  */
        DCL     &PSTATUS    *CHAR   1        /*  PHYS. STATUS  */
        DCL     &COWHS      *CHAR   6        /* CO/WHSE CODE   */
        DCL     &CO         *CHAR   3
        DCL     &OUTQ       *CHAR  10        /* ADDITIONAL PRINTER */
        DCL     &FLAG       *CHAR  1         /* FLAG               */

/* SEND PROGRAM MESSAGE PARAMETERS  */

        DCL     &USERQ      *CHAR   10       /*  USER         */
        DCL     &MSGRTN     *CHAR   10       /*  MSG QUEUE    */
        DCL     &MSGE       *CHAR   7        /*  EXEC. MSG    */
        DCL     &MSGC       *CHAR   7        /*  COMPL. MSG   */


             CHGVAR     VAR(&COMP) VALUE(&COMPL) /* change for +
                          print program */
             CHGVAR     VAR(&DATE) VALUE(&DATEL) /* change for +
                          print program */

/*********************************************************************/
/*   ALLOCATE FILES FOR POSTING - IF CANNOT ALLOCATE SEND MESSAGE    */
/*********************************************************************/
             RTVUSRPRF  RTNUSRPRF(&USERQ)

             ALCOBJ     OBJ((CAB0REP *FILE *SHRNUP))
             MONMSG     MSGID(CPF0000) EXEC(DO)
             SNDMSG     MSG('Cannot allocate file CAB0REP (Item +
                          Balance), need to remove all LOCKS from +
                          file to run this option.') TOUSR(&USERQ)
             CHGVAR     VAR(&FLAG) VALUE('1')
             ENDDO

             ALCOBJ     OBJ((CAB1REP *FILE *SHRNUP))
             MONMSG     MSGID(CPF0000) EXEC(DO)
             SNDMSG     MSG('Cannot allocate file CAB1REP (Item +
                          Balance Detail), need to remove all LOCKS +
                          from file to run this option.') +
                          TOUSR(&USERQ)
             CHGVAR     VAR(&FLAG) VALUE('1')
             ENDDO

             IF         (&FLAG = '1') THEN(DO)
             GOTO       CMDLBL(END)
             ENDDO

/*********************************************************************/
/*   CALL POST  PROGRAM - PASSED AS PARAMTER &PGM                    */
/*********************************************************************/

             CHGVAR     VAR(&CO) VALUE(&COMP)

             CHGVAR     VAR(&COWHS) VALUE(&CO *TCAT &WHSE)

/*  DISPLAY MSG TO APPROPRIATE MSGQ DEPENDING IF BATCH  */
             RTVUSRPRF  RTNUSRPRF(&USERQ)
             RTVJOBA    SBMMSGQ(&MSGRTN)
             IF         (&MSGRTN = '*NONE') THEN(DO)
             SNDPGMMSG  MSGID(&MSGE) MSGF(QUSRMSG) MSGDTA(&COWHS) +
                          TOPGMQ(*EXT) MSGTYPE(*STATUS)
             ENDDO
             ELSE DO
             SNDPGMMSG  MSGID(&MSGE) MSGF(QUSRMSG) MSGDTA(&COWHS) +
                          TOMSGQ(&USERQ)
             ENDDO
             IF COND(&OUTQ *NE '          ') THEN(DO)
             OVRPRTF    FILE(ICOOPFR$) HOLD(*YES)
             MONMSG     MSGID(CPF0000)
             ENDDO

             IF         (&PSTATUS = ' ') THEN(DO)  /* CLEAR PHYSICAL */
             CALL       PGM(&PGM) PARM('       ' &COMP &WHSE &CYCL +
                          &DATE)
             ENDDO
             ELSE DO                               /*  POST PHYSICAL */
             CALL       PGM(&PGM) PARM(' ' &COMP &WHSE &CYCL &DATE +
                          &ENTER1 &ENTER2)
             ENDDO

             IF COND(&OUTQ *NE '          ') THEN(DO)
             DUPSPLF    FILE(ICOOPFR$) JOB(*) OUTQ(&OUTQ) SPLNBR(*LAST)
             MONMSG     MSGID(CPF0000)
             RLSSPLF    FILE(ICOOPFR$) SPLNBR(*LAST)
             MONMSG     MSGID(CPF0000)
             ENDDO

             SNDPGMMSG  MSGID(&MSGC) MSGF(QUSRMSG) MSGDTA(&COWHS) +
                          TOMSGQ(&USERQ) MSGTYPE(*INFO)

 END:
             DLCOBJ     OBJ((CAB0REP *FILE *SHRNUP))
             MONMSG     MSGID(CPF0000)
             DLCOBJ     OBJ((CAB1REP *FILE *SHRNUP))
             MONMSG     MSGID(CPF0000)
             ENDPGM
