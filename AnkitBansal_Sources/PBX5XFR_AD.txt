// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBX5XFR
// ?Date: 14.08.2025 Time: 03:49:44
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(ARBDCPP)           AC2126940;
{
 //?USER: Process Data record

 //?Set 'AR Ord Ref Actual Ship Dt' Only When Remaining Bal Due is 0.
 CASE;

 // IF DB1.Remaining Balance Due is equal to zero
 IF DB1.Remaining_Balance_Due = *ZERO;

 //?Duplicate logic '$getdt' SR that is utilized within TF213 to get
 //?Actual Shipped Date.
 EXECUTE FUNCTION(Rtv AR Org Inv for CB RT) TYPE(RTVOBJ) FILE(ARBECPP)           AC2128454;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(LCL.A_R_Orig_Inv_for_CB);
 {
  //?USER: Initialize routine

  // PAR.A/R Orig Inv for CB = CON.*ZERO
  PAR.A_R_Orig_Inv_for_CB = *ZERO;

  //?USER: Process Data record

  CASE;

  // IF DB1.A/R Orig Inv for CB is Not equal to zero
  IF DB1.A_R_Orig_Inv_for_CB <> *ZERO;

  // PAR.A/R Orig Inv for CB = DB1.A/R Orig Inv for CB
  PAR.A_R_Orig_Inv_for_CB = DB1.A_R_Orig_Inv_for_CB;

  QUIT;

  ENDIF;

 }

 //?Try 'A/R Orig Inv for CB' from A/R Detail to get Actual Ship Date.
 CASE;

 // IF LCL.A/R Orig Inv for CB is Not equal to zero
 IF LCL.A_R_Orig_Inv_for_CB <> *ZERO;

 EXECUTE FUNCTION(Rtv Actual Shipped DteRT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC2128455;
 PARAMETER(LCL.A_R_Orig_Inv_for_CB);
 PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
 {
  //?USER: Initialize routine

  // PAR.Actual Shipped Date = CON.*ZERO
  PAR.Actual_Shipped_Date = *ZERO;

  //?USER: Process Data record

  CASE;

  // IF DB1.Actual Shipped Date is entered
  IF DB1.Actual_Shipped_Date <> *ZERO;

  // PAR.Actual Shipped Date = DB1.Actual Shipped Date
  PAR.Actual_Shipped_Date = DB1.Actual_Shipped_Date;

  QUIT;

  ENDIF;

 }

 //?Try 'A/R Orig Inv for CB' from A/R Detail to get Actual Ship Date.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Invoice < 100000 then use Trans Date from A/R Header othw use Sales Hist.
 CASE;

 // IF DB1.Invoice Number is Less than 100000
 IF DB1.Invoice_Number < 100000;

 // PAR.AR Ord Ref Actual Ship Dt = DB1.Transaction Date Code
 PAR.AR_Ord_Ref_Actual_Ship_Dt = DB1.Transaction_Date_Code;

 //?Invoice < 100000 then use Trans Date from A/R Header othw use Sales Hist.
 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Rtv Actual Shipped DteRT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC2128455;
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
 {
  //?USER: Initialize routine

  // PAR.Actual Shipped Date = CON.*ZERO
  PAR.Actual_Shipped_Date = *ZERO;

  //?USER: Process Data record

  CASE;

  // IF DB1.Actual Shipped Date is entered
  IF DB1.Actual_Shipped_Date <> *ZERO;

  // PAR.Actual Shipped Date = DB1.Actual Shipped Date
  PAR.Actual_Shipped_Date = DB1.Actual_Shipped_Date;

  QUIT;

  ENDIF;

 }

 ENDIF;

 ENDIF;

 //?Set 'AR Ord Ref Actual Ship Dt' Only When Remaining Bal Due is 0.
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.AR Ord Ref Actual Ship Dt = CON.*ZERO
 PAR.AR_Ord_Ref_Actual_Ship_Dt = *ZERO;

 ENDIF;

 //?Check Invoice Suffix and Create A/R Header Ext.
 CASE;

 // IF DB1.Invoice Suffix is Invoices
 IF DB1.Invoice_Suffix = 'IN';

 EXECUTE FUNCTION(Cnv A/R Hdr Ext Crt   RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC2126943;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Remaining_Balance_Due);
 PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
 {
  //?USER: Processing if Data record not found

  //?To identify any Co/Ord# that does NOT exist.
  EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Invoice_Number);
  PARAMETER(PAR.Invoice_Suffix);
  PARAMETER(PAR.Invoice_Suffix);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
   PARAMETER(PAR.Attach_to_Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

  //?USER: Process Data record

  //?Check Invoice Suffix and Create A/R Header Ext.
  CASE;

  // IF PAR.Invoice Suffix is Invoices
  IF PAR.Invoice_Suffix = 'IN';

  EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Load_ID);
  PARAMETER(*ZERO);
  PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
   PARAMETER(PAR.Attach_to_Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

  //?Check Invoice Suffix and Create A/R Header Ext.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Create A/R Hdr Ext if Attach to Order # = 0 otherwise read until 'IN'.
  CASE;

  // IF DB1.Attach to Order Number is Equal to zeros
  IF DB1.Attach_to_Order_Number = *ZERO;

  //?If Remaining Balance Due exists, then use Sales History.
  CASE;

  // IF PAR.Remaining Balance Due is equal to zero
  IF PAR.Remaining_Balance_Due = *ZERO;

  EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(*BLANK);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(*ZERO);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
   PARAMETER(PAR.Attach_to_Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

  //?If Remaining Balance Due exists, then use Sales History.
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
   PARAMETER(PAR.Attach_to_Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

  ENDIF;

  //?Create A/R Hdr Ext if Attach to Order # = 0 otherwise read until 'IN'.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Process Credit Memos (CM) & Debit Memos (DM).
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Read until you hit an Invoice Suffix='IN' (Invoice). Save info from
  //?the last record read whether it's an 'IN' or not.
  // LCL.Continue (Yes/No) USR = CND.Yes
  LCL.Continue_Yes_No_USR = 'Y';

  // LCL.Attach to Order Type-Sale = DB1.Order Type - Sales
  LCL.Attach_to_Order_Type_Sale = DB1.Order_Type_Sales;

  // LCL.Attach to Invoice Number = DB1.Attach to Invoice Number
  LCL.Attach_to_Invoice_Number = DB1.Attach_to_Invoice_Number;

  // LCL.Attach to Order Number = DB1.Attach to Order Number
  LCL.Attach_to_Order_Number = DB1.Attach_to_Order_Number;

  // LCL.Actual Shipped Date = DB1.Actual Shipped Date
  LCL.Actual_Shipped_Date = DB1.Actual_Shipped_Date;

  // LCL.Load ID = DB1.Load ID
  LCL.Load_ID = DB1.Load_ID;

  // DOW LCL.Continue (Yes/No) USR is Yes
  DOW LCL.Continue_Yes_No_USR = 'Y';

  EXECUTE FUNCTION(Cnv A/R Hdr Ext Crt 2 RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC2126993;
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Attach_to_Order_Number);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(PAR.Invoice_Number);
  PARAMETER(PAR.Invoice_Suffix);
  PARAMETER(LCL.Actual_Shipped_Date);
  PARAMETER(LCL.Load_ID);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(LCL.Attach_to_Order_Type_Sale);
  PARAMETER(LCL.Attach_to_Invoice_Number);
  PARAMETER(LCL.Attach_to_Order_Number);
  PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
  PARAMETER(LCL.Continue_Yes_No_USR);
  PARAMETER(LCL.Attach_to_Order_Type_SalU);
  PARAMETER(LCL.Attach_to_Invoice_#_USR);
  PARAMETER(LCL.Attach_to_Order_#_USR);
  PARAMETER(LCL.Attach_to_Actual_ShipDteU);
  PARAMETER(LCL.Attach_to_Load_ID_USR);
  {
   //?USER: Processing if Data record not found

   //?NOT found by Co/Ord# then populate from last Sales History record read.
   EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Actual_Shipped_Date);
   PARAMETER(PAR.Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   {
    //?USER: Processing if Data record not found

    EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Invoice_Number);
    PARAMETER(PAR.Invoice_Suffix);
    PARAMETER(PAR.Order_Type_Sales);
    PARAMETER(PAR.Attach_to_Order_Type_Sale);
    PARAMETER(PAR.Attach_to_Invoice_Number);
    PARAMETER(PAR.Attach_to_Order_Number);
    PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
    PARAMETER(PAR.Attach_to_Load_ID);
    PARAMETER(PAR.Claim_Number);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
     PARAMETER(DB1.Job_Time);
     PARAMETER(DB1.User_Id);
     PARAMETER(DB1.Job_Name);
     PARAMETER(DB1.Job_Date);
     {
      //?Execute internal function

      // PAR.Job Time = JOB.*Job time
      PAR.Job_Time = JOB.*Job_time;

      // PAR.User Id = JOB.*USER
      PAR.User_Id = JOB.*USER;

      // PAR.Job Name = JOB.*JOB
      PAR.Job_Name = JOB.*JOB;

      // PAR.Job Date = JOB.*Job date
      PAR.Job_Date = JOB.*Job_date;

     }

    }

   }

   // PAR.Continue (Yes/No) USR = CND.No
   PAR.Continue_Yes_No_USR = 'N';

   //?USER: Process Data record

   CASE;

   // IF DB1.Invoice Suffix is Invoices
   IF DB1.Invoice_Suffix = 'IN';

   EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(DB1.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(DB1.Actual_Shipped_Date);
   PARAMETER(DB1.Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   {
    //?USER: Processing if Data record not found

    EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Invoice_Number);
    PARAMETER(PAR.Invoice_Suffix);
    PARAMETER(PAR.Order_Type_Sales);
    PARAMETER(PAR.Attach_to_Order_Type_Sale);
    PARAMETER(PAR.Attach_to_Invoice_Number);
    PARAMETER(PAR.Attach_to_Order_Number);
    PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
    PARAMETER(PAR.Attach_to_Load_ID);
    PARAMETER(PAR.Claim_Number);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
     PARAMETER(DB1.Job_Time);
     PARAMETER(DB1.User_Id);
     PARAMETER(DB1.Job_Name);
     PARAMETER(DB1.Job_Date);
     {
      //?Execute internal function

      // PAR.Job Time = JOB.*Job time
      PAR.Job_Time = JOB.*Job_time;

      // PAR.User Id = JOB.*USER
      PAR.User_Id = JOB.*USER;

      // PAR.Job Name = JOB.*JOB
      PAR.Job_Name = JOB.*JOB;

      // PAR.Job Date = JOB.*Job date
      PAR.Job_Date = JOB.*Job_date;

     }

    }

   }

   // PAR.Continue (Yes/No) USR = CND.No
   PAR.Continue_Yes_No_USR = 'N';

   // IF *OTHERWISE
   IF *OTHERWISE;

   // PAR.Attach to Order Type-SalU = DB1.Order Type - Sales
   PAR.Attach_to_Order_Type_SalU = DB1.Order_Type_Sales;

   // PAR.Attach to Invoice # USR = DB1.Attach to Invoice Number
   PAR.Attach_to_Invoice_#_USR = DB1.Attach_to_Invoice_Number;

   // PAR.Attach to Order # USR = DB1.Attach to Order Number
   PAR.Attach_to_Order_#_USR = DB1.Attach_to_Order_Number;

   // PAR.Attach to Actual ShipDteU = DB1.Actual Shipped Date
   PAR.Attach_to_Actual_ShipDteU = DB1.Actual_Shipped_Date;

   // PAR.Attach to Load ID USR = DB1.Load ID
   PAR.Attach_to_Load_ID_USR = DB1.Load_ID;

   // PAR.Continue (Yes/No) USR = CND.Yes
   PAR.Continue_Yes_No_USR = 'Y';

   ENDIF;

   QUIT;

  }

  // LCL.Attach to Order Type-Sale = LCL.Attach to Order Type-SalU
  LCL.Attach_to_Order_Type_Sale = LCL.Attach_to_Order_Type_SalU;

  // LCL.Attach to Invoice Number = LCL.Attach to Invoice # USR
  LCL.Attach_to_Invoice_Number = LCL.Attach_to_Invoice_#_USR;

  // LCL.Attach to Order Number = LCL.Attach to Order # USR
  LCL.Attach_to_Order_Number = LCL.Attach_to_Order_#_USR;

  // LCL.Attach to Actual Ship Dte = LCL.Attach to Actual ShipDteU
  LCL.Orig_Inv_Actual_Ship_Date = LCL.Attach_to_Actual_ShipDteU;

  // LCL.Attach to Load ID = LCL.Attach to Load ID USR
  LCL.Attach_to_Load_ID = LCL.Attach_to_Load_ID_USR;

  ENDDO;

  ENDIF;

  ENDIF;

  ENDIF;

  QUIT;

 }

 //?Check Invoice Suffix and Create A/R Header Ext.
 // IF DB1.Invoice Suffix is Charge Backs
 IF DB1.Invoice_Suffix = 'CB';

 // OR DB1.Invoice Suffix is Rebill
 OR DB1.Invoice_Suffix = 'RB';

 //?Note: Original Inv for CB field could be 0.
 EXECUTE FUNCTION(Cnv A/R Hdr Ext Crt 3 RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC2127247;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number_Ref);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Remaining_Balance_Due);
 PARAMETER(DB1.Original_Inv_for_CB);
 PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
 {
  //?USER: Initialize routine

  EXECUTE FUNCTION(RTV Order Type - SalesRT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2127312;
  PARAMETER(PAR.Order_Number);
  PARAMETER(LCL.Order_Type_Sales);
  {
   //?USER: Initialize routine

   // PAR.Order Type - Sales = CON.*BLANK
   PAR.Order_Type_Sales = *BLANK;

   //?USER: Process Data record

   // PAR.Order Type - Sales = DB1.Order Type - Sales
   PAR.Order_Type_Sales = DB1.Order_Type_Sales;

   QUIT;

  }

  //?USER: Processing if Data record not found

  //?To identify any Co/Ord# that does NOT exist.
  EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Invoice_Number);
  PARAMETER(PAR.Invoice_Suffix);
  PARAMETER(LCL.Order_Type_Sales);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
   PARAMETER(PAR.Attach_to_Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

  //?USER: Process Data record

  //?If not found and a Remaining Balance Due exists, then use Sales History.
  CASE;

  // IF LCL.Order Type - Sales is Not Entered
  IF LCL.Order_Type_Sales = *BLANK;

  // AND PAR.Remaining Balance Due is greater than zero
  AND PAR.Remaining_Balance_Due > *ZERO;

  // LCL.Order Type - Sales = DB1.Order Type - Sales
  LCL.Order_Type_Sales = DB1.Order_Type_Sales;

  ENDIF;

  //?Create A/R Header Ext when you find an Invoice or last record read.
  CASE;

  // IF DB1.Invoice Suffix is Invoices
  IF DB1.Invoice_Suffix = 'IN';

  EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Invoice_Number);
  PARAMETER(PAR.Invoice_Suffix);
  PARAMETER(LCL.Order_Type_Sales);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(PAR.Original_Inv_for_CB);
  PARAMETER(PAR.Order_Number);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Load_ID);
  PARAMETER(*ZERO);
  PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
   PARAMETER(PAR.Attach_to_Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

  //?Create A/R Header Ext when you find an Invoice or last record read.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Create A/R Hdr Ext if Attach to Order # = 0 otherwise read until 'IN'.
  CASE;

  // IF DB1.Attach to Order Number is Equal to zeros
  IF DB1.Attach_to_Order_Number = *ZERO;

  //?If Remaining Balance Due exists, then use Sales History.
  CASE;

  // IF PAR.Remaining Balance Due is equal to zero
  IF PAR.Remaining_Balance_Due = *ZERO;

  EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Invoice_Number);
  PARAMETER(PAR.Invoice_Suffix);
  PARAMETER(LCL.Order_Type_Sales);
  PARAMETER(*BLANK);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
   PARAMETER(PAR.Attach_to_Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

  //?If Remaining Balance Due exists, then use Sales History.
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Invoice_Number);
  PARAMETER(PAR.Invoice_Suffix);
  PARAMETER(LCL.Order_Type_Sales);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Load_ID);
  PARAMETER(*ZERO);
  PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
   PARAMETER(PAR.Attach_to_Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

  ENDIF;

  //?Create A/R Hdr Ext if Attach to Order # = 0 otherwise read until 'IN'.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Read until you hit an Invoice Suffix='IN' (Invoice).
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Save info from the last record read whether it's an 'IN' or not to
  //?create A/R Header Ext.
  // LCL.Continue (Yes/No) USR = CND.Yes
  LCL.Continue_Yes_No_USR = 'Y';

  // LCL.Attach to Order Type-Sale = DB1.Order Type - Sales
  LCL.Attach_to_Order_Type_Sale = DB1.Order_Type_Sales;

  // LCL.Attach to Invoice Number = DB1.Attach to Invoice Number
  LCL.Attach_to_Invoice_Number = DB1.Attach_to_Invoice_Number;

  // LCL.Attach to Order Number = DB1.Attach to Order Number
  LCL.Attach_to_Order_Number = DB1.Attach_to_Order_Number;

  // LCL.Actual Shipped Date = DB1.Actual Shipped Date
  LCL.Actual_Shipped_Date = DB1.Actual_Shipped_Date;

  // LCL.Load ID = DB1.Load ID
  LCL.Load_ID = DB1.Load_ID;

  // DOW LCL.Continue (Yes/No) USR is Yes
  DOW LCL.Continue_Yes_No_USR = 'Y';

  EXECUTE FUNCTION(Cnv A/R Hdr Ext Crt 4 RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC2127248;
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Attach_to_Order_Number);
  PARAMETER(LCL.Order_Type_Sales);
  PARAMETER(PAR.Invoice_Number);
  PARAMETER(PAR.Invoice_Suffix);
  PARAMETER(LCL.Actual_Shipped_Date);
  PARAMETER(LCL.Load_ID);
  PARAMETER(*ZERO);
  PARAMETER(LCL.Attach_to_Order_Type_Sale);
  PARAMETER(LCL.Attach_to_Invoice_Number);
  PARAMETER(LCL.Attach_to_Order_Number);
  PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
  PARAMETER(LCL.Continue_Yes_No_USR);
  PARAMETER(LCL.Attach_to_Order_Type_SalU);
  PARAMETER(LCL.Attach_to_Invoice_#_USR);
  PARAMETER(LCL.Attach_to_Order_#_USR);
  PARAMETER(LCL.Attach_to_Actual_ShipDteU);
  PARAMETER(LCL.Attach_to_Load_ID_USR);
  {
   //?USER: Processing if Data record not found

   //?NOT found by Co/Ord# then populate from last Sales History record read.
   EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Actual_Shipped_Date);
   PARAMETER(PAR.Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   {
    //?USER: Processing if Data record not found

    EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Invoice_Number);
    PARAMETER(PAR.Invoice_Suffix);
    PARAMETER(PAR.Order_Type_Sales);
    PARAMETER(PAR.Attach_to_Order_Type_Sale);
    PARAMETER(PAR.Attach_to_Invoice_Number);
    PARAMETER(PAR.Attach_to_Order_Number);
    PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
    PARAMETER(PAR.Attach_to_Load_ID);
    PARAMETER(PAR.Claim_Number);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
     PARAMETER(DB1.Job_Time);
     PARAMETER(DB1.User_Id);
     PARAMETER(DB1.Job_Name);
     PARAMETER(DB1.Job_Date);
     {
      //?Execute internal function

      // PAR.Job Time = JOB.*Job time
      PAR.Job_Time = JOB.*Job_time;

      // PAR.User Id = JOB.*USER
      PAR.User_Id = JOB.*USER;

      // PAR.Job Name = JOB.*JOB
      PAR.Job_Name = JOB.*JOB;

      // PAR.Job Date = JOB.*Job date
      PAR.Job_Date = JOB.*Job_date;

     }

    }

   }

   // PAR.Continue (Yes/No) USR = CND.No
   PAR.Continue_Yes_No_USR = 'N';

   //?USER: Process Data record

   //?Create A/R Header Ext or Save Attach to Invoice/Order Number.
   CASE;

   // IF DB1.Invoice Suffix is Invoices
   IF DB1.Invoice_Suffix = 'IN';

   EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(DB1.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(DB1.Actual_Shipped_Date);
   PARAMETER(DB1.Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   {
    //?USER: Processing if Data record not found

    EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Invoice_Number);
    PARAMETER(PAR.Invoice_Suffix);
    PARAMETER(PAR.Order_Type_Sales);
    PARAMETER(PAR.Attach_to_Order_Type_Sale);
    PARAMETER(PAR.Attach_to_Invoice_Number);
    PARAMETER(PAR.Attach_to_Order_Number);
    PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
    PARAMETER(PAR.Attach_to_Load_ID);
    PARAMETER(PAR.Claim_Number);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
     PARAMETER(DB1.Job_Time);
     PARAMETER(DB1.User_Id);
     PARAMETER(DB1.Job_Name);
     PARAMETER(DB1.Job_Date);
     {
      //?Execute internal function

      // PAR.Job Time = JOB.*Job time
      PAR.Job_Time = JOB.*Job_time;

      // PAR.User Id = JOB.*USER
      PAR.User_Id = JOB.*USER;

      // PAR.Job Name = JOB.*JOB
      PAR.Job_Name = JOB.*JOB;

      // PAR.Job Date = JOB.*Job date
      PAR.Job_Date = JOB.*Job_date;

     }

    }

   }

   // PAR.Continue (Yes/No) USR = CND.No
   PAR.Continue_Yes_No_USR = 'N';

   //?Create A/R Header Ext or Save Attach to Invoice/Order Number.
   // IF *OTHERWISE
   IF *OTHERWISE;

   // PAR.Attach to Order Type-SalU = DB1.Order Type - Sales
   PAR.Attach_to_Order_Type_SalU = DB1.Order_Type_Sales;

   // PAR.Attach to Invoice # USR = DB1.Attach to Invoice Number
   PAR.Attach_to_Invoice_#_USR = DB1.Attach_to_Invoice_Number;

   // PAR.Attach to Order # USR = DB1.Attach to Order Number
   PAR.Attach_to_Order_#_USR = DB1.Attach_to_Order_Number;

   // PAR.Attach to Actual ShipDteU = DB1.Actual Shipped Date
   PAR.Attach_to_Actual_ShipDteU = DB1.Actual_Shipped_Date;

   // PAR.Attach to Load ID USR = DB1.Load ID
   PAR.Attach_to_Load_ID_USR = DB1.Load_ID;

   // PAR.Continue (Yes/No) USR = CND.Yes
   PAR.Continue_Yes_No_USR = 'Y';

   ENDIF;

   QUIT;

  }

  // LCL.Attach to Order Type-Sale = LCL.Attach to Order Type-SalU
  LCL.Attach_to_Order_Type_Sale = LCL.Attach_to_Order_Type_SalU;

  // LCL.Attach to Invoice Number = LCL.Attach to Invoice # USR
  LCL.Attach_to_Invoice_Number = LCL.Attach_to_Invoice_#_USR;

  // LCL.Attach to Order Number = LCL.Attach to Order # USR
  LCL.Attach_to_Order_Number = LCL.Attach_to_Order_#_USR;

  // LCL.Attach to Actual Ship Dte = LCL.Attach to Actual ShipDteU
  LCL.Orig_Inv_Actual_Ship_Date = LCL.Attach_to_Actual_ShipDteU;

  // LCL.Attach to Load ID = LCL.Attach to Load ID USR
  LCL.Attach_to_Load_ID = LCL.Attach_to_Load_ID_USR;

  ENDDO;

  ENDIF;

  ENDIF;

  ENDIF;

  QUIT;

 }

 //?Check Invoice Suffix and Create A/R Header Ext.
 // IF DB1.Invoice Suffix is On Account Cash
 IF DB1.Invoice_Suffix = 'OA';

 EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER('OA');
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Invoice_Number);
  PARAMETER(PAR.Invoice_Suffix);
  PARAMETER(PAR.Order_Type_Sales);
  PARAMETER(PAR.Attach_to_Order_Type_Sale);
  PARAMETER(PAR.Attach_to_Invoice_Number);
  PARAMETER(PAR.Attach_to_Order_Number);
  PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
  PARAMETER(PAR.Attach_to_Load_ID);
  PARAMETER(PAR.Claim_Number);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

 //?Check Invoice Suffix and Create A/R Header Ext.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Credit Memos (CM) & Debit Memos (DM) will be process here.
 EXECUTE FUNCTION(Cnv A/R Hdr Ext Crt   RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC2126943;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Remaining_Balance_Due);
 PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
 {
  //?USER: Processing if Data record not found

  //?To identify any Co/Ord# that does NOT exist.
  EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Invoice_Number);
  PARAMETER(PAR.Invoice_Suffix);
  PARAMETER(PAR.Invoice_Suffix);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
   PARAMETER(PAR.Attach_to_Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

  //?USER: Process Data record

  //?Check Invoice Suffix and Create A/R Header Ext.
  CASE;

  // IF PAR.Invoice Suffix is Invoices
  IF PAR.Invoice_Suffix = 'IN';

  EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Load_ID);
  PARAMETER(*ZERO);
  PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
   PARAMETER(PAR.Attach_to_Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

  //?Check Invoice Suffix and Create A/R Header Ext.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Create A/R Hdr Ext if Attach to Order # = 0 otherwise read until 'IN'.
  CASE;

  // IF DB1.Attach to Order Number is Equal to zeros
  IF DB1.Attach_to_Order_Number = *ZERO;

  //?If Remaining Balance Due exists, then use Sales History.
  CASE;

  // IF PAR.Remaining Balance Due is equal to zero
  IF PAR.Remaining_Balance_Due = *ZERO;

  EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(*BLANK);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(*ZERO);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
   PARAMETER(PAR.Attach_to_Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

  //?If Remaining Balance Due exists, then use Sales History.
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
   PARAMETER(PAR.Attach_to_Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

  ENDIF;

  //?Create A/R Hdr Ext if Attach to Order # = 0 otherwise read until 'IN'.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Process Credit Memos (CM) & Debit Memos (DM).
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Read until you hit an Invoice Suffix='IN' (Invoice). Save info from
  //?the last record read whether it's an 'IN' or not.
  // LCL.Continue (Yes/No) USR = CND.Yes
  LCL.Continue_Yes_No_USR = 'Y';

  // LCL.Attach to Order Type-Sale = DB1.Order Type - Sales
  LCL.Attach_to_Order_Type_Sale = DB1.Order_Type_Sales;

  // LCL.Attach to Invoice Number = DB1.Attach to Invoice Number
  LCL.Attach_to_Invoice_Number = DB1.Attach_to_Invoice_Number;

  // LCL.Attach to Order Number = DB1.Attach to Order Number
  LCL.Attach_to_Order_Number = DB1.Attach_to_Order_Number;

  // LCL.Actual Shipped Date = DB1.Actual Shipped Date
  LCL.Actual_Shipped_Date = DB1.Actual_Shipped_Date;

  // LCL.Load ID = DB1.Load ID
  LCL.Load_ID = DB1.Load_ID;

  // DOW LCL.Continue (Yes/No) USR is Yes
  DOW LCL.Continue_Yes_No_USR = 'Y';

  EXECUTE FUNCTION(Cnv A/R Hdr Ext Crt 2 RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC2126993;
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Attach_to_Order_Number);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(PAR.Invoice_Number);
  PARAMETER(PAR.Invoice_Suffix);
  PARAMETER(LCL.Actual_Shipped_Date);
  PARAMETER(LCL.Load_ID);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(LCL.Attach_to_Order_Type_Sale);
  PARAMETER(LCL.Attach_to_Invoice_Number);
  PARAMETER(LCL.Attach_to_Order_Number);
  PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
  PARAMETER(LCL.Continue_Yes_No_USR);
  PARAMETER(LCL.Attach_to_Order_Type_SalU);
  PARAMETER(LCL.Attach_to_Invoice_#_USR);
  PARAMETER(LCL.Attach_to_Order_#_USR);
  PARAMETER(LCL.Attach_to_Actual_ShipDteU);
  PARAMETER(LCL.Attach_to_Load_ID_USR);
  {
   //?USER: Processing if Data record not found

   //?NOT found by Co/Ord# then populate from last Sales History record read.
   EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Order_Type_Sale);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(PAR.Actual_Shipped_Date);
   PARAMETER(PAR.Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   {
    //?USER: Processing if Data record not found

    EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Invoice_Number);
    PARAMETER(PAR.Invoice_Suffix);
    PARAMETER(PAR.Order_Type_Sales);
    PARAMETER(PAR.Attach_to_Order_Type_Sale);
    PARAMETER(PAR.Attach_to_Invoice_Number);
    PARAMETER(PAR.Attach_to_Order_Number);
    PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
    PARAMETER(PAR.Attach_to_Load_ID);
    PARAMETER(PAR.Claim_Number);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
     PARAMETER(DB1.Job_Time);
     PARAMETER(DB1.User_Id);
     PARAMETER(DB1.Job_Name);
     PARAMETER(DB1.Job_Date);
     {
      //?Execute internal function

      // PAR.Job Time = JOB.*Job time
      PAR.Job_Time = JOB.*Job_time;

      // PAR.User Id = JOB.*USER
      PAR.User_Id = JOB.*USER;

      // PAR.Job Name = JOB.*JOB
      PAR.Job_Name = JOB.*JOB;

      // PAR.Job Date = JOB.*Job date
      PAR.Job_Date = JOB.*Job_date;

     }

    }

   }

   // PAR.Continue (Yes/No) USR = CND.No
   PAR.Continue_Yes_No_USR = 'N';

   //?USER: Process Data record

   CASE;

   // IF DB1.Invoice Suffix is Invoices
   IF DB1.Invoice_Suffix = 'IN';

   EXECUTE FUNCTION(Cnv A/R Header Ext CrtRT) TYPE(RTVOBJ) FILE(PBC0CPP)           AC2126944;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Order_Type_Sales);
   PARAMETER(DB1.Order_Type_Sales);
   PARAMETER(PAR.Attach_to_Invoice_Number);
   PARAMETER(PAR.Attach_to_Order_Number);
   PARAMETER(DB1.Actual_Shipped_Date);
   PARAMETER(DB1.Load_ID);
   PARAMETER(PAR.Claim_Number);
   PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
   {
    //?USER: Processing if Data record not found

    EXECUTE FUNCTION(Crt A/R Header Ext    CR) TYPE(CRTOBJ) FILE(PBC0CPP)           AC2126475;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Invoice_Number);
    PARAMETER(PAR.Invoice_Suffix);
    PARAMETER(PAR.Order_Type_Sales);
    PARAMETER(PAR.Attach_to_Order_Type_Sale);
    PARAMETER(PAR.Attach_to_Invoice_Number);
    PARAMETER(PAR.Attach_to_Order_Number);
    PARAMETER(PAR.Orig_Inv_Actual_Ship_Date);
    PARAMETER(PAR.Attach_to_Load_ID);
    PARAMETER(PAR.Claim_Number);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(PAR.AR_Ord_Ref_Actual_Ship_Dt);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*ZERO);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    PARAMETER(*BLANK);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
     PARAMETER(DB1.Job_Time);
     PARAMETER(DB1.User_Id);
     PARAMETER(DB1.Job_Name);
     PARAMETER(DB1.Job_Date);
     {
      //?Execute internal function

      // PAR.Job Time = JOB.*Job time
      PAR.Job_Time = JOB.*Job_time;

      // PAR.User Id = JOB.*USER
      PAR.User_Id = JOB.*USER;

      // PAR.Job Name = JOB.*JOB
      PAR.Job_Name = JOB.*JOB;

      // PAR.Job Date = JOB.*Job date
      PAR.Job_Date = JOB.*Job_date;

     }

    }

   }

   // PAR.Continue (Yes/No) USR = CND.No
   PAR.Continue_Yes_No_USR = 'N';

   // IF *OTHERWISE
   IF *OTHERWISE;

   // PAR.Attach to Order Type-SalU = DB1.Order Type - Sales
   PAR.Attach_to_Order_Type_SalU = DB1.Order_Type_Sales;

   // PAR.Attach to Invoice # USR = DB1.Attach to Invoice Number
   PAR.Attach_to_Invoice_#_USR = DB1.Attach_to_Invoice_Number;

   // PAR.Attach to Order # USR = DB1.Attach to Order Number
   PAR.Attach_to_Order_#_USR = DB1.Attach_to_Order_Number;

   // PAR.Attach to Actual ShipDteU = DB1.Actual Shipped Date
   PAR.Attach_to_Actual_ShipDteU = DB1.Actual_Shipped_Date;

   // PAR.Attach to Load ID USR = DB1.Load ID
   PAR.Attach_to_Load_ID_USR = DB1.Load_ID;

   // PAR.Continue (Yes/No) USR = CND.Yes
   PAR.Continue_Yes_No_USR = 'Y';

   ENDIF;

   QUIT;

  }

  // LCL.Attach to Order Type-Sale = LCL.Attach to Order Type-SalU
  LCL.Attach_to_Order_Type_Sale = LCL.Attach_to_Order_Type_SalU;

  // LCL.Attach to Invoice Number = LCL.Attach to Invoice # USR
  LCL.Attach_to_Invoice_Number = LCL.Attach_to_Invoice_#_USR;

  // LCL.Attach to Order Number = LCL.Attach to Order # USR
  LCL.Attach_to_Order_Number = LCL.Attach_to_Order_#_USR;

  // LCL.Attach to Actual Ship Dte = LCL.Attach to Actual ShipDteU
  LCL.Orig_Inv_Actual_Ship_Date = LCL.Attach_to_Actual_ShipDteU;

  // LCL.Attach to Load ID = LCL.Attach to Load ID USR
  LCL.Attach_to_Load_ID = LCL.Attach_to_Load_ID_USR;

  ENDDO;

  ENDIF;

  ENDIF;

  ENDIF;

  QUIT;

 }

 ENDIF;

}


