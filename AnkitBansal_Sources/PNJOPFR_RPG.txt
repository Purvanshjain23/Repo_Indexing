     H/TITLE PRT VRY BrkLstW/CstSMkPF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISSMASO
     H* Date          : 06/05/09  Time  : 09:31:07
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPOC5REL0IF  E           K        DISK
      * RTV : Broker                    Retrieval index
      *
     FCAAPREL2IF  E           K        DISK
      * RTV : Salesperson               Retrieval index       V
      *
     FOMHOREL6IF  E           K        DISK
      * RSQ : Customer Accrual          Broker/Ship To
      *
     FCABBREL1IF  E           K        DISK
      * RTV : Customer                  Retrieval index       NV
      *
     FOMHLREL1IF  E           K        DISK
      * RTV : Accrual Program           Retrieval index
      *
     FCABBRELAIF  E           K        DISK
      * RTV : Customer                  Active Only
      *
     FPMDDREL2IF  E           K        DISK
      * RSQ : Sales Market              Broker/Market
      *
     FPNJOPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: PRT VRY BrkLstW/CstSMkPF  Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L7         7  1
     E                    YK01      100  9  A            ARY Acrl Stand
      *
     I@BBREWG
      * Customer                  Active Only
      * Renamed input format fields
     I              BBBKC7                          WBBKC7
     I              BBAYTX                          WBAYTX
     I              BBACNA                          WBACNA
     I              BBADNA                          WBADNA
     I              BBAENA                          WBAENA
     I              BBAJNA                          WBAJNA
     I              BBBGCD                          WBBGCD
     I              BBG5CD                          WBG5CD
     I              BBBTTX                          WBBTTX
     I              BBBVTX                          WBBVTX
     I              BBBWTX                          WBBWTX
     I              BBABTX                          WBABTX
     I              BBA2NA                          WBA2NA
     I              BBCBST                          WBCBST
     I              BBB0NA                          WBB0NA
     I              BBP3NB                          WBP3NB
     I              BBAXNA                          WBAXNA
     I              BBI6DT                          WBI6DT
     I              BBAYDT                          WBAYDT
     I              BBANC7                          WBANC7
     I              BBBTC7                          WBBTC7
     I              BBK6ST                          WBK6ST
     I              BBUZST                          WBUZST
     I              BBKXCD                          WBKXCD
     I              BBLTCD                          WBLTCD
     I              BBQNST                          WBQNST
     I              BBS2NB                          WBS2NB
     I              BBVHVA                          WBVHVA
     I              BBI7DT                          WBI7DT
     I              BBRJST                          WBRJST
     I              BBRKST                          WBRKST
     I              BBQWST                          WBQWST
     I              BBQXST                          WBQXST
     I              BBQYST                          WBQYST
     I              BBUNCS                          WBUNCS
     I              BBUVST                          WBUVST
     I              BBUWST                          WBUWST
     I              BBUXST                          WBUXST
     I              BBVSST                          WBVSST
     I              BBAATM                          WBAATM
     I              BBAYNA                          WBAYNA
     I              BBA0NA                          WBA0NA
     I              BBAXDT                          WBAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
     IYD01        DS
     I                                        1   1 YI0101
     I                                        2   4 YI0102
     I                                        5   90YI01
      *
     IYM01        DS                        100
     I                                        1   1 WAQFSX
     I                                        2   4 WAOJCD
      *
     IYW01        DS
     I                                        1   1 XAQFSX
     I                                        2   4 XAOJCD
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Broker
      * I :  Broker Code
     I                                        1   6 P1HHAA
      * I : MAP Payee Type
     I                                        7   8 P1PYSX
      * I :  Record Status
     I                                        9   9 P1VSST
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Warehouse Code
     I                                        1   3 P2AJCD
      * N :  Company Number
     I                                    P   4   50P2AIC3
      * N :  Application Code
     I                                        6  11 P2DNCD
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1HHAA    PARM           WP0001  6        Broker Code
     C           P1PYSX    PARM           WP0002  2        Payee Type
     C           P1VSST    PARM           WP0003  1        Record Status
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * PRT VRY BrkLstW/CstSMkPF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$IENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * PRT VRY BrkLstW/CstSMkPF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@C5RESJ                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
      * USER: Null report processing
      * CLC Set for Null Rpt   US - /UT User Source  * 
     C                     MOVEL'Y'       W0AP1P
     C                     MOVEL'Y'       W0NEWP
     C                     MOVEL'Y'       WUGGST           USR Display fie
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     MOVEL*BLANK    $CHHAA           Broker Code
     C                     MOVEL*BLANK    $CDET1           Broker Name DRV
     C                     MOVEL*BLANK    $CPYSX           Payee Type
     C                     MOVEL*BLANK    $CHLTX           Condition Desc.
     C                     MOVEL*BLANK    $CVSST           Record Status
     C                     MOVEL*BLANK    $CAUNA           Description
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELC5HHAA    $DHHAA           Broker Code
     C                     MOVELC5C4T1    $DC4T1           Broker Name
     C                     MOVELC5QMNA    $DQMNA           Broker Address
     C                     MOVELC5C6T1    $DC6T1           Broker Office M
     C                     MOVELC5C7T1    $DC7T1           Broker Telephon
     C                     MOVELC5QNNA    $DQNNA           Broker Address
     C                     Z-ADDC5DAT1    $DDAT1           Broker G/L Vend
     C                     MOVELC5BCCD    $DBCCD           Salesperson Cod
     C                     MOVEL*BLANK    $DKPT1           Salesperson Nam
     C                     MOVELC5C8T1    $DC8T1           Broker Fax Numb
     C                     MOVELC5QONA    $DQONA           Broker City
     C                     MOVELC5QPNA    $DQPNA           Broker State
     C                     MOVELC5C5T1    $DC5T1           Broker Zip
     C                     MOVELC5PYSX    $DPYSX           Payee Type
     C                     MOVEL*BLANK    $DHLTX           Condition Desc.
     C                     MOVELC5VSST    $DVSST           Record Status
     C                     MOVELC5PWSX    $DPWSX           Broker Fax/Emai
     C                     MOVELC5C9T1    $DC9T1           Broker Email Ad
     C                     MOVELC5DBT1    $DDBT1           Broker unused t
     C                     MOVELC5DCT1    $DDCT1           Broker unused t
     C                     MOVELC5DDT1    $DDDT1           Broker EDI Trad
     C                     MOVELC5PXSX    $DPXSX           Broker unused s
     C                     MOVELC5PZSX    $DPZSX           Broker unused s
     C                     MOVELC5UVST    $DUVST           EDI Status 1
     C                     MOVELC5UWST    $DUWST           EDI Status 2
     C                     MOVELC5UXST    $DUXST           EDI Status 3
     C                     Z-ADDC5AATM    $DAATM           Job Time
     C                     MOVELC5AYNA    $DAYNA           User Id
     C                     MOVELC5A0NA    $DA0NA           Job Name
     C                     Z-ADDC5AXDT    $DAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * PRTOBJ calls after print of detail format
      * Embedded PRTOBJ : Prt Vry BrokShipto's  PO
     C                     EXSR UBSUBR                     Embedded PRTOBJ
      * Embedded PRTOBJ : Prt Vry Broker        PO
     C                     EXSR UDSUBR                     Embedded PRTOBJ
      * USER: Process after print of detail format
      * Update first time flag
     C                     MOVEL'N'       YL0001           First Time Flag
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @C5RESJ                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * broker
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Broker Code NE DB1.Broker Code
      *   |- c2    : PAR.Broker Code is Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1HHAA    IFNE C5HHAA                     *IF
     C           P1HHAA    IFNE *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * broker type
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Payee Type NE DB1.Payee Type
      *   |- c2    : PAR.Payee Type is *ALL values
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1PYSX    IFNE C5PYSX                     *IF
     C           P1PYSX    IFEQ 'BG'                       *IF
     C           P1PYSX    OREQ 'BR'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * rcd st
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Record Status NE DB1.Record Status
      *   |- c2    : PAR.Record Status is Valid Entries
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1VSST    IFNE C5VSST                     *IF
     C           P1VSST    IFEQ 'A'                        *IF
     C           P1VSST    OREQ 'D'
     C           P1VSST    OREQ 'I'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     ELSE
      * Next record - Detect level breaks
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         B0MAIN    BEGSR
      *================================================================
      * Prt Vry BrokShipto's  PO: Mainline
      *================================================================
      * Prt Vry BrokShipto's  PO: Initialise
     C                     EXSR ZBINIT
      * Declare restrictor key work fields
     C           *LIKE     DEFN HOHHAA    WQKB01           Broker Code
      * Define keylist
     C           KRSB      KLIST
     C                     KFLD           WQKB01           Broker Code
      * Setup key
     C                     MOVEL$DHHAA    WQKB01           Broker Code
      * Establish starting position
     C           KRSB      SETLL@HOREKB                    *
      * Read first record with user selection
     C                     EXSR B3READ
     C           W0EOFB    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0BL1P  1        First page
     C                     MOVEL'Y'       W0BL00  1        Broker Code
     C                     MOVEL'Y'       W0BL01  1        Ship To Custome
     C                     MOVEL'Y'       W0BL02  1        Accrual Code
     C                     MOVEL'Y'       W0BL03  1        CAH Sequence No
      * Set column headings flag
     C                     MOVE 'Y'       W0BCDT
      * Print report body
     C           W0EOFB    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR B1PHDR
      * Print report detail line
     C                     EXSR B2PDTL
      * Read next record with user selection
     C                     EXSR B3READ
      * Print totals
     C                     EXSR B4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         B0EXIT    ENDSR
      /EJECT
     CSR         B1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0BL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP1P  1
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Load key header format
     C                     MOVELHOHHAA    $EHHAA           Broker Code
     C                     MOVEL*BLANK    $EOTTX           Blank for 4
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP00  1
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP01  1
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP02  1
     C                     END
      *
     C           W0BL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP03  1
     C                     END
      *
      *================================================================
     CSR         B1EXIT    ENDSR
      /EJECT
     CSR         B2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDHOBKC7    $FBKC7           Ship To Custome
     C                     MOVEL*BLANK    $FUWTX           Ship To Name
     C                     MOVEL*BLANK    $FHNNA           Ship To City
     C                     MOVEL*BLANK    $FDBCD           Ship To State C
     C                     MOVELHOOJCD    $FOJCD           Accrual Code
     C                     MOVEL*BLANK    $FPFTX           Text 1 Length U
     C                     Z-ADDHOBFDT    $FBFDT           Period Beginnin
     C                     Z-ADDHOA2DT    $FA2DT           Period Ending D
     C                     MOVEL*BLANK    $FFDTX           Standard Schedu
     C                     MOVELHOTTST    $FTTST           All Products (Y
     C                     MOVELHOQFSX    $FQFSX           Accrual Detail
     C                     Z-ADDHOBKPR    $FBKPR           Accrual Rate
     C                     MOVELHOSHSX    $FSHSX           Accrual Rate Ty
     C                     MOVEL*BLANK    $FHMTX           Condition Desc.
     C                     Z-ADDHOGUNY    $FGUNY           CAH Sequence No
     C                     MOVELHOQDSX    $FQDSX           Comm Threshold
     C                     Z-ADDHOPJDT    $FPJDT           CAH Unused Date
     C                     Z-ADDHOPKDT    $FPKDT           CAH Unused Date
     C                     Z-ADDHOECVL    $FECVL           Comm Min Amt /P
     C                     MOVELHOQESX    $FQESX           Comm Retroactiv
     C                     MOVELHOHHAA    $FHHAA           Broker Code
     C                     Z-ADDHOHQVL    $FHQVL           Max Accrual Amo
     C                     MOVELHOQGSX    $FQGSX           Commission/Not
     C                     MOVELHOQHSX    $FQHSX           CAH Unused Sts
     C                     MOVELHOQISX    $FQISX           CAH Unused Sts
     C                     MOVELHOQJSX    $FQJSX           CAH Unused Sts
     C                     MOVELHOUVST    $FUVST           EDI Status 1
     C                     MOVELHOUWST    $FUWST           EDI Status 2
     C                     MOVELHOUXST    $FUXST           EDI Status 3
     C                     Z-ADDHOAATM    $FAATM           Job Time
     C                     MOVELHOAYNA    $FAYNA           User Id
     C                     MOVELHOA0NA    $FA0NA           Job Name
     C                     Z-ADDHOAXDT    $FAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     MOVEL'N'       WUTAST           First Time Flag
      *
      *================================================================
     CSR         B2EXIT    ENDSR
      /EJECT
     CSR         B3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN HOHHAA    WZB001           Broker Code
     C                     MOVELHOHHAA    WZB001
     C           *LIKE     DEFN HOBKC7    WZB002           Ship To Custome
     C                     Z-ADDHOBKC7    WZB002
     C           *LIKE     DEFN HOOJCD    WZB003           Accrual Code
     C                     MOVELHOOJCD    WZB003
     C           *LIKE     DEFN HOGUNY    WZB004           CAH Sequence No
     C                     Z-ADDHOGUNY    WZB004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFB    OREQ '1'
     C           KRSB      READE@HOREKB                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFB  1
      * Quit if no record read
     C           W0EOFB    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * ** Print selected accrual codes or all
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.Accrual Code EQ PAR.accrual code usr
      *   |- c2    : PAR.accrual code usr is Not Entered
      *   '-
     C           HOOJCD    IFEQ YL0002                     *IF
     C           YL0002    OREQ *BLANK                     *OR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * ** Skip printing if end date is older than today's date  10/25/20
      * CASE: DB1.Period Ending Date LT JOB.*Job date
     C           HOA2DT    IFLT ##JDT                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * VAL Ship to Customer   RT - Customer  * 
     C                     EXSR SIRVGN
      * ** Skip if customer is not active
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0BL00  1        Broker Code
     C                     MOVEL*BLANK    W0BL01  1        Ship To Custome
     C                     MOVEL*BLANK    W0BL02  1        Accrual Code
     C                     MOVEL*BLANK    W0BL03  1        CAH Sequence No
     C           W0EOFB    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0BL00  1        Broker Code
     C                     MOVEL'Y'       W0BL01  1        Ship To Custome
     C                     MOVEL'Y'       W0BL02  1        Accrual Code
     C                     MOVEL'Y'       W0BL03  1        CAH Sequence No
     C                     ELSE
      * Next record - Detect level breaks
     C           HOHHAA    IFNE WZB001                     Broker Code
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL00
     C                     END
     C           HOBKC7    IFNE WZB002                     Ship To Custome
     C           W0BL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL01
     C                     END
     C           HOOJCD    IFNE WZB003                     Accrual Code
     C           W0BL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL02
     C                     END
     C           HOGUNY    IFNE WZB004                     CAH Sequence No
     C           W0BL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL03
     C                     END
     C                     END
      *================================================================
     CSR         B3EXIT    ENDSR
      /EJECT
     CSR         B4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0BL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP03
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP02
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP01
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP00
     C                     END
      *
     C           W0EOFB    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         B4EXIT    ENDSR
      /EJECT
     CSR         C0MAIN    BEGSR
      *================================================================
      * Prt Vry Broker        PO: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN DDHHAA    WQKC01           Broker Code
      * Define keylist
     C           KRSC      KLIST
     C                     KFLD           WQKC01           Broker Code
      * Setup key
     C                     MOVEL$DHHAA    WQKC01           Broker Code
      * Establish starting position
     C           KRSC      SETLL@DDREB9                    *
      * Read first record with user selection
     C                     EXSR C3READ
     C           W0EOFC    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0CL1P  1        First page
     C                     MOVEL'Y'       W0CL00  1        Broker Code
     C                     MOVEL'Y'       W0CL01  1        Market Code
      * Set column headings flag
     C                     MOVE 'Y'       W0CCDT
      * Print report body
     C           W0EOFC    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR C1PHDR
      * Print report detail line
     C                     EXSR C2PDTL
      * Read next record with user selection
     C                     EXSR C3READ
      * Print totals
     C                     EXSR C4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         C0EXIT    ENDSR
      /EJECT
     CSR         C1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0CL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP1P  1
     C                     END
      *
     C           W0CL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP00  1
     C                     END
      *
     C           W0CL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP01  1
     C                     END
      *
      *================================================================
     CSR         C1EXIT    ENDSR
      /EJECT
     CSR         C2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELDDISAA    $HISAA           Market Code
     C                     MOVELDDR3NA    $HR3NA           Market Desc
     C                     MOVELDDRSTY    $HRSTY           Market Type
     C                     MOVELDDHHAA    $HHHAA           Broker Code
     C                     MOVELDDBCCD    $HBCCD           Salesperson Cod
     C                     MOVELDDITAA    $HITAA           Regional Salesp
     C                     MOVELDDKBAA    $HKBAA           Commission Sche
     C                     MOVELDDVSST    $HVSST           Record Status
     C                     Z-ADDDDMJDT    $HMJDT           Create Date
     C                     Z-ADDDDBETM    $HBETM           Create Time
     C                     MOVELDDCCVN    $HCCVN           Create User
     C                     MOVELDDCDVN    $HCDVN           Create Program
     C                     Z-ADDDDMKDT    $HMKDT           Change Date
     C                     Z-ADDDDBFTM    $HBFTM           Change Time
     C                     MOVELDDCEVN    $HCEVN           Change User
     C                     MOVELDDCFVN    $HCFVN           Change Program
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         C2EXIT    ENDSR
      /EJECT
     CSR         C3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN DDHHAA    WZC001           Broker Code
     C                     MOVELDDHHAA    WZC001
     C           *LIKE     DEFN DDISAA    WZC002           Market Code
     C                     MOVELDDISAA    WZC002
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFC    OREQ '1'
     C           KRSC      READE@DDREB9                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFC  1
      * Quit if no record read
     C           W0EOFC    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0CL00  1        Broker Code
     C                     MOVEL*BLANK    W0CL01  1        Market Code
     C           W0EOFC    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0CL00  1        Broker Code
     C                     MOVEL'Y'       W0CL01  1        Market Code
     C                     ELSE
      * Next record - Detect level breaks
     C           DDHHAA    IFNE WZC001                     Broker Code
      * Set on level break indicator
     C                     MOVEL'Y'       W0CL00
     C                     END
     C           DDISAA    IFNE WZC002                     Market Code
     C           W0CL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0CL01
     C                     END
     C                     END
      *================================================================
     CSR         C3EXIT    ENDSR
      /EJECT
     CSR         C4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0CL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0CP01
     C                     END
      *
     C           W0CL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0CP00
     C                     END
      *
     C           W0EOFC    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         C4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of PRT VRY BrkLstW/CstSMkPF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of PRT VRY BrkLstW/CstSMkPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
     C                     MOVELP1HHAA    $CHHAA           Broker Code
      * CASE: 1PG.Broker Code is Entered
     C           $CHHAA    IFNE *BLANK                     *IF
     C                     MOVEL*BLANK    $CDET1           Broker Name DRV
      * Broker Name DRV
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(PAR) $CHHAA' defaulted for 'Broker Code'.
      * Rtv Broker Info       RT - Broker  * 
     C                     EXSR SCRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CDET1           Broker Name DRV
     C                     MOVEL'All'     $CDET1           Broker Name DRV
     C                     END                             *FI
     C                     MOVELP1VSST    $CVSST           Record Status
      * CASE: 1PG.Record Status is Valid Entries
     C           $CVSST    IFEQ 'A'                        *IF
     C           $CVSST    OREQ 'D'
     C           $CVSST    OREQ 'I'
      * 1PG.Description = Condition name of 1PG.Record Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1255478   Y2LSNO  70       List number
     C                     PARM $CVSST    W0INVL 25        Record Status
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CAUNA    PARM           W0CNNM 25        Description
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CAUNA           Description
     C                     MOVEL'All'     $CAUNA           Description
     C                     END                             *FI
     C                     MOVELP1PYSX    $CPYSX           Payee Type
      * CASE: 1PG.Payee Type is *ALL values
     C           $CPYSX    IFEQ 'BG'                       *IF
     C           $CPYSX    OREQ 'BR'
      * 1PG.Condition Desc. 1  USR = Condition name of 1PG.Payee Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1823003   Y2LSNO  70       List number
     C                     PARM $CPYSX    W0INVL 25        Payee Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CHLTX           Condition Desc.
     C                     MOVEL'All'     $CHLTX           Condition Desc.
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
     C                     MOVEL'0'       *IN79
     C           WUGGST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$C1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Detail line. of PRT VRY BrkLstW/CstSMkPF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * CUR.Condition Desc. 1  USR = Condition name of CUR.Payee Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1823003   Y2LSNO  70       List number
     C                     PARM $DPYSX    W0INVL 25        Payee Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $DHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVEL*BLANK    $DKPT1           Salesperson Nam
      * Salesperson Name DRV
      * RTV Salesperson NmeOnlyRT - Salesperson  * 
     C                     EXSR SDRVGN
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
     C                     MOVEL'0'       *IN79
     C           YL0001    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Print First Page Format of Prt Vry BrokShipto's  PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0BL1P
     C                     END                             FI
      * Print Broker Code of Prt Vry BrokShipto's  PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP00    ANDEQ'P'
     C                     MOVEL'0'       *IN79
     C           WUTAST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$EKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0BCDT
      *
      * Reset format print flag
     C                     MOVE 'P'       W0BP00
     C                     END                             FI
      * Print Ship To Customer of Prt Vry BrokShipto's  PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP01
     C                     END                             FI
      * Print Accrual Code of Prt Vry BrokShipto's  PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP02
     C                     END                             FI
      * Print CAH Sequence No of Prt Vry BrokShipto's  PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP03
     C                     END                             FI
      * Print Detail line. of Prt Vry BrokShipto's  PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0BCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BPDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * RTV Cust Name/Addr     RT - Customer  * 
     C                     EXSR SERVGN
      * RTV Accrual Info-All   RT - Accrual Code Master  * 
     C                     EXSR SFRVGN
      * ** Use All Products flag from Customer Accrual rcd 10/23/07 LJB/R
     C                     MOVELHOTTST    $FTTST           All Products (Y
      * CUR.Condition Desc. 2  USR = Condition name of CUR.Accrual Rate T
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1704721   Y2LSNO  70       List number
     C                     PARM $FSHSX    W0INVL 25        Accrual Rate Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $FHMTX    PARM           W0CNNM 25        Condition Desc.
      *
      * ** Display "+" broker has more than one commission accrual code
      * CASE: LCL.Accrual Type is Commission
     C           YL0008    IFEQ 'CM'                       *IF
      * CASE: LCL.Count USR is GT 0
     C           YL0026    IFGT *ZERO                      *IF
     C                     MOVEL'+'       $FPFTX           Text 1 Length U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         YL0026           Count USR
     C                     END                             *FI
     C                     END                             *FI
      * ** Add Acrl Code to array if Std Sched=Y and All Prod = N or X
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CUR.Standard Schedule (Y/N) is yes
      *   |- c2    : CUR.All Products (Y/N) is Not Yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $FFDTX    IFEQ 'Y'                        *IF
     C           $FTTST    IFEQ 'N'                        *IF
     C           $FTTST    OREQ 'X'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Add Accrual Code to array if Report type is Detail only
      * CASE: PAR.Detail/Summary Report Usr is Detail
     C           'D'       IFEQ 'D'                        *IF
      * UPD Acr Stand Schd ExcpRT - *Arrays  * 
     C                     EXSR SGRVGN
     C                     END                             *FI
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Ship To Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $FBKC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$FBKC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VFBKC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFBKC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Period Beginning Date to display format
      * Convert date
     C           1000000   ADD  $FBFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VFBFDT
      * Convert Period Ending Date to display format
      * Convert date
     C           1000000   ADD  $FA2DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VFA2DT
      * Print column headings if required
     C           W0BCDT    IFEQ 'Y'
     C                     WRITE$FCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0BCDT
     C                     END                             FI
      * Print format
     C                     WRITE$FDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0BPDT
     C                     END                             FI
      * Print First Page Format of Prt Vry Broker        PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP1P    ANDEQ'P'
      * Print format
     C                     WRITE$G1STPAG
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0CP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0CL1P
     C                     END                             FI
      * Print Broker Code of Prt Vry Broker        PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP00
     C                     END                             FI
      * Print Market Code of Prt Vry Broker        PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP01
     C                     END                             FI
      * Print Detail line. of Prt Vry Broker        PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0CCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CPDT    ANDEQ'P'
      * Convert fields to external form
      * Print column headings if required
     C           W0CCDT    IFEQ 'Y'
     C                     WRITE$HCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0CCDT
     C                     END                             FI
      * Print format
     C                     WRITE$HDTLRCD
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0CPDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of PRT VRY BrkLstW/CstSMkPF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  6         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT VRY BrkLstW/CstSMkPF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD5         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt Vry BrokShipto's  PO
     C           W0BP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Broker Code of Prt Vry BrokShipto's  PO
     C           W0BP00    IFEQ 'Y'
     C                     ADD  4         W0FSUM
     C                     END                             FI
      *
      * * Ship To Customer of Prt Vry BrokShipto's  PO
     C           W0BP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Accrual Code of Prt Vry BrokShipto's  PO
     C           W0BP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * CAH Sequence No of Prt Vry BrokShipto's  PO
     C           W0BP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Vry BrokShipto's  PO
     C           W0BPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0BCDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt Vry Broker        PO
     C           W0CP1P    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Broker Code of Prt Vry Broker        PO
     C           W0CP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Market Code of Prt Vry Broker        PO
     C           W0CP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Vry Broker        PO
     C           W0CPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0CCDT    IFEQ 'Y'
     C                     Z-ADD5         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL'0'       *IN79
     C           YL0001    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'A/R'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Broker Info       RT - Broker  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           C5HHAA           Broker Code
      * Setup key
     C                     MOVEL$CHHAA    C5HHAA           Broker Code
      * Establish starting position
     C           KRSSC     CHAIN@C5RESJ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3288' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $CDET1           Broker Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELC5C4T1    $CDET1           Broker Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Salesperson NmeOnlyRT - Salesperson  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           APBCCD           Salesperson Cod
      * Setup key
     C                     MOVEL$DBCCD    APBCCD           Salesperson Cod
      * Establish starting position
     C           KRSSD     CHAIN@APREBU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0039' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $DKPT1           Salesperson Nam
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAPALTX    $DKPT1           Salesperson Nam
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Cust Name/Addr     RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           BBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADD$FBKC7    BBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSE     CHAIN@BBREE9              90    *
      * Data record not found
     C   90                MOVEL'USR0170' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBBAYTX    $FUWTX           Customer Name
     C                     MOVELBBACNA    WUACNA           Address Line 1
     C                     MOVELBBADNA    WUADNA           Address Line 2
     C                     MOVELBBAENA    WUAENA           Address Line 3
     C                     MOVELBBAJNA    $FHNNA           City
     C                     MOVELBBBGCD    $FDBCD           State Code
     C                     MOVELBBBTTX    WUBTTX           Zip/Postal Code
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Accrual Info-All   RT - Accrual Code Master  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           HLOJCD           Accrual Code
      * Setup key
     C                     MOVEL$FOJCD    HLOJCD           Accrual Code
      * Establish starting position
     C           KRSSF     CHAIN@HLREK4              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1514' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0003           Accrual Descrip
     C                     MOVEL*BLANK    YL0004           Automatic Accru
     C                     MOVEL*BLANK    YL0005           Print On Invoic
     C                     MOVEL*BLANK    YL0006           Accrue Differen
     C                     MOVEL*BLANK    YL0007           Add-on/Allowanc
     C                     MOVEL*BLANK    YL0008           Accrual Type
     C                     MOVEL*BLANK    YL0009           Sub Ledger Code
     C                     MOVEL*BLANK    YL0010           Reverse Accrual
     C                     MOVEL*BLANK    YL0011           U/M - Primary D
     C                     MOVEL*BLANK    YL0012           G/L Code Dr
     C                     MOVEL*BLANK    YL0013           G/L Code Cr
     C                     MOVEL*BLANK    YL0014           G/L Code Differ
     C                     MOVEL*BLANK    YL0015           G/L Code Differ
     C                     MOVEL*BLANK    YL0016           Ledger Accrual
     C                     MOVEL*BLANK    YL0017           All Products (Y
     C                     Z-ADD*ZERO     YL0018           Accrual Rate
     C                     MOVEL*BLANK    YL0019           Accrual Rate Ty
     C                     MOVEL*BLANK    WUQFSX           Accrual Detail
     C                     MOVEL*BLANK    $FFDTX           Standard Schedu
     C                     MOVEL*BLANK    YL0020           Affect Sales Re
     C                     MOVEL*BLANK    YL0021           Affect Invoice
     C                     MOVEL*BLANK    YL0022           Invoice Print T
     C                     Z-ADD*ZERO     YL0023           Max Accrual Amo
     C                     MOVEL*BLANK    YL0024           Max Accrual Amo
     C                     MOVEL*BLANK    YL0025           Record Status
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELHLLENA    YL0003           Accrual Descrip
     C                     MOVELHLTOST    YL0004           Automatic Accru
     C                     MOVELHLTQST    YL0005           Print On Invoic
     C                     MOVELHLTRST    YL0006           Accrue Differen
     C                     MOVELHLTSST    YL0007           Add-on/Allowanc
     C                     MOVELHLOKCD    YL0008           Accrual Type
     C                     MOVELHLTYST    YL0009           Sub Ledger Code
     C                     MOVELHLOQCD    YL0010           Reverse Accrual
     C                     MOVELHLHHCD    YL0011           U/M - Primary D
     C                     MOVELHLI2TX    YL0012           G/L Code Dr
     C                     MOVELHLJFTX    YL0013           G/L Code Cr
     C                     MOVELHLI3TX    YL0014           G/L Code Differ
     C                     MOVELHLJGTX    YL0015           G/L Code Differ
     C                     MOVELHLLEDG    YL0016           Ledger Accrual
     C                     MOVELHLTTST    YL0017           All Products (Y
     C                     Z-ADDHLBKPR    YL0018           Accrual Rate
     C                     MOVELHLSHSX    YL0019           Accrual Rate Ty
     C                     MOVELHLQFSX    WUQFSX           Accrual Detail
     C                     MOVELHLFDTX    $FFDTX           Standard Schedu
     C                     MOVELHLFETX    YL0020           Affect Sales Re
     C                     MOVELHLFFTX    YL0021           Affect Invoice
     C                     MOVELHLFGTX    YL0022           Invoice Print T
     C                     Z-ADDHLHQVL    YL0023           Max Accrual Amo
     C                     MOVELHLFHTX    YL0024           Max Accrual Amo
     C                     MOVELHLVSST    YL0025           Record Status
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * UPD Acr Stand Schd ExcpRT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*LOVAL    YD01
      * Move key fields to ARY Acrl Stand Sched Excp
     C                     MOVELHOQFSX    YI0101           Accrual Detail
     C                     MOVELHOOJCD    YI0102           Accrual Code
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFGT YD01
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE HOQFSX
     C           YI0102    ORNE HOOJCD
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
      * USER: Processing if Data record not found
      * CRT Acr Stand Schd ExcpCR - *Arrays  * 
     C                     EXSR SHCRRC
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C           YI0101    ANDEQHOQFSX
     C           YI0102    ANDEQHOOJCD
      *
     C           YI01      OCUR YM01
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     ADD  1         YR01
     C           YR01      IFLE 100
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C                     ENDIF
     C                     ENDDO
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHCRRC    BEGSR
      *================================================================
      * CRT Acr Stand Schd ExcpCR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL01      IFEQ 100
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C                     MOVEL*BLANK    XAQFSX           Accrual Detail
     C                     MOVEL*BLANK    XAOJCD           Accrual Code
      * Move all fields to ARY Acrl Stand Sched Excp
     C                     MOVELHOQFSX    XAQFSX           Accrual Detail
     C                     MOVELHOOJCD    XAOJCD           Accrual Code
      *
      * Insert after last used element
     C           YL01      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK01,Y    IFNE *HIVAL
      * If so, reuse MODS index
     C                     MOVELYK01,Y    YD01
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI01
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to ARY Acrl Stand Sched Excp
     C                     MOVELXAQFSX    YI0101           Accrual Detail
     C                     MOVELXAOJCD    YI0102           Accrual Code
      *
     C                     MOVELYD01      YK01,Y
     C           YI01      OCUR YM01
      * Update MODS fields
     C                     MOVELXAQFSX    WAQFSX           Accrual Detail
     C                     MOVELXAOJCD    WAOJCD           Accrual Code
      * Only sort if element is out of position
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDGTYD01
     C                     ADD  1         YR01    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK01
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL01
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * VAL Ship to Customer   RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADDHOBKC7    WBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSI     CHAIN@BBREWG              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0170' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0027           Customer Name
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBAYTX    YL0027           Customer Name
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ***** Change log and comments
      *================================================================
      * ** Skip printing inactive or deleted brokers   10/25/2007 LJB
      * RMC DLY029 5/23/07 Db Changes;payee type selector & output
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Vry BrokShipto's  PO
      *================================================================
      *
     C                     MOVEL*BLANK    WN0001  1        Accrual Detail
     C                     MOVEL*BLANK    WN0002  3        Accrual Code
      *
      * Prt Vry BrokShipto's  PO: Mainline
     C                     EXSR B0MAIN
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * ** 10/23/2007 LJB / Rose FT603
      * ** Use All Products flag from Customer Accrual instead of
      * ** the Accrual Master, in case it is not a standard schecule
      * ** Skip printing if end date is older than today's date  10/25/20
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Vry Broker        PO
      *================================================================
      * Prt Vry Broker        PO: Mainline
     C                     EXSR C0MAIN
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZBINIT    BEGSR
      *================================================================
      * Prt Vry BrokShipto's  PO: Initialise
      *================================================================
      * USER: Initialize program
     C                     MOVEL'Y'       WUTAST           First Time Flag
      * ***** Change Log and Comments
     C                     EXSR UCSUBR                     ***** Change Lo
      *================================================================
     CSR         ZBEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2AJCD           Warehouse Code
     C                     Z-ADD*ZERO     P2AIC3           Company Number
     C                     MOVEL*BLANK    P2DNCD           Application Cod
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field USR Display field
     C                     MOVEL*BLANK    WUGGST  1
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    C5HHAA           Broker Code
      * Define work field First Time Flag
     C                     MOVEL*BLANK    WUTAST  1
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    HOHHAA           Broker Code
     C                     MOVEL*LOVAL    HOBKC7           Ship To Custome
     C                     MOVEL*LOVAL    HOOJCD           Accrual Code
     C                     MOVEL*LOVAL    HOGUNY           CAH Sequence No
      * Define work field Address Line 1
     C                     MOVEL*BLANK    WUACNA 30
      * Define work field Address Line 2
     C                     MOVEL*BLANK    WUADNA 30
      * Define work field Address Line 3
     C                     MOVEL*BLANK    WUAENA 30
      * Define work field Zip/Postal Code
     C                     MOVEL*BLANK    WUBTTX 11
      * Define work field Accrual Detail Search
     C                     MOVEL*BLANK    WUQFSX  1
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01    50
     C                     Z-ADD1         Y       50
     C                     ENDIF
      *
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WBP3NB           D & B Number
     C                     Z-ADD*ZERO     WBI6DT           Date of D & B R
     C                     Z-ADD*ZERO     WBAYDT           Credit Line Exp
     C                     Z-ADD*ZERO     WBANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WBBTC7           Parent Customer
     C                     Z-ADD*ZERO     WBS2NB           Parent Credit L
     C                     Z-ADD*ZERO     WBVHVA           A/R Credit Limi
     C                     Z-ADD*ZERO     WBI7DT           Order Entry Hol
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    DDHHAA           Broker Code
     C                     MOVEL*LOVAL    DDISAA           Market Code
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local work field First Time Flag
     C                     MOVEL*BLANK    YL0001  1
      * Define null work field Broker Address Line 1
     C                     MOVEL*BLANK    YN0001 30
      * Define null work field Broker Address Line 2
     C                     MOVEL*BLANK    YN0002 30
      * Define null work field Broker City
     C                     MOVEL*BLANK    YN0003 20
      * Define null work field Broker State
     C                     MOVEL*BLANK    YN0004  2
      * Define null work field Broker Zip
     C                     MOVEL*BLANK    YN0005 11
      * Define null work field Broker Office Manager
     C                     MOVEL*BLANK    YN0006 30
      * Define null work field Broker Telephone Number
     C                     MOVEL*BLANK    YN0007 25
      * Define null work field Broker Fax Number
     C                     MOVEL*BLANK    YN0008 25
      * Define null work field Broker Email Address
     C                     MOVEL*BLANK    YN0009 50
      * Define null work field Broker G/L Vendor Number
     C                     Z-ADD*ZERO     YN0010  80
      * Define null work field Salesperson Code
     C                     MOVEL*BLANK    YN0011  3
      * Define local work field accrual code usr
     C                     MOVEL*BLANK    YL0002  3
      * Define local work field Accrual Description
     C                     MOVEL*BLANK    YL0003 30
      * Define local work field Automatic Accrual (Y/N)
     C                     MOVEL*BLANK    YL0004  1
      * Define local work field Print On Invoice (Y/N)
     C                     MOVEL*BLANK    YL0005  1
      * Define local work field Accrue Difference (Y/N)
     C                     MOVEL*BLANK    YL0006  1
      * Define local work field Add-on/Allowance
     C                     MOVEL*BLANK    YL0007  1
      * Define local work field Accrual Type
     C                     MOVEL*BLANK    YL0008  2
      * Define local work field Sub Ledger Code
     C                     MOVEL*BLANK    YL0009  2
      * Define local work field Reverse Accrual Code
     C                     MOVEL*BLANK    YL0010  3
      * Define local work field U/M - Primary Dft
     C                     MOVEL*BLANK    YL0011  2
      * Define local work field G/L Code Dr
     C                     MOVEL*BLANK    YL0012  8
      * Define local work field G/L Code Cr
     C                     MOVEL*BLANK    YL0013  8
      * Define local work field G/L Code Difference Dr
     C                     MOVEL*BLANK    YL0014  8
      * Define local work field G/L Code Difference Cr
     C                     MOVEL*BLANK    YL0015  8
      * Define local work field Ledger Accrual (Y/N)
     C                     MOVEL*BLANK    YL0016  1
      * Define local work field All Products (Y/N)
     C                     MOVEL*BLANK    YL0017  1
      * Define local work field Accrual Rate
     C                     Z-ADD*ZERO     YL0018  96
      * Define local work field Accrual Rate Type
     C                     MOVEL*BLANK    YL0019  2
      * Define local work field Affect Sales Realz Rpt
     C                     MOVEL*BLANK    YL0020  1
      * Define local work field Affect Invoice Price
     C                     MOVEL*BLANK    YL0021  1
      * Define local work field Invoice Print Type
     C                     MOVEL*BLANK    YL0022  2
      * Define local work field Max Accrual Amount
     C                     Z-ADD*ZERO     YL0023 112
      * Define local work field Max Accrual Amount Type
     C                     MOVEL*BLANK    YL0024  2
      * Define local work field Record Status
     C                     MOVEL*BLANK    YL0025  1
      * Define local work field Count USR
     C                     Z-ADD*ZERO     YL0026  50
      * Define local work field Customer Name
     C                     MOVEL*BLANK    YL0027 30
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     MOVEL'N'       WUGGST           USR Display fie
      * Initialize first time flag
     C                     MOVEL'Y'       YL0001           First Time Flag
      * ***** Change log and comments
     C                     EXSR UASUBR                     ***** Change lo
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
