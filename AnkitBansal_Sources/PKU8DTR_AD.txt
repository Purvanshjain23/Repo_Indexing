// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKU8DTR
// ?Date: 14.08.2025 Time: 02:53:01
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?MODIFICATIONS
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
EXECUTE FUNCTION(C2140 Trn TTo Dbl Inv) TYPE(EXCINTFUN)                         AB1188593;
{
 //?Execute internal function

 //?12/23/96   SLM     Transfer of one tattoo to another the
 //?                   tattoo detail was doubling up
 //?                   Establish proceudre of how this will be done
 //?                   for the scale people.
 //?                   The orginal tattoo scale ticket must be printed
 //?                   before this transfer can be completed.
 //?                   Do not allow transfer to be selected if
 //?                   any weightments have not been printed.
 //?                   Give user message and not select the transfer
 //?                   Also on the create of the scale weight record
 //?                   create a record but the active status flag stays
 //?                   as was on the orginal record
}


EXECUTE FUNCTION(C2156 DOA HELD OVERS) TYPE(EXCINTFUN)                          AB1188624;
{
 //?Execute internal function

 //?12/24/96   SLM     User was report of Doa after scale tickets
 //?                   were done.  The tattoo was sent to kill and they
 //?                   missed reporting doas.  So if the user had the
 //?                   scaling pgm up for this tattoo before the sent
 //?                   was completed then when the scaleing exits the
 //?                   scale ticket file is recounted which puts the
 //?                   held overs back on the org day.  Tattoo scale
 //?                   tickets are not moved for held overs.
 //?                   Validate if there is one tattoo detail for this
 //?                   tattoo that has been driven then do not allow
 //?                   user to change the tattoo scale file.
 //?                   Also if error go to display pgm
 //?                   Only if no error, and all open tattoo detail
 //?                   will the edits be allowed.
}


EXECUTE FUNCTION(HPE076) TYPE(EXCINTFUN)                                        AB1188851;
{
 //?Execute internal function

 //?C1108 -- Duplicate Tattoo Problem
 //?  PKLYDTR -- WW Tattoo
 //?  PKL0E1R -- Edt TTt Hdr
 //?  PKO6PVR-- Edt Ttt Hdr (PV)
}


// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


//?USER: Validate header fields

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// CTL.BOH Company Number = PAR.BOH Company Number
CTL.BOH_Company_Number = PAR.BOH_Company_Number;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

// CTL.RS Record Status = CND.Active
CTL.RS_Record_Status = 'A';

ENDIF;

EXECUTE FUNCTION(Rtv Producer Name     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1101542;
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PD_Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Pdctn Loc Name    RT) TYPE(RTVOBJ) FILE(PKAFREP)           AB1101543;
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PL_Location_Code);
PARAMETER(CTL.PL_Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Initialize subfile record

// RCD.No Scale Record Prted Us = CND.Yes
RCD.No_Scale_Record_Prted_Us = 'Y';

// RCD.Group Reference Code  USR = RCD.TH Tattoo Reference
RCD.Group_Reference_Code_USR = RCD.TH_Group_Reference;

CASE;

// IF RCD.TH Source Type is Internal
IF RCD.TH_Source_Type = 'I';

//?* 01/27/03 PKD PK0495 Replaced HP255 with HP249.
// Call program Z1v HPS Farm Info     UP.
CALL PROGRAM(Z1v HPS Farm Info     UP) ('HP249');
PARAMETER(WRK.*Return_code);
PARAMETER(RCD.TH_HPS_Movement_Ref_#);
PARAMETER(WRK.Farm_site_Name_f_HPS_USR);
PARAMETER(WRK.Farm_Site_USR);
PARAMETER(RCD.HPS_FS_Comp_Relation_USR);
PARAMETER(WRK.State);

CASE;

// IF RCD.HPS FS Comp Relation USR is Contract
IF RCD.HPS_FS_Comp_Relation_USR = 'CON';

// RCD.Text 25 1 USR = CON.CONTRACT-DO NOT SPREAD
RCD.Text_25_1_USR = 'CONTRACT-DO NOT SPREAD';

ENDIF;

ENDIF;

// WRK.@Record Found = CND.Record Not Found
WRK.@Record_Found = 'N';

// WRK.Found Act Scl Rec Sts Usr = CND.Blank
WRK.Found_Act_Scl_Rec_Sts_Usr = *BLANK;

EXECUTE FUNCTION(Rtv Scl Tkt Val Edt   RT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1157790;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(WRK.@Record_Found);
PARAMETER(WRK.Found_Act_Scl_Rec_Sts_Usr);
{
 //?USER: Processing if Data record not found

 // PAR.@Record Found = CND.Record Not Found
 PAR.@Record_Found = 'N';

 //?USER: Process Data record

 // PAR.@Record Found = CND.Record Found
 PAR.@Record_Found = 'Y';

 CASE;

 // IF DB1.RS Record Status is Active
 IF DB1.RS_Record_Status = 'A';

 // PAR.Found Act Scl Rec Sts Usr = CND.Yes
 PAR.Found_Act_Scl_Rec_Sts_Usr = 'Y';

 ENDIF;

}


//?Validate to allow if any tattoo scale records need to be printed
CASE;

// IF WRK.@Record Found is Record Not Found
IF WRK.@Record_Found = 'N';

//?Validate to allow if any tattoo scale records need to be printed
// IF WRK.Found Act Scl Rec Sts Usr is Yes
IF WRK.Found_Act_Scl_Rec_Sts_Usr = 'Y';

// Send error message - 'One Scale Wgtmnt has not been printed.. F16 on WW Scale Weight for this tat
ERROR(PRK0650);
MSGPARM(RCD.TH_Tattoo_Number);

// RCD.No Scale Record Prted Us = CND.No
RCD.No_Scale_Record_Prted_Us = 'N';

ENDIF;

//?USER: Validate subfile record relations

//?8=WW Tattoo Scale Ticket
CASE;

// IF RCD.*SFLSEL is *Option 8 request
IF RCD.*SFLSEL = '8'/'8';

// Call program zWW Tattoo Scl Tkt SUP DF.
CALL PROGRAM(zWW Tattoo Scl Tkt SUP DF) ('PKU9DFR');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(RCD.TH_Avg_Live_Wgt);
PARAMETER(RCD.TH_Source_Type);
PARAMETER(RCD.TH_Scale_Ticket_Sts);
PARAMETER(RCD.DF_Defect_Code);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(RCD.HC_Class_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

//?CALC: Subfile record function fields

CTL.Head_Total_SUM = SUM(RCD.TH_Head_Received);

CTL.Weight_SUM = SUM(RCD.TH_Live_Wgt);

//?USER: Process command keys

CASE;

// IF CTL.*CMD key is Refresh
IF CTL.*CMD_key = '05';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF CTL.*CMD key is Create
IF CTL.*CMD_key = '06';

EXECUTE FUNCTION(Rtv Producer Name     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1101542;
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PD_Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Pdctn Loc Name    RT) TYPE(RTVOBJ) FILE(PKAFREP)           AB1101543;
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PL_Location_Code);
PARAMETER(CTL.PL_Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Call program Edt Ttt Hdr (create)  PV.
CALL PROGRAM(Edt Ttt Hdr (create)  PV) ('PKO6PVR');
PARAMETER(CTL.BOH_Company_Number);
PARAMETER(CTL.BOH_Buy_Order_Number);
PARAMETER(CTL.BOL_Load_Number);
PARAMETER(*ZERO);
PARAMETER(CTL.BOL_Kill_Date);
PARAMETER(*BLANK);
PARAMETER(WRK.Blank_USR);
PARAMETER(*ZERO);
PARAMETER('M');
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PL_Location_Code);
PARAMETER(*BLANK);
PARAMETER(CTL.Oms_System_Value_Alpha);
PARAMETER(CTL.Name_USR);
PARAMETER(CTL.BOL_Kill_Date);
PARAMETER(CTL.PD_Name);
PARAMETER(CTL.PL_Name);
PARAMETER('N');

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

// PGM.*Continue transaction = CND.*NO
PGM.*Continue_transaction = 'N';

QUIT;

