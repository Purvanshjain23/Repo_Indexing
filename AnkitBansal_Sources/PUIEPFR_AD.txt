// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUIEPFR
// ?Date: 14.08.2025 Time: 12:06:56
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?R13074 RMC 7/09/18 NEW FORM FOR APPLICATION CONTINUATION - 9060-6
//?   USES OVERLAY - PRKAPPL2
// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(PAR.Company_Number);
PARAMETER('EXPDISTRCT');
PARAMETER(LCL.Text_USR_9);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// LCL.Count USR = CON.*ZERO
LCL.Count_USR = *ZERO;

// LCL.Status Flag 14 Y/N = CND.No
LCL.Status_Flag_14_Y_N = 'N';

EXECUTE FUNCTION(RTV Header Status      RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1231329;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Header_Status);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Print max std qty and weight if not shipped, and comp value=Y
CASE;

// IF LCL.Header Status is Confirmed & Complete
IF LCL.Header_Status = 'C'/'R';

//?Print max std qty and weight if not shipped, and comp value=Y
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(PAR.Company_Number);
PARAMETER('EXPPRTOQT');
PARAMETER(LCL.Status_Flag_13_Y_N);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Status Flag 13 Y/N is Yes
IF LCL.Status_Flag_13_Y_N = 'Y';

// LCL.Status Flag 14 Y/N = CND.Yes
LCL.Status_Flag_14_Y_N = 'Y';

ENDIF;

ENDIF;

//?USER: Record selection processing

EXECUTE FUNCTION(Rtv Appl Overflow    RT) TYPE(RTVOBJ) FILE(PDMRREP)            AC2156040;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(DB1.ED_Export_Document_Type);
PARAMETER(DB1.Country_Code);
PARAMETER(LCL.ED_Xlate_Desc_to_Country);
PARAMETER(PAR.ED_Shipping_Marks_Txt);
PARAMETER(LCL.ED_USDA_Cert_Nbr_US);
PARAMETER(PAR.ED_Species);
PARAMETER(LCL.ED_Title_of_Official);
PARAMETER(PAR.ED_Nbr_of_prods_on_1st_pg);
PARAMETER(PAR.ED_Export_Certificate_Nbr);
PARAMETER(LCL.ED_Document_Date);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


EXECUTE FUNCTION(Rtv All               RT) TYPE(RTVOBJ) FILE(PUA6CPP)           AC2151312;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(DB1.ED_Export_Document_Type);
PARAMETER(DB1.Country_Code);
PARAMETER(NLL.EDE_Reason_f_Replcmnt_Sts);
PARAMETER(LCL.EDE_Shipment_Type_Sts);
PARAMETER(PAR.EDE_Frozen_Shelf_Life_Sts);
PARAMETER(NLL.EDE_ISO_Alpha_2_code);
PARAMETER(NLL.EDE_USDA_Export_Mark_Sts);
PARAMETER(NLL.EDE_Special_Printing_Ctl);
PARAMETER(NLL.EDE_Appl_Billing_First_Nm);
PARAMETER(NLL.EDE_Appl_Billing_Last_Nm);
PARAMETER(NLL.EDE_Unused_Date);
PARAMETER(NLL.EDE_Country_of_Final_Dest);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?DO2642 DN 08/17/22-Commented Out Old & Created New Selection.
//?DO2642 DN 08/17/22-New Selection Processing from Exp Doc Order Dtl PRT.
CASE;

// IF DB1.ED Product Net Weight lbs EQ WRK.ZERO
IF DB1.ED_Product_Net_Weight_lbs = WRK.ZERO;

// AND LCL.Header Status is Confirmed & Complete
AND LCL.Header_Status = 'C'/'R';

// AND DB1.Company Number is NE 960
AND DB1.Company_Number <> 960;

//?RMC added above for 960  - print 0 weights on shpped doc
// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?DO2642 DN 08/17/22-New Selection Processing from Exp Doc Order Dtl PRT.
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF DB1.ED Item Code NE LCL.ED Item Code
IF DB1.ED_Item_Code <> LCL.ED_Item_Code;

// LCL.ED Item Code = DB1.ED Item Code
LCL.ED_Item_Code = DB1.ED_Item_Code;

EXECUTE FUNCTION(Rtv Overflow          RT) TYPE(RTVOBJ) FILE(PUCFCPP)           AC2205561;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.ED_Export_Document_Type);
PARAMETER(PAR.Country_Code);
PARAMETER(DB1.ED_Item_Code);
PARAMETER(LCL.Overflow);
{
 //?USER: Initialize routine

 // PAR.Overflow = CND.No
 PAR.Overflow = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Overflow On, Print on New Page.
CASE;

// IF LCL.Overflow is Yes
IF LCL.Overflow = 'Y';

// PGM.*new page flag = CND.*Yes
PGM.*new_page_flag = 'Y';

// LCL.Print On Form = CND.Print on Form
LCL.Print_On_Form = 1;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

//?Same Item Code, Do Not Select.
// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

CASE;

IF NEW Order_Number;
CASE;

// IF WRK.First Time Flag is Yes
IF WRK.First_Time_Flag = 'Y';

// WRK.First Time Flag = CND.NO
WRK.First_Time_Flag = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

//?print 6 digits to pick up leading 0 as in cert # 021644    7/20/05
//?Export Certificate No.
CASE;

// IF PAR.ED Export Certificate Nbr NE WRK.ZERO
IF PAR.ED_Export_Certificate_Nbr <> WRK.ZERO;

// CUR.ED Export Certificate Nbr = PAR.ED Export Certificate Nbr
CUR.ED_Export_Certificate_Nbr = PAR.ED_Export_Certificate_Nbr;

// CUR.Text USR 4 = LCL.ED USDA Cert Nbr US
CUR.Text_USR_4 = LCL.ED_USDA_Cert_Nbr_US;

CASE;

// IF CUR.Text USR 4 is Not Entered
IF CUR.Text_USR_4 = *BLANK;

//?S00591 RMC 12/10/08 get form letters from company value
EXECUTE FUNCTION(RTV 1st Warehouse/Ctl  RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1360958;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(0);
PARAMETER(0);
PARAMETER(LCL.Warehouse_Code);
PARAMETER(NLL.Trans_Contol_AS400_Plant);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 EXECUTE FUNCTION(RTV Warehouse Control  RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1304300;
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.Trans_Contol_AS400_Plant);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


EXECUTE FUNCTION(RTV Warehouse Type     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1285482;
PARAMETER(LCL.Warehouse_Code);
PARAMETER(LCL.Warehouse_Type);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Get Fresh /frozen to get which form name to use    RMC 12/10/08
CASE;

// IF LCL.Warehouse Type is Fresh
IF LCL.Warehouse_Type = 'FR';

// WRK.Company Value Code = CON.MPGFRLTR
WRK.Company_Value_Code = 'MPGFRLTR';

//?Get Fresh /frozen to get which form name to use    RMC 12/10/08
// IF LCL.Warehouse Type is Frozen
IF LCL.Warehouse_Type = 'FZ';

// WRK.Company Value Code = CON.MPGFZLTR
WRK.Company_Value_Code = 'MPGFZLTR';

//?Get Fresh /frozen to get which form name to use    RMC 12/10/08
// IF *OTHERWISE
IF *OTHERWISE;

//?default to something
// WRK.Company Value Code = CON.MPGFRLTR
WRK.Company_Value_Code = 'MPGFRLTR';

ENDIF;

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(DB1.Company_Number);
PARAMETER(WRK.Company_Value_Code);
PARAMETER(WRK.USR_Old_New_prtf_designtn);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// CUR.Text USR 4 = CONCAT(WRK.USR Old/New prtf designtn,CON.-,CON.*ZERO)
CUR.Text_USR_4 = WRK.USR_Old_New_prtf_designtn + '-' (*ZERO);

ENDIF;

ENDIF;

// CUR.EDE Shipment Type Desc = Condition name of LCL.EDE Shipment Type Sts
CUR.EDE_Shipment_Type_Desc = RTVCND(LCL.EDE_Shipment_Type_Sts);

// Print Order Number header format
PRINT Order Number header format;

ENDIF;

// SUPPRESSED PRINT ED Export Document Type header format

// SUPPRESSED PRINT Country Code header format

// SUPPRESSED PRINT ED Item Code header format

// SUPPRESSED PRINT Order Sequence Number header format

//?USER: Process after print of detail format

NXT.Net_Quantity_SUM = SUM(CUR.ED_Product_Nbr_of_Pkgs);

NXT.Net_Weight_SUM_9_1 = SUM(CUR.ED_Product_Net_Weight_lbs);

//?USER: Print required level totals

// SUPPRESSED PRINT Order Sequence Number totals format

CASE;

IF NEW ED_Item_Code;
// LCL.Print Blank Line Usr = CND.no
LCL.Print_Blank_Line_Usr = 'N';

//?DO2642 DN 08/18/22-Get Overflow Info & Print Blank Lines.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv Overflow Info     RT) TYPE(RTVOBJ) FILE(PUCFCPP)           AC2206349;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.ED_Export_Document_Type);
PARAMETER(CUR.Country_Code);
PARAMETER(CUR.ED_Item_Code);
PARAMETER(CUR.Description_Xlate_Line_2);
PARAMETER(CUR.Overflow_Pg_Dsc_Xlate_Ln1);
PARAMETER(NLL.Overflow);
PARAMETER(NLL.EDODP_Unused_Number);
PARAMETER(LCL.Skip_Ln_Before_Xlate_Ln1);
PARAMETER(LCL.Skip_Ln_After_Xlate_Ln2);
PARAMETER(LCL.Prt_Inspector_Name_Date);
PARAMETER(LCL.Prt_Continuation_Text);
PARAMETER(NLL.#_of_Blank_Line_Item_Ln1);
PARAMETER(NLL.#_of_Blank_Line_Item_Ln2);
PARAMETER(NLL.#_of_Blank_Line_Xlate_Ln1);
PARAMETER(NLL.#_of_Blank_Line_Xlate_Ln2);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Do Not Print Translated Desc if Not Entered.
CASE;

// IF CUR.Overflow Pg Dsc Xlate Ln1 is Not Entered
IF CUR.Overflow_Pg_Dsc_Xlate_Ln1 = *BLANK;

// LCL.Prt Overflow Dsc Xlate L1 = CND.No
LCL.Prt_Overflow_Dsc_Xlate_L1 = 'N';

//?Do Not Print Translated Desc if Not Entered.
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Prt Overflow Dsc Xlate L1 = CND.Yes
LCL.Prt_Overflow_Dsc_Xlate_L1 = 'Y';

ENDIF;

//?Force Print of 1 Blank Line Before Xlate Desc Line 1.
CASE;

// IF LCL.Skip Ln Before Xlate Ln1 is Yes
IF LCL.Skip_Ln_Before_Xlate_Ln1 = 'Y';

//?If true, field 'Blank 5 USR' prints a blank line.
// LCL.Prt Blank Before Xlate U = CND.Yes
LCL.Prt_Blank_Before_Xlate_U = 'Y';

//?Force Print of 1 Blank Line Before Xlate Desc Line 1.
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Prt Blank Before Xlate U = CND.No
LCL.Prt_Blank_Before_Xlate_U = 'N';

ENDIF;

//?Force Print of 1 Blank Line After Xlate Desc Line 2.
CASE;

// IF LCL.Skip Ln After Xlate Ln2 is Yes
IF LCL.Skip_Ln_After_Xlate_Ln2 = 'Y';

//?If true, field 'Blank for 4           USR' prints a blank line.
// LCL.Print Blank Line Usr = CND.yes
LCL.Print_Blank_Line_Usr = 'Y';

ENDIF;

ENDIF;

// LCL.Status Flag 1  Y/N = CND.No
LCL.Status_Flag_1_Y_N = 'N';

// LCL.Flag 3 = CND.*NO
LCL.Flag_3 = *NO;

//?R13944 DN 02/26/19-Changed Blank Line Counters.
//?* RMC 02/10/20 before new form (01/27/2020) and FOR new form 2-13-2020
//?DO2642 DN 08/18/22-Commented Out Blank Line Counters.
//?RMC 02/10/20 For the new form (01/27/2020)  and added Status 1 line cnd
//?DO2642 DN 08/18/22-Commented Out Print Details-Old.
//?Print Details. - DO2642 DN 08/18/22-New Logic.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?Set Net Weight/Quantity.
CASE;

// IF LCL.Status Flag 14 Y/N is Yes
IF LCL.Status_Flag_14_Y_N = 'Y';

EXECUTE FUNCTION(RTV UM Ordered        RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC2122584;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.ED_Item_Code);
PARAMETER(LCL.U_M_Ordered);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.U/M - Ordered is Combos
IF LCL.U_M_Ordered = 'CB';

//?S14759 DN 04/01/19-Externalize Combos Wgt/Qty in the Company Values File.
EXECUTE FUNCTION(RTV Numeric Value 2    RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC2169947;
PARAMETER(CUR.Company_Number);
PARAMETER('MPGAPPCBWT');
PARAMETER(CUR.Net_Weight_SUM_9_1);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Numeric Value 2    RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC2169947;
PARAMETER(CUR.Company_Number);
PARAMETER('MPGAPPCBQT');
PARAMETER(CUR.Net_Quantity_SUM);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// IF *OTHERWISE
IF *OTHERWISE;

//?S14759 DN 04/01/19-Externalize Combos Wgt/Qty in the Company Values File.
EXECUTE FUNCTION(RTV Numeric Value 2    RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC2169947;
PARAMETER(CUR.Company_Number);
PARAMETER('MPGAPPBXWT');
PARAMETER(CUR.Net_Weight_SUM_9_1);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Numeric Value 2    RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC2169947;
PARAMETER(CUR.Company_Number);
PARAMETER('MPGAPPBXQT');
PARAMETER(CUR.Net_Quantity_SUM);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

ENDIF;

// CUR.ED HACCP Category 3A USR = CUR.ED HACCP Category
CUR.ED_HACCP_Category_3A_USR = CUR.ED_HACCP_Category;

// CUR.ED Species = PAR.ED Species
CUR.ED_Species = PAR.ED_Species;

// CUR.EDE Frozen/Shelf Life Sts = PAR.EDE Frozen/Shelf Life Sts
CUR.EDE_Frozen_Shelf_Life_Sts = PAR.EDE_Frozen_Shelf_Life_Sts;

// CUR.ED Shipping Marks Txt = PAR.ED Shipping Marks Txt
CUR.ED_Shipping_Marks_Txt = PAR.ED_Shipping_Marks_Txt;

// LCL.ULSD Facility bill # = CUR.ED Plant Number Dtl
LCL.ULSD_Facility_bill_# = CUR.ED_Plant_Number_Dtl;

// CUR.USR Description 22 = PAR.ED Shipping Marks Txt
CUR.USR_Description_22 = PAR.ED_Shipping_Marks_Txt;

// CUR.Text 3 Length USR = CON.lbs
CUR.Text_3_Length_USR = 'lbs';

// Execute function *Move-Right.
EXECUTE FUNCTION(*Move-Right) TYPE(EXCUSRSRC) ('PDUIUFR');
PARAMETER(CUR.USR_Description_22);
PARAMETER(LCL.ULSD_Facility_bill_#);
{
 C                     MOVE #IPANA    #OO9NA
}


// CUR.Text USR 40 = CONCAT(CUR.ED Chilled/Frozen Text,CUR.ED Item Label Line 1,CON.1)
CUR.Text_USR_40 = CUR.ED_Chilled_Frozen_Text + CUR.ED_Item_Label_Line_1 (1);

//?DO2642 DN 08/18/22-Commented Out. Export Doc Order Dtl PRT Record has it.
// LCL.Flag 2 = CND.*NO
LCL.Flag_2 = *NO;

// LCL.Flag 3 = CND.*NO
LCL.Flag_3 = *NO;

//?DO2642 DN 08/18/22-Commented Out & Move to Record Selection.
//?DO2642 DN 08/18/22-Print Continuation of Product Attached Text.
CASE;

// IF LCL.Prt Continuation Text is Yes
IF LCL.Prt_Continuation_Text = 'Y';

// LCL.Flag 3 = CND.*YES
LCL.Flag_3 = *YES;

// CUR.ED Continue Comment Txt = CONCAT(CON.Continuation of Product A,CON.ttached,CON.*ZERO)
CUR.ED_Continue_Comment_Txt = 'Continuation of Product A' + 'ttached' (*ZERO);

ENDIF;

//?DO2642 DN 08/18/22-Update Item Printed Flag.
EXECUTE FUNCTION(Upd Item Printed      RT) TYPE(RTVOBJ) FILE(PUCFCPP)           AC2205562;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.ED_Export_Document_Type);
PARAMETER(CUR.Country_Code);
PARAMETER(CUR.ED_Item_Code);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Doc Ord Dtl PRT   CH) TYPE(CHGOBJ) FILE(PUCFCPP)           AC2204918;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Description_Xlate_Line_1);
 PARAMETER(DB1.Description_Xlate_Line_2);
 PARAMETER(DB1.Overflow_Pg_Dsc_Xlate_Ln1);
 PARAMETER(DB1.Overflow);
 PARAMETER(DB1.EDODP_Unused_Number);
 PARAMETER(DB1.Skip_Ln_Before_Xlate_Ln1);
 PARAMETER(DB1.Skip_Ln_After_Xlate_Ln2);
 PARAMETER(DB1.Prt_Inspector_Name_Date);
 PARAMETER('Y');
 PARAMETER(DB1.Prt_Continuation_Text);
 PARAMETER(DB1.#_of_Blank_Line_Item_Ln1);
 PARAMETER(DB1.#_of_Blank_Line_Item_Ln2);
 PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln1);
 PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln2);
 PARAMETER(DB1.EDODP_Unused_Sts_2);
 PARAMETER(DB1.EDODP_Unused_Sts_3);
 PARAMETER(DB1.EDODP_Unused_Nbr_1);
 PARAMETER(DB1.EDODP_Unused_Dte_1);
 PARAMETER(DB1.EDODP_Unused_Txt_1);
 PARAMETER(DB1.EDODP_Unused_Txt_2);
}


ENDIF;

// Print ED Item Code totals format
PRINT ED Item Code totals format;

ENDIF;

// SUPPRESSED PRINT Country Code totals format

// SUPPRESSED PRINT ED Export Document Type totals format

// SUPPRESSED PRINT Order Number totals format

// SUPPRESSED PRINT Company Number totals format

