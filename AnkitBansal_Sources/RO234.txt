     h option(*SRCSTMT:*NODEBUGIO)
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Resource Optimization
      * PROGRAM:     RO234
      * TITLE:       Byproduct-Cap&Blade T72A/TRGA  (61210 62320 89990+)
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     02/17/10
      *
      * FUNCTION:    Damon Ginther now wants to move a percentage of the Special Trim (T72A)
      *              Produced Pounds/Dollars to Regular Trim (TRGA) prior to doing our existing
      *              Cap&Blade logic (RO235).
      *
      *              So, this program is called from the Initialization subroutine in RO235 since
      *              we need pounds from this program for our calcs in RO235.
      *
      *              In this program we will have 2 "moves"--1 for Blade Meat and 1 for Cap Meat.
      *              So, we will write 4 exception records in this program:
      *                 1) Decrease values for Item 62320 (the Blade move)
      *                    Increase Item 61210 for these Blade values
      *                 2) Decrease values for Item 89999 (the Cap move)
      *                    Increase Item 61210 for these Cap values
      *                    (Note: We write the decrease against 89999...but, in calc'ng the
      *                           values to move, we use the sum of 89990, 89997, 89998, 89999 lbs)
      *
      *
      ***************************************************************************************
      * MODIFICATIONS:
      ***************************************************************************************
      * DATE      PROGRAMMER
      *
      * 08/15/11  LeAnne Ramsey (E1699)
      *           Damon Ginther has added a new Cap Item: 89997. It will have the same
      *           percentages as existing Item 89999.
      *
      * 03/08/12  LeAnne Ramsey (E1984)
      *           Recompile only.
      *           Added 6 new Skirt Meat Allocation Flag fields to ROP100.
      *
      * 05/01/12  LeAnne Ramsey (E2078)
      *           There is a new Item 89990 (for Japan). Damon G. wants it treated just
      *           like 89997/89999.
      *
      * 01/20/14  LeAnne Ramsey (E2985)
      *           Damin Ginther has added 8 new Cap&Blade Items; so, I have added hardcoding
      *           for them. The next time he has more, I need to come up with some other way.
      *
      * 11/14/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Recompile only. Added 25 STF fields to TFP010 file.
      *
      * 05/17/22  Danny Nguyen  (DO2484 - WI 479 STF Variance Reporting)
      *           Recompile only. Added 2 STF fields to TFP010 file.
      *           PRXYPC   - STF STD YIELD %
      *           PRXPMPPC - STF PUMP %
      *
      * W105621 RMC 10/10/2022 INCREASE FIELD SIZES TO HANDLE PRICES > 999.99
      *         CHANGE @@ANPRPR TO SIZE 10.6
      *           CHANGES PRANPRPR IN TFP010
      *
      *
      /EJECT
      ***************************************************************************************
      * FILE SPECIFICATION
      ***************************************************************************************
      *
     fomfarel1  if   e           k disk
      *  Product class
      *
      *
     Frop100    if   e           k disk
      *  Resource optimization header
      *
      *
     frol122a   if   e           k disk
      *  Byproduct detail
      *
      *
     ftfl010a   if   e           k disk
      *  Weekly product revenue detail
      *
      *
     ftfp019    o    e           k disk
      *  TF Product exceptions
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control field
      *
     D wkproc          s              5
      *
      *
      * Workfields
      *
     D wkrt            s              9  6
     D wkprcd          s                   like(prprcd)
     D wkanpupr        s                   like(ydnpupr)
     D wksexpulb       s                   like(pesexpulb)
     D wktexpulb       s                   like(petexpulb)
     D wksexpuam       s                   like(pesexpuam)
     D wktexpuam       s                   like(pesexpuam)
     D wkslb           s                   like(pesexpulb)
     D wktlb           s                   like(petexpulb)
     D wksam           s                   like(pesexpuam)
     D wktam           s                   like(pesexpuam)
      *
      *
      * Parms
      *
     D xxsn            s              7  0
     D xxpfcd          s              1
      *
     D xxcapspulb      s                   like(pesexpulb)
     D xxcaptpulb      s                   like(pesexpulb)
     D xxbldspulb      s                   like(pesexpulb)
     D xxbldtpulb      s                   like(pesexpulb)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldpfcd                 1      1
     D  ldyr                   2      5  0
     D  ldwk                   6      7  0
      *
     D  ldwedt                29     36  0
      *
     D  ldcono                82     84  0
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      **********************************************************************************
      * Mainline
      **********************************************************************************
      *
      * We make our calcs using the Regular Trim % that Damon Ginther enters on the
      * Resource Optimization Header for Cap&Blade. So, only process when that value is not
      * zero.
      *
      * Key: Company
      *      WeekEnding Date
      *
     C     key03         chain     rop100                             92
     C                   if        *in92 = *off and ohcbrtpc <> 0               If reg trim%
     C                   eval      wkrt = ohcbrtpc / 100
      *
      * BLADE MEAT logic:
      *   Move from 62320-Pork Loin Blade Meat Combo to 61210-Pork Trim Regular Combo
      *
     C                   eval      wkproc = 'BLADE'
     C                   z-add     0             wksexpulb
     C                   z-add     0             wktexpulb
     C                   z-add     0             wksexpuam
     C                   z-add     0             wktexpuam
     C                   z-add     62320         wkprcd
     C                   exsr      $weekly
     C                   exsr      $proc
      *
      * CAP MEAT logic:
      *   Move from 89999-Pork Boneless Loin Cap Meat to 61210-Pork Trim Regular Combo
      *   BUT: When calc'ing the values to move, use the Produced Values from 12 Items
      *
     C                   eval      wkproc = 'CAP  '
     C                   z-add     0             wksexpulb
     C                   z-add     0             wktexpulb
     C                   z-add     0             wksexpuam
     C                   z-add     0             wktexpuam
      *
     C                   z-add     951           wkprcd
     C                   exsr      $weekly
     C                   z-add     953           wkprcd
     C                   exsr      $weekly
     C                   z-add     955           wkprcd
     C                   exsr      $weekly
      *
     C                   z-add     83354         wkprcd
     C                   exsr      $weekly
     C                   z-add     83356         wkprcd
     C                   exsr      $weekly
     C                   z-add     83357         wkprcd
     C                   exsr      $weekly
      *
     C                   z-add     89990         wkprcd
     C                   exsr      $weekly
     C                   z-add     89995         wkprcd
     C                   exsr      $weekly
     C                   z-add     89996         wkprcd
     C                   exsr      $weekly
     C                   z-add     89997         wkprcd
     C                   exsr      $weekly
     C                   z-add     89998         wkprcd
     C                   exsr      $weekly
     C                   z-add     89999         wkprcd
     C                   exsr      $weekly
      *
     C                   exsr      $proc
     C                   endif                                                  If reg trim %
      *
      * EOF processing
     C                   seton                                        lr
      /eject
      *-------------------------------------------------------------------------------
      * Retrieve Produced Pounds/Dollars
      *-------------------------------------------------------------------------------
      *
      * Note: We will come thru here once for BLADE processing and 13 times for CAP processing.
      *
     C     $weekly       begsr
      *
     C                   z-add     0             wkanpupr
      *
      * Key: WeekEnding Date
      *      Product
      *
     C     key01         chain     tfl010a                            92
     C                   if        *in92 = *off                                 If weekly
      *
      * Retrieve the Byproduct Detail record to get the
      * Aggregate Net Produced Price/LB.
      *
      * Key: WeekEnding Date
      *      Product
      *
     C     key01         chain     rol122a                            92
     C                   if        *in92 = *off
     C                   z-add     ydnpupr       wkanpupr
     C                   endif
      *
      * Calc Pounds/Dollars
     C                   eval(h)   wkslb = wkrt * prspulb
     C                   eval(h)   wktlb = wkrt * prtpulb
     C                   eval(h)   wksam = wkanpupr * wkslb
     C                   eval(h)   wktam = wkanpupr * wktlb
      *
     C                   add       wkslb         wksexpulb
     C                   add       wktlb         wktexpulb
     C                   add       wksam         wksexpuam
     C                   add       wktam         wktexpuam
     C                   endif                                                  If weekly
      *
     C                   endsr
      /eject
      *------------------------------------------------------------------------------------
      * Process (we come thru here once for BLADE processing and once for CAP processing
      *------------------------------------------------------------------------------------
      *
     C     $proc         begsr
      *
     C                   if        wksexpulb <> 0 or wksexpuam <> 0 or          If anything
     C                             wktexpulb <> 0 or wktexpuam <> 0
      *
      * Retrieve a System Number for the 2 Exception records that you will write
      *
     C                   exsr      $rtvsn
      *
      * Increase "regular trim" Item 61210
      * (Note: We increase Item 61210 for both the BLADE and the CAP processing.)
      *
     C                   z-add     61210         peprcd
     C                   z-add     wksexpulb     pesexpulb
     C                   z-add     wksexpuam     pesexpuam
     C                   z-add     wktexpulb     petexpulb
     C                   z-add     wktexpuam     petexpuam
      *
     C                   select
     C                   when      wkproc = 'BLADE'
     C                   eval      peexcom = 'FROM:T72A.62320 Blade'
      *
     C                   when      wkproc = 'CAP  '
     C                   eval      peexcom = 'FROM:T72A.89990+ Cap'
     C                   endsl
      *
     C                   exsr      $wrt019
      *
      * Decrease "special trim" Items
      *
     C     -1            mult      wksexpulb     pesexpulb
     C     -1            mult      wksexpuam     pesexpuam
     C     -1            mult      wktexpulb     petexpulb
     C     -1            mult      wktexpuam     petexpuam
      *
     C                   select
     C                   when      wkproc = 'BLADE'
     C                   z-add     62320         peprcd
     C                   eval      peexcom = 'TO:TRGA.61210 Blade'
     C                   z-add     pesexpulb     xxbldspulb
     C                   z-add     petexpulb     xxbldtpulb
      *
     C                   when      wkproc = 'CAP  '
     C                   z-add     89999         peprcd
     C                   eval      peexcom = 'TO:TRGA.61210 89990+ Cap'
     C                   z-add     pesexpulb     xxcapspulb
     C                   z-add     petexpulb     xxcaptpulb
     C                   endsl
      *
     C                   exsr      $wrt019
      *
      * Call the program to write the Product Exception records to the ByProduct
      * Detail file.
     C                   call      'RO220'
     C                   parm                    xxsn
      *
     C                   endif                                                  If anything
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------
      * Write a Product Exception record
      *-------------------------------------------------------------------------------
      *
     C     $wrt019       begsr
      *
      * Hardcoded values
     C                   move      'Y'           pesysfl
     C                   eval      pepgm = sdpgm
      * LDA values
     C                   z-add     ldyr          peyr
     C                   z-add     ldwk          pewk
     C                   z-add     ldwedt        pewedt
      *
     C                   z-add     xxsn          pepesn
      *
      * Retrieve various values for this Item from the Revenue Detail file
      *
     C                   exsr      $rtv010
      *
      * Retrieve Description for Item Structure Class Code.
      *
     C     peisclcd      chain     omfarel1                           92
     C                   if        *in92 = *off
     C                   eval      peisclds = fadetx
     C                   endif
      * Write/clear
     C                   write     perec
     C                   clear                   perec
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve the various values from the Weekly Produce Revenue Detail file
      *-----------------------------------------------------------------------------------
      *
     C     $rtv010       begsr
      *
      * Key:
      *  WeekEnding Date
      *  Product Code
      *
     C     key02         chain     tfl010a                            92
     C                   if        *in92 = *off
     C                   move      prvolfl       pevolfl
     C                   move      prtfclcd      petfclcd
     C                   move      prtfcgcd      petfcgcd
     C                   move      prcgcd        pecgcd
     C                   move      prcgcd        pesgcd
     C                   move      prmixfl       pemixfl
     C                   movel     pritycd       peitycd
     C                   z-add     pristycd      peistycd
     C                   z-add     prisgrcd      peisgrcd
     C                   z-add     prisclcd      peisclcd
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve System Number for Product Exception
      *---------------------------------------------------------------
      *
     C     $rtvsn        begsr
      *
     C                   call      'TF810'
     C                   parm      ldpfcd        xxpfcd
     C                   parm      0             xxsn
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     *entry        plist
     C                   parm                    xxcapspulb
     C                   parm                    xxcaptpulb
     C                   parm                    xxbldspulb
     C                   parm                    xxbldtpulb
      * Key lists
      *
     C     key01         klist
     C                   kfld                    ldwedt
     C                   kfld                    wkprcd
      *
     C     key02         klist
     C                   kfld                    ldwedt
     C                   kfld                    peprcd
      *
     C     key03         klist
     C                   kfld                    ldcono
     C                   kfld                    ldwedt
      *
     C                   endsr
      /eject
