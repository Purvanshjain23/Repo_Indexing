     H/TITLE Prt Prcrmnt Prfm LN%  PV  Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by  : 2E  Version:  1181
     H* Function type : Prompt & validate record
      *
     H* Company       : HPEDEVMDL                     n
     H* System        : HPEDEVMDL
     H* User name     : ISSMASO
     H* Date          : 08/06/08  Time  : 10:45:52
     H* Copyright     : HPEDEVMDL                     n
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKULPVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: Prt Prcrmnt Prfm LN%  PV  Prompt & validate record
      *
     FPKADREL0IF  E           K        DISK
      * RTV : Hog Buyer                 Retrieval index
      *
     FPKAAREL0IF  E           K        DISK
      * RTV : Source                    Retrieval index
      *
     FPKACREL1IF  E           K        DISK
      * RTV : Producer                  Retrieval index
      *
     FPKA7REL1IF  E           K        DISK
      * RTV : Hog Defect                Retrieval index
      *
     FPKCCREL0IF  E           K        DISK
      * RTV : Tattoo Header Process     Retrieval index
      *
     FPKAIREL0IF  E           K        DISK
      * RTV : Genetic                   Retrieval index
      *
     FPKA8REL1IF  E           K        DISK
      * RTV : Hog Classification        Retrieval index
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
      * DETAIL Screen: Field position and name array
     E                    W0BEG   7 024  5 0A
     E                    W0END   7 024  5 0A
     E                    W0NAM   7 024 10
      * Long constants
     E                    @CN#    1   1  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@ADREAF
      * Hog Buyer                 Retrieval index
      * Renamed input format fields
     I              ADACCD                          WAACCD
     I              ADALTX                          WAALTX
     I              ADAQST                          WAAQST
     I              ADARST                          WAARST
     I              ADAAVN                          WAAAVN
     I              ADAADT                          WAAADT
     I              ADAMTM                          WAAMTM
     I              ADAJST                          WAAJST
     I              ADAHVN                          WAAHVN
     I              ADAGVN                          WAAGVN
     I              ADABVN                          WAABVN
     I              ADABDT                          WAABDT
     I              ADABTM                          WAABTM
      *
     I@AAREAC
      * Source                    Retrieval index
      * Renamed input format fields
     I              AAAACD                          WBAACD
     I              AAAFTX                          WBAFTX
     I              AAIXST                          WBIXST
     I              AACYSS                          WBCYSS
     I              AACZSS                          WBCZSS
     I              AAC0SS                          WBC0SS
     I              AAC1SS                          WBC1SS
     I              AAAAVN                          WBAAVN
     I              AAAADT                          WBAADT
     I              AAAMTM                          WBAMTM
     I              AAAJST                          WBAJST
     I              AAAHVN                          WBAHVN
     I              AAAGVN                          WBAGVN
     I              AAABVN                          WBABVN
     I              AAABDT                          WBABDT
     I              AAABTM                          WBABTM
      *
     I@ACREAI
      * Producer                  Retrieval index
      * Renamed input format fields
     I              ACABCD                          WCABCD
     I              ACAGTX                          WCAGTX
     I              ACALNB                          WCALNB
     I              ACAATH                          WCAATH
     I              ACAMNB                          WCAMNB
     I              ACIWST                          WCIWST
     I              ACAPST                          WCAPST
     I              ACGCNB                          WCGCNB
     I              ACGJNB                          WCGJNB
     I              ACC2TX                          WCC2TX
     I              ACAACD                          WCAACD
     I              ACACCD                          WCACCD
     I              ACADCD                          WCADCD
     I              ACAAVN                          WCAAVN
     I              ACAADT                          WCAADT
     I              ACAMTM                          WCAMTM
     I              ACAJST                          WCAJST
     I              ACAHVN                          WCAHVN
     I              ACAGVN                          WCAGVN
     I              ACABVN                          WCABVN
     I              ACABDT                          WCABDT
     I              ACABTM                          WCABTM
      *
     I@A7REC1
      * Hog Defect                Retrieval index
      * Renamed input format fields
     I              A7BDCD                          WDBDCD
     I              A7BCTX                          WDBCTX
     I              A7RXST                          WDRXST
     I              A7R2ST                          WDR2ST
     I              A7RYST                          WDRYST
     I              A7RZST                          WDRZST
     I              A7R0ST                          WDR0ST
     I              A7R1ST                          WDR1ST
     I              A7HYCD                          WDHYCD
     I              A7HZCD                          WDHZCD
     I              A7VYST                          WDVYST
     I              A7AEA1                          WDAEA1
     I              A7UOPR                          WDUOPR
     I              A7UPPR                          WDUPPR
     I              A7UQPR                          WDUQPR
     I              A7AAVN                          WDAAVN
     I              A7AADT                          WDAADT
     I              A7AMTM                          WDAMTM
     I              A7AJST                          WDAJST
     I              A7AHVN                          WDAHVN
     I              A7AGVN                          WDAGVN
     I              A7ABVN                          WDABVN
     I              A7ABDT                          WDABDT
     I              A7ABTM                          WDABTM
      *
     I@CCREH3
      * Tattoo Header Process     Retrieval index
      * Renamed input format fields
     I              CCCSCD                          WECSCD
     I              CCCETX                          WECETX
     I              CCAAVN                          WEAAVN
     I              CCAADT                          WEAADT
     I              CCAMTM                          WEAMTM
     I              CCAJST                          WEAJST
     I              CCAHVN                          WEAHVN
     I              CCAGVN                          WEAGVN
     I              CCABVN                          WEABVN
     I              CCABDT                          WEABDT
     I              CCABTM                          WEABTM
      *
     I@AIREA9
      * Genetic                   Retrieval index
      * Renamed input format fields
     I              AIAGCD                          WFAGCD
     I              AIAWTX                          WFAWTX
     I              AIAAVN                          WFAAVN
     I              AIAADT                          WFAADT
     I              AIAMTM                          WFAMTM
     I              AIAJST                          WFAJST
     I              AIAHVN                          WFAHVN
     I              AIAGVN                          WFAGVN
     I              AIABVN                          WFABVN
     I              AIABDT                          WFABDT
     I              AIABTM                          WFABTM
      *
     I@A8REDA
      * Hog Classification        Retrieval index
      * Renamed input format fields
     I              A8BECD                          WGBECD
     I              A8BDTX                          WGBDTX
     I              A8BXST                          WGBXST
     I              A8BYST                          WGBYST
     I              A8BITX                          WGBITX
     I              A8B0ST                          WGB0ST
     I              A8FBST                          WGFBST
     I              A8AAVN                          WGAAVN
     I              A8AADT                          WGAADT
     I              A8AMTM                          WGAMTM
     I              A8AJST                          WGAJST
     I              A8AHVN                          WGAHVN
     I              A8AGVN                          WGAGVN
     I              A8ABVN                          WGABVN
     I              A8ABDT                          WGABDT
     I              A8ABTM                          WGABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * N : MAP PRT Description
     I                                        1  25 P1ETTX
      * N : MAP PRT Printer Device
     I                                       26  35 P1ACVN
      * N : MAP PRT Hold Output Sts
     I                                       36  39 P1AKST
      * N : MAP PRT Save Output Sts
     I                                       40  43 P1AMST
      * N : MAP PRT Copies
     I                                       44  450P1AKNB
      * N : MAP PRT Night Queue Run Sts
     I                                       46  46 P1ALST
      * N : MAP PRT Night Queue
     I                                       47  56 P1AIVN
      * N : MAP Oms Application Code
     I                                       57  62 P1C7CD
     IP2PARM      DS
      * FLD: *Arrays
      * N : MAP Oms Warehouse Code
     I                                        1   3 P2J8NB
      * N : MAP CC Company Number
     I                                    P   4   50P2HONB
      * N : MAP Oms SalesPerson Code
     I                                        6   8 P2C8CD
      * N : MAP Oms Allow Multi-Company
     I                                        9   9 P2G8ST
      * N : MAP Oms Default Printer
     I                                       10  19 P2G9ST
      * N : MAP Oms Name
     I                                       20  49 P2EUTX
      * N : MAP Oms System Value Alpha
     I                                       50  89 P2EVTX
      * N : MAP Oms Access Denied (Y/N)
     I                                       90  90 P2HAST
     IP3PARM      DS
      * N :  Display Field Usr
     I                                        1   4 P3HDST
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'SBM Prt Prcmnt Prfrmc Rpt'
      * BOH Company Number
     I                                    P   1   20ZA0001
      * TH Source Type
     I                                        3   3 ZA0002
      * TH Payment Type
     I                                        4   4 ZA0003
      * TH Source Code
     I                                        5   7 ZA0004
      * PD Producer Code
     I                                        8  13 ZA0005
      * HB Buyer Code
     I                                       14  16 ZA0006
      * Date Alpha USR
     I                                       17  23 ZA0007
      * Date Alpha Usr 2
     I                                       24  30 ZA0008
      * Oms System Value Alpha
     I                                       31  70 ZA0009
      * Market Code Usr
     I                                       71  73 ZA0010
      * Price Group Usr
     I                                       74  80 ZA0011
      * @Status Detail/Summary
     I                                       81  81 ZA0012
      * Performance Report Seq
     I                                       82  82 ZA0013
      * Document Name USR
     I                                       83  88 ZA0014
      * Folder Name USR
     I                                       89  94 ZA0015
      * PRT Printer Device
     I                                       95 104 ZA0016
      * PRT Hold Output Sts
     I                                      105 108 ZA0017
      * PRT Save Output Sts
     I                                      109 112 ZA0018
      * PRT Copies
     I                                    P 113 1140ZA0019
      * PRT Night Queue
     I                                      115 124 ZA0020
      * Message data for 'SBM Prt Prcmnt Prfrmc Rpt'
      * BOH Company Number
     I                                    P   1   20ZA0021
      * TH Source Type
     I                                        3   3 ZA0022
      * TH Payment Type
     I                                        4   4 ZA0023
      * TH Source Code
     I                                        5   7 ZA0024
      * PD Producer Code
     I                                        8  13 ZA0025
      * HB Buyer Code
     I                                       14  16 ZA0026
      * Date Alpha USR
     I                                       17  23 ZA0027
      * Date Alpha Usr 2
     I                                       24  30 ZA0028
      * Oms System Value Alpha
     I                                       31  70 ZA0029
      * Market Code Usr
     I                                       71  73 ZA0030
      * Price Group Usr
     I                                       74  80 ZA0031
      * @Status Detail/Summary
     I                                       81  81 ZA0032
      * Performance Report Seq
     I                                       82  82 ZA0033
      * Document Name USR
     I                                       83  88 ZA0034
      * Folder Name USR
     I                                       89  94 ZA0035
      * PRT Printer Device
     I                                       95 104 ZA0036
      * PRT Hold Output Sts
     I                                      105 108 ZA0037
      * PRT Save Output Sts
     I                                      109 112 ZA0038
      * PRT Copies
     I                                    P 113 1140ZA0039
      * PRT Night Queue
     I                                      115 124 ZA0040
      * Message data for 'Invalid Company Number'
      * CC Company Number
     I                                    P   1   20ZA0041
      * Message data for 'Commd mkt &1 is invald'
      * Market Code Usr
     I                                        1   3 ZA0042
      * Message data for 'Commd group &1 is invalid'
      * Price Group Usr
     I                                        1   7 ZA0043
      * Message data for 'Buyer must be blank if...'
      * HB Buyer Code
     I                                        1   3 ZA0044
      * Message data for 'Document & Folder Req'
      * Document Name USR
     I                                        1   6 ZA0045
      * Folder Name USR
     I                                        7  12 ZA0046
      * Message data for 'Document & Folder Req'
      * Document Name USR
     I                                        1   6 ZA0047
      * Folder Name USR
     I                                        7  12 ZA0048
      * Message data for 'Report Type Inv PCFILE'
      * @Status Detail/Summary
     I                                        1   1 ZA0049
      * Message data for 'Perm Rpt Seq Inv PCFILE'
      * Performance Report Seq
     I                                        1   1 ZA0050
      * Message data for 'Invalid Company Number'
      * CC Company Number
     I                                    P   1   20ZA0051
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSA1
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Enable PUTOVR
     C                     SETON                     86
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process command keys
      * F4 = Buyer
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.HB Buyer Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#1ACCD'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Sel Hog Buyer         SR - Hog Buyer  * 
     C                     CALL 'PKD3SRR'              90  Sel Hog Buyer
     C                     PARM *BLANK    W0RTN   7
     C           #1ACCD    PARM #1ACCD    WQ0001  3        HB Buyer Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKD3SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9937  *
     C                     END
     C                     END                             *FI
      * F4 = Source Code
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.TH Source Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#1LKST'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Sel Source            SR - Source  * 
     C                     CALL 'PKDRSRR'              90  Sel Source
     C                     PARM *BLANK    W0RTN   7
     C           #1LKST    PARM #1LKST    WQ0002  3        SR Source Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKDRSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9939  *
     C                     END
     C                     END                             *FI
      * F4 = Producer
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.PD Producer Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#1ABCD'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Sel Producer          SR - Producer  * 
     C                     CALL 'PKA1SRR'              90  Sel Producer
     C                     PARM *BLANK    W0RTN   7
     C           #1ABCD    PARM #1ABCD    WQ0003  6        PD Producer Cod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKA1SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9940  *
     C                     END
     C                     END                             *FI
      * F4 = Market group
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.Market Code Usr
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#DEVCD'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Sel Commodity Market  XF - STR Order Management Sys  * 
     C                     CALL 'PDEDSRR'              90  Sel Commodity M
     C                     PARM *BLANK    W0RTN   7
     C           #DEVCD    PARM #DEVCD    WQ0004  3        PSC Commodity M
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDEDSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9934  *
     C                     END
     C                     END                             *FI
      * F4 = Price group
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.Price Group Usr
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#DEWCD'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Sel Commodity Group   XF - STR Order Management Sys  * 
     C                     CALL 'PDECSRR'              90  Sel Commodity G
     C                     PARM *BLANK    W0RTN   7
     C           #DEWCD    PARM #DEWCD    WQ0005  7        PSC Commodity P
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDECSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9935  *
     C                     END
     C                     END                             *FI
     C                     END
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: User defined action
      * Pmt Print Options Size XF - STR Order Management Sys  * 
     C                     CALL 'PDV8PVR'              90  Pmt Print Optio
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,01    WQ0006 25        PRT Description
     C           P1ACVN    PARM P1ACVN    WQ0007 10        PRT Printer Dev
     C           P1AKST    PARM P1AKST    WQ0008  4        PRT Hold Output
     C           P1AMST    PARM P1AMST    WQ0009  4        PRT Save Output
     C           P1AKNB    PARM P1AKNB    WQ0010  20       PRT Copies
     C                     PARM 'N'       WQ0011  1        PRT Night Queue
     C           P1AIVN    PARM P1AIVN    WQ0012 10        PRT Night Queue
     C                     PARM 'P/S'     WQ0013  6        Oms Application
     C                     PARM '2'       WQ0014  1        Paper Type Usr-
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDV8PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Submit Report/Create Outfile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    WUC3CD           Company Number
     C                     MOVEL#PHONB    WUC3CD           Company Number
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DTL.Print Level USR is None
      *   |- c2    : DTL.File Member USR NE WRK.Blank USR
      *   '-
     C           #DTZST    IFEQ *BLANK                     *IF
     C           #DAUVN    ORNE WUCRTX                     *OR
     C                     MOVEL*BLANK    WUCZCD           Date Alpha USR
     C                     MOVEL#DB3DT    WUCZCD           Date Alpha USR
     C                     MOVEL*BLANK    WUDHCD           Date Alpha Usr
     C                     MOVEL#DB4DT    WUDHCD           Date Alpha Usr
      * Setup message data for message
     C                     Z-ADD#PHONB    ZA0001           CC Company Numb
     C                     MOVEL#1KAST    ZA0002           TH Source Type
     C                     MOVEL#1J9ST    ZA0003           TH Payment Type
     C                     MOVEL#1LKST    ZA0004           TH Source Code
     C                     MOVEL#1ABCD    ZA0005           PD Producer Cod
     C                     MOVEL#1ACCD    ZA0006           HB Buyer Code
     C                     MOVELWUCZCD    ZA0007           Date Alpha USR
     C                     MOVELWUDHCD    ZA0008           Date Alpha Usr
     C                     MOVELP2EVTX    ZA0009           Oms System Valu
     C                     MOVEL#DEVCD    ZA0010           Market Code Usr
     C                     MOVEL#DEWCD    ZA0011           Price Group Usr
     C                     MOVEL#DKMST    ZA0012           @Status Detail/
     C                     MOVEL#DTJST    ZA0013           Performance Rep
     C                     MOVEL#DAUVN    ZA0014           Document Name U
     C                     MOVEL#DAVVN    ZA0015           Folder Name USR
     C                     MOVELP1ACVN    ZA0016           PRT Printer Dev
     C                     MOVELP1AKST    ZA0017           PRT Hold Output
     C                     MOVELP1AMST    ZA0018           PRT Save Output
     C                     Z-ADDP1AKNB    ZA0019           PRT Copies
     C                     MOVELP1AIVN    ZA0020           PRT Night Queue
      *
      * Execute message
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2EXMCC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'PRK0473' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
     C           W0RTN     IFNE *BLANK
      * Error detected during execution
     C                     SETON                     993138*
     C                     SETON                     413940*
     C                     SETON                     373435*
     C                     SETON                     364344*
     C                     END
      *
     C                     ELSE
      * CASE: DTL.Print Level USR is Weekly
     C           #DTZST    IFEQ 'W'                        *IF
     C                     Z-ADD#DB3DT    YL0001           Date From USR
      * LCL.Day of Week USR = LCL.Date From USR *DAY OF WEEK
     C           YL0001    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0002
     C           7         SUB  YL0002    YL0003           Count USR
      * Date From/To
      * CASE: LCL.Count USR is GT Zero
     C           YL0003    IFGT *ZERO                      *IF
      * LCL.Date To   USR = LCL.Date From USR + LCL.Count USR *DAYS
     C           YL0001    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0003    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0004
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0004
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Date From USR = LCL.Date From USR + CON.1 *DAYS
     C           YL0001    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0001
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0001
     C                     END
      * LCL.Date To   USR = LCL.Date From USR + CON.6 *DAYS
     C           YL0001    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD6         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0004
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0004
     C                     END
     C                     END                             *FI
      * Date To
      * CASE: DTL.Date To   USR LT LCL.Date To   USR
     C           #DB4DT    IFLT YL0004                     *IF
     C                     Z-ADD#DB4DT    YL0004           Date To   USR
     C                     END                             *FI
      * DO WHILE: LCL.Date From USR LE DTL.Date To   USR
     C           YL0001    DOWLE#DB4DT                     *DOW
     C                     MOVEL*BLANK    WUCZCD           Date Alpha USR
     C                     MOVELYL0001    WUCZCD           Date Alpha USR
     C                     MOVEL*BLANK    WUDHCD           Date Alpha Usr
     C                     MOVELYL0004    WUDHCD           Date Alpha Usr
      * Setup message data for message
     C                     Z-ADD#PHONB    ZA0021           CC Company Numb
     C                     MOVEL#1KAST    ZA0022           TH Source Type
     C                     MOVEL#1J9ST    ZA0023           TH Payment Type
     C                     MOVEL#1LKST    ZA0024           TH Source Code
     C                     MOVEL#1ABCD    ZA0025           PD Producer Cod
     C                     MOVEL#1ACCD    ZA0026           HB Buyer Code
     C                     MOVELWUCZCD    ZA0027           Date Alpha USR
     C                     MOVELWUDHCD    ZA0028           Date Alpha Usr
     C                     MOVELP2EVTX    ZA0029           Oms System Valu
     C                     MOVEL#DEVCD    ZA0030           Market Code Usr
     C                     MOVEL#DEWCD    ZA0031           Price Group Usr
     C                     MOVEL#DKMST    ZA0032           @Status Detail/
     C                     MOVEL#DTJST    ZA0033           Performance Rep
     C                     MOVEL*BLANK    ZA0034           Document Name U
     C                     MOVEL*BLANK    ZA0035           Folder Name USR
     C                     MOVELP1ACVN    ZA0036           PRT Printer Dev
     C                     MOVELP1AKST    ZA0037           PRT Hold Output
     C                     MOVELP1AMST    ZA0038           PRT Save Output
     C                     Z-ADDP1AKNB    ZA0039           PRT Copies
     C                     MOVELP1AIVN    ZA0040           PRT Night Queue
      *
      * Execute message
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2EXMCC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'PRK0473' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
     C           W0RTN     IFNE *BLANK
      * Error detected during execution
     C                     SETON                     993138*
     C                     SETON                     413940*
     C                     SETON                     373435*
     C                     SETON                     36    *
     C                     END
      *
      * LCL.Date From USR = LCL.Date To   USR + CON.1 *DAYS
     C           YL0004    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0001
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0001
     C                     END
      * LCL.Date To   USR = LCL.Date From USR + CON.6 *DAYS
     C           YL0001    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD6         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0004
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0004
     C                     END
      * CASE: DTL.Date To   USR LT LCL.Date To   USR
     C           #DB4DT    IFLT YL0004                     *IF
     C                     Z-ADD#DB4DT    YL0004           Date To   USR
     C                     END                             *FI
     C                     END                             *ITR
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Request new transaction
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Validate Date From USR
      * External date
     C                     Z-ADDVDB3DT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     Z-ADDXDINDT    #DB3DT
      * Validate Date To   USR
      * External date
     C                     Z-ADDVDB4DT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9933  *
     C                     END
     C                     Z-ADDXDINDT    #DB4DT
      * Validate @Status Detail/Summary
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#DKMST'  IFEQ YPMTFD
      * @Status Detail/Summary
     C                     MOVEL#DKMST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHKMST
     C                     SELEC
     C           W0INVL    WHEQ 'D'                        D
     C                     Z-ADD1         ZHKMST
     C           W0INVL    WHEQ 'S'                        S
     C                     Z-ADD2         ZHKMST
     C           W0INVL    WHEQ 'B'                        B
     C                     Z-ADD3         ZHKMST
     C                     ENDSL
     C                     EXFMTZGKMST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHKMST    WHEQ 1
     C                     MOVEL'D'       W0INVL           D
     C           ZHKMST    WHEQ 2
     C                     MOVEL'S'       W0INVL           S
     C           ZHKMST    WHEQ 3
     C                     MOVEL'B'       W0INVL           B
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #DKMST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate TH Source Type
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#1KAST'  IFEQ YPMTFD
      * TH Source Type
     C                     MOVEL#1KAST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHKAST
     C                     SELEC
     C           W0INVL    WHEQ 'E'                        E
     C                     Z-ADD1         ZHKAST
     C           W0INVL    WHEQ 'I'                        I
     C                     Z-ADD2         ZHKAST
     C                     ENDSL
     C                     EXFMTZGKAST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHKAST    WHEQ 1
     C                     MOVEL'E'       W0INVL           E
     C           ZHKAST    WHEQ 2
     C                     MOVEL'I'       W0INVL           I
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #1KAST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate TH Payment Type
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#1J9ST'  IFEQ YPMTFD
      * TH Payment Type
     C                     MOVEL#1J9ST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHJ9ST
     C                     SELEC
     C           W0INVL    WHEQ 'L'                        L
     C                     Z-ADD1         ZHJ9ST
     C           W0INVL    WHEQ 'C'                        C
     C                     Z-ADD2         ZHJ9ST
     C                     ENDSL
     C                     EXFMTZGJ9ST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHJ9ST    WHEQ 1
     C                     MOVEL'L'       W0INVL           L
     C           ZHJ9ST    WHEQ 2
     C                     MOVEL'C'       W0INVL           C
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #1J9ST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate Print Level USR
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#DTZST'  IFEQ YPMTFD
      * Print Level USR
     C                     MOVEL#DTZST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHTZST
     C                     SELEC
     C           W0INVL    WHEQ *BLANK                     *BLANK
     C                     Z-ADD1         ZHTZST
     C           W0INVL    WHEQ 'W'                        W
     C                     Z-ADD2         ZHTZST
     C                     ENDSL
     C                     EXFMTZGTZST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHTZST    WHEQ 1
     C                     MOVEL*BLANK    W0INVL           *BLANK
     C           ZHTZST    WHEQ 2
     C                     MOVEL'W'       W0INVL           W
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #DTZST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate fields
     C                     MOVEL*BLANK    #DBSTX           Name USR
      * Val Company Number    IF
      * Val Company Number    XF - STR Order Management Sys  * 
     C                     CALL 'PDGZXFR'              90  Val Company Num
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #PHONB    WQ0015  30       CC Company Numb
     C           #DBSTX    PARM *BLANK    WQ0016 30        Oms Name
     C           WUG3ST    PARM *BLANK    WQ0017  1        Invalid Y/N USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGZXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
      * CASE: WRK.Invalid Y/N USR is Yes
     C           WUG3ST    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     Z-ADD#PHONB    ZA0041           CC Company Numb
      * Send message 'Invalid Company Number'
     C                     MOVEL'PRK0299' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     MOVELWUG3ST    WUG3ST           Invalid Y/N USR
      * CASE: WRK.Invalid Y/N USR is Yes
     C           WUG3ST    IFEQ 'Y'                        *IF
      * Send message 'Company                NF'
     C                     MOVEL'PRK0162' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     MOVEL*BLANK    #DALTX           HB Name
      * CASE: DTL.HB Buyer Code is Blank
     C           #1ACCD    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Hog Buyer Name    RT - Hog Buyer  * 
     C                     EXSR SARVGN
      * CASE: DTL.HB Name EQ WRK.Blank USR
     C           #DALTX    IFEQ WUCRTX                     *IF
      * Send message 'Hog Buyer              NF'
     C                     MOVEL'PRK0011' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL*BLANK    #DAFTX           SR Description
      * CASE: DTL.TH Source Code EQ WRK.Blank USR
     C           #1LKST    IFEQ WUCRTX                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Source Desc       RT - Source  * 
     C                     EXSR SBRVGN
      * CASE: DTL.SR Description EQ WRK.Blank USR
     C           #DAFTX    IFEQ WUCRTX                     *IF
      * Send message 'Source                 NF'
     C                     MOVEL'PRK0005' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL*BLANK    #DCPTX           Name Producer D
      * CASE: DTL.PD Producer Code is Blank
     C           #1ABCD    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DCPTX           Name Producer D
      * Name Producer DRV
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SCRVGN
      * CASE: DTL.Name Producer DRV EQ WRK.Blank USR
     C           #DCPTX    IFEQ WUCRTX                     *IF
      * Send message 'Producer               NF'
     C                     MOVEL'PRK0009' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
      * CASE: DTL.Date From USR GT DTL.Date To   USR
     C           #DB3DT    IFGT #DB4DT                     *IF
      * Send message 'From date must <= to date'
     C                     MOVEL'PRK0472' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
      * Val Commodity Market  XF - STR Order Management Sys  * 
     C                     CALL 'PDG1XFR'              90  Val Commodity M
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #DEVCD    WQ0018  3        PSC Commodity M
     C           #DERTX    PARM *BLANK    WQ0019 30        Market Code Des
     C           WUG3ST    PARM *BLANK    WQ0020  1        Invalid Y/N USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDG1XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9934  *
     C                     END
      * CASE: WRK.Invalid Y/N USR is Yes
     C           WUG3ST    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DEVCD    ZA0042           Market Code Usr
      * Send message 'Commd mkt &1 is invald'
     C                     MOVEL'PRK0482' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
      * Val Commodity Group   XF - STR Order Management Sys  * 
     C                     CALL 'PDG2XFR'              90  Val Commodity G
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #DEWCD    WQ0021  7        PSC Commodity P
     C           #DESTX    PARM *BLANK    WQ0022 30        Market Group De
     C           WUG3ST    PARM *BLANK    WQ0023  1        Invalid Y/N USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDG2XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9935  *
     C                     END
      * CASE: WRK.Invalid Y/N USR is Yes
     C           WUG3ST    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DEWCD    ZA0043           Price Group Usr
      * Send message 'Commd group &1 is invalid'
     C                     MOVEL'PRK0483' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     END                             *FI
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.TH Source Type NE WRK.Blank USR
      *   |- c2    : DTL.PD Producer Code NE WRK.Blank USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #1KAST    IFNE WUCRTX                     *IF
     C           #1ABCD    IFNE WUCRTX                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Send message 'Please enter src or prdcr'
     C                     MOVEL'PRK0555' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
      * *****************************************************************
      * **  PK0050
      * *****************************************************************
      * CASE: DTL.USR Report Sequence is 2
     C           #DTJST    IFEQ '2'                        *IF
      * CASE: DTL.HB Buyer Code is Blank
     C           #1ACCD    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1ACCD    ZA0044           HB Buyer Code
      * Send message 'Buyer must be blank if...'
     C                     MOVEL'PRK0876' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9937  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate Document/Folder
      * CASE: DTL.Document Name USR EQ WRK.Blank USR
     C           #DAUVN    IFEQ WUCRTX                     *IF
      * CASE: DTL.Folder Name USR NE WRK.Blank USR
     C           #DAVVN    IFNE WUCRTX                     *IF
      * Setup message data for message
     C                     MOVEL#DAUVN    ZA0045           Document Name U
     C                     MOVEL#DAVVN    ZA0046           Folder Name USR
      * Send message 'Document & Folder Req'
     C                     MOVEL'PRK0894' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     994344*
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: DTL.Folder Name USR EQ WRK.Blank USR
     C           #DAVVN    IFEQ WUCRTX                     *IF
      * CASE: DTL.Document Name USR NE WRK.Blank USR
     C           #DAUVN    IFNE WUCRTX                     *IF
      * Setup message data for message
     C                     MOVEL#DAUVN    ZA0047           Document Name U
     C                     MOVEL#DAVVN    ZA0048           Folder Name USR
      * Send message 'Document & Folder Req'
     C                     MOVEL'PRK0894' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     994344*
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Val Report Type/Report Sequence
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DTL.Document Name USR NE WRK.Blank USR
      *   |- c2    : DTL.Folder Name USR NE WRK.Blank USR
      *   '-
     C           #DAUVN    IFNE WUCRTX                     *IF
     C           #DAVVN    ORNE WUCRTX                     *OR
      * CASE: DTL.@Status Detail/Summary is Both
     C           #DKMST    IFEQ 'B'                        *IF
      * Setup message data for message
     C                     MOVEL#DKMST    ZA0049           @Status Detail/
      * Send message 'Report Type Inv PCFILE'
     C                     MOVEL'PRK0892' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     END                             *FI
      * CASE: DTL.Performance Report Seq is 1 and 2
     C           #DTJST    IFEQ '1'                        *IF
     C           #DTJST    OREQ '2'
      * Setup message data for message
     C                     MOVEL#DTJST    ZA0050           Performance Rep
      * Send message 'Perm Rpt Seq Inv PCFILE'
     C                     MOVEL'PRK0893' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END
      * Bypass ref file checks if error already detected
     C   99                GOTO DBEXIT
      * Select existing record
     C                     EXSR VACKRL
      * Check reference to Hog Defect
     C                     EXSR VBCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
      * Check reference to Tattoo Header Process
     C                     EXSR VCCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
      * Check reference to Genetic
     C                     EXSR VDCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
      * Check reference to Hog Classification
     C                     EXSR VECKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * CALC: Screen function fields
      * DTL.Int/External Desc Usr = Condition name of DTL.TH Source Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1121482   Y2LSNO  70       List number
     C                     PARM #1KAST    W0INVL 25        TH Source Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DEETX    PARM           W0CNNM 25        Int/External De
      *
      * DTL.Condition Name 1 USR = Condition name of DTL.Print Level USR
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1219490   Y2LSNO  70       List number
     C                     PARM #DTZST    W0INVL 25        Print Level USR
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DI1TX    PARM           W0CNNM 25        Condition Name
      *
      * DTL.Condition Name USR = Condition name of DTL.Performance Report
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1216277   Y2LSNO  70       List number
     C                     PARM #DTJST    W0INVL 25        Performance Rep
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DC4TX    PARM           W0CNNM 25        Condition Name
      *
     C                     END
      * CC Company Number required
     C           #PHONB    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Date From USR required
     C           #DB3DT    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9932  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Date To   USR required
     C           #DB4DT    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9933  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Market Code Usr required
     C           #DEVCD    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9934  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Price Group Usr required
     C           #DEWCD    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9935  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * @Status Detail/Summary required
     C           #DKMST    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9936  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for screen
      *================================================================
     C                     MOVEL'0'       *IN79
     C           P2G8ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     MOVELP1ETTX    #PETTX           PRT Description
     C                     MOVELP1ACVN    #PACVN           PRT Printer Dev
     C                     MOVELP1AKST    #PAKST           PRT Hold Output
     C                     MOVELP1AMST    #PAMST           PRT Save Output
     C                     Z-ADDP1AKNB    #PAKNB           PRT Copies
     C                     MOVELP1ALST    #PALST           PRT Night Queue
     C                     MOVELP1AIVN    #PAIVN           PRT Night Queue
     C                     MOVELP1C7CD    #PC7CD           Oms Application
     C                     MOVELP2J8NB    #PJ8NB           Oms Warehouse C
     C                     MOVELP2C8CD    #PC8CD           Oms SalesPerson
     C                     MOVELP2G8ST    #PG8ST           Oms Allow Multi
     C                     MOVELP2G9ST    #PG9ST           Oms Default Pri
     C                     MOVELP2EUTX    #PEUTX           Oms Name
     C                     MOVELP2EVTX    #PEVTX           Oms System Valu
     C                     MOVELP2HAST    #PHAST           Oms Access Deni
     C                     Z-ADD*ZERO     #1HMNB           BOH Company Num
     C                     MOVEL*BLANK    #DTJST           Performance Rep
     C                     MOVEL*BLANK    #DC4TX           Condition Name
     C                     Z-ADD*ZERO     #1BNNB           BOH Buy Order N
     C                     Z-ADD*ZERO     #1BONB           BOL Load Number
     C                     Z-ADD*ZERO     #1CVNB           TH Tattoo Numbe
     C                     Z-ADD*ZERO     #1B0DT           TH Kill Date
     C                     Z-ADD*ZERO     #1AWDT           TH Purchase Dat
     C                     MOVEL*BLANK    #1BICD           TH Group Refere
     C                     MOVEL*BLANK    #1CPST           TH Live Purchas
     C                     Z-ADD*ZERO     #1ACPR           TH Live Purchas
     C                     Z-ADD*ZERO     #1B9PR           TH Live Gross A
     C                     Z-ADD*ZERO     #1CAPR           TH LIve Net Amt
     C                     MOVEL*BLANK    #1C4ST           TH Resale UOM
     C                     Z-ADD*ZERO     #1AIPR           TH Recalc Live
     C                     Z-ADD*ZERO     #1A6DT           TH Pricing Date
     C                     MOVEL*BLANK    #1C2ST           TH Resale Sprea
     C                     Z-ADD*ZERO     #1CXNB           TH Dead On Arri
     C                     Z-ADD*ZERO     #1CWNB           TH Head Receive
     C                     Z-ADD*ZERO     #1FCNB           TH Yard Deads
     C                     Z-ADD*ZERO     #1H9NB           TH Held Over
     C                     Z-ADD*ZERO     #1FDNB           TH Head Condemn
     C                     Z-ADD*ZERO     #1FENB           TH Head Killed
     C                     Z-ADD*ZERO     #1HENB           TH Head Adds
     C                     Z-ADD*ZERO     #1HFNB           TH Head Accepte
     C                     Z-ADD*ZERO     #1CYNB           TH Live Wgt
     C                     Z-ADD*ZERO     #1LRNB           TH Adj Live Wgt
     C                     Z-ADD*ZERO     #1E0NB           TH Hot Wgt
     C                     Z-ADD*ZERO     #1A5PC           TH Tot Loin Eye
     C                     Z-ADD*ZERO     #1FBNB           TH Tot Backfat
     C                     Z-ADD*ZERO     #1A4PC           TH Tot Light Re
     C                     Z-ADD*ZERO     #1F7NB           TH Avg Live Wgt
     C                     Z-ADD*ZERO     #1HDNB           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     #1F5NB           TH Avg Light Re
     C                     Z-ADD*ZERO     #1F4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     #1F3NB           TH Avg Loin Eye
     C                     Z-ADD*ZERO     #1F2NB           TH Avg Backfat
     C                     Z-ADD*ZERO     #1AVPC           TH Std Yield Pe
     C                     Z-ADD*ZERO     #1AWPC           TH Actual Yield
     C                     Z-ADD*ZERO     #1CWPC           TH Adj Actual Y
     C                     Z-ADD*ZERO     #1A8PC           TH Yield Differ
     C                     Z-ADD*ZERO     #1A7PC           TH Recalc Live
     C                     Z-ADD*ZERO     #1B8PR           TH CM Market Pr
     C                     Z-ADD*ZERO     #1AMPR           TH CM Base Mkt
     C                     Z-ADD*ZERO     #1ANPR           TH CM Base Mkt
     C                     Z-ADD*ZERO     #1AYVA           TH CM Sort Disc
     C                     Z-ADD*ZERO     #1AWVA           TH CM Yield Gai
     C                     Z-ADD*ZERO     #1AOPR           TH CM Base Carc
     C                     Z-ADD*ZERO     #1AXVA           TH CM LN AddOn/
     C                     Z-ADD*ZERO     #1APPR           TH CM Carcass G
     C                     Z-ADD*ZERO     #1ASPR           TH Deduction Am
     C                     Z-ADD*ZERO     #1A4VA           TH Total Net WO
     C                     Z-ADD*ZERO     #1ATPR           TH Carcass Net
     C                     Z-ADD*ZERO     #1A5VA           TH Additions Am
     C                     Z-ADD*ZERO     #1CBPR           TH Payment Gros
     C                     Z-ADD*ZERO     #1CCPR           Th Payment Net
     C                     Z-ADD*ZERO     #1LPNB           TH AP Voucher/D
     C                     Z-ADD*ZERO     #1CDPR           TH Freight Amou
     C                     Z-ADD*ZERO     #1A7VA           TH Accrual Amou
     C                     Z-ADD*ZERO     #1A2PR           TH Fixed Cost A
     C                     MOVEL*BLANK    #1JWST           TH Calc Net Sts
     C                     MOVEL*BLANK    #1CWST           TH Payment Sts
     C                     MOVEL*BLANK    #1D7ST           TH Header Error
     C                     MOVEL*BLANK    #1D8ST           TH Detail Error
     C                     MOVEL*BLANK    #1DWST           TH Kill Balanci
     C                     MOVEL*BLANK    #1D6ST           TH Bal to Kill
     C                     Z-ADD*ZERO     #1GHNB           TH Commission A
     C                     Z-ADD*ZERO     #1BYDT           TH Voucher Paym
     C                     MOVEL*BLANK    #1E0ST           TH User Error O
     C                     MOVEL*BLANK    #1E1ST           TH Held Over Re
     C                     MOVEL*BLANK    #1E2ST           TH Sex
     C                     Z-ADD*ZERO     #1BSDT           TH Held/Ovr Com
     C                     Z-ADD*ZERO     #1BTDT           TH Commission P
     C                     Z-ADD*ZERO     #1BUDT           TH Actual Check
     C                     Z-ADD*ZERO     #1HGNB           TH Shipped Weig
     C                     Z-ADD*ZERO     #1HHNB           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     #1HINB           TH FFLI
     C                     Z-ADD*ZERO     #1A3PR           TH Kill Product
     C                     Z-ADD*ZERO     #1A4PR           TH Cut Product
     C                     Z-ADD*ZERO     #1A6PR           TH Render Produ
     C                     Z-ADD*ZERO     #1J9NB           TH Head Exclude
     C                     Z-ADD*ZERO     #1D6PR           TH CM Bse Mkt L
     C                     Z-ADD*ZERO     #1D7PR           TH CM Bse Mkt C
     C                     Z-ADD*ZERO     #1D8PR           TH CM Srt Dsc L
     C                     Z-ADD*ZERO     #1D9PR           TH CM Srt Dsc C
     C                     Z-ADD*ZERO     #1EAPR           TH CM Yld G/L L
     C                     Z-ADD*ZERO     #1EBPR           TH CM Yld G/L C
     C                     Z-ADD*ZERO     #1ECPR           TH CM Crc Val L
     C                     Z-ADD*ZERO     #1EDPR           TH CM Crc Val C
     C                     Z-ADD*ZERO     #1EEPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     #1EFPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     #1EGPR           TH CM Gross Liv
     C                     Z-ADD*ZERO     #1EHPR           TH CM Gross Car
     C                     MOVEL*BLANK    #1J7ST           TH Scale Ticket
     C                     MOVEL*BLANK    #1J8ST           TH Posted to HP
     C                     MOVEL*BLANK    #1LIST           TH Schedule Kil
     C                     MOVEL*BLANK    #1LJST           TH Shift Held O
     C                     MOVEL*BLANK    #1NZTX           TH State
     C                     MOVEL*BLANK    #1HJCD           TH Unused Code
     C                     MOVEL*BLANK    #1R4ST           TH Unused Sts 2
     C                     MOVEL*BLANK    #1R5ST           TH Commission S
     C                     MOVEL*BLANK    #1R6ST           TH Paid 2 Week
     C                     MOVEL*BLANK    #1R7ST           TH Unused Sts 1
     C                     Z-ADD*ZERO     #1THWT           TH DOA Weight
     C                     Z-ADD*ZERO     #1T2WT           TH Avg Lean % E
     C                     Z-ADD*ZERO     #1THHD           TH HPS Farm Sit
     C                     Z-ADD*ZERO     #1T2HD           TH Shift Held O
     C                     Z-ADD*ZERO     #1OBPR           TH Sorting Amou
     C                     Z-ADD*ZERO     #1KOER           TH Head Identif
     C                     Z-ADD*ZERO     #1OPIR           TH Percent Iden
     C                     Z-ADD*ZERO     #1OPEM           TH Percent Acce
     C                     Z-ADD*ZERO     #1IORP           TH Head Adjuste
     C                     Z-ADD*ZERO     #1OWEO           TH PHA Head Add
     C                     MOVEL*BLANK    #1OQET           TH PHA Add Type
     C                     MOVEL*BLANK    #1URST           TH PHA Average
     C                     MOVEL*BLANK    #1USST           TH PHA Add Reas
     C                     Z-ADD*ZERO     #1HHPC           TH PHA Yield Pe
     C                     Z-ADD*ZERO     #1S9PR           TH PHA Lean Prm
     C                     Z-ADD*ZERO     #1TAPR           TH VC Gross Val
     C                     Z-ADD*ZERO     #1TBPR           TH Excluded Gro
     C                     Z-ADD*ZERO     #1JFUR           TH Avg Lean %
     C                     Z-ADD*ZERO     #1KRIF           TH Broken Back
     C                     Z-ADD*ZERO     #1KORF           TH Hot Scl Uplo
     C                     Z-ADD*ZERO     #1KAPR           TH Unused Nbr 4
     C                     Z-ADD*ZERO     #1KROT           TH Excluded Car
     C                     Z-ADD*ZERO     #1OTJG           TH Excluded Pre
     C                     Z-ADD*ZERO     #1IRJG           TH Unused Nbr 7
     C                     Z-ADD*ZERO     #1IMJF           TH Unused Nbr 8
     C                     Z-ADD*ZERO     #1IRGF           TH Unused Nbr 9
     C                     Z-ADD*ZERO     #1KRJF           TH Unused Nbr 1
     C                     Z-ADD*ZERO     #1OJRF           TH Break Even P
     C                     Z-ADD*ZERO     #1KFOR           TH Meat Value F
     C                     Z-ADD*ZERO     #1ORJK           TH Yld Parm Adj
     C                     Z-ADD*ZERO     #1OMVJ           TH PHA Sort Dis
     C                     Z-ADD*ZERO     #1MVNF           TH Avg Loin Eye
     C                     Z-ADD*ZERO     #1MCNF           TH Avg Backfat
     C                     Z-ADD*ZERO     #1NCNF           TH HITCH Old Pa
     C                     Z-ADD*ZERO     #1NCHF           TH MPR Sort Los
     C                     Z-ADD*ZERO     #1IGIR           TH Unused Nbr 1
     C                     Z-ADD*ZERO     #1KFJR           TH Unused Nbr 2
     C                     Z-ADD*ZERO     #1EADT           TH Cold Scl Upl
     C                     Z-ADD*ZERO     #1EBDT           TH Cold Scl Upl
     C                     Z-ADD*ZERO     #1ECDT           TH Head LFT
     C                     Z-ADD*ZERO     #1EDDT           TH Head EUT/KOA
     C                     Z-ADD*ZERO     #1EEDT           TH Unused Date
     C                     MOVEL*BLANK    #1U4ST           TH Unused Sts 1
     C                     MOVEL*BLANK    #1U5ST           TH Unused Sts 2
     C                     MOVEL*BLANK    #1U6ST           TH Unused Sts 3
     C                     MOVEL*BLANK    #1U7ST           TH Unused Sts 4
     C                     MOVEL*BLANK    #1U8ST           TH Unused Sts 5
     C                     MOVEL*BLANK    #1U9ST           TH Unused Sts 6
     C                     MOVEL*BLANK    #1VAST           TH Unused Sts 7
     C                     MOVEL*BLANK    #1VBST           TH Unused Sts 8
     C                     Z-ADD*ZERO     #1OXNB           TH HPS Movement
     C                     MOVEL*BLANK    #1LLST           TH Hog Class Ty
     C                     MOVEL*BLANK    #1AGCD           GN Genetic Code
     C                     MOVEL*BLANK    #1BECD           HC Class Code
     C                     MOVEL*BLANK    #1BDCD           DF Defect Code
     C                     MOVEL*BLANK    #1CSCD           THP Process Cod
     C                     MOVEL*BLANK    #1AECD           PL Location Cod
     C                     MOVEL*BLANK    #1AAVN           RS User Changed
     C                     Z-ADD*ZERO     #1AADT           RS Date Changed
     C                     Z-ADD*ZERO     #1AMTM           RS Time Changed
     C                     MOVEL*BLANK    #1AJST           RS Record Statu
     C                     MOVEL*BLANK    #1AHVN           RS Job
     C                     MOVEL*BLANK    #1AGVN           RS Program
     C                     MOVEL*BLANK    #1ABVN           RS User Added
     C                     Z-ADD*ZERO     #1ABDT           RS Date Added
     C                     Z-ADD*ZERO     #1ABTM           RS Time Added
     C                     Z-ADDP2HONB    #PHONB           CC Company Numb
     C                     MOVEL*BLANK    #DBSTX           Name USR
     C                     Z-ADD*ZERO     #DB3DT           Date From USR
      * Clear external version also
     C                     Z-ADD*ZERO     VDB3DT
     C                     Z-ADD*ZERO     #DB4DT           Date To   USR
      * Clear external version also
     C                     Z-ADD*ZERO     VDB4DT
     C                     MOVEL*BLANK    #DEVCD           Market Code Usr
     C                     MOVEL*BLANK    #DERTX           Market Code Des
     C                     MOVEL*BLANK    #DEWCD           Price Group Usr
     C                     MOVEL*BLANK    #DESTX           Market Group De
     C                     MOVEL*BLANK    #DKMST           @Status Detail/
     C                     MOVEL*BLANK    #DIWTX           Status Desc USR
     C                     MOVEL*BLANK    #1ACCD           HB Buyer Code
     C                     MOVEL*BLANK    #DALTX           HB Name
     C                     MOVEL*BLANK    #1KAST           TH Source Type
     C                     MOVEL*BLANK    #DEETX           Int/External De
     C                     MOVEL*BLANK    #1LKST           TH Source Code
     C                     MOVEL*BLANK    #DAFTX           SR Description
     C                     MOVEL*BLANK    #1ABCD           PD Producer Cod
     C                     MOVEL*BLANK    #DCPTX           Name Producer D
     C                     MOVEL*BLANK    #1J9ST           TH Payment Type
     C                     MOVEL*BLANK    #DHDTX           Payment Type De
     C                     MOVEL*BLANK    #DTZST           Print Level USR
     C                     MOVEL*BLANK    #DI1TX           Condition Name
     C                     MOVEL*BLANK    #DAUVN           Document Name U
     C                     MOVEL*BLANK    #DAVVN           Folder Name USR
      * CALC: Screen function fields
      * DTL.Int/External Desc Usr = Condition name of DTL.TH Source Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1121482   Y2LSNO  70       List number
     C                     PARM #1KAST    W0INVL 25        TH Source Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DEETX    PARM           W0CNNM 25        Int/External De
      *
      * DTL.Condition Name 1 USR = Condition name of DTL.Print Level USR
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1219490   Y2LSNO  70       List number
     C                     PARM #DTZST    W0INVL 25        Print Level USR
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DI1TX    PARM           W0CNNM 25        Condition Name
      *
      * DTL.Condition Name USR = Condition name of DTL.Performance Report
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1216277   Y2LSNO  70       List number
     C                     PARM #DTJST    W0INVL 25        Performance Rep
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DC4TX    PARM           W0CNNM 25        Condition Name
      *
      * USER: Load screen
      * CASE: WRK.First Time Flag Usr EQ WRK.Blank USR
     C           WUHBST    IFEQ WUCRTX                     *IF
     C                     Z-ADDWUHONB    #PHONB           CC Company Numb
     C                     MOVEL'Y'       WUHJST           Display Print P
     C                     MOVEL'4'       #DTJST           Performance Rep
     C                     MOVEL'Y'       WUHBST           First Time Flag
      * DTL.Condition Name 1 USR = Condition name of DTL.Print Level USR
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1219490   Y2LSNO  70       List number
     C                     PARM #DTZST    W0INVL 25        Print Level USR
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DI1TX    PARM           W0CNNM 25        Condition Name
      *
      * DTL.Condition Name USR = Condition name of DTL.Performance Report
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1216277   Y2LSNO  70       List number
     C                     PARM #DTJST    W0INVL 25        Performance Rep
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DC4TX    PARM           W0CNNM 25        Condition Name
      *
     C                     END                             *FI
      * Val Company Number    IF
      * Val Company Number    XF - STR Order Management Sys  * 
     C                     CALL 'PDGZXFR'              90  Val Company Num
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #PHONB    WQ0035  30       CC Company Numb
     C           P2EUTX    PARM *BLANK    WQ0036 30        Oms Name
     C           WUG3ST    PARM *BLANK    WQ0037  1        Invalid Y/N USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGZXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
      * CASE: WRK.Invalid Y/N USR is Yes
     C           WUG3ST    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     Z-ADD#PHONB    ZA0051           CC Company Numb
      * Send message 'Invalid Company Number'
     C                     MOVEL'PRK0299' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     MOVELWUG3ST    WUG3ST           Invalid Y/N USR
     C                     MOVEL*BLANK    #DBSTX           Name USR
     C                     MOVELP2EUTX    #DBSTX           Name USR
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Date From USR to display format
      * Convert date
     C           1000000   ADD  #DB3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDB3DT
      * Convert Date To   USR to display format
      * Convert date
     C           1000000   ADD  #DB4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDB4DT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Hog Buyer Name    RT - Hog Buyer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WAACCD           HB Buyer Code
      * Setup key
     C                     MOVEL#1ACCD    WAACCD           HB Buyer Code
      * Establish starting position
     C           KRSSA     CHAIN@ADREAF              90    *
      * Data record not found
     C   90                MOVEL'PRK0011' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAALTX    #DALTX           HB Name
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Source Desc       RT - Source  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBAACD           SR Source Code
      * Setup key
     C                     MOVEL#1LKST    WBAACD           SR Source Code
      * Establish starting position
     C           KRSSB     CHAIN@AAREAC              90    *
      * Data record not found
     C   90                MOVEL'PRK0005' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBAFTX    #DAFTX           SR Description
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WCABCD           PD Producer Cod
      * Setup key
     C                     MOVEL#1ABCD    WCABCD           PD Producer Cod
      * Establish starting position
     C           KRSSC     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCAGTX    #DCPTX           PD Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C           YPMTFD    IFEQ '#1HMNB'
     C           YPMTFD    OREQ '#1BNNB'
     C           YPMTFD    OREQ '#1BONB'
     C           YPMTFD    OREQ '#1CVNB'
     C           YPMTFD    OREQ '#1B0DT'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1HMNB' defaulted for 'BOH Company Number'.
      * Field '(DTL) #1BNNB' defaulted for 'BOH Buy Order Number'.
      * Field '(DTL) #1BONB' defaulted for 'BOL Load Number'.
      * Field '(DTL) #1CVNB' defaulted for 'TH Tattoo Number'.
      * Field '(DTL) #1B0DT' defaulted for 'TH Kill Date'.
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1BYDT' defaulted for 'TH Voucher Payment Date'.
      * Field '(DTL) #1ABCD' defaulted for 'PD Producer Code'.
      * Field '(DTL) #1AECD' defaulted for 'PL Location Code'.
     C                     CALL 'PLK4SRR'              90  Sel Tattoo Head
     C                     PARM *BLANK    W0RTN   7
     C           #1HMNB    PARM #1HMNB    WQ0024  30       BOH Company Num
     C           #1BNNB    PARM #1BNNB    WQ0025  50       BOH Buy Order N
     C           #1BONB    PARM #1BONB    WQ0026  50       BOL Load Number
     C           #1CVNB    PARM #1CVNB    WQ0027  50       TH Tattoo Numbe
     C           #1B0DT    PARM #1B0DT    WQ0028  70       TH Kill Date
     C           #1BYDT    PARM *ZERO     WQ0029  70       TH Voucher Paym
     C           #1ABCD    PARM #1ABCD    WQ0030  6        PD Producer Cod
     C           #1AECD    PARM #1AECD    WQ0031  6        PL Location Cod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PLK4SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9940  *
     C                     END
      *
     C           #1HMNB    IFNE *ZERO                      BOH Company Num
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #1BNNB    IFNE *ZERO                      BOH Buy Order N
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #1BONB    IFNE *ZERO                      BOL Load Number
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #1CVNB    IFNE *ZERO                      TH Tattoo Numbe
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #1B0DT    IFNE *ZERO                      TH Kill Date
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         VBCKRL    BEGSR
      *================================================================
      * Check reference to Hog Defect
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1BDCD    WK1X01  1
     C           WK1X01    IFEQ '?'                        DF Defect Code
     C           YPMTFD    OREQ '#1BDCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1BDCD' defaulted for 'DF Defect Code'.
     C                     CALL 'PKCWSRR'              90  Sel Hog Defect
     C                     PARM *BLANK    W0RTN   7
     C           #1BDCD    PARM #1BDCD    WQ0032  6        DF Defect Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKCWSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1BDCD    IFNE *BLANK                     DF Defect Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VBEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1BDCD    IFEQ *BLANK                     DF Defect Code
     C                     GOTO VBEXIT
     C                     END
      *
     C           KLVBWD    KLIST
     C                     KFLD           WDBDCD           DF Defect Code
      * Setup key
     C                     MOVEL#1BDCD    WDBDCD
     C           KLVBWD    CHAIN@A7REC1              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VBEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VBEXIT
     C                     END
      * Send message 'Hog Defect             NF'
     C                     MOVEL'PRK0073' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'PRK0073' W0RTN
      *================================================================
     CSR         VBEXIT    ENDSR
      /EJECT
     CSR         VCCKRL    BEGSR
      *================================================================
      * Check reference to Tattoo Header Process
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * If all low order keys not entered, exit
     C           #1CSCD    IFEQ *BLANK                     THP Process Cod
     C                     GOTO VCEXIT
     C                     END
      *
     C           KLVCWE    KLIST
     C                     KFLD           WECSCD           THP Process Cod
      * Setup key
     C                     MOVEL#1CSCD    WECSCD
     C           KLVCWE    CHAIN@CCREH3              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VCEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VCEXIT
     C                     END
      * Send message 'Tattoo Header Process  NF'
     C                     MOVEL'PRK0172' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'PRK0172' W0RTN
      *================================================================
     CSR         VCEXIT    ENDSR
      /EJECT
     CSR         VDCKRL    BEGSR
      *================================================================
      * Check reference to Genetic
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1AGCD    WK1X01  1
     C           WK1X01    IFEQ '?'                        GN Genetic Code
     C           YPMTFD    OREQ '#1AGCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1AGCD' defaulted for 'GN Genetic Code'.
     C                     CALL 'PKNASRR'              90  Sel Genetic Act
     C                     PARM *BLANK    W0RTN   7
     C           #1AGCD    PARM #1AGCD    WQ0033  5        GN Genetic Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKNASRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1AGCD    IFNE *BLANK                     GN Genetic Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VDEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1AGCD    IFEQ *BLANK                     GN Genetic Code
     C                     GOTO VDEXIT
     C                     END
      *
     C           KLVDWF    KLIST
     C                     KFLD           WFAGCD           GN Genetic Code
      * Setup key
     C                     MOVEL#1AGCD    WFAGCD
     C           KLVDWF    CHAIN@AIREA9              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VDEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VDEXIT
     C                     END
      * Send message 'Genetic                NF'
     C                     MOVEL'PRK0021' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'PRK0021' W0RTN
      *================================================================
     CSR         VDEXIT    ENDSR
      /EJECT
     CSR         VECKRL    BEGSR
      *================================================================
      * Check reference to Hog Classification
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1BECD    WK1X01  1
     C           WK1X01    IFEQ '?'                        HC Class Code
     C           YPMTFD    OREQ '#1BECD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1BECD' defaulted for 'HC Class Code'.
     C                     CALL 'PKC0SRR'              90  Sel Hog Classif
     C                     PARM *BLANK    W0RTN   7
     C           #1BECD    PARM #1BECD    WQ0034  3        HC Class Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKC0SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1BECD    IFNE *BLANK                     HC Class Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VEEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1BECD    IFEQ *BLANK                     HC Class Code
     C                     GOTO VEEXIT
     C                     END
      *
     C           KLVEWG    KLIST
     C                     KFLD           WGBECD           HC Class Code
      * Setup key
     C                     MOVEL#1BECD    WGBECD
     C           KLVEWG    CHAIN@A8REDA              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VEEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VEEXIT
     C                     END
      * Send message 'Hog Classification     NF'
     C                     MOVEL'PRK0075' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'PRK0075' W0RTN
      *================================================================
     CSR         VEEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     END
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           ZHCSRW    IFEQ 008
     C           ZHCSCL    ANDEQ028
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#DKMST'  YPMTFD           @Status Detail/
     C                     END
      *
     C           ZHCSRW    IFEQ 012
     C           ZHCSCL    ANDEQ028
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1KAST'  YPMTFD           TH Source Type
     C                     END
      *
     C           ZHCSRW    IFEQ 015
     C           ZHCSCL    ANDEQ028
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1J9ST'  YPMTFD           TH Payment Type
     C                     END
      *
     C           ZHCSRW    IFEQ 016
     C           ZHCSCL    ANDEQ028
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#DTZST'  YPMTFD           Print Level USR
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1ETTX           PRT Description
     C                     MOVEL*BLANK    P1ACVN           PRT Printer Dev
     C                     MOVEL*BLANK    P1AKST           PRT Hold Output
     C                     MOVEL*BLANK    P1AMST           PRT Save Output
     C                     Z-ADD*ZERO     P1AKNB           PRT Copies
     C                     MOVEL*BLANK    P1ALST           PRT Night Queue
     C                     MOVEL*BLANK    P1AIVN           PRT Night Queue
     C                     MOVEL*BLANK    P1C7CD           Oms Application
     C                     MOVEL*BLANK    P2J8NB           Oms Warehouse C
     C                     Z-ADD*ZERO     P2HONB           CC Company Numb
     C                     MOVEL*BLANK    P2C8CD           Oms SalesPerson
     C                     MOVEL*BLANK    P2G8ST           Oms Allow Multi
     C                     MOVEL*BLANK    P2G9ST           Oms Default Pri
     C                     MOVEL*BLANK    P2EUTX           Oms Name
     C                     MOVEL*BLANK    P2EVTX           Oms System Valu
     C                     MOVEL*BLANK    P2HAST           Oms Access Deni
     C                     MOVEL*BLANK    P3HDST           Display Field U
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Company Number Alpha Usr
     C                     MOVEL*BLANK    WUC3CD  3
      * Define work field Blank USR
     C                     MOVEL*BLANK    WUCRTX 80
      * Define work field Date Alpha USR
     C                     MOVEL*BLANK    WUCZCD  7
      * Define work field Date Alpha Usr 2
     C                     MOVEL*BLANK    WUDHCD  7
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Invalid Y/N USR
     C                     MOVEL*BLANK    WUG3ST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAADT           RS Date Changed
     C                     Z-ADD*ZERO     WBAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WBABDT           RS Date Added
     C                     Z-ADD*ZERO     WBABTM           RS Time Added
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCALNB           PD Production C
     C                     Z-ADD*ZERO     WCAATH           PD Std Delv Tim
     C                     Z-ADD*ZERO     WCAMNB           PD Std Truck Si
     C                     Z-ADD*ZERO     WCGCNB           PD VND Address
     C                     Z-ADD*ZERO     WCGJNB           PD EDI Trading
     C                     Z-ADD*ZERO     WCAADT           RS Date Changed
     C                     Z-ADD*ZERO     WCAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WCABDT           RS Date Added
     C                     Z-ADD*ZERO     WCABTM           RS Time Added
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAEA1           DF Market Perce
     C                     Z-ADD*ZERO     WDUOPR           DF Unused Price
     C                     Z-ADD*ZERO     WDUPPR           DF Unused Price
     C                     Z-ADD*ZERO     WDUQPR           DF Unused Price
     C                     Z-ADD*ZERO     WDAADT           RS Date Changed
     C                     Z-ADD*ZERO     WDAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WDABDT           RS Date Added
     C                     Z-ADD*ZERO     WDABTM           RS Time Added
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WEAADT           RS Date Changed
     C                     Z-ADD*ZERO     WEAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WEABDT           RS Date Added
     C                     Z-ADD*ZERO     WEABTM           RS Time Added
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WFAADT           RS Date Changed
     C                     Z-ADD*ZERO     WFAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WFABDT           RS Date Added
     C                     Z-ADD*ZERO     WFABTM           RS Time Added
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WGAADT           RS Date Changed
     C                     Z-ADD*ZERO     WGAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WGABDT           RS Date Added
     C                     Z-ADD*ZERO     WGABTM           RS Time Added
      * Define work field First Time Flag Usr
     C                     MOVEL*BLANK    WUHBST  1
      * Define work field CC Company Number
     C                     Z-ADD*ZERO     WUHONB  30
      * Define work field Display Print Prompt  Usr
     C                     MOVEL*BLANK    WUHJST  1
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      * Define local work field Date From USR
     C                     Z-ADD*ZERO     YL0001  70
      * Define local work field Day of Week USR
     C                     Z-ADD*ZERO     YL0002  10
      * Define local work field Count USR
     C                     Z-ADD*ZERO     YL0003  30
      * Define local work field Date To   USR
     C                     Z-ADD*ZERO     YL0004  70
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Val Application/User  IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                     CALL 'PDGXXFR'              90  Val Application
     C                     PARM *BLANK    W0RTN   7
     C           P2J8NB    PARM *BLANK    WQ0038  3        Oms Warehouse C
     C           WUHONB    PARM *ZERO     WQ0039  30       CC Company Numb
     C                     PARM 'HPE'     WQ0040  6        Oms Application
     C           P2C8CD    PARM *BLANK    WQ0041  3        Oms SalesPerson
     C           P2G8ST    PARM *BLANK    WQ0042  1        Oms Allow Multi
     C           P2G9ST    PARM *BLANK    WQ0043 10        Oms Default Pri
     C           P2EUTX    PARM *BLANK    WQ0044 30        Oms Name
     C           P2EVTX    PARM *BLANK    WQ0045 40        Oms System Valu
     C           P2HAST    PARM *BLANK    WQ0046  1        Oms Access Deni
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P2HAST    IFEQ 'Y'                        *IF
      * Send message 'Access Denied for User'
     C                     MOVEL'PRK0298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Mov ApplN to Company  US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP2EVTX    ##CMP
     C                     END                             *FI
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P2HAST    IFEQ 'Y'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
**
01052010630130801318015640157501820
01831020760208702844028550310003111
03356033670361203623038680387904124
041350489105147
**
01054011020131301323015660160401826
01860020760210602846028940310003135
03358033910361703647038680390804124
041590489605152
**
#PHONB    #DBSTX    VDB3DT    VDB4DT    #DEVCD    #DERTX    #DEWCD
#DESTX    #DKMST    #DIWTX    #1ACCD    #DALTX    #1KAST    #DEETX
#1LKST    #DAFTX    #1ABCD    #DCPTX    #1J9ST    #DHDTX    #DTZST
#DI1TX    #DAUVN    #DAVVN
** @CN
00001 Procurement Performance
