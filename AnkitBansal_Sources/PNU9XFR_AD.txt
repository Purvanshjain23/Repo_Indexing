// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNU9XFR
// ?Date: 14.08.2025 Time: 03:46:39
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?UPD:  Inventory Status and Order Number in Product Trace
EXECUTE FUNCTION(Rtv Productin Whs     RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1498428;
PARAMETER(PAR.PFS_From_Warehouse_Code);
PARAMETER(PAR.PT_Warehouse_ID_Code);
PARAMETER(LCL.Accounting_Company);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// PAR.Company Number = LCL.Accounting Company
PAR.Company_Number = LCL.Accounting_Company;

// PAR.Item Code = PAR.PFS Item Code
PAR.Item_Code = PAR.PFS_Item_Code;

EXECUTE FUNCTION(CVT *YYMD to *CYMD    IF) TYPE(EXCINTFUN)                      AC1929228;
PARAMETER(LCL.Label_Date);
PARAMETER(PAR.PFS_Label_Date);
{
 //?Execute internal function

 //?** YEAR **
 // PAR.Year Code = PAR.DATE / CON.10000 *
 PAR.Year_Code = PAR.DATE / 10000;

 // PAR.Year  NBR USR = PAR.Year Code
 PAR.Year_NBR_USR = PAR.Year_Code;

 // PAR.Year  (Char) USR = CVTVAR(PAR.Year  NBR USR)
 PAR.Year_Char_USR = CVTVAR(PAR.Year_NBR_USR);

 //?** MONTH **
 // PAR.Month                 USR = PAR.DATE / CON.100 *
 PAR.Month_USR = PAR.DATE / 100;

 // PAR.Month (Char) USR = CVTVAR(PAR.Month                 USR)
 PAR.Month_Char_USR = CVTVAR(PAR.Month_USR);

 //?** DAY **
 // PAR.Day of Month USR = PAR.DATE
 PAR.Day_of_Month_USR = PAR.DATE;

 // PAR.Day   (Char) USR = CVTVAR(PAR.Day of Month USR)
 PAR.Day_Char_USR = CVTVAR(PAR.Day_of_Month_USR);

 //?CENTURY+YEAR
 CASE;

 // IF PAR.Year Code is Twentieth Century
 IF PAR.Year_Code <= 1999;

 // PAR.Date (Alpha) USR = CONCAT(CON.0,PAR.Year  (Char) USR,CON.*ZERO)
 PAR.Date_Alpha_USR = '0' + PAR.Year_Char_USR (*ZERO);

 //?CENTURY+YEAR
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Date (Alpha) USR = CONCAT(CON.1,PAR.Year  (Char) USR,CON.*ZERO)
 PAR.Date_Alpha_USR = '1' + PAR.Year_Char_USR (*ZERO);

 ENDIF;

 // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Month (Char) USR,CON.*ZERO)
 PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Month_Char_USR (*ZERO);

 // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Day   (Char) USR,CON.*ZERO)
 PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Day_Char_USR (*ZERO);

 // PAR.Date                  USR = CVTVAR(PAR.Date (Alpha) USR)
 PAR.Date_USR = CVTVAR(PAR.Date_Alpha_USR);

}


// PAR.PT Label Date YYYYMMDD = PAR.PFS Label Date
PAR.PT_Label_Date_YYYYMMDD = PAR.PFS_Label_Date;

// PAR.PT Order Number = PAR.PFS Order Number
PAR.PT_Order_Number = PAR.PFS_Order_Number;

// PAR.PT Serial Number = PAR.PFS Serial Number
PAR.PT_Serial_Number = PAR.PFS_Serial_Number;

EXECUTE FUNCTION(Val Prod Trc P01 rcd  RT) TYPE(RTVOBJ) FILE(POB2CPP)           AC1778930;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.PT_Serial_Number);
PARAMETER(PAR.PFS_Label_Date);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


CASE;

// IF PGM.*Return code is *Record already exists
IF PGM.*Return_code = 'Y2U0003';

CASE;

// IF PAR.PFS Order Number is Entered
IF PAR.PFS_Order_Number <> *ZERO;

//?slm 01/10/2014 Mtech Product Trace Order number
//?slm 01/10/2014 Mtech Product Trace Inventory Status
EXECUTE FUNCTION(PFS Upd Ord/Inv Sts   RT) TYPE(RTVOBJ) FILE(POB2CPP)           AC1735848;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.PT_Serial_Number);
PARAMETER(PAR.PT_Label_Date_YYYYMMDD);
PARAMETER(3);
PARAMETER(PAR.PT_Order_Number);
{
 //?USER: Process Data record

 //?slm 01/10/2014 MTech Review Product Trace
 //?slm 01/10/2014 MTech Inventory Status, Order Number
 EXECUTE FUNCTION(Chg Order Number      CH) TYPE(CHGOBJ) FILE(POB2CPP)           AC1682100;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.PT_Serial_Number);
 PARAMETER(DB1.PT_Prod_Date_YYYYMMDD);
 PARAMETER(DB1.PT_Production_Time);
 PARAMETER(PAR.PT_Inventory_Status);
 PARAMETER(PAR.PT_Order_Number);
}


ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

//?UPD:  Product Trace ** Create with order # if not found 12/15/06 RMC
CASE;

// IF PAR.Item Code is Scale Check Item 2222
IF PAR.Item_Code = 2222;

//?UPD:  Product Trace ** Create with order # if not found 12/15/06 RMC
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.PT Serial Number = PAR.PFS Serial Number
PAR.PT_Serial_Number = PAR.PFS_Serial_Number;

// PAR.PT Prod Date YYYYMMDD = PAR.PFS Production Date
PAR.PT_Prod_Date_YYYYMMDD = PAR.PFS_Production_Date;

// PAR.PT Production Time = PAR.PFS Transaction Time
PAR.PT_Production_Time = PAR.PFS_Transaction_Time;

// PAR.PT Label Date YYYYMMDD = PAR.PFS Label Date
PAR.PT_Label_Date_YYYYMMDD = PAR.PFS_Label_Date;

// PAR.PT Inventory Status = CND.Manifested
PAR.PT_Inventory_Status = 3;

// PAR.PT Net Weight = PAR.PFS Transaction Wgt-Net
PAR.PT_Net_Weight = PAR.PFS_Transaction_Wgt_Net;

// PAR.PT Gross Weight = PAR.PFS Transaction Wgt-Gross
PAR.PT_Gross_Weight = PAR.PFS_Transaction_Wgt_Gross;

// PAR.PT Shift Number = PAR.PFS Shift
PAR.PT_Shift_Number = PAR.PFS_Shift;

// PAR.PT Pallet Number = PAR.PFS Pallet Number
PAR.PT_Pallet_Number = PAR.PFS_Pallet_Number;

// PAR.PT Product Code = PAR.Item Code
PAR.PT_Product_Code = PAR.Item_Code;

//?--- Offset Production Date & Time ---
// LCL.Text 10A USR = CVTVAR(PAR.PFS Serial Number)
LCL.Text_10A_USR = CVTVAR(PAR.PFS_Serial_Number);

// LCL.Scale ID = SUBSTRING(LCL.Text 10A USR,CON.3,CON.2)
LCL.Scale_ID = SUBSTRING(LCL.Text_10A_USR:3:2);

EXECUTE FUNCTION(Rtv Line/ID/Ofst p/Dt RT) TYPE(RTVOBJ) FILE(PPAAREP)           AC1678379;
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Scale_ID);
PARAMETER(LCL.Label_Date);
PARAMETER(LCL.CS_Scale_Offset_Minutes);
PARAMETER(PAR.PT_Incl_in_Prod_Trc_Match);
{
 //?USER: Processing if Data record not found

 // PAR.CS Scale Offset Minutes = CON.*ZERO
 PAR.CS_Scale_Offset_Minutes = *ZERO;

 // PAR.CS Exclude from ProdTrace = CND.no
 PAR.CS_Include_in_PrdTr_Match = 'N';

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Prod Trace Offset RT) TYPE(RTVOBJ) FILE(PPABREP)           AC1678376;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Line_Code);
 PARAMETER(PAR.CS_Scale_Offset_Minutes);
 PARAMETER(PAR.CS_Include_in_PrdTr_Match);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 QUIT;

}


//?RMC 3/15/06 use par.pt prod date yyyymmdd instead of lcl.pt prod date
// PAR.PT Offset Prod Date = PAR.PT Prod Date YYYYMMDD
PAR.PT_Offset_Prod_Date = PAR.PT_Prod_Date_YYYYMMDD;

// LCL.CS Scale Offset Minutes = LCL.CS Scale Offset Minutes * CON.-1 *
LCL.CS_Scale_Offset_Minutes = LCL.CS_Scale_Offset_Minutes * -1;

// PAR.PT Offset Prod Time = PAR.PT Production Time + LCL.CS Scale Offset Minutes *MINUTES
PAR.PT_Offset_Prod_Time = TIMEINCR(PAR.PT_Production_Time LCL.CS_Scale_Offset_Minutes              +
'MN');

CASE;

// IF PAR.PT Offset Prod Time GT PAR.PT Production Time
IF PAR.PT_Offset_Prod_Time > PAR.PT_Production_Time;

// PAR.PT Offset Prod Date = PAR.PT Offset Prod Date + CON.-1 *DAYS
PAR.PT_Offset_Prod_Date = DATEINCR(PAR.PT_Offset_Prod_Date '-1' 'DY' 1111110 'NONE' 'N'            +
1);

ENDIF;

//?--- Item Picture Key ---
EXECUTE FUNCTION(RTV Item Labels        RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1646323;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(WRK.Description_Line_One);
PARAMETER(PAR.PT_Item_Label_Line_1);
PARAMETER(PAR.PT_Item_Label_Line_2);
PARAMETER(PAR.PT_Item_Str_Class_Code);
PARAMETER(PAR.PT_Item_Str_Group_Code);
PARAMETER(PAR.PT_Item_Str_Type_Code);
PARAMETER(PAR.PT_Item_Type_Code);
PARAMETER(PAR.Made_to_Order_Code);
PARAMETER(PAR.Item_Category_Code_3);
PARAMETER(PAR.Primal_Group_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Item Picture Key
CASE;

// IF PAR.Item Category Code 3 is Loint
IF PAR.Item_Category_Code_3 = 'L61';

// PAR.PT Item Picture Key = CON.LOINT
PAR.PT_Item_Picture_Key = 'LOINT';

//?Item Picture Key
// IF *OTHERWISE
IF *OTHERWISE;

//?Item Picture Key
CASE;

// IF PAR.MTO Code is Entered
IF PAR.Made_to_Order_Code > *BLANK;

//?PFN
CASE;

// IF PAR.MTO Code is PFN
IF PAR.Made_to_Order_Code = 'PFN';

// OR PAR.MTO Code is IWG
OR PAR.Made_to_Order_Code = 'IWG';

// PAR.PT Item Picture Key = CON.PFN
PAR.PT_Item_Picture_Key = 'PFN';

ENDIF;

//?PFT
CASE;

// IF PAR.MTO Code is EHP
IF PAR.Made_to_Order_Code = 'EHP';

// OR PAR.MTO Code is KRG
OR PAR.Made_to_Order_Code = 'KRG';

// PAR.PT Item Picture Key = CON.PFT
PAR.PT_Item_Picture_Key = 'PFT';

ENDIF;

//?Item Picture Key
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF PAR.Primal Group Code is BUTT
IF PAR.Primal_Group_Code = 'BUTT';

// OR PAR.Primal Group Code is HAM
OR PAR.Primal_Group_Code = 'HAM';

// OR PAR.Primal Group Code is LOIN
OR PAR.Primal_Group_Code = 'LOIN';

// OR PAR.Primal Group Code is PICNIC
OR PAR.Primal_Group_Code = 'PICNIC';

// OR PAR.Primal Group Code is RIBS
OR PAR.Primal_Group_Code = 'RIBS';

// PAR.PT Item Picture Key = PAR.Primal Group Code
PAR.PT_Item_Picture_Key = PAR.Primal_Group_Code;

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF PAR.Primal Group Code is HAMC
IF PAR.Primal_Group_Code = 'HAMC';

// PAR.PT Item Picture Key = CON.HAM
PAR.PT_Item_Picture_Key = 'HAM';

// IF PAR.Primal Group Code is LOINC
IF PAR.Primal_Group_Code = 'LOINC';

// PAR.PT Item Picture Key = CON.LOIN
PAR.PT_Item_Picture_Key = 'LOIN';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.PT Item Picture Key = CON.LOGO
PAR.PT_Item_Picture_Key = 'LOGO';

ENDIF;

ENDIF;

ENDIF;

ENDIF;

EXECUTE FUNCTION(RTV Warehouse Type     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1285482;
PARAMETER(PAR.PFS_From_Warehouse_Code);
PARAMETER(PAR.PT_Fresh_Frozen_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?--- Create Product Trace Record ---
EXECUTE FUNCTION(Crt Product Trace     CR) TYPE(CRTOBJ) FILE(POB2CPP)           AC1646314;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.PT_Serial_Number);
PARAMETER(PAR.PT_Prod_Date_YYYYMMDD);
PARAMETER(PAR.PT_Production_Time);
PARAMETER(PAR.PT_Label_Date_YYYYMMDD);
PARAMETER(PAR.PT_Offset_Prod_Date);
PARAMETER(PAR.PT_Offset_Prod_Time);
PARAMETER(PAR.PT_Inventory_Status);
PARAMETER(PAR.PT_Net_Weight);
PARAMETER(PAR.PT_Gross_Weight);
PARAMETER(PAR.PT_Shift_Number);
PARAMETER(PAR.PT_Warehouse_ID_Code);
PARAMETER(PAR.PT_Order_Number);
PARAMETER(PAR.PT_Pallet_Number);
PARAMETER(PAR.PT_Product_Code);
PARAMETER(PAR.PT_Item_Label_Line_1);
PARAMETER(PAR.PT_Item_Label_Line_2);
PARAMETER(PAR.PT_Fresh_Frozen_Code);
PARAMETER(PAR.PT_Item_Picture_Key);
PARAMETER(*ZERO);
PARAMETER(WRK.Blank_for_4_USR);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(WRK.Blank_for_4_USR);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(WRK.Blank_for_4_USR);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(PAR.PT_Item_Type_Code);
PARAMETER(PAR.PT_Item_Str_Class_Code);
PARAMETER(PAR.PT_Item_Str_Group_Code);
PARAMETER(PAR.PT_Item_Str_Type_Code);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(WRK.Blank_6_USR);
PARAMETER(WRK.Blank_for_4_USR);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(PAR.PT_Incl_in_Prod_Trc_Match);
PARAMETER(WRK.Blank_for_4_USR);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


ENDIF;

ENDIF;

