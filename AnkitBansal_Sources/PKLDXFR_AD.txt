// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKLDXFR
// ?Date: 14.08.2025 Time: 02:49:51
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Set Start and End of Year dates.
DO;

//?Set Century
CASE;

// IF PAR.Year 2 USR is LE 39
IF PAR.Year_2_USR <= '39';

// WRK.Century USR = CON.1
WRK.Century_USR = 1;

//?Set Century
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Century USR = CON.0
WRK.Century_USR = 0;

ENDIF;

//?Year Start Date
// WRK.Cen + Yr USR = CONCAT(WRK.Century USR,PAR.Year 2 USR,CON.*ZERO)
WRK.Cen_+_Yr_USR = WRK.Century_USR + PAR.Year_2_USR (*ZERO);

// WRK.Cen + Yr + Mo USR = CONCAT(WRK.Cen + Yr USR,CON.01,CON.*ZERO)
WRK.Cen_+_Yr_+_Mo_USR = WRK.Cen_+_Yr_USR + '01' (*ZERO);

// WRK.Cen + Yr + Mo + Dy USR = CONCAT(WRK.Cen + Yr + Mo USR,CON.01,CON.*ZERO)
WRK.Cen_+_Yr_+_Mo_+_Dy_USR = WRK.Cen_+_Yr_+_Mo_USR + '01' (*ZERO);

// PAR.Date From USR = CVTVAR(WRK.Cen + Yr + Mo + Dy USR)
PAR.Date_From_USR = CVTVAR(WRK.Cen_+_Yr_+_Mo_+_Dy_USR);

//?Year End Date
// WRK.Cen + Yr + Mo USR = CONCAT(WRK.Cen + Yr USR,CON.12,CON.*ZERO)
WRK.Cen_+_Yr_+_Mo_USR = WRK.Cen_+_Yr_USR + '12' (*ZERO);

// WRK.Cen + Yr + Mo + Dy USR = CONCAT(WRK.Cen + Yr + Mo USR,CON.31,CON.*ZERO)
WRK.Cen_+_Yr_+_Mo_+_Dy_USR = WRK.Cen_+_Yr_+_Mo_USR + '31' (*ZERO);

// PAR.Date To   USR = CVTVAR(WRK.Cen + Yr + Mo + Dy USR)
PAR.Date_To_USR = CVTVAR(WRK.Cen_+_Yr_+_Mo_+_Dy_USR);

ENDDO;

// WRK.Year USR = PAR.Date From USR *YEAR
WRK.Year_USR = DATEDTLS(PAR.Date_From_USR 'YR' 1111111 'NONE' 'N' 1);

// WRK.Week Number USR = CON.1
WRK.Week_Number_USR = 1;

// WRK.Date USR = PAR.Date From USR
WRK.Date_USR = PAR.Date_From_USR;

//?Build Calendar Week
// DOW WRK.Date USR LE PAR.Date To   USR
DOW WRK.Date_USR <= PAR.Date_To_USR;

// WRK.Day of Week USR = WRK.Date USR *DAY OF WEEK
WRK.Day_of_Week_USR = DATEDTLS(WRK.Date_USR 'DW' 1111111 'NONE' 'N' 1);

EXECUTE FUNCTION(Crt/Upd Week Dates    RT) TYPE(RTVOBJ) FILE(PKCFREP)           AB1125090;
PARAMETER(WRK.Year_USR);
PARAMETER(WRK.Week_Number_USR);
PARAMETER(WRK.Date_USR);
PARAMETER(WRK.Day_of_Week_USR);
PARAMETER(PAR.Company_Number_USR);
{
 //?USER: Processing if Data record not found

 //?Create Calendar Week
 CASE;

 // IF PAR.Day of Week USR is Mon
 IF PAR.Day_of_Week_USR = 1;

 EXECUTE FUNCTION(Crt Calendar Week     CR) TYPE(CRTOBJ) FILE(PKCFREP)           AB1106486;
 PARAMETER(PAR.CW_Year);
 PARAMETER(PAR.CW_Week_Number);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 //?Create Calendar Week
 // IF PAR.Day of Week USR is Tue
 IF PAR.Day_of_Week_USR = 2;

 EXECUTE FUNCTION(Crt Calendar Week     CR) TYPE(CRTOBJ) FILE(PKCFREP)           AB1106486;
 PARAMETER(PAR.CW_Year);
 PARAMETER(PAR.CW_Week_Number);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 //?Create Calendar Week
 // IF PAR.Day of Week USR is Wed
 IF PAR.Day_of_Week_USR = 3;

 EXECUTE FUNCTION(Crt Calendar Week     CR) TYPE(CRTOBJ) FILE(PKCFREP)           AB1106486;
 PARAMETER(PAR.CW_Year);
 PARAMETER(PAR.CW_Week_Number);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 //?Create Calendar Week
 // IF PAR.Day of Week USR is Thu
 IF PAR.Day_of_Week_USR = 4;

 EXECUTE FUNCTION(Crt Calendar Week     CR) TYPE(CRTOBJ) FILE(PKCFREP)           AB1106486;
 PARAMETER(PAR.CW_Year);
 PARAMETER(PAR.CW_Week_Number);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 //?Create Calendar Week
 // IF PAR.Day of Week USR is Fri
 IF PAR.Day_of_Week_USR = 5;

 EXECUTE FUNCTION(Crt Calendar Week     CR) TYPE(CRTOBJ) FILE(PKCFREP)           AB1106486;
 PARAMETER(PAR.CW_Year);
 PARAMETER(PAR.CW_Week_Number);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 //?Create Calendar Week
 // IF PAR.Day of Week USR is Sat
 IF PAR.Day_of_Week_USR = 6;

 EXECUTE FUNCTION(Crt Calendar Week     CR) TYPE(CRTOBJ) FILE(PKCFREP)           AB1106486;
 PARAMETER(PAR.CW_Year);
 PARAMETER(PAR.CW_Week_Number);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 //?Create Calendar Week
 // IF PAR.Day of Week USR is Sun
 IF PAR.Day_of_Week_USR = 7;

 EXECUTE FUNCTION(Crt Calendar Week     CR) TYPE(CRTOBJ) FILE(PKCFREP)           AB1106486;
 PARAMETER(PAR.CW_Year);
 PARAMETER(PAR.CW_Week_Number);
 PARAMETER(PAR.Date_USR);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

 //?USER: Process Data record

 //?Update Calendar Week
 CASE;

 // IF PAR.Day of Week USR is Mon
 IF PAR.Day_of_Week_USR = 1;

 EXECUTE FUNCTION(Chg Calendar Week     CH) TYPE(CHGOBJ) FILE(PKCFREP)           AB1106487;
 PARAMETER(DB1.CW_Year);
 PARAMETER(DB1.CW_Week_Number);
 PARAMETER(PAR.Date_USR);
 PARAMETER(PAR.Date_USR);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.CW_Tue_Date);
 PARAMETER(DB1.CW_Wed_Date);
 PARAMETER(DB1.CW_Thu_Date);
 PARAMETER(DB1.CW_Fri_Date);
 PARAMETER(DB1.CW_Sat_Date);
 PARAMETER(DB1.CW_Sun_Date);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?Update Calendar Week
 // IF PAR.Day of Week USR is Tue
 IF PAR.Day_of_Week_USR = 2;

 EXECUTE FUNCTION(Chg Calendar Week     CH) TYPE(CHGOBJ) FILE(PKCFREP)           AB1106487;
 PARAMETER(DB1.CW_Year);
 PARAMETER(DB1.CW_Week_Number);
 PARAMETER(DB1.CW_Week_Start_Date);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.CW_Mon_Date);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.CW_Wed_Date);
 PARAMETER(DB1.CW_Thu_Date);
 PARAMETER(DB1.CW_Fri_Date);
 PARAMETER(DB1.CW_Sat_Date);
 PARAMETER(DB1.CW_Sun_Date);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?Update Calendar Week
 // IF PAR.Day of Week USR is Wed
 IF PAR.Day_of_Week_USR = 3;

 EXECUTE FUNCTION(Chg Calendar Week     CH) TYPE(CHGOBJ) FILE(PKCFREP)           AB1106487;
 PARAMETER(DB1.CW_Year);
 PARAMETER(DB1.CW_Week_Number);
 PARAMETER(DB1.CW_Week_Start_Date);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.CW_Mon_Date);
 PARAMETER(DB1.CW_Tue_Date);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.CW_Thu_Date);
 PARAMETER(DB1.CW_Fri_Date);
 PARAMETER(DB1.CW_Sat_Date);
 PARAMETER(DB1.CW_Sun_Date);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?Update Calendar Week
 // IF PAR.Day of Week USR is Thu
 IF PAR.Day_of_Week_USR = 4;

 EXECUTE FUNCTION(Chg Calendar Week     CH) TYPE(CHGOBJ) FILE(PKCFREP)           AB1106487;
 PARAMETER(DB1.CW_Year);
 PARAMETER(DB1.CW_Week_Number);
 PARAMETER(DB1.CW_Week_Start_Date);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.CW_Mon_Date);
 PARAMETER(DB1.CW_Tue_Date);
 PARAMETER(DB1.CW_Wed_Date);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.CW_Fri_Date);
 PARAMETER(DB1.CW_Sat_Date);
 PARAMETER(DB1.CW_Sun_Date);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?Update Calendar Week
 // IF PAR.Day of Week USR is Fri
 IF PAR.Day_of_Week_USR = 5;

 EXECUTE FUNCTION(Chg Calendar Week     CH) TYPE(CHGOBJ) FILE(PKCFREP)           AB1106487;
 PARAMETER(DB1.CW_Year);
 PARAMETER(DB1.CW_Week_Number);
 PARAMETER(DB1.CW_Week_Start_Date);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.CW_Mon_Date);
 PARAMETER(DB1.CW_Tue_Date);
 PARAMETER(DB1.CW_Wed_Date);
 PARAMETER(DB1.CW_Thu_Date);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.CW_Sat_Date);
 PARAMETER(DB1.CW_Sun_Date);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?Update Calendar Week
 // IF PAR.Day of Week USR is Sat
 IF PAR.Day_of_Week_USR = 6;

 EXECUTE FUNCTION(Chg Calendar Week     CH) TYPE(CHGOBJ) FILE(PKCFREP)           AB1106487;
 PARAMETER(DB1.CW_Year);
 PARAMETER(DB1.CW_Week_Number);
 PARAMETER(DB1.CW_Week_Start_Date);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.CW_Mon_Date);
 PARAMETER(DB1.CW_Tue_Date);
 PARAMETER(DB1.CW_Wed_Date);
 PARAMETER(DB1.CW_Thu_Date);
 PARAMETER(DB1.CW_Fri_Date);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.CW_Sun_Date);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?Update Calendar Week
 // IF PAR.Day of Week USR is Sun
 IF PAR.Day_of_Week_USR = 7;

 EXECUTE FUNCTION(Chg Calendar Week     CH) TYPE(CHGOBJ) FILE(PKCFREP)           AB1106487;
 PARAMETER(DB1.CW_Year);
 PARAMETER(DB1.CW_Week_Number);
 PARAMETER(DB1.CW_Week_Start_Date);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.CW_Mon_Date);
 PARAMETER(DB1.CW_Tue_Date);
 PARAMETER(DB1.CW_Wed_Date);
 PARAMETER(DB1.CW_Thu_Date);
 PARAMETER(DB1.CW_Fri_Date);
 PARAMETER(DB1.CW_Sat_Date);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

}


CASE;

// IF WRK.Day of Week USR is Sun
IF WRK.Day_of_Week_USR = 7;

// WRK.Week Number USR = WRK.Week Number USR + CON.1
WRK.Week_Number_USR = WRK.Week_Number_USR + 1;

ENDIF;

// WRK.Date USR = WRK.Date USR + CON.1 *DAYS
WRK.Date_USR = DATEINCR(WRK.Date_USR 1 'DY' 1111111 'NONE' 'N' 1);

ENDDO;

EXECUTE FUNCTION(Bld Purch Plan Wk Sum RT) TYPE(RTVOBJ) FILE(PKCFREP)           AB1127306;
PARAMETER(WRK.Year_USR);
PARAMETER(PAR.Company_Number_USR);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Crt/Upd Purch Plan    RT) TYPE(RTVOBJ) FILE(PKAUCPP)           AB1127299;
 PARAMETER(PAR.Company_Number_USR);
 PARAMETER(DB1.CW_Year);
 PARAMETER(DB1.CW_Week_Number);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Purchase Plan Wk  CR) TYPE(CRTOBJ) FILE(PKAUCPP)           AB1100447;
  PARAMETER(PAR.PPWS_Company_Number);
  PARAMETER(PAR.CW_Year);
  PARAMETER(PAR.CW_Week_Number);
  PARAMETER(WRK.PPWS_Head_Est);
  PARAMETER(WRK.PPWS_Plan_Head);
  PARAMETER(WRK.PPWS_Sts);
  PARAMETER(WRK.RS_User_Changed);
  PARAMETER(WRK.RS_Date_Changed);
  PARAMETER(WRK.RS_Time_Changed);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(WRK.RS_Job);
  PARAMETER(WRK.RS_Program);
  PARAMETER(WRK.RS_User_Added);
  PARAMETER(WRK.RS_Date_Added);
  PARAMETER(WRK.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

 }

}


