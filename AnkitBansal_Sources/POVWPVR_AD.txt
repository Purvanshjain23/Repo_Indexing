// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POVWPVR
// ?Date: 14.08.2025 Time: 03:39:14
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('YR');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


EXECUTE FUNCTION(Set Access            IF) TYPE(EXCINTFUN)                      AC1667888;
PARAMETER(PAR.User_Department);
PARAMETER(PAR.User_Access);
PARAMETER(PAR.Output_Production_USR);
PARAMETER(PAR.Output_Begin_Inv_USR);
PARAMETER(PAR.Output_Not_Used_USR);
PARAMETER(PAR.Output_Partial_Prod_USR);
PARAMETER(PAR.Output_Head_Cut_Wgt_USR);
PARAMETER(PAR.Output_Conv_Start_Wgt);
PARAMETER(PAR.Output_Comment_USR);
PARAMETER(PAR.Add_Partial_USR);
PARAMETER(PAR.Calculate_Yield_USR);
PARAMETER(PAR.Publish_Yield_USR);
{
 //?Execute internal function

 //?** Accounting has all access **
 // PAR.Output Production USR = CND.no
 PAR.Output_Production_USR = 'N';

 // PAR.Output Begin Inv USR = CND.no
 PAR.Output_Begin_Inv_USR = 'N';

 // PAR.Output Not Used USR = CND.no
 PAR.Output_Not_Used_USR = 'N';

 // PAR.Output Partial Prod USR = CND.no
 PAR.Output_Partial_Prod_USR = 'N';

 // PAR.Output Head Cut/Wgt USR = CND.no
 PAR.Output_Head_Cut_Wgt_USR = 'N';

 // PAR.Output Conv Start Wgt = CND.no
 PAR.Output_Conv_Start_Wgt = 'N';

 // PAR.Output Comment USR = CND.no
 PAR.Output_Comment_USR = 'N';

 // PAR.Add Partial USR = CND.yes
 PAR.Add_Partial_USR = 'Y';

 // PAR.Calculate Yield USR = CND.yes
 PAR.Calculate_Yield_USR = 'Y';

 // PAR.Publish Yield USR = CND.yes
 PAR.Publish_Yield_USR = 'Y';

 CASE;

 // IF PAR.User Department is Production
 IF PAR.User_Department = 'PR';

 // PAR.Output Production USR = CND.yes
 PAR.Output_Production_USR = 'Y';

 // PAR.Output Begin Inv USR = CND.yes
 PAR.Output_Begin_Inv_USR = 'Y';

 // PAR.Output Partial Prod USR = CND.yes
 PAR.Output_Partial_Prod_USR = 'Y';

 // PAR.Output Conv Start Wgt = CND.yes
 PAR.Output_Conv_Start_Wgt = 'Y';

 //?* Cannot enter Head Cut/Cold Weight *
 // PAR.Output Head Cut/Wgt USR = CND.yes
 PAR.Output_Head_Cut_Wgt_USR = 'Y';

 // IF PAR.User Department is Main Break
 IF PAR.User_Department = 'MB';

 // PAR.Output Production USR = CND.yes
 PAR.Output_Production_USR = 'Y';

 // PAR.Output Begin Inv USR = CND.yes
 PAR.Output_Begin_Inv_USR = 'Y';

 // PAR.Output Partial Prod USR = CND.yes
 PAR.Output_Partial_Prod_USR = 'Y';

 // PAR.Output Conv Start Wgt = CND.yes
 PAR.Output_Conv_Start_Wgt = 'Y';

 // IF PAR.User Department is Converting
 IF PAR.User_Department = 'CV';

 // PAR.Output Production USR = CND.yes
 PAR.Output_Production_USR = 'Y';

 // PAR.Output Begin Inv USR = CND.yes
 PAR.Output_Begin_Inv_USR = 'Y';

 // PAR.Output Not Used USR = CND.yes
 PAR.Output_Not_Used_USR = 'Y';

 // PAR.Output Partial Prod USR = CND.yes
 PAR.Output_Partial_Prod_USR = 'Y';

 // PAR.Output Head Cut/Wgt USR = CND.yes
 PAR.Output_Head_Cut_Wgt_USR = 'Y';

 // PAR.Output Comment USR = CND.yes
 PAR.Output_Comment_USR = 'Y';

 // PAR.Add Partial USR = CND.no
 PAR.Add_Partial_USR = 'N';

 // PAR.Calculate Yield USR = CND.no
 PAR.Calculate_Yield_USR = 'N';

 // PAR.Publish Yield USR = CND.no
 PAR.Publish_Yield_USR = 'N';

 // IF PAR.User Department is Product Manager
 IF PAR.User_Department = 'PM';

 // PAR.Output Production USR = CND.yes
 PAR.Output_Production_USR = 'Y';

 // PAR.Output Begin Inv USR = CND.yes
 PAR.Output_Begin_Inv_USR = 'Y';

 // PAR.Output Not Used USR = CND.yes
 PAR.Output_Not_Used_USR = 'Y';

 // PAR.Output Partial Prod USR = CND.yes
 PAR.Output_Partial_Prod_USR = 'Y';

 // PAR.Output Head Cut/Wgt USR = CND.yes
 PAR.Output_Head_Cut_Wgt_USR = 'Y';

 // PAR.Output Conv Start Wgt = CND.yes
 PAR.Output_Conv_Start_Wgt = 'Y';

 // PAR.Output Comment USR = CND.yes
 PAR.Output_Comment_USR = 'Y';

 // PAR.Add Partial USR = CND.no
 PAR.Add_Partial_USR = 'N';

 // PAR.Calculate Yield USR = CND.no
 PAR.Calculate_Yield_USR = 'N';

 // PAR.Publish Yield USR = CND.no
 PAR.Publish_Yield_USR = 'N';

 ENDIF;

}


//?USER: Load screen

MOVE *ALL (To: DTL From: PAR);

EXECUTE FUNCTION(Rtv Head Cut/Cold Wgt RT) TYPE(RTVOBJ) FILE(POCRCPP)           AC1665520;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Department_Code);
PARAMETER(DTL.Production_Date);
PARAMETER(DTL.Production_Shift);
PARAMETER(DTL.Head_Cut);
PARAMETER(DTL.Cold_Weight);
PARAMETER(DTL.Avg_Cold_Weight);
PARAMETER(DTL.Start_Weight);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// LCL.Head Cut = DTL.Head Cut
LCL.Head_Cut = DTL.Head_Cut;

// LCL.Cold Weight = DTL.Cold Weight
LCL.Cold_Weight = DTL.Cold_Weight;

// LCL.Avg Cold Weight = DTL.Avg Cold Weight
LCL.Avg_Cold_Weight = DTL.Avg_Cold_Weight;

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(DTL.Company_Name_DRV);
PARAMETER(DTL.Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


EXECUTE FUNCTION(Department Desc DRV) TYPE(DRVFLD)                              AC1666904;
PARAMETER(DTL.Department_Desc_DRV);
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Department_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Prod Dept Name    RT) TYPE(RTVOBJ) FILE(PDI5REP)           AC1286709;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.Department_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Validate fields

CASE;

// IF DTL.Head Cut is GT Zero
IF DTL.Head_Cut > *ZERO;

// AND DTL.Avg Cold Weight is GT Zero
AND DTL.Avg_Cold_Weight > *ZERO;

// DTL.Cold Weight = DTL.Avg Cold Weight * DTL.Head Cut *Rounded
DTL.Cold_Weight = DTL.Avg_Cold_Weight * DTL.Head_Cut 'H';

ENDIF;

//?USER: User defined action

CASE;

// IF DTL.*CMD key is SUBMIT/NEXT
IF DTL.*CMD_key = '08';

CASE;

// IF PAR.Output Head Cut/Wgt USR is no
IF PAR.Output_Head_Cut_Wgt_USR = 'N';

CASE;

// IF LCL.Head Cut NE DTL.Head Cut
IF LCL.Head_Cut <> DTL.Head_Cut;

// OR LCL.Cold Weight NE DTL.Cold Weight
OR LCL.Cold_Weight <> DTL.Cold_Weight;

// OR LCL.Avg Cold Weight NE DTL.Avg Cold Weight
OR LCL.Avg_Cold_Weight <> DTL.Avg_Cold_Weight;

EXECUTE FUNCTION(Chg Head Cut/Cold Wgt CH) TYPE(CHGOBJ) FILE(POCRCPP)           AC1665524;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Department_Code);
PARAMETER(DTL.Production_Date);
PARAMETER(DTL.Production_Shift);
PARAMETER(DTL.Head_Cut);
PARAMETER(DTL.Cold_Weight);
PARAMETER(DTL.Avg_Cold_Weight);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


ENDIF;

// PAR.Yld Program USR = CND.Exit
PAR.Yld_Program_USR = 'EX';

RETURN;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Function not allowed.'
ERROR(USR1833);

ENDIF;

ENDIF;

//?USER: Exit program processing

CASE;

// IF DTL.*CMD key is *Exit
IF DTL.*CMD_key = '03';

// PAR.Yld Program USR = CND.Exit
PAR.Yld_Program_USR = 'EX';

RETURN;

ENDIF;

