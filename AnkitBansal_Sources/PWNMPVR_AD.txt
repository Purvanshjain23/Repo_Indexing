// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWNMPVR
// ?Date: 14.08.2025 Time: 02:57:07
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//? 6/14/2021 JBB SDD619 - Repayment by Business User
//?               P18058   Function created.  User cancel of a
//?                        repayment.  User must enter a reason.
ENDDO;

EXECUTE FUNCTION(Chk Status for Cancel RT) TYPE(RTVOBJ) FILE(PWAXCPP)           AB1368483;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.TRH_Repayment_ID);
PARAMETER(LCL.Continue_Process_USR);
{
 //?USER: Initialize routine

 //?Initialize Continue Flag = Yes
 // PAR.Continue Process USR = CND.Yes
 PAR.Continue_Process_USR = 'Y';

 //?USER: Process Data record

 //?If status is Edited, In Progress, or Repaid: Do not allow Unpay
 CASE;

 // IF DB1.TRD Repayment Status is Unpaid/Edited/Repaid
 IF DB1.TRD_Repayment_Status = 'E'/'R'/'U';

 // PAR.Continue Process USR = CND.No
 PAR.Continue_Process_USR = 'N';

 QUIT;

 ENDIF;

}


//?Exit program if TR Detail is Edited, Unpayed, or Repaid
CASE;

// IF LCL.Continue Process USR is No
IF LCL.Continue_Process_USR = 'N';

// Send error message - 'Cannot cancel a Repayment if detail is Unpaid, Edited, or Repaid.'
ERROR(PRK1595);
MSGPARM(LCL.*SFLSEL);

RETURN;

ENDIF;

//?USER: Load screen

MOVE *ALL (To: DTL From: PAR);

CASE;

// IF PAR.TRH Repayment Status is Created
IF PAR.TRH_Repayment_Status = 'C';

// DTL.Text 12 USR = CON.Created
DTL.Text_12_USR = 'Created';

// IF PAR.TRH Repayment Status is In Progress
IF PAR.TRH_Repayment_Status = 'I';

// DTL.Text 12 USR = CON.In progress
DTL.Text_12_USR = 'In progress';

ENDIF;

//?USER: User defined action

EXECUTE FUNCTION(Chg Tattoo Repay Hdr  CH) TYPE(CHGOBJ) FILE(PWAWCPP)           AB1364805;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.TRH_Repayment_ID);
PARAMETER('X');
PARAMETER(DTL.TRH_Date_Start);
PARAMETER(DTL.TRH_Time_Start);
PARAMETER(DTL.TRH_Date_Complete);
PARAMETER(DTL.TRH_Time_Complete);
PARAMETER(DTL.TRH_Payment_Date);
PARAMETER(DTL.TRH_Payment_Step);
PARAMETER(DTL.TRH_Backup_File_Prefix);
PARAMETER(DTL.RS_Record_Status);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.TRH_Repayment_ID);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER('Repayment cancelled');
PARAMETER('S');
{
 //?USER: Processing before Data update

 //?Make sure BOH Company Number is populated
 CASE;

 // IF PAR.BOH Company Number is *ZERO
 IF PAR.BOH_Company_Number = *ZERO;

 // DB1.BOH Company Number = PAR.CC Company Number
 DB1.BOH_Company_Number = PAR.CC_Company_Number;

 ENDIF;

 EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.TRH_Repayment_ID);
 PARAMETER(DB1.TRC_Sequence);
 {
  //?USER: Processing if Data record not found

  // PAR.TRC Sequence = CON.1
  PAR.TRC_Sequence = 1;

  //?USER: Process Data record

  // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
  PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

  QUIT;

 }

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.TRH_Repayment_ID);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(DTL.TRC_Comment);
PARAMETER('U');
{
 //?USER: Processing before Data update

 //?Make sure BOH Company Number is populated
 CASE;

 // IF PAR.BOH Company Number is *ZERO
 IF PAR.BOH_Company_Number = *ZERO;

 // DB1.BOH Company Number = PAR.CC Company Number
 DB1.BOH_Company_Number = PAR.CC_Company_Number;

 ENDIF;

 EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.TRH_Repayment_ID);
 PARAMETER(DB1.TRC_Sequence);
 {
  //?USER: Processing if Data record not found

  // PAR.TRC Sequence = CON.1
  PAR.TRC_Sequence = 1;

  //?USER: Process Data record

  // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
  PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

  QUIT;

 }

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


