// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBBAXFR
// ?Date: 14.08.2025 Time: 03:47:16
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Rtv Gen 1 TRB at Txfr RT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2031561;
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.COA_Shipping_Company);
PARAMETER(PAR.Process_Cust_Types_Usr);
PARAMETER(PAR.Actual_Shipped_Date);
{
 //?USER: Initialize routine

 //?Transfer Fuel from one ext warehouse to another ext warehouse
 //?  Reduce original BUY with transfer gallons,mark as fully sold
 //?  Update TRB with RIN Qty, net gallons to sell, trans dt/tm,
 //?    EMTS sts is '4' for transfer so it wont be sent to EMTS,
 //?S16575 RMC 6/02/20 dont put unassigned to sell on the TRB. leave on BUY
 //?    the unassigned to sell could be more that what was transferred
 // PAR.RFS Volume Corr Mthd  USR = CND.API Volume Corr Table
 PAR.RFS_Volume_Corr_Mthd_USR = 'A';

 //?USER: Process Data record

 EXECUTE FUNCTION(RTV 1st Warehouse/Ctl  RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1360958;
 PARAMETER(DB1.COA_Shipping_Company);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(LCL.Warehouse_Code);
 PARAMETER(LCL.Trans_Contol_AS400_Plant);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  EXECUTE FUNCTION(RTV Warehouse Control  RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1304300;
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(PAR.Trans_Contol_AS400_Plant);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 EXECUTE FUNCTION(RTV Warehouse Location RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1564246;
 PARAMETER(LCL.Warehouse_Code);
 PARAMETER(LCL.Warehouse_Location);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  QUIT;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 EXECUTE FUNCTION(RTV f/HPB Shp to Ext  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2031559;
 PARAMETER(PAR.COA_Shipping_Company);
 PARAMETER(PAR.Order_Number);
 PARAMETER(LCL.Order_Type_Sales);
 PARAMETER(LCL.Bill_to_Customer);
 PARAMETER(LCL.Bill_to_Name);
 PARAMETER(LCL.Customer_Purchase_Order_#);
 PARAMETER(LCL.Actual_Ship_Date_Usr);
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.HPB_Ship_to_Warehouse);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv Customer Type     RT) TYPE(RTVOBJ) FILE(CAEOREP)           AC1585599;
 PARAMETER(LCL.Bill_to_Customer);
 PARAMETER(LCL.Type_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 EXECUTE FUNCTION(RTV Ship To Info       RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1541823;
 PARAMETER(PAR.COA_Shipping_Company);
 PARAMETER(PAR.Order_Number);
 PARAMETER(LCL.Ship_To_Customer);
 PARAMETER(LCL.Ship_To_Name);
 PARAMETER(LCL.Ship_To_City);
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Customer_Purchase_Order_#);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV HPB RIN Fields     RT) TYPE(RTVOBJ) FILE(PMAMREP)          AC2004047;
 PARAMETER(DB1.COA_Shipping_Company);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.OHE_HPB_RIN_Equiv_Value);
 PARAMETER(LCL.OHE_HPB_RIN_Price);
 PARAMETER(LCL.OHE_Override_Type_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.HPB Ship to Warehouse is not entered
 IF LCL.HPB_Ship_to_Warehouse = *BLANK;

 EXECUTE FUNCTION(Rtv Default Warehouse  RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1323141;
 PARAMETER(PAR.COA_Shipping_Company);
 PARAMETER(LCL.Ship_To_Customer);
 PARAMETER(LCL.HPB_Ship_to_Warehouse);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 ENDIF;

 CASE;

 // IF LCL.Warehouse Location is External
 IF LCL.Warehouse_Location = 'E';

 CASE;

 // IF DB1.COA RIN Transaction Date is not entered
 IF DB1.COA_RIN_Transaction_Date = *ZERO;

 //?RTV Fields from orig BUY rcd to put on TRB transfer buy
 EXECUTE FUNCTION(RTV HPB to Gen RIN    RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC1891415;
 PARAMETER(DB1.COA_Shipping_Company);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Case_Sequence_Number);
 PARAMETER(LCL.Item_Code);
 PARAMETER(LCL.HPB_Meter_Net_Gallon);
 PARAMETER(LCL.HPB_Meter_Start_Gallon);
 PARAMETER(LCL.HPB_Meter_Ending_Gallon);
 PARAMETER(LCL.HPB_Meter_Total_Gallon);
 PARAMETER(LCL.HPB_Meter_Net_Weight);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?RMC R16048 use db1.coa shipping co instead of db1.company
 EXECUTE FUNCTION(RTV RIN Key fields    RT) TYPE(RTVOBJ) FILE(PNFPCPP)           AC1962269;
 PARAMETER(DB1.COA_Shipping_Company);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Case_Sequence_Number);
 PARAMETER(LCL.COA_ULSD_Company_#);
 PARAMETER(LCL.COA_Batch_Number);
 PARAMETER(LCL.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(LCL.COA_Batch_Company_Nbr);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?RMC R16048 use batch company here  instead of db1.company
 // LCL.Company Number     041743 = LCL.COA Batch Company Nbr
 LCL.Company_Number_041743 = LCL.COA_Batch_Company_Nbr;

 EXECUTE FUNCTION(Rtv Key RIN for TRB   RT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2031563;
 PARAMETER(LCL.Company_Number_041743);
 PARAMETER(LCL.COA_ULSD_Company_#);
 PARAMETER(LCL.COA_Batch_Number);
 PARAMETER(LCL.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(LCL.COA_Batch_Header_RIN);
 PARAMETER(LCL.COA_RIN_SSSSSSSS);
 PARAMETER(LCL.COA_RIN_EEEEEEEE);
 PARAMETER(LCL.COA_RIN_Volume_in_Gallons);
 PARAMETER(LCL.COA_RIN_Gallons_Sold);
 PARAMETER(LCL.COA_RIN_Type_Flag);
 PARAMETER(LCL.COA_BHR_Net_Galls_to_Sell);
 PARAMETER(LCL.COA_BHR_Loadout_Temp);
 PARAMETER(LCL.COA_Batch_RIN_Volume);
 PARAMETER(LCL.COA_RIN_Quantity);
 PARAMETER(LCL.RFS_Trans_Reason_Code);
 PARAMETER(LCL.COA_BHR_RIN_Gen_Year);
 PARAMETER(LCL.COA_BHR_RIN_Price);
 PARAMETER(LCL.COA_BHR_Gallon_Price);
 PARAMETER(LCL.COA_BHR_RINs_to_Sell_Sep);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv Equiv Value f/btchRT) TYPE(RTVOBJ) FILE(PMCCCPP)           AC1992392;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(LCL.COA_RIN_Equivalence_Valu#);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // Call program Exc HPB RIN Gen Split  XF.
 CALL PROGRAM(Exc HPB RIN Gen Split  XF) ('PNOMXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Header_RIN);
 PARAMETER(LCL.COA_RIN_SSSSSSSS);
 PARAMETER(LCL.COA_RIN_EEEEEEEE);
 PARAMETER(LCL.COA_RIN_Volume_in_Gallons);
 PARAMETER(LCL.COA_RIN_Gallons_Sold);
 PARAMETER(LCL.COA_BHR_Net_Galls_to_Sell);
 PARAMETER(LCL.COA_RIN_Quantity);
 PARAMETER(LCL.COA_BHR_RINs_to_Sell_Sep);
 PARAMETER(LCL.COA_Batch_RIN);
 PARAMETER(LCL.COA_RIN_SSSSSSSS_New_usr);
 PARAMETER(LCL.COA_RIN_EEEEEEEE_New_usr);
 PARAMETER(LCL.COA_RIN_Volume_New_usr);
 PARAMETER(LCL.HPB_Meter_Net_Gallon);
 PARAMETER(LCL.COA_RIN_Equivalence_Valu#);
 PARAMETER(LCL.COA_Batch_RIN_Volume_new);

 //?if SEL Equiv value diff than batch,adjust volume.
 CASE;

 // IF LCL.OHE HPB RIN Equiv Value GT LCL.COA RIN Equivalence Valu#
 IF LCL.OHE_HPB_RIN_Equiv_Value > LCL.COA_RIN_Equivalence_Valu#;

 //?Calc new volume for 1st SEP from RIN quantity / 2.5
 //?  Round any dec place to next whole nmbr - so add .5 then round
 // Comp: vol at 2.5 the rins
 LCL.AMOUNT = LCL.COA_RIN_Quantity / LCL.OHE_HPB_RIN_Equiv_Value;

 // LCL.Decimal Places    usr = LCL.AMOUNT
 LCL.Decimal_Places_usr = LCL.AMOUNT;

 //?chk decimal places>0
 CASE;

 // IF LCL.Decimal Places    usr is GT .00
 IF LCL.Decimal_Places_usr > .00;

 // LCL.AMOUNT = LCL.AMOUNT + CON..5
 LCL.AMOUNT = LCL.AMOUNT + .5;

 ENDIF;

 // LCL.COA Batch RIN Volume = LCL.AMOUNT * CON.1 *Rounded
 LCL.COA_Batch_RIN_Volume = LCL.AMOUNT * 1 'H';

 //?Calc Volume needed =  Orig Volume - Volume at 2.5
 // LCL.Volume Needed         usr = LCL.COA Batch RIN Volume new - LCL.COA Batch RIN Volume
 LCL.Volume_Needed_usr = LCL.COA_Batch_RIN_Volume_new - LCL.COA_Batch_RIN_Volume;

 // LCL.COA RIN Equivalence Valu# = LCL.OHE HPB RIN Equiv Value
 LCL.COA_RIN_Equivalence_Valu# = LCL.OHE_HPB_RIN_Equiv_Value;

 //?if SEL Equiv value diff than batch,adjust volume.
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.COA Batch RIN Volume = LCL.COA Batch RIN Volume new
 LCL.COA_Batch_RIN_Volume = LCL.COA_Batch_RIN_Volume_new;

 ENDIF;

 //?P0579 EMTS 5/13/10 RMC Update vol, rin qty, price, year, emts sts
 //?RFS Version 1 or 2
 CASE;

 // IF DB1.COA BHR RFS Version Nbr is RFS 2
 IF DB1.COA_BHR_RFS_Version_Nbr = '2';

 // LCL.COA RIN EMTS Sts = CND.Not Processed
 LCL.COA_RIN_EMTS_Sts = 0;

 // LCL.COA Batch RIN = CON.*BLANK
 LCL.COA_Batch_RIN = *BLANK;

 //?RFS Version 1 or 2
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?RINs originally created under version rfs 1, are sold outside of EMTS
 // LCL.COA RIN EMTS Sts = CND.Blank
 LCL.COA_RIN_EMTS_Sts = *BLANK;

 ENDIF;

 CASE;

 // IF LCL.COA BHR Gallon Price is not entered
 IF LCL.COA_BHR_Gallon_Price = *ZERO;

 EXECUTE FUNCTION(RTV Unit Price        RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1991487;
 PARAMETER(DB1.COA_Shipping_Company);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Unit_Price);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // LCL.COA BHR Gallon Price = LCL.Unit Price * CON.1 *Rounded
 LCL.COA_BHR_Gallon_Price = LCL.Unit_Price * 1 'H';

 ENDIF;

 //?*************************
 //?TRB dont go to EMTS  -->  RIN EMTS Sts is set to 4
 //?************************
 //?E2079 RMC 5/15/12 output temp from this rcd. dont change to orig txfr frm
 //?E2013 RMC 3/22/12 output act shipped date as RIN trans dt
 //?S16575 RMC 6/02/20 dont put unassigned to sell on the TRB. leave on BUY
 //?instead of lcl.COA BHR RINs to Sell Sep  leave db1.
 EXECUTE FUNCTION(Chg COA Batch Hdr RIN CH) TYPE(CHGOBJ) FILE(PMDACPP)           AC1858627;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(DB1.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(DB1.COA_Batch_Header_RIN);
 PARAMETER(LCL.COA_RIN_SSSSSSSS_New_usr);
 PARAMETER(LCL.COA_RIN_EEEEEEEE_New_usr);
 PARAMETER(LCL.COA_RIN_Volume_New_usr);
 PARAMETER(LCL.Actual_Ship_Date_Usr);
 PARAMETER(JOB.*Job_time);
 PARAMETER(DB1.COA_RIN_Trans_Partner_Nm);
 PARAMETER(DB1.COA_RIN_Trans_Partner_Id);
 PARAMETER(DB1.COA_Retired_RIN_Reason_Cd);
 PARAMETER(DB1.COA_Retired_RIN_Date);
 PARAMETER(DB1.COA_Retired_RIN_Time);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Case_Sequence_Number);
 PARAMETER(DB1.COA_Rail_Car);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.COA_Date_of_1st_Load);
 PARAMETER(DB1.COA_RIN_Unused_Time);
 PARAMETER(DB1.COA_RIN_Modified_Sts);
 PARAMETER(DB1.COA_RIN_Unused_Text);
 PARAMETER(DB1.COA_RIN_SoldFull_Splt_Sts);
 PARAMETER(*ZERO);
 PARAMETER(LCL.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.COA_RIN_Type_Flag);
 PARAMETER(DB1.COA_RIN_Customer_PO#);
 PARAMETER(DB1.COA_Shipping_Company);
 PARAMETER(DB1.COA_Ref_Load_Id);
 PARAMETER(DB1.COA_Reference_Batch_NbrNU);
 PARAMETER(DB1.COA_Reference_Btch_Seq_NU);
 PARAMETER(DB1.RFS_Compliance_Period);
 PARAMETER(DB1.RFS_Report_Year);
 PARAMETER(DB1.COA_RIN_Int_Ext_Company);
 PARAMETER(DB1.COA_BHR_Unused_Sts_2);
 PARAMETER(LCL.HPB_Meter_Net_Gallon);
 PARAMETER(DB1.COA_BHR_Unused_Date_2);
 PARAMETER(DB1.COA_BHR_Unused_Text);
 PARAMETER(DB1.COA_BHR_Loadout_Temp);
 PARAMETER(DB1.COA_ULSD_Facility_#);
 PARAMETER(LCL.COA_Batch_RIN_Volume);
 PARAMETER(LCL.COA_RIN_Quantity);
 PARAMETER(DB1.RFS_Transaction_Type);
 PARAMETER(DB1.RFS_Trans_Reason_Code);
 PARAMETER(DB1.RFS_Fuel_Code);
 PARAMETER(LCL.COA_BHR_RIN_Gen_Year);
 PARAMETER(LCL.COA_BHR_RIN_Price);
 PARAMETER(LCL.COA_BHR_Gallon_Price);
 PARAMETER(DB1.COA_Transaction_Comment);
 PARAMETER(DB1.COA_RIN_Supporting_Text_1);
 PARAMETER(DB1.COA_RIN_Supporting_Nbr_1);
 PARAMETER(DB1.COA_RIN_Supporting_Text_2);
 PARAMETER(DB1.COA_RIN_Supporting_Nbr_2);
 PARAMETER(DB1.COA_BHR_RFS_Version_Nbr);
 PARAMETER(*BLANK);
 PARAMETER(DB1.COA_GEN_EMTS_Date_Sent);
 PARAMETER(DB1.COA_GEN_EMTS_Time_Sent);
 PARAMETER(4);
 PARAMETER(DB1.COA_RIN_EMTS_Date_Sent);
 PARAMETER(DB1.COA_RIN_EMTS_Time_Sent);
 PARAMETER(DB1.COA_EMTS_PTD_Nbr);
 PARAMETER(DB1.COA_EMTS_Batch_Nbr);
 PARAMETER(DB1.COA_BHR_Unused_Sts_3);
 PARAMETER(DB1.COA_BHR_Unused_Nbr);
 PARAMETER(DB1.COA_EMTS_Trans_Id);
 PARAMETER(DB1.COA_EMTS_Return_Code);
 PARAMETER(DB1.COA_BHR_Unused_Date_3);
 PARAMETER(LCL.COA_RIN_Equivalence_Valu#);
 PARAMETER(DB1.COA_BHR_RINs_to_Sell_Sep);
 PARAMETER(DB1.COA_Unassgnd_Txfrd_RINS);
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 //?Upd Fields in orig BUY rcd to reflect transfer:
 //?  Upd BUY RIN with RIN gallons sold and reduce net galls to sell
 //?RMC 1/17/20 r16048 use batch company here
 EXECUTE FUNCTION(Rtv Upd Ref Ord f/Inv RT) TYPE(RTVOBJ) FILE(PMDACPP)           AC1971689;
 PARAMETER(LCL.Company_Number_041743);
 PARAMETER(LCL.COA_ULSD_Company_#);
 PARAMETER(LCL.COA_Batch_Number);
 PARAMETER(LCL.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(LCL.COA_RIN_Gallons_Sold);
 PARAMETER(LCL.COA_BHR_Net_Galls_to_Sell);
 PARAMETER(LCL.COA_RIN_Quantity);
 PARAMETER(LCL.Type_Code);
 PARAMETER(*ZERO);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.COA BHR Net Galls to Sell is Not Entered
  IF PAR.COA_BHR_Net_Galls_to_Sell = *ZERO;

  // LCL.COA RIN SoldFull/Splt Sts = CND.Fully Sold
  LCL.COA_RIN_SoldFull_Splt_Sts = 'F';

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.COA RIN SoldFull/Splt Sts = CND.Split
  LCL.COA_RIN_SoldFull_Splt_Sts = 'S';

  ENDIF;

  //?increase unassigned rins sold or rins sold
  CASE;

  // IF PAR.Type Code is Not RIN Customer
  IF PAR.Type_Code = 'NR';

  //?Use rin quantity instead. it was putting the total sold (assgn+unass) in
  // LCL.COA BHR RINs to Sell Sep = DB1.COA BHR RINs to Sell Sep + PAR.COA RIN Quantity
  LCL.COA_BHR_RINs_to_Sell_Sep = DB1.COA_BHR_RINs_to_Sell_Sep + PAR.COA_RIN_Quantity;

  // LCL.COA RIN Volume New usr = DB1.COA RIN Gallons Sold
  LCL.COA_RIN_Volume_New_usr = DB1.COA_RIN_Gallons_Sold;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?update rin adjustment --> excess rins from when ohe equiv is <1.5
  // LCL.COA BHR RINs to Sell Sep = DB1.COA BHR RINs to Sell Sep + PAR.RIN Adjustment USR
  LCL.COA_BHR_RINs_to_Sell_Sep = DB1.COA_BHR_RINs_to_Sell_Sep + PAR.RIN_Adjustment_USR;

  // LCL.COA RIN Volume New usr = PAR.COA RIN Gallons Sold
  LCL.COA_RIN_Volume_New_usr = PAR.COA_RIN_Gallons_Sold;

  ENDIF;

  EXECUTE FUNCTION(Chg COA Batch Hdr RIN CH) TYPE(CHGOBJ) FILE(PMDACPP)           AC1858627;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.COA_ULSD_Company_#);
  PARAMETER(DB1.COA_Batch_Number);
  PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
  PARAMETER(DB1.COA_Batch_Hdr_RIN_Seq_Sec);
  PARAMETER(DB1.COA_Batch_Header_RIN);
  PARAMETER(DB1.COA_RIN_SSSSSSSS);
  PARAMETER(DB1.COA_RIN_EEEEEEEE);
  PARAMETER(DB1.COA_RIN_Volume_in_Gallons);
  PARAMETER(DB1.COA_RIN_Transaction_Date);
  PARAMETER(DB1.COA_RIN_Transaction_Time);
  PARAMETER(DB1.COA_RIN_Trans_Partner_Nm);
  PARAMETER(DB1.COA_RIN_Trans_Partner_Id);
  PARAMETER(DB1.COA_Retired_RIN_Reason_Cd);
  PARAMETER(DB1.COA_Retired_RIN_Date);
  PARAMETER(DB1.COA_Retired_RIN_Time);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Case_Sequence_Number);
  PARAMETER(DB1.COA_Rail_Car);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.COA_Date_of_1st_Load);
  PARAMETER(DB1.COA_RIN_Unused_Time);
  PARAMETER(DB1.COA_RIN_Modified_Sts);
  PARAMETER(DB1.COA_RIN_Unused_Text);
  PARAMETER(LCL.COA_RIN_SoldFull_Splt_Sts);
  PARAMETER(LCL.COA_RIN_Volume_New_usr);
  PARAMETER(DB1.COA_Ship_To_Warehouse);
  PARAMETER(DB1.COA_RIN_Type_Flag);
  PARAMETER(DB1.COA_RIN_Customer_PO#);
  PARAMETER(DB1.COA_Shipping_Company);
  PARAMETER(DB1.COA_Ref_Load_Id);
  PARAMETER(DB1.COA_Reference_Batch_NbrNU);
  PARAMETER(DB1.COA_Reference_Btch_Seq_NU);
  PARAMETER(DB1.RFS_Compliance_Period);
  PARAMETER(DB1.RFS_Report_Year);
  PARAMETER(DB1.COA_RIN_Int_Ext_Company);
  PARAMETER(DB1.COA_BHR_Unused_Sts_2);
  PARAMETER(PAR.COA_BHR_Net_Galls_to_Sell);
  PARAMETER(DB1.COA_BHR_Unused_Date_2);
  PARAMETER(DB1.COA_BHR_Unused_Text);
  PARAMETER(DB1.COA_BHR_Loadout_Temp);
  PARAMETER(DB1.COA_ULSD_Facility_#);
  PARAMETER(DB1.COA_Batch_RIN_Volume);
  PARAMETER(DB1.COA_RIN_Quantity);
  PARAMETER(DB1.RFS_Transaction_Type);
  PARAMETER(DB1.RFS_Trans_Reason_Code);
  PARAMETER(DB1.RFS_Fuel_Code);
  PARAMETER(DB1.COA_BHR_RIN_Gen_Year);
  PARAMETER(DB1.COA_BHR_RIN_Price);
  PARAMETER(DB1.COA_BHR_Gallon_Price);
  PARAMETER(DB1.COA_Transaction_Comment);
  PARAMETER(DB1.COA_RIN_Supporting_Text_1);
  PARAMETER(DB1.COA_RIN_Supporting_Nbr_1);
  PARAMETER(DB1.COA_RIN_Supporting_Text_2);
  PARAMETER(DB1.COA_RIN_Supporting_Nbr_2);
  PARAMETER(DB1.COA_BHR_RFS_Version_Nbr);
  PARAMETER(DB1.COA_GEN_EMTS_Sts);
  PARAMETER(DB1.COA_GEN_EMTS_Date_Sent);
  PARAMETER(DB1.COA_GEN_EMTS_Time_Sent);
  PARAMETER(DB1.COA_RIN_EMTS_Sts);
  PARAMETER(DB1.COA_RIN_EMTS_Date_Sent);
  PARAMETER(DB1.COA_RIN_EMTS_Time_Sent);
  PARAMETER(DB1.COA_EMTS_PTD_Nbr);
  PARAMETER(DB1.COA_EMTS_Batch_Nbr);
  PARAMETER(DB1.COA_BHR_Unused_Sts_3);
  PARAMETER(DB1.COA_BHR_Unused_Nbr);
  PARAMETER(DB1.COA_EMTS_Trans_Id);
  PARAMETER(DB1.COA_EMTS_Return_Code);
  PARAMETER(DB1.COA_BHR_Unused_Date_3);
  PARAMETER(DB1.COA_BHR_Equiv_Value);
  PARAMETER(LCL.COA_BHR_RINs_to_Sell_Sep);
  PARAMETER(DB1.COA_Unassgnd_Txfrd_RINS);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    // PAR.Change Date = JOB.*Job date
    PAR.Change_Date = JOB.*Job_date;

    // PAR.Change Time = JOB.*Job time
    PAR.Change_Time = JOB.*Job_time;

    // PAR.Change User = JOB.*USER
    PAR.Change_User = JOB.*USER;

    // PAR.Change Program = JOB.*PROGRAM
    PAR.Change_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

 ENDIF;

}


