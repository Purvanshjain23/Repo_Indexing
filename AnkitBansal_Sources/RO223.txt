     h option(*SRCSTMT:*NODEBUGIO)
      *
      *
      *
      * February 2011- OBSOLETE    See E1298 in the Modification Section below.
      *
      *
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Resource Optimization
      * PROGRAM:     RO223
      * TITLE:       Byproduct Mix Exceptions for SRLN/T72A   (Only FG Items)
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     05/02/07
      *
      * FUNCTION:    This program performs special processing for Sirloin/Trim.
      *              Ultimately, we will write 3 "exception" records.
      *
      *              Only Finished Goods are processed in this program.
      *
      ***************************************************************************************
      * MODIFICATIONS:
      ***************************************************************************************
      * DATE      PROGRAMMER
      *
      * 08/03/07  LeAnne Ramsey
      *           Added logic to populate our new Item Type field with FG=Finished Goods.
      *
      * 10/04/07  LeAnne Ramsey
      *           Recompile only. New field 'Produced Start Weight' added to
      *           Credit Item Group Meat Cost file.
      *
      * 11/28/07  Alice Brownfield
      *           minor changes when we combined the Credit Item Meat Costs with the
      *           Byproduct MIX processing/files.
      *
      * 07/07/08  LeAnne Ramsey
      *           Added new field "Summary Level" to TF Byproduct Mix Exception file.
      *
      * 11/21/08  LeAnne Ramsey
      *           As part of synchronizing the LDAs between the TFS Margin Adjustment Close
      *           and the Meat Costing, we changed the LDA positions.
      *
      * 04/02/09  LeAnne Ramsey
      *           Recompile only. Field 'Producing Company' added to Byproduct Detail.
      *
      * 02/01/11  LeAnne Ramsey (E1298)
      *           We no longer call this program...it was called in RO410CL.
      *           I am leaving this source instead of deleting it...just in case we need
      *           to revert back or see what it was doing. Damon G. said this logic was
      *           not pricing the SRLN/BNLS correctly. Thus, the margins were not correct
      *           in COGNOS.  We rewrote to handle the SRLN/BNLS like the Tenders....with
      *           exception records in TFP019.
      *           If we ever reinstate RO223 and start building ROP124 again, we need to
      *           put the weekly delete logic for ROP124 back into RO210. We have kept
      *           ROP124 for historical reporting.
      /EJECT
      ***************************************************************************************
      * FILE SPECIFICATION
      ***************************************************************************************
      *
     frol101a   if   e           k disk
      *  Byproduct values summary
      *
      *
     frol121b   uf   e           k disk
      *  TF byproduct mix summary
      *
      *
     frol122f   if   e           k disk
      *  Byproduct detail
      *
      *
     frop124    uf a e           k disk
      *  TF byproduct mix exceptions
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      *
      * Workfields
      *
     D wkcono          s                   like(gmcono) inz(360)
     D wknpupr         s                   like(gmnpupr)
      *
     D wkcgcd          s                   like(yscgcd)
     D wksgcd          s                   like(yssgcd)
     D wkistycd        s                   like(ysistycd)
     D wkisgrcd        s                   like(ysisgrcd)
     D wkisclcd        s                   like(ysisclcd)
      *
     D wkspulb         s                   like(ysspulb)
     D wktpulb         s                   like(ysspulb)
     D wkapulb         s                   like(ysspulb)
      *
     D wksam           s                   like(ysspuam)
     D wktam           s                   like(ysspuam)
     D wkaam           s                   like(ysspuam)
      *
     D totspulb        s                   like(ydspulb)
     D tottpulb        s                   like(ydspulb)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldwedt                29     36  0
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      **********************************************************************************
      * Mainline
      **********************************************************************************
      *
      * Retrieve the Sirloin Boneless record from the TF Byproduct Mix Summary file
      * to get Produced Pounds. Then, divide the pounds by 2.
      *
     C                   move      'SRLN'        wkcgcd
     C                   z-add     200           wkistycd
     C                   z-add     850           wkisgrcd
     C                   z-add     853           wkisclcd
      *
      * Sum the Sirloin Boneless records from the Byproduct Detail file
      * to get total Produced Pounds.
      * Then, calc a workfield value that is 1/2 of the total pounds
      *
     C     key01         setll     rol122f
      *
     C                   dou       *in90 = *on                                  Do detail
     C     key01         reade     rol122f                                90
     C                   if        *in90 = *off                                 If not eof
     C                   add       ydspulb       totspulb
     C                   add       ydtpulb       tottpulb
     c                   endif                                                  If not eof
     c                   enddo                                                  Do detail
      *
     C                   eval(h)   wkspulb = totspulb / 2
     C                   eval(h)   wktpulb = tottpulb / 2
     C                   eval      wkapulb = wkspulb + wktpulb
      *
      *
      * Using these "produced pounds", we are ultimately writing 3 "exception"
      * records:
      *   a) 2 records for "special trim"
      *   b) 1 record for "bone"
      *
     C                   exsr      $trim
     C                   exsr      $bone
      *
      * Now, update the TF Byproduct Mix Summary records for:
      *   1) sirloin
      *   2) trim
     C                   move      'SRLN'        wkcgcd
     C                   exsr      $upd121
      *
     C                   move      'T72A'        wkcgcd
     C                   exsr      $upd121
      *
      * EOF processing
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Logic for Special Trim
      *---------------------------------------------------------------
      *
     C     $trim         begsr
      *
      * Retrieve the Special Trim "Group" record from the RO Meat Cost file to get
      * the Group Price and calculate Amounts.
      *
     C                   move      'T72A'        wkcgcd
     C                   move      'T72A'        wksgcd
      *
     C     key02         chain     rol101a                            92
     C                   if        *in92 = *off
     C                   eval(h)   wksam = wkspulb * gmnpupr
     C                   eval(h)   wktam = wktpulb * gmnpupr
     C                   eval(h)   wkaam = wkapulb * gmnpupr
     C                   z-add     gmnpupr       wknpupr
     C                   endif
      *
      * Write 2 Exception Records:
      *  1) "Special Trim" exception record for Sirloin
      *  2) "Sirloin"      exception record for Special Trim
      *
     C                   eval      yeexds = '             Special Trim'
     C                   eval      yesumlev = 'BP1.SRLN'
     C                   exsr      $wrtsrln
      *
     C                   eval      yeexds = 'Trim Allocated to Sirloin'
     C                   eval      yesumlev = 'BP7.T72A'
     C                   exsr      $wrttrim
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Logic for Bone
      *---------------------------------------------------------------
      *
     C     $bone         begsr
      *
      * Retrieve the Bone-in "Group" record from the RO Meat Cost file to get
      * the Group Price.
      *
     C                   move      'BNIN'        wkcgcd
     C                   move      'BNIN'        wksgcd
      *
     C     key02         chain     rol101a                            92
     C                   if        *in92 = *off                                 If hit
     C                   eval(h)   wksam = wkspulb * gmnpupr
     C                   eval(h)   wktam = wktpulb * gmnpupr
     C                   eval(h)   wkaam = wkapulb * gmnpupr
     C                   z-add     gmnpupr       wknpupr
      *
      * Write the "Bone" Exception record for SRLN
      *
     C                   eval      yeexds = '                     Bone'
     C                   eval      yesumlev = 'BP1.SRLN'
     C                   exsr      $wrtsrln
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write "Sirloin" exception record
      *---------------------------------------------------------------
      *
     C     $wrtsrln      begsr
      *
     C                   z-add     200           yeistycd
     C                   z-add     850           yeisgrcd
     C                   z-add     853           yeisclcd
      *
     C                   z-add     ldwedt        yewedt
     C                   move      'SRLN'        yecgcd
      *
     C                   z-add     wknpupr       yenpupr
      *
     C                   z-add     wkspulb       yespulb
     C                   z-add     wktpulb       yetpulb
     C                   z-add     wkapulb       yeapulb
      *
     C                   z-add     wksam         yespuam
     C                   z-add     wktam         yetpuam
     C                   z-add     wkaam         yeapuam
      *
     C                   z-add     wksam         yesnpuam
     C                   z-add     wktam         yetnpuam
     C                   z-add     wkaam         yeanpuam
      *
     C                   write     yerec
     C                   clear                   yerec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write "Special Trim" exception record
      *---------------------------------------------------------------
      *
     C     $wrttrim      begsr
      *
     C                   z-add     ldwedt        yewedt
     C                   move      'T72A'        yecgcd
     C                   z-add     720           yeistycd
     C                   z-add     712           yeisgrcd
     C                   z-add     715           yeisclcd
      *
     C                   z-add     wknpupr       yenpupr
      *
     C                   z-sub     wkspulb       yespulb
     C                   z-sub     wktpulb       yetpulb
     C                   z-sub     wkapulb       yeapulb
      *
     C                   z-sub     wksam         yespuam
     C                   z-sub     wktam         yetpuam
     C                   z-sub     wkaam         yeapuam
      *
     C                   z-sub     wksam         yesnpuam
     C                   z-sub     wktam         yetnpuam
     C                   z-sub     wkaam         yeanpuam
      *
     C                   write     yerec
     C                   clear                   yerec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Update the TF Byproduct Mix Summary record
      *---------------------------------------------------------------
      *
     C     $upd121       begsr
      *
      * Retrieve the TF Byproduct Mix Summary record for this Meat Cost Group.
      *
     C     key03         chain     rol121b                            92
     C                   if        *in92 = *off                                 If summary
      *
      * Read all TF Byproduct Mix Exception records for this Meat Cost Group.
      * Add the pounds and dollars to the Summary record valeus.
      *
     C     key03         setll     rop124
     C                   dou       *in91 = *on                                  Do excepts
     C     key03         reade(n)  rop124                                 91
     C                   if        *in91 = *off
     C                   add       yespulb       ysspulb
     C                   add       yetpulb       ystpulb
     C                   add       yeapulb       ysapulb
      *
     C                   add       yesnpuam      yssnpuam
     C                   add       yetnpuam      ystnpuam
     C                   add       yeanpuam      ysanpuam
     C                   endif
     C                   enddo                                                  Do excepts
      *
      * Calculate Net Produced Price/LB
      *
      *            SBD:
     C                   if        ysspulb <> 0
     C                   eval(h)   yssnpupr = yssnpuam / ysspulb
     C                   endif
      *            TF:
     C                   if        ystpulb <> 0
     C                   eval(h)   ystnpupr = ystnpuam / ystpulb
     C                   endif
      *            AGG:
     C                   if        ysapulb <> 0
     C                   eval(h)   ysanpupr = ysanpuam / ysapulb
     C                   endif
      *
     C                   update    ysrec
     C                   endif                                                  If summary
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    ldwedt
     C                   kfld                    wkcgcd
     C                   kfld                    wkistycd
     C                   kfld                    wkisgrcd
     C                   kfld                    wkisclcd
      *
     C     key02         klist
     C                   kfld                    wkcono
     C                   kfld                    ldwedt
     C                   kfld                    wkcgcd
     C                   kfld                    wksgcd
      *
     C     key03         klist
     C                   kfld                    ldwedt
     C                   kfld                    wkcgcd
      *
     C                   endsr
      /eject
