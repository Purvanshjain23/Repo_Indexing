// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWM6PVR
// ?Date: 14.08.2025 Time: 02:57:00
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//? 5/20/2021 JBB P17058 - Tattoo Repayment by Business
//?               SDD619   Delete a Tattoo Repayment Detail record.
ENDDO;

//?USER: Load screen

MOVE *ALL (To: DTL From: PAR);

//?Display Status text
CASE;

// IF PAR.TRD Repayment Status is Created
IF PAR.TRD_Repayment_Status = 'C';

// DTL.Text 7 USR = CON.Created
DTL.Text_7_USR = 'Created';

//?Display Status text
// IF PAR.TRD Repayment Status is Unpaid
IF PAR.TRD_Repayment_Status = 'U';

// DTL.Text 7 USR = CON.Unpaid
DTL.Text_7_USR = 'Unpaid';

//?Display Status text
// IF PAR.TRD Repayment Status is Edited
IF PAR.TRD_Repayment_Status = 'E';

// DTL.Text 7 USR = CON.Edited
DTL.Text_7_USR = 'Edited';

//?Display Status text
// IF PAR.TRD Repayment Status is Repaid
IF PAR.TRD_Repayment_Status = 'R';

// DTL.Text 7 USR = CON.Repaid
DTL.Text_7_USR = 'Repaid';

ENDIF;

//?USER: User defined action

EXECUTE FUNCTION(Dlt Tattoo Repay Dtl  DO) TYPE(DLTOBJ) FILE(PWAXCPP)           AB1364797;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.TRH_Repayment_ID);
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(DTL.TH_Kill_Date);

//?Create a system comment
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Buy Order Number Alpha = CVTVAR(DTL.BOH Buy Order Number)
LCL.Buy_Order_Number_Alpha = CVTVAR(DTL.BOH_Buy_Order_Number);

// LCL.Load Number Alpha = CVTVAR(DTL.BOL Load Number)
LCL.Load_Number_Alpha = CVTVAR(DTL.BOL_Load_Number);

// LCL.Tattoo Number Alpha = CVTVAR(DTL.TH Tattoo Number)
LCL.Tattoo_Number_Alpha = CVTVAR(DTL.TH_Tattoo_Number);

// LCL.TRC Comment = CONCAT(CON.Buy Order,LCL.Buy Order Number Alpha,CND.*One)
LCL.TRC_Comment = 'Buy Order' + LCL.Buy_Order_Number_Alpha (1);

// LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON., Load,CND.*One)
LCL.TRC_Comment = LCL.TRC_Comment + ', Load' (1);

// LCL.TRC Comment = CONCAT(LCL.TRC Comment,LCL.Load Number Alpha,CND.*One)
LCL.TRC_Comment = LCL.TRC_Comment + LCL.Load_Number_Alpha (1);

// LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON., Tattoo,CND.*One)
LCL.TRC_Comment = LCL.TRC_Comment + ', Tattoo' (1);

// LCL.TRC Comment = CONCAT(LCL.TRC Comment,LCL.Tattoo Number Alpha,CND.*One)
LCL.TRC_Comment = LCL.TRC_Comment + LCL.Tattoo_Number_Alpha (1);

// LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON.removed.,CND.*One)
LCL.TRC_Comment = LCL.TRC_Comment + 'removed.' (1);

EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.TRH_Repayment_ID);
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(LCL.TRC_Comment);
PARAMETER('S');
{
 //?USER: Processing before Data update

 //?Make sure BOH Company Number is populated
 CASE;

 // IF PAR.BOH Company Number is *ZERO
 IF PAR.BOH_Company_Number = *ZERO;

 // DB1.BOH Company Number = PAR.CC Company Number
 DB1.BOH_Company_Number = PAR.CC_Company_Number;

 ENDIF;

 EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.TRH_Repayment_ID);
 PARAMETER(DB1.TRC_Sequence);
 {
  //?USER: Processing if Data record not found

  // PAR.TRC Sequence = CON.1
  PAR.TRC_Sequence = 1;

  //?USER: Process Data record

  // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
  PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

  QUIT;

 }

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


ENDIF;

