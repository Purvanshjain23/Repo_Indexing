// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKSHPVR
// ?Date: 14.08.2025 Time: 02:52:38
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?H16853 - ISE - 02/03/21 - Increased Buy Order length from 5 to 7.
//?                          Recompilation only.
EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// LCL.First Time Flag Usr = CND.Yes
LCL.First_Time_Flag_Usr = 'Y';

//?USER: Load screen

CASE;

// IF LCL.First Time Flag Usr is Yes
IF LCL.First_Time_Flag_Usr = 'Y';

// DTL.BOH Company Number = PAR.CC Company Number
DTL.BOH_Company_Number = PAR.CC_Company_Number;

// LCL.First Time Flag Usr = CND.No
LCL.First_Time_Flag_Usr = 'N';

ENDIF;

//?USER: Validate fields

//?Prompt
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

//?Select Company Number
CASE;

// IF PGM.*Cursor field <IS> DTL.PD Producer Code
IF PGM.*Cursor_field = DTL.PD_Producer_Code;

// Call program Sel Producer          SR.
CALL PROGRAM(Sel Producer          SR) ('PKA1SRR');
PARAMETER(DTL.PD_Producer_Code);

ENDIF;

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.Oms_Name);
PARAMETER(LCL.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?VAL:  Company Number
CASE;

// IF LCL.Invalid Y/N USR is Yes
IF LCL.Invalid_Y_N_USR = 'Y';

// Send error message - 'Company not found.'
ERROR(PRK0162);

ENDIF;

//?VAL:  Producer Code
CASE;

// IF DTL.PD Producer Code is Blank
IF DTL.PD_Producer_Code = *BLANK;

// DTL.PD Name = CON.All
DTL.PD_Name = 'All';

//?VAL:  Producer Code
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Val Prod Existance    RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1176016;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PD_Name);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF LCL.Record Found USR is Record Not Found
IF LCL.Record_Found_USR = 'N';

// Send error message - 'Producer not found.'
ERROR(PRK0009);

ENDIF;

ENDIF;

//?USER: User defined action

// Retrieve message - 'JOB(&1) jobq(&2) log(&3) hold(&4)'
PGM.*Sbmjob_override_string = RTVMSG(PRK0812);
PARAMETER('DWNWKPRM');
PARAMETER(*JOBD);
PARAMETER('4 00 *NOLIST');
PARAMETER(*NO);

// Call program Dwn Wkly Performance  CL.
SBMJOB;
CALL PROGRAM(Dwn Wkly Performance  CL) ('PKSFUPR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.Date_From_USR);
PARAMETER(DTL.Week_Number_USR);
PARAMETER(DTL.Document_USR);
PARAMETER(DTL.PC_Format_USR);
SBMJOBEND;

// Send information message - 'Download Submitted.'
MESSAGE(PRK0904 *INFO);

