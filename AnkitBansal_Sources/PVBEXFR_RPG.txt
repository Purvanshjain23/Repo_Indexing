     H/TITLE TEST EL 846 XF            Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISELOUC
     H* Date          : 10/11/23  Time  : 11:03:19
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FECP080L2  IF   E           K DISK
      * RSQ : EDI Whs Inv Inq Adv  HDR  Surrogate SEL Unprocesse
      *
     FECP082L1  IF   E           K DISK
      * RTV : EDI Whs Inv Inq Adv  NAM  Retrieval index
      *
     FPNG0REL1  IF   E           K DISK
      * RTV : EDI WHS Interchange       Retrieval index
      *
     FCAADREL1  IF   E           K DISK
      * RTV : Warehouse Codes           Retrieval index       NV
      *
     FECP081L1  IF   E           K DISK
      * RTV : EDI Whs Inv Inq Adv  LIN  Retrieval index
      *
     FCABZREL1  IF   E           K DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FPDKMREL1  IF   E           K DISK
      * RTV : Company Values            Retrieval index
      *
     FOMBYREL1  IF   E           K DISK
      * RTV : Item Default              Retrieval index
      *
     FPPB0CPL3  IF   E           K DISK
      * RSQ : PFS Inventory Restoration Co/Whs/Dte/Tme/Seq
      *
     FCAB0RELC  IF   E           K DISK
      * RSQ : Item Balance              Co/Whse/Item
      *
     FPPB0CPL0  IF A E           K DISK
      * UPD : PFS Inventory Restoration Update index
      *
     FECP080L0  UF   E           K DISK
      * UPD : EDI Whs Inv Inq Adv  HDR  Update index
      *
      * Long constants
     D @CN#            S              6    DIM(20)CTDATA PERRCD(1)
     D @CN             S             25    DIM(20) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      /EJECT
     D XTCK            DS
      * Time: hours, minutes, seconds
     D  XTTIM                  1      6  0
     D  XTHH                   1      2  0
     D  XTNN                   3      4  0
     D  XTSS                   5      6  0
     D QPPB01        E DS                  EXTNAME(PPB0CPL0)
      * UPD : PFS Inventory Restoration Update index
      * Renamed input format fields
     D  WIY1NX       E                     EXTFLD(B0Y1NX)
     D  WIAID8       E                     EXTFLD(B0AID8)
     D  WIAFTS       E                     EXTFLD(B0AFTS)
     D  WIBCNY       E                     EXTFLD(B0BCNY)
     D  WIXKSX       E                     EXTFLD(B0XKSX)
     D  WIY2NX       E                     EXTFLD(B0Y2NX)
     D  WIU4SX       E                     EXTFLD(B0U4SX)
     D  WIADNY       E                     EXTFLD(B0ADNY)
     D  WIP7DT       E                     EXTFLD(B0P7DT)
     D  WIZ4NX       E                     EXTFLD(B0Z4NX)
     D  WIACNY       E                     EXTFLD(B0ACNY)
     D  WICUNY       E                     EXTFLD(B0CUNY)
     D  WICVNY       E                     EXTFLD(B0CVNY)
     D  WIUWSX       E                     EXTFLD(B0UWSX)
     D  WIUXSX       E                     EXTFLD(B0UXSX)
     D  WIV3SX       E                     EXTFLD(B0V3SX)
     D  WIAHNY       E                     EXTFLD(B0AHNY)
     D  WIAINY       E                     EXTFLD(B0AINY)
     D  WIAJNY       E                     EXTFLD(B0AJNY)
     D  WIAKNY       E                     EXTFLD(B0AKNY)
      *
     D QECP01        E DS                  EXTNAME(ECP080L0)
      * UPD : EDI Whs Inv Inq Adv  HDR  Update index
      * Renamed input format fields
     D  WLH9NY       E                     EXTFLD(A4H9NY)
     D  WLHPAA       E                     EXTFLD(A4HPAA)
     D  WLA0ST       E                     EXTFLD(A4A0ST)
     D  WLXVAA       E                     EXTFLD(A4XVAA)
     D  WLXWAA       E                     EXTFLD(A4XWAA)
     D  WLIYU1       E                     EXTFLD(A4IYU1)
     D  WLHHSC       E                     EXTFLD(A4HHSC)
     D  WLHISC       E                     EXTFLD(A4HISC)
     D  WLARTH       E                     EXTFLD(A4ARTH)
      *
     D YARDCS          DS            56
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  WN0001         S              1
     D  WN0002         S             50
     D  WN0003         S             50
     D  WN0004         S              3
     D  WN0005         S              3  0
     D  YL0001         S             50
     D  ZQ             S              5  0
     D  YL0002         S              3
     D  YL0003         S              3  0
     D  WQSB01         S                   LIKE(WBH9NY)
     D  YL0004         S              3  0
     D  WL0001         S              3
     D  WL0002         S              3  0
     D  Y0CX01         S              1
     D  Y0CX02         S              1
     D  YN0001         S              3
     D  YL0005         S              6
     D  YN0002         S             20
     D  YL0006         S              1
     D  YN0003         S              7  0
     D  YN0004         S              6  0
     D  YN0005         S             10
     D  YN0006         S             10
     D  YN0007         S              7  0
     D  YN0008         S              6  0
     D  YN0009         S             10
     D  YN0010         S             10
     D  YL0007         S              3  0
     D  WL0003         S              3
     D  WL0004         S              3  0
     D  YL0008         S              3  0
     D  WQSG01         S                   LIKE(WEH9NY)
     D  YL0009         S              1
     D  YL0010         S             32
     D  YL0011         S             48
     D  YL0012         S              7
     D  YL0013         S             50
     D  YL0014         S              9
     D  YL0015         S             14
     D  YL0016         S            256
     D  YL0017         S              3  0
     D  YL0018         S             50
     D  WL0005         S              3  0
     D  WL0006         S             10
     D  WL0007         S             40
     D  WQ0001         S             50
     D  WQ0002         S             50
     D  WQ0003         S            256
     D  W0CLPG         S             10
     D  WN0006         S              8  0
     D  WN0007         S              5  0
     D  WN0008         S              6  0
     D  WN0009         S              6  0
     D  YL0019         S              8  0
     D  YL0020         S             15  5
     D  YL0021         S             15  5
     D  WQ0004         S             15  5
     D  WQ0005         S             15  5
     D  XASC           S              8  0
     D  XDWK1          S              8  0
     D  WQSJ01         S                   LIKE(WEH9NY)
     D  YL0022         S             11  2
     D  YL0023         S              2
     D  YL0024         S             11  2
     D  YL0025         S              3
     D  YL0026         S              3  0
     D  YL0027         S              6  0
     D  YL0028         S              1
     D  WL0008         S              3  0
     D  WL0009         S              8  0
     D  WL0010         S              6  0
     D  WL0011         S              5  0
     D  WL0012         S              2
     D  WL0013         S              7  0
     D  WL0014         S              3
     D  WL0015         S              4  0
     D  WL0016         S              8  0
     D  WL0017         S              8  0
     D  WL0018         S              8  0
     D  WL0019         S              5  0
     D  WL0020         S              8  2
     D  WL0021         S              1
     D  WL0022         S              1  0
     D  WL0023         S              6
     D  WL0024         S              8  0
     D  WL0025         S              6  0
     D  WL0026         S              8  0
     D  WL0027         S              6  0
     D  ZADFMF         S             10
     D  YL0029         S              5  0
     D  WQSN01         S                   LIKE(WJY1NX)
     D  WQSN02         S                   LIKE(WJU4SX)
     D  WQSN03         S                   LIKE(WJAID8)
     D  WQSN04         S                   LIKE(WJAFTS)
     D  YL0030         S              7  0
     D  WQSO01         S                   LIKE(WKAIC3)
     D  WQSO02         S                   LIKE(WKAJCD)
     D  WQ0006         S              3
     D  WQ0007         S              3  0
     D  WQ0008         S              3  0
     D  WQ0009         S              8  0
     D  WQ0010         S              6  0
     D  WQ0011         S              5  0
     D  WQ0012         S              3
     D  WQ0013         S              3  0
     D  WQ0014         S              3  0
     D  WQ0015         S              8  0
     D  WQ0016         S              6  0
     D  WQ0017         S              5  0
     D  WQ0018         S              3  0
     D  WQ0019         S              3
     D  WQ0020         S              3  0
     D  WQ0021         S              3
     D  YL0031         S             50
     D  WQ0022         S              3  0
     D  WQ0023         S             10
     D  WQ0024         S             40
     D  YL0032         S             30
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  YARDC          S              1
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
     d wkccyymmdd      S              8A
     D                 DS
     D  ZAMSDA                 1    132
      * Message data for 'Exe Sequel EDI846 RawData'
      * EDI SURROGATE NUMBER
     D  ZA0001                 1      5P 0
      * Email Address
     D  ZA0002                 6     55
      * Message Line 1
     D  ZA0003                56     85
     I@P080DA
      * EDI Whs Inv Inq Adv  HDR  Surrogate SEL Unprocesse
      * Renamed input format fields
     I              A4H9NY                      WAH9NY
     I              A4HPAA                      WAHPAA
     I              A4A0ST                      WAA0ST
     I              A4XVAA                      WAXVAA
     I              A4XWAA                      WAXWAA
     I              A4IYU1                      WAIYU1
     I              A4HHSC                      WAHHSC
     I              A4HISC                      WAHISC
     I              A4ARTH                      WAARTH
      *
     I@A3CPC2
      * EDI Whs Inv Inq Adv  NAM  Retrieval index
      * Renamed input format fields
     I              A3H9NY                      WBH9NY
     I              A3TYPC                      WBTYPC
     I              A3AMEX                      WBAMEX
     I              A3DCDQ                      WBDCDQ
     I              A3DCDE                      WBDCDE
     I              A3DD1X                      WBDD1X
     I              A3DD2X                      WBDD2X
     I              A3ITYX                      WBITYX
     I              A3TATE                      WBTATE
     I              A3IPXX                      WBIPXX
     I              A3WFAA                      WBWFAA
      *
     I@G0REJZ
      * EDI WHS Interchange       Retrieval index
      * Renamed input format fields
     I              G0AJCD                      WCAJCD
     I              G0M4AA                      WCM4AA
     I              G0M7AA                      WCM7AA
     I              G0J5NX                      WCJ5NX
     I              G0X2T1                      WCX2T1
     I              G0JBSC                      WCJBSC
     I              G0JCSC                      WCJCSC
     I              G0JDSC                      WCJDSC
     I              G0JESC                      WCJESC
     I              G0QGU1                      WCQGU1
     I              G0F5NZ                      WCF5NZ
     I              G0LSSC                      WCLSSC
     I              G0LTSC                      WCLTSC
     I              G0AHAB                      WCAHAB
     I              G0F6NZ                      WCF6NZ
     I              G0VSST                      WCVSST
     I              G0MJDT                      WCMJDT
     I              G0BETM                      WCBETM
     I              G0CCVN                      WCCCVN
     I              G0CDVN                      WCCDVN
     I              G0MKDT                      WCMKDT
     I              G0BFTM                      WCBFTM
     I              G0CEVN                      WCCEVN
     I              G0CFVN                      WCCFVN
      *
     I@ADREAO
      * Warehouse Codes           Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                      WDAJCD
     I              ADF8NA                      WDF8NA
     I              ADACNA                      WDACNA
     I              ADADNA                      WDADNA
     I              ADAENA                      WDAENA
     I              ADAJNA                      WDAJNA
     I              ADBTTX                      WDBTTX
     I              ADAOCD                      WDAOCD
     I              ADBGCD                      WDBGCD
     I              ADVHST                      WDVHST
     I              ADMPNA                      WDMPNA
     I              ADWPST                      WDWPST
     I              ADXUST                      WDXUST
     I              ADT0ST                      WDT0ST
     I              ADT1ST                      WDT1ST
     I              ADDBNB                      WDDBNB
     I              ADT2ST                      WDT2ST
     I              ADT3ST                      WDT3ST
     I              ADT4ST                      WDT4ST
     I              ADT6ST                      WDT6ST
     I              ADBWC3                      WDBWC3
     I              ADBTC3                      WDBTC3
     I              ADBUC3                      WDBUC3
     I              ADBVC3                      WDBVC3
     I              ADFCAA                      WDFCAA
     I              ADRQSX                      WDRQSX
     I              ADRRSX                      WDRRSX
     I              ADRSSX                      WDRSSX
     I              ADRTSX                      WDRTSX
     I              ADT7ST                      WDT7ST
     I              ADT8ST                      WDT8ST
     I              ADRNSX                      WDRNSX
     I              ADROSX                      WDROSX
     I              ADRPSX                      WDRPSX
     I              ADUVST                      WDUVST
     I              ADUWST                      WDUWST
     I              ADUXST                      WDUXST
     I              ADVSST                      WDVSST
     I              ADAATM                      WDAATM
     I              ADAYNA                      WDAYNA
     I              ADA0NA                      WDA0NA
     I              ADAXDT                      WDAXDT
      *
     I@A5CPC8
      * EDI Whs Inv Inq Adv  LIN  Retrieval index
      * Renamed input format fields
     I              A5H9NY                      WEH9NY
     I              A5IZU1                      WEIZU1
     I              A5CWNZ                      WECWNZ
     I              A5NPVL                      WENPVL
     I              A5NQVL                      WENQVL
     I              A5HJSC                      WEHJSC
     I              A5CXNZ                      WECXNZ
     I              A5SPQT                      WESPQT
      *
     I@BZREJU
      * Company Item              Retrieval index       NV
      * Renamed input format fields
     I              BZAIC3                      WFAIC3
     I              BZHGCD                      WFHGCD
     I              BZAVNA                      WFAVNA
     I              BZAWNA                      WFAWNA
     I              BZL7NA                      WFL7NA
     I              BZL8NA                      WFL8NA
     I              BZL6NA                      WFL6NA
     I              BZMFNA                      WFMFNA
     I              BZADCD                      WFADCD
     I              BZAWPC                      WFAWPC
     I              BZLXST                      WFLXST
     I              BZAECD                      WFAECD
     I              BZAXPC                      WFAXPC
     I              BZLYST                      WFLYST
     I              BZAFCD                      WFAFCD
     I              BZAICD                      WFAICD
     I              BZAIWG                      WFAIWG
     I              BZHICD                      WFHICD
     I              BZRBCD                      WFRBCD
     I              BZFZST                      WFFZST
     I              BZAVST                      WFAVST
     I              BZCZWG                      WFCZWG
     I              BZC0WG                      WFC0WG
     I              BZURTN                      WFURTN
     I              BZAJC8                      WFAJC8
     I              BZRINB                      WFRINB
     I              BZRHNB                      WFRHNB
     I              BZRGNB                      WFRGNB
     I              BZLNCD                      WFLNCD
     I              BZTFNB                      WFTFNB
     I              BZN0CD                      WFN0CD
     I              BZX4ST                      WFX4ST
     I              BZTMVA                      WFTMVA
     I              BZTNVA                      WFTNVA
     I              BZBLPR                      WFBLPR
     I              BZBMPR                      WFBMPR
     I              BZLRCD                      WFLRCD
     I              BZU9ST                      WFU9ST
     I              BZCMCO                      WFCMCO
     I              BZQ1CD                      WFQ1CD
     I              BZQ8CD                      WFQ8CD
     I              BZCHTM                      WFCHTM
     I              BZQZCD                      WFQZCD
     I              BZXWST                      WFXWST
     I              BZXXST                      WFXXST
     I              BZVMST                      WFVMST
     I              BZSWGH                      WFSWGH
     I              BZPPHE                      WFPPHE
     I              BZR3CD                      WFR3CD
     I              BZSDCD                      WFSDCD
     I              BZICN1                      WFICN1
     I              BZSVCD                      WFSVCD
     I              BZICN2                      WFICN2
     I              BZSWCD                      WFSWCD
     I              BZV2NB                      WFV2NB
     I              BZSXCD                      WFSXCD
     I              BZITCN                      WFITCN
     I              BZSYCD                      WFSYCD
     I              BZITC5                      WFITC5
     I              BZSZCD                      WFSZCD
     I              BZICN6                      WFICN6
     I              BZS0CD                      WFS0CD
     I              BZICN7                      WFICN7
     I              BZS1CD                      WFS1CD
     I              BZICN8                      WFICN8
     I              BZS2CD                      WFS2CD
     I              BZICN9                      WFICN9
     I              BZS3CD                      WFS3CD
     I              BZICN0                      WFICN0
     I              BZS4CD                      WFS4CD
     I              BZSFNB                      WFSFNB
     I              BZA3WG                      WFA3WG
     I              BZSJNB                      WFSJNB
     I              BZLLCD                      WFLLCD
     I              BZLMCD                      WFLMCD
     I              BZP3ST                      WFP3ST
     I              BZSKNB                      WFSKNB
     I              BZSLNB                      WFSLNB
     I              BZSMNB                      WFSMNB
     I              BZP4ST                      WFP4ST
     I              BZCFNB                      WFCFNB
     I              BZCGNB                      WFCGNB
     I              BZILNB                      WFILNB
     I              BZCHNB                      WFCHNB
     I              BZCINB                      WFCINB
     I              BZCJNB                      WFCJNB
     I              BZCMNB                      WFCMNB
     I              BZCNNB                      WFCNNB
     I              BZCRNB                      WFCRNB
     I              BZCSNB                      WFCSNB
     I              BZCVNB                      WFCVNB
     I              BZCWNB                      WFCWNB
     I              BZCXNB                      WFCXNB
     I              BZCZNB                      WFCZNB
     I              BZC0NB                      WFC0NB
     I              BZN1CD                      WFN1CD
     I              BZB4NB                      WFB4NB
     I              BZB5NB                      WFB5NB
     I              BZX5ST                      WFX5ST
     I              BZX6ST                      WFX6ST
     I              BZX7ST                      WFX7ST
     I              BZPCCT                      WFPCCT
     I              BZBDNB                      WFBDNB
     I              BZBJNB                      WFBJNB
     I              BZSUST                      WFSUST
     I              BZSVST                      WFSVST
     I              BZSYST                      WFSYST
     I              BZSZST                      WFSZST
     I              BZS1ST                      WFS1ST
     I              BZXRCD                      WFXRCD
     I              BZXTCD                      WFXTCD
     I              BZXUCD                      WFXUCD
     I              BZF5WG                      WFF5WG
     I              BZF6WG                      WFF6WG
     I              BZF7WG                      WFF7WG
     I              BZBLNB                      WFBLNB
     I              BZBNNB                      WFBNNB
     I              BZS2ST                      WFS2ST
     I              BZS4ST                      WFS4ST
     I              BZS5ST                      WFS5ST
     I              BZS6ST                      WFS6ST
     I              BZS8ST                      WFS8ST
     I              BZS9ST                      WFS9ST
     I              BZTCST                      WFTCST
     I              BZTDST                      WFTDST
     I              BZUVST                      WFUVST
     I              BZUWST                      WFUWST
     I              BZUXST                      WFUXST
     I              BZVSST                      WFVSST
     I              BZAATM                      WFAATM
     I              BZAYNA                      WFAYNA
     I              BZA0NA                      WFA0NA
     I              BZAXDT                      WFAXDT
      *
     I@KMREHC
      * Company Values            Retrieval index
      * Renamed input format fields
     I              KMAIC3                      WGAIC3
     I              KMV8CD                      WGV8CD
     I              KMAUNA                      WGAUNA
     I              KMI5ST                      WGI5ST
     I              KMBXTX                      WGBXTX
     I              KMM8NB                      WGM8NB
     I              KMUVST                      WGUVST
     I              KMUWST                      WGUWST
     I              KMUXST                      WGUXST
     I              KMVSST                      WGVSST
     I              KMAATM                      WGAATM
     I              KMAYNA                      WGAYNA
     I              KMA0NA                      WGA0NA
     I              KMAXDT                      WGAXDT
      *
     I@BYREA1
      * Item Default              Retrieval index
      * Renamed input format fields
     I              BYHGCD                      WHHGCD
     I              BYAVNA                      WHAVNA
     I              BYAWNA                      WHAWNA
     I              BYL7NA                      WHL7NA
     I              BYL8NA                      WHL8NA
     I              BYL6NA                      WHL6NA
     I              BYMFNA                      WHMFNA
     I              BYHHCD                      WHHHCD
     I              BYAWPC                      WHAWPC
     I              BYLXST                      WHLXST
     I              BYLGCD                      WHLGCD
     I              BYAXPC                      WHAXPC
     I              BYLYST                      WHLYST
     I              BYLHCD                      WHLHCD
     I              BYLICD                      WHLICD
     I              BYAIWG                      WHAIWG
     I              BYHICD                      WHHICD
     I              BYRBCD                      WHRBCD
     I              BYFZST                      WHFZST
     I              BYAVST                      WHAVST
     I              BYCZWG                      WHCZWG
     I              BYC0WG                      WHC0WG
     I              BYURTN                      WHURTN
     I              BYACC8                      WHACC8
     I              BYRINB                      WHRINB
     I              BYRHNB                      WHRHNB
     I              BYRGNB                      WHRGNB
     I              BYLNCD                      WHLNCD
     I              BYTFNB                      WHTFNB
     I              BYN0CD                      WHN0CD
     I              BYX4ST                      WHX4ST
     I              BYCHTM                      WHCHTM
     I              BYQZCD                      WHQZCD
     I              BYXWST                      WHXWST
     I              BYXXST                      WHXXST
     I              BYVMST                      WHVMST
     I              BYSWGH                      WHSWGH
     I              BYPPHE                      WHPPHE
     I              BYLRCD                      WHLRCD
     I              BYSFNB                      WHSFNB
     I              BYA3WG                      WHA3WG
     I              BYSJNB                      WHSJNB
     I              BYLLCD                      WHLLCD
     I              BYLMCD                      WHLMCD
     I              BYP3ST                      WHP3ST
     I              BYSKNB                      WHSKNB
     I              BYSLNB                      WHSLNB
     I              BYSMNB                      WHSMNB
     I              BYP4ST                      WHP4ST
     I              BYCFNB                      WHCFNB
     I              BYCGNB                      WHCGNB
     I              BYILNB                      WHILNB
     I              BYCHNB                      WHCHNB
     I              BYCINB                      WHCINB
     I              BYCJNB                      WHCJNB
     I              BYCMNB                      WHCMNB
     I              BYCNNB                      WHCNNB
     I              BYCRNB                      WHCRNB
     I              BYCSNB                      WHCSNB
     I              BYCVNB                      WHCVNB
     I              BYCWNB                      WHCWNB
     I              BYCXNB                      WHCXNB
     I              BYCZNB                      WHCZNB
     I              BYC0NB                      WHC0NB
     I              BYN1CD                      WHN1CD
     I              BYB4NB                      WHB4NB
     I              BYX5ST                      WHX5ST
     I              BYX6ST                      WHX6ST
     I              BYX7ST                      WHX7ST
     I              BYTMVA                      WHTMVA
     I              BYTNVA                      WHTNVA
     I              BYBLPR                      WHBLPR
     I              BYBMPR                      WHBMPR
     I              BYU9ST                      WHU9ST
     I              BYCMCO                      WHCMCO
     I              BYQ1CD                      WHQ1CD
     I              BYAIC3                      WHAIC3
     I              BYQ8CD                      WHQ8CD
     I              BYR3CD                      WHR3CD
     I              BYSDCD                      WHSDCD
     I              BYICN1                      WHICN1
     I              BYSVCD                      WHSVCD
     I              BYICN2                      WHICN2
     I              BYSWCD                      WHSWCD
     I              BYV2NB                      WHV2NB
     I              BYSXCD                      WHSXCD
     I              BYITCN                      WHITCN
     I              BYSYCD                      WHSYCD
     I              BYITC5                      WHITC5
     I              BYSZCD                      WHSZCD
     I              BYICN6                      WHICN6
     I              BYS0CD                      WHS0CD
     I              BYICN7                      WHICN7
     I              BYS1CD                      WHS1CD
     I              BYICN8                      WHICN8
     I              BYS2CD                      WHS2CD
     I              BYICN9                      WHICN9
     I              BYS3CD                      WHS3CD
     I              BYICN0                      WHICN0
     I              BYS4CD                      WHS4CD
     I              BYB5NB                      WHB5NB
     I              BYXRCD                      WHXRCD
     I              BYPCCT                      WHPCCT
     I              BYBDNB                      WHBDNB
     I              BYBJNB                      WHBJNB
     I              BYSUST                      WHSUST
     I              BYSVST                      WHSVST
     I              BYSYST                      WHSYST
     I              BYSZST                      WHSZST
     I              BYS1ST                      WHS1ST
     I              BYXTCD                      WHXTCD
     I              BYXUCD                      WHXUCD
     I              BYF5WG                      WHF5WG
     I              BYF6WG                      WHF6WG
     I              BYF7WG                      WHF7WG
     I              BYBLNB                      WHBLNB
     I              BYBNNB                      WHBNNB
     I              BYS2ST                      WHS2ST
     I              BYS4ST                      WHS4ST
     I              BYS5ST                      WHS5ST
     I              BYS6ST                      WHS6ST
     I              BYS8ST                      WHS8ST
     I              BYS9ST                      WHS9ST
     I              BYTCST                      WHTCST
     I              BYTDST                      WHTDST
     I              BYUVST                      WHUVST
     I              BYUWST                      WHUWST
     I              BYUXST                      WHUXST
     I              BYVSST                      WHVSST
     I              BYAHTM                      WHAHTM
     I              BYBEVN                      WHBEVN
     I              BYBFVN                      WHBFVN
     I              BYEKDT                      WHEKDT
      *
     I@B0CPD1
      * PFS Inventory Restoration Update index
      * Renamed input format fields
     I              B0Y1NX                      WIY1NX
     I              B0AID8                      WIAID8
     I              B0AFTS                      WIAFTS
     I              B0BCNY                      WIBCNY
     I              B0XKSX                      WIXKSX
     I              B0Y2NX                      WIY2NX
     I              B0U4SX                      WIU4SX
     I              B0ADNY                      WIADNY
     I              B0P7DT                      WIP7DT
     I              B0Z4NX                      WIZ4NX
     I              B0ACNY                      WIACNY
     I              B0CUNY                      WICUNY
     I              B0CVNY                      WICVNY
     I              B0UWSX                      WIUWSX
     I              B0UXSX                      WIUXSX
     I              B0V3SX                      WIV3SX
     I              B0AHNY                      WIAHNY
     I              B0AINY                      WIAINY
     I              B0AJNY                      WIAJNY
     I              B0AKNY                      WIAKNY
      *
     I@B0CPEP
      * PFS Inventory Restoration Co/Whs/Dte/Tme/Seq
      * Renamed input format fields
     I              B0Y1NX                      WJY1NX
     I              B0AID8                      WJAID8
     I              B0AFTS                      WJAFTS
     I              B0BCNY                      WJBCNY
     I              B0XKSX                      WJXKSX
     I              B0Y2NX                      WJY2NX
     I              B0U4SX                      WJU4SX
     I              B0ADNY                      WJADNY
     I              B0P7DT                      WJP7DT
     I              B0Z4NX                      WJZ4NX
     I              B0ACNY                      WJACNY
     I              B0CUNY                      WJCUNY
     I              B0CVNY                      WJCVNY
     I              B0UWSX                      WJUWSX
     I              B0UXSX                      WJUXSX
     I              B0V3SX                      WJV3SX
     I              B0AHNY                      WJAHNY
     I              B0AINY                      WJAINY
     I              B0AJNY                      WJAJNY
     I              B0AKNY                      WJAKNY
      *
     I@B0REHD
      * Item Balance              Co/Whse/Item
      * Renamed input format fields
     I              B0AIC3                      WKAIC3
     I              B0HGCD                      WKHGCD
     I              B0AJCD                      WKAJCD
     I              B0AGCS                      WKAGCS
     I              B0AECS                      WKAECS
     I              B0BACS                      WKBACS
     I              B0BBCS                      WKBBCS
     I              B0CBPR                      WKCBPR
     I              B0GUDT                      WKGUDT
     I              B0XYST                      WKXYST
     I              B0CTPR                      WKCTPR
     I              B0G4DT                      WKG4DT
     I              B0BOWG                      WKBOWG
     I              B0DDQT                      WKDDQT
     I              B0DEQT                      WKDEQT
     I              B0DFQT                      WKDFQT
     I              B0HDQT                      WKHDQT
     I              B0HEQT                      WKHEQT
     I              B0AJQT                      WKAJQT
     I              B0AQQT                      WKAQQT
     I              B0AUQT                      WKAUQT
     I              B0EMQT                      WKEMQT
     I              B0DOQT                      WKDOQT
     I              B0ATNA                      WKATNA
     I              B0AKDT                      WKAKDT
     I              B0ANDT                      WKANDT
     I              B0IDVA                      WKIDVA
     I              B0JVST                      WKJVST
     I              B0BZPC                      WKBZPC
     I              B0DGQT                      WKDGQT
     I              B0DIDT                      WKDIDT
     I              B0ALCD                      WKALCD
     I              B0BFDY                      WKBFDY
     I              B0DJDT                      WKDJDT
     I              B0BGDY                      WKBGDY
     I              B0DKDT                      WKDKDT
     I              B0J2ST                      WKJ2ST
     I              B0DJQT                      WKDJQT
     I              B0BNWG                      WKBNWG
     I              B0DLDT                      WKDLDT
     I              B0DPQT                      WKDPQT
     I              B0DQQT                      WKDQQT
     I              B0DMDT                      WKDMDT
     I              B0M0ST                      WKM0ST
     I              B0J9ST                      WKJ9ST
     I              B0KBST                      WKKBST
     I              B0AKC8                      WKAKC8
     I              B0RINB                      WKRINB
     I              B0RHNB                      WKRHNB
     I              B0RGNB                      WKRGNB
     I              B0UVST                      WKUVST
     I              B0UWST                      WKUWST
     I              B0UXST                      WKUXST
     I              B0VSST                      WKVSST
     I              B0AATM                      WKAATM
     I              B0AYNA                      WKAYNA
     I              B0A0NA                      WKA0NA
     I              B0AXDT                      WKAXDT
      *
     I@A4CPC4
      * EDI Whs Inv Inq Adv  HDR  Update index
      * Renamed input format fields
     I              A4H9NY                      WLH9NY
     I              A4HPAA                      WLHPAA
     I              A4A0ST                      WLA0ST
     I              A4XVAA                      WLXVAA
     I              A4XWAA                      WLXWAA
     I              A4IYU1                      WLIYU1
     I              A4HHSC                      WLHHSC
     I              A4HISC                      WLHISC
     I              A4ARTH                      WLARTH
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * TEST EL 846 XF
      * Validation / Reconcile AS400 Inventory.
      * CASE: *OTHERWISE
      * Upd Proc 846 Whs InvInqRT - EDI Whs Inv Inq Adv  HDR  * 
     C                   EXSR      SARVGN
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Upd Proc 846 Whs InvInqRT - EDI Whs Inv Inq Adv  HDR  * 
      *================================================================
      *
     C                   EVAL      WN0001 = ' '                                 EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 846 Error D
     C                   EVAL      WN0003 = ' '                                 Email Subject U
     C                   EVAL      WN0004 = ' '                                 Warehouse Code
     C                   Z-ADD     *ZERO         WN0005                         Shipping Compan
      *
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   Z-ADD     0             ZQ
     C     @CN(001)      CAT(P)    'le:':ZQ      YL0001                         Email Subject U
      * Establish starting position
     C     *LOVAL        SETLL     @P080DA                                      *
     C                   READ      @P080DA                                90    *
      * Data record not found
     C   90              MOVEL     'USR5066'     W0RTN
      * USER: Process Data record
      * Data Validation.
      * CASE: *OTHERWISE
      * Initialize.
      * CASE: *OTHERWISE
     C                   DOW       NOT *IN90
     C                   MOVEL     'N'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 846 Error D
     C                   EVAL      WN0003 = ' '                                 Email Subject U
      * Validate Trade Partner/Warehouse Code.
      * CASE: DB1.TRADE PARTNER CODE is Not Entered
     C                   IF        WAHPAA = ' '
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(002)      CAT(P)    'code.':ZQ    WN0002                         EDI 846 Error D
     C                   ELSE
      * CASE: *OTHERWISE
      * Rtv Warehouse/Company RT - EDI Whs Inv Inq Adv  NAM  * 
     C                   EXSR      SBRVGN
      * Ensure Warehouse/Company is Entered & Trade Partner Matches.
      * CASE: LCL.Warehouse Code is Blanks
     C                   IF        YL0002 = ' '
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 846 Error D
     C                   MOVEL     @CN(003)      WN0002                         EDI 846 Error D
     C                   ELSE
      * CASE: LCL.Company Number is Equal to zero
     C                   IF        YL0003 = 0
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 846 Error D
     C                   MOVEL     @CN(004)      WN0002                         EDI 846 Error D
     C                   ELSE
      * CASE: *OTHERWISE
      * Rtv WHS Interchg All  RT - EDI WHS Interchange  * 
     C                   EXSR      SERVGN
      * EDI Warehouse Code Found?
      * CASE: PGM.*Return code is *Normal
      * Trade Partner Mismatch / Not Active.
      * CASE: DB1.TRADE PARTNER CODE NE LCL.EDI Trading Partner No.
     C                   IF        W0RTN = ' '
     C                   IF        WAHPAA <> YL0005
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(002)      CAT(P)    'code.':ZQ    WN0002                         EDI 846 Error D
     C                   ELSE
      * CASE:
      *  - NOTc1
      *   |- c1    : LCL.Record Status is Active
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0006 = 'A'
     C                   ELSE
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(005)      CAT(P)    @CN(006):ZQ   WN0002                         EDI 846 Error D
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 846 Error D
     C                   MOVEL     @CN(007)      WN0002                         EDI 846 Error D
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * If Not in Error, Check Company/Warehouse Combination.
      * CASE:
      *  - NOTc1
      *   |- c1    : PAR.EDI-Record Processed is Error
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WN0001 = 'E'
     C                   ELSE
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
      * RMC s/check accounting company 4.18.19
      * RTV Shipping Co        RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   IF        Y0CX01 = '1'
     C                   MOVEL(P)  YL0002        WL0003                         Warehouse Code
     C                   EXSR      SFRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0004        YL0007                         Shipping Compan
      * Rtv Acct Co          RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0002        WL0001                         Warehouse Code
     C                   EXSR      SDRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0002        YL0008                         Accounting Comp
      * Company # from EDI NAM (ECP082) File Mismatch with Shipping Compa
      * CASE: LCL.Accounting Company NE LCL.Company Number
     C                   IF        YL0008 <> YL0003
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(008)      CAT(P)    @CN(009):ZQ   WN0002                         EDI 846 Error D
     C                   END                                                    *FI
     C                   END                                                    *FI
      * If Not in Error, Check Product Code.
      * CASE:
      *  - NOTc1
      *   |- c1    : PAR.EDI-Record Processed is Error
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WN0001 = 'E'
     C                   ELSE
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
      * Val Product Items      RT - EDI Whs Inv Inq Adv  LIN  * 
     C                   IF        Y0CX01 = '1'
     C                   EXSR      SGRVGN
     C                   END                                                    *FI
      * Validation Passed Then Update for Inventory Restoration.
      * CASE:
      *  - NOTc1
      *   |- c1    : PAR.EDI-Record Processed is Error
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WN0001 = 'E'
     C                   ELSE
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
      * inventory is by shipping company
      * Upd Inv Rest fm EDI 846RT - EDI Whs Inv Inq Adv  LIN  * 
     C                   IF        Y0CX01 = '1'
     C                   EXSR      SJRVGN
      * PRC EDI 846 Inv Rest   XF - Physical Count Control  * 
     C                   CALL      'PUGNXFR'                            90      PRC EDI 846 Inv
     C                   PARM      *BLANK        W0RTN
     C                   PARM      YL0007        WQ0018                         Company Number
     C                   PARM      YL0002        WQ0019                         Warehouse Code
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUGNXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * CASE: PAR.Warehouse Code SavUsr is Not Blanks
      * CHG TO PAR.SHIPPING CO   4.14.20 RMC
      * PRC EDI 846 Inv Rest   XF - Physical Count Control  * 
     C                   IF        WN0004 <> ' '
     C                   CALL      'PUGNXFR'                            90      PRC EDI 846 Inv
     C                   PARM      *BLANK        W0RTN
     C                   PARM      WN0005        WQ0020                         Company Number
     C                   PARM      WN0004        WQ0021                         Warehouse Code
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUGNXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
     C                   MOVEL     'Y'           WN0001                         EDI-Record Proc
      * Rtv Alpha Value       XF - Company Values  * 
     C                   CALL      'POMTXFR'                            90      Rtv Alpha Value
     C                   PARM      *BLANK        W0RTN
     C                   PARM      YL0003        WQ0022                         Company Number
     C                   PARM      @CN(019)      WQ0023                         Company Value C
     C     YL0031        PARM      *BLANK        WQ0024                         System Value Al
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'POMTXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   Z-ADD     1             ZQ
     C     @CN(020)      CAT(P)    YL0002:ZQ     YL0032                         Message Line 1
      * Setup message data for message
     C                   Z-ADD     WAH9NY        ZA0001                         EDI SURROGATE N
     C                   MOVEL     YL0031        ZA0002                         Email Address
     C                   MOVEL     YL0032        ZA0003                         Message Line 1
      *
      * Execute message
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   CALL      'Y2EXMCC'                            90      *
     C                   PARM      *BLANK        W0RTN                          Return code
     C                   PARM      'USR5091'     ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSGF = ' '
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   END
      *
      * Error detected during execution
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      *
     C                   END                                                    *FI
      * Chg Whs Inv Inq Adv HDRCH - EDI Whs Inv Inq Adv  HDR  * Upd EDI-R
     C                   EXSR      SPCHRC
     C                   READ      @P080DA                                90    *
     C                   ENDDO
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * Rtv Warehouse/Company RT - EDI Whs Inv Inq Adv  NAM  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0002 = ' '                                 Warehouse Code
     C                   Z-ADD     *ZERO         YL0003                         Company Number
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WQSB01                         EDI SURROGATE N
      * Setup key
     C                   Z-ADD     WAH9NY        WQSB01                         EDI SURROGATE N
      * Establish starting position
     C     KRSSB         SETLL     @A3CPC2                                      *
     C     KRSSB         READE     @A3CPC2                                90    *
      * Data record not found
     C   90              MOVEL     'USR5064'     W0RTN
      * USER: Process Data record
      * CASE: DB1.N101-NAME TYPE CODE is Warehouse
     C                   DOW       NOT *IN90
      * EUS TrimL Warehouse CdeUS - EDI Whs Inv Adj Adv   NAM  * 
     C                   IF        WBTYPC = 'WH'
      * Trim Left Warehouse Code.
     c                   eval      YL0002 = %triml(WBDCDE)
      *
      * Get EDI WHS INterchange override company 5/13/21 RMC if entered g
      * Rtv EDI Company # ovrd RT - EDI WHS Interchange  * 
     C                   EXSR      SCRVGN
      * CASE: LCL.EDI Company # 940 846 947 is Entered
      * Rtv Acct Co          RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0004 > 0
     C                   MOVEL(P)  YL0002        WL0001                         Warehouse Code
     C                   EXSR      SDRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0002        YL0003                         Accounting Comp
     C                   END                                                    *FI
     C                   ELSE
      * CASE:
      *  - c1 AND (c5ORc6ORc7)
      *   |- c1    : DB1.N101-NAME TYPE CODE is Company Number
      *   |- c5    : DB1.N104-ID CODE is Guymon 360
      *   |- c6    : DB1.N104-ID CODE is Sioux City 440
      *   |- c7    : DB1.N104-ID CODE is Triumph 960
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WBTYPC = 'B5'
     C                   MOVEL     '0'           Y0CX02
     C                   IF        WBDCDE = '360' OR
     C                             WBDCDE = '440' OR
     C                             WBDCDE = '960'
     C                   MOVEL     '1'           Y0CX02
     C                   END                                                    *FI
     C                   IF        Y0CX02 = '1'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Hard Coding Company Number.
      * CASE: DB1.N104-ID CODE is Guymon 360
     C                   IF        Y0CX01 = '1'
     C                   IF        WBDCDE = '360'
     C                   Z-ADD     360           YL0003                         Company Number
     C                   ELSE
      * CASE: DB1.N104-ID CODE is Sioux City 440
     C                   IF        WBDCDE = '440'
     C                   Z-ADD     440           YL0003                         Company Number
     C                   ELSE
      * CASE: DB1.N104-ID CODE is Triumph 960
     C                   IF        WBDCDE = '960'
     C                   Z-ADD     960           YL0003                         Company Number
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSB         READE     @A3CPC2                                90    *
     C                   ENDDO
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * Rtv EDI Company # ovrd RT - EDI WHS Interchange  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   Z-ADD     *ZERO         YL0004                         EDI Company # 9
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    WCAJCD                         Warehouse Code
     C                   KFLD                    WCM4AA                         Interchange Cod
      * Setup key
     C                   MOVEL     YL0002        WCAJCD                         Warehouse Code
     C                   MOVEL     'WHSRST'      WCM4AA                         Interchange Cod
      * Establish starting position
     C     KRSSC         CHAIN     @G0REJZ                            90        *
      * Data record not found
     C   90              MOVEL     'USR4409'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     WCF5NZ        YL0004                         EDI Company # 9
     C                   ENDIF
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * Rtv Acct Co          RT - Warehouse  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    WDAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     WL0001        WDAJCD                         Warehouse Code
      * Establish starting position
     C     KRSSD         CHAIN     @ADREAO                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0007'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0002                         Accounting Comp
     C                   GOTO      SDEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     WDBTC3        WL0002                         Accounting Comp
     C                   ENDIF
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SERVGN        BEGSR
      *================================================================
      * Rtv WHS Interchg All  RT - EDI WHS Interchange  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0005 = ' '                                 EDI Trading Par
     C                   EVAL      YL0006 = ' '                                 Record Status
      * Define keylist
     C     KRSSE         KLIST
     C                   KFLD                    WCAJCD                         Warehouse Code
     C                   KFLD                    WCM4AA                         Interchange Cod
      * Setup key
     C                   MOVEL     YL0002        WCAJCD                         Warehouse Code
     C                   MOVEL     'WHSRST'      WCM4AA                         Interchange Cod
      * Establish starting position
     C     KRSSE         CHAIN     @G0REJZ                            90        *
      * Data record not found
     C   90              MOVEL     'USR4409'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WCJ5NX        YL0005                         EDI Trading Par
     C                   MOVEL     WCVSST        YL0006                         Record Status
     C                   ENDIF
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFRVGN        BEGSR
      *================================================================
      * RTV Shipping Co        RT - Warehouse  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSF         KLIST
     C                   KFLD                    WDAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     WL0003        WDAJCD                         Warehouse Code
      * Establish starting position
     C     KRSSF         CHAIN     @ADREAO                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0007'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0004                         Shipping Compan
     C                   GOTO      SFEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     WDBWC3        WL0004                         Shipping Compan
     C                   ENDIF
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * Val Product Items      RT - EDI Whs Inv Inq Adv  LIN  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WN0001 = ' '                                 EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 846 Error D
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    WQSG01                         EDI SURROGATE N
      * Setup key
     C                   Z-ADD     WAH9NY        WQSG01                         EDI SURROGATE N
      * Establish starting position
     C     KRSSG         SETLL     @A5CPC8                                      *
     C     KRSSG         READE     @A5CPC8                                90    *
      * Data record not found
     C   90              MOVEL     'USR5068'     W0RTN
      * USER: Process Data record
      * Validate Product.
      * CASE: DB1.LN03 PRODUCT CODE is Entered
     C                   DOW       NOT *IN90
      * Val Company/Item Exist RT - Company Item  * 
     C                   IF        WECWNZ <> 0
     C                   EXSR      SHRVGN
      * Record Found?
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(010)      CAT(P)    @CN(009):ZQ   WN0002                         EDI 846 Error D
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 846 Error D
     C                   MOVEL     @CN(011)      WN0002                         EDI 846 Error D
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
      * Validate Reference Status Code.
      * CASE: DB1.REF02 REFERENCE STATUS CD is All except AU
      * was all values until AU was added to the 947 - 5/5/20 RMC
     C                   IF        WEHJSC = 'AL' OR
     C                             WEHJSC = 'AV' OR
     C                             WEHJSC = ' ' OR
     C                             WEHJSC = 'BL' OR
     C                             WEHJSC = 'HO' OR
     C                             WEHJSC = 'QU'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(012)      CAT(P)    'code.':ZQ    WN0002                         EDI 846 Error D
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
      * Validate Production Date.
      * CASE: DB1.DTM02 PRODUCTION DATE is Entered
      * EUS Val Production Dte US - EDI Whs Inv Adj Adv   DTL  * 
     C                   IF        WECXNZ <> 0
      * Check Production Date is a Valid Date.
      *
     c                   eval      YL0009 = 'Y'
     c                   eval      wkccyymmdd = %char(WECXNZ)                   Convert to Charc.
      /free
       test(de) *iso0 wkccyymmdd ;
       if %error() ;
         YL0009 = 'N' ;  // Invalid Date
       endif ;
      /end-free
      *
      * Invalid Date.
      * CASE: LCL.Validation Pass USR is No
     C                   IF        YL0009 = 'N'
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 846 Error D
     C                   MOVEL     @CN(013)      WN0002                         EDI 846 Error D
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 846 Error D
     C                   MOVEL     @CN(013)      WN0002                         EDI 846 Error D
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
      * Validate Net Weight -- dont error -- send email
      * CASE: DB1.MEA03 MEASURE NET WGT is Not Entered
     C                   IF        WENQVL = 0
     C                   Z-ADD     1             ZQ
     C     @CN(014)      CAT(P)    @CN(015):ZQ   YL0010                         FILLER3
     C                   Z-ADD     1             ZQ
     C     @CN(016)      CAT(P)    YL0010:ZQ     YL0011                         W1906 PRODUCT
     C                   EVAL      YL0012 = ' '                                 Item Code Txt
     C                   MOVEL     WECWNZ        YL0012                         Item Code Txt
      * Format Email Subject & Message and Send Email.
     C                   Z-ADD     0             ZQ
     C     @CN(001)      CAT(P)    'le:':ZQ      YL0013                         Email Subject U
     C                   EVAL      YL0014 = ' '                                 EDI Surrogate N
     C                   MOVEL     WEH9NY        YL0014                         EDI Surrogate N
      * EUS TrimL Surrogate #  US - EDI Whs Inv Adj Adv   HDR  * 
      * Trim Left EDI Surrogate Number; Suppress Leading Zero.
     c                   eval      YL0014 = %triml(YL0014 : '0 ')
      *
     C                   Z-ADD     1             ZQ
     C     YL0013        CAT(P)    @CN(017):ZQ   YL0013                         Email Subject U
     C                   Z-ADD     1             ZQ
     C     YL0014        CAT(P)    YL0002:ZQ     YL0015                         Text usr 14
     C                   Z-ADD     1             ZQ
     C     YL0013        CAT(P)    YL0015:ZQ     YL0013                         Email Subject U
     C                   Z-ADD     1             ZQ
     C     YL0011        CAT(P)    YL0012:ZQ     YL0016                         Email Message U
      * Default Company to 360 if Zero.
      * CASE: LCL.Company Number is Equal to zero
     C                   IF        YL0017 = 0
     C                   Z-ADD     360           YL0017                         Company Number
     C                   END                                                    *FI
      * Exc ESNDMAIL Generic  IF
      * Execute ESNDMAIL to Send Email Message.
      * RTV Alpha Value 2     RT - Company Values  * Get Email Address
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0017        WL0005                         Company Number
     C                   MOVEL(P)  @CN(018)      WL0006                         Company Value C
     C                   EXSR      SIRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0007        YL0018                         System Value Al
      * CASE: LCL.Email Address is Entered
      * Exc ESNDMAIL Generic  CL - /UT User Programs  * Send Email
     C                   IF        YL0018 <> ' '
     C                   CALL      'PUE8UPC'                            90      Exc ESNDMAIL Ge
     C                   PARM      YL0018        WQ0001                         Email Address
     C                   PARM      YL0013        WQ0002                         Email Subject U
     C                   PARM      YL0016        WQ0003                         Email Message U
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUE8UPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSG         READE     @A5CPC8                                90    *
     C                   ENDDO
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   SHRVGN        BEGSR
      *================================================================
      * Val Company/Item Exist RT - Company Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSH         KLIST
     C                   KFLD                    WFAIC3                         Company Number
     C                   KFLD                    WFHGCD                         Item Code
      * Setup key
     C                   Z-ADD     YL0003        WFAIC3                         Company Number
     C                   Z-ADD     WECWNZ        WFHGCD                         Item Code
      * Establish starting position
     C     KRSSH         CHAIN     @BZREJU                            90        *
      * Data record not found
     C   90              MOVEL     'USR0326'     W0RTN
      *================================================================
     CSR   SHEXIT        ENDSR
      /EJECT
     CSR   SIRVGN        BEGSR
      *================================================================
      * RTV Alpha Value 2     RT - Company Values  * Get Email Address
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0007 = ' '                                 System Value Al
      * Define keylist
     C     KRSSI         KLIST
     C                   KFLD                    WGAIC3                         Company Number
     C                   KFLD                    WGV8CD                         Company Value C
      * Setup key
     C                   Z-ADD     WL0005        WGAIC3                         Company Number
     C                   MOVEL     WL0006        WGV8CD                         Company Value C
      * Establish starting position
     C     KRSSI         CHAIN     @KMREHC                            90        *
      * Data record not found
     C   90              MOVEL     'USR2221'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WGBXTX        WL0007                         System Value Al
     C                   ENDIF
      *================================================================
     CSR   SIEXIT        ENDSR
      /EJECT
     CSR   SJRVGN        BEGSR
      *================================================================
      * Upd Inv Rest fm EDI 846RT - EDI Whs Inv Inq Adv  LIN  * 
      *================================================================
      *
     C                   Z-ADD     *ZERO         WN0006                         PFS Transaction
     C                   Z-ADD     *ZERO         WN0007                         PFS Transaction
     C                   Z-ADD     *ZERO         WN0008                         Job Time
     C                   Z-ADD     *ZERO         WN0009                         Job Time User
      *
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * Get System Date       US - /UT User Source  * 
      * Get System Date - CCYYMMDD
     c                   eval      YL0019 = *date
     C                   Z-ADD     YL0019        WN0006                         PFS Transaction
      * dont zero the trans seq - needs to increment for all 4.25.19 RMC
      * RTV System Date/Time   UP - /UT User Programs  * 
     C                   CALL      'PDGFUPC'                            90      RTV System Date
     C     YL0020        PARM      *ZERO         WQ0004                         Current System
     C     YL0021        PARM      *ZERO         WQ0005                         Current System
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDGFUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
      * PAR.Job Time = LCL.Current System Time
     C                   Z-ADD     YL0021        WN0008                         Job Time
      * PAR.Job Time User = PAR.Job Time + CON.1 *MINUTES
     C                   Z-ADD     WN0008        XTTIM
     C                   Z-ADD     *ZERO         XASC
     C                   EXSR      XTAD1
     C     60            MULT      1             XDWK1
     C                   ADD       XDWK1         XASC
     C                   EXSR      XTCT1
     C                   Z-ADD     XTTIM         WN0009
     C                   EVAL      WN0004 = ' '                                 Warehouse Code
     C                   Z-ADD     *ZERO         WN0005                         Shipping Compan
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSJ         KLIST
     C                   KFLD                    WQSJ01                         EDI SURROGATE N
      * Setup key
     C                   Z-ADD     WAH9NY        WQSJ01                         EDI SURROGATE N
      * Establish starting position
     C     KRSSJ         SETLL     @A5CPC8                                      *
     C     KRSSJ         READE     @A5CPC8                                90    *
      * Data record not found
     C   90              MOVEL     'USR5068'     W0RTN
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   ADD       1             WN0007                         PFS Transaction
      * CASE:
      *  - c1ORc2ORc3
      *   |- c1    : DB1.REF02 REFERENCE STATUS CD is Available
      *   |- c2    : DB1.REF02 REFERENCE STATUS CD is Available (blank)
      *   |- c3    : DB1.REF02 REFERENCE STATUS CD is Hold
      *   '-
      * RMC Added "HO" particularily for Nor-am   1/14/19
      * CASE: DB1.MEA03 MEASURE NET WGT is Not Entered
     C                   IF        WEHJSC = 'AV' OR
     C                             WEHJSC = ' ' OR
     C                             WEHJSC = 'HO'
      * RTV Unit Weight        RT - Company Item  * 
     C                   IF        WENQVL = 0
     C                   EXSR      SKRVGN
     C     YL0022        MULT      WESPQT        YL0024                         MEA03 MEASURE N
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     WENQVL        YL0024                         MEA03 MEASURE N
     C                   END                                                    *FI
      * MANIPULATE THE WAREHOUSES IF NA3 OR NA5 ELSE WRITE RCD  RMC 4.23.
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.Warehouse Code is NA3 Nor Am-Fresh-360
      *   |- c2    : PAR.Warehouse Code is NA5 Nor Am-Fresh-960
      *   '-
     C                   IF        YL0002 = 'NA3' OR
     C                             YL0002 = 'NA5'
     C                   MOVEL     YL0002        YL0025                         Warehouse Code
     C                   Z-ADD     YL0007        YL0026                         Shipping Compan
     C                   Z-ADD     WN0008        YL0027                         Job Time
      * change to item dft..item not active for all companies!   10/16/19
      * Rtv Sold 100% FZ      RT - Item Default  * 
     C                   EXSR      SLRVGN
      * Change 100% frozen product in NA3 to NA8 (101257 = No longer 100%
      * CASE: PAR.Warehouse Code is NA3 Nor Am-Fresh-360
      * W101257 DN 06/20/22-Removed test: LCL.Sold 100% Frozen is yes
     C                   IF        YL0002 = 'NA3'
     C                   MOVEL     'NA8'         YL0025                         Warehouse Code
     C                   MOVEL     'NA8'         WN0004                         Warehouse Code
      * RTV Shipping Co        RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  WN0004        WL0003                         Warehouse Code
     C                   EXSR      SFRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0004        WN0005                         Shipping Compan
     C                   Z-ADD     WN0005        YL0026                         Shipping Compan
     C                   END                                                    *FI
      * Change 100% frozen product in NA5 to NA6
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Warehouse Code is NA5 Nor Am-Fresh-960
      *   |- c2    : LCL.Sold 100% Frozen is yes
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0002 = 'NA5'
     C                   IF        YL0028 = 'Y'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'NA6'         YL0025                         Warehouse Code
     C                   MOVEL     'NA6'         WN0004                         Warehouse Code
      * RTV Shipping Co        RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  WN0004        WL0003                         Warehouse Code
     C                   EXSR      SFRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0004        WN0005                         Shipping Compan
     C                   Z-ADD     WN0005        YL0026                         Shipping Compan
     C                   END                                                    *FI
      * Crt PFS Inventory Rest CR - PFS Inventory Restoration  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0026        WL0008                         PFS Company Num
     C                   Z-ADD     WN0006        WL0009                         PFS Transaction
     C                   Z-ADD     YL0027        WL0010                         PFS Transaction
     C                   Z-ADD     WN0007        WL0011                         PFS Transaction
     C                   MOVEL(P)  '0'           WL0012                         PFS Inv Hold Re
     C                   Z-ADD     WECWNZ        WL0013                         PFS Item Code
     C                   MOVEL(P)  YL0025        WL0014                         PFS Warehouse C
     C                   Z-ADD     *ZERO         WL0015                         PFS Location Co
     C                   Z-ADD     WECXNZ        WL0016                         PFS Production
     C                   Z-ADD     WECXNZ        WL0017                         PFS Label Date
     C                   Z-ADD     *ZERO         WL0018                         PFS Receive Loc
     C                   Z-ADD     WESPQT        WL0019                         PFS On Hand Qua
     C                   Z-ADD     YL0024        WL0020                         PFS On Hand Wei
     C                   MOVEL(P)  'A'           WL0021                         PFS Record Stat
     C                   Z-ADD     *ZERO         WL0022                         PFS Process Sta
     C                   EVAL      WL0023 = ' '                                 PFS Error Reaso
     C                   Z-ADD     WN0006        WL0024                         PFS Create Date
     C                   Z-ADD     ##JTM         WL0025                         PFS Create Time
     C                   Z-ADD     *ZERO         WL0026                         PFS Change Date
     C                   Z-ADD     *ZERO         WL0027                         PFS Change time
     C                   EXSR      SMCRRC
     C                   ELSE
      * CASE: *OTHERWISE
      * Crt PFS Inventory Rest CR - PFS Inventory Restoration  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0007        WL0008                         PFS Company Num
     C                   Z-ADD     WN0006        WL0009                         PFS Transaction
     C                   Z-ADD     WN0008        WL0010                         PFS Transaction
     C                   Z-ADD     WN0007        WL0011                         PFS Transaction
     C                   MOVEL(P)  '0'           WL0012                         PFS Inv Hold Re
     C                   Z-ADD     WECWNZ        WL0013                         PFS Item Code
     C                   MOVEL(P)  YL0002        WL0014                         PFS Warehouse C
     C                   Z-ADD     *ZERO         WL0015                         PFS Location Co
     C                   Z-ADD     WECXNZ        WL0016                         PFS Production
     C                   Z-ADD     WECXNZ        WL0017                         PFS Label Date
     C                   Z-ADD     *ZERO         WL0018                         PFS Receive Loc
     C                   Z-ADD     WESPQT        WL0019                         PFS On Hand Qua
     C                   Z-ADD     YL0024        WL0020                         PFS On Hand Wei
     C                   MOVEL(P)  'A'           WL0021                         PFS Record Stat
     C                   Z-ADD     *ZERO         WL0022                         PFS Process Sta
     C                   EVAL      WL0023 = ' '                                 PFS Error Reaso
     C                   Z-ADD     WN0006        WL0024                         PFS Create Date
     C                   Z-ADD     ##JTM         WL0025                         PFS Create Time
     C                   Z-ADD     *ZERO         WL0026                         PFS Change Date
     C                   Z-ADD     *ZERO         WL0027                         PFS Change time
     C                   EXSR      SMCRRC
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSJ         READE     @A5CPC8                                90    *
     C                   ENDDO
      * USER: Exit processing
      * Make PFS Inv Rest rcd for NA3 or  NA5 if it came in 846 but no it
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.Warehouse Code is NA3 Nor Am-Fresh-360
      *   |- c2    : PAR.Warehouse Code is NA5 Nor Am-Fresh-960
      *   '-
      * we need this so Physical count control will be made, and proc wil
      *  remove inventory if no longer there.
      * Rtv Total Records-dt  RT - PFS Inventory Restoration  * 
     C                   IF        YL0002 = 'NA3' OR
     C                             YL0002 = 'NA5'
     C                   EXSR      SNRVGN
      * CASE: LCL.Count Records        USR is Zero
      * rtv 1st item that has on hand inventory - use it to make a pfs re
      * RTV On Hand Qty-1stItmRT - Item Balance  * 
     C                   IF        YL0029 = 0
     C                   EXSR      SORVGN
      * CASE: LCL.Item Code is Entered
     C                   IF        YL0030 <> 0
     C                   ADD       1             WN0007                         PFS Transaction
      * Crt PFS Inventory Rest CR - PFS Inventory Restoration  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0007        WL0008                         PFS Company Num
     C                   Z-ADD     WN0006        WL0009                         PFS Transaction
     C                   Z-ADD     WN0008        WL0010                         PFS Transaction
     C                   Z-ADD     WN0007        WL0011                         PFS Transaction
     C                   MOVEL(P)  '0'           WL0012                         PFS Inv Hold Re
     C                   Z-ADD     YL0030        WL0013                         PFS Item Code
     C                   MOVEL(P)  YL0002        WL0014                         PFS Warehouse C
     C                   Z-ADD     *ZERO         WL0015                         PFS Location Co
     C                   Z-ADD     WECXNZ        WL0016                         PFS Production
     C                   Z-ADD     WECXNZ        WL0017                         PFS Label Date
     C                   Z-ADD     *ZERO         WL0018                         PFS Receive Loc
     C                   Z-ADD     *ZERO         WL0019                         PFS On Hand Qua
     C                   Z-ADD     *ZERO         WL0020                         PFS On Hand Wei
     C                   MOVEL(P)  'A'           WL0021                         PFS Record Stat
     C                   Z-ADD     *ZERO         WL0022                         PFS Process Sta
     C                   EVAL      WL0023 = ' '                                 PFS Error Reaso
     C                   Z-ADD     WN0006        WL0024                         PFS Create Date
     C                   Z-ADD     ##JTM         WL0025                         PFS Create Time
     C                   Z-ADD     *ZERO         WL0026                         PFS Change Date
     C                   Z-ADD     *ZERO         WL0027                         PFS Change time
     C                   EXSR      SMCRRC
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Exc Upd EDI OnHn w/int XF - WF EDI Whs Stk Txfr Intr  * 
     C                   CALL      'PUJBXFR'                            90      Exc Upd EDI OnH
     C                   PARM      *BLANK        W0RTN
     C                   PARM      YL0002        WQ0006                         Warehouse Code
     C                   PARM      YL0007        WQ0007                         Company Number
     C                   PARM      YL0007        WQ0008                         PFS Company Num
     C                   PARM      WN0006        WQ0009                         PFS Transaction
     C                   PARM      WN0008        WQ0010                         PFS Transaction
     C     WN0007        PARM      WN0007        WQ0011                         PFS Transaction
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUJBXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * CASE: PAR.Warehouse Code SavUsr is Not Blanks
      * RMC CHG SHIPPING CO.. WAS USING WRONG ONE 4.14.20
      * Exc Upd EDI OnHn w/int XF - WF EDI Whs Stk Txfr Intr  * 
     C                   IF        WN0004 <> ' '
     C                   CALL      'PUJBXFR'                            90      Exc Upd EDI OnH
     C                   PARM      *BLANK        W0RTN
     C                   PARM      WN0004        WQ0012                         Warehouse Code
     C                   PARM      YL0026        WQ0013                         Company Number
     C                   PARM      YL0026        WQ0014                         PFS Company Num
     C                   PARM      WN0006        WQ0015                         PFS Transaction
     C                   PARM      WN0009        WQ0016                         PFS Transaction
     C     WN0007        PARM      WN0007        WQ0017                         PFS Transaction
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUJBXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
      *================================================================
     CSR   SJEXIT        ENDSR
      /EJECT
     CSR   SKRVGN        BEGSR
      *================================================================
      * RTV Unit Weight        RT - Company Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSK         KLIST
     C                   KFLD                    WFAIC3                         Company Number
     C                   KFLD                    WFHGCD                         Item Code
      * Setup key
     C                   Z-ADD     YL0007        WFAIC3                         Company Number
     C                   Z-ADD     WECWNZ        WFHGCD                         Item Code
      * Establish starting position
     C     KRSSK         CHAIN     @BZREJU                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0326'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         YL0022                         Unit Weight
     C                   EVAL      YL0023 = ' '                                 Quality Level
     C                   GOTO      SKEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     WFAIWG        YL0022                         Unit Weight
     C                   MOVEL     WFHICD        YL0023                         Quality Level
     C                   ENDIF
      *================================================================
     CSR   SKEXIT        ENDSR
      /EJECT
     CSR   SLRVGN        BEGSR
      *================================================================
      * Rtv Sold 100% FZ      RT - Item Default  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSL         KLIST
     C                   KFLD                    WHHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WECWNZ        WHHGCD                         Item Code
      * Establish starting position
     C     KRSSL         CHAIN     @BYREA1                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR1160'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      YL0028 = ' '                                 Sold 100 Percen
     C                   GOTO      SLEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WHS4ST        YL0028                         Sold 100 Percen
     C                   ENDIF
      *================================================================
     CSR   SLEXIT        ENDSR
      /EJECT
     CSR   SMCRRC        BEGSR
      *================================================================
      * Crt PFS Inventory Rest CR - PFS Inventory Restoration  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @B0CPD1
     C                   Z-ADD     WL0008        WIY1NX                         PFS Company Num
     C                   Z-ADD     WL0009        WIAID8                         PFS Transaction
     C                   Z-ADD     WL0010        WIAFTS                         PFS Transaction
     C                   Z-ADD     WL0011        WIBCNY                         PFS Transaction
     C                   MOVEL     WL0012        WIXKSX                         PFS Inv Hold Re
     C                   Z-ADD     WL0013        WIY2NX                         PFS Item Code
     C                   MOVEL     WL0014        WIU4SX                         PFS Warehouse C
     C                   Z-ADD     WL0015        WIADNY                         PFS Location Co
     C                   Z-ADD     WL0016        WIP7DT                         PFS Production
     C                   Z-ADD     WL0017        WIZ4NX                         PFS Label Date
     C                   Z-ADD     WL0018        WIACNY                         PFS Receive Loc
     C                   Z-ADD     WL0019        WICUNY                         PFS On Hand Qua
     C                   Z-ADD     WL0020        WICVNY                         PFS On Hand Wei
     C                   MOVEL     WL0021        WIUWSX                         PFS Record Stat
     C                   Z-ADD     WL0022        WIUXSX                         PFS Process Sta
     C                   MOVEL     WL0023        WIV3SX                         PFS Error Reaso
     C                   Z-ADD     WL0024        WIAHNY                         PFS Create Date
     C                   Z-ADD     WL0025        WIAINY                         PFS Create Time
     C                   Z-ADD     WL0026        WIAJNY                         PFS Change Date
     C                   Z-ADD     WL0027        WIAKNY                         PFS Change time
      *
     C     KLCRSM        KLIST
     C                   KFLD                    WIY1NX                         PFS Company Num
     C                   KFLD                    WIAID8                         PFS Transaction
     C                   KFLD                    WIAFTS                         PFS Transaction
     C                   KFLD                    WIBCNY                         PFS Transaction
      * Check for duplicate primary key
     C     KLCRSM        SETLL     @B0CPD1                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR3581'     W0RTN
      * Send message 'PFS Inventory Restorat EX'
     C                   MOVEL     'USR3581'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SMEXIT
     C                   ENDIF
      *
     C                   WRITE     @B0CPD1                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SMEXIT        ENDSR
      /EJECT
     CSR   SNRVGN        BEGSR
      *================================================================
      * Rtv Total Records-dt  RT - PFS Inventory Restoration  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   Z-ADD     *ZERO         YL0029                         Count Records
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSN         KLIST
     C                   KFLD                    WQSN01                         PFS Company Num
     C                   KFLD                    WQSN02                         PFS Warehouse C
     C                   KFLD                    WQSN03                         PFS Transaction
     C                   KFLD                    WQSN04                         PFS Transaction
      * Setup key
     C                   Z-ADD     YL0007        WQSN01                         PFS Company Num
     C                   MOVEL     YL0002        WQSN02                         PFS Warehouse C
     C                   Z-ADD     WN0006        WQSN03                         PFS Transaction
     C                   Z-ADD     WN0008        WQSN04                         PFS Transaction
      * Establish starting position
     C     KRSSN         SETLL     @B0CPEP                                      *
     C     KRSSN         READE     @B0CPEP                                90    *
      * Data record not found
     C   90              MOVEL     'USR3580'     W0RTN
      * USER: Process Data record
      * CASE: DB1.PFS Process Status is Not Processed
     C                   DOW       NOT *IN90
     C                   IF        WJUXSX = 0
     C                   ADD       1             YL0029                         Count Records
     C                   END                                                    *FI
     C     KRSSN         READE     @B0CPEP                                90    *
     C                   ENDDO
      *================================================================
     CSR   SNEXIT        ENDSR
      /EJECT
     CSR   SORVGN        BEGSR
      *================================================================
      * RTV On Hand Qty-1stItmRT - Item Balance  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   Z-ADD     *ZERO         YL0030                         Item Code
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSO         KLIST
     C                   KFLD                    WQSO01                         Company Number
     C                   KFLD                    WQSO02                         Warehouse Code
      * Setup key
     C                   Z-ADD     YL0007        WQSO01                         Company Number
     C                   MOVEL     YL0002        WQSO02                         Warehouse Code
      * Establish starting position
     C     KRSSO         SETLL     @B0REHD                                      *
     C     KRSSO         READE     @B0REHD                                90    *
      * Data record not found
     C   90              MOVEL     'USR0328'     W0RTN
      * USER: Process Data record
      * CASE: DB1.On Hand U/M1 Summary is Greater than zero
     C                   DOW       NOT *IN90
     C                   IF        WKDDQT > 0
     C                   Z-ADD     WKHGCD        YL0030                         Item Code
     C                   GOTO      SOEXIT                                       *QUIT
     C                   END                                                    *FI
     C     KRSSO         READE     @B0REHD                                90    *
     C                   ENDDO
      *================================================================
     CSR   SOEXIT        ENDSR
      /EJECT
     CSR   SPCHRC        BEGSR
      *================================================================
      * Chg Whs Inv Inq Adv HDRCH - EDI Whs Inv Inq Adv  HDR  * Upd EDI-
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @A4CPC4
     C                   Z-ADD     WAH9NY        WLH9NY                         EDI SURROGATE N
      *
     C     KLCHSP        KLIST
     C                   KFLD                    WLH9NY                         EDI SURROGATE N
     C     KLCHSP        CHAIN     @A4CPC4                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'ECP080L0'    MDACP
     C                   MOVEL     '@A4CPC4'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SPEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SPEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QECP01        YARDCS
      * Move non-key fields to @A4CPC4
     C                   MOVEL(P)  WAHPAA        WLHPAA                         TRADE PARTNER C
     C                   MOVEL(P)  WN0001        WLA0ST                         EDI-Record Proc
     C                   MOVEL(P)  WAXVAA        WLXVAA                         BIA01 Trans Set
     C                   MOVEL(P)  WAXWAA        WLXWAA                         BAI02 Report Ty
     C                   MOVEL(P)  WAIYU1        WLIYU1                         BAI03 Reference
     C                   Z-ADD     WAHHSC        WLHHSC                         BAI04 Adjustmen
     C                   MOVEL(P)  WAHISC        WLHISC                         BAI06 Action Co
     C                   Z-ADD     WAARTH        WLARTH                         BAI05 Adjustmen
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QECP01 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @A4CPC4                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    ECP080L0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SPEXIT        ENDSR
      /EJECT
     CSR   XTAD1         BEGSR
      *================================================================
      * Add TME to absolute time (seconds)
      *================================================================
     C     XTHH          MULT      3600          XDWK1
     C                   ADD       XDWK1         XASC
     C     XTNN          MULT      60            XDWK1
     C                   ADD       XDWK1         XASC
     C                   ADD       XTSS          XASC
      *================================================================
     CSR   XTAD1E        ENDSR
      /EJECT
     CSR   XTCT1         BEGSR
      *================================================================
      * Convert absolute time (seconds) to TME
      *================================================================
     C                   EXSR      XTFCT
     C     XASC          DIV       60            XASC
     C                   MVR                     XTSS
     C     XASC          DIV       60            XASC
     C                   MVR                     XTNN
     C                   Z-ADD     XASC          XTHH
      *================================================================
     CSR   XTCT1E        ENDSR
      /EJECT
     CSR   XTFCT         BEGSR
      *================================================================
      * Factorize absolute date (seconds) by 24 hours
      *================================================================
     C                   IF        XASC >= 86400
     C                   DIV       86400         XASC
     C                   MVR                     XASC
     C                   ELSE
     C                   IF        XASC <= *ZERO
     C                   DIV       86400         XASC
     C                   MVR                     XASC
     C                   IF        XASC <> *ZERO
     C                   ADD       86400         XASC
     C                   END
     C                   END
     C                   END
      *================================================================
     CSR   XTFCTE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAH9NY                         EDI SURROGATE N
     C                   Z-ADD     *ZERO         WAHHSC                         BAI04 Adjustmen
     C                   Z-ADD     *ZERO         WAARTH                         BAI05 Adjustmen
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WBH9NY                         EDI SURROGATE N
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WCF5NZ                         EDI Company # 9
     C                   Z-ADD     *ZERO         WCF6NZ                         Hold til ship w
     C                   Z-ADD     *ZERO         WCMJDT                         Create Date
     C                   Z-ADD     *ZERO         WCBETM                         Create Time
     C                   Z-ADD     *ZERO         WCMKDT                         Change Date
     C                   Z-ADD     *ZERO         WCBFTM                         Change Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WDDBNB                         Warehouse Chill
     C                   Z-ADD     *ZERO         WDBWC3                         Shipping Compan
     C                   Z-ADD     *ZERO         WDBTC3                         Accounting Comp
     C                   Z-ADD     *ZERO         WDBUC3                         WHS Sched Prod
     C                   Z-ADD     *ZERO         WDBVC3                         WHS Inventory C
     C                   Z-ADD     *ZERO         WDAATM                         Job Time
     C                   Z-ADD     *ZERO         WDAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WEH9NY                         EDI SURROGATE N
     C                   Z-ADD     *ZERO         WECWNZ                         LN03 PRODUCT CO
     C                   Z-ADD     *ZERO         WENPVL                         MEA03 MEASURE G
     C                   Z-ADD     *ZERO         WENQVL                         MEA03 MEASURE N
     C                   Z-ADD     *ZERO         WECXNZ                         DTM02 PRODUCTIO
     C                   Z-ADD     *ZERO         WESPQT                         QTY02 QUANTITY
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WFAIC3                         Company Number
     C                   Z-ADD     *ZERO         WFHGCD                         Item Code
     C                   Z-ADD     *ZERO         WFAWPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WFAXPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WFAIWG                         Unit Weight
     C                   Z-ADD     *ZERO         WFCZWG                         Minimum Weight
     C                   Z-ADD     *ZERO         WFC0WG                         Maximum Weight
     C                   Z-ADD     *ZERO         WFURTN                         Number Cases On
     C                   Z-ADD     *ZERO         WFAJC8                         Vendor Item Def
     C                   Z-ADD     *ZERO         WFRINB                         Item Structure
     C                   Z-ADD     *ZERO         WFRHNB                         Item Structure
     C                   Z-ADD     *ZERO         WFRGNB                         Item Structure
     C                   Z-ADD     *ZERO         WFTFNB                         Transportation
     C                   Z-ADD     *ZERO         WFTMVA                         Maximum Audit V
     C                   Z-ADD     *ZERO         WFTNVA                         Minimum Audit V
     C                   Z-ADD     *ZERO         WFBLPR                         Market Overage
     C                   Z-ADD     *ZERO         WFBMPR                         Standard Overag
     C                   Z-ADD     *ZERO         WFCMCO                         Item Pricing Co
     C                   Z-ADD     *ZERO         WFCHTM                         Fresh Chilling
     C                   Z-ADD     *ZERO         WFSWGH                         Std Weight_Head
     C                   Z-ADD     *ZERO         WFPPHE                         Pieces Per Head
     C                   Z-ADD     *ZERO         WFICN1                         Item Category N
     C                   Z-ADD     *ZERO         WFICN2                         Item Category N
     C                   Z-ADD     *ZERO         WFV2NB                         Item Category N
     C                   Z-ADD     *ZERO         WFITCN                         Item Category N
     C                   Z-ADD     *ZERO         WFITC5                         Item Category N
     C                   Z-ADD     *ZERO         WFICN6                         Item Category N
     C                   Z-ADD     *ZERO         WFICN7                         Item Category N
     C                   Z-ADD     *ZERO         WFICN8                         Item Category N
     C                   Z-ADD     *ZERO         WFICN9                         Item Category N
     C                   Z-ADD     *ZERO         WFICN0                         Item Category N
     C                   Z-ADD     *ZERO         WFSFNB                         Pallet Tare Wei
     C                   Z-ADD     *ZERO         WFA3WG                         Misc Tare Weigh
     C                   Z-ADD     *ZERO         WFSJNB                         Production Lead
     C                   Z-ADD     *ZERO         WFSKNB                         Agrimetrics gro
     C                   Z-ADD     *ZERO         WFSLNB                         Agrimetrics pac
     C                   Z-ADD     *ZERO         WFSMNB                         Agrimetrics gra
     C                   Z-ADD     *ZERO         WFCFNB                         PM Pounds per H
     C                   Z-ADD     *ZERO         WFCGNB                         Item Frt Overag
     C                   Z-ADD     *ZERO         WFILNB                         Packages per ca
     C                   Z-ADD     *ZERO         WFCHNB                         Use_Freeze_Sell
     C                   Z-ADD     *ZERO         WFCINB                         PM Batch Size
     C                   Z-ADD     *ZERO         WFCJNB                         Package Level s
     C                   Z-ADD     *ZERO         WFCMNB                         Partial Item Co
     C                   Z-ADD     *ZERO         WFCNNB                         WIP Item Code
     C                   Z-ADD     *ZERO         WFCRNB                         WIP Reject Code
     C                   Z-ADD     *ZERO         WFCSNB                         Std Costing Uni
     C                   Z-ADD     *ZERO         WFCVNB                         FP Std Green We
     C                   Z-ADD     *ZERO         WFCWNB                         PM Std LBS Man
     C                   Z-ADD     *ZERO         WFCXNB                         PM Raw Meat LBS
     C                   Z-ADD     *ZERO         WFCZNB                         PM Formula LBS
     C                   Z-ADD     *ZERO         WFC0NB                         PM Finished LBS
     C                   Z-ADD     *ZERO         WFB4NB                         PM Raw Material
     C                   Z-ADD     *ZERO         WFB5NB                         PM Line Number
     C                   Z-ADD     *ZERO         WFBDNB                         Pieces Per Bag
     C                   Z-ADD     *ZERO         WFBJNB                         Bags Per Unit
     C                   Z-ADD     *ZERO         WFF5WG                         Item Target Pri
     C                   Z-ADD     *ZERO         WFF6WG                         Minimum Piece W
     C                   Z-ADD     *ZERO         WFF7WG                         Maximum Piece W
     C                   Z-ADD     *ZERO         WFBLNB                         Seaboard Equiva
     C                   Z-ADD     *ZERO         WFBNNB                         Production Qty
     C                   Z-ADD     *ZERO         WFAATM                         Job Time
     C                   Z-ADD     *ZERO         WFAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WGAIC3                         Company Number
     C                   Z-ADD     *ZERO         WGM8NB                         System Value Nu
     C                   Z-ADD     *ZERO         WGAATM                         Job Time
     C                   Z-ADD     *ZERO         WGAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WHHGCD                         Item Code
     C                   Z-ADD     *ZERO         WHAWPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WHAXPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WHAIWG                         Unit Weight
     C                   Z-ADD     *ZERO         WHCZWG                         Minimum Weight
     C                   Z-ADD     *ZERO         WHC0WG                         Maximum Weight
     C                   Z-ADD     *ZERO         WHURTN                         Number Cases On
     C                   Z-ADD     *ZERO         WHACC8                         Vendor item Def
     C                   Z-ADD     *ZERO         WHRINB                         Item Structure
     C                   Z-ADD     *ZERO         WHRHNB                         Item Structure
     C                   Z-ADD     *ZERO         WHRGNB                         Item Structure
     C                   Z-ADD     *ZERO         WHTFNB                         Transportation
     C                   Z-ADD     *ZERO         WHCHTM                         Fresh Chilling
     C                   Z-ADD     *ZERO         WHSWGH                         Std Weight_Head
     C                   Z-ADD     *ZERO         WHPPHE                         Pieces Per Head
     C                   Z-ADD     *ZERO         WHSFNB                         Pallet Tare Wei
     C                   Z-ADD     *ZERO         WHA3WG                         Misc Tare Weigh
     C                   Z-ADD     *ZERO         WHSJNB                         Production Lead
     C                   Z-ADD     *ZERO         WHSKNB                         Agrimetrics gro
     C                   Z-ADD     *ZERO         WHSLNB                         Agrimetrics pac
     C                   Z-ADD     *ZERO         WHSMNB                         Agrimetrics gra
     C                   Z-ADD     *ZERO         WHCFNB                         PM Pounds per H
     C                   Z-ADD     *ZERO         WHCGNB                         Item Frt Overag
     C                   Z-ADD     *ZERO         WHILNB                         Packages per ca
     C                   Z-ADD     *ZERO         WHCHNB                         Use_Freeze_Sell
     C                   Z-ADD     *ZERO         WHCINB                         PM Batch Size
     C                   Z-ADD     *ZERO         WHCJNB                         Package Level s
     C                   Z-ADD     *ZERO         WHCMNB                         Partial Item Co
     C                   Z-ADD     *ZERO         WHCNNB                         WIP Item Code
     C                   Z-ADD     *ZERO         WHCRNB                         WIP Reject Code
     C                   Z-ADD     *ZERO         WHCSNB                         Std Costing Uni
     C                   Z-ADD     *ZERO         WHCVNB                         FP Std Green We
     C                   Z-ADD     *ZERO         WHCWNB                         PM Std LBS Man
     C                   Z-ADD     *ZERO         WHCXNB                         PM Raw Meat LBS
     C                   Z-ADD     *ZERO         WHCZNB                         PM Formula LBS
     C                   Z-ADD     *ZERO         WHC0NB                         PM Finished LBS
     C                   Z-ADD     *ZERO         WHB4NB                         PM Raw Material
     C                   Z-ADD     *ZERO         WHTMVA                         Maximum Audit V
     C                   Z-ADD     *ZERO         WHTNVA                         Minimum Audit V
     C                   Z-ADD     *ZERO         WHBLPR                         Market Overage
     C                   Z-ADD     *ZERO         WHBMPR                         Standard Overag
     C                   Z-ADD     *ZERO         WHCMCO                         Item Pricing Co
     C                   Z-ADD     *ZERO         WHAIC3                         Company Number
     C                   Z-ADD     *ZERO         WHICN1                         Item Category N
     C                   Z-ADD     *ZERO         WHICN2                         Item Category N
     C                   Z-ADD     *ZERO         WHV2NB                         Item Category N
     C                   Z-ADD     *ZERO         WHITCN                         Item Category N
     C                   Z-ADD     *ZERO         WHITC5                         Item Category N
     C                   Z-ADD     *ZERO         WHICN6                         Item Category N
     C                   Z-ADD     *ZERO         WHICN7                         Item Category N
     C                   Z-ADD     *ZERO         WHICN8                         Item Category N
     C                   Z-ADD     *ZERO         WHICN9                         Item Category N
     C                   Z-ADD     *ZERO         WHICN0                         Item Category N
     C                   Z-ADD     *ZERO         WHB5NB                         PM Line Number
     C                   Z-ADD     *ZERO         WHBDNB                         Pieces Per Bag
     C                   Z-ADD     *ZERO         WHBJNB                         Bags Per Unit
     C                   Z-ADD     *ZERO         WHF5WG                         Item Target Pri
     C                   Z-ADD     *ZERO         WHF6WG                         Minimum Piece W
     C                   Z-ADD     *ZERO         WHF7WG                         Maximum Piece W
     C                   Z-ADD     *ZERO         WHBLNB                         Seaboard Equiva
     C                   Z-ADD     *ZERO         WHBNNB                         Production Qty
     C                   Z-ADD     *ZERO         WHAHTM                         Job Time 1
     C                   Z-ADD     *ZERO         WHEKDT                         Job Date 1
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WIY1NX                         PFS Company Num
     C                   Z-ADD     *ZERO         WIAID8                         PFS Transaction
     C                   Z-ADD     *ZERO         WIAFTS                         PFS Transaction
     C                   Z-ADD     *ZERO         WIBCNY                         PFS Transaction
     C                   Z-ADD     *ZERO         WIY2NX                         PFS Item Code
     C                   Z-ADD     *ZERO         WIADNY                         PFS Location Co
     C                   Z-ADD     *ZERO         WIP7DT                         PFS Production
     C                   Z-ADD     *ZERO         WIZ4NX                         PFS Label Date
     C                   Z-ADD     *ZERO         WIACNY                         PFS Receive Loc
     C                   Z-ADD     *ZERO         WICUNY                         PFS On Hand Qua
     C                   Z-ADD     *ZERO         WICVNY                         PFS On Hand Wei
     C                   Z-ADD     *ZERO         WIUXSX                         PFS Process Sta
     C                   Z-ADD     *ZERO         WIAHNY                         PFS Create Date
     C                   Z-ADD     *ZERO         WIAINY                         PFS Create Time
     C                   Z-ADD     *ZERO         WIAJNY                         PFS Change Date
     C                   Z-ADD     *ZERO         WIAKNY                         PFS Change time
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SDRVGN.
     C                   EVAL      WL0001 = ' '
     C                   Z-ADD     *ZERO         WL0002
      * Define local variables for subroutine SFRVGN.
     C                   EVAL      WL0003 = ' '
     C                   Z-ADD     *ZERO         WL0004
      * Define local variables for subroutine SIRVGN.
     C                   Z-ADD     *ZERO         WL0005
     C                   EVAL      WL0006 = ' '
     C                   EVAL      WL0007 = ' '
      * Define local variables for subroutine SMCRRC.
     C                   Z-ADD     *ZERO         WL0008
     C                   Z-ADD     *ZERO         WL0009
     C                   Z-ADD     *ZERO         WL0010
     C                   Z-ADD     *ZERO         WL0011
     C                   EVAL      WL0012 = ' '
     C                   Z-ADD     *ZERO         WL0013
     C                   EVAL      WL0014 = ' '
     C                   Z-ADD     *ZERO         WL0015
     C                   Z-ADD     *ZERO         WL0016
     C                   Z-ADD     *ZERO         WL0017
     C                   Z-ADD     *ZERO         WL0018
     C                   Z-ADD     *ZERO         WL0019
     C                   Z-ADD     *ZERO         WL0020
     C                   EVAL      WL0021 = ' '
     C                   Z-ADD     *ZERO         WL0022
     C                   EVAL      WL0023 = ' '
     C                   Z-ADD     *ZERO         WL0024
     C                   Z-ADD     *ZERO         WL0025
     C                   Z-ADD     *ZERO         WL0026
     C                   Z-ADD     *ZERO         WL0027
      * Define local work field Email Subject USR
     C                   EVAL      YL0001 = ' '
      * Define local work field Warehouse Code
     C                   EVAL      YL0002 = ' '
      * Define local work field Company Number
     C                   Z-ADD     *ZERO         YL0003
      * Define local work field EDI Company # 940 846 947
     C                   Z-ADD     *ZERO         YL0004
      * Define null work field Class Code
     C                   EVAL      YN0001 = ' '
      * Define local work field EDI Trading Partner No.
     C                   EVAL      YL0005 = ' '
      * Define null work field EDI Whs Duns Number
     C                   EVAL      YN0002 = ' '
      * Define local work field Record Status
     C                   EVAL      YL0006 = ' '
      * Define null work field Create Date
     C                   Z-ADD     *ZERO         YN0003
      * Define null work field Create Time
     C                   Z-ADD     *ZERO         YN0004
      * Define null work field Create User
     C                   EVAL      YN0005 = ' '
      * Define null work field Create Program
     C                   EVAL      YN0006 = ' '
      * Define null work field Change Date
     C                   Z-ADD     *ZERO         YN0007
      * Define null work field Change Time
     C                   Z-ADD     *ZERO         YN0008
      * Define null work field Change User
     C                   EVAL      YN0009 = ' '
      * Define null work field Change Program
     C                   EVAL      YN0010 = ' '
      * Define local work field Shipping Company
     C                   Z-ADD     *ZERO         YL0007
      * Define local work field Accounting Company
     C                   Z-ADD     *ZERO         YL0008
      * Define local work field Validation Pass USR
     C                   EVAL      YL0009 = ' '
      * Define local work field FILLER3
     C                   EVAL      YL0010 = ' '
      * Define local work field W1906 PRODUCT
     C                   EVAL      YL0011 = ' '
      * Define local work field Item Code Txt
     C                   EVAL      YL0012 = ' '
      * Define local work field Email Subject USR
     C                   EVAL      YL0013 = ' '
      * Define local work field EDI Surrogate Nbr Txt USR
     C                   EVAL      YL0014 = ' '
      * Define local work field Text usr 14
     C                   EVAL      YL0015 = ' '
      * Define local work field Email Message USR
     C                   EVAL      YL0016 = ' '
      * Define local work field Company Number
     C                   Z-ADD     *ZERO         YL0017
      * Define local work field Email Address
     C                   EVAL      YL0018 = ' '
      * Define local work field System Date Nbr USR
     C                   Z-ADD     *ZERO         YL0019
      * Define local work field Current System Date
     C                   Z-ADD     *ZERO         YL0020
      * Define local work field Current System Time
     C                   Z-ADD     *ZERO         YL0021
      * Define local work field Unit Weight
     C                   Z-ADD     *ZERO         YL0022
      * Define local work field Quality Level
     C                   EVAL      YL0023 = ' '
      * Define local work field MEA03 MEASURE NET WGT
     C                   Z-ADD     *ZERO         YL0024
      * Define local work field Warehouse Code
     C                   EVAL      YL0025 = ' '
      * Define local work field Shipping Company Number
     C                   Z-ADD     *ZERO         YL0026
      * Define local work field Job Time
     C                   Z-ADD     *ZERO         YL0027
      * Define local work field Sold 100 Percent Frozen
     C                   EVAL      YL0028 = ' '
      * Define local work field Count Records        USR
     C                   Z-ADD     *ZERO         YL0029
      * Define local work field Item Code
     C                   Z-ADD     *ZERO         YL0030
      * Define local work field Email Address
     C                   EVAL      YL0031 = ' '
      * Define local work field Message Line 1
     C                   EVAL      YL0032 = ' '
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 EDI 846 Error-Inv Reconci
00002 Invalid Trade Partner
00003 Warehouse Code is blank.
00004 Company Number is blank.
00005 EDI Interchange WHSRST
00006 code is not active.
00007 Invalid Warehouse Code.
00008 Invalid Company/Warehouse
00009 combination.
00010 Invalid Company/Product
00011 Invalid Product Number.
00012 Invalid Reference Status
00013 Invalid Production Date.
00014 Invalid Net Weight For
00015 Product
00016 EDI 846 Error -
00017 Surrogate
00018 EDI846ERR
00019 EDI846CMP
00020 EDI 846 Raw Data For
