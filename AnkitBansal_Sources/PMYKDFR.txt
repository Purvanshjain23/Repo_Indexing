// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMYKDFR
// ?Date: 14.08.2025 Time: 03:44:32
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?PIO 11/26/24 We are recompiling the program as index is used in SQL Query
EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('OMS');
PARAMETER(NLL.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);

// LCL.First Time Flag = CND.Yes
LCL.First_Time_Flag = 'Y';

// PGM.*Subfile mode = CND.Truncated
PGM.*Subfile_mode = 1;

// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

//?USER: Initialize subfile control

CASE;

// IF LCL.First Time Flag is Yes
IF LCL.First_Time_Flag = 'Y';

// CTL.Sales Route Code = PAR.Salesperson Code
CTL.Sales_Route_Code = PAR.Salesperson_Code;

// CTL.ARHN Follow Up Date = JOB.*Job date
CTL.ARHN_Follow_Up_Date = JOB.*Job_date;

// LCL.First Time Flag = CND.NO
LCL.First_Time_Flag = 'N';

ENDIF;

//?USER: Initialize subfile record from DBF record

EXECUTE FUNCTION(Ship To Name          DRV) TYPE(DRVFLD)                        AC1573561;
PARAMETER(RCD.Ship_To_Name_DRV);
PARAMETER(RCD.AR_Customer_Number);

EXECUTE FUNCTION(Sales Route Desc      DRV) TYPE(DRVFLD)                        AC1575490;
PARAMETER(RCD.Sales_Route_Desc_DRV);
PARAMETER(RCD.Sales_Route_Code);

EXECUTE FUNCTION(Rtv 1st 2 Lines of Nt RT) TYPE(RTVOBJ) FILE(PMEFCPP)           AC1899534;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Invoice_Number);
PARAMETER(RCD.Invoice_Suffix);
PARAMETER(RCD.ARHN_Note_Number);
PARAMETER(RCD.Note_Line_1);
PARAMETER(RCD.Note_Line_2);
PARAMETER(LCL.Status_Y_or_N);

//?More Notes
CASE;

// IF LCL.Status - Y or N is yes
IF LCL.Status_Y_or_N = 'Y';

// RCD.Text USR 4 = CON.+...
RCD.Text_USR_4 = '+...';

//?More Notes
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Text USR 4 = CON.*BLANK
RCD.Text_USR_4 = *BLANK;

ENDIF;

//?SEL: Note Created By
CASE;

// IF CTL.ARHN Note Created By is equal to blank
IF CTL.ARHN_Note_Created_By = *BLANK;

//?SEL: Note Created By
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF RCD.ARHN Note Created By NE CTL.ARHN Note Created By
IF RCD.ARHN_Note_Created_By <> CTL.ARHN_Note_Created_By;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

//?F23=Print Notes
CASE;

// IF CTL.*CMD key is CF23
IF CTL.*CMD_key = '23';

// Call program PMT Prt Opt w/PSz SHR  PV.
CALL PROGRAM(PMT Prt Opt w/PSz SHR  PV) ('PDV8PVR');
PARAMETER('Collection Notes');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('OMS');
PARAMETER(*MISSING);
PARAMETER(1);

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

// Retrieve message - 'JOB(&1) jobq(&2) log(&3) hold(&4)'
PGM.*Sbmjob_override_string = RTVMSG(USR2684);
PARAMETER('CLCTNNOTES');
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(*JOBD_JOBD_JOBD);
PARAMETER(*JOBD);

// LCL.Copies NBR USR = CVTVAR(PAR.PRT Number of Copies)
LCL.Copies_NBR_USR = CVTVAR(PAR.PRT_Number_of_Copies);

// Call program Prt Collection Notes  CL.
SBMJOB;
CALL PROGRAM(Prt Collection Notes  CL) ('PMYFUPC');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Invoice_Number);
PARAMETER(CTL.Invoice_Suffix);
PARAMETER(CTL.ARHN_Note_Date);
PARAMETER(CTL.ARHN_Note_Time);
PARAMETER(CTL.ARHN_Note_Created_By);
PARAMETER(CTL.ARHN_Follow_Up_Date);
PARAMETER('O');
PARAMETER(CTL.AR_Customer_Number);
PARAMETER(CTL.Sales_Route_Code);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(LCL.Copies_NBR_USR);
SBMJOBEND;

ENDIF;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?5=Work With Invoice Notes
CASE;

// IF RCD.*SFLSEL is Option 5
IF RCD.*SFLSEL = '5'/'5';

// Call program WW Invoice Notes      DF.
CALL PROGRAM(WW Invoice Notes      DF) ('PMX6DFR');
PARAMETER(RCD.Invoice_Number);
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Invoice_Suffix);
PARAMETER(RCD.AR_Customer_Number);
PARAMETER(RCD.Sales_Route_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?8=Display Note
CASE;

// IF RCD.*SFLSEL is Option 8
IF RCD.*SFLSEL = '8'/'8';

// Call program Dsp Note Detail       DF.
CALL PROGRAM(Dsp Note Detail       DF) ('PMYBDFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Invoice_Number);
PARAMETER(RCD.Invoice_Suffix);
PARAMETER(RCD.ARHN_Note_Number);
PARAMETER(RCD.ARHN_Note_Date);
PARAMETER(RCD.ARHN_Note_Time);
PARAMETER(RCD.ARHN_Note_Created_By);
PARAMETER(RCD.ARHN_Follow_Up_Date);
PARAMETER(RCD.ARHN_Follow_Up_Status);
PARAMETER(RCD.ARHN_Follow_Up_Cmplt_Date);
PARAMETER(RCD.ARHN_Follow_Up_Cmplt_Time);
PARAMETER(RCD.ARHN_Follow_Up_Cmplt_By);
PARAMETER(RCD.AR_Customer_Number);
PARAMETER(RCD.Sales_Route_Code);

ENDIF;

//?9=Create Follow Up Note
CASE;

// IF RCD.*SFLSEL is Option 9
IF RCD.*SFLSEL = '9'/'9';

EXECUTE FUNCTION(Rtv Next Sequence     RT) TYPE(RTVOBJ) FILE(PMEDCPP)           AC1898717;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Invoice_Number);
PARAMETER(RCD.Invoice_Suffix);
PARAMETER(LCL.ARHN_Note_Number);

// Call program Edt AR Note Hdr/Dtl   ET.
CALL PROGRAM(Edt AR Note Hdr/Dtl   ET) ('PMYCETR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Invoice_Number);
PARAMETER(RCD.Invoice_Suffix);
PARAMETER(LCL.ARHN_Note_Number);
PARAMETER(RCD.AR_Customer_Number);
PARAMETER(RCD.Sales_Route_Code);

EXECUTE FUNCTION(Val Note Exists       RT) TYPE(RTVOBJ) FILE(PMEDCPP)           AC1900411;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Invoice_Number);
PARAMETER(RCD.Invoice_Suffix);
PARAMETER(LCL.ARHN_Note_Number);
PARAMETER(LCL.Record_Found_USR);

CASE;

// IF LCL.Record Found USR is Record Found
IF LCL.Record_Found_USR = 'Y';

// PAR.ARHN Follow Up Status = CND.Completed
PAR.ARHN_Follow_Up_Status = 'C';

// PAR.ARHN Follow Up Cmplt Date = JOB.*Job date
PAR.ARHN_Follow_Up_Cmplt_Date = JOB.*Job_date;

// PAR.ARHN Follow Up Cmplt Time = JOB.*Job time
PAR.ARHN_Follow_Up_Cmplt_Time = JOB.*Job_time;

// PAR.ARHN Follow Up Cmplt By = JOB.*USER
PAR.ARHN_Follow_Up_Cmplt_By = JOB.*USER;

EXECUTE FUNCTION(Chg FollowUp Complete CH) TYPE(CHGOBJ) FILE(PMEDCPP)           AC1900412;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Invoice_Number);
PARAMETER(RCD.Invoice_Suffix);
PARAMETER(RCD.ARHN_Note_Number);
PARAMETER(PAR.ARHN_Follow_Up_Status);
PARAMETER(PAR.ARHN_Follow_Up_Cmplt_Date);
PARAMETER(PAR.ARHN_Follow_Up_Cmplt_Time);
PARAMETER(PAR.ARHN_Follow_Up_Cmplt_By);

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

