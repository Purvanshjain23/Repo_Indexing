// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPL7XFR
// ?Date: 14.08.2025 Time: 03:41:10
// ?------------------------------------------------------------------------------------------------

//?Execute user function

CASE;

// IF PAR.Email Selection usr is Email Selected
IF PAR.Email_Selection_usr = 'E';

// LCL.PRT Hold Output Sts = CND.*YES
LCL.PRT_Hold_Output_Sts = *YES;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.PRT Hold Output Sts = PAR.PRT Hold Output Sts
LCL.PRT_Hold_Output_Sts = PAR.PRT_Hold_Output_Sts;

ENDIF;

//?1. Override Printer File.       7/22/11 if printer is entered
DO;

CASE;

// IF PAR.PRT Printer Device is Not entered
IF PAR.PRT_Printer_Device = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Nbr of Copies-Alpha   USR = CVTVAR(PAR.PRT Number of Copies)
PAR.Nbr_of_Copies_Alpha_USR = CVTVAR(PAR.PRT_Number_of_Copies);

// Call program EXC Command OVRPRTF    UP.
CALL PROGRAM(EXC Command OVRPRTF    UP) ('PDQVUPC');
PARAMETER('PPL4PFR$');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.Nbr_of_Copies_Alpha_USR);

ENDIF;

ENDDO;

//?2. Print Report with email or without email selection
DO;

// LCL.Condition Name USR = CON.*BLANK
LCL.Condition_Name_USR = *BLANK;

// LCL.Approval Person Email = PAR.Approval Person Email
LCL.Approval_Person_Email = PAR.Approval_Person_Email;

//?   ** Don't email to distro list if this is new
// LCL.Email Claim Usr = PAR.Status - Y or N
LCL.Email_Claim_Usr = PAR.Status_Y_or_N;

//?** Don't email if internal notes
CASE;

// IF PAR.Claim Prt IntrlNotes  USR is *YES
IF PAR.Claim_Prt_IntrlNotes_USR = *YES;

// LCL.Email Claim Usr = CND.yes
LCL.Email_Claim_Usr = 'Y';

ENDIF;

//?** IF Don't email then initilaztion fields
CASE;

// IF LCL.Email Claim Usr is yes
IF LCL.Email_Claim_Usr = 'Y';

// LCL.Approval Person Email = CON.*BLANK
LCL.Approval_Person_Email = *BLANK;

// LCL.Condition Name USR = CON.*BLANK
LCL.Condition_Name_USR = *BLANK;

ENDIF;

//?Place "Change on Claim"  on the Subject line if Audit Notes
CASE;

// IF PAR.Claim Print Type is Audit Notes
IF PAR.Claim_Print_Type = 'A';

// LCL.Condition Name USR = CON.Change on Claim
LCL.Condition_Name_USR = 'Change on Claim';

ENDIF;

// LCL.Company Number Alpha = CVTVAR(PAR.Claim Company Number)
LCL.Company_Number_Alpha = CVTVAR(PAR.Claim_Company_Number);

// LCL.Claim Number (Alpha) USR = CVTVAR(PAR.Claim Number)
LCL.Claim_Number_Alpha_USR = CVTVAR(PAR.Claim_Number);

// LCL.Text Usr 50 = CONCAT(LCL.Company Number Alpha,CON.Claim:,CND.*One)
LCL.Text_Usr_50 = LCL.Company_Number_Alpha + 'Claim:' (1);

// LCL.Text Usr 50 = CONCAT(LCL.Text Usr 50,LCL.Claim Number (Alpha) USR,CND.*One)
LCL.Text_Usr_50 = LCL.Text_Usr_50 + LCL.Claim_Number_Alpha_USR (1);

// LCL.Text Usr 50 = CONCAT(LCL.Text Usr 50,LCL.Condition Name USR,CON.1)
LCL.Text_Usr_50 = LCL.Text_Usr_50 + LCL.Condition_Name_USR (1);

// Call program PRT Claim-Claim EmailCLP.
CALL PROGRAM(PRT Claim-Claim EmailCLP) ('PPMLUPC');
PARAMETER(LCL.Claim_Number_Alpha_USR);
PARAMETER(LCL.Company_Number_Alpha);
PARAMETER(LCL.Approval_Person_Email);
PARAMETER(LCL.Text_Usr_50);
PARAMETER(LCL.Email_Claim_Usr);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);
PARAMETER(PAR.Claim_Prt_AuditNotes_USR);
PARAMETER(PAR.Claim_Prt_IntrlNotes_USR);
PARAMETER(PAR.Claim_Print_Type);

CASE;

// IF LCL.Approval Person Email is Entered
IF LCL.Approval_Person_Email <> *BLANK;

//?UPDATE A/R Claim Approval that a email was sent for approval.
EXECUTE FUNCTION(Chg Email             RT) TYPE(RTVOBJ) FILE(PPAYCPP)           AC1734747;
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Approval_Title_Code);
PARAMETER(PAR.Sequence_Number);
PARAMETER('E');
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg EMAIL             CH) TYPE(CHGOBJ) FILE(PPAYCPP)           AC1734505;
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.Approval_Title_Code);
 PARAMETER(DB1.Sequence_Number);
 PARAMETER(PAR.Approval_Status);
 PARAMETER(PAR.Emailed_Date);
 PARAMETER(PAR.Emailed_Time);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

}


ENDIF;

ENDDO;

//?3. Delete Overrides.
DO;

// Execute command - 'DLTOVR'
EXECUTE COMMAND(USR2787);

ENDDO;

//?4. Purge Audit Records if this is the audit claim
DO;

CASE;

// IF PAR.Claim Print Type is Audit Notes
IF PAR.Claim_Print_Type = 'A';

//?Update the System Notes tht trigger this action as completed
EXECUTE FUNCTION(Chg Claim ExpSysActCmplRT) TYPE(RTVOBJ) FILE(PDMNCPP)          AC1878486;
PARAMETER(PAR.Claim_Number);
PARAMETER('CLMCHANGE');
{
 //?USER: Process Data record

 EXECUTE FUNCTION(CHG A/R Claim Explan   CH) TYPE(CHGOBJ) FILE(PDMNCPP)          AC1523481;
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.Claim_Explanation_Line_No);
 PARAMETER(DB1.Claim_Explanation_Text);
 PARAMETER(DB1.Claim_Exp_Usr_Seq_Number);
 PARAMETER(DB1.Claim_Expl_Note_Date);
 PARAMETER(DB1.Claim_Expl_Type_of_Note);
 PARAMETER(DB1.Claim_Expl_Action);
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_time);
 PARAMETER(DB1.Claim_Department_Group);
 PARAMETER(DB1.Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

}


ENDIF;

ENDDO;

//?***** Change Log and Comments
DO;

//?** E00094 LJB 03/03/2008 - Add Status - Yes or No parm.
//?** If "Y" then this is a new claim - Don't send to St. Joe.
//?** E00094 LJB 02/22/2008 - Add input parm for type of change. This
//?** can be blank. Condition value text will print at top of claim.
//?04/15/08 SLM PASS IN PARMS FOR THE CLAIM AUDIT & INT NOTES
//?04/15/08 SLM E00104
ENDDO;

