     H/TITLE WW Carcass Merit PgmSVDF  Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Display file
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISDREDD
     H* Date          : 12/17/20  Time  : 01:22:53
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPLFNDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: WW Carcass Merit PgmSVDF  Display file
      *
     FPKARREL0IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : Carcass Merit Program     Retrieval index
      *
     FPKBZREL1IF  E           K        DISK
      * RTV : Carcass Merit Matrix Col  Retrieval index
      *
     FPKBYREL1IF  E           K        DISK
      * RTV : Carcass Merit Matrix Row  Retrieval index
      *
     FPKAQCPL7IF  E           K        DISK
      * RSQ : Producer Sub-Contract     Chk Crcs Mrt/Prd Sbcn
      *
     FPKAWCPLCIF  E           K        DISK
      * RSQ : Buy Order Header          Chk CMP
      *
     FPKB0REL1IF  E           K        DISK
      * RTV : Carcass Merit Prog Com    Retrieval index
      *
     FPKARREL1UF  E           K        DISK
      * UPD : Carcass Merit Program     Update index
      *
     FPKB0REL0UF  E           K        DISK
      * UPD : Carcass Merit Prog Com    Update index
      *
      * Long constants
     E                    @CN#    1  02  6   @CN    25
     I@ARREBG
      * Carcass Merit Program     Update index
      * Renamed input format fields
     I              ARAMCD                          WAAMCD
     I              ARA3TX                          WAA3TX
     I              ARDLST                          WADLST
     I              ARDMST                          WADMST
     I              ARDOST                          WADOST
     I              ARDQST                          WADQST
     I              ARAZPC                          WAAZPC
     I              ARA0PC                          WAA0PC
     I              ARDTST                          WADTST
     I              ARF5ST                          WAF5ST
     I              ARI1PR                          WAI1PR
     I              ARVEPR                          WAVEPR
     I              ARVFPR                          WAVFPR
     I              ARVHPR                          WAVHPR
     I              ARVIPR                          WAVIPR
     I              ARVJPR                          WAVJPR
     I              ARZ2ST                          WAZ2ST
     I              ARZ3ST                          WAZ3ST
     I              ARZ4ST                          WAZ4ST
     I              ARAAVN                          WAAAVN
     I              ARAADT                          WAAADT
     I              ARAMTM                          WAAMTM
     I              ARAJST                          WAAJST
     I              ARAHVN                          WAAHVN
     I              ARAGVN                          WAAGVN
     I              ARABVN                          WAABVN
     I              ARABDT                          WAABDT
     I              ARABTM                          WAABTM
      *
     I@B0REGK
      * Carcass Merit Prog Com    Update index
      * Renamed input format fields
     I              B0AMCD                          WBAMCD
     I              B0ESNB                          WBESNB
     I              B0B5TX                          WBB5TX
     I              B0ENST                          WBENST
     I              B0AAVN                          WBAAVN
     I              B0AADT                          WBAADT
     I              B0AMTM                          WBAMTM
     I              B0AJST                          WBAJST
     I              B0AHVN                          WBAHVN
     I              B0AGVN                          WBAGVN
     I              B0ABVN                          WBABVN
     I              B0ABDT                          WBABDT
     I              B0ABTM                          WBABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      * Outward parameters
     IPARC        DS                              3
      * KEY : Carcass Merit Program     Retrieval index
      * I : MAP CMP Program Code
     I                                        1   3 PAAMCD
      *
      * Outward parameters
     IPBRC        DS                              3
      * KEY : Competitors Commodity     Retrieval index
      * I : RST CCC Record
     I                                    P   1   30PBTNNB
      *
      * Outward parameters
     IPCRC        DS                              3
      * KEY : Carcass Merit Program     Retrieval index
      * I : RST CMP Program Code
     I                                        1   3 PCAMCD
      *
     IQPKAR1    E DSPKARREL1
      * UPD : Carcass Merit Program     Update index
      * Renamed input format fields
     I              ARAMCD                          WAAMCD
     I              ARA3TX                          WAA3TX
     I              ARDLST                          WADLST
     I              ARDMST                          WADMST
     I              ARDOST                          WADOST
     I              ARDQST                          WADQST
     I              ARAZPC                          WAAZPC
     I              ARA0PC                          WAA0PC
     I              ARDTST                          WADTST
     I              ARF5ST                          WAF5ST
     I              ARI1PR                          WAI1PR
     I              ARVEPR                          WAVEPR
     I              ARVFPR                          WAVFPR
     I              ARVHPR                          WAVHPR
     I              ARVIPR                          WAVIPR
     I              ARVJPR                          WAVJPR
     I              ARZ2ST                          WAZ2ST
     I              ARZ3ST                          WAZ3ST
     I              ARZ4ST                          WAZ4ST
     I              ARAAVN                          WAAAVN
     I              ARAADT                          WAAADT
     I              ARAMTM                          WAAMTM
     I              ARAJST                          WAAJST
     I              ARAHVN                          WAAHVN
     I              ARAGVN                          WAAGVN
     I              ARABVN                          WAABVN
     I              ARABDT                          WAABDT
     I              ARABTM                          WAABTM
      *
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
     IQPKB01    E DSPKB0REL0
      * UPD : Carcass Merit Prog Com    Update index
      * Renamed input format fields
     I              B0AMCD                          WBAMCD
     I              B0ESNB                          WBESNB
     I              B0B5TX                          WBB5TX
     I              B0ENST                          WBENST
     I              B0AAVN                          WBAAVN
     I              B0AADT                          WBAADT
     I              B0AMTM                          WBAMTM
     I              B0AJST                          WBAJST
     I              B0AHVN                          WBAHVN
     I              B0AGVN                          WBAGVN
     I              B0ABVN                          WBABVN
     I              B0ABDT                          WBABDT
     I              B0ABTM                          WBABTM
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Carcass Merit Program
      * N : MAP CMP Description
     I                                        1  25 P1A3TX
      * N : MAP CMP Grading Type
     I                                       26  26 P1DLST
      * N : MAP CMP Sort Basis
     I                                       27  27 P1DMST
      * N : MAP CMP Sts
     I                                       28  28 P1DOST
      * N : MAP CMP Carc Wgt Type
     I                                       29  30 P1DQST
      * N : MAP CMP Std Lean Percent
     I                                    P  31  321P1AZPC
      * N : MAP CMP Lean Factor
     I                                    P  33  341P1A0PC
      * N : MAP CMP Optimal Row Nbr f/srt
     I                                       35  35 P1DTST
     IP2PARM      DS
      * FLD: *Arrays
      * N :  PRT Description
     I                                        1  25 P2ETTX
      * N :  PRT Printer Device
     I                                       26  35 P2ACVN
      * N :  PRT Hold Output Sts
     I                                       36  39 P2AKST
      * N :  PRT Save Output Sts
     I                                       40  43 P2AMST
      * N :  PRT Copies
     I                                       44  450P2AKNB
      * N :  PRT Night Queue Run Sts
     I                                       46  46 P2ALST
      * N :  PRT Night Queue
     I                                       47  56 P2AIVN
     IP3PARM      DS
      * FLD: *Arrays
      * N : MAP Oms Warehouse Code
     I                                        1   3 P3J8NB
      * N : MAP CC Company Number
     I                                    P   4   50P3HONB
      * N : MAP Oms Application Code
     I                                        6  11 P3C7CD
      * N : MAP Oms SalesPerson Code
     I                                       12  14 P3C8CD
      * N : MAP Oms Allow Multi-Company
     I                                       15  15 P3G8ST
      * N : MAP Oms Default Printer
     I                                       16  25 P3G9ST
      * N : MAP Oms Name
     I                                       26  55 P3EUTX
      * N : MAP Oms System Value Alpha
     I                                       56  95 P3EVTX
      * N : MAP Oms Access Denied (Y/N)
     I                                       96  96 P3HAST
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'SBM Prt CMP List'
      * PRT Printer Device
     I                                        1  10 ZA0001
      * PRT Hold Output Sts
     I                                       11  14 ZA0002
      * PRT Save Output Sts
     I                                       15  18 ZA0003
      * PRT Copies
     I                                    P  19  200ZA0004
      * PRT Night Queue
     I                                       21  30 ZA0005
      * RS Record Status
     I                                       31  31 ZA0006
      * Oms System Value Alpha
     I                                       32  71 ZA0007
      * Message data for 'SBM Prt CMP'
      * PRT Printer Device
     I                                        1  10 ZA0008
      * PRT Hold Output Sts
     I                                       11  14 ZA0009
      * PRT Save Output Sts
     I                                       15  18 ZA0010
      * PRT Copies
     I                                    P  19  200ZA0011
      * PRT Night Queue
     I                                       21  30 ZA0012
      * CMP Program Code
     I                                       31  33 ZA0013
      * CMP Grading Type
     I                                       34  34 ZA0014
      * Oms System Value Alpha
     I                                       35  74 ZA0015
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * CASE: WRK.First Time Flag Usr EQ WRK.Blank USR
     C           WUHBST    IFEQ WUCRTX                     *IF
     C                     MOVEL'A'       #2AJST           RS Record Statu
     C                     MOVEL'Y'       WUHJST           Display Print P
     C                     MOVEL'Y'       WUHBST           First Time Flag
     C                     END                             *FI
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           ARAMCD           CMP Program Cod
      * Setup key
     C                     MOVEL#2AMCD    ARAMCD
     C           KPOS      SETLL@ARREBF
     C                     READ @ARREBF                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2DTST    WZDTST
     C                     MOVEL#2DTST    WZDTST           CMP Optimal Row
     C           *LIKE     DEFN #2DOST    WZDOST
     C                     MOVEL#2DOST    WZDOST           CMP Sts
     C           *LIKE     DEFN #2AMCD    WZAMCD
     C                     MOVEL#2AMCD    WZAMCD           CMP Program Cod
     C           *LIKE     DEFN #2A3TX    WZA3TX
     C                     MOVEL#2A3TX    WZA3TX           CMP Description
     C           *LIKE     DEFN #2DLST    WZDLST
     C                     MOVEL#2DLST    WZDLST           CMP Grading Typ
     C           *LIKE     DEFN #2DMST    WZDMST
     C                     MOVEL#2DMST    WZDMST           CMP Sort Basis
     C           *LIKE     DEFN #2DQST    WZDQST
     C                     MOVEL#2DQST    WZDQST           CMP Carc Wgt Ty
     C           *LIKE     DEFN #2AZPC    WZAZPC
     C                     MOVEL#2AZPC    WZAZPC           CMP Std Lean Pe
     C           *LIKE     DEFN #2A0PC    WZA0PC
     C                     MOVEL#2A0PC    WZA0PC           CMP Lean Factor
     C           *LIKE     DEFN #2AJST    WZAJST
     C                     MOVEL#2AJST    WZAJST           RS Record Statu
      * Translate search mask for text field
     C                     MOVEL'QSYST'   WQB10X 10
     C                     MOVE 'RNTBL'   WQB10X
     C           *LIKE     DEFN #2A3TX    WQA3TX           CMP Description
     C                     CALL 'QDCXLATE'
      * Length
     C                     PARM 25        WQA5N   50
     C                     PARM #2A3TX    WQA3TX           CMP Description
     C                     PARM           WQB10X           QSYSTRNTBL
     C                     PARM 'QSYS'    WQC10X 10
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@ARREBF                  90*
     C  N82                READ @ARREBF                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,37
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2DTST    IFNE *BLANK                     CMP Optimal Row
     C           ARDTST    CABNE#2DTST    BB020            CMP Optimal Row
     C                     END
     C           #2DOST    IFNE *BLANK                     CMP Sts
     C           ARDOST    CABNE#2DOST    BB020            CMP Sts
     C                     END
     C           #2A3TX    IFNE *BLANK                     CMP Description
      * Scan for search string
     C                     CALL 'QCLSCAN'
     C                     PARM           ARA3TX           CMP Description
      * Length
     C                     PARM 25        WQA3N   30
      * Start
     C                     PARM 1         WQB3N   30
      * Mask
     C                     PARM           WQA3TX
      * Length
     C                     PARM 25        WQC3N   30
      * Translate
     C                     PARM '1'       WQD1    1
      * Trim
     C                     PARM '1'       WQE1    1
      * Wild
     C                     PARM '?'       WQF1    1
      * Result
     C                     PARM           WQG3N   30
     C           WQG3N     CABLT1         BB020
     C                     END
     C           #2DLST    IFNE *BLANK                     CMP Grading Typ
     C           ARDLST    CABNE#2DLST    BB020            CMP Grading Typ
     C                     END
     C           #2DMST    IFNE *BLANK                     CMP Sort Basis
     C           ARDMST    CABNE#2DMST    BB020            CMP Sort Basis
     C                     END
     C           #2DQST    IFNE *BLANK                     CMP Carc Wgt Ty
     C           ARDQST    CABNE#2DQST    BB020            CMP Carc Wgt Ty
     C                     END
     C           #2AZPC    IFNE *ZERO                      CMP Std Lean Pe
     C           ARAZPC    CABNE#2AZPC    BB020            CMP Std Lean Pe
     C                     END
     C           #2A0PC    IFNE *ZERO                      CMP Lean Factor
     C           ARA0PC    CABNE#2A0PC    BB020            CMP Lean Factor
     C                     END
     C           #2AJST    IFNE *BLANK                     RS Record Statu
     C           ARAJST    CABNE#2AJST    BB020            RS Record Statu
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @ARREBF                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * PUTOVR unless conditioned fields change
     C                     SETON                     86
     C           *IN81     IFNE CAIN81
     C                     SETOF                     86
     C                     END
     C                     MOVE *IN81     CAIN81  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate CMP Grading Type
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#2DLST    W0NSRQ  1        CMP Grading Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#2DLST'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103347   Y2LSNO  70
     C           #2DLST    PARM #2DLST    W0EXVL 25        CMP Grading Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
      * Validate CMP Sort Basis
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#2DMST    W0NSRQ  1        CMP Sort Basis
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#2DMST'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103350   Y2LSNO  70
     C           #2DMST    PARM #2DMST    W0EXVL 25        CMP Sort Basis
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
      * Validate CMP Carc Wgt Type
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#2DQST    W0NSRQ  1        CMP Carc Wgt Ty
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#2DQST'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103354   Y2LSNO  70
     C           #2DQST    PARM #2DQST    W0EXVL 25        CMP Carc Wgt Ty
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
      * Validate RS Record Status
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#2AJST    W0NSRQ  1        RS Record Statu
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#2AJST'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100087   Y2LSNO  70
     C           #2AJST    PARM #2AJST    W0EXVL 25        RS Record Statu
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZAMCD    CASNE#2AMCD    FBRQRL
     C           WZA3TX    CASNE#2A3TX    FBRQRL
     C           WZDLST    CASNE#2DLST    FBRQRL
     C           WZDMST    CASNE#2DMST    FBRQRL
     C           WZDQST    CASNE#2DQST    FBRQRL
     C           WZAJST    CASNE#2AJST    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
     C                     MOVEL'Y'       W0DCF            *Defer confirm
      * F6=Create
      * CASE: CTL.*CMD key is CF06
     C           *IN06     IFEQ '1'                        *IF
      * Edt Carc Merit Pgm    E1 - Carcass Merit Program  * 
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CTL) #PEVTX' defaulted for 'Oms System Value Alpha'.
     C                     CLEARPARC
     C                     MOVEL*BLANK    PAAMCD    P      CMP Program Cod
      *
     C                     CALL 'PKHGE1R'              90  Edt Carc Merit
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Carcass Me
     C                     PARM #PEVTX    WQ0001 40        Oms System Valu
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKHGE1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL'N'       W0DCF            *Defer confirm
     C                     END                             *FI
      * F21=Print List
      * CASE: CTL.*CMD key is Print List
     C           *IN21     IFEQ '1'                        *IF
      * Pmt Print Options     XF - STR Order Management Sys  * 
     C                     CALL 'PDG0PVR'              90  Pmt Print Optio
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,001   WQ0002 25        PRT Description
     C           P2ACVN    PARM P2ACVN    WQ0003 10        PRT Printer Dev
     C           P2AKST    PARM P2AKST    WQ0004  4        PRT Hold Output
     C           P2AMST    PARM P2AMST    WQ0005  4        PRT Save Output
     C           P2AKNB    PARM P2AKNB    WQ0006  20       PRT Copies
     C           P2ALST    PARM P2ALST    WQ0007  1        PRT Night Queue
     C           P2AIVN    PARM P2AIVN    WQ0008 10        PRT Night Queue
     C                     PARM 'P/S'     WQ0009  6        Oms Application
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDG0PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVELP2ACVN    ZA0001           PRT Printer Dev
     C                     MOVELP2AKST    ZA0002           PRT Hold Output
     C                     MOVELP2AMST    ZA0003           PRT Save Output
     C                     Z-ADDP2AKNB    ZA0004           PRT Copies
     C                     MOVELP2AIVN    ZA0005           PRT Night Queue
     C                     MOVEL#2AJST    ZA0006           RS Record Statu
     C                     MOVELP3EVTX    ZA0007           Oms System Valu
      *
      * Execute message
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2EXMCC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'PRK0313' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN   7
     C                     END
      *
     C           W0RTN     IFNE *BLANK
      * Error detected during execution
     C                     SETON                     9936  *
     C                     END
      *
     C                     END                             *FI
     C                     MOVEL'Y'       WUHJST           Display Print P
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL'N'       W0DCF            *Defer confirm
     C                     END                             *FI
      * F22=Competitors Commodity
      * CASE: CTL.*CMD key is CF22
     C           *IN22     IFEQ '1'                        *IF
      * Edt Competitors Comm   E1 - Competitors Commodity  * 
     C                     CLEARPBRC
     C                     Z-ADD00001     PBTNNB           CCC Record
      *
     C                     CALL 'PKXTE1R'              90  Edt Competitors
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PBRC             KEY: Competitor
     C                     PARM #PEVTX    WQ0010 40        Oms System Valu
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKXTE1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL'N'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * USER: Final processing (Pre-confirm)
     C                     MOVEL'Y'       WUHJST           Display Print P
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPRCF
      * Exit if not confirmed
     C           *IN99     IFEQ '1'
     C                     SETOF                     99
     C                     GOTO DAEXIT
     C                     END
      * Process subfile (pass 2)
     C                     EXSR EAPRSF
      * If error during 2nd pass exit:
     C           *IN99     CABEQ'1'       DAEXIT
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,37
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * SFLNXTCHG
     C                     SETON                     84
      * USER: Process subfile record (Pre-confirm)
      * Option 2 EDIT
      * CASE: RCD.*SFLSEL is *Revise request
     C           #1SEL     IFEQ '2'                        *IF
     C           #1SEL     OREQ ' 2'
      * Edt Carc Merit Pgm    E1 - Carcass Merit Program  * 
     C                     CLEARPARC
     C                     MOVEL#1AMCD    PAAMCD    P      CMP Program Cod
      *
     C                     CALL 'PKHGE1R'              90  Edt Carc Merit
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Carcass Me
     C                     PARM P3EVTX    WQ0011 40        Oms System Valu
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKHGE1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * 3=Copy Carcass Merit Pgm
      * CASE: RCD.*SFLSEL is CPY CARCASS MERIT PGM
     C           #1SEL     IFEQ '3'                        *IF
     C           #1SEL     OREQ ' 3'
      * Cpy Carc Merit Pgm    PV - Carcass Merit Program  * 
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CTL) #PEVTX' defaulted for 'Oms System Value Alpha'.
     C                     CLEARPCRC
     C                     MOVEL#1AMCD    PCAMCD    P      CMP Program Cod
      *
     C                     CALL 'PKKGPVR'              90  Cpy Carc Merit
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PCRC             KEY: Carcass Me
     C                     PARM #PEVTX    WQ0012 40        Oms System Valu
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKKGPVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * 4=Delete
      * CASE: RCD.*SFLSEL is *Delete request
     C           #1SEL     IFEQ '4'                        *IF
     C           #1SEL     OREQ ' 4'
      * Check Carcass Merit Matrix relationships
     C                     EXSR UASUBR                     Check Carcass M
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL'N'       W0DCF            *Defer confirm
     C                     END                             *FI
      * Option 6  PRINT CARCASS MERIT REPORTS
      * CASE: RCD.*SFLSEL is *Print
     C           #1SEL     IFEQ '6'                        *IF
      * Print Options Prompt
      * CASE: WRK.Display Print Prompt  Usr is Prompt is to be displayed
     C           WUHJST    IFEQ 'Y'                        *IF
      * Pmt Print Options     XF - STR Order Management Sys  * 
     C                     CALL 'PDG0PVR'              90  Pmt Print Optio
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,002   WQ0013 25        PRT Description
     C           P2ACVN    PARM P2ACVN    WQ0014 10        PRT Printer Dev
     C           P2AKST    PARM P2AKST    WQ0015  4        PRT Hold Output
     C           P2AMST    PARM P2AMST    WQ0016  4        PRT Save Output
     C           P2AKNB    PARM P2AKNB    WQ0017  20       PRT Copies
     C           P2ALST    PARM P2ALST    WQ0018  1        PRT Night Queue
     C           P2AIVN    PARM P2AIVN    WQ0019 10        PRT Night Queue
     C                     PARM 'P/S'     WQ0020  6        Oms Application
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDG0PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'N'       WUHJST           Display Print P
     C                     END                             *FI
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVELP2ACVN    ZA0008           PRT Printer Dev
     C                     MOVELP2AKST    ZA0009           PRT Hold Output
     C                     MOVELP2AMST    ZA0010           PRT Save Output
     C                     Z-ADDP2AKNB    ZA0011           PRT Copies
     C                     MOVELP2AIVN    ZA0012           PRT Night Queue
     C                     MOVEL#1AMCD    ZA0013           CMP Program Cod
     C                     MOVEL#1DLST    ZA0014           CMP Grading Typ
     C                     MOVEL#PEVTX    ZA0015           Oms System Valu
      *
      * Execute message
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2EXMCC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'PRK0314' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN   7
     C                     END
      *
     C           W0RTN     IFNE *BLANK
      * Error detected during execution
     C                     SETON                     98    *
     C                     END
      *
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END                             *FI
      * Option 7  Comments
      * CASE: RCD.*SFLSEL is *Option 7 (Reusable)
     C           #1SEL     IFEQ '7'                        *IF
      * Edt CMP Comments      EF - Carcass Merit Prog Com  * 
     C                     CALL 'PKC7EFR'              90  Edt CMP Comment
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AMCD    WQ0021  3        CMP Program Cod
     C                     PARM P3EVTX    WQ0022 40        Oms System Valu
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKC7EFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * Option 9=Edit Matrix
      * CASE: RCD.*SFLSEL is *Option 9 (Reusable)
     C           #1SEL     IFEQ '9'                        *IF
      * CASE: RCD.CMP Grading Type is Backfat
     C           #1DLST    IFEQ 'B'                        *IF
      * Edt Backfat Row       EF - Carcass Merit Matrix Row  * 
     C                     CALL 'PKDDEFR'              90  Edt Backfat Row
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AMCD    WQ0023  3        CMP Program Cod
     C                     PARM P3EVTX    WQ0024 40        Oms System Valu
     C                     PARM #1DMST    WQ0025  1        CMP Sort Basis
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKDDEFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     ELSE
      * CASE: RCD.CMP Grading Type is Lean Factor
     C           #1DLST    IFEQ 'F'                        *IF
      * Edt Lean Factor Row   EF - Carcass Merit Matrix Row  * 
     C                     CALL 'PKDCEFR'              90  Edt Lean Factor
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AMCD    WQ0026  3        CMP Program Cod
     C                     PARM P3EVTX    WQ0027 40        Oms System Valu
     C                     PARM #1DMST    WQ0028  1        CMP Sort Basis
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKDCEFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     ELSE
      * CASE: RCD.CMP Grading Type is Lean%NPPC/SortDscFct
     C           #1DLST    IFEQ 'L'                        *IF
     C           #1DLST    OREQ 'S'
     C           #1DLST    OREQ 'C'
     C           #1DLST    OREQ 'D'
      * Edt Lean Percent Row  EF - Carcass Merit Matrix Row  * 
     C                     CALL 'PKCREFR'              90  Edt Lean Percen
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AMCD    WQ0029  3        CMP Program Cod
     C                     PARM P3EVTX    WQ0030 40        Oms System Valu
     C                     PARM #1DMST    WQ0031  1        CMP Sort Basis
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKCREFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     ELSE
      * CASE: RCD.CMP Grading Type is Lean Percent FOM
     C           #1DLST    IFEQ 'P'                        *IF
      * Edt Lean Percent Row  EF - Carcass Merit Matrix Row  * 
     C                     CALL 'PKCREFR'              90  Edt Lean Percen
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AMCD    WQ0032  3        CMP Program Cod
     C                     PARM P3EVTX    WQ0033 40        Oms System Valu
     C                     PARM #1DMST    WQ0034  1        CMP Sort Basis
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKCREFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         DHPRCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Update screen time
     C                     TIME           ##TME
      * Force PUTOVR
     C                     SETON                     86
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#SFLCTL
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         EAPRSF    BEGSR
      *================================================================
      * Update DBF from subfile
      *================================================================
     C           *IN81     IFEQ '1'
      * Process all modified subfile records
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      * Process modified subfile record
     C                     EXSR EBPRSR
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END                             WOD *92
     C                     END                             FI *81
      * If any errors, cancel reload
     C           *IN99     IFEQ '1'
     C                     MOVEL'N'       W0RSF   1
     C                     END
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         EBPRSR    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,37
     C                     SETOF                     98
      * USER: Process subfile record (Post-confirm)
      * Option 4= Delete
      * CASE: RCD.*SFLSEL is *Delete request
     C           #1SEL     IFEQ '4'                        *IF
     C           #1SEL     OREQ ' 4'
      * DLT Carc Merit Prg    DO - Carcass Merit Program  * 
     C                     EXSR SEDLRC
      * DLT Carc Mrt Pgm Com  RT - Carcass Merit Prog Com  * 
     C                     EXSR SFRVGN
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C                     SETON                     84    SFLNXTCHG
     C  N99                Z-ADD##RR      ##SFRC     99    *
     C                     GOTO EBEXIT
     C                     ELSE
      * SFLRCD valid
     C                     SETOF                     84    SFLNXTCHG
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @ARREBF fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     MOVELARDTST    #1DTST           CMP Optimal Row
     C                     MOVELARF5ST    #1F5ST           CMP Type
     C                     Z-ADDARI1PR    #1I1PR           CMP Market Add/
     C                     Z-ADDARVEPR    #1VEPR           CMP % of Carcas
     C                     Z-ADDARVFPR    #1VFPR           CMP Fixed Cost
     C                     Z-ADDARVHPR    #1VHPR           CMP Grade Type
     C                     Z-ADDARVIPR    #1VIPR           CMP Unused Pric
     C                     Z-ADDARVJPR    #1VJPR           CMP Unused Pric
     C                     MOVELARZ2ST    #1Z2ST           CMP CLC Premium
     C                     MOVELARZ3ST    #1Z3ST           CMP Unused Sts
     C                     MOVELARZ4ST    #1Z4ST           CMP Unused Sts
     C                     MOVELARDOST    #1DOST           CMP Sts
     C                     MOVELARAAVN    #1AAVN           RS User Changed
     C                     Z-ADDARAADT    #1AADT           RS Date Changed
     C                     Z-ADDARAMTM    #1AMTM           RS Time Changed
     C                     MOVELARAHVN    #1AHVN           RS Job
     C                     MOVELARAGVN    #1AGVN           RS Program
     C                     MOVELARABVN    #1ABVN           RS User Added
     C                     Z-ADDARABDT    #1ABDT           RS Date Added
     C                     Z-ADDARABTM    #1ABTM           RS Time Added
     C                     MOVELARAMCD    #1AMCD           CMP Program Cod
     C                     MOVELARA3TX    #1A3TX           CMP Description
     C                     MOVELARDLST    #1DLST           CMP Grading Typ
     C                     MOVELARDMST    #1DMST           CMP Sort Basis
     C                     MOVELARDQST    #1DQST           CMP Carc Wgt Ty
     C                     Z-ADDARAZPC    #1AZPC           CMP Std Lean Pe
     C                     Z-ADDARA0PC    #1A0PC           CMP Lean Factor
     C                     MOVELARAJST    #1AJST           RS Record Statu
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     MOVELP3J8NB    #PJ8NB           Oms Warehouse C
     C                     Z-ADDP3HONB    #PHONB           CC Company Numb
     C                     MOVELP3C7CD    #PC7CD           Oms Application
     C                     MOVELP3C8CD    #PC8CD           Oms SalesPerson
     C                     MOVELP3G8ST    #PG8ST           Oms Allow Multi
     C                     MOVELP3G9ST    #PG9ST           Oms Default Pri
     C                     MOVELP3EUTX    #PEUTX           Oms Name
     C                     MOVELP3EVTX    #PEVTX           Oms System Valu
     C                     MOVELP3HAST    #PHAST           Oms Access Deni
     C                     MOVELP1DTST    #2DTST           CMP Optimal Row
     C                     MOVELP1DOST    #2DOST           CMP Sts
     C                     MOVEL*BLANK    #2AMCD           CMP Program Cod
     C                     MOVELP1A3TX    #2A3TX           CMP Description
     C                     MOVELP1DLST    #2DLST           CMP Grading Typ
     C                     MOVELP1DMST    #2DMST           CMP Sort Basis
     C                     MOVELP1DQST    #2DQST           CMP Carc Wgt Ty
     C                     Z-ADDP1AZPC    #2AZPC           CMP Std Lean Pe
     C                     Z-ADDP1A0PC    #2A0PC           CMP Lean Factor
     C                     MOVEL*BLANK    #2AJST           RS Record Statu
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Chk Carc Merit Mtx Col Rt - Carcass Merit Matrix Col  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BZAMCD    WQSA01           CMP Program Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           CMP Program Cod
      * Setup key
     C                     MOVEL#1AMCD    WQSA01           CMP Program Cod
      * Establish starting position
     C           KRSSA     SETLL@BZREGI                    *
     C           KRSSA     READE@BZREGI                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0134' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     MOVEL'999'     W0RTN            *Return code
      * Send message 'Crcss Mrt Matrix Col Exis'
     C                     MOVEL'PRK0266' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     98    *
      *
     C                     GOTO SAEXIT                     *QUIT
     C           KRSSA     READE@BZREGI                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Chk Carc Merit Mtx Row RT - Carcass Merit Matrix Row  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BYAMCD    WQSB01           CMP Program Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           CMP Program Cod
      * Setup key
     C                     MOVEL#1AMCD    WQSB01           CMP Program Cod
      * Establish starting position
     C           KRSSB     SETLL@BYREGF                    *
     C           KRSSB     READE@BYREGF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0132' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     MOVEL'999'     W0RTN            *Return code
      * Send message 'Crcss Mrt Matrix Row Exis'
     C                     MOVEL'PRK0267' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     98    *
      *
     C                     GOTO SBEXIT                     *QUIT
     C           KRSSB     READE@BYREGF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Chk Crcs Mrt/Prd Sc    Rt - Producer Sub-Contract  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN AQAMCD    WQSC01           CMP Program Cod
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           CMP Program Cod
      * Setup key
     C                     MOVEL#1AMCD    WQSC01           CMP Program Cod
      * Establish starting position
     C           KRSSC     SETLL@AQCPLP                    *
     C           KRSSC     READE@AQCPLP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0037' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     MOVEL'999'     W0RTN            *Return code
      * Send message 'Prdcr Sub-Contract Exists'
     C                     MOVEL'PRK0264' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     98    *
      *
     C                     GOTO SCEXIT                     *QUIT
     C           KRSSC     READE@AQCPLP                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Chk CMP in BOH        RT - Buy Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN AWAMCD    WQSD01           CMP Program Cod
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           CMP Program Cod
      * Setup key
     C                     MOVEL#1AMCD    WQSD01           CMP Program Cod
      * Establish starting position
     C           KRSSD     SETLL@AWCPSB                    *
     C           KRSSD     READE@AWCPSB                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0049' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     MOVEL'999'     W0RTN            *Return code
      * Send message 'Buy Order Header Exists.'
     C                     MOVEL'PRK0263' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     98    *
      *
     C                     GOTO SDEXIT                     *QUIT
     C           KRSSD     READE@AWCPSB                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SEDLRC    BEGSR
      *================================================================
      * DLT Carc Merit Prg    DO - Carcass Merit Program  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @ARREBG
     C                     MOVEL#1AMCD    WAAMCD           CMP Program Cod
      *
     C           KLDLSE    KLIST
     C                     KFLD           WAAMCD           CMP Program Cod
     C           KLDLSE    CHAIN@ARREBG              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PKARREL1'MDACP
     C                     MOVEL'@ARREBG' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@ARREBG                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * DLT Carc Mrt Pgm Com  RT - Carcass Merit Prog Com  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN B0AMCD    WQSF01           CMP Program Cod
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           CMP Program Cod
      * Setup key
     C                     MOVEL#1AMCD    WQSF01           CMP Program Cod
      * Establish starting position
     C           KRSSF     SETLL@B0REGL                    *
     C           KRSSF     READE@B0REGL                  90*
      * Data record not found
     C   90                MOVEL'PRK0136' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * DLT Carc Mrt Prg Com  DO - Carcass Merit Prog Com  * 
     C                     EXSR SGDLRC
     C           KRSSF     READE@B0REGL                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGDLRC    BEGSR
      *================================================================
      * DLT Carc Mrt Prg Com  DO - Carcass Merit Prog Com  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @B0REGK
     C                     MOVELB0AMCD    WBAMCD           CMP Program Cod
     C                     Z-ADDB0ESNB    WBESNB           CMPC Comment Li
      *
     C           KLDLSG    KLIST
     C                     KFLD           WBAMCD           CMP Program Cod
     C                     KFLD           WBESNB           CMPC Comment Li
     C           KLDLSG    CHAIN@B0REGK              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PKB0REL0'MDACP
     C                     MOVEL'@B0REGK' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL002.
     C                     MOVEL'LBL002'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@B0REGK                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Check Carcass Merit Matrix relationships
      *================================================================
      * Chk Carc Merit Mtx Col Rt - Carcass Merit Matrix Col  * 
     C                     EXSR SARVGN
      * Chk Carc Merit Mtx Row RT - Carcass Merit Matrix Row  * 
     C                     EXSR SBRVGN
      * Chk Crcs Mrt/Prd Sc    Rt - Producer Sub-Contract  * 
     C                     EXSR SCRVGN
      * Chk CMP in BOH        RT - Buy Order Header  * 
     C                     EXSR SDRVGN
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD9         ZHSTRW  40
     C                     Z-ADD20        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           ZHCSRW    IFEQ 008
     C           ZHCSCL    ANDEQ036
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#2DLST'  YPMTFD           CMP Grading Typ
     C                     END
      *
     C           ZHCSRW    IFEQ 008
     C           ZHCSCL    ANDEQ044
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#2DMST'  YPMTFD           CMP Sort Basis
     C                     END
      *
     C           ZHCSRW    IFEQ 008
     C           ZHCSCL    ANDGE050
     C           ZHCSCL    ANDLE051
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#2DQST'  YPMTFD           CMP Carc Wgt Ty
     C                     END
      *
     C           ZHCSRW    IFEQ 008
     C           ZHCSCL    ANDEQ073
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#2AJST'  YPMTFD           RS Record Statu
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              9292  *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1A3TX           CMP Description
     C                     MOVEL*BLANK    P1DLST           CMP Grading Typ
     C                     MOVEL*BLANK    P1DMST           CMP Sort Basis
     C                     MOVEL*BLANK    P1DOST           CMP Sts
     C                     MOVEL*BLANK    P1DQST           CMP Carc Wgt Ty
     C                     Z-ADD*ZERO     P1AZPC           CMP Std Lean Pe
     C                     Z-ADD*ZERO     P1A0PC           CMP Lean Factor
     C                     MOVEL*BLANK    P1DTST           CMP Optimal Row
     C                     MOVEL*BLANK    P2ETTX           PRT Description
     C                     MOVEL*BLANK    P2ACVN           PRT Printer Dev
     C                     MOVEL*BLANK    P2AKST           PRT Hold Output
     C                     MOVEL*BLANK    P2AMST           PRT Save Output
     C                     Z-ADD*ZERO     P2AKNB           PRT Copies
     C                     MOVEL*BLANK    P2ALST           PRT Night Queue
     C                     MOVEL*BLANK    P2AIVN           PRT Night Queue
     C                     MOVEL*BLANK    P3J8NB           Oms Warehouse C
     C                     Z-ADD*ZERO     P3HONB           CC Company Numb
     C                     MOVEL*BLANK    P3C7CD           Oms Application
     C                     MOVEL*BLANK    P3C8CD           Oms SalesPerson
     C                     MOVEL*BLANK    P3G8ST           Oms Allow Multi
     C                     MOVEL*BLANK    P3G9ST           Oms Default Pri
     C                     MOVEL*BLANK    P3EUTX           Oms Name
     C                     MOVEL*BLANK    P3EVTX           Oms System Valu
     C                     MOVEL*BLANK    P3HAST           Oms Access Deni
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field First Time Flag Usr
     C                     MOVEL*BLANK    WUHBST  1
      * Define work field Blank USR
     C                     MOVEL*BLANK    WUCRTX 80
      * Define work field Display Print Prompt  Usr
     C                     MOVEL*BLANK    WUHJST  1
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAZPC           CMP Std Lean Pe
     C                     Z-ADD*ZERO     WAA0PC           CMP Lean Factor
     C                     Z-ADD*ZERO     WAI1PR           CMP Market Add/
     C                     Z-ADD*ZERO     WAVEPR           CMP % of Carcas
     C                     Z-ADD*ZERO     WAVFPR           CMP Fixed Cost
     C                     Z-ADD*ZERO     WAVHPR           CMP Grade Type
     C                     Z-ADD*ZERO     WAVIPR           CMP Unused Pric
     C                     Z-ADD*ZERO     WAVJPR           CMP Unused Pric
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBESNB           CMPC Comment Li
     C                     Z-ADD*ZERO     WBAADT           RS Date Changed
     C                     Z-ADD*ZERO     WBAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WBABDT           RS Date Added
     C                     Z-ADD*ZERO     WBABTM           RS Time Added
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD12        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Modifications
      * 11/05/2020 ISE H16853 - Recompiled due to change in Buy Order Num
      * Val Application/User  IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                     CALL 'PDGXXFR'              90  Val Application
     C                     PARM *BLANK    W0RTN   7
     C           P3J8NB    PARM *BLANK    WQ0035  3        Oms Warehouse C
     C           WUE9NB    PARM *ZERO     WQ0036  30       CC Company Numb
     C                     PARM 'HPE'     WQ0037  6        Oms Application
     C           P3C8CD    PARM *BLANK    WQ0038  3        Oms SalesPerson
     C           P3G8ST    PARM *BLANK    WQ0039  1        Oms Allow Multi
     C           P3G9ST    PARM *BLANK    WQ0040 10        Oms Default Pri
     C           P3EUTX    PARM *BLANK    WQ0041 30        Oms Name
     C           P3EVTX    PARM *BLANK    WQ0042 40        Oms System Valu
     C           P3HAST    PARM *BLANK    WQ0043  1        Oms Access Deni
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P3HAST    IFEQ 'Y'                        *IF
      * Send message 'Access Denied for User'
     C                     MOVEL'PRK0298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Mov ApplN to Company  US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP3EVTX    ##CMP
     C                     END                             *FI
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P3HAST    IFEQ 'Y'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     MOVEL'N'       P2ALST           PRT Night Queue
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Print CMP List
00002 Carcass Merit Program
