// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PONSEFR
// ?Date: 14.08.2025 Time: 03:38:16
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// LCL.First Time Flag = CND.Yes
LCL.First_Time_Flag = 'Y';

// PAR.Ship to Customer      USR = CON.*ZERO
PAR.Ship_to_Customer_USR = *ZERO;

// LCL.Record Selected       USR = CND.no
LCL.Record_Selected_USR = 'N';

//?RMC E2199 02/13/13 Chk Sub Ledger Code is A/R or Ship To when cking for
//?    Vendor gl number
//?RMC EXPCOM 10/21/04 remove company from file
//?RMC DLY029 05/23/07 Db changes
//?USER: Initialize subfile header

// CTL.Ship To Customer = PAR.Ship To Customer
CTL.Ship_To_Customer = PAR.Ship_To_Customer;

// CTL.Accrual Code = PAR.Accrual Code
CTL.Accrual_Code = PAR.Accrual_Code;

// CTL.Period Beginning Date = PAR.Period Beginning Date
CTL.Period_Beginning_Date = PAR.Period_Beginning_Date;

// CTL.Period Ending Date = PAR.Period Ending Date
CTL.Period_Ending_Date = PAR.Period_Ending_Date;

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(CTL.Ship_To_Customer);
PARAMETER(CTL.Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Accrual Descript   RT) TYPE(RTVOBJ) FILE(OMHLREP)          AC1285204;
PARAMETER(CTL.Accrual_Code);
PARAMETER(CTL.Accrual_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// CTL.Begin Contract Date = PAR.Period Beginning Date
CTL.Begin_Contract_Date = PAR.Period_Beginning_Date;

// CTL.End Date Effective = PAR.Period Ending Date
CTL.End_Date_Effective = PAR.Period_Ending_Date;

// CTL.Accrual Rate Type USR = PAR.Accrual Rate Type
CTL.Accrual_Rate_Type_USR = PAR.Accrual_Rate_Type;

MOVE *ALL (To: CTL From: PAR);

//?OUTPUT Accrual Rate
CASE;

// IF CTL.All Products (Y/N) is Yes
IF CTL.All_Products_Y_N = 'Y';

// OR CTL.All Products (Y/N) is Yes + Exceptions
OR CTL.All_Products_Y_N = 'X';

CASE;

// IF CTL.Accrual Rate Type USR is All Sales
IF CTL.Accrual_Rate_Type_USR = 'W'/'S'/'Q'/'G'/'FA';

// LCL.Output Only 1 USR = CND.no
LCL.Output_Only_1_USR = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Output Only 1 USR = CND.yes
LCL.Output_Only_1_USR = 'Y';

ENDIF;

//?OUTPUT Accrual Rate
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Output Only 1 USR = CND.no
LCL.Output_Only_1_USR = 'N';

ENDIF;

//?USER: Validate subfile control

//?SEL:  Customer
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.Ship to Customer      USR
AND PGM.*Cursor_field = CTL.Ship_to_Customer_USR;

//?41904 slm Add Select on Shipped to Customer with Customer search
// Call program SEL Cust/ShpTo Flag 'Y'SR.
CALL PROGRAM(SEL Cust/ShpTo Flag 'Y'SR) ('PDYSSRR');
PARAMETER(CTL.Ship_to_Customer_USR);

ENDIF;

//?SEL:  Accrual
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.accrual code usr
AND PGM.*Cursor_field = CTL.accrual_code_usr;

// Call program SEL Acrl Code by/REnt SR.
CALL PROGRAM(SEL Acrl Code by/REnt SR) ('PNNGSRR');
PARAMETER('C');
PARAMETER(CTL.accrual_code_usr);

ENDIF;

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(CTL.Ship_to_Customer_USR);
PARAMETER(CTL.Customer_Name_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?VAL:  Ship To Customer
CASE;

// IF CTL.Ship to Customer      USR EQ WRK.ZERO
IF CTL.Ship_to_Customer_USR = WRK.ZERO;

// OR CTL.Customer Name         USR is Not entered
OR CTL.Customer_Name_USR = *BLANK;

// Send error message - 'Customer Master not found.'
ERROR(USR0170);
MSGPARM(CTL.Ship_to_Customer_USR);

ENDIF;

//?begin date
CASE;

// IF CTL.Begin Contract Date is Not Entered
IF CTL.Begin_Contract_Date = *ZERO;

// Send error message - 'Date must be entered.'
ERROR(USR0231);
MSGPARM(CTL.Begin_Contract_Date);

ENDIF;

//?end date
CASE;

// IF CTL.End Date Effective is not entered
IF CTL.End_Date_Effective = *ZERO;

// Send error message - 'Date must be entered.'
ERROR(USR0231);
MSGPARM(CTL.End_Date_Effective);

ENDIF;

//?VAL:  Period Begin/End
CASE;

// IF CTL.Begin Contract Date GT CTL.End Date Effective
IF CTL.Begin_Contract_Date > CTL.End_Date_Effective;

// Send error message - 'Beginning period must be less than or equal to the ending period'
ERROR(USR0128);

ENDIF;

EXECUTE FUNCTION(Val Acrl Code by/REnt RT) TYPE(RTVOBJ) FILE(OMHLREP)           AC1964678;
PARAMETER('C');
PARAMETER(CTL.accrual_code_usr);
PARAMETER(LCL.Record_Found_USR);
PARAMETER(NLL.Accrual_Type);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF LCL.Record Found USR is Record Not Found
IF LCL.Record_Found_USR = 'N';

// Send error message - 'Accrual Program Code not found.'
ERROR(USR1514);
MSGPARM(CTL.accrual_code_usr);

ENDIF;

//?VAL:  Accrual Rate
CASE;

// IF CTL.All Products (Y/N) is Yes
IF CTL.All_Products_Y_N = 'Y';

// OR CTL.All Products (Y/N) is Yes + Exceptions
OR CTL.All_Products_Y_N = 'X';

CASE;

// IF CTL.Accrual Rate Type USR is All Sales
IF CTL.Accrual_Rate_Type_USR = 'W'/'S'/'Q'/'G'/'FA';

CASE;

// IF CTL.Accrual Rate is equal to zero
IF CTL.Accrual_Rate = *ZERO;

// Send error message - 'Rate must be entered.'
ERROR(USR1537);
MSGPARM(CTL.Accrual_Rate);

ENDIF;

ENDIF;

ENDIF;

EXECUTE FUNCTION(Rtv Broker/ GL Vendor RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1684471;
PARAMETER(CTL.Ship_to_Customer_USR);
PARAMETER(WRK.Customer_G_L_Vendor_Num);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Subledger,Type    RT) TYPE(RTVOBJ) FILE(OMHLREP)           AC1718114;
PARAMETER(CTL.Accrual_Code);
PARAMETER(WRK.Accrual_Type);
PARAMETER(WRK.Sub_Ledger_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF WRK.Accrual Type is Trade Fund
IF ( ( WRK.Accrual_Type = 'TF';

// AND WRK.Sub Ledger Code is *ALL values
AND WRK.Sub_Ledger_Code = 'A'/'S'/'B'/'G'/'T'/*BLANK/'P' );

// OR WRK.Sub Ledger Code is A/R or Ship To
OR WRK.Sub_Ledger_Code = 'A'/'S' );

// AND WRK.Customer G/L Vendor Num is Not Entered
AND WRK.Customer_G_L_Vendor_Num = *ZERO;

// Send error message - 'G/L Vendor Number not found for Customer.'
ERROR(USR3335);

ENDIF;

//?USER: Validate subfile record fields

//?Select Item
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> RCD.Item Code
AND PGM.*Cursor_field = RCD.Item_Code;

// Call program SEL Item Default       SR.
CALL PROGRAM(SEL Item Default       SR) ('OMZ8SRR');
PARAMETER(RCD.Item_Code);

ENDIF;

CASE;

// IF RCD.*SFLSEL is *Select#1
IF RCD.*SFLSEL = '1';

// LCL.Record Selected       USR = CND.yes
LCL.Record_Selected_USR = 'Y';

ENDIF;

//?USER: Change DBF record

EXECUTE FUNCTION(Crt OM cst Accrual    IF) TYPE(EXCINTFUN) FILE(OMHPREP)        AC1636844;
PARAMETER(CTL.Ship_to_Customer_USR);
PARAMETER(CTL.accrual_code_usr);
PARAMETER(RCD.CAH_Sequence_No);
PARAMETER(RCD.Item_Code);
PARAMETER(CTL.Accrual_Rate);
PARAMETER(RCD.EDI_Status_1);
PARAMETER(RCD.EDI_Status_2);
PARAMETER(RCD.EDI_Status_3);
PARAMETER(RCD.*SFLSEL);
PARAMETER(RCD.Accrual_Rate);
PARAMETER(LCL.First_Time_Flag);
PARAMETER(CTL.Begin_Contract_Date);
PARAMETER(CTL.End_Date_Effective);
PARAMETER(CTL.All_Products_Y_N);
PARAMETER(RCD.Accrual_Rate_Type);
PARAMETER(CTL.Comm_Threshold_Period);
PARAMETER(CTL.CAH_Unused_Date_1);
PARAMETER(CTL.CAH_Unused_Date_2);
PARAMETER(CTL.Comm_Min_Amt_Period);
PARAMETER(CTL.Comm_Retroactive_Sts);
PARAMETER(CTL.Accrual_Detail_Search);
PARAMETER(CTL.Broker_Code);
PARAMETER(CTL.Max_Accrual_Amount);
PARAMETER(CTL.Commission_Not_Comm_Sts);
PARAMETER(CTL.Accrual_Rate_Type_USR);
{
 //?Execute internal function

 CASE;

 // IF PAR.First Time Flag is Yes
 IF PAR.First_Time_Flag = 'Y';

 EXECUTE FUNCTION(Rtv Crt Header        RT) TYPE(RTVOBJ) FILE(OMHOREP)           AC1637080;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Accrual_Code);
 PARAMETER(PAR.CAH_Sequence_No);
 PARAMETER(PAR.Begin_Contract_Date);
 PARAMETER(PAR.End_Date_Effective);
 PARAMETER(PAR.Accrual_Rate);
 PARAMETER(PAR.All_Products_Y_N);
 PARAMETER(PAR.Accrual_Rate_Type_USR);
 PARAMETER(PAR.Comm_Threshold_Period);
 PARAMETER(PAR.CAH_Unused_Date_1);
 PARAMETER(PAR.CAH_Unused_Date_2);
 PARAMETER(PAR.Comm_Min_Amt_Period);
 PARAMETER(PAR.Comm_Retroactive_Sts);
 PARAMETER(PAR.Accrual_Detail_Search);
 PARAMETER(PAR.Broker_Code);
 PARAMETER(PAR.Max_Accrual_Amount);
 PARAMETER(PAR.Commission_Not_Comm_Sts);
 PARAMETER(PAR.EDI_Status_1);
 PARAMETER(PAR.EDI_Status_2);
 PARAMETER(PAR.EDI_Status_3);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(CRT OM Cust Accrual He CR) TYPE(CRTOBJ) FILE(OMHOREP)          AC1221740;
  PARAMETER(PAR.Ship_To_Customer);
  PARAMETER(PAR.Accrual_Code);
  PARAMETER(PAR.CAH_Sequence_No);
  PARAMETER(PAR.Period_Beginning_Date);
  PARAMETER(PAR.Period_Ending_Date);
  PARAMETER(PAR.Accrual_Rate);
  PARAMETER(PAR.All_Products_Y_N);
  PARAMETER(PAR.Accrual_Rate_Type);
  PARAMETER(PAR.Comm_Threshold_Period);
  PARAMETER(PAR.CAH_Unused_Date_1);
  PARAMETER(PAR.CAH_Unused_Date_2);
  PARAMETER(PAR.Comm_Min_Amt_Period);
  PARAMETER(PAR.Comm_Retroactive_Sts);
  PARAMETER(PAR.Accrual_Detail_Search);
  PARAMETER(PAR.Broker_Code);
  PARAMETER(PAR.Max_Accrual_Amount);
  PARAMETER(PAR.Commission_Not_Comm_Sts);
  PARAMETER(PAR.CAH_Unused_Sts_3);
  PARAMETER(PAR.CAH_Unused_Sts_4);
  PARAMETER(PAR.CAH_Unused_Sts_5);
  PARAMETER(PAR.EDI_Status_1);
  PARAMETER(PAR.EDI_Status_2);
  PARAMETER(PAR.EDI_Status_3);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

 // PAR.First Time Flag = CND.NO
 PAR.First_Time_Flag = 'N';

 ENDIF;

 CASE;

 // IF PAR.*SFLSEL is *Select
 IF PAR.*SFLSEL = '1'/'1';

 EXECUTE FUNCTION(CRT OM Cust Accrual De CR) TYPE(CRTOBJ) FILE(OMHPREP)          AC1221729;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Accrual_Code);
 PARAMETER(PAR.CAH_Sequence_No);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.USR_Work_Percent_7_6);
 PARAMETER(PAR.Accrual_Rate_Type);
 PARAMETER(PAR.EDI_Status_1);
 PARAMETER(PAR.EDI_Status_2);
 PARAMETER(PAR.EDI_Status_3);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

}


//?USER: Process command keys

CASE;

// IF CTL.*CMD key is CF15
IF CTL.*CMD_key = '15';

CASE;

// IF CTL.accrual code usr is Not Entered
IF CTL.accrual_code_usr = *BLANK;

// OR CTL.Ship to Customer      USR is Not entered
OR CTL.Ship_to_Customer_USR = *ZERO;

// Send error message - 'Accrual Code & Ship To required for copy.'
ERROR(USR3334);
MSGPARM(CTL.accrual_code_usr);
MSGPARM(CTL.Ship_to_Customer_USR);

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Crt OM Cust Accrl ALL IF) TYPE(EXCINTFUN)                      AC1636920;
PARAMETER(CTL.Ship_To_Customer);
PARAMETER(CTL.Accrual_Code);
PARAMETER(CTL.CAH_Sequence_No);
PARAMETER(CTL.Accrual_Rate);
PARAMETER(WRK.Blank_for_4_USR);
PARAMETER(WRK.Blank_for_4_USR);
PARAMETER(WRK.Blank_for_4_USR);
PARAMETER(CTL.Ship_to_Customer_USR);
PARAMETER(CTL.End_Date_Effective);
PARAMETER(CTL.Begin_Contract_Date);
PARAMETER(CTL.All_Products_Y_N);
PARAMETER(CTL.Accrual_Rate_Type_USR);
PARAMETER(CTL.Comm_Threshold_Period);
PARAMETER(CTL.CAH_Unused_Date_1);
PARAMETER(CTL.CAH_Unused_Date_2);
PARAMETER(CTL.Comm_Min_Amt_Period);
PARAMETER(CTL.Comm_Retroactive_Sts);
PARAMETER(CTL.Accrual_Detail_Search);
PARAMETER(CTL.Broker_Code);
PARAMETER(CTL.Max_Accrual_Amount);
PARAMETER(CTL.Commission_Not_Comm_Sts);
PARAMETER(CTL.accrual_code_usr);
{
 //?Execute internal function

 //?RMC DLY029 05/23/07 Db changes -get next seq for new cust accrual
 // WRK.CAH Sequence No = CON.*ZERO
 WRK.CAH_Sequence_No = 0;

 EXECUTE FUNCTION(Rtv Next Seq for Cust RT) TYPE(RTVOBJ) FILE(OMHOREP)           AC1823554;
 PARAMETER(PAR.Ship_to_Customer_USR);
 PARAMETER(PAR.Accrual_Code);
 PARAMETER(WRK.CAH_Sequence_No);
 {
  //?USER: Process Data record

  //?pass out last seq found
  // PAR.CAH Sequence No = DB1.CAH Sequence No
  PAR.CAH_Sequence_No = DB1.CAH_Sequence_No;

 }

 // WRK.CAH Sequence No = WRK.CAH Sequence No + CON.1
 WRK.CAH_Sequence_No = WRK.CAH_Sequence_No + 1;

 EXECUTE FUNCTION(Rtv Crt Header        RT) TYPE(RTVOBJ) FILE(OMHOREP)           AC1637080;
 PARAMETER(PAR.Ship_to_Customer_USR);
 PARAMETER(PAR.accrual_code_usr);
 PARAMETER(WRK.CAH_Sequence_No);
 PARAMETER(PAR.Begin_Contract_Date);
 PARAMETER(PAR.End_Date_Effective);
 PARAMETER(PAR.Accrual_Rate);
 PARAMETER(PAR.All_Products_Y_N);
 PARAMETER(PAR.Accrual_Rate_Type);
 PARAMETER(PAR.Comm_Threshold_Period);
 PARAMETER(PAR.CAH_Unused_Date_1);
 PARAMETER(PAR.CAH_Unused_Date_2);
 PARAMETER(PAR.Comm_Min_Amt_Period);
 PARAMETER(PAR.Comm_Retroactive_Sts);
 PARAMETER(PAR.Accrual_Detail_Search);
 PARAMETER(PAR.Broker_Code);
 PARAMETER(PAR.Max_Accrual_Amount);
 PARAMETER(PAR.Commission_Not_Comm_Sts);
 PARAMETER(PAR.EDI_Status_1);
 PARAMETER(PAR.EDI_Status_2);
 PARAMETER(PAR.EDI_Status_3);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(CRT OM Cust Accrual He CR) TYPE(CRTOBJ) FILE(OMHOREP)          AC1221740;
  PARAMETER(PAR.Ship_To_Customer);
  PARAMETER(PAR.Accrual_Code);
  PARAMETER(PAR.CAH_Sequence_No);
  PARAMETER(PAR.Period_Beginning_Date);
  PARAMETER(PAR.Period_Ending_Date);
  PARAMETER(PAR.Accrual_Rate);
  PARAMETER(PAR.All_Products_Y_N);
  PARAMETER(PAR.Accrual_Rate_Type);
  PARAMETER(PAR.Comm_Threshold_Period);
  PARAMETER(PAR.CAH_Unused_Date_1);
  PARAMETER(PAR.CAH_Unused_Date_2);
  PARAMETER(PAR.Comm_Min_Amt_Period);
  PARAMETER(PAR.Comm_Retroactive_Sts);
  PARAMETER(PAR.Accrual_Detail_Search);
  PARAMETER(PAR.Broker_Code);
  PARAMETER(PAR.Max_Accrual_Amount);
  PARAMETER(PAR.Commission_Not_Comm_Sts);
  PARAMETER(PAR.CAH_Unused_Sts_3);
  PARAMETER(PAR.CAH_Unused_Sts_4);
  PARAMETER(PAR.CAH_Unused_Sts_5);
  PARAMETER(PAR.EDI_Status_1);
  PARAMETER(PAR.EDI_Status_2);
  PARAMETER(PAR.EDI_Status_3);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

 EXECUTE FUNCTION(RTV & Cpy Cust AccDtl  RT) TYPE(RTVOBJ) FILE(OMHPREP)          AC1636922;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Accrual_Code);
 PARAMETER(PAR.CAH_Sequence_No);
 PARAMETER(PAR.Ship_to_Customer_USR);
 PARAMETER(PAR.Begin_Contract_Date);
 PARAMETER(PAR.End_Date_Effective);
 PARAMETER(PAR.accrual_code_usr);
 PARAMETER(WRK.CAH_Sequence_No);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(RTV & Cpy to New Cst  RT) TYPE(RTVOBJ) FILE(OMHPREP)           AC1637087;
  PARAMETER(PAR.Ship_to_Customer_USR);
  PARAMETER(PAR.accrual_code_usr);
  PARAMETER(PAR.Sequence);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Accrual_Rate);
  PARAMETER(DB1.Accrual_Rate_Type);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(CRT OM Cust Accrual De CR) TYPE(CRTOBJ) FILE(OMHPREP)          AC1221729;
   PARAMETER(PAR.Ship_To_Customer);
   PARAMETER(PAR.Accrual_Code);
   PARAMETER(PAR.CAH_Sequence_No);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Accrual_Rate);
   PARAMETER(PAR.Accrual_Rate_Type);
   PARAMETER(PAR.EDI_Status_1);
   PARAMETER(PAR.EDI_Status_2);
   PARAMETER(PAR.EDI_Status_3);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

   // PGM.*Return code = CND.*Normal
   PGM.*Return_code = *BLANK;

   //?USER: Process Data record

   QUIT;

  }

 }

}


// PAR.Ship to Customer      USR = CTL.Ship to Customer      USR
PAR.Ship_to_Customer_USR = CTL.Ship_to_Customer_USR;

RETURN;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF LCL.Record Selected       USR is no
IF LCL.Record_Selected_USR = 'N';

// Send error message - 'Must Select 1 Accrual or F15 for All.'
ERROR(USR3091);

ENDIF;

ENDIF;

ENDIF;

