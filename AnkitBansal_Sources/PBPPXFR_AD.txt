// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBPPXFR
// ?Date: 31.08.2025 Time: 22:18:14
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// PAR.DP Location = CON.*BLANK
PAR.DP_Location = *BLANK;

// PAR.DP Region Txt USR = CON.*BLANK
PAR.DP_Region_Txt_USR = *BLANK;

// LCL.Parent Customer = PAR.Parent Customer
LCL.Parent_Customer = PAR.Parent_Customer;

// PAR.DP Type Code USR = PAR.SH Order Sales Channel
PAR.DP_Type_Code_USR = PAR.SH_Order_Sales_Channel;

CASE;

// IF PAR.SH Order Sales Channel EQ WRK.Blank for 3          USR
IF PAR.SH_Order_Sales_Channel = WRK.Blank_for_3_USR;

EXECUTE FUNCTION(RTV Type Code by Cust  RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1625687;
PARAMETER(PAR.Parent_Customer);
PARAMETER(PAR.DP_Type_Code_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Sales channel
CASE;

// IF PAR.SH Order Sales Channel is IS
IF PAR.SH_Order_Sales_Channel = 'IS';

// PAR.DP Type Code USR = CND.Intercompany
PAR.DP_Type_Code_USR = 'IC';

//?Sales channel
// IF PAR.SH Order Sales Channel is ES
IF PAR.SH_Order_Sales_Channel = 'ES';

// PAR.DP Type Code USR = CND.Export
PAR.DP_Type_Code_USR = 'EX';

//?Sales channel
// IF PAR.SH Order Sales Channel is TR
IF PAR.SH_Order_Sales_Channel = 'TR';

// PAR.DP Type Code USR = CND.Further Processor
PAR.DP_Type_Code_USR = 'FP';

ENDIF;

//?Export - validate country - set Region
CASE;

// IF PAR.Export Status is yes
IF PAR.Export_Status = 'Y';

// OR PAR.DP Type Code USR is Export
OR PAR.DP_Type_Code_USR = 'EX';

// PAR.DP Type Code USR = CND.Export
PAR.DP_Type_Code_USR = 'EX';

EXECUTE FUNCTION(RTV Desc, Status       RT) TYPE(RTVOBJ) FILE(OME5REP)          AC1261065;
PARAMETER(PAR.Export_Country_Code);
PARAMETER(LCL.Country_Description);
PARAMETER(LCL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Country Description is Blank
IF LCL.Country_Description = *BLANK;

// PAR.DP Region Txt USR = CON.USA
PAR.DP_Region_Txt_USR = 'USA';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.DP Region Txt USR = PAR.Export Country Code
PAR.DP_Region_Txt_USR = PAR.Export_Country_Code;

// PAR.DP Type Code USR = CND.Export
PAR.DP_Type_Code_USR = 'EX';

ENDIF;

ENDIF;

//?Domestic - set region
CASE;

// IF PAR.Export Status is N/' ' Values
IF PAR.Export_Status = *BLANK/'N';

CASE;

// IF PAR.DP Type Code USR is Export
IF PAR.DP_Type_Code_USR = 'EX';

// IF *OTHERWISE
IF *OTHERWISE;

//?Not export
EXECUTE FUNCTION(RTV Territory using St RT) TYPE(RTVOBJ) FILE(PDLWREP)          AC1494008;
PARAMETER(PAR.Ship_To_State_Code);
PARAMETER(LCL.Territory_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 QUIT;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// LCL.Text 2 Length USR = LCL.Territory Code
LCL.Text_2_Length_USR = LCL.Territory_Code;

// PAR.DP Region Txt USR = LCL.Text 2 Length USR
PAR.DP_Region_Txt_USR = LCL.Text_2_Length_USR;

ENDIF;

ENDIF;

//?Force EX-CAN if ship to state is a canadian province
CASE;

// IF PAR.Ship To State Code is Manitoba
IF PAR.Ship_To_State_Code = 'MB';

// OR PAR.Ship To State Code is Ontario
OR PAR.Ship_To_State_Code = 'ON';

// OR PAR.Ship To State Code is Quebec(QB)
OR PAR.Ship_To_State_Code = 'QB';

// OR PAR.Ship To State Code is Toronto
OR PAR.Ship_To_State_Code = 'TO';

// OR PAR.Ship To State Code is Alberta
OR PAR.Ship_To_State_Code = 'AB';

// OR PAR.Ship To State Code is Quebec(QC)
OR PAR.Ship_To_State_Code = 'QC';

// PAR.DP Region Txt USR = CON.CAN
PAR.DP_Region_Txt_USR = 'CAN';

// PAR.DP Type Code USR = CND.Export
PAR.DP_Type_Code_USR = 'EX';

ENDIF;

//?IF Puerto Rico state force region to PR
CASE;

// IF PAR.Ship To State Code is Puerto Rico
IF PAR.Ship_To_State_Code = 'PR';

// PAR.DP Region Txt USR = CON.PR
PAR.DP_Region_Txt_USR = 'PR';

// PAR.DP Type Code USR = CND.Export
PAR.DP_Type_Code_USR = 'EX';

ENDIF;

//?IF Wash DC state force region to NE
CASE;

// IF PAR.Ship To State Code is DC
IF PAR.Ship_To_State_Code = 'DC';

// PAR.DP Region Txt USR = CON.NE
PAR.DP_Region_Txt_USR = 'NE';

ENDIF;

EXECUTE FUNCTION(Rtv CCE Class ABC-DP  RT) TYPE(RTVOBJ) FILE(PDNIREP)           AC2097330;
PARAMETER(PAR.Parent_Customer);
PARAMETER(LCL.CCE_Classification_ABC);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?C CLass
CASE;

// IF LCL.CCE Classification ABC is Class C
IF LCL.CCE_Classification_ABC = 'C';

// OR LCL.CCE Classification ABC is *Blank
OR LCL.CCE_Classification_ABC = *BLANK;

// LCL.Parent Customer = CND.Parent C Class
LCL.Parent_Customer = 99999;

CASE;

// IF PAR.DP Type Code USR is Export
IF PAR.DP_Type_Code_USR = 'EX';

// PAR.DP Location = CON.99999-EX-EXP
PAR.DP_Location = '99999-EX-EXP';

// PAR.DP Region Txt USR = CON.EXP
PAR.DP_Region_Txt_USR = 'EXP';

QUIT;

ENDIF;

ENDIF;

//?All other customers-- format parent-type-region
//?Format DP Location
DO;

// PAR.DP Location = CON.*BLANK
PAR.DP_Location = *BLANK;

//?Zero Suppress customer left justify
CASE;

// IF LCL.Parent Customer is GE 1000000
IF LCL.Parent_Customer >= 1000000;

// LCL.Customer Number Alpha = CVTVAR(LCL.Parent Customer)
LCL.Customer_Number_Alpha = CVTVAR(LCL.Parent_Customer);

// PAR.DP Location = LCL.Customer Number Alpha
PAR.DP_Location = LCL.Customer_Number_Alpha;

//?Zero Suppress customer left justify
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF LCL.Parent Customer is GE 100000
IF LCL.Parent_Customer >= 100000;

// LCL.USR number = LCL.Parent Customer
LCL.USR_number = LCL.Parent_Customer;

// LCL.customer = CVTVAR(LCL.USR number)
LCL.customer = CVTVAR(LCL.USR_number);

// PAR.DP Location = LCL.customer
PAR.DP_Location = LCL.customer;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Number 5,0            USR = LCL.Parent Customer
LCL.Number_50_USR = LCL.Parent_Customer;

// LCL.Text USR 5 = CVTVAR(LCL.Number 5,0            USR)
LCL.Text_USR_5 = CVTVAR(LCL.Number_50_USR);

// PAR.DP Location = LCL.Text USR 5
PAR.DP_Location = LCL.Text_USR_5;

ENDIF;

ENDIF;

// WRK.Text 3 Length USR = CONCAT(PAR.DP Type Code USR,CON.-,CON.*ZERO)
WRK.Text_3_Length_USR = PAR.DP_Type_Code_USR + '-' (*ZERO);

CASE;

// IF PAR.DP Region Txt USR is Entered
IF PAR.DP_Region_Txt_USR > *BLANK;

// LCL.Text USR 6 = CONCAT(WRK.Text 3 Length USR,PAR.DP Region Txt USR,CON.*ZERO)
LCL.Text_USR_6 = WRK.Text_3_Length_USR + PAR.DP_Region_Txt_USR (*ZERO);

// LCL.Text USR 7 = CONCAT(CON.-,LCL.Text USR 6,CON.*ZERO)
LCL.Text_USR_7 = '-' + LCL.Text_USR_6 (*ZERO);

// PAR.DP Location = CONCAT(PAR.DP Location,LCL.Text USR 7,CON.*ZERO)
PAR.DP_Location = PAR.DP_Location + LCL.Text_USR_7 (*ZERO);

ENDIF;

ENDDO;

