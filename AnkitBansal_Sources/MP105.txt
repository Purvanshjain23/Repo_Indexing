      *****************  RPG PROGRAM HEADING  ************************
      *
      * ENVIRONMENT: PORK DIVISION
      * SYSTEM:      AS/400
      * PROGRAM:     MP105
      * TITLE:       Revise Exception Vendor
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     06/01/06
      *
      *
      * FUNCTION: Uses an edit record format to add/change/delete records from the
      *           file.
      *
      *           The field 'mode' contains the value passed into
      *           this program from the calling program.  The field
      *           'd1mode' is the screen field that displays the
      *           value of 'mode'.  Mode will be CREATE, REVISE or
      *           DELETE.           Once in the program, mode and
      *           d1mode will never change.  However, the action
      *           being performed can change depending on the function
      *           keys the user takes.
      *
      *           The user may delete an existing record by taking
      *           F11=DELETE from this program or option 4=DELETE
      *           from the WORK WITH. If the user is deleting with
      *           4=DELETE, no panel will be displayed from this program
      *           unless there is an error on the attempted deletion.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 03/12/08  LeAnne Ramsey
      *           We gave all functionality to High Plains Biodiesel. So,
      *           we now run over two different library lists. We replaced
      *           the hardcoding of Company=350 with a Data Area.
      *
      *  3/12/09  Brad Baden   E14631/Project 387-Seaboard Energy MP2 to JDE
      *           Recompiled only for new field in file MPP108.
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fmpd105    cf   e             workstn infds(iofeed)
      *
      *
     Fcaabrel1  if   e           k disk
      *    Company
      *
      *
     Fmpp107    uf a e           k disk
      *    Vendor exception
      *
      *
     Fmpp108    if   e           k disk
      *    MP2: Upload companies
      *
      *
     Fpkcwrel1  if   e           k disk
      *    GL Account codes
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D view            c                   'VIEW  '
     D select          c                   'SELECT'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D action          s                   like(mode)
     D maxmsg          s              2  0  inz(20)
      *
      *
      *
      * Parm fields
      *
     D xxglaccd        s                   like(veglaccd)
     D xxglacds        s                   like(cwggtx)
     D xxalphvnno      s              8
     D xxalphcono      s              3
     D xxacono         s                    like(d1acono)
     D xxaconm         s                    like(d1aconm)
      *
      ****************************************************************
      * DATA AREA
      ****************************************************************
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     update        $upd1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Clear fields on display panel if creating
      *
     C                   select
     C                   when      mode = create                                WH create
     C                   z-add     0             d1jdvnno
     C                   move      *blank        d1jdvnnm
     C                   move      *blank        d1glaccd
     C                   move      *blank        d1glacds
      *
      * If incoming mode is REVISE or DELETE, then retrieve the database
      * record.  Do not lock the record.  Typically, in DELETE mode, these
      * values will not be displayed. However, if there is an error on the
      * delete action, the panel will be displayed with messages.
      *
     C                   when      mode = revise or mode = delete               WH revise/delete
     C     key02         chain(n)  mpp107                             92
     C                   if        *in92 = *off                                 If found
     C                   move      vejdvnnm      d1jdvnnm
     C                   move      veglaccd      d1glaccd
     C                   z-add     veacono       d1acono
      *
      * Retrieve Company Name
      *
     C     d1acono       chain     caabrel1                           92
     C                   if        *in92 = *off
     C                   eval      d1aconm = abadtx
     C                   else
     C                   eval      d1aconm = *blank
     C                   endif
      *
      * Retrieve the GL Account description
      *
     C                   if        d1glaccd <> *blank
     C     key01         chain     pkcwrel1                           92
     C                   if        *in92 = *off
     C                   move      cwggtx        d1glacds
     C                   else
     C                   eval      d1glacds = 'Unknown'
     C                   endif
     C                   endif
     C                   else
      *
      * Vendor Exception record was not found
      *
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
      *
     C                   endif                                                  If found
     C                   endsl
      *
      * If the user is deleting and there were no errors when retrieving the
      * record, go on to the update routine without displaying the screen.
      * Otherwise, display the screen.
      *
     C                   if        error = 0 and action = delete                If no error
     C                   eval      routne = update
     C                   else
     C                   eval      routne = scrn1
     C                   endif                                                  If no error
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      *
      * Set indicators to control input/output fields and available
      * function keys.
      *
     c                   select
     C                   when      mode = revise
     C                   seton                                        60
      *
     C                   when      mode = create
     C                   seton                                        61
      *
     C                   when      mode = delete
     C                   seton                                        62
     c                   endsl
      *
      * Write screen 1 to CRT
      *
     C                   write     mp105k1
     C                   write     mp105ec
     C                   exfmt     mp105r1
      *
      * Clear messages
      *
     C                   exsr      $clmsg
      *
      * Reset action to be equal to the incoming mode.  This is required
      * in case the user took F11-Delete and got an error on the
      * deletion and now needs to be able to change the record and take
      * an action other than delete
      *
     C                   eval      action = mode
      *
      * Get user's input and set routine
      *
     C                   select
      *
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4=prompt
     C                   exsr      $f4s1
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      routne = set1
      *
     C                   when      *in12 = *on                                  F12-previous
     C                   eval      rtncd = '12'
     C                   eval      routne = exit
      *
     C                   when      *in11 = *on or mode = delete                 F11-delete
     C                   eval      action = delete
     C                   eval      routne = update
     C                   other
      *
      * User has pressed enter
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit input fields for screen 1
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * *IN62 will be on if the record the user is trying to access has
      * been deleted by another user.  So, only perform the edits for the
      * fields on the screen if the indicator is off
      *
     C                   if        *in62 = *off                                 If here
      *
      * If creating a new record, validate:
      *   1) vendor number
      *
     C                   if        action = create                              If create
     C                   exsr      $jdvnno
     C                   exsr      $acono
     C                   endif                                                  If create
      *
      * Always validate:
      *   1) GL account code
      *   2) vendor name
      *
     C                   exsr      $glaccd
     C                   exsr      $jdvnnm
     C                   endif                                                  If here
      *
      * If there are no errors, attempt the write/update; otherwise,
      * redisplay the screen.  If a record has been deleted out from
      * under the user (*IN62 is ON), then the error message will be
      * issued in the update subroutine.  So, always perform this code.
      *
     C                   if        error = 0
     C                   exsr      $upd1
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Vendor Number
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) cannot be negative
      *  3) cannot already exist in Vendor Exception file
      *
      *
     C     $jdvnno       begsr
      *
     C                   select
     C                   when      d1jdvnno = 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1jdvnno < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate name
      *---------------------------------------------------------------
      *
     C     $jdvnnm       begsr
      *
     C                   if        d1jdvnnm = *blank
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   endif
     C
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit Accounting Company
      *---------------------------------------------------------------
      *
     C     $acono        begsr
      *
     C                   move      *blank        d1aconm
      *
     C                   select
     C                   when      d1acono < 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
      *
     C                   when      d1acono = 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1acono > 0
      *
     C     d1acono       chain     caabrel1                           92
     C                   if        *in92 = *off                                 If hit
     C                   eval      d1aconm = abadtx
     C                   else
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS08020'
     C                   clear                   mgw
     C                   move      d1acono       xxalphcono
     C                   movea     xxalphcono    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
      *
      * Has this company been set up as an upload file from MP2
      *
     C     d1acono       chain     mpp108                             92
     C                   if        *in92 = *on
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09240'
     C                   endif
     C                   endif
     C                   endsl
      *
      * If both the Vendor and the Company are valid, check that the
      * combination does not already exist in the Vendor Exception file
      *
     C                   if        *in35 = *off and *in36 = *off                If OK so far
     C     key02         chain(n)  mpp107                             92
     C                   if        *in92 = *off
     C                   seton                                        3536
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09084'
     C                   endif
     C                   endif
     C                   endif                                                  If OK so far
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit GL Account Code
      *---------------------------------------------------------------
      *
      * Validations:
      *  1) must valid in the file
      *  2) must be for Company (from data area)
      *  3) must be active
      *
     C     $glaccd       begsr
      *
     C                   move      *blank        d1glacds
      *
     C                   select
     C                   when      d1glaccd = *blank
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     key01         chain     pkcwrel1                           92
     C                   if        *in92 = *on                                  If bad
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09083'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1glaccd      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      cwggtx        d1glacds
      *
     C                   if        cwajst <> 'A'
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09082'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1glaccd      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   endif                                                  If bad
     C
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      *  F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
     C                   select
      * Accounting company
     C                   when      fld = 'D1ACONO' and
     C                             *in60 = *off and *in62 = *off
     C                   call      'MP508'
     C                   parm      0             xxacono
     C                   parm      *blank        xxaconm
     C                   seton                                        56
     C                   if        xxacono <> 0
     C                   z-add     xxacono       d1acono
     C                   eval      d1aconm = xxaconm
     C                   endif
      * GL Account Code
      *
     C                   when      fld = 'D1GLACCD'
     C                   call      'MP510'
     C                   parm                    d1acono
     C                   parm      *blank        xxglaccd
     C                   parm      *blank        xxglacds
     C                   seton                                        57
     C                   if        xxglaccd <> *blank
     C                   movel     xxglaccd      d1glaccd
     C                   movel     xxglacds      d1glacds
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Write/update/delete record in database file
      *----------------------------------------------------------------
      *
     C     $upd1         begsr
      *
      * If the user is deleting,
      *   perform deletion integrity checks (if there are any)
      *
     C                   if        action = delete                              If delete
     C                   endif                                                  If delete
      *
      * If user action is revising or deleting, determine that the
      * record he is accessing still exists prior to attempting to
      * update.  Lock the record for update.
      *
     C                   if        error = 0 and                                If OK
     C                             (action = delete or action = revise)
      *
     C     d1jdvnno      chain     mpp107                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
      *
     C                   endif                                                  If not found
     C                   endif                                                  If OK
      *
      * If there are no errors, delete, revise or create the record.
      *
     C                   if        error = 0                                    If no error
      *
     c                   select
     C                   when      action = delete
     C                   delete    verec
     C                   other
      *
      * Move DSPF fields to database file fields
      *
     C                   z-add     d1jdvnno      vejdvnno
     C                   z-add     d1acono       veacono
     C                   move      d1jdvnnm      vejdvnnm
     C                   move      d1glaccd      veglaccd
      *
     C                   if        action = create                              If create
     C                   write     verec
     C                   else
     C                   update    verec
     C                   endif                                                  If create
     C                   endsl
     C                   endif                                                  If no error
      *
      * Set next routine
      *
     C                   select
     C                   when      mode = create                                Wh creating
     C                   if        error = 0
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09040'
     C                   eval      routne = set1
     c                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      error <> 0                                   Wh errors
     C                   eval      routne = scrn1
     C                   other
      *
     C                   eval      routne = exit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        lr
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    d1acono
     C                   kfld                    d1glaccd
      *
     C     key02         klist
     C                   kfld                    d1jdvnno
     C                   kfld                    d1acono
      *
      * Parm Lists
      *
     C     *entry        plist
     C     d1mode        parm                    mode
     C                   parm                    d1jdvnno
     C                   parm                    d1acono
     C                   parm                    rtncd
      *
     C                   eval      action = mode
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
