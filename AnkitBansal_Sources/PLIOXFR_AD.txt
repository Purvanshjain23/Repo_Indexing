// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLIOXFR
// ?Date: 14.08.2025 Time: 02:54:23
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?MODIFICATIONS
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
EXECUTE FUNCTION(Upd Eval Trans Upl RedoRT) TYPE(RTVOBJ) FILE(PKCPCPP)          AB1276330;
PARAMETER(PAR.EA_Company_Number);
PARAMETER(PAR.EA_Kill_Date);
PARAMETER(PAR.EA_Tattoo_Number);
{
 //?USER: Initialize routine

 // LCL.EA Record Processed = CND.Blank
 LCL.EA_Record_Processed = *BLANK;

 //?USER: Process Data record

 CASE;

 // IF DB1.EA Record Processed is Yes
 IF DB1.EA_Record_Processed = 'Y';

 // LCL.EA Record Processed = CND.No
 LCL.EA_Record_Processed = 'N';

 EXECUTE FUNCTION(Chg Process Status    CH) TYPE(CHGOBJ) FILE(PKCPCPP)           AB1205977;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(DB1.EA_Scale_Sequence_Number);
 PARAMETER(LCL.EA_Record_Processed);
 ENDIF;

 //?USER: Exit processing

 CASE;

 // IF LCL.EA Record Processed is No
 IF LCL.EA_Record_Processed = 'N';

 //?Find Buy Order and Load Number
 EXECUTE FUNCTION(Val Tattoo            RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1217490;
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER(PAR.EA_Tattoo_Number);
 PARAMETER(WRK.BOH_Buy_Order_Number);
 PARAMETER(WRK.BOL_Load_Number);
 PARAMETER(WRK.Record_Found_USR);
 {
  //?USER: Processing if Data record not found

  // PAR.Record Found USR = CND.Record Not Found
  PAR.Record_Found_USR = 'N';

  //?USER: Process Data record

  // PAR.Record Found USR = CND.Record Found
  PAR.Record_Found_USR = 'Y';

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 CASE;

 // IF WRK.Record Found USR is Record Found
 IF WRK.Record_Found_USR = 'Y';

 //?Change this Tattoo to be in Error
 //?User will have to run a balance to kill
 EXECUTE FUNCTION(Chg THdr Bal To ErrReSTIf) TYPE(EXCINTFUN)                     AB1299040;
 PARAMETER(PAR.EA_Company_Number);
 PARAMETER(WRK.BOH_Buy_Order_Number);
 PARAMETER(WRK.BOL_Load_Number);
 PARAMETER(PAR.EA_Tattoo_Number);
 PARAMETER(PAR.EA_Kill_Date);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Chg THdr Bal to ErrReStRT) TYPE(RTVOBJ) FILE(PKA1CPP)          AB1299041;
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.THP Process Code is NE Payment
   IF DB1.THP_Process_Code <> 'PAYMNT';

   EXECUTE FUNCTION(Chg THdr Bal to Err   CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1276942;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.TH_Purchase_Date);
   PARAMETER('E');
   {
    //?USER: Processing after Data read

    EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    {
     //?Execute internal function

     // PAR.RS User Changed = JOB.*USER
     PAR.RS_User_Changed = JOB.*USER;

     // PAR.RS Date Changed = JOB.*Job date
     PAR.RS_Date_Changed = JOB.*Job_date;

     // PAR.RS Time Changed = JOB.*Job time
     PAR.RS_Time_Changed = JOB.*Job_time;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

    }

   }

   ENDIF;

  }

 }

 //?Send a comment on the Tattoo that this was reprocessed
 //?this tattoo EvalTranUpl is ready for reprocess
 //?run a balance to kill again for the whole day
 // Call program Crt Ttt Com UnpEvalTranXF.
 CALL PROGRAM(Crt Ttt Com UnpEvalTranXF) ('PLI5XFR');
 PARAMETER(WRK.EA_Company_Number);
 PARAMETER(WRK.BOH_Buy_Order_Number);
 PARAMETER(WRK.BOL_Load_Number);
 PARAMETER(PAR.EA_Tattoo_Number);
 PARAMETER(PAR.EA_Kill_Date);
 PARAMETER('ER');

 ENDIF;

 ENDIF;

}


