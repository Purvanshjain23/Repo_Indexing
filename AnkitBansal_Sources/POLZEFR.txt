// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POLZEFR
// ?Date: 14.08.2025 Time: 03:38:02
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('OMS');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);

// WRK.Change Flag USR = CND.No
WRK.Change_Flag_USR = 'N';

//?** Condition the Select field on the screen
CASE;

// IF PAR.Access Denied (Y/N) is yes
IF PAR.Access_Denied_Y_N = 'Y';

// WRK.Change Flag USR = CND.Yes
WRK.Change_Flag_USR = 'Y';

ENDIF;

//?***** Change Log and Comments
//?** 08/02/2006 LJB A005-T010
//?** Change the screen to display only if Access Denied flag is
//?** Yes. This makes this screen available to multiple departments.
//?**
//?** Condition the Select field to output only if program mode is
//?** *add. Switch to input when program mode is *change unless
//?** the Access Denied flag is Yes. This is required because there
//?** are multiple conditions for restricting the field.
//?*****
//?USER: Initialize subfile header

//?** Set the Select field to output only if program mode is
//?** add or if data entry is denied. Otherwise, the field should be
//?** input capable.         08/02/2006 LJB A005-T010
//?** Condition the Select field to output only if *ADD
CASE;

// IF PGM.*Program mode is *ADD
IF PGM.*Program_mode = 'ADD';

// WRK.Change Flag USR = CND.Yes
WRK.Change_Flag_USR = 'Y';

//?** Condition the Select field to output only if *ADD
// IF *OTHERWISE
IF *OTHERWISE;

//?** Switch Select field to input if *change and access is okay
CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

// AND PAR.Access Denied (Y/N) is Not Yes
AND PAR.Access_Denied_Y_N = *BLANK/'N';

// WRK.Change Flag USR = CND.No
WRK.Change_Flag_USR = 'N';

ENDIF;

ENDIF;

//?USER: Initialize subfile record (new record)

// RCD.Record Status = CND.Active
RCD.Record_Status = 'A';

//?USER: Validate subfile control

CASE;

// IF CTL.*CMD key is *Change
IF CTL.*CMD_key = '09';

CASE;

// IF PAR.Access Denied (Y/N) is yes
IF PAR.Access_Denied_Y_N = 'Y';

// Send error message - 'Function not allowed.'
ERROR(USR1833);

ENDIF;

ENDIF;

//?USER: Validate subfile record fields

//?8=Edit State
CASE;

// IF RCD.*SFLSEL is Option 8
IF RCD.*SFLSEL = '8'/'8';

CASE;

// IF RCD.FC State Select is Yes
IF RCD.FC_State_Select = 'Y';

// Call program Zzz Frt Charge State  EF.
CALL PROGRAM(Zzz Frt Charge State  EF) ('POLREFR');
PARAMETER(RCD.FC_Code);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

ENDIF;

ENDIF;

//?9=Edit Reference
CASE;

// IF RCD.*SFLSEL is Option 9
IF RCD.*SFLSEL = '9'/'9';

CASE;

// IF RCD.FC Reference Required is Yes
IF RCD.FC_Reference_Required = 'Y';

// Call program Zzz Frt Chrg Ref      EF.
CALL PROGRAM(Zzz Frt Chrg Ref      EF) ('PMR4EFR');
PARAMETER(RCD.FC_Code);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

ENDIF;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(Crt Freight Charge    CR) TYPE(CRTOBJ) FILE(POA9REP)           AC1626731;
PARAMETER(RCD.FC_Code);
PARAMETER(RCD.FC_Description);
PARAMETER(RCD.FC_Rate_Amount);
PARAMETER(RCD.FC_Unit_of_Measure);
PARAMETER(RCD.FC_Act_Frt_Include_Sts);
PARAMETER(RCD.FC_Frt_Add_Deduct);
PARAMETER(RCD.FC_Load_Type_Select);
PARAMETER(RCD.FC_State_Select);
PARAMETER(RCD.FC_Export_Select);
PARAMETER(RCD.FC_Shag_Wash_Select);
PARAMETER(RCD.FC_Auto_Calc_Sts);
PARAMETER(RCD.FC_Charge_Category);
PARAMETER(RCD.FC_Shag_Wash_Comp);
PARAMETER(RCD.FC_Edit_Sequence);
PARAMETER(RCD.FC_Tot_Freight_Inc_Sts);
PARAMETER(RCD.FC_Special_Type);
PARAMETER(RCD.FC_ExpInt_FR_FZ_Select);
PARAMETER(RCD.FC_Reference_Required);
PARAMETER(RCD.FC_Trans_Mode_Select);
PARAMETER(RCD.FC_Freight_Rate_Type_Sel);
PARAMETER(RCD.FC_Company_Select);
PARAMETER(RCD.FC_Company_Carrier_Select);
PARAMETER(RCD.FC_Shared_Responsibility);
PARAMETER(RCD.FC_Unused_Sts_10);
PARAMETER(RCD.FC_Auto_Calc_Effective);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);

//?USER: Delete DBF record

EXECUTE FUNCTION(Del Freight Charge    DL) TYPE(DLTOBJ) FILE(POA9REP)           AC1626733;

//?USER: Change DBF record

EXECUTE FUNCTION(Chg Freight Charge    CH) TYPE(CHGOBJ) FILE(POA9REP)           AC1626732;
PARAMETER(RCD.FC_Code);
PARAMETER(RCD.FC_Description);
PARAMETER(RCD.FC_Rate_Amount);
PARAMETER(RCD.FC_Unit_of_Measure);
PARAMETER(RCD.FC_Act_Frt_Include_Sts);
PARAMETER(RCD.FC_Frt_Add_Deduct);
PARAMETER(RCD.FC_Load_Type_Select);
PARAMETER(RCD.FC_State_Select);
PARAMETER(RCD.FC_Export_Select);
PARAMETER(RCD.FC_Shag_Wash_Select);
PARAMETER(RCD.FC_Auto_Calc_Sts);
PARAMETER(RCD.FC_Charge_Category);
PARAMETER(RCD.FC_Shag_Wash_Comp);
PARAMETER(RCD.FC_Edit_Sequence);
PARAMETER(RCD.FC_Tot_Freight_Inc_Sts);
PARAMETER(RCD.FC_Special_Type);
PARAMETER(RCD.FC_ExpInt_FR_FZ_Select);
PARAMETER(RCD.FC_Reference_Required);
PARAMETER(RCD.FC_Trans_Mode_Select);
PARAMETER(RCD.FC_Freight_Rate_Type_Sel);
PARAMETER(RCD.FC_Company_Select);
PARAMETER(RCD.FC_Company_Carrier_Select);
PARAMETER(RCD.FC_Shared_Responsibility);
PARAMETER(RCD.FC_Unused_Sts_10);
PARAMETER(RCD.FC_Auto_Calc_Effective);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);

