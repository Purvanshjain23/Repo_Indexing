// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPJLDFR
// ?Date: 14.08.2025 Time: 03:40:50
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('C/S');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// PAR.PRT Printer Device = CON.*BLANK
PAR.PRT_Printer_Device = *BLANK;

// WRK.Display Prt Opt Pmt USR = CND.*YES
WRK.Display_Prt_Opt_Pmt_USR = *YES;

//?S17034 DN 01/11/21-Get User Profile User Code Model.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv Profile Model     RT) TYPE(RTVOBJ) FILE(CADRREP)           AC1445577;
PARAMETER(JOB.*USER);
PARAMETER(LCL.User_Code_Model);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Allow Profile to Access F18=Edt Forecast DP?
CASE;

// IF LCL.User Code Model is Production Scheduling
IF LCL.User_Code_Model = 'PORKSCHE';

// OR LCL.User Code Model is IS
OR LCL.User_Code_Model = 'ISBGUTI';

// LCL.Access Denied (Y/N) = CND.no
LCL.Access_Denied_Y_N = 'N';

//?Allow Profile to Access F18=Edt Forecast DP?
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Access Denied (Y/N) = CND.yes
LCL.Access_Denied_Y_N = 'Y';

ENDIF;

ENDIF;

//?USER: Initialize subfile control

CASE;

// IF PAR.First Time Flag EQ WRK.BLANK
IF PAR.First_Time_Flag = WRK.BLANK;

// CTL.Record Status = CND.Active
CTL.Record_Status = 'A';

// PAR.First Time Flag = CND.Yes
PAR.First_Time_Flag = 'Y';

// CTL.Sel Value 1 USR = CND.All Value
CTL.Sel_Value_1_USR = *BLANK;

ENDIF;

//?USER: Initialize subfile record from DBF record

EXECUTE FUNCTION(RTV Assign Co Flag     RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1701172;
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Company_Assigned_Usr);
{
 //?USER: Initialize routine

 // LCL.Count Records        USR = CON.*ZERO
 LCL.Count_Records_USR = *ZERO;

 //?USER: Process Data record

 //?01/27/06 PKD Remove hard coding of Guymon & St. Joseph
 // LCL.Count Records        USR = LCL.Count Records        USR + CON.1
 LCL.Count_Records_USR = LCL.Count_Records_USR + 1;

 // PAR.Company Assigned Usr = CVTVAR(DB1.Company Number)
 PAR.Company_Assigned_Usr = CVTVAR(DB1.Company_Number);

 CASE;

 // IF LCL.Count Records        USR is GT 1
 IF LCL.Count_Records_USR > 1;

 // PAR.Company Assigned Usr = CON.All
 PAR.Company_Assigned_Usr = 'All';

 QUIT;

 ENDIF;

}


CASE;

// IF CTL.Sel Value 1 USR is Select
IF CTL.Sel_Value_1_USR = 'X';

CASE;

// IF RCD.Partial Item Code is Not Entered
IF RCD.Partial_Item_Code = *ZERO;

// AND RCD.WIP Item Code is Not Entered
AND RCD.WIP_Item_Code = *ZERO;

// AND RCD.WIP Reject Code is Not Entered
AND RCD.WIP_Reject_Code = *ZERO;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?F10=Partial/WIP/Reject Only
CASE;

// IF CTL.*CMD key is CF10
IF CTL.*CMD_key = '10';

CASE;

// IF CTL.Sel Value 1 USR is Select
IF CTL.Sel_Value_1_USR = 'X';

// CTL.Sel Value 1 USR = CND.All Value
CTL.Sel_Value_1_USR = *BLANK;

// IF CTL.Sel Value 1 USR is All Value
IF CTL.Sel_Value_1_USR = *BLANK;

// CTL.Sel Value 1 USR = CND.Select
CTL.Sel_Value_1_USR = 'X';

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?F12 Dsp GTIN
CASE;

// IF CTL.*CMD key is CF12
IF CTL.*CMD_key = '12';

// Call program Dsp Item Default Ext  DF.
CALL PROGRAM(Dsp Item Default Ext  DF) ('PBO5DFR');

ENDIF;

//?F18=Edt Forecast DP
CASE;

// IF CTL.*CMD key is CF18
IF CTL.*CMD_key = '18';

CASE;

// IF LCL.Access Denied (Y/N) is yes
IF LCL.Access_Denied_Y_N = 'Y';

// Send error message - 'Not authorized for function &1'
ERROR(USR1775);
MSGPARM(LCL.@Narrative_20);
MSGPARM(18);

QUIT;

ENDIF;

// Call program Edt Itm Forecast in DP EF.
CALL PROGRAM(Edt Itm Forecast in DP EF) ('PUSEEFR');

ENDIF;

//?F20 Item Default email
CASE;

// IF CTL.*CMD key is CF20
IF CTL.*CMD_key = '20';

// Call program CLP Exe RUNSCRIPT      UP.
CALL PROGRAM(CLP Exe RUNSCRIPT      UP) ('PNRIUPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER('ITEMDEF.S');

ENDIF;

//?F21 Process Print Listing request
CASE;

// IF CTL.*CMD key is *Print List
IF CTL.*CMD_key = '21';

// Call program PMT Print Option  SHR  PV.
CALL PROGRAM(PMT Print Option  SHR  PV) ('PDG0PVR');
PARAMETER('Item Default Listing');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('IDS');

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

// Execute command - 'PS Prt Cutout Dist Items'
EXECUTE COMMAND(USR2181);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('PDNPPFR');
PARAMETER('PDNPPFR$');
PARAMETER('IDS');
PARAMETER(CTL.Catch_Weight_Status);
PARAMETER(CTL.Item_Structure_Class_Code);
PARAMETER(CTL.Item_Type_Code);
PARAMETER(CTL.Base_Conv_Loss_Item);
PARAMETER(CTL.Variety_Rendered_Cut);
PARAMETER(CTL.Frozen_Make_to_Order_Sts);
PARAMETER(CTL.Credit_Item_Status);
PARAMETER(CTL.Seconds_Item);
PARAMETER(CTL.Record_Status);
PARAMETER('ITMDFTLST');

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?F22 WW Company Item
CASE;

// IF CTL.*CMD key is CF22
IF CTL.*CMD_key = '22';

// LCL.Item Code Txt = CVTVAR(CTL.Item Code)
LCL.Item_Code_Txt = CVTVAR(CTL.Item_Code);

// Call program WW Company Item-Dsp   DF.
CALL PROGRAM(WW Company Item-Dsp   DF) ('PPJMDFR');
PARAMETER(LCL.Item_Code_Txt);

ENDIF;

//?F23 Item Structure List Prompt
CASE;

// IF CTL.*CMD key is CF23
IF CTL.*CMD_key = '23';

// LCL.Item Code Txt = CVTVAR(CTL.Item Code)
LCL.Item_Code_Txt = CVTVAR(CTL.Item_Code);

// Call program Prt Item Str/Itms-Pass PV.
CALL PROGRAM(Prt Item Str/Itms-Pass PV) ('PPVAPVR');
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Catch_Weight_Status);
PARAMETER(CTL.Item_Structure_Class_Code);
PARAMETER(CTL.Item_Structure_Group_Code);
PARAMETER(CTL.Item_Structure_Type_Code);
PARAMETER(CTL.Item_Type_Code);
PARAMETER(CTL.Base_Conv_Loss_Item);
PARAMETER(CTL.Credit_Item_Status);
PARAMETER(CTL.Partial_Item_Code);
PARAMETER(CTL.WIP_Item_Code);
PARAMETER(CTL.WIP_Reject_Code);
PARAMETER(CTL.Print_on_Realization_Rpt);
PARAMETER(CTL.Pieces_Per_Bag);
PARAMETER(CTL.Bags_Per_Unit);
PARAMETER(CTL.Record_Status);

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?5 - Process item change request
CASE;

// IF RCD.*SFLSEL is *Display
IF RCD.*SFLSEL = '5'/'5';

// CTL.Item Code = RCD.Item Code
CTL.Item_Code = RCD.Item_Code;

CASE;

// IF RCD.Item Structure Type Code is EQ 900
IF RCD.Item_Structure_Type_Code = 900;

// LCL.Co-Packer Item Req    Usr = CND.yes
LCL.Co_Packer_Item_Req_Usr = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Co-Packer Item Req    Usr = CND.no
LCL.Co_Packer_Item_Req_Usr = 'N';

ENDIF;

// Call program Dsp Item Default      D3.
CALL PROGRAM(Dsp Item Default      D3) ('PPJKD3R');
PARAMETER(LCL.Co_Packer_Item_Req_Usr);
PARAMETER(RCD.Item_Code);
PARAMETER(*ZERO);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDIF;

//?6 - ** Print Item BOM 12/13/2005 LJB
CASE;

// IF RCD.*SFLSEL is *Print
IF RCD.*SFLSEL = '6'/'6';

//?Print Prompt
CASE;

// IF WRK.Display Prt Opt Pmt USR is *YES
IF WRK.Display_Prt_Opt_Pmt_USR = *YES;

// Call program PMT Prt Opt w/PSz SHR  PV.
CALL PROGRAM(PMT Prt Opt w/PSz SHR  PV) ('PDV8PVR');
PARAMETER('Item BOM');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('OMS');
PARAMETER(*MISSING);
PARAMETER(1);

// WRK.Display Prt Opt Pmt USR = CND.*NO
WRK.Display_Prt_Opt_Pmt_USR = *NO;

ENDIF;

//?Submit
CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

//?Submit
// IF *OTHERWISE
IF *OTHERWISE;

// Execute command - 'Print Item BOM'
EXECUTE COMMAND(USR2377);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('PDP0PFR');
PARAMETER('PDP0PFR$');
PARAMETER('C/S');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER('PRTITMBOM');

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDIF;

ENDIF;

//?7 - WW Company Item
CASE;

// IF RCD.*SFLSEL is *7
IF RCD.*SFLSEL = '7';

// CTL.Item Code = RCD.Item Code
CTL.Item_Code = RCD.Item_Code;

// LCL.Item Code Txt = CVTVAR(CTL.Item Code)
LCL.Item_Code_Txt = CVTVAR(CTL.Item_Code);

// Call program WW Company Item-Dsp   DF.
CALL PROGRAM(WW Company Item-Dsp   DF) ('PPJMDFR');
PARAMETER(LCL.Item_Code_Txt);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDIF;

//?8 - ** Display Bill of Material - 12/13/2005 LJB
CASE;

// IF RCD.*SFLSEL is Option 8
IF RCD.*SFLSEL = '8'/'8';

CASE;

// IF RCD.Item Type Code is Packaging and Supplies
IF RCD.Item_Type_Code = 'PS';

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

//?BOM:  Init Company Number - rmc 5/17/07 copy from ww item default
CASE;

// IF RCD.Company Assigned Usr is All
IF RCD.Company_Assigned_Usr = 'All';

// LCL.Company Number = PAR.Company Number
LCL.Company_Number = PAR.Company_Number;

//?BOM:  Init Company Number - rmc 5/17/07 copy from ww item default
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Company Alpha = RCD.Company Assigned Usr
LCL.Company_Alpha = RCD.Company_Assigned_Usr;

// LCL.Company Number = CVTVAR(LCL.Company Alpha)
LCL.Company_Number = CVTVAR(LCL.Company_Alpha);

ENDIF;

// Call program DSP Bill of Material   ET.
CALL PROGRAM(DSP Bill of Material   ET) ('PPVMETR');
PARAMETER(LCL.Company_Number);
PARAMETER(RCD.Item_Code);

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

ENDIF;

//?9 - Display Where Used  slm 06/26/09
CASE;

// IF RCD.*SFLSEL is 9
IF RCD.*SFLSEL = '9';

// Call program Dsp Component Usage   DF.
CALL PROGRAM(Dsp Component Usage   DF) ('PNKHDFR');
PARAMETER(RCD.Item_Code);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDIF;

