// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUB1XFR
// ?Date: 14.08.2025 Time: 03:49:55
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Bld Misc Post Smry     RT) TYPE(RTVOBJ) FILE(ARBECPP)          AC2135827;
{
 //?USER: Process Data record

 //?NOTE: LF selects A/R Processing Sts='Open & Available' (A,E,O,R).
 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?Selection Record Processing.
 CASE;

 // IF DB1.Adjustment Type Code is Rebill
 IF DB1.Adjustment_Type_Code = 'RB';

 // LCL.Invoice Number - CB = DB1.Invoice Number
 LCL.Invoice_Number_CB = DB1.Invoice_Number;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 //?Selection Record Processing.
 // IF DB1.Invoice Number EQ LCL.Invoice Number - CB
 IF DB1.Invoice_Number = LCL.Invoice_Number_CB;

 //?Do not select the offset of a Rebill.
 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 //?Selection Record Processing.
 // IF NOT DB1.Post Adjustments is Yes
 IF ! DB1.Post_Adjustments = 'Y';

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 //?Selection Record Processing.
 // IF NOT DB1.Invoice Suffix is CM or OA
 IF ! DB1.Invoice_Suffix = 'CM'/'OA';

 //?Select only OA or CM.
 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 //?Selection Record Processing.
 // IF DB1.Transaction Amount is less than zero
 IF DB1.Transaction_Amount < *ZERO;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(Bld Misc Post Smry     RT) TYPE(RTVOBJ) FILE(PDNHCPP)          AC2135828;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Payment_Deposit_Date);
 PARAMETER(DB1.Transaction_Amount);
 PARAMETER(DB1.Transaction_Date_Code);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.Transaction Amount EQ DB1.Transaction Amount
  IF PAR.Transaction_Amount = DB1.Transaction_Amount;

  // AND PAR.Transaction Date Code EQ DB1.Create Date
  AND PAR.Transaction_Date_Code = DB1.Create_Date;

  EXECUTE FUNCTION(RTV Company by Refernc#RT) TYPE(RTVOBJ) FILE(ARBDCPP)          AC2135829;
  PARAMETER(DB1.Reference_Number);
  PARAMETER(LCL.Company_Number);
  {
   //?USER: Initialize routine

   // PAR.Company Number = CON.*ZERO
   PAR.Company_Number = *ZERO;

   //?USER: Process Data record

   // PAR.Company Number = DB1.Company Number
   PAR.Company_Number = DB1.Company_Number;

   QUIT;

  }

  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // AND LCL.Company Number NE PAR.Company Number
  AND LCL.Company_Number <> PAR.Company_Number;

  //?added comp number check -dont want it if it = the par company
  //?RMC output ref invoice to workfile
  EXECUTE FUNCTION(Rtv Chk WF for entry   RT) TYPE(RTVOBJ) FILE(PMACCPP)          AC2157974;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Reference_Number);
  PARAMETER(PAR.Transaction_Amount);
  PARAMETER(WRK.Return_Code_Usr);
  {
   //?USER: Processing if Data record not found

   // PAR.Return Code Usr = CND.*Blank
   PAR.Return_Code_Usr = *BLANK;

   //?USER: Process Data record

   // PAR.Return Code Usr = CND.Record Found
   PAR.Return_Code_Usr = 'RCDFND';

  }

  CASE;

  // IF WRK.Return Code Usr is Record Found
  IF WRK.Return_Code_Usr = 'RCDFND';

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Bld Misc Post Smry     RT) TYPE(RTVOBJ) FILE(PMACCPP)          AC2135832;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(1);
  PARAMETER(DB1.Transaction_Amount);
  PARAMETER(PAR.Payment_Deposit_Date);
  PARAMETER(LCL.Company_Number);
  PARAMETER(DB1.Reference_Number);
  {
   //?USER: Initialize routine

   // PAR.Sequence = CON.1
   PAR.Sequence = 1;

   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(CRT WF A/R Detail      CR) TYPE(CRTOBJ) FILE(PMACCPP)          AC2135835;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Sequence_Number);
   PARAMETER(LCL.Adjustment_Type_Code);
   PARAMETER(PAR.Transaction_Amount);
   PARAMETER(LCL.A_R_Check_Number);
   PARAMETER(LCL.Explanation);
   PARAMETER(LCL.Transaction_Date_Code);
   PARAMETER(PAR.Payment_Deposit_Date);
   PARAMETER(LCL.Deposit_Time);
   PARAMETER(LCL.G_L_Post_Date);
   PARAMETER(LCL.Bank_Code);
   PARAMETER(LCL.GL_Document_Number);
   PARAMETER(LCL.Cash_Adj);
   PARAMETER(LCL.A_R_Processing_Status);
   PARAMETER(LCL.Originating_Program_Name);
   PARAMETER(LCL.Effect_on_Account);
   PARAMETER(PAR.G_L_Posting_Company);
   PARAMETER(LCL.G_L_ID_Code_JDE);
   PARAMETER(LCL.Post_Adjustments);
   PARAMETER(LCL.A_R_TF_Exempt_Code);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_1_1);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_2_1);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_3_1);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_4_2);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_5_2);
   PARAMETER(LCL.TFS_Adj_Week_Ending_Date);
   PARAMETER(PAR.A_R_Orig_Inv_for_CB);
   PARAMETER(LCL.A_R_Invoice_Number_CB);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Date_4);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Date_5);
   PARAMETER(LCL.G_L_Sub_Ledger_Code);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_2);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_3);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_4);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_5);
   PARAMETER(LCL.EDI_Status_1);
   PARAMETER(LCL.EDI_Status_2);
   PARAMETER(LCL.EDI_Status_3);
   PARAMETER(LCL.Accounting_Year);
   PARAMETER(LCL.Accounting_Period);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

   // LCL.*PROGRAM = CON.PUB1XFR
   LCL.*PROGRAM = 'PUB1XFR';

   CASE;

   // IF JOB.*PROGRAM EQ LCL.*PROGRAM
   IF JOB.*PROGRAM = LCL.*PROGRAM;

   // Call program Crt Cash Dist On Acct  UP.
   CALL PROGRAM(Crt Cash Dist On Acct  UP) ('PVK7UPR');
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Transaction_Amount);
   PARAMETER(PAR.Payment_Deposit_Date);
   PARAMETER(PAR.G_L_Posting_Company);
   PARAMETER(PAR.A_R_Orig_Inv_for_CB);

   ENDIF;

   //?USER: Process Data record

   // PAR.Sequence = PAR.Sequence + CON.1
   PAR.Sequence = PAR.Sequence + 1;

   //?USER: Exit processing

   CASE;

   // IF PAR.Sequence is GT 1
   IF PAR.Sequence > 1;

   EXECUTE FUNCTION(CRT WF A/R Detail      CR) TYPE(CRTOBJ) FILE(PMACCPP)          AC2135835;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Sequence);
   PARAMETER(LCL.Adjustment_Type_Code);
   PARAMETER(PAR.Transaction_Amount);
   PARAMETER(LCL.A_R_Check_Number);
   PARAMETER(LCL.Explanation);
   PARAMETER(LCL.Transaction_Date_Code);
   PARAMETER(PAR.Payment_Deposit_Date);
   PARAMETER(LCL.Deposit_Time);
   PARAMETER(LCL.G_L_Post_Date);
   PARAMETER(LCL.Bank_Code);
   PARAMETER(LCL.GL_Document_Number);
   PARAMETER(LCL.Cash_Adj);
   PARAMETER(LCL.A_R_Processing_Status);
   PARAMETER(LCL.Originating_Program_Name);
   PARAMETER(LCL.Effect_on_Account);
   PARAMETER(PAR.G_L_Posting_Company);
   PARAMETER(LCL.G_L_ID_Code_JDE);
   PARAMETER(LCL.Post_Adjustments);
   PARAMETER(LCL.A_R_TF_Exempt_Code);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_1_1);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_2_1);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_3_1);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_4_2);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_5_2);
   PARAMETER(LCL.TFS_Adj_Week_Ending_Date);
   PARAMETER(PAR.A_R_Orig_Inv_for_CB);
   PARAMETER(LCL.A_R_Invoice_Number_CB);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Date_4);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Date_5);
   PARAMETER(LCL.G_L_Sub_Ledger_Code);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_2);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_3);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_4);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_5);
   PARAMETER(LCL.EDI_Status_1);
   PARAMETER(LCL.EDI_Status_2);
   PARAMETER(LCL.EDI_Status_3);
   PARAMETER(LCL.Accounting_Year);
   PARAMETER(LCL.Accounting_Period);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

   // LCL.*PROGRAM = CON.PUB1XFR
   LCL.*PROGRAM = 'PUB1XFR';

   CASE;

   // IF JOB.*PROGRAM EQ LCL.*PROGRAM
   IF JOB.*PROGRAM = LCL.*PROGRAM;

   // Call program Crt Cash Dist On Acct  UP.
   CALL PROGRAM(Crt Cash Dist On Acct  UP) ('PVK7UPR');
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Transaction_Amount);
   PARAMETER(PAR.Payment_Deposit_Date);
   PARAMETER(PAR.G_L_Posting_Company);
   PARAMETER(PAR.A_R_Orig_Inv_for_CB);

   ENDIF;

   ENDIF;

  }

  QUIT;

  ENDIF;

  ENDIF;

  ENDIF;

  CASE;

  // IF PAR.Transaction Amount LT DB1.Transaction Amount
  IF PAR.Transaction_Amount < DB1.Transaction_Amount;

  // AND PAR.Transaction Date Code EQ DB1.Change Date
  AND PAR.Transaction_Date_Code = DB1.Change_Date;

  EXECUTE FUNCTION(RTV Company by Refernc#RT) TYPE(RTVOBJ) FILE(ARBDCPP)          AC2135829;
  PARAMETER(DB1.Reference_Number);
  PARAMETER(LCL.Company_Number);
  {
   //?USER: Initialize routine

   // PAR.Company Number = CON.*ZERO
   PAR.Company_Number = *ZERO;

   //?USER: Process Data record

   // PAR.Company Number = DB1.Company Number
   PAR.Company_Number = DB1.Company_Number;

   QUIT;

  }

  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // AND LCL.Company Number NE PAR.Company Number
  AND LCL.Company_Number <> PAR.Company_Number;

  //?added comp number check -dont want it if it = the par company
  //?RMC output ref invoice to workfile
  EXECUTE FUNCTION(Rtv Chk WF for entry   RT) TYPE(RTVOBJ) FILE(PMACCPP)          AC2157974;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Reference_Number);
  PARAMETER(PAR.Transaction_Amount);
  PARAMETER(WRK.Return_Code_Usr);
  {
   //?USER: Processing if Data record not found

   // PAR.Return Code Usr = CND.*Blank
   PAR.Return_Code_Usr = *BLANK;

   //?USER: Process Data record

   // PAR.Return Code Usr = CND.Record Found
   PAR.Return_Code_Usr = 'RCDFND';

  }

  CASE;

  // IF WRK.Return Code Usr is Record Found
  IF WRK.Return_Code_Usr = 'RCDFND';

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Bld Misc Post Smry     RT) TYPE(RTVOBJ) FILE(PMACCPP)          AC2135832;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(1);
  PARAMETER(PAR.Transaction_Amount);
  PARAMETER(PAR.Payment_Deposit_Date);
  PARAMETER(LCL.Company_Number);
  PARAMETER(DB1.Reference_Number);
  {
   //?USER: Initialize routine

   // PAR.Sequence = CON.1
   PAR.Sequence = 1;

   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(CRT WF A/R Detail      CR) TYPE(CRTOBJ) FILE(PMACCPP)          AC2135835;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Sequence_Number);
   PARAMETER(LCL.Adjustment_Type_Code);
   PARAMETER(PAR.Transaction_Amount);
   PARAMETER(LCL.A_R_Check_Number);
   PARAMETER(LCL.Explanation);
   PARAMETER(LCL.Transaction_Date_Code);
   PARAMETER(PAR.Payment_Deposit_Date);
   PARAMETER(LCL.Deposit_Time);
   PARAMETER(LCL.G_L_Post_Date);
   PARAMETER(LCL.Bank_Code);
   PARAMETER(LCL.GL_Document_Number);
   PARAMETER(LCL.Cash_Adj);
   PARAMETER(LCL.A_R_Processing_Status);
   PARAMETER(LCL.Originating_Program_Name);
   PARAMETER(LCL.Effect_on_Account);
   PARAMETER(PAR.G_L_Posting_Company);
   PARAMETER(LCL.G_L_ID_Code_JDE);
   PARAMETER(LCL.Post_Adjustments);
   PARAMETER(LCL.A_R_TF_Exempt_Code);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_1_1);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_2_1);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_3_1);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_4_2);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_5_2);
   PARAMETER(LCL.TFS_Adj_Week_Ending_Date);
   PARAMETER(PAR.A_R_Orig_Inv_for_CB);
   PARAMETER(LCL.A_R_Invoice_Number_CB);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Date_4);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Date_5);
   PARAMETER(LCL.G_L_Sub_Ledger_Code);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_2);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_3);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_4);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_5);
   PARAMETER(LCL.EDI_Status_1);
   PARAMETER(LCL.EDI_Status_2);
   PARAMETER(LCL.EDI_Status_3);
   PARAMETER(LCL.Accounting_Year);
   PARAMETER(LCL.Accounting_Period);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

   // LCL.*PROGRAM = CON.PUB1XFR
   LCL.*PROGRAM = 'PUB1XFR';

   CASE;

   // IF JOB.*PROGRAM EQ LCL.*PROGRAM
   IF JOB.*PROGRAM = LCL.*PROGRAM;

   // Call program Crt Cash Dist On Acct  UP.
   CALL PROGRAM(Crt Cash Dist On Acct  UP) ('PVK7UPR');
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Transaction_Amount);
   PARAMETER(PAR.Payment_Deposit_Date);
   PARAMETER(PAR.G_L_Posting_Company);
   PARAMETER(PAR.A_R_Orig_Inv_for_CB);

   ENDIF;

   //?USER: Process Data record

   // PAR.Sequence = PAR.Sequence + CON.1
   PAR.Sequence = PAR.Sequence + 1;

   //?USER: Exit processing

   CASE;

   // IF PAR.Sequence is GT 1
   IF PAR.Sequence > 1;

   EXECUTE FUNCTION(CRT WF A/R Detail      CR) TYPE(CRTOBJ) FILE(PMACCPP)          AC2135835;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Invoice_Suffix);
   PARAMETER(PAR.Sequence);
   PARAMETER(LCL.Adjustment_Type_Code);
   PARAMETER(PAR.Transaction_Amount);
   PARAMETER(LCL.A_R_Check_Number);
   PARAMETER(LCL.Explanation);
   PARAMETER(LCL.Transaction_Date_Code);
   PARAMETER(PAR.Payment_Deposit_Date);
   PARAMETER(LCL.Deposit_Time);
   PARAMETER(LCL.G_L_Post_Date);
   PARAMETER(LCL.Bank_Code);
   PARAMETER(LCL.GL_Document_Number);
   PARAMETER(LCL.Cash_Adj);
   PARAMETER(LCL.A_R_Processing_Status);
   PARAMETER(LCL.Originating_Program_Name);
   PARAMETER(LCL.Effect_on_Account);
   PARAMETER(PAR.G_L_Posting_Company);
   PARAMETER(LCL.G_L_ID_Code_JDE);
   PARAMETER(LCL.Post_Adjustments);
   PARAMETER(LCL.A_R_TF_Exempt_Code);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_1_1);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_2_1);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_3_1);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_4_2);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Sts_5_2);
   PARAMETER(LCL.TFS_Adj_Week_Ending_Date);
   PARAMETER(PAR.A_R_Orig_Inv_for_CB);
   PARAMETER(LCL.A_R_Invoice_Number_CB);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Date_4);
   PARAMETER(LCL.A_R_Dtl_UnUsed_Date_5);
   PARAMETER(LCL.G_L_Sub_Ledger_Code);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_2);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_3);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_4);
   PARAMETER(LCL.A_R_Dtl_UnUsed_AMT_5);
   PARAMETER(LCL.EDI_Status_1);
   PARAMETER(LCL.EDI_Status_2);
   PARAMETER(LCL.EDI_Status_3);
   PARAMETER(LCL.Accounting_Year);
   PARAMETER(LCL.Accounting_Period);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

   // LCL.*PROGRAM = CON.PUB1XFR
   LCL.*PROGRAM = 'PUB1XFR';

   CASE;

   // IF JOB.*PROGRAM EQ LCL.*PROGRAM
   IF JOB.*PROGRAM = LCL.*PROGRAM;

   // Call program Crt Cash Dist On Acct  UP.
   CALL PROGRAM(Crt Cash Dist On Acct  UP) ('PVK7UPR');
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Transaction_Amount);
   PARAMETER(PAR.Payment_Deposit_Date);
   PARAMETER(PAR.G_L_Posting_Company);
   PARAMETER(PAR.A_R_Orig_Inv_for_CB);

   ENDIF;

   ENDIF;

  }

  QUIT;

  ENDIF;

  ENDIF;

  ENDIF;

 }

 // LCL.Company Number = DB1.Company Number
 LCL.Company_Number = DB1.Company_Number;

 // LCL.Invoice Number = DB1.Invoice Number
 LCL.Invoice_Number = DB1.Invoice_Number;

 // LCL.Invoice Suffix = DB1.Invoice Suffix
 LCL.Invoice_Suffix = DB1.Invoice_Suffix;

 // LCL.Transaction Amount = DB1.Transaction Amount
 LCL.Transaction_Amount = DB1.Transaction_Amount;

 ENDIF;

}


