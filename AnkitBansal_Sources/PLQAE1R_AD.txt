// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLQAE1R
// ?Date: 14.08.2025 Time: 02:55:06
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.Zero_USR);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

//?USER: Initialize key screen

// KEY.PSCM Commodity Market = PAR.PSCM Commodity Market
KEY.PSCM_Commodity_Market = PAR.PSCM_Commodity_Market;

// KEY.PSCM Commodity Price Grp = PAR.PSCM Commodity Price Grp
KEY.PSCM_Commodity_Price_Grp = PAR.PSCM_Commodity_Price_Grp;

//?USER: Validate key screen

//?Prompt on Market Code
CASE;

// IF KEY.*CMD key is *Prompt
IF KEY.*CMD_key = '04';

// AND PGM.*Cursor field <IS> KEY.PSCM Commodity Market
AND PGM.*Cursor_field = KEY.PSCM_Commodity_Market;

// Call program Sel Commodity Market  XF.
CALL PROGRAM(Sel Commodity Market  XF) ('PDEDSRR');
PARAMETER(KEY.PSCM_Commodity_Market);

ENDIF;

//?Prompt on Price Group
CASE;

// IF KEY.*CMD key is *Prompt
IF KEY.*CMD_key = '04';

// AND PGM.*Cursor field <IS> KEY.PSCM Commodity Price Grp
AND PGM.*Cursor_field = KEY.PSCM_Commodity_Price_Grp;

// Call program Sel Commodity Group   XF.
CALL PROGRAM(Sel Commodity Group   XF) ('PDECSRR');
PARAMETER(KEY.PSCM_Commodity_Price_Grp);

ENDIF;

// Call program Val Commodity Market  XF.
CALL PROGRAM(Val Commodity Market  XF) ('PDG1XFR');
PARAMETER(KEY.PSCM_Commodity_Market);
PARAMETER(LCL.Market_Code_Desc_USR);
PARAMETER(WRK.Invalid_Y_N_USR);

//?Validate market code
CASE;

// IF WRK.Invalid Y/N USR is Yes
IF WRK.Invalid_Y_N_USR = 'Y';

// Send error message - 'Market Code not found.'
ERROR(PRK0152);

ENDIF;

// Call program Val Commodity Group   XF.
CALL PROGRAM(Val Commodity Group   XF) ('PDG2XFR');
PARAMETER(KEY.PSCM_Commodity_Price_Grp);
PARAMETER(LCL.Market_Group_Desc_USR);
PARAMETER(WRK.Invalid_Y_N_USR);

//?Validate price group
CASE;

// IF WRK.Invalid Y/N USR is Yes
IF WRK.Invalid_Y_N_USR = 'Y';

// Send error message - 'Commodity Group not found.'
ERROR(PRK0158);

ENDIF;

//?USER: Initialize detail screen (new record)

// DTL.Market Code Desc USR = KEY.Market Code Desc USR
DTL.Market_Code_Desc_USR = KEY.Market_Code_Desc_USR;

// DTL.Market Group Desc USR = KEY.Market Group Desc USR
DTL.Market_Group_Desc_USR = KEY.Market_Group_Desc_USR;

//?USER: Initialize detail screen (existing record)

// Call program Val Commodity Market  XF.
CALL PROGRAM(Val Commodity Market  XF) ('PDG1XFR');
PARAMETER(DTL.PSCM_Commodity_Market);
PARAMETER(DTL.Market_Code_Desc_USR);
PARAMETER(WRK.Invalid_Y_N_USR);

// Call program Val Commodity Group   XF.
CALL PROGRAM(Val Commodity Group   XF) ('PDG2XFR');
PARAMETER(DTL.PSCM_Commodity_Price_Grp);
PARAMETER(DTL.Market_Group_Desc_USR);
PARAMETER(WRK.Invalid_Y_N_USR);

//?USER: Create DBF record

EXECUTE FUNCTION(Crt Producer SC Multi CR) TYPE(CRTOBJ) FILE(PLBDREP)           AB1302124;
PARAMETER(DTL.PC_Contract_Code);
PARAMETER(DTL.PSC_Sub_Contract_Code);
PARAMETER(DTL.PSCM_Commodity_Market);
PARAMETER(DTL.PSCM_Commodity_Price_Grp);
PARAMETER(DTL.PSCM_Mkt_Percent);
PARAMETER(DTL.PSCM_Mrkt_+_or);
PARAMETER(DTL.PSCM_of_Base_Price);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // Call program Rtv System Date & Tim UP.
  CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg Producer SC Multi CH) TYPE(CHGOBJ) FILE(PLBDREP)           AB1302125;
PARAMETER(DTL.PC_Contract_Code);
PARAMETER(DTL.PSC_Sub_Contract_Code);
PARAMETER(DTL.PSCM_Commodity_Market);
PARAMETER(DTL.PSCM_Commodity_Price_Grp);
PARAMETER(DTL.PSCM_Mkt_Percent);
PARAMETER(DTL.PSCM_Mrkt_+_or);
PARAMETER(DTL.PSCM_of_Base_Price);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // Call program Rtv System Date & Tim UP.
  CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


