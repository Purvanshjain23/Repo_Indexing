      *****************  RPG PROGRAM HEADING  ***********************
     h option(*SRCSTMT:*NODEBUGIO)
      ****************************************************************
      *
      * SYSTEM:      Resource Optimization
      * PROGRAM:     RO102
      * TITLE:       Maintain Item Control Data
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     01/17/07
      *
      * FUNCTION: This function is used to maintain the Item Control Data for a
      *           Company/Week.
      *
      *           Restrictors:
      *               Company number
      *               Week-ending date
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 07/07/08  LeAnne Ramsey
      *           Removed data area DARQSN---it is not used in this program
      *
      * 12/31/08  LeAnne Ramsey
      *           Removed F11-Delete. Fixed bug where Company/WeekEnding Date
      *           were not populated when creating.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Frod102    cf   e             workstn sfile(ro102s1:hdrrn1)
     F                                     infds(iofeed)
      *
      *
     Fombyrel1  if   e           k disk
      *  Item default
      *
      *
     Frop012    uf a e           k disk
      *  Item control data
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
     D itcd            s              7  0 dim(100)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D maxmsg          s              2  0  inz(20)
     D routne          s              6
     D reset           s              1    inz('N')
     D count           s              2  0
     D wkflow          s                   like(idflow)
     D rtncd           s              2
      *
      *
      *
      * Workfields required for subfile paging--see initialization
      * subroutine.
      *
     D wkdiff          s                   like(count)
     D wkrmdr          s                   like(count)
     D wkfld           s                   like(count)
     D wkplin          s              2  0
     D wkrlin          s              2  0
      *
      *
      * Control fields
      *
     D entryfl         s              1
     D norecs          s              1    inz('N')
      *
      *
      * Parms
      *
     D xxalphitcd      s              7
     D xxwedt          s                   like(icwedt)
     D xxitcd          s                   like(d1itcd)
     D xxitds          s                   like(d1itds)
     D xxynfl          s              1
      *
      *
      * Array indexes
      *
     D x               s              3  0
     D y               s              3  0
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('ROMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Verify that data for the Company/Week the user selected still exists.
      *
     C                   select
     C                   when      mode = revise
     C     key01         chain(n)  rop012                             92
     C                   if        *in92 = *on                                  If not there
     C                   move      yes           norecs
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'RO09008'     mgid(e)
     C                   endif
     C                   endif                                                  If not there
     C                   endsl
      *
      * Clear/fill the subfile
      *
     C                   exsr      $clr1
     C                   exsr      $frsh1
      *
      * Set routine to display screen
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Perform operator I/O for screen 1
      *---------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Set the page of the subfile to display
      *
     C                   select
     C                   when      wkflow = 0 and error = 0
     C                   z-add     1             hdpag1
      *
     C                   when      reset = yes and wkflow <= hdrrn1
     C                   z-add     wkflow        hdpag1
     C                   endsl
      *
      * Set the indicators to control screen fields
      *
     C                   exsr      $ind
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * This subfile has Fold/Unfold capabilities.  The DDS uses the keywords
      * (SFLDROP, SFLFOLD) to determine whether the user is folded or unfolded
      * and to redisplay the screen in the same mode as when he last saw it.
      * Indicators 78 and 79 are assigned in the DDS to the keywords.
      *
     C                   setoff                                       7879
     C                   if        fold = '0'
     C                   seton                                        78
     C                   else
     C                   seton                                        79
     C                   endif
      *
      * Write screen 1 to crt
      *
     C                   write     ro102k1
     C                   write     ro102ec
     C                   exfmt     ro102c1
      *
      * Set off the error indicators in the subfile
      *
     C                   exsr      $sfloff
      *
      * Save the value of the lowest subfile rrn on the screen for
      * later repositioning of the subfile
      *
     C                   z-add     idflow        wkflow
     C                   move      no            reset
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
     C                   eval      routne = scrn1
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      reset = yes
     C                   eval      routne = set1
      *
     C                   when      norecs = yes
     C                   eval      routne = set1
      *
     C                   when      *in09 = *on                                  F9-accept
     C                   exsr      $edit1
     C                   if        error = 0
     C                   exsr      $accept
     C                   endif
      *
      *
     C                   when      *in25 = *on                                  F25-rollup
     C                   eval      wkdiff = idflow + wkplin
     C                   if        hdrrn1 >= wkdiff                             If something
     C                   else
     C                   eval      hdrrn1 = count
     C                   exsr      $sfloff
     C                   exsr      $clrln
     C                   do        wkplin                                       Do fill
     C                   exsr      $blank
     C                   enddo                                                  Do fill
     C                   endif                                                  If something
     C                   eval      routne = scrn1
     C                   other
      *
      * User pressed ENTER
      *
     C                   exsr      $edit1
     C                   movel     scrn1         routne
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Subroutine to edit input fields on screen 1
      *---------------------------------------------------------------
      *
     C     $edit1        begsr
      *
     C                   exsr      $eds1
      *
     C                   movel     scrn1         routne
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit subfile on screen 1
      *---------------------------------------------------------------
      *
     C     $eds1         begsr
      *
      * Initialize the Item array
      *
     C                   z-add     0             itcd
     C                   z-add     0             y
     C                   z-add     0             x
      *
      *
      * Set the flag that will determine whether the user keyed any subfile entries.
      *
     C                   move      no            entryfl
      *
      *
      * Read/process all changed subfile records
      *
     C                   dou       *in80 = *on                                  Do process
     C                   readc     ro102s1                                80
     C                   if        *in80 = *off                                 If rec read
      *
      * Set on MDT
      * Set off error indicators in the subfile
      *
     C                   seton                                        85
     C                   exsr      $sfloff
      *
      * If there are no user entries for the subfile record, clear the line.
      *
     C                   if        d1itcd = 0 and                               If entry
     C                             d1sritcd = 0 and
     C                             d1docd = *blank and
     C                             d1dobspr = 0 and
     C                             d1mupc = 0 and
     C                             d1dfpr = 0 and
     C                             d1frxfl = *blank
     C                   else
     C                   move      yes           entryfl
      *
      * Validate:
      *   1) Item code
      *   2) Source item code
      *   3) Default/Override code
      *   4) Default/Override price
      *   5) Multiplier percent
      *   6) Fresh product exception flag
      *
     C                   exsr      $itcd
     C                   exsr      $sritcd
     C                   exsr      $docd
     C                   exsr      $dobspr
     C                   exsr      $mupc
     C                   exsr      $frxfl
     C                   endif                                                  If entry
      *
      * Reset indicators
     C                   exsr      $ind
     C                   update    ro102s1
     C                   exsr      $sfloff
     C                   endif                                                  If rec read
     C                   enddo                                                  Do process
      * Set MDT
     C                   setoff                                       85
      *
      *---------------------------------------------------------------
      * After all subfile records have been edited, issue an error
      * message if there are no subfile entries.
      *---------------------------------------------------------------
      *
     C*                  if        entryfl = no and                             If nothing
     C*                            error < maxmsg
     C*                  add       1             error
     C*                  movel     'RO00109'     mgid(e)
     C*                  endif                                                  If nothing
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Validate Item
      *-------------------------------------------------------------------
      *
     C     $itcd         begsr
      *
     C                   move      *blank        d1itds
      *
     C                   select
     C                   when      d1itcd = 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO09001'
     C                   exsr      $err1
     C                   endif
      *
     C                   when      d1itcd < 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO09001'
     C                   exsr      $err1
     C                   endif
     C                   other
      *
      * Item must exist in Item Default file
      *
     C     d1itcd        chain     ombyrel1                           92
     C                   if        *in92 = *off                                 If ok
     C                   move(p)   byavna        d1itds
     C                   else
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO00107'
     C                   clear                   mgw
     C                   move      d1itcd        xxalphitcd
     C                   movea     xxalphitcd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  If ok
     C                   endsl
      *
      *
      * Item is valid in the Item Master, so continue other validations.
      *
      * Item cannot be keyed twice in the subfile.
      *
     C                   if        *in33 = *off                                 If OK so far
     C                   z-add     1             x
     C     d1itcd        lookup    itcd(x)                                92
     C                   if        *in92 = *off                                 If not there
     C                   add       1             y
     C                   z-add     d1itcd        itcd(y)
     C                   else
      *
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO00108'
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  If not there
     C                   endif                                                  If OK so far
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Validate Source Item
      *-------------------------------------------------------------------
      *
     C     $sritcd       begsr
      *
     C                   move      *blank        d1sritds
      *
     C                   select
     C                   when      d1sritcd = 0
     C                   if        d1dfpr <> 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO00113'
     C                   exsr      $err1
     C                   endif
     C                   endif
      *
     C                   when      d1sritcd < 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO09001'
     C                   exsr      $err1
     C                   endif
     C                   other
      *
      * Item must exist in Item Default file
      *
     C     d1sritcd      chain     ombyrel1                           92
     C                   if        *in92 = *on                                  If bad
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO00107'
     C                   clear                   mgw
     C                   move      d1sritcd      xxalphitcd
     C                   movea     xxalphitcd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * Source Item cannot be the same as Item
      *
     C                   move(p)   byavna        d1sritds
      *
     C                   if        d1sritcd = d1itcd
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO00126'
     C                   exsr      $err1
     C                   endif
     C                   endif
     C                   endif                                                  If bad
     C                   endsl
      *
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Default/Override Code
      *---------------------------------------------------------------
      *
     C     $docd         begsr
      *
     C                   if        d1docd <> *blank and
     C                             d1docd <> 'DFT' and
     C                             d1docd <> 'OVR'
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO00110'
     C                   exsr      $err1
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Default/Override Base Price
      *---------------------------------------------------------------
      *
      * Validations:
      *  1) Must be greater than zero for DFT and OVR records
      *  2) Must be zero for records that are not DFT or OVR
      *
     C     $dobspr       begsr
      *
     C                   select
     C                   when      d1dobspr <= 0 and
     C                             (d1docd = 'DFT' or d1docd = 'OVR')
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO00115'
     C                   exsr      $err1
     C                   endif
      *
     C                   when      d1dobspr <> 0 and
     C                             d1docd = *blank
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO00114'
     C                   exsr      $err1
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Multiplier Percent
      *---------------------------------------------------------------
      *
      * Validations:
      *   1) Cannot be negative
      *
     C     $mupc         begsr
      *
     C                   if        d1mupc < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO09000'
     C                   exsr      $err1
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Fresh Product Exception Flag
      *---------------------------------------------------------------
      *
     C     $frxfl        begsr
      *
     C                   if        d1frxfl <> yes and
     C                             d1frxfl <> no
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'RO09106'
     C                   exsr      $err1
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Clear the subfile on screen 1
      *---------------------------------------------------------------
      *
     C     $clr1         begsr
      *
     C                   eval      hdrrn1 = 0
     C                   eval      count = 0
      *
     C                   clear                   ro102s1
     C                   seton                                        83        sflclr
     C                   write     ro102c1
     C                   setoff                                       818283
      *                                                    81=sfldsp
      *                                                    82=sflend
      *                                                    83=sflclr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Refresh/fill the subfile on screen 1
      *---------------------------------------------------------------
      *
     C     $frsh1        begsr
      *
      * Set indicators to control/protect screen fields
      *
     C                   exsr      $ind
      *
      * Loading the sbufile in this program is different than subfiles in
      * Work With programs and depends on the 'MODE'.
      * For CREATE mode, load a page of blank lines.
      * For REVISE mode, load a page of database records and, if you hit EOF,
      *                  finish loading the page with blank lines.
      *
     C                   select
     C                   when      mode = create
     C                   exsr      $sfloff
     C                   exsr      $clrln
     C                   do        wkplin
     C                   exsr      $blank
     C                   enddo
      *
     C                   when      mode = revise
     C     key01         setll     rop012
     C                   dou       *in82 = *on
     C                   exsr      $load1
     C                   enddo
      *
      * Fill up the subfile page with blank lines if necessary
      *
     C                   if        wkplin <> 0 and wkplin <> count
     C     count         div       wkplin        wkfld
     C                   mvr                     wkrmdr
     C                   eval      wkdiff = wkplin - wkrmdr
     C                   exsr      $sfloff
     C                   exsr      $clrln
     C                   do        wkdiff
     C                   exsr      $blank
     C                   enddo
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Load the subfile on screen 1
      *---------------------------------------------------------------
      *
     C     $load1        begsr
      *
      * Retrieve Item Control Data records.
      *
     C     key01         reade(n)  rop012                                 82
     C                   if        *in82 = *off                                 If not EOF
     C                   seton                                        85
      *
      * Set up line number fields--a workfield in case you have to fill the
      * rest of the page with blank lines and a hidden field on the subfile record
      *
     C                   z-add     icitcd        d1itcd
     C                   z-add     icsritcd      d1sritcd
     C                   move      icdocd        d1docd
     C                   z-add     icdobspr      d1dobspr
     C                   z-add     icmupc        d1mupc
     C                   z-add     icdfpr        d1dfpr
     C                   move      icfrxfl       d1frxfl
      *
      * Retrieve the Item Description
      *
     C     d1itcd        chain     ombyrel1                           92
     C                   if        *in92 = *off
     C                   eval      d1itds  = byavna
     C                   else
     C                   eval      d1itds = 'Unknown'
     C                   endif
      *
      *
      * Retrieve Source Item Description
      *
     C                   move      *blank        d1srtext
     C                   move      *blank        d1sritds
     C                   if        d1sritcd <> 0
     C                   eval      d1srtext = 'Source:'
     C     d1sritcd      chain     ombyrel1                           92
     C                   if        *in92 = *off
     C                   eval      d1sritds  = byavna
     C                   else
     C                   eval      d1sritds = 'Unknown'
     C                   endif
     C                   endif
      *
      * Reset indicators
      *
     C                   exsr      $ind
      *
     C                   add       1             count
     C                   add       1             hdrrn1
      *
     C                   write     ro102s1
     C                   exsr      $sfloff
     C                   seton                                        81
     C                   z-add     hdrrn1        hdpag1
     C                   endif                                                  If not EOF
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Load blank subfile records for screen 1
      *---------------------------------------------------------------
      *
     C     $blank        begsr
      *
     C                   exsr      $ind
      *
     C                   add       1             count
     C                   add       1             hdrrn1
      *
     C                   write     ro102s1
     C                   seton                                        81
     C                   z-add     hdrrn1        hdpag1
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Clear subfile line
      *---------------------------------------------------------------
      *
     C     $clrln        begsr
      *
     C                   z-add     0             d1itcd
     C                   z-add     0             d1sritcd
     C                   move      *blank        d1docd
     C                   z-add     0             d1dobspr
     C                   z-add     0             d1mupc
     C                   z-add     0             d1dfpr
     C                   move      *blank        d1frxfl
     C                   move      *blank        d1itds
     C                   move      *blank        d1sritds
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Reset indicators in the control record
      *----------------------------------------------------------------
      *
     C     $ind          begsr
      *
      * If the record was deleted out from under the user, then set indicators
      * to control available function keys and input fields.
      *
     C                   if        norecs = yes                                  If not found
     C                   seton                                        62
     C                   else
      *
      *  Set up for user's action
      *
     C                   select
     C                   when      c1mode = revise
     C                   seton                                        60
     C                   when      c1mode = create
     C                   seton                                        61
     C                   when      c1mode = delete
     C                   seton                                        62
     C                   endsl
      *
     C                   endif                                                  If not found
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Set off all subfile indicators
      *----------------------------------------------------------------
      *
     C     $sfloff       begsr
      *
     C                   setoff                                       303132
     C                   setoff                                       333435
     C                   setoff                                       3637
     C                   setoff                                       505153
     C                   setoff                                       54
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * User took F9 to accept his entries
      *--------------------------------------------------------------------------------------
      *
     C     $accept       begsr
      *
      * You will always just delete/create records.
      *
     C                   exsr      $dlt012
      *
     C                   dou       *in80 = *on                                  Do loop
     C                   readc     ro102s1                                80
     C                   if        *in80 = *off and d1itcd <> 0                 If read
      *
     C                   z-add     c1cono        iccono
     C                   z-add     xxwedt        icwedt
     C                   z-add     d1itcd        icitcd
     C                   z-add     d1sritcd      icsritcd
     C                   z-add     d1dfpr        icdfpr
     C                   move      d1docd        icdocd
     C                   z-add     d1dobspr      icdobspr
     C                   z-add     d1mupc        icmupc
     C                   move      d1frxfl       icfrxfl
      *
     C                   write     icrec
     C                   endif                                                  If read
     C                   enddo                                                  Do loop
      *
      * Set next routine
     C                   move      exit          routne
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Delete the Item Control Data records
      *----------------------------------------------------------------
      *
     C     $dlt012       begsr
      *
     C     key01         setll     rop012
      *
     C                   dou       *in91 = *on                                  Do delete
     C     key01         reade     rop012                                 91
     C                   if        *in91 = *off
     C                   delete    icrec
     C                   endif
     C                   enddo                                                  Do delete
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Prompt on screen 1
      *----------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Set off prompt indicators in all subfile records.
      *
     C                   exsr      $rewrtsfl
      *
      * Item
     C                   select
     C                   when      fld = 'D1ITCD'
     C                   call      'RO504'
     C                   parm      0             xxitcd
     C                   parm      *blank        xxitds
     C                   exsr      $rrn1
     C                   if        *in97 = *off                                 If hit
     C                   if        xxitcd <> 0
     C                   z-add     xxitcd        d1itcd
     C                   endif
     C                   seton                                        8553
     C                   update    ro102s1
     C                   setoff                                       8553
     C                   exsr      $synchrrn
     C                   endif                                                  If hit
      *
      * Source Item
     C                   when      fld = 'D1SRITCD'
     C                   call      'RO504'
     C                   parm      0             xxitcd
     C                   parm      *blank        xxitds
     C                   exsr      $rrn1
     C                   if        *in97 = *off                                 If hit
     C                   if        xxitcd <> 0
     C                   z-add     xxitcd        d1sritcd
     C                   endif
     C                   seton                                        8554
     C                   update    ro102s1
     C                   setoff                                       8554
     C                   exsr      $synchrrn
     C                   endif                                                  If hit
      *
      * Fresh Product Exception Flag
      *
     C                   when      fld = 'D1FRXFL'
     C                   call      'HP522'
     C                   parm      *blank        xxynfl
     C                   exsr      $rrn1
     C                   if        *in97 = *off                                 If hit
     C                   if        xxynfl <> *blank
     C                   movel     xxynfl        d1frxfl
     C                   endif
     C                   seton                                        8550
     C                   update    ro102s1
     C                   setoff                                       8550
     C                   exsr      $synchrrn
     C                   endif                                                  If hit
     C                   other
      *
      * F4 not valid for this field. So, issue message.
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'RO09011'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------
      * Synch up the relative record number after an F4 prompt in the subfile
      *----------------------------------------------------------------------
      *
      * Reset the subfile relative record number to what it was before
      * the user took F4 (It will be out-of-synch if the user has
      * selected a record-- thus causing the subfile record to be
      * retrieved and updated.)  But, set the page of the subfile to
      * be displayed to the page on which the user took F4.
      *
     C     $synchrrn     begsr
      *
     C                   z-add     count         hdrrn1
     C                   z-add     hdrr1         hdpag1
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      *
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Rewrite the subfile records with the indicators off
      *----------------------------------------------------------------
      *
      * This subroutine keeps the cursor from being in the subfile while
      * the displayed error message is for the control record.
      *
     C     $rewrtsfl     begsr
      *
      * Read/process all the changed subfile records
      *
     C                   dou       *in80 = *on                                  Do indicators off
     C                   readc     ro102s1                                80
     C                   if        *in80 = *off                                 If rec read
      * Seton MDT
     C                   seton                                        85
      *
      * Set of the error indicators in the subfile and the reset the control
      *
     C                   exsr      $sfloff
     C                   exsr      $ind
      *
     C                   update    ro102s1
     C                   endif                                                  If rec read
     C                   enddo                                                  Do indicators off
      * Set MDT
     C                   setoff                                       85
      *
     C                   endsr
      /eject
      *------------------------------------------------------------------------------------
      * Find/retrieve the subfile record to update when returning from a select program
      *------------------------------------------------------------------------------------
      *
      * HDRR1 is the hidden field associated with the keyword SFLCSRRRN
      * on the control record in the DSPF.
      * HDRRN1 is the value associated with the keyword 'SFILE' in
      * the F-specs for the workstation.
      *
     C     $rrn1         begsr
      *
     C                   setoff                                       97
      *
     C                   if        hdrr1 <> 0
     C                   z-add     hdrr1         hdrrn1
     C     hdrrn1        chain     ro102s1                            97
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Set the subfile to redisplay at the first page that has errors
      *---------------------------------------------------------------
      *
     C     $err1         begsr
      *
     C                   if        error = 1
     C                   eval      hdpag1 = hdrrn1
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    c1cono
     C                   parm                    c1wemdy
     C                   parm                    xxwedt
     C                   parm                    rtncd
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    c1cono
     C                   kfld                    xxwedt
      *
      * Usually, we pass in "mode". BUT, for this file, we will set it
      * here.
      *
     C     key01         chain(n)  rop012                             92
     C                   if        *in92 = *off
     C                   move      'REVISE'      c1mode
     C                   move      'REVISE'      mode
     C                   else
     C                   move      'CREATE'      c1mode
     C                   move      'CREATE'      mode
     C                   endif
      *
      * To support F5-Refresh, logic requires the number of lines on
      * the subfile page and also the number of lines less 1.  By
      * setting these values up as constant work fields, the processing
      * logic can be standardized between programs.
      *
     C                   z-add     12            wkplin
     C     wkplin        sub       1             wkrlin
      *
      *
      * The user can come into this program several different ways. Check
      * the entry mode and set the appropriate indicators to control the screen.
      * When you are deleting, just delete and get out---don't show any screens.
      *
     C                   select
     C                   when      mode = create
     C                   eval      routne = set1
     C                   seton                                        61
      *
     C                   when      mode = revise
     C                   eval      routne = set1
     C                   seton                                        60
      *
     C                   when      mode = delete
     C                   exsr      $dlt012
     C                   eval      routne = exit
     C                   endsl
      *
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
