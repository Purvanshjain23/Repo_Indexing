// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBJASRR
// ?Date: 14.08.2025 Time: 03:48:12
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PGM.*Scan limit = CND.9999999
PGM.*Scan_limit = 9999999;

//?USER: Load subfile record from DBF record

EXECUTE FUNCTION(Rtv Cust Price Header  RT) TYPE(RTVOBJ) FILE(POC6REP)          AC2086092;
PARAMETER(DB1.Ship_To_Customer);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF CTL.USR Name is Not Blank
IF CTL.USR_Name <> *BLANK;

// Call program CLC Call Qclscan       UP.
CALL PROGRAM(CLC Call Qclscan       UP) ('QCLSCAN');
PARAMETER(RCD.Customer_Name);
PARAMETER(30);
PARAMETER(1);
PARAMETER(CTL.USR_Name);
PARAMETER(30);
PARAMETER(1);
PARAMETER(1);
PARAMETER(*BLANK);
PARAMETER(WRK.USR_Qclscan_Result);

CASE;

// IF WRK.USR Qclscan Result ? is Does contain
IF WRK.USR_Qclscan_Result > 0;

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

ENDIF;

//?USER: Process subfile control

CASE;

// IF CTL.USR Name NE WRK.USR Name
IF CTL.USR_Name <> WRK.USR_Name;

// AND CTL.USR Name is Not Blank
AND CTL.USR_Name <> *BLANK;

// Execute function CVT Str to Upper Alpha US.
EXECUTE FUNCTION(CVT Str to Upper Alpha US) TYPE(EXCUSRSRC) ('PDWEUFR');
PARAMETER(CTL.USR_Name);
PARAMETER(CTL.USR_Name);
{
 PDWEUFR:  PGM PARM(&STRIN &STROUT)

 CHGVAR VAR(&FLDOUT) VALUE('%XLATE(UPTEXT &STRIN)')
}


// WRK.USR Name = CTL.USR Name
WRK.USR_Name = CTL.USR_Name;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process selected line

MOVE *ALL (To: PAR From: RCD);

