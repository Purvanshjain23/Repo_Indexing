     H/TITLE Exc 824 Not Rcvd f/601 XF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 05/04/23  Time  : 10:37:24
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FECP136L4  IF   E           K DISK
      * RSQ : EDI Export Shpmnt Inf HDR Dt(D)/Tm(D)/Ct SEL No 82
      *
     FCADPREL1  IF   E           K DISK
      * RTV : System Values             Retrieval index       NV
      *
     FECP136L0  UF   E           K DISK
      * UPD : EDI Export Shpmnt Inf HDR Update index
      *
      * Long constants
     D @CN#            S              6    DIM(18)CTDATA PERRCD(1)
     D @CN             S             25    DIM(18) ALT(@CN#)
     D YDOW            S              1     DIM(7)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      /EJECT
     D XTCK            DS
      * Time: hours, minutes, seconds
     D  XTTIM                  1      6  0
     D  XTHH                   1      2  0
     D  XTNN                   3      4  0
     D  XTSS                   5      6  0
      /EJECT
     D XDINT           DS
      * Internal date
     D  XDINDT                 1      7  0
     D  XDINYY                 1      3  0
     D  XDINMM                 4      5  0
     D  XDINDD                 6      7  0
      /EJECT
     D XD2T            DS
      * Internal date
     D  XDINT2                 1      7  0
     D  XDINY2                 1      3  0
     D  XDINM2                 4      5  0
     D  XDIND2                 6      7  0
     D YL0031          DS           500
     D QECP11        E DS                  EXTNAME(ECP136L0)
      * UPD : EDI Export Shpmnt Inf HDR Update index
      * Renamed input format fields
     D  WCTSCN       E                     EXTFLD(COTSCN)
     D  WCA0ST       E                     EXTFLD(COA0ST)
     D  WCHPAA       E                     EXTFLD(COHPAA)
     D  WCA8AB       E                     EXTFLD(COA8AB)
     D  WCA9AB       E                     EXTFLD(COA9AB)
     D  WCBAAB       E                     EXTFLD(COBAAB)
     D  WCBBAB       E                     EXTFLD(COBBAB)
     D  WCHDNZ       E                     EXTFLD(COHDNZ)
     D  WCBEAB       E                     EXTFLD(COBEAB)
     D  WCVRNA       E                     EXTFLD(COVRNA)
     D  WCBCAB       E                     EXTFLD(COBCAB)
     D  WCS5U1       E                     EXTFLD(COS5U1)
     D  WCBDAB       E                     EXTFLD(COBDAB)
     D  WCB7DX       E                     EXTFLD(COB7DX)
     D  WCS6U1       E                     EXTFLD(COS6U1)
     D  WCS7U1       E                     EXTFLD(COS7U1)
     D  WCS8U1       E                     EXTFLD(COS8U1)
     D  WCBFAB       E                     EXTFLD(COBFAB)
     D  WCS9U1       E                     EXTFLD(COS9U1)
     D  WCTAU1       E                     EXTFLD(COTAU1)
     D  WCTBU1       E                     EXTFLD(COTBU1)
     D  WCTPU1       E                     EXTFLD(COTPU1)
     D  WCTQU1       E                     EXTFLD(COTQU1)
     D  WCTRU1       E                     EXTFLD(COTRU1)
     D  WCCADX       E                     EXTFLD(COCADX)
     D  WCBETM       E                     EXTFLD(COBETM)
     D  WCN8SC       E                     EXTFLD(CON8SC)
      *
     D YARDCS          DS           287
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  YL0001         S              8  0
     D  YL0002         S              6  0
     D  XDTSDL         S             26
     D  YL0003         S             26
     D  ##TMS          S             26
     D  YL0004         S              4
     D  ZQ             S              5  0
     D  YL0005         S              2
     D  YL0006         S              2
     D  YL0007         S              8
     D  YL0008         S              8  0
     D  YL0009         S              2
     D  YL0010         S              2
     D  YL0011         S              2
     D  YL0012         S              6
     D  YL0013         S              6  0
     D  XASC           S              8  0
     D  XDWK1          S              8  0
     D  YL0014         S              1
     D  YL0015         S              8  0
     D  XDAY1          S              6  0
     D  XDAY2          S              6  0
     D  XDURR          S              8  0
     D  XDSEL          S              1
     D  XDCDW          S              7
     D  XDWSL          S              1  0
     D  XDSTP          S              1  0
     D  XDWNB          S              6  0
     D  XDLSW          S              1  0
     D  YY             S              6  0
     D  XDWK3          S              7  1
     D  XDWK2          S              6  0
     D  YL0016         S             50
     D  YL0017         S             10
     D  YN0001         S             10
     D  YL0018         S              1
     D  YL0019         S              1
     D  YL0020         S              8  0
     D  Y0CX01         S              1
     D  YL0021         S              1
     D  YL0022         S              7
     D  YL0023         S              7  0
     D  YL0024         S             10
     D  WN0001         S              4  0
     D  WN0002         S              2  0
     D  WN0003         S              2  0
     D  WN0004         S              4
     D  WN0005         S              2
     D  WN0006         S              2
     D  WUDLN          S             10
     D  XABEG          S              6  0
     D  XAEND          S              6  0
     D  YL0025         S              6
     D  YL0026         S              2
     D  YL0027         S              2
     D  YL0028         S              2
     D  YL0029         S              8
     D  YL0030         S             80
     D  WN0007         S              6
     D  WN0008         S              1
     D  WN0009         S              2
     D  WN0010         S              2
     D  WN0011         S              2
     D  WN0012         S              7  0
     D  WN0013         S              2
     D  WN0014         S             20
     D  WN0015         S              4
     D  WN0016         S             28
     D  WN0017         S              3
     D  WN0018         S              8  0
     D  WN0019         S             30
     D  WN0020         S             30
     D  WN0021         S             50
     D  WN0022         S              2
     D  WN0023         S             15
     D  WN0024         S             30
     D  WN0025         S              1
     D  WN0026         S              4
     D  WN0027         S             15
     D  WN0028         S             15
     D  WN0029         S              8  0
     D  WN0030         S              6  0
     D  WN0031         S              1
     D  YARDC          S              1
     D  WQ0001         S             50
     D  WQ0002         S             80
     D  WQ0003         S            500
     D  W0CLPG         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  YRSW00         S              5  0
     D  YRSW01         S              5  0
     D  W0PMT          S              1
     D                 DS
     D  ZAMSDA                 1    132
     I@P136MH
      * EDI Export Shpmnt Inf HDR Dt(D)/Tm(D)/Ct SEL No 82
      * Renamed input format fields
     I              COTSCN                      WATSCN
     I              COA0ST                      WAA0ST
     I              COHPAA                      WAHPAA
     I              COA8AB                      WAA8AB
     I              COA9AB                      WAA9AB
     I              COBAAB                      WABAAB
     I              COBBAB                      WABBAB
     I              COHDNZ                      WAHDNZ
     I              COBEAB                      WABEAB
     I              COVRNA                      WAVRNA
     I              COBCAB                      WABCAB
     I              COS5U1                      WAS5U1
     I              COBDAB                      WABDAB
     I              COB7DX                      WAB7DX
     I              COS6U1                      WAS6U1
     I              COS7U1                      WAS7U1
     I              COS8U1                      WAS8U1
     I              COBFAB                      WABFAB
     I              COS9U1                      WAS9U1
     I              COTAU1                      WATAU1
     I              COTBU1                      WATBU1
     I              COTPU1                      WATPU1
     I              COTQU1                      WATQU1
     I              COTRU1                      WATRU1
     I              COCADX                      WACADX
     I              COBETM                      WABETM
     I              CON8SC                      WAN8SC
      *
     I@DPRETD
      * System Values             Retrieval index       NV
      * Renamed input format fields
     I              DPDOCD                      WBDOCD
     I              DPAUNA                      WBAUNA
     I              DPI5ST                      WBI5ST
     I              DPBXTX                      WBBXTX
     I              DPM8NB                      WBM8NB
     I              DPUVST                      WBUVST
     I              DPUWST                      WBUWST
     I              DPUXST                      WBUXST
     I              DPVSST                      WBVSST
     I              DPAATM                      WBAATM
     I              DPAYNA                      WBAYNA
     I              DPA0NA                      WBA0NA
     I              DPAXDT                      WBAXDT
      *
     I@COCPKT
      * EDI Export Shpmnt Inf HDR Update index
      * Renamed input format fields
     I              COTSCN                      WCTSCN
     I              COA0ST                      WCA0ST
     I              COHPAA                      WCHPAA
     I              COA8AB                      WCA8AB
     I              COA9AB                      WCA9AB
     I              COBAAB                      WCBAAB
     I              COBBAB                      WCBBAB
     I              COHDNZ                      WCHDNZ
     I              COBEAB                      WCBEAB
     I              COVRNA                      WCVRNA
     I              COBCAB                      WCBCAB
     I              COS5U1                      WCS5U1
     I              COBDAB                      WCBDAB
     I              COB7DX                      WCB7DX
     I              COS6U1                      WCS6U1
     I              COS7U1                      WCS7U1
     I              COS8U1                      WCS8U1
     I              COBFAB                      WCBFAB
     I              COS9U1                      WCS9U1
     I              COTAU1                      WCTAU1
     I              COTBU1                      WCTBU1
     I              COTPU1                      WCTPU1
     I              COTQU1                      WCTQU1
     I              COTRU1                      WCTRU1
     I              COCADX                      WCCADX
     I              COBETM                      WCBETM
     I              CON8SC                      WCN8SC
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Exc 824 Not Rcvd f/601 XF
      * NOTE: JS 'IB824NOTRV' calls this function every 1 hour interval.
      *       ReProcess the EDI 601 transactions where the EDI 824 has no
      *       been received for more/equal than 1 hour ago.
      * Rtv System Dt/Tm *YMD IF
      * LCL.*System timestamp = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         YL0003                         *System timesta
      * Format System Date. (YYYMMDD)
     C                   Z-ADD     4             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0003:ZQ     YL0004                 90      Year USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0003:ZQ     YL0005                 90      Month USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     9             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0003:ZQ     YL0006                 90      Day USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     *ZERO         ZQ
     C     YL0004        CAT(P)    YL0005:ZQ     YL0007                         Date (Char-8) U
     C                   Z-ADD     *ZERO         ZQ
     C     YL0007        CAT(P)    YL0006:ZQ     YL0007                         Date (Char-8) U
     C                   MOVE      YL0007        YL0008                         DATE
     C                   Z-ADD     YL0008        YL0001                         System Date D8#
      * Format System Time.
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     12            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0003:ZQ     YL0009                 90      Hours  2A
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     15            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0003:ZQ     YL0010                 90      Minutes  2A
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     18            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0003:ZQ     YL0011                 90      Seconds 2A
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     *ZERO         ZQ
     C     YL0009        CAT(P)    YL0010:ZQ     YL0012                         Time Alpha usr
     C                   Z-ADD     *ZERO         ZQ
     C     YL0012        CAT(P)    YL0011:ZQ     YL0012                         Time Alpha usr
     C                   MOVE      YL0012        YL0002                         System Time USR
      * LCL.Time From = LCL.System Time USR + CON.-60 *MINUTES
     C                   Z-ADD     YL0002        XTTIM
     C                   Z-ADD     *ZERO         XASC
     C                   EXSR      XTAD1
     C     60            MULT      -60           XDWK1
     C                   ADD       XDWK1         XASC
     C                   EXSR      XTCT1
     C                   Z-ADD     XTTIM         YL0013
      * Set to Yesterday's Date.
      * CASE: LCL.Time From is 11th Hour in PM
     C                   IF        YL0013 >= 230000 AND
     C                             YL0013 <= 235959
     C                   MOVEL     'Y'           YL0014                         Yesterday Date
      * LCL.Yesterday Date D8# USR = LCL.System Date D8# USR + CON.-1 *DA
     C     YL0001        SUB       18000000      XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     -1            XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0015
     C                   ELSE
     C     XDINDT        ADD       18000000      YL0015
     C                   END
     C                   Z-ADD     YL0015        YL0001                         System Date D8#
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           YL0014                         Yesterday Date
     C                   END                                                    *FI
      * Exc 824 Not Rcvd f/601 RT - EDI Export Shpmnt Inf HDR  * 
     C                   EXSR      SARVGN
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Exc 824 Not Rcvd f/601 RT - EDI Export Shpmnt Inf HDR  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * RTV System Value Alpha RT - System Values  * Get Export Doc Team
     C                   EXSR      SBRVGN
      * RTV Data Libraries     RT - System Values  * In TEST or PROD
     C                   EXSR      SCRVGN
     C                   MOVEL     'Y'           YL0018                         First Time Thro
     C                   MOVEL     'N'           YL0019                         Send Email USR
      * CASE: PAR.Yesterday Date Sts USR is Yes
      * LCL.Current Date D8# = PAR.Yesterday Date D8# USR + CON.1 *DAYS
     C                   IF        YL0014 = 'Y'
     C     YL0015        SUB       18000000      XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     1             XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0020
     C                   ELSE
     C     XDINDT        ADD       18000000      YL0020
     C                   END
     C                   END                                                    *FI
      * Define keylist
     C     KPSSA         KLIST
     C                   KFLD                    WACADX                         Create Date D8#
     C                   KFLD                    WABETM                         Create Time
      * Setup key
     C                   Z-ADD     YL0001        WACADX                         Create Date D8#
     C                   Z-ADD     YL0013        WABETM                         Create Time
      * Establish starting position
     C     KPSSA         SETLL     @P136MH                                      *
     C                   READ      @P136MH                                90    *
      * Data record not found
     C   90              MOVEL     'USR5267'     W0RTN
      * USER: Process Data record
      * Check Yesterday or Current Date Processing.
      * CASE: PAR.Yesterday Date Sts USR is Yes
     C                   DOW       NOT *IN90
      * Select Records Not Within 11PM & 12AM Time Frame.
      * CASE:
      *  - (c1 AND c2) OR (c3 AND c4)
      *   |- c1    : PAR.Create Date D8# EQ DB1.Create Date D8#
      *   |- c2    : DB1.Create Time is 11th Hour in PM
      *   |- c3    : DB1.Create Date D8# EQ LCL.Current Date D8#
      *   |- c4    : DB1.Create Time is Midnight Hour
      *   '-
     C                   IF        YL0014 = 'Y'
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0001 = WACADX
     C                   IF        WABETM >= 230000 AND
     C                             WABETM <= 235959
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 <> '1'
     C                   IF        WACADX = YL0020
     C                   IF        WABETM >= 000000 AND
     C                             WABETM <= 005959
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * We should NOT be running this during this time frame.
      * 11th Hour in PM & Midnight Hour, Do NOT Select.
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'N'           YL0021                         Continue (Yes/N
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'Y'           YL0021                         Continue (Yes/N
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * Current Date Processing. Select Records Past the 1 Hour or More.
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Create Date D8# EQ DB1.Create Date D8#
      *   |- c2    : DB1.Create Time GT PAR.Create Time
      *   |- c3    : DB1.Create Time LE PAR.System Time USR
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0001 = WACADX
     C                   IF        WABETM > YL0013
     C                   IF        WABETM <= YL0002
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'N'           YL0021                         Continue (Yes/N
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'Y'           YL0021                         Continue (Yes/N
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Continue to Process?
      * CASE: LCL.Continue (Yes/No) USR is Yes
      * Format Data.
      * CASE: *OTHERWISE
     C                   IF        YL0021 = 'Y'
     C                   EVAL      YL0022 = ' '                                 Load ID Alpha U
     C                   MOVEL     WAHDNZ        YL0022                         Load ID Alpha U
      * Date.
      * LCL.Create Date = DB1.Create Date D8#
     C                   IF        WACADX = *ZERO
     C                   Z-ADD     *ZERO         YL0023
     C                   ELSE
     C     WACADX        SUB       19000000      YL0023                         Create Date
     C                   END
      *
     C                   Z-ADD     *ZERO         WN0001                         YYYY numeric US
     C                   Z-ADD     *ZERO         WN0002                         MM   numeric US
     C                   Z-ADD     *ZERO         WN0003                         DD   numeric US
     C                   EVAL      WN0004 = ' '                                 YYYY alpha   US
     C                   EVAL      WN0005 = ' '                                 MM   alpha   US
     C                   EVAL      WN0006 = ' '                                 DD   alpha   US
      *
      * Cvt DTE to MM/DD/YYYY  IF
      * Break apart date.
      * PAR.YYYY numeric USR = PAR.@Date - ATR *YEAR
     C     YL0023        ADD       1000000       XDINDT
     C     1800          ADD       XDINYY        WN0001
      * PAR.MM   numeric USR = PAR.@Date - ATR *MONTH
     C     YL0023        ADD       1000000       XDINDT
     C                   Z-ADD     XDINMM        WN0002
      * PAR.DD   numeric USR = PAR.@Date - ATR *DAY OF MONTH
     C     YL0023        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     0             XDINDD
     C                   EXSR      XCVTA
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   MOVEL     'NONE'        WUDLN
     C                   EXSR      XDUDY
     C                   MOVE      XDURR         WN0003
      * Convert to alpha.
     C                   EVAL      WN0004 = ' '                                 YYYY alpha   US
     C                   MOVEL     WN0001        WN0004                         YYYY alpha   US
     C                   MOVEL     WN0002        WN0005                         MM   alpha   US
     C                   MOVEL     WN0003        WN0006                         DD   alpha   US
      * Put back together.
     C                   Z-ADD     *ZERO         ZQ
     C     WN0005        CAT(P)    '/':ZQ        YL0024                         Date mm/dd/yyyy
     C                   Z-ADD     *ZERO         ZQ
     C     YL0024        CAT(P)    WN0006:ZQ     YL0024                         Date mm/dd/yyyy
     C                   Z-ADD     *ZERO         ZQ
     C     YL0024        CAT(P)    '/':ZQ        YL0024                         Date mm/dd/yyyy
     C                   Z-ADD     *ZERO         ZQ
     C     YL0024        CAT(P)    WN0004:ZQ     YL0024                         Date mm/dd/yyyy
      * Time.
     C                   EVAL      YL0025 = ' '                                 Time  6A
     C                   MOVEL     WABETM        YL0025                         Time  6A
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00006 OR
     C                             ZQ > 00006
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0025:ZQ     YL0026                 90      Hour 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     3             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00006 OR
     C                             ZQ > 00006
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0025:ZQ     YL0027                 90      Minute 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     5             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00006 OR
     C                             ZQ > 00006
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0025:ZQ     YL0028                 90      Second 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     0             ZQ
     C     YL0026        CAT(P)    ':':ZQ        YL0029                         Time  HH:MM:SS
     C                   Z-ADD     0             ZQ
     C     YL0029        CAT(P)    YL0027:ZQ     YL0029                         Time  HH:MM:SS
     C                   Z-ADD     0             ZQ
     C     YL0029        CAT(P)    ':':ZQ        YL0029                         Time  HH:MM:SS
     C                   Z-ADD     0             ZQ
     C     YL0029        CAT(P)    YL0028:ZQ     YL0029                         Time  HH:MM:SS
      * Format Email Data.
      * CASE: LCL.First Time Through USR is Yes
     C                   IF        YL0018 = 'Y'
     C                   MOVEL     'N'           YL0018                         First Time Thro
     C                   MOVEL     'Y'           YL0019                         Send Email USR
      * Format Email Subject Line.
      * CASE: *OTHERWISE
     C                   Z-ADD     0             ZQ
     C     @CN(005)      CAT(P)    @CN(006):ZQ   YL0030                         Email Subject 2
      * If Not PROD Then Append 'TEST' to Email Subject Line.
      * CASE: LCL.Library List Code is Not PRKFLIB
     C                   IF        YL0017 <> @CN(007)
     C                   Z-ADD     1             ZQ
     C     YL0030        CAT(P)    @CN(008):ZQ   YL0030                         Email Subject 2
     C                   END                                                    *FI
      * Format Email Message.
      * CASE: *OTHERWISE
     C                   Z-ADD     0             ZQ
     C     @CN(009)      CAT(P)    @CN(010):ZQ   YL0031                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    @CN(011):ZQ   YL0031                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    @CN(012):ZQ   YL0031                         Email Message 2
     C                   Z-ADD     0             ZQ
     C     YL0031        CAT(P)    @CN(013):ZQ   YL0031                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    @CN(014):ZQ   YL0031                         Email Message 2
      * Force New Line.
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    '&N':ZQ       YL0031                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    '&N':ZQ       YL0031                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    @CN(015):ZQ   YL0031                         Email Message 2
     C                   Z-ADD     0             ZQ
     C     YL0031        CAT(P)    @CN(016):ZQ   YL0031                         Email Message 2
      * Force New Line.
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    '&N':ZQ       YL0031                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    @CN(017):ZQ   YL0031                         Email Message 2
     C                   Z-ADD     0             ZQ
     C     YL0031        CAT(P)    @CN(018):ZQ   YL0031                         Email Message 2
      * Force New Line.
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    '&N':ZQ       YL0031                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    YL0022:ZQ     YL0031                         Email Message 2
     C                   Z-ADD     3             ZQ
     C     YL0031        CAT(P)    YL0024:ZQ     YL0031                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    YL0029:ZQ     YL0031                         Email Message 2
     C                   ELSE
      * CASE: *OTHERWISE
      * Format Email Message - Append Additional Loads.
      * CASE: *OTHERWISE
      * Force New Line.
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    '&N':ZQ       YL0031                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    YL0022:ZQ     YL0031                         Email Message 2
     C                   Z-ADD     3             ZQ
     C     YL0031        CAT(P)    YL0024:ZQ     YL0031                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0031        CAT(P)    YL0029:ZQ     YL0031                         Email Message 2
     C                   END                                                    *FI
      * Resubmit the Original EDI 601 Transaction.
      * Chg EDI Rcd Processed CH - EDI Export Shpmnt Inf HDR  * 
     C                   EXSR      SDCHRC
     C                   END                                                    *FI
     C                   READ      @P136MH                                90    *
     C                   ENDDO
      * USER: Exit processing
      * OK to Send Email?
      * CASE: LCL.Send Email USR is Yes
      * Exc ESNDMAIL Generic2 CL - /UT User Programs  * 
     C                   IF        YL0019 = 'Y'
     C                   CALL      'PUX2UPC'                            90      Exc ESNDMAIL Ge
     C                   PARM      YL0016        WQ0001                         Email Address
     C                   PARM      YL0030        WQ0002                         Email Subject 2
     C                   PARM      YL0031        WQ0003                         Email Message 2
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUX2UPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * RTV System Value Alpha RT - System Values  * Get Export Doc Team
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WBDOCD                         System Value Co
      * Setup key
     C                   MOVEL     @CN(002)      WBDOCD                         System Value Co
      * Establish starting position
     C     KRSSB         CHAIN     @DPRETD                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0759'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      YL0016 = ' '                                 System Value Al
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WBBXTX        YL0016                         System Value Al
     C                   ENDIF
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * RTV Data Libraries     RT - System Values  * In TEST or PROD
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KPSSC         KLIST
     C                   KFLD                    WBDOCD                         System Value Co
      * Setup key
     C                   EVALR     WBDOCD = ' '                                 System Value Co
     C                   MOVEL     'DTALIB'      WBDOCD                         System Value Co
      * Establish starting position
     C     KPSSC         SETLL     @DPRETD                                      *
     C                   READ      @DPRETD                                90    *
      * Data record not found
     C   90              MOVEL     'USR0759'     W0RTN
      * USER: Process Data record
      * CASE: DB1.System Value Code is Data File Library
     C                   DOW       NOT *IN90
     C                   IF        WBDOCD = @CN(003)
     C                   MOVEL     WBBXTX        YL0017                         Library List Co
     C                   ELSE
      * CASE: DB1.System Value Code is History File Library
     C                   IF        WBDOCD = @CN(004)
     C                   MOVEL     WBBXTX        YN0001                         @Library List C
     C                   GOTO      SCEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   READ      @DPRETD                                90    *
     C                   ENDDO
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDCHRC        BEGSR
      *================================================================
      * Chg EDI Rcd Processed CH - EDI Export Shpmnt Inf HDR  * 
      *================================================================
      *
     C                   EVAL      WN0007 = ' '                                 TRADE PARTNER C
     C                   EVAL      WN0008 = ' '                                 BA101-Related C
     C                   EVAL      WN0009 = ' '                                 BA102-Action Co
     C                   EVAL      WN0010 = ' '                                 BA103-Transport
     C                   EVAL      WN0011 = ' '                                 BA104-Country C
     C                   Z-ADD     *ZERO         WN0012                         BA105-Shipment
     C                   EVAL      WN0013 = ' '                                 BA108-Ship From
     C                   EVAL      WN0014 = ' '                                 BA109-IRS Ident
     C                   EVAL      WN0015 = ' '                                 BA110-SCAC
     C                   EVAL      WN0016 = ' '                                 BA112-Vessel Na
     C                   EVAL      WN0017 = ' '                                 YNQ01-Type of F
     C                   Z-ADD     *ZERO         WN0018                         DTM02-Sail Date
     C                   EVAL      WN0019 = ' '                                 PS03-Port of Ex
     C                   EVAL      WN0020 = ' '                                 P503-Port of Un
     C                   EVAL      WN0021 = ' '                                 REF02-Ref ITN
     C                   EVAL      WN0022 = ' '                                 M1201-Customs E
     C                   EVAL      WN0023 = ' '                                 M1202-Customs E
     C                   EVAL      WN0024 = ' '                                 M1203-Location
     C                   EVAL      WN0025 = ' '                                 M1204-Foreign P
     C                   EVAL      WN0026 = ' '                                 EDI ESIH-Unused
     C                   EVAL      WN0027 = ' '                                 ESIH OHE Bookin
     C                   EVAL      WN0028 = ' '                                 EDI ESIH-Unused
     C                   Z-ADD     *ZERO         WN0029                         Create Date D8#
     C                   Z-ADD     *ZERO         WN0030                         Create Time
     C                   EVAL      WN0031 = ' '                                 EDI 824 Receive
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @COCPKT
     C                   Z-ADD     WATSCN        WCTSCN                         ST02-TRANS SET
      *
     C     KLCHSD        KLIST
     C                   KFLD                    WCTSCN                         ST02-TRANS SET
     C     KLCHSD        CHAIN     @COCPKT                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'ECP136L0'    MDACP
     C                   MOVEL     '@COCPKT'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SDEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SDEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QECP11        YARDCS
      * Move non-key fields to @COCPKT
     C                   MOVEL(P)  'N'           WCA0ST                         EDI-Record Proc
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QECP11 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @COCPKT                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    ECP136L0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   XCVFA         BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C                   IF        XDAY1 > 109267
     C                   ADD       2             XDAY1
     C                   ELSE
     C                   IF        XDAY1 > 36218
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      * Full years (up to the date)
     C     XDAY1         DIV       365.25        XDWK1
     C                   MVR                     XDWK3
     C                   Z-ADD     XDWK1         XDINYY
      * The date is the end of a year
     C                   IF        XDWK3 = 0
     C                   Z-ADD     12            XDINMM
     C                   Z-ADD     31            XDINDD
     C                   ELSE
      * Year days up to the date
     C     XDWK1         MULT      365.25        XDWK2
     C                   SUB       XDWK2         XDAY1
     C                   ADD       1             XDINYY
      * Leap year ?
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
      * March 1 (relative day of the year)
     C                   IF        XDWK1 = 0
     C                   Z-ADD     60            XDWK1
     C                   ELSE
     C                   Z-ADD     59            XDWK1
     C                   END
      * Define date base month and offset day -
      *  - January (thru February)
     C                   IF        XDAY1 <= XDWK1
     C                   Z-ADD     1             XDINMM
     C                   ELSE
     C                   SUB       XDWK1         XDAY1
      *  - March (thru July)
     C                   IF        XDAY1 <= 153
     C                   Z-ADD     3             XDINMM
     C                   ELSE
      *  - August (thru December)
     C                   Z-ADD     8             XDINMM
     C                   SUB       153           XDAY1
     C                   END
      * Calculate 2 month base and offset day
     C     XDAY1         SUB       1             XDWK1
     C                   DIV       61            XDWK1
     C                   MVR                     XDAY1
     C                   ADD       1             XDAY1
     C                   MULT      2             XDWK1
     C                   ADD       XDWK1         XDINMM
     C                   END
      * Calculate date increment,
     C                   IF        XDAY1 > 31
     C                   ADD       1             XDINMM
     C                   SUB       31            XDAY1
     C                   END
     C                   Z-ADD     XDAY1         XDINDD
     C                   END
      *================================================================
     CSR   XCVFAE        ENDSR
      /EJECT
     CSR   XCVTA         BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C     XDINYY        SUB       1             XDWK1
     C     XDWK1         MULT      365.25        XDAY1
     C                   IF        XDWK1 >= 300
     C                   SUB       2             XDAY1
     C                   ELSE
     C                   IF        XDWK1 >= 100
     C                   SUB       1             XDAY1
     C                   END
     C                   END
      * (from the beginning of the year to the beginning of the month:)
     C     XDINMM        SUB       1             XDWK1
      *     ...+31*(MM-1) (for January-February) ...
     C                   IF        XDINMM < 3
     C                   MULT      31            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                   MULT      30            XDWK1
     C                   ADD       XDWK1         XDAY1
      *         ...-2 (for preceding February) ...
     C                   SUB       2             XDAY1
      *         ...+1 (for preceding February, if leap year) ...
     C                   IF        XDINYY <> 100 AND
     C                             XDINYY <> 300
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
     C                   IF        XDWK1 = 0
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C                   IF        XDINMM < 8
     C     XDINMM        MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C     XDINMM        ADD       1             XDWK1
     C                   MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   END
     C                   END
      * ...+DD (days in the month up to the ending date)
     C                   ADD       XDINDD        XDAY1
      *================================================================
     CSR   XCVTAE        ENDSR
      /EJECT
     CSR   XDADY         BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
      * None days of week selected
     C                   IF        XDURR = 0 OR
     C                             XDWSL = 0
     C                   Z-ADD     XDAY2         XDAY1
      * Return Code: Unable to increment date.
     C                   IF        XDURR <> *ZERO
     C                   MOVEL     'Y2U0059'     W0RTN
     C                   ENDIF
     C                   GOTO      XDADYE
     C                   ENDIF
      * All days of week selected
     C                   IF        XDWSL = 7
     C     XDAY2         ADD       XDURR         XDAY1
     C                   GOTO      XDADYM
     C                   ENDIF
      * Some days of week selected
     C                   IF        XDURR >= 0
     C                   Z-ADD     1             XDSTP
     C                   ELSE
     C                   Z-ADD     -1            XDSTP
     C                   ENDIF
      * Get number of full weeks in the duration
     C     XDURR         DIV       XDWSL         XDWNB
      * Isolate the last week
     C                   MVR                     XDLSW
     C                   IF        XDLSW = 0
     C     XDWSL         MULT      XDSTP         XDLSW
     C                   SUB       XDSTP         XDWNB
     C                   ENDIF
      * Increment the date by the full weeks
     C     XDWNB         MULT      7             XDWK1
     C     XDAY2         ADD       XDWK1         XDAY1
      * Determine day of week of the beginning date
     C     XDAY2         ADD       3             YY
     C                   DIV       7             YY
     C                   MVR                     YY
     C                   IF        YY = 0
     C                   Z-ADD     7             YY
     C                   ENDIF
      * Loop: Increment the date by the last week
      * Increment the date
     C                   DOW       XDLSW <> 0
     C                   ADD       XDSTP         XDAY1
      * Increment the day of week
     C                   ADD       XDSTP         YY
      * Put day of week into the range 1-7
     C                   IF        YY = 0
     C                   Z-ADD     7             YY
     C                   ELSE
     C                   IF        YY = 8
     C                   Z-ADD     1             YY
     C                   ELSE
     C                   IF        YY = -1
     C                   Z-ADD     6             YY
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      * Selected day of the last week has been processed
     C                   IF        YDOW(YY) = XDSEL
     C                   SUB       XDSTP         XDLSW
     C                   ENDIF
      * End of loop
     C                   ENDDO
     C     XDADYM        TAG
     C                   IF        XDINDD < 1
     C                   Z-ADD     1             XDINDD
     C                   MOVEL     'Y2U0006'     W0RTN
     C                   ENDIF
      *================================================================
     CSR   XDADYE        ENDSR
      /EJECT
     CSR   XDOWS         BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                   MOVEA     XDCDW         YDOW
     C                   Z-ADD     0             XDWSL
     C                   Z-ADD     1             YY
     C                   DOW       YY <= 7
     C                   IF        YDOW(YY) = XDSEL
     C                   ADD       1             XDWSL
     C                   END
     C                   ADD       1             YY
     C                   END
      *================================================================
     CSR   XDOWSE        ENDSR
      /EJECT
     CSR   XDUDY         BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C                   IF        XDAY1 < 1 OR
     C                             XDAY2 < 1
     C                   Z-ADD     0             XDURR
     C                   MOVEL     'Y2U0006'     W0RTN
     C                   GOTO      XDUDYE
     C                   END
      * From date2 to date1
     C                   IF        XDAY1 >= XDAY2
     C                   Z-ADD     XDAY2         XABEG
     C                   Z-ADD     XDAY1         XAEND
     C                   ELSE
      * From date1 to date2
     C                   Z-ADD     XDAY1         XABEG
     C                   Z-ADD     XDAY2         XAEND
     C                   END
      * None days of week selected
     C                   IF        XDWSL = 0
     C                   Z-ADD     0             XDURR
     C                   GOTO      XDUDYC
     C                   END
     C     XAEND         SUB       XABEG         XDURR
      * All days of week selected
     C                   IF        XDWSL = 7
     C                   GOTO      XDUDYC
     C                   END
      * Some days of week selected
     C                   DIV       7             XDURR
     C                   MVR                     XDLSW
     C                   MULT      XDWSL         XDURR
      * Determine day of week of the beginning date
     C                   IF        XDLSW <> 0
     C     XABEG         ADD       3             YY
     C                   DIV       7             YY
     C                   MVR                     YY
      * Loop: Increment the date by the last week
      * Increment the day of week
     C                   DOW       XDLSW > 0
     C                   ADD       1             YY
     C                   SUB       1             XDLSW
      * Put day of week into the range 1-7
     C                   IF        YY = 8
     C                   Z-ADD     1             YY
     C                   END
      * Selected day of the last week has been processed
      * Increment duration
     C                   IF        YDOW(YY) = XDSEL
     C                   ADD       1             XDURR
     C                   END
      * End of loop
     C                   END
     C                   END
     C     XDUDYC        TAG
      * Return Code: Unable to calculate duration
     C                   IF        XDURR = 0
     C                   MOVEL     'Y2U0060'     W0RTN
     C                   ELSE
     C                   EVAL      W0RTN = ' '
     C                   END
      *================================================================
     CSR   XDUDYE        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   XTAD1         BEGSR
      *================================================================
      * Add TME to absolute time (seconds)
      *================================================================
     C     XTHH          MULT      3600          XDWK1
     C                   ADD       XDWK1         XASC
     C     XTNN          MULT      60            XDWK1
     C                   ADD       XDWK1         XASC
     C                   ADD       XTSS          XASC
      *================================================================
     CSR   XTAD1E        ENDSR
      /EJECT
     CSR   XTCT1         BEGSR
      *================================================================
      * Convert absolute time (seconds) to TME
      *================================================================
     C                   EXSR      XTFCT
     C     XASC          DIV       60            XASC
     C                   MVR                     XTSS
     C     XASC          DIV       60            XASC
     C                   MVR                     XTNN
     C                   Z-ADD     XASC          XTHH
      *================================================================
     CSR   XTCT1E        ENDSR
      /EJECT
     CSR   XTFCT         BEGSR
      *================================================================
      * Factorize absolute date (seconds) by 24 hours
      *================================================================
     C                   IF        XASC >= 86400
     C                   DIV       86400         XASC
     C                   MVR                     XASC
     C                   ELSE
     C                   IF        XASC <= *ZERO
     C                   DIV       86400         XASC
     C                   MVR                     XASC
     C                   IF        XASC <> *ZERO
     C                   ADD       86400         XASC
     C                   END
     C                   END
     C                   END
      *================================================================
     CSR   XTFCTE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(001)      XDTSDL
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WATSCN                         ST02-TRANS SET
     C                   Z-ADD     *ZERO         WAHDNZ                         BA105-Shipment
     C                   Z-ADD     *ZERO         WAB7DX                         DTM02-Sail Date
     C                   Z-ADD     *ZERO         WACADX                         Create Date D8#
     C                   Z-ADD     *ZERO         WABETM                         Create Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WBM8NB                         System Value Nu
     C                   Z-ADD     *ZERO         WBAATM                         Job Time
     C                   Z-ADD     *ZERO         WBAXDT                         Job Date
      * Define *Synon program work fields
     C                   Z-ADD     *ZEROS        YRSW00                         *Synon (5,0) wo
     C                   Z-ADD     *ZEROS        YRSW01                         *Synon (5,0) wo
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local work field System Date D8# USR
     C                   Z-ADD     *ZERO         YL0001
      * Define local work field System Time USR
     C                   Z-ADD     *ZERO         YL0002
      * Define local work field *System timestamp
     C                   MOVEL     XDTSDL        YL0003
      * Define local work field Year USR
     C                   EVAL      YL0004 = ' '
      * Define local work field Month USR
     C                   EVAL      YL0005 = ' '
      * Define local work field Day USR
     C                   EVAL      YL0006 = ' '
      * Define local work field Date (Char-8) USR
     C                   EVAL      YL0007 = ' '
      * Define local work field DATE
     C                   Z-ADD     *ZERO         YL0008
      * Define local work field Hours  2A            USR
     C                   EVAL      YL0009 = ' '
      * Define local work field Minutes  2A          USR
     C                   EVAL      YL0010 = ' '
      * Define local work field Seconds 2A            USR
     C                   EVAL      YL0011 = ' '
      * Define local work field Time Alpha usr 6
     C                   EVAL      YL0012 = ' '
      * Define local work field Time From
     C                   Z-ADD     *ZERO         YL0013
      * Define local work field Yesterday Date Sts USR
     C                   EVAL      YL0014 = ' '
      * Define local work field Yesterday Date D8# USR
     C                   Z-ADD     *ZERO         YL0015
      * Define local work field Email Address
     C                   EVAL      YL0016 = ' '
      * Define local work field Library List Code
     C                   EVAL      YL0017 = ' '
      * Define null work field @Library List Code
     C                   EVAL      YN0001 = ' '
      * Define local work field First Time Through USR
     C                   EVAL      YL0018 = ' '
      * Define local work field Send Email USR
     C                   EVAL      YL0019 = ' '
      * Define local work field Current Date D8#
     C                   Z-ADD     *ZERO         YL0020
      * Define local work field Continue (Yes/No) USR
     C                   EVAL      YL0021 = ' '
      * Define local work field Load ID Alpha USR
     C                   EVAL      YL0022 = ' '
      * Define local work field Create Date
     C                   Z-ADD     *ZERO         YL0023
      * Define local work field Date mm/dd/yyyy USR
     C                   EVAL      YL0024 = ' '
      * Define local work field Time  6A             USR
     C                   EVAL      YL0025 = ' '
      * Define local work field Hour 2A USR
     C                   EVAL      YL0026 = ' '
      * Define local work field Minute 2A USR
     C                   EVAL      YL0027 = ' '
      * Define local work field Second 2A USR
     C                   EVAL      YL0028 = ' '
      * Define local work field Time  HH:MM:SS      USR
     C                   EVAL      YL0029 = ' '
      * Define local work field Email Subject 2 USR
     C                   EVAL      YL0030 = ' '
      * Define local work field Email Message 2 USR
     C                   EVAL      YL0031 = ' '
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
00002 EDI824EXP
00003 DTALIB
00004 HISLIB
00005 AES 824 Application Advic
00006 e Not Received
00007 PRKFLIB
00008 - TEST
00009 The AES 824 Application A
00010 dvice has not been
00011 received for the
00012 following Load(s). The ED
00013 I 601 transaction(s) has
00014 been resubmitted to AES.
00015 Load ID    601 Created Da
00016 te/Time:
00017 -----------   -----------
00018 -------------------
