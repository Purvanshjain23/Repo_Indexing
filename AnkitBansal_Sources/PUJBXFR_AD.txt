// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUJBXFR
// ?Date: 14.08.2025 Time: 03:50:31
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?RMC 1/5/23 when adding to the pfs inv rest, only add it to 1 rcd. there
//? may be more than 1 if there were HO and AV for the item/date
EXECUTE FUNCTION(Rtv Upd EDI OnHn w/int RT) TYPE(RTVOBJ) FILE(PUA7CPP)          AC2158364;
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.PFS_Company_Number);
PARAMETER(PAR.PFS_Transaction_Date);
PARAMETER(PAR.PFS_Transaction_Time);
PARAMETER(PAR.PFS_Transaction_Seq);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.In Transit Qty is GT *ZERO
 IF DB1.In_Transit_Qty > *ZERO;

 //?*** IN KEY -- NEED ITEM / PROD DATE
 // LCL.Production Date USR D8# = DB1.Production Date
 LCL.Production_Date_USR_D8# = DB1.Production_Date;

 // LCL.PFS Production Date = LCL.Production Date USR D8#
 LCL.PFS_Production_Date = LCL.Production_Date_USR_D8#;

 EXECUTE FUNCTION(PFS Add EDI Intransit RT) TYPE(RTVOBJ) FILE(PPB0CPP)           AC2158365;
 PARAMETER(PAR.PFS_Company_Number);
 PARAMETER(PAR.PFS_Transaction_Date);
 PARAMETER(PAR.PFS_Transaction_Time);
 PARAMETER(PAR.PFS_Transaction_Seq);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(LCL.PFS_Production_Date);
 PARAMETER(DB1.In_Transit_Qty);
 PARAMETER(DB1.Weight_Shipped_Total);
 {
  //?USER: Initialize routine

  //?09/09/09 PKD E00475 Use System Date instead of Job Date
  EXECUTE FUNCTION(Rtv System Date *CYMD IF) TYPE(EXCINTFUN)                      AC1952751;
  PARAMETER(LCL.System_Date_USR);
  {
   //?Execute internal function

   // LCL.*System timestamp = JOB.*System timestamp
   LCL.*System_timestamp = JOB.*System_timestamp;

   // LCL.Year USR = SUBSTRING(LCL.*System timestamp,CON.1,CON.4)
   LCL.Year_USR = SUBSTRING(LCL.*System_timestamp:1:4);

   // LCL.Month USR = SUBSTRING(LCL.*System timestamp,CON.6,CON.2)
   LCL.Month_USR = SUBSTRING(LCL.*System_timestamp:6:2);

   // LCL.Day USR = SUBSTRING(LCL.*System timestamp,CON.9,CON.2)
   LCL.Day_USR = SUBSTRING(LCL.*System_timestamp:9:2);

   // LCL.Date (Char-8) USR = CONCAT(LCL.Year USR,LCL.Month USR,CON.*ZERO)
   LCL.Date_Char_8_USR = LCL.Year_USR + LCL.Month_USR (*ZERO);

   // LCL.Date (Char-8) USR = CONCAT(LCL.Date (Char-8) USR,LCL.Day USR,CON.*ZERO)
   LCL.Date_Char_8_USR = LCL.Date_Char_8_USR + LCL.Day_USR (*ZERO);

   // LCL.DATE = CVTVAR(LCL.Date (Char-8) USR)
   LCL.DATE = CVTVAR(LCL.Date_Char_8_USR);

   EXECUTE FUNCTION(CVT *YYMD to *CYMD    IF) TYPE(EXCINTFUN)                      AC1929228;
   PARAMETER(PAR.System_Date_USR);
   PARAMETER(LCL.DATE);
   {
    //?Execute internal function

    //?** YEAR **
    // PAR.Year Code = PAR.DATE / CON.10000 *
    PAR.Year_Code = PAR.DATE / 10000;

    // PAR.Year  NBR USR = PAR.Year Code
    PAR.Year_NBR_USR = PAR.Year_Code;

    // PAR.Year  (Char) USR = CVTVAR(PAR.Year  NBR USR)
    PAR.Year_Char_USR = CVTVAR(PAR.Year_NBR_USR);

    //?** MONTH **
    // PAR.Month                 USR = PAR.DATE / CON.100 *
    PAR.Month_USR = PAR.DATE / 100;

    // PAR.Month (Char) USR = CVTVAR(PAR.Month                 USR)
    PAR.Month_Char_USR = CVTVAR(PAR.Month_USR);

    //?** DAY **
    // PAR.Day of Month USR = PAR.DATE
    PAR.Day_of_Month_USR = PAR.DATE;

    // PAR.Day   (Char) USR = CVTVAR(PAR.Day of Month USR)
    PAR.Day_Char_USR = CVTVAR(PAR.Day_of_Month_USR);

    //?CENTURY+YEAR
    CASE;

    // IF PAR.Year Code is Twentieth Century
    IF PAR.Year_Code <= 1999;

    // PAR.Date (Alpha) USR = CONCAT(CON.0,PAR.Year  (Char) USR,CON.*ZERO)
    PAR.Date_Alpha_USR = '0' + PAR.Year_Char_USR (*ZERO);

    //?CENTURY+YEAR
    // IF *OTHERWISE
    IF *OTHERWISE;

    // PAR.Date (Alpha) USR = CONCAT(CON.1,PAR.Year  (Char) USR,CON.*ZERO)
    PAR.Date_Alpha_USR = '1' + PAR.Year_Char_USR (*ZERO);

    ENDIF;

    // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Month (Char) USR,CON.*ZERO)
    PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Month_Char_USR (*ZERO);

    // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Day   (Char) USR,CON.*ZERO)
    PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Day_Char_USR (*ZERO);

    // PAR.Date                  USR = CVTVAR(PAR.Date (Alpha) USR)
    PAR.Date_USR = CVTVAR(PAR.Date_Alpha_USR);

   }

  }

  //?USER: Processing if Data record not found

  //?***  NEED LAST SEQ + 1
  // PAR.PFS Transaction Seq = PAR.PFS Transaction Seq + CON.1
  PAR.PFS_Transaction_Seq = PAR.PFS_Transaction_Seq + 1;

  EXECUTE FUNCTION(Crt PFS Inventory Rest CR) TYPE(CRTOBJ) FILE(PPB0CPP)          AC1748442;
  PARAMETER(PAR.PFS_Company_Number);
  PARAMETER(PAR.PFS_Transaction_Date);
  PARAMETER(PAR.PFS_Transaction_Time);
  PARAMETER(PAR.PFS_Transaction_Seq);
  PARAMETER(0);
  PARAMETER(PAR.PFS_Item_Code);
  PARAMETER(PAR.PFS_From_Warehouse_Code);
  PARAMETER(*ZERO);
  PARAMETER(PAR.PFS_Production_Date);
  PARAMETER(PAR.PFS_Production_Date);
  PARAMETER(*ZERO);
  PARAMETER(PAR.In_Transit_Qty);
  PARAMETER(PAR.Weight_Shipped_Total);
  PARAMETER('A');
  PARAMETER(*ZERO);
  PARAMETER(*BLANK);
  PARAMETER(PAR.PFS_Transaction_Date);
  PARAMETER(JOB.*Job_time);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  //?USER: Process Data record

  // LCL.PFS On Hand Quantity = DB1.PFS On Hand Quantity + PAR.In Transit Qty
  LCL.PFS_On_Hand_Quantity = DB1.PFS_On_Hand_Quantity + PAR.In_Transit_Qty;

  // LCL.PFS On Hand Weight = DB1.PFS On Hand Weight + PAR.Weight Shipped Total
  LCL.PFS_On_Hand_Weight = DB1.PFS_On_Hand_Weight + PAR.Weight_Shipped_Total;

  EXECUTE FUNCTION(Change PFS Inventory Rest) TYPE(CHGOBJ) FILE(PPB0CPP)          AC1748443;
  PARAMETER(DB1.PFS_Company_Number);
  PARAMETER(DB1.PFS_Transaction_Date);
  PARAMETER(DB1.PFS_Transaction_Time);
  PARAMETER(DB1.PFS_Transaction_Seq);
  PARAMETER(DB1.PFS_Inv_Hold_Reason_Code);
  PARAMETER(DB1.PFS_Item_Code);
  PARAMETER(DB1.PFS_From_Warehouse_Code);
  PARAMETER(DB1.PFS_Location_Code);
  PARAMETER(DB1.PFS_Production_Date);
  PARAMETER(DB1.PFS_Label_Date);
  PARAMETER(DB1.PFS_Receive_Located_Date);
  PARAMETER(LCL.PFS_On_Hand_Quantity);
  PARAMETER(LCL.PFS_On_Hand_Weight);
  PARAMETER(DB1.PFS_Record_Status);
  PARAMETER(DB1.PFS_Process_Status);
  PARAMETER(DB1.PFS_Error_Reason);
  PARAMETER(DB1.PFS_Create_Date);
  PARAMETER(DB1.PFS_Create_Time);
  PARAMETER(DB1.PFS_Change_Date);
  PARAMETER(DB1.PFS_Change_Time);
  //?Only add it to 1 of the pfs inv rest records. there may be more than 1/dt
  QUIT;

 }

 ENDIF;

}


